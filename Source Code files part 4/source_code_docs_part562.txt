 /> security token; otherwise, false.</returns>
      <param name="token">The <see cref="T:System.IdentityModel.Tokens.SecurityToken" />  to be validated.</param>
    </member>
    <member name="M:System.IdentityModel.Selectors.WindowsSecurityTokenAuthenticator.ValidateTokenCore(System.IdentityModel.Tokens.SecurityToken)">
      <summary>Authenticates the specified security token and returns the set of authorization policies for the security token.</summary>
      <returns>A <see cref="T:System.Collections.ObjectModel.ReadOnlyCollection`1" /> of type <see cref="T:System.IdentityModel.Policy.IAuthorizationPolicy" /> that contains the set of authorization policies in effect for this application.</returns>
      <param name="token">The <see cref="T:System.IdentityModel.Tokens.SecurityToken" /> to be validated.</param>
    </member>
    <member name="T:System.IdentityModel.Selectors.WindowsUserNameSecurityTokenAuthenticator">
      <summary>Uses Windows authentication to authenticate the user name and password in a <see cref="T:System.IdentityModel.Tokens.UserNameSecurityToken" /> security token.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IdentityModel.Selectors.WindowsUserNameSecurityTokenAuthenticator.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.IdentityModel.Selectors.WindowsUserNameSecurityTokenAuthenticator" /> class </summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IdentityModel.Selectors.WindowsUserNameSecurityTokenAuthenticator.#ctor(System.Boolean)">
      <summary>Initializes a new instance of the <see cref="T:System.IdentityModel.Selectors.WindowsUserNameSecurityTokenAuthenticator" /> class by specifying whether the claims that identify the Windows groups that a user belongs to are initially added to the <see cref="P:System.IdentityModel.Policy.AuthorizationContext.ClaimSets" /> property when the user is authenticated. </summary>
      <param name="includeWindowsGroups">true to get the groups the Windows user belongs to; otherwise, false. </param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IdentityModel.Selectors.WindowsUserNameSecurityTokenAuthenticator.ValidateUserNamePasswordCore(System.String,System.String)">
      <summary>Authenticates the specified user name and password and returns the set of authorization policies for <see cref="T:System.IdentityModel.Tokens.UserNameSecurityToken" /> security tokens.</summary>
      <returns>A <see cref="T:System.Collections.ObjectModel.ReadOnlyCollection`1" /> of type <see cref="T:System.IdentityModel.Policy.IAuthorizationPolicy" /> that contains the set of authorization policies in effect for this application.</returns>
      <param name="userName">The user name associated with the security token.</param>
      <param name="password">The password associated with the security token.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="userName" /> contains more than one backslash (\) character.</exception>
    </member>
    <member name="T:System.IdentityModel.Selectors.X509CertificateValidator">
      <summary>Validates an X.509 certificate.</summary>
    </member>
    <member name="M:System.IdentityModel.Selectors.X509CertificateValidator.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.IdentityModel.Selectors.X509CertificateValidator" /> class. </summary>
    </member>
    <member name="P:System.IdentityModel.Selectors.X509CertificateValidator.ChainTrust">
      <summary>Gets a validator that validates the X.509 certificate using a trust chain. </summary>
      <returns>A <see cref="T:System.IdentityModel.Selectors.X509CertificateValidator" /> that validates the X.509 certificate using a trust chain.</returns>
    </member>
    <member name="M:System.IdentityModel.Selectors.X509CertificateValidator.CreateChainTrustValidator(System.Boolean,System.Security.Cryptography.X509Certificates.X509ChainPolicy)">
      <summary>Gets a validator that verifies the X.509 certificate by specifying the context and chain policy that is used to build and verify a trust chain. </summary>
      <returns>A <see cref="T:System.IdentityModel.Selectors.X509CertificateValidator" /> that validates the X.509 certificate using a trust chain.</returns>
      <param name="useMachineContext">true to use the machine context; false to use the current user context.</param>
      <param name="chainPolicy">An <see cref="T:System.Security.Cryptography.X509Certificates.X509ChainPolicy" /> that specifies the policy used to build and verify the trust chain.</param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IdentityModel.Selectors.X509CertificateValidator.CreatePeerOrChainTrustValidator(System.Boolean,System.Security.Cryptography.X509Certificates.X509ChainPolicy)">
      <summary>Gets a validator that verifies the certificate is in the TrustedPeople certificate store or by specifying the context and chain policy that is used to build a certificate trust chain. The certificate is trusted if it passes either verification method.</summary>
      <returns>A <see cref="T:System.IdentityModel.Selectors.X509CertificateValidator" /> that verifies the certificate is in the TrustedPeople certificate store or by building a certificate trust chain.</returns>
      <param name="useMachineContext">true to use the machine context; false to use the current user context.</param>
      <param name="chainPolicy">An <see cref="T:System.Security.Cryptography.X509Certificates.X509ChainPolicy" /> that specifies the policy used to build the trust chain.</param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.IdentityModel.Selectors.X509CertificateValidator.None">
      <summary>Gets a validator that performs no validation on an X.509 certificate. As a result, an X.509 certificate is always considered to be valid.</summary>
      <returns>A <see cref="T:System.IdentityModel.Selectors.X509CertificateValidator" /> that performs no validation on the X.509 certificate.</returns>
    </member>
    <member name="P:System.IdentityModel.Selectors.X509CertificateValidator.PeerOrChainTrust">
      <summary>Gets a validator that verifies the certificate is in the TrustedPeople certificate store or by building a certificate trust chain. The certificate is trusted if it passes either verification method.</summary>
      <returns>A <see cref="T:System.IdentityModel.Selectors.X509CertificateValidator" /> that verifies the certificate is in the TrustedPeople certificate store or by building a certificate trust chain.</returns>
    </member>
    <member name="P:System.IdentityModel.Selectors.X509CertificateValidator.PeerTrust">
      <summary>Gets a validator that verifies the certificate is in the TrustedPeople certificate store</summary>
      <returns>A <see cref="T:System.IdentityModel.Selectors.X509CertificateValidator" /> that verifies the certificate is in the TrustedPeople certificate store.</returns>
    </member>
    <member name="M:System.IdentityModel.Selectors.X509CertificateValidator.Validate(System.Security.Cryptography.X509Certificates.X509Certificate2)">
      <summary>When overridden in a derived class, validates the X.509 certificate. </summary>
      <param name="certificate">The <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2" /> that represents the X.509 certificate to validate.</param>
    </member>
    <member name="T:System.IdentityModel.Selectors.X509SecurityTokenAuthenticator">
      <summary>Authenticates an <see cref="T:System.IdentityModel.Tokens.X509SecurityToken" />.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IdentityModel.Selectors.X509SecurityTokenAuthenticator.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.IdentityModel.Selectors.X509SecurityTokenAuthenticator" /> class. </summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IdentityModel.Selectors.X509SecurityTokenAuthenticator.#ctor(System.IdentityModel.Selectors.X509CertificateValidator)">
      <summary>Initializes a new instance of the <see cref="T:System.IdentityModel.Selectors.X509SecurityTokenAuthenticator" /> class using the specified certificate validator. </summary>
      <param name="validator">A <see cref="T:System.IdentityModel.Selectors.X509CertificateValidator" /> that verifies that the certificate is valid.</param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IdentityModel.Selectors.X509SecurityTokenAuthenticator.#ctor(System.IdentityModel.Selectors.X509CertificateValidator,System.Boolean)">
      <summary>Initializes a new instance of the <see cref="T:System.IdentityModel.Selectors.X509SecurityTokenAuthenticator" /> class using the specified certificate validation method and indicates whether the identity of the certificate is mapped to a Windows identity.</summary>
      <param name="validator">A <see cref="T:System.IdentityModel.Selectors.X509CertificateValidator" /> that verifies that the certificate is valid.</param>
      <param name="mapToWindows">true to map the identity of the certificate to a Windows identity; otherwise, false. </param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IdentityModel.Selectors.X509SecurityTokenAuthenticator.#ctor(System.IdentityModel.Selectors.X509CertificateValidator,System.Boolean,System.Boolean)">
      <summary>Initializes a new instance of the <see cref="T:System.IdentityModel.Selectors.X509SecurityTokenAuthenticator" /> class using the specified certificate validation method and indicates whether the identity of the certificate is mapped to a Windows identity and the Windows groups the user belongs to.</summary>
      <param name="validator">A <see cref="T:System.IdentityModel.Selectors.X509CertificateValidator" /> that verifies that the certificate is valid.</param>
      <param name="mapToWindows">true to map the identity of the certificate to a Windows identity; otherwise, false. </param>
      <param name="includeWindowsGroups">true to include the groups the Windows user belongs to in the <see cref="P:System.IdentityModel.Policy.AuthorizationContext.ClaimSets" /> property that is constructed throughout the authentication process; otherwise, false.</param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IdentityModel.Selectors.X509SecurityTokenAuthenticator.CanValidateTokenCore(System.IdentityModel.Tokens.SecurityToken)">
      <summary>Gets a value that indicates whether the specified security token can be validated by this security token authenticator.</summary>
      <returns>true when <paramref name="token" /> is a <see cref="T:System.IdentityModel.Tokens.X509SecurityToken" /> security token or a class that derives from <see cref="T:System.IdentityModel.Tokens.X509SecurityToken" />; otherwise, false.</returns>
      <param name="token">The <see cref="T:System.IdentityModel.Tokens.SecurityToken" /> to be validated.</param>
    </member>
    <member name="P:System.IdentityModel.Selectors.X509SecurityTokenAuthenticator.MapCertificateToWindowsAccount">
      <summary>Gets a value that indicates whether to map the X.509 certificate to a Windows account.</summary>
      <returns>true to map the X.509 certificate to a Windows account; otherwise, false.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IdentityModel.Selectors.X509SecurityTokenAuthenticator.ValidateTokenCore(System.IdentityModel.Tokens.SecurityToken)">
      <summary>Authenticates the specified security token and returns the set of authorization policies for the security token.</summary>
      <returns>A <see cref="T:System.Collections.ObjectModel.ReadOnlyCollection`1" /> of type <see cref="T:System.IdentityModel.Policy.IAuthorizationPolicy" /> that contains the set of authorization policies in effect for this application.</returns>
      <param name="token">The <see cref="T:System.IdentityModel.Tokens.SecurityToken" /> to be validated.</param>
    </member>
    <member name="T:System.IdentityModel.Selectors.X509SecurityTokenProvider">
      <summary>Represents a security token provider that provides <see cref="T:System.IdentityModel.Tokens.X509SecurityToken" /> security tokens for a SOAP message sender.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IdentityModel.Selectors.X509SecurityTokenProvider.#ctor(System.Security.Cryptography.X509Certificates.StoreLocation,System.Security.Cryptography.X509Certificates.StoreName,System.Security.Cryptography.X509Certificates.X509FindType,System.Object)">
      <summary>Initializes a new instance of the <see cref="T:System.IdentityModel.Selectors.X509SecurityTokenProvider" /> class by getting an X.509 certificate from the specified certificate store criteria. </summary>
      <param name="storeLocation">One of the <see cref="T:System.Security.Cryptography.X509Certificates.StoreLocation" /> values that specifies the certificate store location.</param>
      <param name="storeName">One of the <see cref="T:System.Security.Cryptography.X509Certificates.StoreName" /> values that specifies the certificate store name.</param>
      <param name="findType">One of the<see cref="T:System.Security.Cryptography.X509Certificates.X509FindType" /> values that specifies how to search the certificate store.</param>
      <param name="findValue">The value used to find the X.509 certificate in the certificate store.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="findValue" /> is null.</exception>
      <exception cref="T:System.IdentityModel.Tokens.SecurityTokenException">No certificates match the specified criteria.-or-More than one certificate matches the specified criteria.</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IdentityModel.Selectors.X509SecurityTokenProvider.#ctor(System.Security.Cryptography.X509Certificates.X509Certificate2)">
      <summary>Initializes a new instance of the <see cref="T:System.IdentityModel.Selectors.X509SecurityTokenProvider" /> class using the specified X.509 certificate. </summary>
      <param name="certificate">The <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2" /> to get a security token for.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="certificate" /> is null.</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.IdentityModel.Selectors.X509SecurityTokenProvider.Certificate">
      <summary>Gets the X.509 certificate associated with the <see cref="T:System.IdentityModel.Tokens.X509SecurityToken" /> security token.</summary>
      <returns>Gets an <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2" /> that represents the X.509 certificate of a security token.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IdentityModel.Selectors.X509SecurityTokenProvider.Dispose">
      <summary>Releases all resources used by the <see cref="T:System.IdentityModel.Selectors.X509SecurityTokenProvider" />. </summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IdentityModel.Selectors.X509SecurityTokenProvider.GetTokenCore(System.TimeSpan)">
      <summary>Gets a security token using the X.509 certificate specified in the constructor.</summary>
      <returns>The <see cref="T:System.IdentityModel.Tokens.SecurityToken" /> that represents the security token to get.</returns>
      <param name="timeout">A <see cref="T:System.TimeSpan" /> that specifies the timeout value for the message that gets the security token.</param>
    </member>
    <member name="T:System.IdentityModel.Tokens.AsymmetricSecurityKey">
      <summary>Base class for asymmetric keys.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IdentityModel.Tokens.AsymmetricSecurityKey.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.IdentityModel.Tokens.AsymmetricSecurityKey" /> class. </summary>
    </member>
    <member name="M:System.IdentityModel.Tokens.AsymmetricSecurityKey.GetAsymmetricAlgorithm(System.String,System.Boolean)">
      <summary>When overridden in a derived class, gets the specified asymmetric cryptographic algorithm. </summary>
      <returns>An <see cref="T:System.Security.Cryptography.AsymmetricAlgorithm" /> that represents the specified asymmetric cryptographic algorithm.Typically, true is passed into the <paramref name="privateKey" /> parameter, as a private key is typically required for decryption.</returns>
      <param name="algorithm">The asymmetric algorithm to create.</param>
      <param name="privateKey">true when a private key is required to create the algorithm; otherwise, false. </param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IdentityModel.Tokens.AsymmetricSecurityKey.GetHashAlgorithmForSignature(System.String)">
      <summary>When overridden in a derived class, gets a cryptographic algorithm that generates a hash for a digital signature.</summary>
      <returns>A <see cref="T:System.Security.Cryptography.HashAlgorithm" /> that generates hashes for digital signatures.</returns>
      <param name="algorithm">The hash algorithm.</param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IdentityModel.Tokens.AsymmetricSecurityKey.GetSignatureDeformatter(System.String)">
      <summary>When overridden in a derived class, gets the deformatter algorithm for the digital signature.</summary>
      <returns>An <see cref="T:System.Security.Cryptography.AsymmetricSignatureDeformatter" /> that represents the deformatter algorithm for the digital signature.</returns>
      <param name="algorithm">The deformatter algorithm for the digital signature.</param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IdentityModel.Tokens.AsymmetricSecurityKey.GetSignatureFormatter(System.String)">
      <summary>When overridden in a derived class, gets the formatter algorithm for the digital signature.</summary>
      <returns>An <see cref="T:System.Security.Cryptography.AsymmetricSignatureFormatter" /> that represents the formatter algorithm for the digital signature.</returns>
      <param name="algorithm">The formatter algorithm for the digital signature.</param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IdentityModel.Tokens.AsymmetricSecurityKey.HasPrivateKey">
      <summary>When overridden in a derived class, gets a value that indicates whether the private key is available.</summary>
      <returns>true when the private key is available; otherwise, false. </returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="T:System.IdentityModel.Tokens.BinaryKeyIdentifierClause">
      <summary>Represents a base class for key identifier clauses that are based upon binary data.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IdentityModel.Tokens.BinaryKeyIdentifierClause.#ctor(System.String,System.Byte[],System.Boolean)">
      <summary>Initializes a new instance of the <see cref="T:System.IdentityModel.Tokens.BinaryKeyIdentifierClause" /> class using the specified key identifier clause type, binary data and a value that indicates whether the binary data must be cloned. </summary>
      <param name="clauseType">The key identifier clause type. Sets the value of the <see cref="P:System.IdentityModel.Tokens.SecurityKeyIdentifierClause.ClauseType" /> property.</param>
      <param name="identificationData">An array of <see cref="T:System.Byte" /> that contains the binary data that represents the key identifier.</param>
      <param name="cloneBuffer">true to clone the array passed into the <paramref name="identificationData" /> parameter; otherwise, false. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="identificationData" /> is null.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="identificationData" /> is zero length.</exception>
    </member>
    <member name="M:System.IdentityModel.Tokens.BinaryKeyIdentifierClause.#ctor(System.String,System.Byte[],System.Boolean,System.Byte[],System.Int32)">
      <summary>Initializes a new instance of the <see cref="T:System.IdentityModel.Tokens.BinaryKeyIdentifierClause" /> class using the specified key identifier clause type, binary data, a value that indicates whether the binary data must be cloned, a nonce and the key length.</summary>
      <param name="clauseType">The key identifier clause type. Sets the value of the <see cref="P:System.IdentityModel.Tokens.SecurityKeyIdentifierClause.ClauseType" /> property.</param>
      <param name="identificationData">An array of <see cref="T:System.Byte" /> that contains the binary data that represents the key identifier. Sets the binary data that is returned by the <see cref="M:System.IdentityModel.Tokens.BinaryKeyIdentifierClause.GetBuffer" /> method.</param>
      <param name="cloneBuffer">true to clone the array passed into the <paramref name="identificationData" /> parameter; otherwise, false. </param>
      <param name="derivationNonce">An array of <see cref="T:System.Byte" /> that contains the nonce that was used to create a derived key. Sets the value that is returned by the <see cref="M:System.IdentityModel.Tokens.SecurityKeyIdentifierClause.GetDerivationNonce" /> method.</param>
      <param name="derivationLength">The size of the derived key. Sets the value of the <see cref="P:System.IdentityModel.Tokens.SecurityKeyIdentifierClause.DerivationLength" /> property.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="identificationData" /> is null.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="identificationData" /> is zero length.</exception>
    </member>
    <member name="M:System.IdentityModel.Tokens.BinaryKeyIdentifierClause.GetBuffer">
      <summary>Gets the binary data that represents the key identifier.</summary>
      <returns>An array of <see cref="T:System.Byte" /> that contains the binary data that represents the key identifier.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IdentityModel.Tokens.BinaryKeyIdentifierClause.GetRawBuffer">
      <summary>Gets the binary data that represents the key identifier.</summary>
      <returns>An array of <see cref="T:System.Byte" /> that contains the binary data that represents the key identifier.</returns>
    </member>
    <member name="M:System.IdentityModel.Tokens.BinaryKeyIdentifierClause.Matches(System.Byte[])">
      <summary>Returns a value that indicates whether the binary data for the current instance matches the specified binary data.</summary>
      <returns>true if <paramref name="data " />is equivalent to the binary data returned by the <see cref="M:System.IdentityModel.Tokens.BinaryKeyIdentifierClause.GetBuffer" /> method; otherwise, false.</returns>
      <param name="data">An array of <see cref="T:System.Byte" /> to compare to.</param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IdentityModel.Tokens.BinaryKeyIdentifierClause.Matches(System.Byte[],System.Int32)">
      <summary>Returns a value that indicates whether the binary data for the current instance is equivalent to the specified binary data at the specified offset.</summary>
      <returns>true if the binary data in the <paramref name="data " />parameter starting at the index specified in the <paramref name="offset" /> parameter is equivalent to the binary data returned by the <see cref="M:System.IdentityModel.Tokens.BinaryKeyIdentifierClause.GetBuffer" /> method (starting at index zero); otherwise, false.</returns>
      <param name="data">An array of <see cref="T:System.Byte" /> to compare to.</param>
      <param name="offset">The index in the array at which the comparison starts.</param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IdentityModel.Tokens.BinaryKeyIdentifierClause.Matches(System.IdentityModel.Tokens.SecurityKeyIdentifierClause)">
      <summary>Returns a value that indicates whether the key identifier for this instance is equivalent to the specified key identifier clause.</summary>
      <returns>true if <paramref name="keyIdentifierClause" /> is of type <see cref="T:System.IdentityModel.Tokens.BinaryKeyIdentifierClause" /> and the binary data returned by the <see cref="M:System.IdentityModel.Tokens.BinaryKeyIdentifierClause.GetBuffer" /> method is identical for the <paramref name="keyIdentifierClause" /> parameter and the current instance; otherwise, false.</returns>
      <param name="keyIdentifierClause">A <see cref="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" /> to compare to.</param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="T:System.IdentityModel.Tokens.EncryptedKeyIdentifierClause">
      <summary>Represents a key identifier clause that identifies an encrypted key.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.#ctor(System.Byte[],System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.IdentityModel.Tokens.EncryptedKeyIdentifierClause" /> class using the specified key that is encrypted and the cryptographic algorithm used to encrypt the key.</summary>
      <param name="encryptedKey">An array of <see cref="T:System.Byte" /> that contains a key that is encrypted. Sets the value that is returned from the <see cref="M:System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.GetEncryptedKey" /> method.</param>
      <param name="encryptionMethod">The cryptographic algorithm that is used to encrypt the key. Sets the value of the <see cref="P:System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.EncryptionMethod" /> property.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="encryptionMethod" /> is null.-or-<paramref name="encryptedKey" /> is null.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="encryptedKey" /> is zero length.</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.#ctor(System.Byte[],System.String,System.IdentityModel.Tokens.SecurityKeyIdentifier)">
      <summary>Initializes a new instance of the <see cref="T:System.IdentityModel.Tokens.EncryptedKeyIdentifierClause" /> class using the specified key that is encrypted, the cryptographic algorithm used to encrypt the key, and a key identifier for the encrypting key.</summary>
      <param name="encryptedKey">An array of <see cref="T:System.Byte" /> that contains a key that is encrypted. Sets the value that is returned from the <see cref="M:System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.GetEncryptedKey" /> method.</param>
      <param name="encryptionMethod">The cryptographic algorithm that is used to encrypt the key. Sets the value of the <see cref="P:System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.EncryptionMethod" /> property.</param>
      <param name="encryptingKeyIdentifier">A <see cref="T:System.IdentityModel.Tokens.SecurityKeyIdentifier" /> that represents the key identifier for the encrypting key that is specified in the <paramref name="encryptedKey" /> parameter. Sets the value of the <see cref="P:System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.EncryptingKeyIdentifier" /> property.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="encryptionMethod" /> is null.-or-<paramref name="encryptedKey" /> is null.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="encryptedKey" /> is zero length.</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.#ctor(System.Byte[],System.String,System.IdentityModel.Tokens.SecurityKeyIdentifier,System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.IdentityModel.Tokens.EncryptedKeyIdentifierClause" /> class using the specified key that is encrypted, the cryptographic algorithm used to encrypt the key, a key identifier for the encrypting key and a user-readable name.</summary>
      <param name="encryptedKey">An array of <see cref="T:System.Byte" /> that contains a key that is encrypted. Sets the value that is returned from the <see cref="M:System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.GetEncryptedKey" /> method.</param>
      <param name="encryptionMethod">The cryptographic algorithm that is used to encrypt the key. Sets the value of the <see cref="P:System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.EncryptionMethod" /> property.</param>
      <param name="encryptingKeyIdentifier">A <see cref="T:System.IdentityModel.Tokens.SecurityKeyIdentifier" /> that represents the key identifier for the encrypting key specified in the <paramref name="encryptedKey" /> parameter. Sets the value of the <see cref="P:System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.EncryptingKeyIdentifier" /> property.</param>
      <param name="carriedKeyName">A user-readable name that is associated with the key specified in the <paramref name="encryptedKey" /> parameter. Sets the value of the <see cref="P:System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.CarriedKeyName" /> property.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="encryptionMethod" /> is null.-or-<paramref name="encryptedKey" /> is null.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="encryptedKey" /> is zero length.</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.#ctor(System.Byte[],System.String,System.IdentityModel.Tokens.SecurityKeyIdentifier,System.String,System.Byte[],System.Int32)">
      <summary>Initializes a new instance of the <see cref="T:System.IdentityModel.Tokens.EncryptedKeyIdentifierClause" /> class using the specified key that is encrypted, the cryptographic algorithm used to encrypt the key, a key identifier for the key and a user-readable name.</summary>
      <param name="encryptedKey">An array of <see cref="T:System.Byte" /> that contains a key that is encrypted. Sets the value that is returned from the <see cref="M:System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.GetEncryptedKey" /> method.</param>
      <param name="encryptionMethod">The cryptographic algorithm that is used to encrypt the key. Sets the value of the <see cref="P:System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.EncryptionMethod" /> property.</param>
      <param name="encryptingKeyIdentifier">A <see cref="T:System.IdentityModel.Tokens.SecurityKeyIdentifier" /> that represents the key identifier for the key specified in the <paramref name="encryptedKey" /> parameter. Sets the value of the <see cref="P:System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.EncryptingKeyIdentifier" /> property.</param>
      <param name="carriedKeyName">A user-readable name that is associated with the key specified in the <paramref name="encryptedKey" /> parameter. Sets the value of the <see cref="P:System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.CarriedKeyName" /> property.</param>
      <param name="derivationNonce">An array of <see cref="T:System.Byte" /> that contains the nonce that was used to create a derived key. Sets the value that is returned by the <see cref="M:System.IdentityModel.Tokens.SecurityKeyIdentifierClause.GetDerivationNonce" /> method.</param>
      <param name="derivationLength">The size of the derived key. Sets the value of the <see cref="P:System.IdentityModel.Tokens.SecurityKeyIdentifierClause.DerivationLength" /> property.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="encryptionMethod" /> is null.-or-<paramref name="encryptedKey" /> is null.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="encryptedKey" /> is zero length.</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.CarriedKeyName">
      <summary>Gets a user-readable name that is associated with the encrypted key.</summary>
      <returns>A user-readable name that is associated with the encrypted key.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.EncryptingKeyIdentifier">
      <summary>Gets a key identifier for the encrypting key.</summary>
      <returns>A <see cref="T:System.IdentityModel.Tokens.SecurityKeyIdentifier" /> that represents the key identifier for the encrypting key.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.EncryptionMethod">
      <summary>Gets the cryptographic algorithm that is used to encrypt the key.</summary>
      <returns>The cryptographic algorithm that is used to encrypt the key.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.GetEncryptedKey">
      <summary>Gets the encrypted key.</summary>
      <returns>An array of <see cref="T:System.Byte" /> that contains the encrypted key.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.Matches(System.Byte[],System.String,System.String)">
      <summary>Returns a value that indicates whether the key identifier for this instance is equivalent to the specified encrypted key, encryption method and user-readable name.</summary>
      <returns>true if the <paramref name="encryptedKey" />, <paramref name="encryptionMethod" /> and <paramref name="carriedKeyName" /> parameters have the same values returned by the <see cref="M:System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.GetEncryptedKey" /> method and the <see cref="P:System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.EncryptionMethod" /> and the <see cref="P:System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.CarriedKeyName" /> properties, respectively; otherwise, false.</returns>
      <param name="encryptedKey">An array of <see cref="T:System.Byte" /> that contains a key that is encrypted.</param>
      <param name="encryptionMethod">The cryptographic algorithm that is used to encrypt the key. </param>
      <param name="carriedKeyName">A user-readable name that is associated with the encrypted key.</param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.Matches(System.IdentityModel.Tokens.SecurityKeyIdentifierClause)">
      <summary>Returns a value that indicates whether the key identifier for this instance is equivalent to the specified key identifier clause.</summary>
      <returns>true if <paramref name="keyIdentifierClause" /> is of type <see cref="T:System.IdentityModel.Tokens.EncryptedKeyIdentifierClause" /> and has the same encrypted key, encryption method and user-readable name as the current instance; otherwise, false.</returns>
      <param name="keyIdentifierClause">A <see cref="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" /> to compare to.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="keyIdentifierClause" /> is null.</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.ToString">
      <summary>Returns a string that represents the current object.</summary>
      <returns>The current object.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="T:System.IdentityModel.Tokens.GenericXmlSecurityToken">
      <summary>Represents a security token that is based upon XML.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IdentityModel.Tokens.GenericXmlSecurityToken.#ctor(System.Xml.XmlElement,System.IdentityModel.Tokens.SecurityToken,System.DateTime,System.DateTime,System.IdentityModel.Tokens.SecurityKeyIdentifierClause,System.IdentityModel.Tokens.SecurityKeyIdentifierClause,System.Collections.ObjectModel.ReadOnlyCollection{System.IdentityModel.Policy.IAuthorizationPolicy})">
      <summary>Initializes a new instance of the <see cref="T:System.IdentityModel.Tokens.GenericXmlSecurityToken" /> class. </summary>
      <param name="tokenXml">An <see cref="T:System.Xml.XmlElement" /> that represents the XML that is associated with the security token. Sets the <see cref="P:System.IdentityModel.Tokens.GenericXmlSecurityToken.TokenXml" /> property.</param>
      <param name="proofToken">A <see cref="T:System.IdentityModel.Tokens.SecurityToken" /> that represents the proof token for the security token. Sets the <see cref="P:System.IdentityModel.Tokens.GenericXmlSecurityToken.ProofToken" /> property.</param>
      <param name="effectiveTime">A <see cref="T:System.DateTime" /> that represents the first instant in time at which this security token is valid. Sets the <see cref="P:System.IdentityModel.Tokens.GenericXmlSecurityToken.ValidFrom" /> property.</param>
      <param name="expirationTime">A <see cref="T:System.DateTime" /> that represents the last instant in time at which this security token is valid. Sets the <see cref="P:System.IdentityModel.Tokens.GenericXmlSecurityToken.ValidFrom" /> property.</param>
      <param name="internalTokenReference">A <see cref="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" /> that represents a reference to this security token when it is included in a SOAP message in which it is referenced. Sets the <see cref="P:System.IdentityModel.Tokens.GenericXmlSecurityToken.InternalTokenReference" /> property.</param>
      <param name="externalTokenReference">A <see cref="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" /> that represents a reference to this security token when it is not included in a SOAP message in which it is referenced. Sets the <see cref="P:System.IdentityModel.Tokens.GenericXmlSecurityToken.ValidFrom" /> property.</param>
      <param name="authorizationPolicies">A <see cref="T:System.Collections.ObjectModel.ReadOnlyCollection`1" /> of type <see cref="T:System.IdentityModel.Policy.IAuthorizationPolicy" /> that contains the set authorization policies for this security token.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="tokenXml" /> is null.-or-<paramref name="proofToken" /> is null.</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.IdentityModel.Tokens.GenericXmlSecurityToken.AuthorizationPolicies">
      <summary>Gets the collection of authorization policies for this security token.</summary>
      <returns>A <see cref="T:System.Collections.ObjectModel.ReadOnlyCollection`1" /> of type <see cref="T:System.IdentityModel.Policy.IAuthorizationPolicy" /> that contains the set authorization policies for this security token.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IdentityModel.Tokens.GenericXmlSecurityToken.CanCreateKeyIdentifierClause``1">
      <summary>Gets a value that indicates whether this security token is capable of creating the specified key identifier clause.</summary>
      <returns>true when <paramref name="T" /> is not null and the same type as either the <see cref="P:System.IdentityModel.Tokens.GenericXmlSecurityToken.InternalTokenReference" /> or <see cref="P:System.IdentityModel.Tokens.GenericXmlSecurityToken.ExternalTokenReference" /> property values; otherwise, false.</returns>
      <typeparam name="T">A <see cref="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" /> that specifies the key identifier to create.</typeparam>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IdentityModel.Tokens.GenericXmlSecurityToken.CreateKeyIdentifierClause``1">
      <summary>Creates the specified key identifier clause.</summary>
      <returns>A <see cref="T:System.IdentityModel.Tokens.SamlAssertionKeyIdentifierClause" /> that is a key identifier clause for a <see cref="T:System.IdentityModel.Tokens.GenericXmlSecurityToken" /> security token.</returns>
      <typeparam name="T">A <see cref="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" /> that specifies the key identifier to create.</typeparam>
      <exception cref="T:System.IdentityModel.Tokens.SecurityTokenException">
        <paramref name="T" /> is not null and not the same type as one of the <see cref="P:System.IdentityModel.Tokens.GenericXmlSecurityToken.InternalTokenReference" /> or <see cref="P:System.IdentityModel.Tokens.GenericXmlSecurityToken.ExternalTokenReference" /> property values.</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.IdentityModel.Tokens.GenericXmlSecurityToken.ExternalTokenReference">
      <summary>Gets a security key identifier clause that references this security token when this security token is not included in the SOAP message in which it is referenced.</summary>
      <returns>A <see cref="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" /> that represents a reference to this security token when it is not included in a SOAP message in which it is referenced.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.IdentityModel.Tokens.GenericXmlSecurityToken.Id">
      <summary>Gets a unique identifier of the security token.</summary>
      <returns>The unique identifier of the security token.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.IdentityModel.Tokens.GenericXmlSecurityToken.InternalTokenReference">
      <summary>Gets a security key identifier clause that references this security token when this security token is included in the SOAP message in which it is referenced.</summary>
      <returns>A <see cref="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" /> that represents a reference to this security token when it is included in a SOAP message in which it is referenced.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IdentityModel.Tokens.GenericXmlSecurityToken.MatchesKeyIdentifierClause(System.IdentityModel.Tokens.SecurityKeyIdentifierClause)">
      <summary>Returns a value that indicates whether the key identifier for this instance is equal to the specified key identifier.</summary>
      <returns>true when <paramref name="keyIdentifierClause" /> is not null and matches either the <see cref="P:System.IdentityModel.Tokens.GenericXmlSecurityToken.InternalTokenReference" /> or <see cref="P:System.IdentityModel.Tokens.GenericXmlSecurityToken.ExternalTokenReference" /> property values; otherwise, false.</returns>
      <param name="keyIdentifierClause">An <see cref="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" /> to compare to this instance.</param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.IdentityModel.Tokens.GenericXmlSecurityToken.ProofToken">
      <summary>Gets the proof token for the security token.</summary>
      <returns>A <see cref="T:System.IdentityModel.Tokens.SecurityToken" /> that represents the proof token for the security token.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.IdentityModel.Tokens.GenericXmlSecurityToken.SecurityKeys">
      <summary>Gets the cryptographic keys associated with the proof token.</summary>
      <returns>A <see cref="T:System.Collections.ObjectModel.ReadOnlyCollection`1" /> of type <see cref="T:System.IdentityModel.Tokens.SecurityKey" /> that contains the set of keys associated with the proof token.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.IdentityModel.Tokens.GenericXmlSecurityToken.TokenXml">
      <summary>Gets the XML that is associated with the security token. </summary>
      <returns>An <see cref="T:System.Xml.XmlElement" /> that represents the XML that is associated with the security token.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IdentityModel.Tokens.GenericXmlSecurityToken.ToString">
      <summary>Returns the current object.</summary>
      <returns>The current object.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.IdentityModel.Tokens.GenericXmlSecurityToken.ValidFrom">
      <summary>Gets the first instant in time at which this security token is valid.</summary>
      <returns>A <see cref="T:System.DateTime" /> that represents the first instant in time at which this security token is valid.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.IdentityModel.Tokens.GenericXmlSecurityToken.ValidTo">
      <summary>Gets the last instant in time at which this security token is valid.</summary>
      <returns>A <see cref="T:System.DateTime" /> that represents the last instant in time at which this security token is valid.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="T:System.IdentityModel.Tokens.InMemorySymmetricSecurityKey">
      <summary>Represents keys that are generated using symmetric algorithms and are only stored in the local computer's random access memory.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IdentityModel.Tokens.InMemorySymmetricSecurityKey.#ctor(System.Byte[])">
      <summary>Initializes a new instance of the <see cref="T:System.IdentityModel.Tokens.InMemorySymmetricSecurityKey" /> class using the specified symmetric key. </summary>
      <param name="symmetricKey">An array of <see cref="T:System.Byte" /> that contains the symmetric key.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="symmetricKey" /> is null.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="symmetricKey" /> is zero length.</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IdentityModel.Tokens.InMemorySymmetricSecurityKey.#ctor(System.Byte[],System.Boolean)">
      <summary>Initializes a new instance of the <see cref="T:System.IdentityModel.Tokens.InMemorySymmetricSecurityKey" /> class using the specified symmetric key and a value that indicates whether the binary data must be cloned. </summary>
      <param name="symmetricKey">An array of <see cref="T:System.Byte" /> that contains the symmetric key.</param>
      <param name="cloneBuffer">true to clone the array passed into the <paramref name="symmetricKey" /> parameter; otherwise, false. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="symmetricKey" /> is null.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="symmetricKey" /> is zero length.</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IdentityModel.Tokens.InMemorySymmetricSecurityKey.DecryptKey(System.String,System.Byte[])">
      <summary>Decrypts the specified encrypted key.</summary>
      <returns>An array of <see cref="T:System.Byte" /> that contains the decrypted key.</returns>
      <param name="algorithm">The cryptographic algorithm that was used to encrypt the key.</param>
      <param name="keyData">An array of <see cref="T:System.Byte" /> that contains the encrypted key.</param>
      <exception cref="T:System.InvalidOperationException">
        <paramref name="algorithm" /> is not supported. The supported algorithms are <see cref="F:System.IdentityModel.Tokens.SecurityAlgorithms.TripleDesKeyWrap" />, <see cref="F:System.IdentityModel.Tokens.SecurityAlgorithms.Aes128KeyWrap" />, <see cref="F:System.IdentityModel.Tokens.SecurityAlgorithms.Aes192KeyWrap" />, and <see cref="F:System.IdentityModel.Tokens.SecurityAlgorithms.Aes256KeyWrap" />.</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IdentityModel.Tokens.InMemorySymmetricSecurityKey.EncryptKey(System.String,System.Byte[])">
      <summary>Encrypts the specified key.</summary>
      <returns>An array of <see cref="T:System.Byte" /> that contains the encrypted key.</returns>
      <param name="algorithm">The cryptographic algorithm to encrypt the key with.</param>
      <param name="keyData">An array of <see cref="T:System.Byte" /> that contains the key.</param>
      <exception cref="T:System.InvalidOperationException">
        <paramref name="algorithm" /> is not supported. The supported algorithms are <see cref="F:System.IdentityModel.Tokens.SecurityAlgorithms.TripleDesKeyWrap" />, <see cref="F:System.IdentityModel.Tokens.SecurityAlgorithms.Aes128KeyWrap" />, <see cref="F:System.IdentityModel.Tokens.SecurityAlgorithms.Aes192KeyWrap" />, or <see cref="F:System.IdentityModel.Tokens.SecurityAlgorithms.Aes256KeyWrap" />.</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IdentityModel.Tokens.InMemorySymmetricSecurityKey.GenerateDerivedKey(System.String,System.Byte[],System.Byte[],System.Int32,System.Int32)">
      <summary>Generates a derived key using the specified cryptographic algorithm and parameters for the current key.</summary>
      <returns>An array of <see cref="T:System.Byte" /> that contains the derived key.</returns>
      <param name="algorithm">A URI that represents the cryptographic algorithm to use to generate the derived key.</param>
      <param name="label">An array of <see cref="T:System.Byte" /> that contains the label parameter for the cryptographic algorithm.</param>
      <param name="nonce">An array of <see cref="T:System.Byte" /> that contains the nonce that is used to create a derived key.</param>
      <param name="derivedKeyLength">The size of the derived key.</param>
      <param name="offset">The position at which the derived key is located in the byte array that is returned from this method.</param>
      <exception cref="T:System.InvalidOperationException">
        <paramref name="algorithm" /> is not supported. The supported algorithms is <see cref="F:System.IdentityModel.Tokens.SecurityAlgorithms.Psha1KeyDerivation" />.</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IdentityModel.Tokens.InMemorySymmetricSecurityKey.GetDecryptionTransform(System.String,System.Byte[])">
      <summary>Gets a transform that decrypts cipher text using the specified cryptographic algorithm.</summary>
      <returns>An <see cref="T:System.Security.Cryptography.ICryptoTransform" /> that represents the decryption transform.</returns>
      <param name="algorithm">A cryptographic algorithm that decrypts cipher text, such as encrypted XML.</param>
      <param name="iv">An array of <see cref="T:System.Byte" /> that contains the initialization vector (IV) for the specified algorithm.</param>
      <exception cref="T:System.InvalidOperationException">
        <paramref name="algorithm" /> is not supported. The supported algorithms are <see cref="F:System.IdentityModel.Tokens.SecurityAlgorithms.TripleDesEncryption" />, <see cref="F:System.IdentityModel.Tokens.SecurityAlgorithms.Aes128Encryption" />, <see cref="F:System.IdentityModel.Tokens.SecurityAlgorithms.Aes192Encryption" />, and <see cref="F:System.IdentityModel.Tokens.SecurityAlgorithms.Aes256Encryption" />.</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IdentityModel.Tokens.InMemorySymmetricSecurityKey.GetEncryptionTransform(System.String,System.Byte[])">
      <summary>Gets a transform that encrypts XML using the specified cryptographic algorithm.</summary>
      <returns>An <see cref="T:System.Security.Cryptography.ICryptoTransform" /> that represents the encryption transform.</returns>
      <param name="algorithm">A cryptographic algorithm that encrypts XML.</param>
      <param name="iv">An array of <see cref="T:System.Byte" /> that contains the initialization vector (IV) for the specified algorithm.</param>
      <exception cref="T:System.InvalidOperationException">
        <paramref name="algorithm" /> is not supported. The supported algorithms are <see cref="F:System.IdentityModel.Tokens.SecurityAlgorithms.TripleDesEncryption" />, <see cref="F:System.IdentityModel.Tokens.SecurityAlgorithms.Aes128Encryption" />, <see cref="F:System.IdentityModel.Tokens.SecurityAlgorithms.Aes192Encryption" />, and <see cref="F:System.IdentityModel.Tokens.SecurityAlgorithms.Aes256Encryption" />.</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IdentityModel.Tokens.InMemorySymmetricSecurityKey.GetIVSize(System.String)">
      <summary>Gets the size, in bits, of the initialization vector (IV) that is required for the specified cryptographic algorithm.</summary>
      <returns>The size, in bits, of the initialization vector (IV) that is required for the cryptographic algorithm specified in the <paramref name="algorithm" /> parameter.</returns>
      <param name="algorithm">The cryptographic algorithm to get the size of the initialization vector (IV).</param>
      <exception cref="T:System.InvalidOperationException">
        <paramref name="algorithm" /> is not supported. The supported algorithms are <see cref="F:System.IdentityModel.Tokens.SecurityAlgorithms.TripleDesEncryption" />, <see cref="F:System.IdentityModel.Tokens.SecurityAlgorithms.Aes128Encryption" />, <see cref="F:System.IdentityModel.Tokens.SecurityAlgorithms.Aes192Encryption" />, and <see cref="F:System.IdentityModel.Tokens.SecurityAlgorithms.Aes256Encryption" />.</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IdentityModel.Tokens.InMemorySymmetricSecurityKey.GetKeyedHashAlgorithm(System.String)">
      <summary>Gets an instance of the specified keyed hash algorithm.</summary>
      <returns>A <see cref="T:System.Security.Cryptography.KeyedHashAlgorithm" /> that represents the keyed hash algorithm.</returns>
      <param name="algorithm">The keyed hash algorithm to get an instance of.</param>
      <exception cref="T:System.InvalidOperationException">
        <paramref name="algorithm" /> is not supported. The supported algorithms is <see cref="F:System.IdentityModel.Tokens.SecurityAlgorithms.HmacSha1Signature" />.</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IdentityModel.Tokens.InMemorySymmetricSecurityKey.GetSymmetricAlgorithm(System.String)">
      <summary>Gets an instance of the specified symmetric algorithm.</summary>
      <returns>A <see cref="T:System.Security.Cryptography.SymmetricAlgorithm" /> that represents the symmetric algorithm.</returns>
      <param name="algorithm">The symmetric algorithm to get an instance of.</param>
      <exception cref="T:System.InvalidOperationException">
        <paramref name="algorithm" /> is not supported. The supported algorithms are <see cref="F:System.IdentityModel.Tokens.SecurityAlgorithms.TripleDesEncryption" />, <see cref="F:System.IdentityModel.Tokens.SecurityAlgorithms.Aes128Encryption" />, <see cref="F:System.IdentityModel.Tokens.SecurityAlgorithms.Aes192Encryption" />,  <see cref="F:System.IdentityModel.Tokens.SecurityAlgorithms.Aes256Encryption" />, <see cref="F:System.IdentityModel.Tokens.SecurityAlgorithms.TripleDesKeyWrap" />, <see cref="F:System.IdentityModel.Tokens.SecurityAlgorithms.Aes128KeyWrap" />, <see cref="F:System.IdentityModel.Tokens.SecurityAlgorithms.Aes192KeyWrap" />, and <see cref="F:System.IdentityModel.Tokens.SecurityAlgorithms.Aes256KeyWrap" /></exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IdentityModel.Tokens.InMemorySymmetricSecurityKey.GetSymmetricKey">
      <summary>Gets the bytes that represent the symmetric key.</summary>
      <returns>An array of <see cref="T:System.Byte" /> that contains the symmetric key.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IdentityModel.Tokens.InMemorySymmetricSecurityKey.IsAsymmetricAlgorithm(System.String)">
      <summary>Gets a value that indicates whether the specified algorithm uses asymmetric keys.</summary>
      <returns>true when the specified algorithm uses asymmetric keys; otherwise, false.</returns>
      <param name="algorithm">The cryptographic algorithm.</param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IdentityModel.Tokens.InMemorySymmetricSecurityKey.IsSupportedAlgorithm(System.String)">
      <summary>Gets a value that indicates whether the specified algorithm is supported by this class.</summary>
      <returns>true when the specified algorithm is supported by this class; otherwise, false.</returns>
      <param name="algorithm">The cryptographic algorithm.</param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IdentityModel.Tokens.InMemorySymmetricSecurityKey.IsSymmetricAlgorithm(System.String)">
      <summary>Gets a value that indicates whether the specified algorithm uses symmetric keys.</summary>
      <returns>true when the specified algorithm uses symmetric keys; otherwise, false.</returns>
      <param name="algorithm">The cryptographic algorithm.</param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.IdentityModel.Tokens.InMemorySymmetricSecurityKey.KeySize">
      <summary>Gets the size, in bits, of the key.</summary>
      <returns>The size, in bits, of the key.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="T:System.IdentityModel.Tokens.KerberosReceiverSecurityToken">
      <summary>Represents a security token that is based upon a Kerberos ticket that is received in a SOAP message.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IdentityModel.Tokens.KerberosReceiverSecurityToken.#ctor(System.Byte[])">
      <summary>Initializes a new instance of the <see cref="T:System.IdentityModel.Tokens.KerberosReceiverSecurityToken" /> class using the specified Kerberos ticket. </summary>
      <param name="request">An array of <see cref="T:System.Byte" /> that contains a Kerberos ticket.</param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IdentityModel.Tokens.KerberosReceiverSecurityToken.#ctor(System.Byte[],System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.IdentityModel.Tokens.KerberosReceiverSecurityToken" /> class using the specified Kerberos ticket and unique identifier.</summary>
      <param name="request">An array of <see cref="T:System.Byte" /> that contains the Kerberos ticket.</param>
      <param name="id">A unique identifier of the security token. Sets the value of the <see cref="P:System.IdentityModel.Tokens.KerberosRequestorSecurityToken.Id" /> property.</param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IdentityModel.Tokens.KerberosReceiverSecurityToken.#ctor(System.Byte[],System.String,System.String)">
      <summary>Creates a new instance of <see cref="T:System.IdentityModel.Tokens.KerberosReceiverSecurityToken" />.</summary>
      <param name="request">An array of bytes that contains the Kerberos ticket.</param>
      <param name="id">A unique identifier for the security token.</param>
      <param name="valueTypeUri">The URI that describes the value type.</param>
    </member>
    <member name="M:System.IdentityModel.Tokens.KerberosReceiverSecurityToken.CanCreateKeyIdentifierClause``1">
      <summary>Gets a value that indicates whether this security token is capable of creating the specified key identifier.</summary>
      <returns>true when <paramref name="T" /> is of type <see cref="T:System.IdentityModel.Tokens.KerberosTicketHashKeyIdentifierClause" />; otherwise, false.</returns>
      <typeparam name="T">A <see cref="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" /> that specifies the type of key identifier to create.</typeparam>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IdentityModel.Tokens.KerberosReceiverSecurityToken.CreateKeyIdentifierClause``1">
      <summary>Creates the specified key identifier clause.</summary>
      <returns>A <see cref="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" /> that is a key identifier clause for the security token.</returns>
      <typeparam name="T">A <see cref="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" /> that specifies the type of key identifier to create.</typeparam>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IdentityModel.Tokens.KerberosReceiverSecurityToken.GetRequest">
      <summary>Gets the Kerberos ticket.</summary>
      <returns>An array of <see cref="T:System.Byte" /> that contains the Kerberos ticket.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IdentityModel.Tokens.KerberosReceiverSecurityToken.MatchesKeyIdentifierClause(System.IdentityModel.Tokens.SecurityKeyIdentifierClause)">
      <summary>Returns a value that indicates whether the key identifier for this instance matches the specified key identifier.</summary>
      <returns>true if <paramref name="keyIdentifierClause" /> is of type <see cref="T:System.IdentityModel.Tokens.KerberosTicketHashKeyIdentifierClause" /> and the Kerberos ticket match; otherwise, false.</returns>
      <param name="keyIdentifierClause">A <see cref="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" /> to compare to this instance.</param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.IdentityModel.Tokens.KerberosReceiverSecurityToken.SecurityKey">
      <summary>Gets the symmetric session key for the Kerberos ticket that is associated with this security token.</summary>
      <returns>A <see cref="T:System.IdentityModel.Tokens.SymmetricSecurityKey" /> that contains the symmetric session key for the Kerberos ticket that is associated with this security token.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.IdentityModel.Tokens.KerberosReceiverSecurityToken.SecurityKeys">
      <summary>Gets the cryptographic keys associated with the security token.</summary>
      <returns>A <see cref="T:System.Collections.ObjectModel.ReadOnlyCollection`1" /> of type <see cref="T:System.IdentityModel.Tokens.SecurityKey" /> that contains the set of keys associated with the security token.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.IdentityModel.Tokens.KerberosReceiverSecurityToken.ValidFrom">
      <summary>Gets the first instant in time at which this security token is valid.</summary>
      <returns>A <see cref="T:System.DateTime" /> that represents the instant in time at which this security token is first valid.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.IdentityModel.Tokens.KerberosReceiverSecurityToken.ValidTo">
      <summary>Gets the last instant in time at which this security token is valid.</summary>
      <returns>A <see cref="T:System.DateTime" /> that represents the last instant in time at which this security token is valid.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.IdentityModel.Tokens.KerberosReceiverSecurityToken.ValueTypeUri">
      <summary>Gets the URI that describes the value type.</summary>
      <returns>Returns <see cref="T:System.String" />.</returns>
    </member>
    <member name="P:System.IdentityModel.Tokens.KerberosReceiverSecurityToken.WindowsIdentity">
      <summary>Gets the Windows user associated with this security token.</summary>
      <returns>A <see cref="T:System.Security.Principal.WindowsIdentity" /> that represents a Windows user.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="T:System.IdentityModel.Tokens.KerberosRequestorSecurityToken">
      <summary>Represents a security token that is based upon a Kerberos ticket that is sent in an SOAP request.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IdentityModel.Tokens.KerberosRequestorSecurityToken.#ctor(System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.IdentityModel.Tokens.KerberosRequestorSecurityToken" /> class using a service that is associated with the specified service principal name. </summary>
      <param name="servicePrincipalName">The service principal name for the <see cref="T:System.IdentityModel.Tokens.KerberosRequestorSecurityToken" /> security token. Sets the <see cref="P:System.IdentityModel.Tokens.KerberosRequestorSecurityToken.ServicePrincipalName" /> property.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="servicePrincipalName" /> is null.</exception>
      <exception cref="T:System.IdentityModel.Tokens.SecurityTokenException">A Kerberos ticket cannot be obtained for the current user.</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IdentityModel.Tokens.KerberosRequestorSecurityToken.#ctor(System.String,System.Security.Principal.TokenImpersonationLevel,System.Net.NetworkCredential,System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.IdentityModel.Tokens.KerberosRequestorSecurityToken" /> class. </summary>
      <param name="servicePrincipalName">The service principal name for the <see cref="T:System.IdentityModel.Tokens.KerberosRequestorSecurityToken" /> security token. Sets the <see cref="P:System.IdentityModel.Tokens.KerberosRequestorSecurityToken.ServicePrincipalName" /> property.</param>
      <param name="tokenImpersonationLevel">One of the <see cref="T:System.Security.Principal.TokenImpersonationLevel" /> values that specifies how the client allows the <see cref="T:System.IdentityModel.Tokens.KerberosRequestorSecurityToken" /> security token to be impersonated.</param>
      <param name="networkCredential">A <see cref="T:System.Net.NetworkCredential" /> that specifies the user to get a <see cref="T:System.IdentityModel.Tokens.KerberosRequestorSecurityToken" /> security token for. </param>
      <param name="id">A unique identifier of the security token. Sets the value of the <see cref="P:System.IdentityModel.Tokens.KerberosRequestorSecurityToken.Id" /> property.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="servicePrincipalName" /> is null.-or-<paramref name="id" /> is null.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="networkCredential" /> is not null, not equal to <see cref="P:System.Net.CredentialCache.DefaultNetworkCredentials" /> and the <see cref="P:System.Net.NetworkCredential.UserName" /> property is empty or null.</exception>
      <exception cref="T:System.IdentityModel.Tokens.SecurityTokenException">A Kerberos ticket cannot be obtained for the specified user.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="tokenImpersonationLevel" /> is not Impersonation or Identity.</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IdentityModel.Tokens.KerberosRequestorSecurityToken.CanCreateKeyIdentifierClause``1">
      <summary>Gets a value that indicates whether this security token is capable of creating the specified key identifier.</summary>
      <returns>true when <paramref name="T" /> is of type <see cref="T:System.IdentityModel.Tokens.KerberosTicketHashKeyIdentifierClause" />; otherwise, false.</returns>
      <typeparam name="T">A <see cref="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" /> that specifies the key identifier to create.</typeparam>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IdentityModel.Tokens.KerberosRequestorSecurityToken.CreateKeyIdentifierClause``1">
      <summary>Creates the specified key identifier clause.</summary>
      <returns>A <see cref="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" /> that is a key identifier clause for the security token.</returns>
      <typeparam name="T">A <see cref="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" /> that specifies the key identifier to create.</typeparam>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IdentityModel.Tokens.KerberosRequestorSecurityToken.GetRequest">
      <summary>Gets the Kerberos ticket request.</summary>
      <returns>An array of <see cref="T:System.Byte" /> that contains the result Kerberos ticket request.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.IdentityModel.Tokens.KerberosRequestorSecurityToken.Id">
      <summary>Gets a unique identifier of the security token.</summary>
      <returns>A unique identifier of the security token.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IdentityModel.Tokens.KerberosRequestorSecurityToken.MatchesKeyIdentifierClause(System.IdentityModel.Tokens.SecurityKeyIdentifierClause)">
      <summary>Returns a value that indicates whether the key identifier for this instance matches the specified key identifier.</summary>
      <returns>true if <paramref name="keyIdentifierClause" /> is of type <see cref="T:System.IdentityModel.Tokens.KerberosTicketHashKeyIdentifierClause" /> and the results of the Kerberos ticket request match; otherwise, false.</returns>
      <param name="keyIdentifierClause">A <see cref="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" /> to compare to this instance.</param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.IdentityModel.Tokens.KerberosRequestorSecurityToken.SecurityKey">
      <summary>Gets the symmetric session key for the Kerberos ticket that is associated with this security token.</summary>
      <returns>A <see cref="T:System.IdentityModel.Tokens.SymmetricSecurityKey" /> that contains the symmetric session key for the Kerberos ticket that is associated with this security token.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.IdentityModel.Tokens.KerberosRequestorSecurityToken.SecurityKeys">
      <summary>Gets the cryptographic keys associated with the security token.</summary>
      <returns>A <see cref="T:System.Collections.ObjectModel.ReadOnlyCollection`1" /> of type <see cref="T:System.IdentityModel.Tokens.SecurityKey" /> that contains the set of keys associated with the security token.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.IdentityModel.Tokens.KerberosRequestorSecurityToken.ServicePrincipalName">
      <summary>Gets the service principal name for the <see cref="T:System.IdentityModel.Tokens.KerberosRequestorSecurityToken" /> security token.</summary>
      <returns>The service principal name for the <see cref="T:System.IdentityModel.Tokens.KerberosRequestorSecurityToken" /> security token.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.IdentityModel.Tokens.KerberosRequestorSecurityToken.ValidFrom">
      <summary>Gets the first instant in time at which this security token is valid.</summary>
      <returns>A <see cref="T:System.DateTime" /> that represents the instant in time at which this security token is first valid.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.IdentityModel.Tokens.KerberosRequestorSecurityToken.ValidTo">
      <summary>Gets the last instant in time at which this security token is valid.</summary>
      <returns>A <see cref="T:System.DateTime" /> that represents the last instant in time at which this security token is valid.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="T:System.IdentityModel.Tokens.KerberosTicketHashKeyIdentifierClause">
      <summary>Represents a key identifier clause that identifies a <see cref="T:System.IdentityModel.Tokens.KerberosRequestorSecurityToken" /> or <see cref="T:System.IdentityModel.Tokens.KerberosReceiverSecurityToken" /> security token.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IdentityModel.Tokens.KerberosTicketHashKeyIdentifierClause.#ctor(System.Byte[])">
      <summary>Initializes a new instance of the <see cref="T:System.IdentityModel.Tokens.KerberosTicketHashKeyIdentifierClause" /> class using the specified SHA-1 hash of a Kerberos service ticket. </summary>
      <param name="ticketHash">An array of <see cref="T:System.Byte" /> that contains the SHA-1 hash of a Kerberos service ticket.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="ticketHash" /> is null.</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IdentityModel.Tokens.KerberosTicketHashKeyIdentifierClause.#ctor(System.Byte[],System.Byte[],System.Int32)">
      <summary>Initializes a new instance of the <see cref="T:System.IdentityModel.Tokens.KerberosTicketHashKeyIdentifierClause" /> class using the specified Kerberos ticket, nonce, and key length.</summary>
      <param name="ticketHash">An array of <see cref="T:System.Byte" /> that contains the SHA-1 hash of a Kerberos service ticket.</param>
      <param name="derivationNonce">An array of <see cref="T:System.Byte" /> that contains the nonce that was used to create a derived key.</param>
      <param name="derivationLength">The size of the derived key.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="ticketHash" /> is null.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="ticketHash" /> is zero length.</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IdentityModel.Tokens.KerberosTicketHashKeyIdentifierClause.GetKerberosTicketHash">
      <summary>Gets the SHA-1 hash of a Kerberos service ticket.</summary>
      <returns>An array of <see cref="T:System.Byte" /> that contains the SHA-1 hash of a Kerberos service ticket.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IdentityModel.Tokens.KerberosTicketHashKeyIdentifierClause.ToString">
      <summary>Returns the current object.</summary>
      <returns>A <see cref="T:System.String" /> that represents the current object.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="T:System.IdentityModel.Tokens.LocalIdKeyIdentifierClause">
      <summary>Represents a key identifier clause that identifies a security tokens specified in the security header of the SOAP message.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IdentityModel.Tokens.LocalIdKeyIdentifierClause.#ctor(System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.IdentityModel.Tokens.LocalIdKeyIdentifierClause" /> class using the specified identifier and array of types. </summary>
      <param name="localId">The value of the wsu:Id attribute for an XML element within the current SOAP message. Sets the value of the <see cref="P:System.IdentityModel.Tokens.LocalIdKeyIdentifierClause.LocalId" /> property.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="localId" /> is null.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="localId" /> is empty.</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IdentityModel.Tokens.LocalIdKeyIdentifierClause.#ctor(System.String,System.Byte[],System.Int32,System.Type)">
      <summary>Initializes a new instance of the <see cref="T:System.IdentityModel.Tokens.LocalIdKeyIdentifierClause" /> class using the specified identifier, nonce, derived key length an owner security token type.</summary>
      <param name="localId">The value of the wsu:Id attribute for an XML element within the current SOAP message. Sets the value of the <see cref="P:System.IdentityModel.Tokens.LocalIdKeyIdentifierClause.LocalId" /> property.</param>
      <param name="derivationNonce">An array of <see cref="T:System.Byte" /> that contains the nonce that was used to create a derived key. Sets the value that is returned by the <see cref="M:System.IdentityModel.Tokens.SecurityKeyIdentifierClause.GetDerivationNonce" /> method.</param>
      <param name="derivationLength">The size of the derived key. Sets the value of the <see cref="P:System.IdentityModel.Tokens.SecurityKeyIdentifierClause.DerivationLength" /> property.</param>
      <param name="ownerType">A <see cref="T:System.Type" /> that is the type of security token that is referred to by the <paramref name="localId" /> parameter. Sets the value of the <see cref="P:System.IdentityModel.Tokens.LocalIdKeyIdentifierClause.OwnerType" /> property.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="localId" /> is null.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="localId" /> is empty.</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IdentityModel.Tokens.LocalIdKeyIdentifierClause.#ctor(System.String,System.Type)">
      <summary>Initializes a new instance of the <see cref="T:System.IdentityModel.Tokens.LocalIdKeyIdentifierClause" /> class using the specified identifier an owner security token type. </summary>
      <param name="localId">The value of the wsu:Id attribute for an XML element within the current SOAP message. Sets the value of the <see cref="P:System.IdentityModel.Tokens.LocalIdKeyIdentifierClause.LocalId" /> property.</param>
      <param name="ownerType">A <see cref="T:System.Type" /> that is the type of security token that is referred to by the <paramref name="localId" /> parameter. Sets the value of the <see cref="P:System.IdentityModel.Tokens.LocalIdKeyIdentifierClause.OwnerType" /> property.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="localId" /> is null.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="localId" /> is empty.</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.IdentityModel.Tokens.LocalIdKeyIdentifierClause.LocalId">
      <summary>Gets the value of the wsu:Id attribute for an XML element within the current SOAP message.</summary>
      <returns>The value of the wsu:Id attribute for an XML element within the current SOAP message.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IdentityModel.Tokens.LocalIdKeyIdentifierClause.Matches(System.IdentityModel.Tokens.SecurityKeyIdentifierClause)">
      <summary>Returns a value that indicates whether the key identifier for this instance is equivalent to the specified key identifier clause.</summary>
      <returns>true if <paramref name="keyIdentifierClause" /> is of type <see cref="T:System.IdentityModel.Tokens.LocalIdKeyIdentifierClause" /> and the values of the <see cref="P:System.IdentityModel.Tokens.LocalIdKeyIdentifierClause.LocalId" /> and <see cref="P:System.IdentityModel.Tokens.LocalIdKeyIdentifierClause.OwnerType" /> properties match the current instance; otherwise, false. See the remarks for more details.</returns>
      <param name="keyIdentifierClause">A <see cref="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" /> to compare to.</param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IdentityModel.Tokens.LocalIdKeyIdentifierClause.Matches(System.String,System.Type)">
      <summary>Returns a value that indicates whether the key identifier for this instance is equivalent to the specified reference and type.</summary>
      <returns>true if the <paramref name="localId" /> and <paramref name="ownerType" /> parameters match the values of the <see cref="P:System.IdentityModel.Tokens.LocalIdKeyIdentifierClause.LocalId" /> and <see cref="P:System.IdentityModel.Tokens.LocalIdKeyIdentifierClause.OwnerType" /> properties; otherwise, false. See the remarks for more details.</returns>
      <param name="localId">The value of the wsu:Id attribute for an XML element within the current SOAP message. </param>
      <param name="ownerType">A <see cref="T:System.Type" /> that is the type of security token that is referred to by the <paramref name="localId" /> parameter. </param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.IdentityModel.Tokens.LocalIdKeyIdentifierClause.OwnerType">
      <summary>Gets the type of security token that is referred to by the <see cref="P:System.IdentityModel.Tokens.LocalIdKeyIdentifierClause.LocalId" /> property.</summary>
      <returns>A <see cref="T:System.Type" /> that contains the type of security token that is referred to by the <see cref="P:System.IdentityModel.Tokens.LocalIdKeyIdentifierClause.LocalId" /> property.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IdentityModel.Tokens.LocalIdKeyIdentifierClause.ToString">
      <summary>Returns a string that represents the current object.</summary>
      <returns>A <see cref="T:System.String" /> that represents the current object.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="T:System.IdentityModel.Tokens.RsaKeyIdentifierClause">
      <summary>Represents a key identifier clause that identifies a <see cref="T:System.IdentityModel.Tokens.RsaSecurityToken" /> security token.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IdentityModel.Tokens.RsaKeyIdentifierClause.#ctor(System.Security.Cryptography.RSA)">
      <summary>Initializes a new instance of the <see cref="T:System.IdentityModel.Tokens.RsaKeyIdentifierClause" /> class using the specified RSA algorithm. </summary>
      <param name="rsa">An <see cref="T:System.Security.Cryptography.RSA" /> that represents an RSA algorithm. Sets the value of the <see cref="P:System.IdentityModel.Tokens.RsaKeyIdentifierClause.Rsa" /> property.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="rsa" /> is null.</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.IdentityModel.Tokens.RsaKeyIdentifierClause.CanCreateKey">
      <summary>Gets a value that indicates whether a key can be created from the key identifier clause.</summary>
      <returns>true in all cases.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IdentityModel.Tokens.RsaKeyIdentifierClause.CreateKey">
      <summary>Creates a key using the RSA algorithm.</summary>
      <returns>A <see cref="T:System.IdentityModel.Tokens.RsaSecurityKey" /> that is a key created using the RSA algorithm specified in the constructor.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IdentityModel.Tokens.RsaKeyIdentifierClause.GetExponent">
      <summary>Gets the Exponent parameter for the RSA algorithm.</summary>
      <returns>An array of <see cref="T:System.Byte" /> that contains the Exponent parameter for the RSA algorithm.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IdentityModel.Tokens.RsaKeyIdentifierClause.GetModulus">
      <summary>Gets the Modulus parameter for the RSA algorithm.</summary>
      <returns>An array of <see cref="T:System.Byte" /> that contains the Modulus parameter for the RSA algorithm.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IdentityModel.Tokens.RsaKeyIdentifierClause.Matches(System.IdentityModel.Tokens.SecurityKeyIdentifierClause)">
      <summary>Returns a value that indicates whether the key identifier for this instance is equivalent to the specified key identifier clause.</summary>
      <returns>true if <paramref name="keyIdentifierClause" /> is of type <see cref="T:System.IdentityModel.Tokens.RsaKeyIdentifierClause" /> and the arrays returned by the <see cref="M:System.IdentityModel.Tokens.RsaKeyIdentifierClause.GetModulus" /> and <see cref="M:System.IdentityModel.Tokens.RsaKeyIdentifierClause.GetExponent" /> methods for the <paramref name="keyIdentifierClause" /> parameter are identical to the current instance; otherwise, false.</returns>
      <param name="keyIdentifierClause">A <see cref="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" /> to compare to.</param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IdentityModel.Tokens.RsaKeyIdentifierClause.Matches(System.Security.Cryptography.RSA)">
      <summary>Returns a value that indicates whether the key identifier for this instance matches the specified RSA algorithm.</summary>
      <returns>true if the <see cref="F:System.Security.Cryptography.RSAParameters.Exponent" /> and <see cref="F:System.Security.Cryptography.RSAParameters.Modulus" /> fields of the <paramref name="rsa" /> parameter match the values returned by the <see cref="M:System.IdentityModel.Tokens.RsaKeyIdentifierClause.GetModulus" /> and <see cref="M:System.IdentityModel.Tokens.RsaKeyIdentifierClause.GetExponent" /> methods for the current instance; otherwise, false.</returns>
      <param name="rsa">An <see cref="T:System.Security.Cryptography.RSA" /> that represents an RSA algorithm.</param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.IdentityModel.Tokens.RsaKeyIdentifierClause.Rsa">
      <summary>Gets the RSA algorithm that is associated with the key identifier clause.</summary>
      <returns>An <see cref="T:System.Security.Cryptography.RSA" /> that represents an RSA algorithm.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IdentityModel.Tokens.RsaKeyIdentifierClause.ToString">
      <summary>Returns a string that represents the current object.</summary>
      <returns>A <see cref="T:System.String" /> that represents the current object.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IdentityModel.Tokens.RsaKeyIdentifierClause.WriteExponentAsBase64(System.Xml.XmlWriter)">
      <summary>Writes the Base64 encoded Exponent parameter of the RSA algorithm into the specified XML serializer.</summary>
      <param name="writer">A <see cref="T:System.Xml.XmlWriter" /> to write the Base64 encoded Exponent parameter of the RSA algorithm.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="writer" /> is null.</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IdentityModel.Tokens.RsaKeyIdentifierClause.WriteModulusAsBase64(System.Xml.XmlWriter)">
      <summary>Writes the Base64 encoded Modulus parameter of the RSA algorithm into the specified XML serializer.</summary>
      <param name="writer">A <see cref="T:System.Xml.XmlWriter" /> to write the Base64 encoded Modulus parameter of the RSA algorithm.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="writer" /> is null.</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="T:System.IdentityModel.Tokens.RsaSecurityKey">
      <summary>Represents a security key that is generated using the RSA algorithm. This class cannot be inherited. </summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IdentityModel.Tokens.RsaSecurityKey.#ctor(System.Security.Cryptography.RSA)">
      <summary>Initializes a new instance of the <see cref="T:System.IdentityModel.Tokens.RsaSecurityKey" /> class using the specified RSA algorithm. </summary>
      <param name="rsa">An <see cref="T:System.Security.Cryptography.RSA" /> that represents an RSA algorithm.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="rsa" /> is null.</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IdentityModel.Tokens.RsaSecurityKey.DecryptKey(System.String,System.Byte[])">
      <summary>Decrypts the specified encrypted key.</summary>
      <returns>An array of <see cref="T:System.Byte" /> that contains the decrypted key.</returns>
      <param name="algorithm">The cryptographic algorithm that was used to encrypt the key. The supported algorithms are <see cref="F:System.IdentityModel.Tokens.SecurityAlgorithms.RsaV15KeyWrap" /> and <see cref="F:System.IdentityModel.Tokens.SecurityAlgorithms.RsaOaepKeyWrap" />.</param>
      <param name="keyData">An array of <see cref="T:System.Byte" /> that contains the encrypted key.</param>
      <exception cref="T:System.Security.Cryptography.CryptographicException">
        <paramref name="algorithm" /> is not supported. The supported algorithms are <see cref="F:System.IdentityModel.Tokens.SecurityAlgorithms.RsaV15KeyWrap" /> and <see cref="F:System.IdentityModel.Tokens.SecurityAlgorithms.RsaOaepKeyWrap" />.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="keyData" /> is null.</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IdentityModel.Tokens.RsaSecurityKey.EncryptKey(System.String,System.Byte[])">
      <summary>Encrypts the specified key using the specified algorithm.</summary>
      <returns>An array of <see cref="T:System.Byte" /> that contains the encrypted key.</returns>
      <param name="algorithm">The cryptographic algorithm to encrypt the key with.</param>
      <param name="keyData">An array of <see cref="T:System.Byte" /> that contains the key.</param>
      <exception cref="T:System.Security.Cryptography.CryptographicException">
        <paramref name="algorithm" /> is not supported. The supported algorithms are <see cref="F:System.IdentityModel.Tokens.SecurityAlgorithms.RsaV15KeyWrap" />and <see cref="F:System.IdentityModel.Tokens.SecurityAlgorithms.RsaOaepKeyWrap" />.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="keyData" /> is null.</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IdentityModel.Tokens.RsaSecurityKey.GetAsymmetricAlgorithm(System.String,System.Boolean)">
      <summary>Gets the specified asymmetric cryptographic algorithm.</summary>
      <returns>An <see cref="T:System.Security.Cryptography.AsymmetricAlgorithm" /> that represents the specified asymmetric cryptographic algorithm.</returns>
      <param name="algorithm">The asymmetric algorithm to create.</param>
      <param name="requiresPrivateKey">true when a private key is required to create the algorithm; otherwise, false. </param>
      <exception cref="T:System.Security.Cryptography.CryptographicException">
        <paramref name="requiresPrivateKey " />is true and a private key is not available.</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IdentityModel.Tokens.RsaSecurityKey.GetHashAlgorithmForSignature(System.String)">
      <summary>Gets a cryptographic algorithm that generates a hash for a digital signature.</summary>
      <returns>A <see cref="T:System.Security.Cryptography.HashAlgorithm" /> that generates hashes for digital signatures.</returns>
      <param name="algorithm">The hash algorithm. The supported algorithm is <see cref="F:System.IdentityModel.Tokens.SecurityAlgorithms.RsaSha1Signature" />.</param>
      <exception cref="T:System.Security.Cryptography.CryptographicException">
        <paramref name="algorithm " />is not supported. The supported algorithm is <see cref="F:System.IdentityModel.Tokens.SecurityAlgorithms.RsaSha1Signature" />.</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IdentityModel.Tokens.RsaSecurityKey.GetSignatureDeformatter(System.String)">
      <summary>Gets the de-formatter algorithm for the digital signature.</summary>
      <returns>An <see cref="T:System.Security.Cryptography.AsymmetricSignatureDeformatter" /> that represents the de-formatter algorithm for the digital signature.</returns>
      <param name="algorithm">The de-formatter algorithm for the digital signature to get an instance of. The supported algorithm is <see cref="F:System.IdentityModel.Tokens.SecurityAlgorithms.RsaSha1Signature" />.</param>
      <exception cref="T:System.Security.Cryptography.CryptographicException">
        <paramref name="algorithm " />is not supported. The supported algorithm is <see cref="F:System.IdentityModel.Tokens.SecurityAlgorithms.RsaSha1Signature" />.</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IdentityModel.Tokens.RsaSecurityKey.GetSignatureFormatter(System.String)">
      <summary>Gets the formatter algorithm for the digital signature.</summary>
      <returns>An <see cref="T:System.Security.Cryptography.AsymmetricSignatureDeformatter" /> that represents the formatter algorithm for the digital signature.</returns>
      <param name="algorithm">The formatter algorithm for the digital signature to get an instance of. The supported algorithm is <see cref="F:System.IdentityModel.Tokens.SecurityAlgorithms.RsaSha1Signature" />.</param>
      <exception cref="T:System.Security.Cryptography.CryptographicException">
        <paramref name="algorithm " />is not supported. The supported algorithm is <see cref="F:System.IdentityModel.Tokens.SecurityAlgorithms.RsaSha1Signature" />.</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IdentityModel.Tokens.RsaSecurityKey.HasPrivateKey">
      <summary>Gets a value that indicates whether the private key is available.</summary>
      <returns>true when the private key is available; otherwise, false.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IdentityModel.Tokens.RsaSecurityKey.IsAsymmetricAlgorithm(System.String)">
      <summary>Gets a value that indicates whether the specified algorithm uses asymmetric keys.</summary>
      <returns>true when the specified algorithm uses asymmetric keys; otherwise, false.</returns>
      <param name="algorithm">The cryptographic algorithm.</param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IdentityModel.Tokens.RsaSecurityKey.IsSupportedAlgorithm(System.String)">
      <summary>Gets a value that indicates whether the specified algorithm is supported by this class.</summary>
      <returns>true when the specified algorithm is <see cref="F:System.IdentityModel.Tokens.SecurityAlgorithms.RsaV15KeyWrap" />, <see cref="F:System.IdentityModel.Tokens.SecurityAlgorithms.RsaOaepKeyWrap" />, or <see cref="F:System.IdentityModel.Tokens.SecurityAlgorithms.RsaSha1Signature" />; otherwise, false.</returns>
      <param name="algorithm">The cryptographic algorithm.</param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IdentityModel.Tokens.RsaSecurityKey.IsSymmetricAlgorithm(System.String)">
      <summary>Gets a value that indicates whether the specified algorithm uses symmetric keys.</summary>
      <returns>true when the specified algorithm uses symmetric keys; otherwise, false.</returns>
      <param name="algorithm">The cryptographic algorithm.</param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.IdentityModel.Tokens.RsaSecurityKey.KeySize">
      <summary>Gets the size, in bits, of the key.</summary>
      <returns>The size, in bits, of the key.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="T:System.IdentityModel.Tokens.RsaSecurityToken">
      <summary>Represents a security token that is based upon key that is created using the RSA algorithm.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IdentityModel.Tokens.RsaSecurityToken.#ctor(System.Security.Cryptography.RSA)">
      <summary>Initializes a new instance of the <see cref="T:System.IdentityModel.Tokens.RsaSecurityToken" /> class using the specified RSA algorithm. </summary>
      <param name="rsa">A <see cref="T:System.Security.Cryptography.RSA" /> that represents a RSA algorithm that is capable of creating an asymmetric key. Sets the value of the <see cref="P:System.IdentityModel.Tokens.RsaSecurityToken.Rsa" /> property.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="rsa" /> is null.</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IdentityModel.Tokens.RsaSecurityToken.#ctor(System.Security.Cryptography.RSA,System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.IdentityModel.Tokens.RsaSecurityToken" /> class using the specified RSA algorithm and unique identifier.</summary>
      <param name="rsa">A <see cref="T:System.Security.Cryptography.RSA" /> that represents a RSA algorithm that is capable of creating an asymmetric key. Sets the value of the <see cref="P:System.IdentityModel.Tokens.RsaSecurityToken.Rsa" /> property.</param>
      <param name="id">A unique identifier of the security token. Sets the value of the <see cref="P:System.IdentityModel.Tokens.RsaSecurityToken.Id" /> property.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="rsa" /> is null.-or-<paramref name="id" /> is null.</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IdentityModel.Tokens.RsaSecurityToken.CanCreateKeyIdentifierClause``1">
      <summary>Gets a value that indicates whether this security token is capable of creating the specified key identifier.</summary>
      <returns>true when <paramref name="T" /> is of type <see cref="T:System.IdentityModel.Tokens.RsaKeyIdentifierClause" />; otherwise, false.</returns>
      <typeparam name="T">A <see cref="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" /> that specifies the type of key identifier to create.</typeparam>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IdentityModel.Tokens.RsaSecurityToken.CreateKeyIdentifierClause``1">
      <summary>Creates the specified key identifier clause.</summary>
      <returns>A <see cref="T:System.IdentityModel.Tokens.RsaKeyIdentifierClause" /> that is a key identifier clause for the security token.</returns>
      <typeparam name="T">A <see cref="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" /> that specifies the key identifier to create.</typeparam>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IdentityModel.Tokens.RsaSecurityToken.Finalize">
      <summary>Allows the <see cref="T:System.IdentityModel.Tokens.RsaSecurityToken" /> to free resources before it is destroyed by the garbage collector.</summary>
    </member>
    <member name="P:System.IdentityModel.Tokens.RsaSecurityToken.Id">
      <summary>Gets a unique identifier of the security token.</summary>
      <returns>A unique identifier of the security token.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IdentityModel.Tokens.RsaSecurityToken.MatchesKeyIdentifierClause(System.IdentityModel.Tokens.SecurityKeyIdentifierClause)">
      <summary>Returns a value that indicates whether the key identifier for this instance matches the specified key identifier.</summary>
      <returns>true if <paramref name="keyIdentifierClause" /> is of type <see cref="T:System.IdentityModel.Tokens.RsaKeyIdentifierClause" /> and the keys match; otherwise, false.</returns>
      <param name="keyIdentifierClause">A <see cref="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" /> to compare to this instance.</param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.IdentityModel.Tokens.RsaSecurityToken.Rsa">
      <summary>Gets a RSA algorithm that is capable of creating an asymmetric key.</summary>
      <returns>A <see cref="T:System.Security.Cryptography.RSA" /> that represents a RSA algorithm that is capable of creating an asymmetric key.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.IdentityModel.Tokens.RsaSecurityToken.SecurityKeys">
      <summary>Gets the cryptographic keys associated with the security token.</summary>
      <returns>A <see cref="T:System.Collections.ObjectModel.ReadOnlyCollection`1" /> of type <see cref="T:System.IdentityModel.Tokens.SecurityKey" /> that contains the set of keys associated with the security token.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.IdentityModel.Tokens.RsaSecurityToken.ValidFrom">
      <summary>Gets the first instant in time at which this security token is valid.</summary>
      <returns>A <see cref="T:System.DateTime" /> that represents the instant in time at which this security token is first valid.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.IdentityModel.Tokens.RsaSecurityToken.ValidTo">
      <summary>Gets the last instant in time at which this security token is valid.</summary>
      <returns>A <see cref="T:System.DateTime" /> that represents the last instant in time at which this security token is valid.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="T:System.IdentityModel.Tokens.SamlAccessDecision">
      <summary>Specifies whether the subject of a <see cref="T:System.IdentityModel.Tokens.SamlSecurityToken" /> security token is granted access to a given resource.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="F:System.IdentityModel.Tokens.SamlAccessDecision.Permit">
      <summary>Specifies that access to a resource is granted.</summary>
    </member>
    <member name="F:System.IdentityModel.Tokens.SamlAccessDecision.Deny">
      <summary>Specifies that access to a resource is denied.</summary>
    </member>
    <member name="F:System.IdentityModel.Tokens.SamlAccessDecision.Indeterminate">
      <summary>Specifies that the security token service that issued the <see cref="T:System.IdentityModel.Tokens.SamlSecurityToken" /> security token does not have enough information to determine the access permissions for a particular resource. A recipient of the <see cref="T:System.IdentityModel.Tokens.SamlSecurityToken" /> security token must use other means to determine the user's access permissions.</summary>
    </member>
    <member name="T:System.IdentityModel.Tokens.SamlAction">
      <summary>Represents the &lt;saml:Action&gt; element within a SAML assertion that contains an action on a specified resource.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IdentityModel.Tokens.SamlAction.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.IdentityModel.Tokens.SamlAction" /> class.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IdentityModel.Tokens.SamlAction.#ctor(System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.IdentityModel.Tokens.SamlAction" /> class using the specified action. </summary>
      <param name="action">The action that the subject of the <see cref="T:System.IdentityModel.Tokens.SamlAuthorizationDecisionStatement" /> security token seeks to perform on the specified resource.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="action" /> is null.-or-<paramref name="action" /> is <see cref="F:System.String.Empty" />.</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IdentityModel.Tokens.SamlAction.#ctor(System.String,System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.IdentityModel.Tokens.SamlAction" /> class using the specified action.</summary>
      <param name="action">The action that the subject of the <see cref="T:System.IdentityModel.Tokens.SamlAuthorizationDecisionStatement" /> security token seeks to perform on the specified resource.</param>
      <param name="ns">The XML namespace in which the <paramref name="action" /> parameter is defined.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="action" /> is null.-or-<paramref name="action" /> is <see cref="F:System.String.Empty" />.</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.IdentityModel.Tokens.SamlAction.Action">
      <summary>Gets or sets the action that the subject of the <see cref="T:System.IdentityModel.Tokens.SamlAuthorizationDecisionStatement" /> can perform on the specified resource.</summary>
      <returns>Gets or sets the action that the subject of the <see cref="T:System.IdentityModel.Tokens.SamlSecurityToken" /> security token seeks to perform on the specified resource.</returns>
      <exception cref="T:System.ArgumentException">The <see cref="P:System.IdentityModel.Tokens.SamlAction.Action" /> property is set to null.-or-The <see cref="P:System.IdentityModel.Tokens.SamlAction.Action" /> property is set to <see cref="F:System.String.Empty" />.</exception>
      <exception cref="T:System.InvalidOperationException">The value of the <see cref="P:System.IdentityModel.Tokens.SamlAction.IsReadOnly" /> property is true and the <see cref="P:System.IdentityModel.Tokens.SamlAction.Action" /> property is set.</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.IdentityModel.Tokens.SamlAction.IsReadOnly">
      <summary>Gets a value that indicates whether the properties of this instance are read-only.</summary>
      <returns>true if the properties of this instance are read-only; otherwise, false.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IdentityModel.Tokens.SamlAction.MakeReadOnly">
      <summary>Causes this instance to be read-only.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.IdentityModel.Tokens.SamlAction.Namespace">
      <summary>Gets or sets the XML namespace in which the <see cref="P:System.IdentityModel.Tokens.SamlAction.Action" /> property is defined.</summary>
      <returns>The XML namespace in which the <see cref="P:System.IdentityModel.Tokens.SamlAction.Action" /> property is defined.</returns>
      <exception cref="T:System.InvalidOperationException">The <see cref="P:System.IdentityModel.Tokens.SamlAction.IsReadOnly" /> property is true and the <see cref="P:System.IdentityModel.Tokens.SamlAction.Namespace" /> property is set.</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IdentityModel.Tokens.SamlAction.ReadXml(System.Xml.XmlDictionaryReader,System.IdentityModel.Tokens.SamlSerializer,System.IdentityModel.Selectors.SecurityTokenSerializer,System.IdentityModel.Selectors.SecurityTokenResolver)">
      <summary>Reads the &lt;saml:Action&gt; element using the specified XML reader.</summary>
      <param name="reader">A <see cref="T:System.Xml.XmlDictionaryReader" /> to read the &lt;saml:Action&gt; XML element.</param>
      <param name="samlSerializer">A <see cref="T:System.IdentityModel.Tokens.SamlSerializer" /> that is capable of reading XML elements in the SAML assertion that are defined in the SAML specification.</param>
      <param name="keyInfoSerializer">A <see cref="T:System.IdentityModel.Selectors.SecurityTokenSerializer" /> that can read a KeyInfo clause.</param>
      <param name="outOfBandTokenResolver">A <see cref="T:System.IdentityModel.Selectors.SecurityTokenResolver" /> that determines the security token that created the digital signature for SAML assertions referenced by the &lt;saml:Advice&gt; XML element.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="reader" /> is null.-or-<paramref name="samlSerializer" /> is null.</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IdentityModel.Tokens.SamlAction.WriteXml(System.Xml.XmlDictionaryWriter,System.IdentityModel.Tokens.SamlSerializer,System.IdentityModel.Selectors.SecurityTokenSerializer)">
      <summary>Writes the <see cref="T:System.IdentityModel.Tokens.SamlAction" /> into the specified XML writer as a &lt;saml:Action&gt; element.</summary>
      <param name="writer">A <see cref="T:System.Xml.XmlDictionaryWriter" /> to write the &lt;saml:Action&gt; element.</param>
      <param name="samlSerializer">A <see cref="T:System.IdentityModel.Tokens.SamlSerializer" /> that is capable of writing the &lt;saml:Action&gt; element and its child elements and attributes that are defined in the SAML specification.</param>
      <param name="keyInfoSerializer">A <see cref="T:System.IdentityModel.Selectors.SecurityTokenSerializer" /> that is capable of writing KeyInfo clauses.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="writer" /> is null.-or-<paramref name="samlSerializer" /> is null.</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="T:System.IdentityModel.Tokens.SamlAdvice">
      <summary>Represents the &lt;saml:Advice&gt; element within a SAML assertion that contains additional information provided by the SAML authority.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IdentityModel.Tokens.SamlAdvice.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.IdentityModel.Tokens.SamlAdvice" /> class. </summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IdentityModel.Tokens.SamlAdvice.#ctor(System.Collections.Generic.IEnumerable{System.IdentityModel.Tokens.SamlAssertion})">
      <summary>Initializes a new instance of the <see cref="T:System.IdentityModel.Tokens.SamlAdvice" /> class using the specified collection of SAML assertions. </summary>
      <param name="assertions">An <see cref="T:System.Collections.Generic.IEnumerable`1" /> of type <see cref="T:System.IdentityModel.Tokens.SamlAssertion" /> that contains SAML assertions that provides additional information for a SAML assertion.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="assertions" /> contains a null element.</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IdentityModel.Tokens.SamlAdvice.#ctor(System.Collections.Generic.IEnumerable{System.String})">
      <summary>Initializes a new instance of the <see cref="T:System.IdentityModel.Tokens.SamlAdvice" /> class. </summary>
      <param name="references">An <see cref="T:System.Collections.Generic.IEnumerable`1" /> of type <see cref="T:System.String" /> that contains a collection of references to SAML assertions that provide additional information on a SAML assertion.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="references" /> contains a null element.</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IdentityModel.Tokens.SamlAdvice.#ctor(System.Collections.Generic.IEnumerable{System.String},System.Collections.Generic.IEnumerable{System.IdentityModel.Tokens.SamlAssertion})">
      <summary>Initializes a new instance of the <see cref="T:System.IdentityModel.Tokens.SamlAdvice" /> class using the specified collections of SAML assertions and SAML assertion references. </summary>
      <param name="references">An <see cref="T:System.Collections.Generic.IEnumerable`1" /> of type <see cref="T:System.String" /> that contains a collection of references to SAML assertions that provide additional information on a SAML assertion.</param>
      <param name="assertions">An <see cref="T:System.Collections.Generic.IEnumerable`1" /> of type <see cref="T:System.IdentityModel.Tokens.SamlAssertion" /> that contains SAML assertions that provide additional information for a SAML assertion.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="references" /> contains a null element.-or-<paramref name="assertions" /> contains a null element.</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.IdentityModel.Tokens.SamlAdvice.AssertionIdReferences">
      <summary>Gets a collection of references to SAML assertions.</summary>
      <returns>An <see cref="T:System.Collections.Generic.IList`1" /> of type <see cref="T:System.String" /> that contains a collection of references to SAML assertions that provide additional information on a SAML assertion.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.IdentityModel.Tokens.SamlAdvice.Assertions">
      <summary>Gets a collection of SAML assertions.</summary>
      <returns>An <see cref="T:System.Collections.Generic.IList`1" /> of type <see cref="T:System.IdentityModel.Tokens.SamlAssertion" /> that contains SAML assertions that provides additional information for a SAML assertion.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.IdentityModel.Tokens.SamlAdvice.IsReadOnly">
      <summary>Gets a value indicating whether the properties of this instance are read-only.</summary>
      <returns>true if the properties of this instance are read-only; otherwise, false. The default is false.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IdentityModel.Tokens.SamlAdvice.MakeReadOnly">
      <summary>Causes this instance to be read-only.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IdentityModel.Tokens.SamlAdvice.ReadXml(System.Xml.XmlDictionaryReader,System.IdentityModel.Tokens.SamlSerializer,System.IdentityModel.Selectors.SecurityTokenSerializer,System.IdentityModel.Selectors.SecurityTokenResolver)">
      <summary>Reads the &lt;saml:Advice&gt; XML element using the specified XML reader.</summary>
      <param name="reader">An <see cref="T:System.Xml.XmlDictionaryReader" /> to read the &lt;saml:Advice&gt; XML element.</param>
      <param name="samlSerializer">A <see cref="T:System.IdentityModel.Tokens.SamlSerializer" /> that is capable of reading XML elements in the SAML assertion that are defined in the SAML specification.</param>
      <param name="keyInfoSerializer">A <see cref="T:System.IdentityModel.Selectors.SecurityTokenSerializer" /> that can read a KeyInfo clause.</param>
      <param name="outOfBandTokenResolver">A <see cref="T:System.IdentityModel.Selectors.SecurityTokenResolver" /> that determines the security token that created the digital signature for SAML assertions that contain this &lt;saml:Advice&gt; XML element.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="reader" /> is null-or-<paramref name="samlSerializer" /> is null</exception>
      <exception cref="T:System.IdentityModel.Tokens.SecurityTokenException">The &lt;saml:Advice&gt; element does not conform to the XML schema for the &lt;saml:Advice&gt; element.</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IdentityModel.Tokens.SamlAdvice.WriteXml(System.Xml.XmlDictionaryWriter,System.IdentityModel.Tokens.SamlSerializer,System.IdentityModel.Selectors.SecurityTokenSerializer)">
      <summary>Writes this <see cref="T:System.IdentityModel.Tokens.SamlAdvice" /> into the specified XML writer as an &lt;saml:Advice&gt; element.</summary>
      <param name="writer">A <see cref="T:System.Xml.XmlDictionaryWriter" /> to write the &lt;saml:Advice&gt; element.</param>
      <param name="samlSerializer">A <see cref="T:System.IdentityModel.Tokens.SamlSerializer" /> that is capable of writing the &lt;saml:Advice&gt; element and its child elements and attributes that are defined in the SAML specification.</param>
      <param name="keyInfoSerializer">A <see cref="T:System.IdentityModel.Selectors.SecurityTokenSerializer" /> that is capable of writing KeyInfo clauses.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="writer" /> is null-or-<paramref name="samlSerializer" /> is null</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="T:System.IdentityModel.Tokens.SamlAssertion">
      <summary>Represents a Security Assertion Markup Language 1.1 (SAML 1.1) assertion.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IdentityModel.Tokens.SamlAssertion.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.IdentityModel.Tokens.SamlAssertion" /> class. </summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IdentityModel.Tokens.SamlAssertion.#ctor(System.String,System.String,System.DateTime,System.IdentityModel.Tokens.SamlConditions,System.IdentityModel.Tokens.SamlAdvice,System.Collections.Generic.IEnumerable{System.IdentityModel.Tokens.SamlStatement})">
      <summary>Initializes a new instance of the <see cref="T:System.IdentityModel.Tokens.SamlAssertion" /> class using the specified SAML assertion identifier, issuer of the assertion, the date and time when the assertion was issued, a set of processing conditions, additional information, and a collection of SAML statements.</summary>
      <param name="assertionId">The identifier for the assertion.</param>
      <param name="issuer">The SAML authority that issued this SAML assertion.</param>
      <param name="issueInstant">A <see cref="T:System.DateTime" /> that specifies when the SAML assertion was issued.</param>
      <param name="samlConditions">A <see cref="T:System.IdentityModel.Tokens.SamlConditions" /> that specifies a set of conditions that may be taken into account when assessing the validity of the SAML assertion.</param>
      <param name="samlAdvice">A <see cref="T:System.IdentityModel.Tokens.SamlAdvice" /> that specifies additional information supplied by the SAML authority that can aide in the processing of the SAML assertion.</param>
      <param name="samlStatements">An <see cref="T:System.Collections.Generic.IEnumerable`1" /> of type <see cref="T:System.IdentityModel.Tokens.SamlStatement" /> that contain SAML statements.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="assertionId" /> is null-or-<paramref name="assertionId" /> is <see cref="F:System.String.Empty" />-or-<paramref name="assertionId" /> does not start with a letter or the "_" character.-or-<paramref name="issuer" /> is null-or-<paramref name="issuer" /> is <see cref="F:System.String.Empty" />-or-<paramref name="samlStatements" /> is null-or-<paramref name="samlStatements" /> does not contain any elements-or-<paramref name="samlStatements" /> contains a null element</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.IdentityModel.Tokens.SamlAssertion.Advice">
      <summary>Gets or sets additional information related to the <see cref="T:System.IdentityModel.Tokens.SamlSecurityToken" /> that is supplied by the SAML authority that can aide in the processing of the SAML assertion.</summary>
      <returns>A <see cref="T:System.IdentityModel.Tokens.SamlAdvice" /> that specifies additional information that is supplied by the SAML authority that can aide in the processing of the SAML assertion.</returns>
      <exception cref="T:System.InvalidOperationException">The <see cref="P:System.IdentityModel.Tokens.SamlAssertion.Advice" /> property is set and the <see cref="P:System.IdentityModel.Tokens.SamlAssertion.IsReadOnly" /> property is true.</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.IdentityModel.Tokens.SamlAssertion.AssertionId">
      <summary>Gets or sets the identifier for this assertion.</summary>
      <returns>The identifier for this assertion.</returns>
      <exception cref="T:System.InvalidOperationException">The value of the <see cref="P:System.IdentityModel.Tokens.SamlAssertion.IsReadOnly" /> property is true and an attempt is made to set the <see cref="P:System.IdentityModel.Tokens.SamlAssertion.AssertionId" /> property.</exception>
      <exception cref="T:System.ArgumentException">An attempt is made to set the <see cref="P:System.IdentityModel.Tokens.SamlAssertion.AssertionId" /> property to null or an empty string.</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.IdentityModel.Tokens.SamlAssertion.Conditions">
      <summary>Gets or sets a set of conditions that may be taken into account when assessing the validity of the SAML assertion.</summary>
      <returns>A <see cref="T:System.IdentityModel.Tokens.SamlConditions" /> that specifies a set of conditions that may be taken into account when assessing the validity of the SAML assertion.</returns>
      <exception cref="T:System.InvalidOperationException">The <see cref="P:System.IdentityModel.Tokens.SamlAssertion.IsReadOnly" /> property is true and an attempt is made to set the <see cref="P:System.IdentityModel.Tokens.SamlAssertion.Conditions" /> property.</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.IdentityModel.Tokens.SamlAssertion.IsReadOnly">
      <summary>Gets a value indicating whether the properties of this instance are read-only. </summary>
      <returns>true if the properties of this instance are read-only; otherwise, false. The default is false.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.IdentityModel.Tokens.SamlAssertion.IssueInstant">
      <summary>Gets or sets the date and time when the SAML assertion was issued.</summary>
      <returns>A <see cref="T:System.DateTime" /> expressed in the Coordinated Universal Time (UTC) that specifies when the SAML assertion was issued. </returns>
      <exception cref="T:System.InvalidOperationException">The <see cref="P:System.IdentityModel.Tokens.SamlAssertion.IsReadOnly" /> property is true and an attempt is made to set the <see cref="P:System.IdentityModel.Tokens.SamlAssertion.IssueInstant" /> property. </exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.IdentityModel.Tokens.SamlAssertion.Issuer">
      <summary>Gets or sets the name of the SAML authority that issued this SAML assertion.</summary>
      <returns>The SAML authority that issued this SAML assertion.</returns>
      <exception cref="T:System.InvalidOperationException">The <see cref="P:System.IdentityModel.Tokens.SamlAssertion.IsReadOnly" /> property is true and an attempt is made to set the <see cref="P:System.IdentityModel.Tokens.SamlAssertion.Issuer" /> property.</exception>
      <exception cref="T:System.ArgumentException">An attempt is made to set the <see cref="P:System.IdentityModel.Tokens.SamlAssertion.Issuer" /> property to null or an empty string.</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.IdentityModel.Tokens.SamlAssertion.MajorVersion">
      <summary>Gets the major version of the SAML specification to which this SAML assertion conforms.</summary>
      <returns>The major version of the SAML specification to which this SAML assertion conforms. The default value is the value of the <see cref="P:System.IdentityModel.Tokens.SamlConstants.MajorVersionValue" /> property.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IdentityModel.Tokens.SamlAssertion.MakeReadOnly">
      <summary>Causes this instance to be read-only.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.IdentityModel.Tokens.SamlAssertion.MinorVersion">
      <summary>Gets the minor version of the SAML specification to which this SAML assertion conforms.</summary>
      <returns>The minor version of the SAML specification to which this SAML assertion conforms. The default value is the value of the <see cref="P:System.IdentityModel.Tokens.SamlConstants.MinorVersionValue" /> property.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IdentityModel.Tokens.SamlAssertion.ReadSignature(System.Xml.XmlDictionaryReader,System.IdentityModel.Selectors.SecurityTokenSerializer,System.IdentityModel.Selectors.SecurityTokenResolver,System.IdentityModel.Tokens.SamlSerializer)">
      <summary>Reads the digital signature for a SAML assertion from an XML reader.</summary>
      <param name="reader">A <see cref="T:System.Xml.XmlDictionaryReader" /> to read the digital signature.</param>
      <param name="keyInfoSerializer">A <see cref="T:System.IdentityModel.Selectors.SecurityTokenSerializer" /> that reads the KeyInfo clause of the digital signature.</param>
      <param name="outOfBandTokenResolver">A <see cref="T:System.IdentityModel.Selectors.SecurityTokenResolver" /> that determines the security token that created the digital signature.</param>
      <param name="samlSerializer">A <see cref="T:System.IdentityModel.Tokens.SamlSerializer" /> that is capable of reading XML elements that are defined in the SAML specification.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="reader" /> is null-or-<paramref name="samlSerializer" /> is null-or-the digital signature has not been read from the SAML assertion yet.</exception>
    </member>
    <member name="M:System.IdentityModel.Tokens.SamlAssertion.ReadXml(System.Xml.XmlDictionaryReader,System.IdentityModel.Tokens.SamlSerializer,System.IdentityModel.Selectors.SecurityTokenSerializer,System.IdentityModel.Selectors.SecurityTokenResolver)">
      <summary>Reads a SAML assertion from the specified XML reader.</summary>
      <param name="reader">A <see cref="T:System.Xml.XmlDictionaryReader" /> to read the SAML assertion.</param>
      <param name="samlSerializer">A <see cref="T:System.IdentityModel.Tokens.SamlSerializer" /> that is capable of reading XML elements in the SAML assertion that are defined in the SAML specification.</param>
      <param name="keyInfoSerializer">A <see cref="T:System.IdentityModel.Selectors.SecurityTokenSerializer" /> that reads the KeyInfo clause of the digital signature.</param>
      <param name="outOfBandTokenResolver">A <see cref="T:System.IdentityModel.Selectors.SecurityTokenResolver" /> that determines the security token that created the digital signature.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="reader" /> is null-or-<paramref name="samlSerializer" /> is null</exception>
      <exception cref="T:System.InvalidOperationException">the <see cref="M:System.IdentityModel.Tokens.SamlAssertion.ReadXml(System.Xml.XmlDictionaryReader,System.IdentityModel.Tokens.SamlSerializer,System.IdentityModel.Selectors.SecurityTokenSerializer,System.IdentityModel.Selectors.SecurityTokenResolver)" /> method had been previously called and that SAML assertion was digitally signed.</exception>
      <exception cref="T:System.IdentityModel.Tokens.SecurityTokenException">
        <paramref name="reader" /> does not refer to a SAML assertion that is compliant with the SAML 1.1 specification.</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.IdentityModel.Tokens.SamlAssertion.SigningCredentials">
      <summary>Gets or sets the security credentials that are used to digitally sign the SAML assertion.</summary>
      <returns>A <see cref="T:System.IdentityModel.Tokens.SigningCredentials" /> that is used to digitally sign the SAML assertion.</returns>
      <exception cref="T:System.InvalidOperationException">The <see cref="P:System.IdentityModel.Tokens.SamlAssertion.IsReadOnly" /> property is true and an attempt is made to set the <see cref="P:System.IdentityModel.Tokens.SamlAssertion.SigningCredentials" />  property.</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.IdentityModel.Tokens.SamlAssertion.SigningToken">
      <summary>Gets the security token contained in or referenced by a digitally signed SAML assertion.</summary>
      <returns>A <see cref="T:System.IdentityModel.Tokens.SecurityToken" /> contained in or referenced by a digitally signed SAML assertion.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.IdentityModel.Tokens.SamlAssertion.Statements">
      <summary>Gets the set of SAML statements associated with the SAML assertion.</summary>
      <returns>An <see cref="T:System.Collections.Generic.IList`1" /> of type <see cref="T:System.IdentityModel.Tokens.SamlStatement" /> that contains the SAML statements associated with the SAML assertion.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IdentityModel.Tokens.SamlAssertion.WriteXml(System.Xml.XmlDictionaryWriter,System.IdentityModel.Tokens.SamlSerializer,System.IdentityModel.Selectors.SecurityTokenSerializer)">
      <summary>Writes the SAML assertion into the specified XML writer as a &lt;saml:Assertion&gt; element.</summary>
      <param name="writer">A <see cref="T:System.Xml.XmlDictionaryWriter" /> to write the SAML assertion.</param>
      <param name="samlSerializer">A <see cref="T:System.IdentityModel.Tokens.SamlSerializer" /> that is capable of writing the objects in the <see cref="T:System.IdentityModel.Tokens.SamlAssertion" /> to XML.</param>
      <param name="keyInfoSerializer">A <see cref="T:System.IdentityModel.Selectors.SecurityTokenSerializer" /> that is capable of writing KeyInfo clauses.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="writer" /> is null-or-<paramref name="samlSerializer" /> is null</exception>
      <exception cref="T:System.IdentityModel.Tokens.SecurityTokenException">the <see cref="T:System.IdentityModel.Tokens.SamlAssertion" />  is configured such that serializing it into XML would result non-compliance with the SAML v1.1 specification.</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="T:System.IdentityModel.Tokens.SamlAssertionKeyIdentifierClause">
      <summary>Represents a &lt;KeyIndentifier&gt; element that references a &lt;saml:Assertion&gt; element in a SOAP message.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IdentityModel.Tokens.SamlAssertionKeyIdentifierClause.#ctor(System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.IdentityModel.Tokens.SamlAssertionKeyIdentifierClause" /> class using the specified SAML assertion identifier. </summary>
      <param name="assertionId">The identifier of the <see cref="T:System.IdentityModel.Tokens.SamlAssertion" /> that contains the key identifier</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="assertionId" /> is null.</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IdentityModel.Tokens.SamlAssertionKeyIdentifierClause.#ctor(System.String,System.Byte[],System.Int32)">
      <summary>Initializes a new instance of the <see cref="T:System.IdentityModel.Tokens.SamlAssertionKeyIdentifierClause" /> class using the specified SAML assertion identifier, nonce, and key length. </summary>
      <param name="assertionId">The identifier of the <see cref="T:System.IdentityModel.Tokens.SamlAssertion" /> that contains the key identifier.</param>
      <param name="derivationNonce">An array of <see cref="T:System.Byte" /> that contains the nonce that was used to create a derived key. </param>
      <param name="derivationLength">The size of the derived key. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="assertionId" /> is null.</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.IdentityModel.Tokens.SamlAssertionKeyIdentifierClause.AssertionId">
      <summary>Gets the identifier for the <see cref="T:System.IdentityModel.Tokens.SamlAssertion" /> that contains the key identifier.</summary>
      <returns>The identifier for the <see cref="T:System.IdentityModel.Tokens.SamlAssertion" /> that contains the key identifier.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IdentityModel.Tokens.SamlAssertionKeyIdentifierClause.Matches(System.IdentityModel.Tokens.SecurityKeyIdentifierClause)">
      <summary>Determines whether the specified key identifier is the same as the current instance.</summary>
      <returns>true when the specified key identifier is the same as the current instance; otherwise, false. </returns>
      <param name="keyIdentifierClause">A <see cref="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" /> to be compared.</param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IdentityModel.Tokens.SamlAssertionKeyIdentifierClause.Matches(System.String)">
      <summary>Determines whether the specified SAML assertion identifier is the same as the current instance.</summary>
      <returns>true when <paramref name="assertionId" /> has the same value as the current instance's <see cref="P:System.IdentityModel.Tokens.SamlAssertionKeyIdentifierClause.AssertionId" /> property; otherwise, false. </returns>
      <param name="assertionId">The SAML assertion identifier to be compared.</param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IdentityModel.Tokens.SamlAssertionKeyIdentifierClause.ToString">
      <summary>Returns a <see cref="T:System.String" /> that includes the SAML assertion identifier that represents the current key identifier clause.</summary>
      <returns>A <see cref="T:System.String" /> that includes the SAML assertion identifier that represents the current <see cref="T:System.IdentityModel.Tokens.SamlAssertionKeyIdentifierClause" /> instance.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="T:System.IdentityModel.Tokens.SamlAttribute">
      <summary>Represents an attribute that is associated with the subject of a <see cref="T:System.IdentityModel.Tokens.SamlAttributeStatement" />.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IdentityModel.Tokens.SamlAttribute.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.IdentityModel.Tokens.SamlAttribute" /> class. </summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IdentityModel.Tokens.SamlAttribute.#ctor(System.IdentityModel.Claims.Claim)">
      <summary>Initializes a new instance of the <see cref="T:System.IdentityModel.Tokens.SamlAttribute" /> class using the specified claim. </summary>
      <param name="claim">A <see cref="T:System.IdentityModel.Claims.Claim" /> that represents an attribute of the subject for a <see cref="T:System.IdentityModel.Tokens.SamlSecurityToken" /> security token. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="claim" /> is null.</exception>
      <exception cref="T:System.ArgumentException">The <see cref="P:System.IdentityModel.Claims.Claim.Resource" /> property of <paramref name="claim" /> is not of type <see cref="T:System.String" />.-or-The <see cref="P:System.IdentityModel.Claims.Claim.Right" /> property of <paramref name="claim" /> is not <see cref="P:System.IdentityModel.Claims.Rights.PossessProperty" />.-or-The <see cref="P:System.IdentityModel.Claims.Claim.ClaimType" /> property of <paramref name="claim" /> does not have a '/' character or it is in the first or last index positions. </exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IdentityModel.Tokens.SamlAttribute.#ctor(System.String,System.String,System.Collections.Generic.IEnumerable{System.String})">
      <summary>Initializes a new instance of the <see cref="T:System.IdentityModel.Tokens.SamlAttribute" /> class using the specified attribute name, XML namespace, and attribute values. </summary>
      <param name="attributeNamespace">The XML namespace in which the <paramref name="attributeName" /> parameter is defined.</param>
      <param name="attributeName">The name of the SAML attribute.</param>
      <param name="attributeValues">An <see cref="T:System.Collections.Generic.IEnumerable`1" /> that contains the values of the SAML attribute.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="attributeNamespace" /> is null.-or- <paramref name="attributeName" /> is null.-or-<paramref name="attributeValues" /> is null.</exception>
      <exception cref="T:System.ArgumentException">The <see cref="P:System.IdentityModel.Claims.Claim.Resource" /> property of <paramref name="claim" /> is not of type <see cref="T:System.String" />.-or-The <see cref="P:System.IdentityModel.Claims.Claim.Right" /> property of <paramref name="claim" /> is not <see cref="P:System.IdentityModel.Claims.Rights.PossessProperty" />.-or-The <see cref="P:System.IdentityModel.Claims.Claim.ClaimType" /> property of <paramref name="claim" /> does not have a '/' character or it is in the first or last index positions. </exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.IdentityModel.Tokens.SamlAttribute.AttributeValues">
      <summary>Gets a collection of attribute values for the SAML attribute.</summary>
      <returns>A <see cref="T:System.Collections.Generic.IList`1" /> that contains the set of attribute values for the SAML attribute.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IdentityModel.Tokens.SamlAttribute.ExtractClaims">
      <summary>Gets a collection of claims that this SAML attribute represents.</summary>
      <returns>A <see cref="T:System.Collections.ObjectModel.ReadOnlyCollection`1" /> of type <see cref="T:System.IdentityModel.Claims.Claim" /> that contains the set of claims that this SAML attribute represents.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.IdentityModel.Tokens.SamlAttribute.IsReadOnly">
      <summary>Gets a value that indicates whether the properties of this instance are read-only.</summary>
      <returns>true if the properties of this instance are read-only; otherwise, false. The default is false.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IdentityModel.Tokens.SamlAttribute.MakeReadOnly">
      <summary>Causes this instance to be read-only.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.IdentityModel.Tokens.SamlAttribute.Name">
      <summary>Gets or sets the name of the SAML attribute.</summary>
      <returns>The name of the SAML attribute.</returns>
      <exception cref="T:System.InvalidOperationException">The <see cref="P:System.IdentityModel.Tokens.SamlAttribute.Name" /> property is set and the <see cref="P:System.IdentityModel.Tokens.SamlAttribute.IsReadOnly" /> property is true.</exception>
      <exception cref="T:System.ArgumentNullException">The <see cref="P:System.IdentityModel.Tokens.SamlAttribute.Name" /> property is set to null.</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.IdentityModel.Tokens.SamlAttribute.Namespace">
      <summary>Gets or sets the XML namespace in which the name of the SAML attribute is defined.</summary>
      <returns>The XML namespace in which the name of the SAML attribute is defined.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IdentityModel.Tokens.SamlAttribute.ReadXml(System.Xml.XmlDictionaryReader,System.IdentityModel.Tokens.SamlSerializer,System.IdentityModel.Selectors.SecurityTokenSerializer,System.IdentityModel.Selectors.SecurityTokenResolver)">
      <summary>Reads the SAML attribute from the specified XML reader.</summary>
      <param name="reader">A <see cref="T:System.Xml.XmlDictionaryReader" /> to read the SAML attribute.</param>
      <param name="samlSerializer">A <see cref="T:System.IdentityModel.Tokens.SamlSerializer" /> that is capable of reading XML elements in the SAML specification.</param>
      <param name="keyInfoSerializer">A <see cref="T:System.IdentityModel.Selectors.SecurityTokenSerializer" /> that reads the KeyInfo clause of the digital signature.</param>
      <param name="outOfBandTokenResolver">A <see cref="T:System.IdentityModel.Selectors.SecurityTokenResolver" /> that determines the security token that created the digital signature.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="reader" /> is null.-or-<paramref name="samlSerializer" /> is null.</exception>
      <exception cref="T:System.IdentityModel.Tokens.SecurityTokenException">
        <paramref name="reader" /> refers to an XML element that does not have the AttributeName and AttributeNamespace attributes. </exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IdentityModel.Tokens.SamlAttribute.WriteXml(System.Xml.XmlDictionaryWriter,System.IdentityModel.Tokens.SamlSerializer,System.IdentityModel.Selectors.SecurityTokenSerializer)">
      <summary>Writes the SAML attribute into the specified XML serializer.</summary>
      <param name="writer">A <see cref="T:System.Xml.XmlDictionaryWriter" /> to write the SAML attribute.</param>
      <param name="samlSerializer">A <see cref="T:System.IdentityModel.Tokens.SamlSerializer" /> that is capable of writing XML elements in a SAML assertion.</param>
      <param name="keyInfoSerializer">A <see cref="T:System.IdentityModel.Selectors.SecurityTokenSerializer" /> that is capable of writing KeyInfo clauses.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="writer" /> is null.-or-<paramref name="samlSerializer" /> is null.</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="T:System.IdentityModel.Tokens.SamlAttributeStatement">
      <summary>Contains a set of attributes associated with a particular <see cref="P:System.IdentityModel.Tokens.SamlSubjectStatement.SamlSubject" />.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IdentityModel.Tokens.SamlAttributeStatement.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.IdentityModel.Tokens.SamlAttributeStatement" /> class. </summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IdentityModel.Tokens.SamlAttributeStatement.#ctor(System.IdentityModel.Tokens.SamlSubject,System.Collections.Generic.IEnumerable{System.IdentityModel.Tokens.SamlAttribute})">
      <summary>Initializes a new instance of the <see cref="T:System.IdentityModel.Tokens.SamlAttributeStatement" /> class using the specified subject and set of attributes associated with the subject.</summary>
      <param name="samlSubject">A <see cref="T:System.IdentityModel.Tokens.SamlSubject" /> that specifies the subject of the claim.</param>
      <param name="attributes">An <see cref="T:System.Collections.Generic.IEnumerable`1" /> of type <see cref="T:System.IdentityModel.Tokens.SamlAttribute" /> that contains a set of attributes associated with the subject.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="samlSubject" /> is null.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="attributes" /> contains a member that is null.-or-<paramref name="attributes" /> contains zero members. </exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IdentityModel.Tokens.SamlAttributeStatement.AddClaimsToList(System.Collections.Generic.IList{System.IdentityModel.Claims.Claim})">
      <summary>Adds the specified set of claims as attributes to this SAML statement.</summary>
      <param name="claims">An <see cref="T:System.Collections.Generic.IList`1" /> of type <see cref="T:System.IdentityModel.Claims.Claim" /> that contains the set of claims to add to the SAML statement.</param>
    </member>
    <member name="P:System.IdentityModel.Tokens.SamlAttributeStatement.Attributes">
      <summary>Gets a collection of attributes associated with the subject of the SAML assertion.</summary>
      <returns>An <see cref="T:System.Collections.Generic.IList`1" /> of type <see cref="T:System.IdentityModel.Tokens.SamlAttribute" /> that contains a set of attributes associated with the subject.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.IdentityModel.Tokens.SamlAttributeStatement.IsReadOnly">
      <summary>Gets a value indicating whether the properties of this instance are read-only.</summary>
      <returns>true if the properties of this instance are read-only; otherwise, false. The default is false.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IdentityModel.Tokens.SamlAttributeStatement.MakeReadOnly">
      <summary>Causes this instance to be read-only.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IdentityModel.Tokens.SamlAttributeStatement.ReadXml(System.Xml.XmlDictionaryReader,System.IdentityModel.Tokens.SamlSerializer,System.IdentityModel.Selectors.SecurityTokenSerializer,System.IdentityModel.Selectors.SecurityTokenResolver)">
      <summary>Reads the SAML attribute statement from the specified XML reader.</summary>
      <param name="reader">An <see cref="T:System.Xml.XmlDictionaryReader" /> to read the SAML attribute statement.</param>
      <param name="samlSerializer">A <see cref="T:System.IdentityModel.Tokens.SamlSerializer" /> that is capable of reading XML elements in the SAML attribute statement that is defined in the SAML specification.</param>
      <param name="keyInfoSerializer">A <see cref="T:System.IdentityModel.Selectors.SecurityTokenSerializer" /> that reads the KeyInfo clause of the digital signature.</param>
      <param name="outOfBandTokenResolver">A <see cref="T:System.IdentityModel.Selectors.SecurityTokenResolver" /> that determines the security token that created the digital signature.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="reader" /> is null-or-<paramref name="samlSerializer" /> is null</exception>
      <exception cref="T:System.IdentityModel.Tokens.SecurityTokenException">
        <paramref name="reader" /> refers to an XML element that does not contain a &lt;saml:Subject&gt; element-or-<paramref name="reader" /> refers to an XML element that contains a &lt;saml:Attribute&gt; element that does not have an attribute value. </exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IdentityModel.Tokens.SamlAttributeStatement.WriteXml(System.Xml.XmlDictionaryWriter,System.IdentityModel.Tokens.SamlSerializer,System.IdentityModel.Selectors.SecurityTokenSerializer)">
      <summary>Writes the SAML attribute statement into the specified XML serializer.</summary>
      <param name="writer">An <see cref="T:System.Xml.XmlDictionaryWriter" /> to write the SAML attribute statement.</param>
      <param name="samlSerializer">A <see cref="T:System.IdentityModel.Tokens.SamlSerializer" /> that is capable of writing XML elements in a SAML assertion.</param>
      <param name="keyInfoSerializer">A <see cref="T:System.IdentityModel.Selectors.SecurityTokenSerializer" /> that is capable of writing KeyInfo clauses.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="writer" /> is null-or-<paramref name="samlSerializer" /> is null</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="T:System.IdentityModel.Tokens.SamlAudienceRestrictionCondition">
      <summary>Specifies that a SAML assertion is addressed to a particular audience.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IdentityModel.Tokens.SamlAudienceRestrictionCondition.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.IdentityModel.Tokens.SamlAudienceRestrictionCondition" /> class. </summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IdentityModel.Tokens.SamlAudienceRestrictionCondition.#ctor(System.Collections.Generic.IEnumerable{System.Uri})">
      <summary>Initializes a new instance of the <see cref="T:System.IdentityModel.Tokens.SamlAudienceRestrictionCondition" /> class with the specified set of audiences a SAML assertion is intended for. </summary>
      <param name="audiences">An <see cref="T:System.Collections.Generic.IEnumerable`1" /> of type <see cref="T:System.Uri" /> that contain a set of intended audiences.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="audiences" /> is null.</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.IdentityModel.Tokens.SamlAudienceRestrictionCondition.Audiences">
      <summary>Gets the set of audiences a SAML assertion is intended for.</summary>
      <returns>An <see cref="T:System.Collections.Generic.IList`1" /> of type <see cref="T:System.Uri" /> that contain a set of intended audiences.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.IdentityModel.Tokens.SamlAudienceRestrictionCondition.IsReadOnly">
      <summary>Gets a value that indicates whether the properties of this instance are read-only.</summary>
      <returns>true if the properties of this instance are read-only; otherwise, false.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IdentityModel.Tokens.SamlAudienceRestrictionCondition.MakeReadOnly">
      <summary>Causes this instance to be read-only.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IdentityModel.Tokens.SamlAudienceRestrictionCondition.ReadXml(System.Xml.XmlDictionaryReader,System.IdentityModel.Tokens.SamlSerializer,System.IdentityModel.Selectors.SecurityTokenSerializer,System.IdentityModel.Selectors.SecurityTokenResolver)">
      <summary>Reads the &lt;AudienceRestrictionCondition&gt; element from the specified XML reader.</summary>
      <param name="reader">A <see cref="T:System.Xml.XmlDictionaryReader" /> to read the &lt;AudienceRestrictionCondition&gt; element.</param>
      <param name="samlSerializer">A <see cref="T:System.IdentityModel.Tokens.SamlSerializer" /> that is capable of reading XML elements in the SAML assertion that are defined in the SAML specification.</param>
      <param name="keyInfoSerializer">A <see cref="T:System.IdentityModel.Selectors.SecurityTokenSerializer" /> that reads the KeyInfo clause of the digital signature.</param>
      <param name="outOfBandTokenResolver">A <see cref="T:System.IdentityModel.Selectors.SecurityTokenResolver" /> that determines the security token that created the digital signature.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="reader" /> is null.-or-<paramref name="samlSerializer" /> is null.</exception>
      <exception cref="T:System.IdentityModel.Tokens.SecurityTokenException">The &lt;AudienceRestrictionCondition&gt; element has a child &lt;Audience&gt; element does not have a value.</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IdentityModel.Tokens.SamlAudienceRestrictionCondition.WriteXml(System.Xml.XmlDictionaryWriter,System.IdentityModel.Tokens.SamlSerializer,System.IdentityModel.Selectors.SecurityTokenSerializer)">
      <summary>Writes the &lt;AudienceRestrictionCondition&gt; element into the specified XML serializer.</summary>
      <param name="writer">A <see cref="T:System.Xml.XmlDictionaryWriter" /> to write the &lt;AudienceRestrictionCondition&gt; element.</param>
      <param name="samlSerializer">A <see cref="T:System.IdentityModel.Tokens.SamlSerializer" /> that is capable of writing XML elements in the SAML assertion that is defined in the SAML specification.</param>
      <param name="keyInfoSerializer">A <see cref="T:System.IdentityModel.Selectors.SecurityTokenSerializer" /> that is capable of writing KeyInfo clauses.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="writer" /> is null.-or-<paramref name="samlSerializer" /> is null.</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="T:System.IdentityModel.Tokens.SamlAuthenticationClaimResource">
      <summary>Represents the resource type for a claim that is created from a <see cref="T:System.IdentityModel.Tokens.SamlAuthenticationStatement" />.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IdentityModel.Tokens.SamlAuthenticationClaimResource.#ctor(System.DateTime,System.String,System.String,System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.IdentityModel.Tokens.SamlAuthenticationClaimResource" /> class using the specified instant in time, authentication method, DNS domain name, and IP address. </summary>
      <param name="authenticationInstant">A <see cref="T:System.DateTime" /> that specifies the instant in time at which the subject was authenticated.</param>
      <param name="authenticationMethod">A URI reference that specifies how the subject was authenticated.</param>
      <param name="dnsAddress">The DNS domain name in which the computer that authenticated the subject resides.</param>
      <param name="ipAddress">The IP address of the computer that authenticated the subject.</param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IdentityModel.Tokens.SamlAuthenticationClaimResource.#ctor(System.DateTime,System.String,System.String,System.String,System.Collections.Generic.IEnumerable{System.IdentityModel.Tokens.SamlAuthorityBinding})">
      <summary>Initializes a new instance of the <see cref="T:System.IdentityModel.Tokens.SamlAuthenticationClaimResource" /> class using the specified instant in time, authentication method, DNS domain name, IP address, and reference to additional information.</summary>
      <param name="authenticationInstant">A <see cref="T:System.DateTime" /> that specifies the instant in time at which the subject was authenticated.</param>
      <param name="authenticationMethod">A URI reference that specifies how the subject was authenticated.</param>
      <param name="dnsAddress">The DNS domain name in which the computer that authenticated the subject resides.</param>
      <param name="ipAddress">The IP address of the computer that authenticated the subject.</param>
      <param name="authorityBindings">An <see cref="T:System.Collections.Generic.IEnumerable`1" /> of type <see cref="T:System.IdentityModel.Tokens.SamlAuthorityBinding" /> that contains additional information about the subject.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="authorityBindings" /> contains a member that is null.</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IdentityModel.Tokens.SamlAuthenticationClaimResource.#ctor(System.DateTime,System.String,System.String,System.String,System.Collections.ObjectModel.ReadOnlyCollection{System.IdentityModel.Tokens.SamlAuthorityBinding})">
      <summary>Initializes a new instance of the <see cref="T:System.IdentityModel.Tokens.SamlAuthenticationClaimResource" /> class using the specified instant in time, authentication method, DNS domain name, IP address, and reference to additional information.</summary>
      <param name="authenticationInstant">A <see cref="T:System.DateTime" /> that specifies the instant in time at which the subject was authenticated.</param>
      <param name="authenticationMethod">A URI reference that specifies how the subject was authenticated.</param>
      <param name="dnsAddress">The DNS domain name in which the computer that authenticated the subject resides.</param>
      <param name="ipAddress">The IP address of the computer that authenticated the subject.</param>
      <param name="authorityBindings">An <see cref="T:System.Collections.ObjectModel.ReadOnlyCollection`1" /> of type <see cref="T:System.IdentityModel.Tokens.SamlAuthorityBinding" /> that contains additional information about the subject.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="authorityBindings" /> contains a member that is null.</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.IdentityModel.Tokens.SamlAuthenticationClaimResource.AuthenticationInstant">
      <summary>Gets the instant in time at which the subject was authenticated.</summary>
      <returns>A <see cref="T:System.DateTime" /> that specifies the instant in time at which the subject was authenticated.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.IdentityModel.Tokens.SamlAuthenticationClaimResource.AuthenticationMethod">
      <summary>Gets or sets the method that was used to authenticate the subject.</summary>
      <returns>The method that was used to authenticate the subject. </returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.IdentityModel.Tokens.SamlAuthenticationClaimResource.AuthorityBindings">
      <summary>Gets additional information about the subject.</summary>
      <returns>An <see cref="T:System.Collections.ObjectModel.ReadOnlyCollection`1" /> of type <see cref="T:System.IdentityModel.Tokens.SamlAuthorityBinding" /> that contains additional information about the subject.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.IdentityModel.Tokens.SamlAuthenticationClaimResource.DnsAddress">
      <summary>Gets the DNS domain name in which the computer that authenticated the subject resides.</summary>
      <returns>The DNS domain name in which the computer that authenticated the subject resides.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IdentityModel.Tokens.SamlAuthenticationClaimResource.Equals(System.Object)">
      <summary>Returns a value that indicates whether the instance is equal to the specified object.</summary>
      <returns>true if <paramref name="obj" /> is a <see cref="T:System.IdentityModel.Tokens.SamlAuthenticationClaimResource" /> and has the same value as this instance; otherwise, false.</returns>
      <param name="obj">An object to compare to this instance.</param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IdentityModel.Tokens.SamlAuthenticationClaimResource.GetHashCode">
      <summary>Returns the hash code for the <see cref="T:System.IdentityModel.Tokens.SamlAuthenticationClaimResource" />.</summary>
      <returns>A hash code for the <see cref="T:System.IdentityModel.Tokens.SamlAuthenticationClaimResource" />.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.IdentityModel.Tokens.SamlAuthenticationClaimResource.IPAddress">
      <summary>Gets or sets the IP address of the computer that authenticated the subject.</summary>
      <returns>The IP address of the computer that authenticated the subject.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="T:System.IdentityModel.Tokens.SamlAuthenticationStatement">
      <summary>Represents a claim for a <see cref="T:System.IdentityModel.Tokens.SamlSecurityToken" /> security token that asserts that the subject was authenticated by a particular means at a particular time.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IdentityModel.Tokens.SamlAuthenticationStatement.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.IdentityModel.Tokens.SamlAuthenticationStatement" /> class. </summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IdentityModel.Tokens.SamlAuthenticationStatement.#ctor(System.IdentityModel.Tokens.SamlSubject,System.String,System.DateTime,System.String,System.String,System.Collections.Generic.IEnumerable{System.IdentityModel.Tokens.SamlAuthorityBinding})">
      <summary>Initializes a new instance of the <see cref="T:System.IdentityModel.Tokens.SamlAuthenticationStatement" /> class using the specified authentication details. </summary>
      <param name="samlSubject">A <see cref="T:System.IdentityModel.Tokens.SamlSubject" /> that represents the subject of the claim.</param>
      <param name="authenticationMethod">A URI reference that specifies how the subject was authenticated.</param>
      <param name="authenticationInstant">A <see cref="T:System.DateTime" /> that specifies the instant in time at which the subject was authenticated.</param>
      <param name="dnsAddress">The DNS domain name in which the computer that authenticated the subject resides.</param>
      <param name="ipAddress">The IP address of the computer that authenticated the subject.</param>
      <param name="authorityBindings">An <see cref="T:System.Collections.Generic.IEnumerable`1" /> of type <see cref="T:System.IdentityModel.Tokens.SamlAuthorityBinding" /> that contains additional information about the subject.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="authorityBindings" /> contains a member that is null.</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IdentityModel.Tokens.SamlAuthenticationStatement.AddClaimsToList(System.Collections.Generic.IList{System.IdentityModel.Claims.Claim})">
      <summary>Adds a claim based on the properties of this instance to the specified collection of claims.</summary>
      <param name="claims">An <see cref="T:System.Collections.Generic.IList`1" /> of type <see cref="T:System.IdentityModel.Claims.Claim" /> that contains the set of claims to add to.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="claims" /> is null.</exception>
    </member>
    <member name="P:System.IdentityModel.Tokens.SamlAuthenticationStatement.AuthenticationInstant">
      <summary>Gets or sets the instant in time at which the subject was authenticated.</summary>
      <returns>A <see cref="T:System.DateTime" /> that specifies the instant in time at which the subject was authenticated.Exception typeCondition<see cref="T:System.InvalidOperationException" />The <see cref="P:System.IdentityModel.Tokens.SamlAuthenticationStatement.AuthenticationInstant" /> property is set and the <see cref="P:System.IdentityModel.Tokens.SamlAuthenticationStatement.IsReadOnly" /> property is true.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.IdentityModel.Tokens.SamlAuthenticationStatement.AuthenticationMethod">
      <summary>Gets or sets the method used to authenticate the subject.</summary>
      <returns>The method used to authenticate the subject. The default value is urn:oasis:names:tc:SAML:1.0:am:unspecified.</returns>
      <exception cref="T:System.InvalidOperationException">The <see cref="P:System.IdentityModel.Tokens.SamlAuthenticationStatement.AuthenticationMethod" />  property is set and the <see cref="P:System.IdentityModel.Tokens.SamlAuthenticationStatement.IsReadOnly" /> property is true.</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.IdentityModel.Tokens.SamlAuthenticationStatement.AuthorityBindings">
      <summary>Gets additional information about the subject.</summary>
      <returns>An <see cref="T:System.Collections.Generic.IList`1" /> of type <see cref="T:System.IdentityModel.Tokens.SamlAuthorityBinding" /> that contains additional information about the subject.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.IdentityModel.Tokens.SamlAuthenticationStatement.ClaimType">
      <summary>Gets the type of security claim.</summary>
      <returns>A <see cref="T:System.IdentityModel.Claims.ClaimTypes" /> that specifies the type of security claim. Always http://schemas.microsoft.com/mb/2005/09/ClaimType/SamlAuthentication.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.IdentityModel.Tokens.SamlAuthenticationStatement.DnsAddress">
      <summary>Gets or sets the DNS domain name in which the computer that authenticated the subject resides.</summary>
      <returns>The DNS domain name in which the computer that authenticated the subject resides.</returns>
      <exception cref="T:System.InvalidOperationException">The <see cref="P:System.IdentityModel.Tokens.SamlAuthenticationStatement.DnsAddress" /> property is set and the <see cref="P:System.IdentityModel.Tokens.SamlAuthenticationStatement.IsReadOnly" /> property is true.</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.IdentityModel.Tokens.SamlAuthenticationStatement.IPAddress">
      <summary>Gets or sets the IP address of the computer that authenticated the subject.</summary>
      <returns>The IP address of the computer that authenticated the subject.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.IdentityModel.Tokens.SamlAuthenticationStatement.IsReadOnly">
      <summary>Gets a value that indicates whether the properties of this instance are read-only.</summary>
      <returns>true if the properties of this instance are read-only; otherwise, false. The default is false.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IdentityModel.Tokens.SamlAuthenticationStatement.MakeReadOnly">
      <summary>Causes this instance to be read-only.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IdentityModel.Tokens.SamlAuthenticationStatement.ReadXml(System.Xml.XmlDictionaryReader,System.IdentityModel.Tokens.SamlSerializer,System.IdentityModel.Selectors.SecurityTokenSerializer,System.IdentityModel.Selectors.SecurityTokenResolver)">
      <summary>Reads the SAML authentication statement from the specified XML reader.</summary>
      <param name="reader">A <see cref="T:System.Xml.XmlDictionaryReader" /> to read the SAML authentication statement.</param>
      <param name="samlSerializer">A <see cref="T:System.IdentityModel.Tokens.SamlSerializer" /> that is capable of reading XML elements in the SAML authentication statement that is defined in the SAML specification.</param>
      <param name="keyInfoSerializer">A <see cref="T:System.IdentityModel.Selectors.SecurityTokenSerializer" /> that reads the KeyInfo clause of the digital signature.</param>
      <param name="outOfBandTokenResolver">A <see cref="T:System.IdentityModel.Selectors.SecurityTokenResolver" /> that determines the security token that created the digital signature.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="reader" /> is null-or-<paramref name="samlSerializer" /> is null</exception>
      <exception cref="T:System.IdentityModel.Tokens.SecurityTokenException">
        <paramref name="reader" /> refers to an XML element that does not contain the AuthenticationInstant and AuthenticationMethod attributes.-or-<paramref name="reader" /> refers to an XML element that does not have a &lt;saml:Subject&gt; child element. </exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IdentityModel.Tokens.SamlAuthenticationStatement.WriteXml(System.Xml.XmlDictionaryWriter,System.IdentityModel.Tokens.SamlSerializer,System.IdentityModel.Selectors.SecurityTokenSerializer)">
      <summary>Writes the SAML authentication statement into the specified XML serializer.</summary>
      <param name="writer">A <see cref="T:System.Xml.XmlDictionaryWriter" /> to write the SAML authentication statement.</param>
      <param name="samlSerializer">A <see cref="T:System.IdentityModel.Tokens.SamlSerializer" /> that is capable of writing XML elements in a SAML assertion.</param>
      <param name="keyInfoSerializer">A <see cref="T:System.IdentityModel.Selectors.SecurityTokenSerializer" /> that is capable of writing KeyInfo clauses.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="writer" /> is null-or-<paramref name="samlSerializer" /> is null.</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="T:System.IdentityModel.Tokens.SamlAuthorityBinding">
      <summary>Specifies how to retrieve additional information about the subject of a <see cref="T:System.IdentityModel.Tokens.SamlSecurityToken" /> security token.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IdentityModel.Tokens.SamlAuthorityBinding.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.IdentityModel.Tokens.SamlAuthorityBinding" /> class.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IdentityModel.Tokens.SamlAuthorityBinding.#ctor(System.Xml.XmlQualifiedName,System.String,System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.IdentityModel.Tokens.SamlAuthorityBinding" /> class using the specified query types, protocol binding, and SAML authority location.</summary>
      <param name="authorityKind">An <see cref="T:System.Xml.XmlQualifiedName" /> that represents the type of queries that the SAML authority that has additional information about the subject responds to.</param>
      <param name="binding">A URI reference that identifies the SAML protocol binding to use when communicating with the SAML authority that has additional information about the subject.</param>
      <param name="location">A URI reference that describes how to locate and communicate with the SAML authority that has additional information about the subject.</param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.IdentityModel.Tokens.SamlAuthorityBinding.AuthorityKind">
      <summary>Gets or sets the type of queries that the SAML authority that has additional information about the subject, responds to.</summary>
      <returns>An <see cref="T:System.Xml.XmlQualifiedName" /> that represents the type of queries that the SAML authority that has additional information about the subject, responds to.</returns>
      <exception cref="T:System.InvalidOperationException">The <see cref="P:System.IdentityModel.Tokens.SamlAuthorityBinding.AuthorityKind" />  property is set and the <see cref="P:System.IdentityModel.Tokens.SamlAuthorityBinding.IsReadOnly" /> property is true.</exception>
      <exception cref="T:System.ArgumentNullException">The <see cref="P:System.IdentityModel.Tokens.SamlAuthorityBinding.AuthorityKind" />  property is set to null.</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.IdentityModel.Tokens.SamlAuthorityBinding.Binding">
      <summary>Gets or sets the SAML protocol binding to use when communicating with the SAML authority that has additional information that has additional information about the subject.</summary>
      <returns>A URI reference that identifies the SAML protocol binding to use when communicating with the SAML authority that has additional information that has additional information about the subject.</returns>
      <exception cref="T:System.InvalidOperationException">The <see cref="P:System.IdentityModel.Tokens.SamlAuthorityBinding.Binding" /> property is set and the <see cref="P:System.IdentityModel.Tokens.SamlAuthorityBinding.IsReadOnly" /> property is true.</exception>
      <exception cref="T:System.ArgumentNullException">The <see cref="P:System.IdentityModel.Tokens.SamlAuthorityBinding.Binding" /> property is set to null.</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.IdentityModel.Tokens.SamlAuthorityBinding.IsReadOnly">
      <summary>Gets a value indicating whether the properties of this instance are read-only.</summary>
      <returns>true if the properties of this instance are read-only; otherwise, false. The default is false.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.IdentityModel.Tokens.SamlAuthorityBinding.Location">
      <summary>Gets or sets how to locate and communicate with the SAML authority that has additional information that has additional information about the subject.</summary>
      <returns>A URI reference that describes how to locate and communicate with the SAML authority that has additional information about the subject.</returns>
      <exception cref="T:System.InvalidOperationException">The <see cref="P:System.IdentityModel.Tokens.SamlAuthorityBinding.Location" /> property is set and the <see cref="P:System.IdentityModel.Tokens.SamlAuthorityBinding.IsReadOnly" /> property is true.</exception>
      <exception cref="T:System.ArgumentNullException">The <see cref="P:System.IdentityModel.Tokens.SamlAuthorityBinding.Location" /> property is set to null.</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IdentityModel.Tokens.SamlAuthorityBinding.MakeReadOnly">
      <summary>Causes this instance to be read-only.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IdentityModel.Tokens.SamlAuthorityBinding.ReadXml(System.Xml.XmlDictionaryReader,System.IdentityModel.Tokens.SamlSerializer,System.IdentityModel.Selectors.SecurityTokenSerializer,System.IdentityModel.Selectors.SecurityTokenResolver)">
      <summary>Reads the &lt;AuthorityBinding&gt; element from the specified XML reader.</summary>
      <param name="reader">A <see cref="T:System.Xml.XmlDictionaryReader" /> to read the &lt;AuthorityBinding&gt; element.</param>
      <param name="samlSerializer">A <see cref="T:System.IdentityModel.Tokens.SamlSerializer" /> that is capable of reading XML elements in the SAML assertion that are defined in the SAML specification.</param>
      <param name="keyInfoSerializer">A <see cref="T:System.IdentityModel.Selectors.SecurityTokenSerializer" /> that reads the KeyInfo clause of the digital signature.</param>
      <param name="outOfBandTokenResolver">A <see cref="T:System.IdentityModel.Selectors.SecurityTokenResolver" /> that determines the security token that created the digital signature.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="reader" /> is null-or-<paramref name="samlSerializer" /> is null</exception>
      <exception cref="T:System.IdentityModel.Tokens.SecurityTokenException">
        <paramref name="reader" /> does not refer to a SAML assertion</exception>
      <exception cref="T:System.IdentityModel.Tokens.SecurityTokenException">The &lt;AuthorityBinding&gt; element does not have one of the AuthorityKind, Location, or Binding attributes.</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IdentityModel.Tokens.SamlAuthorityBinding.WriteXml(System.Xml.XmlDictionaryWriter,System.IdentityModel.Tokens.SamlSerializer,System.IdentityModel.Selectors.SecurityTokenSerializer)">
      <summary>Writes the &lt;AuthorityBinding&gt; element into the specified XML serializer.</summary>
      <param name="writer">A <see cref="T:System.Xml.XmlDictionaryWriter" /> to write the &lt;AuthorityBinding&gt; element.</param>
      <param name="samlSerializer">A <see cref="T:System.IdentityModel.Tokens.SamlSerializer" /> that is capable of writing XML elements in the SAML assertion that is defined in the SAML specification.</param>
      <param name="keyInfoSerializer">A <see cref="T:System.IdentityModel.Selectors.SecurityTokenSerializer" /> that is capable of writing KeyInfo clauses.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="writer" /> is null-or-<paramref name="samlSerializer" /> is null</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="T:System.IdentityModel.Tokens.SamlAuthorizationDecisionClaimResource">
      <summary>Represents a claim for a <see cref="T:System.IdentityModel.Tokens.SamlSecurityToken" /> security token that asserts an authorization decision regarding access to a specific resource.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IdentityModel.Tokens.SamlAuthorizationDecisionClaimResource.#ctor(System.String,System.IdentityModel.Tokens.SamlAccessDecision,System.String,System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.IdentityModel.Tokens.SamlAuthorizationDecisionClaimResource" /> class using the specified resource the subject is seeking access to, the authorization decision regarding the resource, the action sought on the resource, and the XML namespace in which the action is defined. </summary>
      <param name="resource">The resource the subject is seeking access to.</param>
      <param name="accessDecision">The authorization decision rendered by the SAML authority regarding the access to the resource by the subject.</param>
      <param name="actionNamespace">The XML namespace in which the action specified in the <paramref name="action" /> parameter is defined.</param>
      <param name="actionName">The action sought by the subject on the resource specified in the <paramref name="resource" /> parameter.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="resource" /> is null.-or-<paramref name="actionName" /> is null.</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.IdentityModel.Tokens.SamlAuthorizationDecisionClaimResource.AccessDecision">
      <summary>Gets the authorization decision rendered by the SAML authority regarding the access to the resource by the subject.</summary>
      <returns>The authorization decision rendered by the SAML authority regarding the access to the resource by the subject.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.IdentityModel.Tokens.SamlAuthorizationDecisionClaimResource.ActionName">
      <summary>Gets the action sought by the subject on the resource specified in the <see cref="P:System.IdentityModel.Tokens.SamlAuthorizationDecisionClaimResource.Resource" /> property.</summary>
      <returns>The action sought by the subject on the resource specified in the <see cref="P:System.IdentityModel.Tokens.SamlAuthorizationDecisionClaimResource.Resource" /> property.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.IdentityModel.Tokens.SamlAuthorizationDecisionClaimResource.ActionNamespace">
      <summary>Gets the XML namespace in which the action specified in the <see cref="P:System.IdentityModel.Tokens.SamlAuthorizationDecisionClaimResource.ActionName" /> property is defined.</summary>
      <returns>The XML namespace in which the action specified in the <see cref="P:System.IdentityModel.Tokens.SamlAuthorizationDecisionClaimResource.ActionName" /> property is defined.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IdentityModel.Tokens.SamlAuthorizationDecisionClaimResource.Equals(System.Object)">
      <summary>Returns a value that indicates whether the instance is equal to the specified object.</summary>
      <returns>true if <paramref name="obj" /> is a <see cref="T:System.IdentityModel.Tokens.SamlAuthorizationDecisionClaimResource" /> and has the same value as this instance; otherwise, false.</returns>
      <param name="obj">An object to compare to this instance.</param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IdentityModel.Tokens.SamlAuthorizationDecisionClaimResource.GetHashCode">
      <summary>Returns the hash code for the <see cref="T:System.IdentityModel.Tokens.SamlAuthorizationDecisionClaimResource" />.</summary>
      <returns>A hash code for the <see cref="T:System.IdentityModel.Tokens.SamlAuthorizationDecisionClaimResource" />.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.IdentityModel.Tokens.SamlAuthorizationDecisionClaimResource.Resource">
      <summary>Gets the resource the subject is seeking access to.</summary>
      <returns>A URI that represents the resource the subject is seeking access to.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="T:System.IdentityModel.Tokens.SamlAuthorizationDecisionStatement">
      <summary>Represents a claim for a <see cref="T:System.IdentityModel.Tokens.SamlSecurityToken" /> security token that asserts that an authorization decision regarding access by the subject to the specified resource has been made.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IdentityModel.Tokens.SamlAuthorizationDecisionStatement.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.IdentityModel.Tokens.SamlAuthorizationDecisionStatement" /> class. </summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IdentityModel.Tokens.SamlAuthorizationDecisionStatement.#ctor(System.IdentityModel.Tokens.SamlSubject,System.String,System.IdentityModel.Tokens.SamlAccessDecision,System.Collections.Generic.IEnumerable{System.IdentityModel.Tokens.SamlAction})">
      <summary>Initializes a new instance of the <see cref="T:System.IdentityModel.Tokens.SamlAuthorizationDecisionStatement" /> class. using the specified subject, resource, authorization decision, and the actions sought by the subject on the resource. </summary>
      <param name="samlSubject">A <see cref="T:System.IdentityModel.Tokens.SamlSubject" /> that represents the subject of the claim. Sets the <see cref="P:System.IdentityModel.Tokens.SamlSubjectStatement.SamlSubject" /> property.</param>
      <param name="resource">A URI reference that identifies the resource to which access is sought. Sets the <see cref="P:System.IdentityModel.Tokens.SamlAuthorizationDecisionStatement.Resource" /> property.</param>
      <param name="accessDecision">A <see cref="T:System.IdentityModel.Tokens.SamlAccessDecision" /> that specifies the authorization decision rendered by the SAML authority with respect to access by the subject to the specified resource. Sets the <see cref="P:System.IdentityModel.Tokens.SamlAuthorizationDecisionStatement.AccessDecision" /> property.</param>
      <param name="samlActions">An <see cref="T:System.Collections.Generic.IEnumerable`1" /> of type <see cref="T:System.IdentityModel.Tokens.SamlAction" /> that specifies the set of actions that the subject is authorized to perform on the resource. Sets the <see cref="P:System.IdentityModel.Tokens.SamlAuthorizationDecisionStatement.SamlActions" /> property.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="samlActions" /> is null.-or-<paramref name="samlActions" /> contains a member that is null.-or-<paramref name="samlSubject" /> is null.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="authorityBindings" /> contains a member that is null.-or-<paramref name="resource" /> is null or empty.</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IdentityModel.Tokens.SamlAuthorizationDecisionStatement.#ctor(System.IdentityModel.Tokens.SamlSubject,System.String,System.IdentityModel.Tokens.SamlAccessDecision,System.Collections.Generic.IEnumerable{System.IdentityModel.Tokens.SamlAction},System.IdentityModel.Tokens.SamlEvidence)">
      <summary>Initializes a new instance of the <see cref="T:System.IdentityModel.Tokens.SamlAuthorizationDecisionStatement" /> class. using the specified subject, resource, authorization decision, and the actions sought by the subject on the resource.</summary>
      <param name="samlSubject">A <see cref="T:System.IdentityModel.Tokens.SamlSubject" /> that represents the subject of the claim. Sets the <see cref="P:System.IdentityModel.Tokens.SamlSubjectStatement.SamlSubject" /> property.</param>
      <param name="resource">A URI reference that identifies the resource to which access is sought. Sets the <see cref="P:System.IdentityModel.Tokens.SamlAuthorizationDecisionStatement.Resource" /> property.</param>
      <param name="accessDecision">A <see cref="T:System.IdentityModel.Tokens.SamlAccessDecision" /> that specifies the authorization decision rendered by the SAML authority with respect to access by the subject to the specified resource. Sets the <see cref="P:System.IdentityModel.Tokens.SamlAuthorizationDecisionStatement.AccessDecision" /> property.</param>
      <param name="samlActions">An <see cref="T:System.Collections.Generic.IEnumerable`1" /> of type <see cref="T:System.IdentityModel.Tokens.SamlAction" /> that specifies the set of actions that the subject is authorized to perform on the resource. Sets the <see cref="P:System.IdentityModel.Tokens.SamlAuthorizationDecisionStatement.SamlActions" /> property.</param>
      <param name="samlEvidence">A <see cref="T:System.IdentityModel.Tokens.SamlEvidence" /> that contains a set of SAML assertions that the SAML authority relied on to render the authorization decision. Sets the <see cref="P:System.IdentityModel.Tokens.SamlAuthorizationDecisionStatement.Evidence" /> property.</param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.IdentityModel.Tokens.SamlAuthorizationDecisionStatement.AccessDecision">
      <summary>Gets or sets the authorization decision rendered by the SAML authority with respect to access by the subject to the specified resource.</summary>
      <returns>One of the <see cref="T:System.IdentityModel.Tokens.SamlAccessDecision" /> values that specify the authorization decision rendered by the SAML authority with respect to access by the subject to the specified resource.Exception typeCondition<see cref="T:System.InvalidOperationException" />The <see cref="P:System.IdentityModel.Tokens.SamlAuthorizationDecisionStatement.AccessDecision" />   property is set and the <see cref="P:System.IdentityModel.Tokens.SamlAuthorizationDecisionStatement.IsReadOnly" /> property is true.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IdentityModel.Tokens.SamlAuthorizationDecisionStatement.AddClaimsToList(System.Collections.Generic.IList{System.IdentityModel.Claims.Claim})">
      <summary>Adds claims based on the properties of this instance to the specified collection of claims.</summary>
      <param name="claims">An <see cref="T:System.Collections.Generic.IList`1" /> of type <see cref="T:System.IdentityModel.Claims.Claim" /> that contains the set of claims to add to.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="claims" /> is null.</exception>
    </member>
    <member name="P:System.IdentityModel.Tokens.SamlAuthorizationDecisionStatement.ClaimType">
      <summary>Gets the type of security claim.</summary>
      <returns>The type of security claim. Always http://schemas.microsoft.com/mb/2005/09/ClaimType/SamlAuthorizationDecision.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.IdentityModel.Tokens.SamlAuthorizationDecisionStatement.Evidence">
      <summary>Gets or sets the evidence that the SAML authority relied on to render the authorization decision.</summary>
      <returns>A <see cref="T:System.IdentityModel.Tokens.SamlEvidence" /> that contains a set of SAML assertions that the SAML authority relied on to render the authorization decision.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.IdentityModel.Tokens.SamlAuthorizationDecisionStatement.IsReadOnly">
      <summary>Gets a value that indicates whether the properties of this instance are read-only.</summary>
      <returns>true if the properties of this instance are read-only; otherwise, false. The default is false.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IdentityModel.Tokens.SamlAuthorizationDecisionStatement.MakeReadOnly">
      <summary>Causes this instance to be read-only.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IdentityModel.Tokens.SamlAuthorizationDecisionStatement.ReadXml(System.Xml.XmlDictionaryReader,System.IdentityModel.Tokens.SamlSerializer,System.IdentityModel.Selectors.SecurityTokenSerializer,System.IdentityModel.Selectors.SecurityTokenResolver)">
      <summary>Reads the SAML authorization statement from the specified XML reader.</summary>
      <param name="reader">A <see cref="T:System.Xml.XmlDictionaryReader" /> to read the SAML authorization statement.</param>
      <param name="samlSerializer">A <see cref="T:System.IdentityModel.Tokens.SamlSerializer" /> that is capable of reading XML elements in the SAML authorization statement that is defined in the SAML specification.</param>
      <param name="keyInfoSerializer">A <see cref="T:System.IdentityModel.Selectors.SecurityTokenSerializer" /> that reads the KeyInfo clause of the digital signature.</param>
      <param name="outOfBandTokenResolver">A <see cref="T:System.IdentityModel.Selectors.SecurityTokenResolver" /> that determines the security token that created the digital signature.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="reader" /> is null.-or-<paramref name="samlSerializer" /> is null.</exception>
      <exception cref="T:System.IdentityModel.Tokens.SecurityTokenException">
        <paramref name="reader" /> refers to an XML element that does not contain the Resource and Decision attributes.-or-<paramref name="reader" /> refers to an XML element that does not have &lt;saml:Subject&gt;, &lt;saml:Evidence&gt;, and &lt;saml:Action&gt; child elements. </exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.IdentityModel.Tokens.SamlAuthorizationDecisionStatement.Resource">
      <summary>The resource to which access is sought by the subject of the <see cref="T:System.IdentityModel.Tokens.SamlSecurityToken" /> security token.</summary>
      <returns>A URI reference that identifies the resource to which access is sought. </returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.IdentityModel.Tokens.SamlAuthorizationDecisionStatement.SamlActions">
      <summary>Gets the set of actions that the subject is authorized to perform on the resource.</summary>
      <returns>An <see cref="T:System.Collections.Generic.IList`1" /> of type <see cref="T:System.IdentityModel.Tokens.SamlAction" /> that specifies the set of actions that the subject is authorized to perform on the resource.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IdentityModel.Tokens.SamlAuthorizationDecisionStatement.WriteXml(System.Xml.XmlDictionaryWriter,System.IdentityModel.Tokens.SamlSerializer,System.IdentityModel.Selectors.SecurityTokenSerializer)">
      <summary>Writes the SAML authorization statement into the specified XML serializer.</summary>
      <param name="writer">A <see cref="T:System.Xml.XmlDictionaryWriter" /> to write the SAML authorization statement.</param>
      <param name="samlSerializer">A <see cref="T:System.IdentityModel.Tokens.SamlSerializer" /> that is capable of writing XML elements in a SAML assertion.</param>
      <param name="keyInfoSerializer">A <see cref="T:System.IdentityModel.Selectors.SecurityTokenSerializer" /> that is capable of writing KeyInfo clauses.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="writer" /> is null.-or-<paramref name="samlSerializer" /> is null.</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="T:System.IdentityModel.Tokens.SamlCondition">
      <summary>Represents a condition that must be taken into account when assessing the validity of a SAML assertion.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IdentityModel.Tokens.SamlCondition.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.IdentityModel.Tokens.SamlCondition" /> class. </summary>
    </member>
    <member name="P:System.IdentityModel.Tokens.SamlCondition.IsReadOnly">
      <summary>When overridden in a derived class, gets a value indicating whether the properties of this instance are read-only.</summary>
      <returns>true if the properties of this instance are read-only; otherwise, false. The default is false.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IdentityModel.Tokens.SamlCondition.MakeReadOnly">
      <summary>When overridden in a derived class, causes this instance to be read-only.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IdentityModel.Tokens.SamlCondition.ReadXml(System.Xml.XmlDictionaryReader,System.IdentityModel.Tokens.SamlSerializer,System.IdentityModel.Selectors.SecurityTokenSerializer,System.IdentityModel.Selectors.SecurityTokenResolver)">
      <summary>When overridden in a derived class, reads the condition from the specified XML reader.</summary>
      <param name="reader">A <see cref="T:System.Xml.XmlDictionaryReader" /> to read the condition.</param>
      <param name="samlSerializer">A <see cref="T:System.IdentityModel.Tokens.SamlSerializer" /> that is capable of reading XML elements in the SAML authorization statement that is defined in the SAML specification.</param>
      <param name="keyInfoSerializer">A <see cref="T:System.IdentityModel.Selectors.SecurityTokenSerializer" /> that reads the KeyInfo clause of the digital signature.</param>
      <param name="outOfBandTokenResolver">A <see cref="T:System.IdentityModel.Selectors.SecurityTokenResolver" /> that determines the security token that created the digital signature.</param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IdentityModel.Tokens.SamlCondition.WriteXml(System.Xml.XmlDictionaryWriter,System.IdentityModel.Tokens.SamlSerializer,System.IdentityModel.Selectors.SecurityTokenSerializer)">
      <summary>When overridden in a derived class, writes the condition into the specified XML serializer.</summary>
      <param name="writer">A <see cref="T:System.Xml.XmlDictionaryWriter" /> to write the condition.</param>
      <param name="samlSerializer">A <see cref="T:System.IdentityModel.Tokens.SamlSerializer" /> that is capable of writing XML elements in a SAML assertion.</param>
      <param name="keyInfoSerializer">A <see cref="T:System.IdentityModel.Selectors.SecurityTokenSerializer" /> that is capable of writing KeyInfo clauses.</param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="T:System.IdentityModel.Tokens.SamlConditions">
      <summary>Represents a set of conditions that must be taken into account when assessing the validity of a SAML assertion.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IdentityModel.Tokens.SamlConditions.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.IdentityModel.Tokens.SamlConditions" /> class. </summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IdentityModel.Tokens.SamlConditions.#ctor(System.DateTime,System.DateTime)">
      <summary>Initializes a new instance of the <see cref="T:System.IdentityModel.Tokens.SamlConditions" /> class using the specified timeframe that the SAML assertion is valid.</summary>
      <param name="notBefore">A <see cref="T:System.DateTime" /> that specifies the earliest instant in time when the SAML assertion is valid. Sets the <see cref="P:System.IdentityModel.Tokens.SamlConditions.NotBefore" /> property.</param>
      <param name="notOnOrAfter">A <see cref="T:System.DateTime" /> that specifies the instant in time when the SAML assertion expires. Sets the <see cref="P:System.IdentityModel.Tokens.SamlConditions.NotOnOrAfter" /> property.</param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IdentityModel.Tokens.SamlConditions.#ctor(System.DateTime,System.DateTime,System.Collections.Generic.IEnumerable{System.IdentityModel.Tokens.SamlCondition})">
      <summary>Initializes a new instance of the <see cref="T:System.IdentityModel.Tokens.SamlConditions" /> class using the specified timeframe and conditions when the SAML assertion is valid.</summary>
      <param name="notBefore">A <see cref="T:System.DateTime" /> that specifies the earliest instant in time when the SAML assertion is valid. Sets the <see cref="P:System.IdentityModel.Tokens.SamlConditions.NotBefore" /> property.</param>
      <param name="notOnOrAfter">A <see cref="T:System.DateTime" /> that specifies the instant in time when the SAML assertion expires. Sets the <see cref="P:System.IdentityModel.Tokens.SamlConditions.NotOnOrAfter" /> property.</param>
      <param name="conditions">An <see cref="T:System.Collections.Generic.IEnumerable`1" /> of type <see cref="T:System.IdentityModel.Tokens.SamlCondition" /> that specifies a set of conditions that a recipient of a SAML assertion must take into account in assessing the validity of the assertion. Sets the <see cref="P:System.IdentityModel.Tokens.SamlConditions.Conditions" /> property.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="conditions" /> contains a member that is null.</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.IdentityModel.Tokens.SamlConditions.Conditions">
      <summary>Gets the set of conditions that must be taken into consideration when assessing the validity of a SAML assertion.</summary>
      <returns>An <see cref="T:System.Collections.Generic.IEnumerable`1" /> of type <see cref="T:System.IdentityModel.Tokens.SamlCondition" /> that specifies a set of conditions that a recipient of a SAML assertion must take into account when assessing the validity of the assertion.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.IdentityModel.Tokens.SamlConditions.IsReadOnly">
      <summary>Gets a value that indicates whether the properties of this instance are read-only.</summary>
      <returns>true if the properties of this instance are read-only; otherwise, false. The default is false.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IdentityModel.Tokens.SamlConditions.MakeReadOnly">
      <summary>Causes this instance to be read-only.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.IdentityModel.Tokens.SamlConditions.NotBefore">
      <summary>Gets the earliest instant in time when the SAML assertion is valid. </summary>
      <returns>A <see cref="T:System.DateTime" /> that specifies the earliest instant in time when the SAML assertion is valid. </returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.IdentityModel.Tokens.SamlConditions.NotOnOrAfter">
      <summary>Gets the instant in time when the SAML assertion expires.</summary>
      <returns>A <see cref="T:System.DateTime" /> that specifies the instant in time when the SAML assertion expires. </returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IdentityModel.Tokens.SamlConditions.ReadXml(System.Xml.XmlDictionaryReader,System.IdentityModel.Tokens.SamlSerializer,System.IdentityModel.Selectors.SecurityTokenSerializer,System.IdentityModel.Selectors.SecurityTokenResolver)">
      <summary>Reads the &lt;saml:Conditions&gt; element from the specified XML reader.</summary>
      <param name="reader">An <see cref="T:System.Xml.XmlDictionaryReader" /> to read the &lt;saml:Conditions&gt; element.</param>
      <param name="samlSerializer">A <see cref="T:System.IdentityModel.Tokens.SamlSerializer" /> that is capable of reading XML elements in the SAML authorization statement that is defined in the SAML specification.</param>
      <param name="keyInfoSerializer">A <see cref="T:System.IdentityModel.Selectors.SecurityTokenSerializer" /> that reads the KeyInfo clause of the digital signature.</param>
      <param name="outOfBandTokenResolver">A <see cref="T:System.IdentityModel.Selectors.SecurityTokenResolver" /> that determines the security token that created the digital signature.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="reader" /> is null-or-<paramref name="samlSerializer" /> is null.</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IdentityModel.Tokens.SamlConditions.WriteXml(System.Xml.XmlDictionaryWriter,System.IdentityModel.Tokens.SamlSerializer,System.IdentityModel.Selectors.SecurityTokenSerializer)">
      <summary>Writes the &lt;saml:Conditions&gt; element into the specified XML serializer.</summary>
      <param name="writer">A <see cref="T:System.Xml.XmlDictionaryWriter" /> to write the &lt;saml:Conditions&gt; element.</param>
      <param name="samlSerializer">A <see cref="T:System.IdentityModel.Tokens.SamlSerializer" /> that is capable of writing XML elements in a SAML assertion.</param>
      <param name="keyInfoSerializer">A <see cref="T:System.IdentityModel.Selectors.SecurityTokenSerializer" /> that is capable of writing KeyInfo clauses.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="writer" /> is null-or-<paramref name="samlSerializer" /> is null.</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="T:System.IdentityModel.Tokens.SamlConstants">
      <summary>Represents a set of constants that are used to set properties of a <see cref="T:System.IdentityModel.Tokens.SamlSecurityToken" /> security token. This class cannot be inherited. </summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.IdentityModel.Tokens.SamlConstants.EmailName">
      <summary>Gets the name of the attribute used to specify that the subject of a SAML assertion is specified as an e-mail address. This field is constant.</summary>
      <returns>The name of the attribute used to specify that the subject of a SAML assertion is specified as an e-mail address. This field is constant.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.IdentityModel.Tokens.SamlConstants.EmailNamespace">
      <summary>Gets a URI that states the subject of a SAML assertion is specified as an e-mail address. This field is constant.</summary>
      <returns>A URI that states the subject of a SAML assertion is specified as an e-mail address.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.IdentityModel.Tokens.SamlConstants.HolderOfKey">
      <summary>Gets a URI that specifies that the recipient of a SAML security token should use the &lt;ds:KeyInfo&gt; element to confirm that the SOAP message was sent by the SAML assertion's subject. This field is constant.</summary>
      <returns>A URI that specifies that the recipient of a <see cref="T:System.IdentityModel.Tokens.SamlSecurityToken" /> security token should use the &lt;ds:KeyInfo&gt; element to confirm that the SOAP message was sent by the SAML assertion's subject.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.IdentityModel.Tokens.SamlConstants.MajorVersionValue">
      <summary>Gets the major version of the SAML specification that <see cref="T:System.IdentityModel.Tokens.SamlSecurityToken" /> security tokens conform to. This field is constant.</summary>
      <returns>The major version of the SAML specification that <see cref="T:System.IdentityModel.Tokens.SamlSecurityToken" /> security tokens conform to. Always 1.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.IdentityModel.Tokens.SamlConstants.MinorVersionValue">
      <summary>Gets the minor version of the SAML specification used by <see cref="T:System.IdentityModel.Tokens.SamlSecurityToken" /> security tokens. This field is constant.</summary>
      <returns>The minor version of the SAML specification. Always 1.The combination of the <see cref="P:System.IdentityModel.Tokens.SamlConstants.MajorVersionValue" /> and <see cref="P:System.IdentityModel.Tokens.SamlConstants.MinorVersionValue" /> properties comprises the version of the SAML specification that <see cref="T:System.IdentityModel.Tokens.SamlSecurityToken" /> security tokens conform to.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.IdentityModel.Tokens.SamlConstants.Namespace">
      <summary>Gets the XML namespace in which SAML assertions are defined. This field is constant.</summary>
      <returns>The XML namespace in which SAML assertions are defined.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.IdentityModel.Tokens.SamlConstants.SenderVouches">
      <summary>Gets a URI that specifies that additional information is not available for a recipient of a SAML security token to confirm that the SOAP message was sent by the SAML assertion's subject. This field is constant.</summary>
      <returns>A URI that specifies that additional information is not available for a recipient of a SAML security token to confirm that the SOAP message was sent by the SAML assertion's subject.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.IdentityModel.Tokens.SamlConstants.UserName">
      <summary>Gets the name of the attribute used to specify that the subject of a SAML assertion is specified as a Windows domain account. This field is constant.</summary>
      <returns>The name of the attribute used to specify that the subject of a SAML assertion is specified as a Windows domain account. This field is constant.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.IdentityModel.Tokens.SamlConstants.UserNameNamespace">
      <summary>Gets a URI that states the subject of a SAML assertion is specified using a Windows domain account. This field is constant.</summary>
      <returns>A URI that states the subject of a SAML assertion is specified using a Windows domain account.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="T:System.IdentityModel.Tokens.SamlDoNotCacheCondition">
      <summary>Represents a condition that must be taken into account when assessing the validity of a SAML assertion.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IdentityModel.Tokens.SamlDoNotCacheCondition.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.IdentityModel.Tokens.SamlDoNotCacheCondition" /> class. </summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.IdentityModel.Tokens.SamlDoNotCacheCondition.IsReadOnly">
      <summary>Gets a value indicating whether the properties of this instance are read-only.</summary>
      <returns>true if the properties of this instance are read-only; otherwise, false. The default is false.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IdentityModel.Tokens.SamlDoNotCacheCondition.MakeReadOnly">
      <summary>Causes this instance to be read-only.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IdentityModel.Tokens.SamlDoNotCacheCondition.ReadXml(System.Xml.XmlDictionaryReader,System.IdentityModel.Tokens.SamlSerializer,System.IdentityModel.Selectors.SecurityTokenSerializer,System.IdentityModel.Selectors.SecurityTokenResolver)">
      <summary>Reads the &lt;saml:DoNotCacheCondition&gt; element from the specified XML reader.</summary>
      <param name="reader">A <see cref="T:System.Xml.XmlDictionaryReader" /> to read the &lt;saml:DoNotCacheCondition&gt;.</param>
      <param name="samlSerializer">A <see cref="T:System.IdentityModel.Tokens.SamlSerializer" /> that is capable of reading XML elements in the SAML authorization statement that is defined in the SAML specification.</param>
      <param name="keyInfoSerializer">A <see cref="T:System.IdentityModel.Selectors.SecurityTokenSerializer" /> that reads the KeyInfo clause of the digital signature.</param>
      <param name="outOfBandTokenResolver">A <see cref="T:System.IdentityModel.Selectors.SecurityTokenResolver" /> that determines the security token that created the digital signature.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="reader" /> is null-or-<paramref name="samlSerializer" /> is null</exception>
      <exception cref="T:System.IdentityModel.Tokens.SecurityTokenException">
        <paramref name="reader" /> does not point to a &lt;saml:DoNotCacheCondition&gt; element.  </exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IdentityModel.Tokens.SamlDoNotCacheCondition.WriteXml(System.Xml.XmlDictionaryWriter,System.IdentityModel.Tokens.SamlSerializer,System.IdentityModel.Selectors.SecurityTokenSerializer)">
      <summary>Writes the &lt;saml:DoNotCacheCondition&gt; element into the specified XML serializer.</summary>
      <param name="writer">A <see cref="T:System.Xml.XmlDictionaryWriter" /> to write the &lt;saml:DoNotCacheCondition&gt; element.</param>
      <param name="samlSerializer">A <see cref="T:System.IdentityModel.Tokens.SamlSerializer" /> that is capable of writing XML elements in a SAML assertion.</param>
      <param name="keyInfoSerializer">A <see cref="T:System.IdentityModel.Selectors.SecurityTokenSerializer" /> that is capable of writing KeyInfo clauses.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="writer" /> is null-or-<paramref name="samlSerializer" /> is null</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="T:System.IdentityModel.Tokens.SamlEvidence">
      <summary>Represents the evidence used to render an authorization decision for a <see cref="T:System.IdentityModel.Tokens.SamlSecurityToken" /> security token.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IdentityModel.Tokens.SamlEvidence.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.IdentityModel.Tokens.SamlEvidence" /> class. </summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IdentityModel.Tokens.SamlEvidence.#ctor(System.Collections.Generic.IEnumerable{System.IdentityModel.Tokens.SamlAssertion})">
      <summary>Initializes a new instance of the <see cref="T:System.IdentityModel.Tokens.SamlEvidence" /> class using the specified set of SAML assertions. </summary>
      <param name="assertions">An <see cref="T:System.Collections.Generic.IEnumerable`1" /> of type <see cref="T:System.IdentityModel.Tokens.SamlAssertion" /> that contains the evidence that the SAML authority relied on to render the authorization decision. Sets the <see cref="P:System.IdentityModel.Tokens.SamlEvidence.Assertions" /> property.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="assertions" /> contains a member that is null.</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IdentityModel.Tokens.SamlEvidence.#ctor(System.Collections.Generic.IEnumerable{System.String})">
      <summary>Initializes a new instance of the <see cref="T:System.IdentityModel.Tokens.SamlEvidence" /> class using the specified set of SAML assertion references. </summary>
      <param name="assertionIdReferences">An <see cref="T:System.Collections.Generic.IEnumerable`1" /> of type <see cref="T:System.String" /> that contains an identifier for a SAML assertion that specifies the evidence that the SAML authority relied on to render the authorization decision. Sets the <see cref="P:System.IdentityModel.Tokens.SamlEvidence.AssertionIdReferences" /> property.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="assertionIdReferences" /> contains a member that is null or empty.</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IdentityModel.Tokens.SamlEvidence.#ctor(System.Collections.Generic.IEnumerable{System.String},System.Collections.Generic.IEnumerable{System.IdentityModel.Tokens.SamlAssertion})">
      <summary>Initializes a new instance of the <see cref="T:System.IdentityModel.Tokens.SamlEvidence" /> class using the specified set of SAML assertion references and SAML assertions. </summary>
      <param name="assertionIdReferences">An <see cref="T:System.Collections.Generic.IEnumerable`1" /> of type <see cref="T:System.String" /> that contains an identifier for a SAML assertion that specifies the evidence that the SAML authority relied on to render the authorization decision. Sets the <see cref="P:System.IdentityModel.Tokens.SamlEvidence.AssertionIdReferences" /> property.</param>
      <param name="assertions">An <see cref="T:System.Collections.Generic.IEnumerable`1" /> of type <see cref="T:System.IdentityModel.Tokens.SamlAssertion" /> that contains the evidence that the SAML authority relied on to render the authorization decision. Sets the <see cref="P:System.IdentityModel.Tokens.SamlEvidence.Assertions" /> property.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="assertionIdReferences" /> contains a member that is null or empty.-or-<paramref name="assertions" /> contains a member that is null.-or-<paramref name="assertionIdReferences" /> and <paramref name="assertions" /> are both null.</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.IdentityModel.Tokens.SamlEvidence.AssertionIdReferences">
      <summary>Gets a collection of identifiers for SAML assertions that specify the evidence that the SAML authority relied on to render the authorization decision.</summary>
      <returns>An <see cref="T:System.Collections.Generic.IList`1" /> of type <see cref="T:System.String" /> that contains identifiers for SAML assertions that specify the evidence that the SAML authority relied on to render the authorization decision.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.IdentityModel.Tokens.SamlEvidence.Assertions">
      <summary>Gets the collection of SAML assertions that comprise the evidence that the SAML authority relied on to render the authorization decision.</summary>
      <returns>An <see cref="T:System.Collections.Generic.IList`1" /> of type <see cref="T:System.IdentityModel.Tokens.SamlAssertion" /> that contains the evidence that the SAML authority relied on to render the authorization decision.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.IdentityModel.Tokens.SamlEvidence.IsReadOnly">
      <summary>Gets a value that indicates whether the properties of this instance are read-only.</summary>
      <returns>true if the properties of this instance are read-only; otherwise, false. The default is false.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IdentityModel.Tokens.SamlEvidence.MakeReadOnly">
      <summary>Causes this instance to be read-only.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IdentityModel.Tokens.SamlEvidence.ReadXml(System.Xml.XmlDictionaryReader,System.IdentityModel.Tokens.SamlSerializer,System.IdentityModel.Selectors.SecurityTokenSerializer,System.IdentityModel.Selectors.SecurityTokenResolver)">
      <summary>Reads the evidence from the specified XML reader.</summary>
      <param name="reader">A <see cref="T:System.Xml.XmlDictionaryReader" /> to read the evidence.</param>
      <param name="samlSerializer">A <see cref="T:System.IdentityModel.Tokens.SamlSerializer" /> that is capable of reading XML elements in the SAML authorization statement that is defined in the SAML specification.</param>
      <param name="keyInfoSerializer">A <see cref="T:System.IdentityModel.Selectors.SecurityTokenSerializer" /> that reads the KeyInfo clause of the digital signature.</param>
      <param name="outOfBandTokenResolver">A <see cref="T:System.IdentityModel.Selectors.SecurityTokenResolver" /> that determines the security token that created the digital signature.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="reader" /> is null.-or-<paramref name="samlSerializer" /> is null.</exception>
      <exception cref="T:System.IdentityModel.Tokens.SecurityTokenException">
        <paramref name="reader" /> refers to an XML element that does not have at least one &lt;saml:AssertionIDReference&gt; or &lt;saml:Assertion&gt; child element. </exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IdentityModel.Tokens.SamlEvidence.WriteXml(System.Xml.XmlDictionaryWriter,System.IdentityModel.Tokens.SamlSerializer,System.IdentityModel.Selectors.SecurityTokenSerializer)">
      <summary>Writes the evidence into the specified XML serializer.</summary>
      <param name="writer">A <see cref="T:System.Xml.XmlDictionaryWriter" /> to write the evidence.</param>
      <param name="samlSerializer">A <see cref="T:System.IdentityModel.Tokens.SamlSerializer" /> that is capable of writing XML elements in a SAML assertion.</param>
      <param name="keyInfoSerializer">A <see cref="T:System.IdentityModel.Selectors.SecurityTokenSerializer" /> that is capable of writing KeyInfo clauses.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="writer" /> is null.-or-<paramref name="samlSerializer" /> is null.</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="T:System.IdentityModel.Tokens.SamlNameIdentifierClaimResource">
      <summary>Represents a claim for a SAML security token that asserts the subject's name.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IdentityModel.Tokens.SamlNameIdentifierClaimResource.#ctor(System.String,System.String,System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.IdentityModel.Tokens.SamlNameIdentifierClaimResource" /> class using the specified name, the domain in which the name resides, and the format the name is in.</summary>
      <param name="name">The subject name. Sets the <see cref="P:System.IdentityModel.Tokens.SamlSubject.Name" /> property.</param>
      <param name="nameQualifier">The domain in which the <paramref name="name" /> parameter resides. Sets the <see cref="P:System.IdentityModel.Tokens.SamlNameIdentifierClaimResource.NameQualifier" /> property.</param>
      <param name="format">A URI reference that represents the format that the <paramref name="name" /> parameter is in. Sets the <see cref="P:System.IdentityModel.Tokens.SamlNameIdentifierClaimResource.Format" /> property.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="name" /> is null or is <see cref="F:System.String.Empty" />.</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IdentityModel.Tokens.SamlNameIdentifierClaimResource.Equals(System.Object)">
      <summary>Returns a value that indicates whether the instance is equal to the specified object.</summary>
      <returns>true if <paramref name="obj" /> is a <see cref="T:System.IdentityModel.Tokens.SamlNameIdentifierClaimResource" /> and has the same value as this instance; otherwise, false.</returns>
      <param name="obj">An object to compare to this instance.</param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.IdentityModel.Tokens.SamlNameIdentifierClaimResource.Format">
      <summary>Gets a URI reference that represents the format that the subject name of a SAML security token is in.</summary>
      <returns>A URI reference that represents the format that the subject name of a SAML security token is in.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IdentityModel.Tokens.SamlNameIdentifierClaimResource.GetHashCode">
      <summary>Returns the hash code for the <see cref="T:System.IdentityModel.Tokens.SamlNameIdentifierClaimResource" />.</summary>
      <returns>A hash code for the <see cref="T:System.IdentityModel.Tokens.SamlNameIdentifierClaimResource" />.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.IdentityModel.Tokens.SamlNameIdentifierClaimResource.Name">
      <summary>Gets the subject name of a SAML security token.</summary>
      <returns>The subject name of a <see cref="T:System.IdentityModel.Tokens.SamlSecurityToken" /> security token.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.IdentityModel.Tokens.SamlNameIdentifierClaimResource.NameQualifier">
      <summary>Gets the domain in which the subject name of a SAML security token resides in.</summary>
      <returns>The domain in which the subject name of a SAML security token resides in.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="T:System.IdentityModel.Tokens.SamlSecurityToken">
      <summary>Represents a security token that is based upon a SAML assertion.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IdentityModel.Tokens.SamlSecurityToken.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.IdentityModel.Tokens.SamlSecurityToken" /> class. </summary>
    </member>
    <member name="M:System.IdentityModel.Tokens.SamlSecurityToken.#ctor(System.IdentityModel.Tokens.SamlAssertion)">
      <summary>Initializes a new instance of the <see cref="T:System.IdentityModel.Tokens.SamlSecurityToken" /> class using the specified SAML assertion.</summary>
      <param name="assertion">A <see cref="T:System.IdentityModel.Tokens.SamlAssertion" /> that represents the SAML assertion for this security token.</param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.IdentityModel.Tokens.SamlSecurityToken.Assertion">
      <summary>Gets the SAML assertion for this security token.</summary>
      <returns>A <see cref="T:System.IdentityModel.Tokens.SamlAssertion" /> that represents the SAML assertion for this security token.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IdentityModel.Tokens.SamlSecurityToken.CanCreateKeyIdentifierClause``1">
      <summary>Gets a value indicating whether this security token is capable of creating the specified key identifier. </summary>
      <returns>true when <paramref name="T" /> is of type <see cref="T:System.IdentityModel.Tokens.SamlAssertionKeyIdentifierClause" />; otherwise, false. </returns>
      <typeparam name="T">A <see cref="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" /> that specifies the key identifier to create.</typeparam>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IdentityModel.Tokens.SamlSecurityToken.CreateKeyIdentifierClause``1">
      <summary>Creates the specified key identifier clause.</summary>
      <returns>A <see cref="T:System.IdentityModel.Tokens.SamlAssertionKeyIdentifierClause" /> that is a key identifier clause for a SAML security token.</returns>
      <typeparam name="T">A <see cref="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" /> that specifies the key identifier to create.</typeparam>
      <exception cref="T:System.InvalidOperationException">
        <paramref name="T" /> is not of type <see cref="T:System.IdentityModel.Tokens.SamlAssertionKeyIdentifierClause" />.</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.IdentityModel.Tokens.SamlSecurityToken.Id">
      <summary>Gets a unique identifier of the security token. </summary>
      <returns>The unique identifier of the security token.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IdentityModel.Tokens.SamlSecurityToken.Initialize(System.IdentityModel.Tokens.SamlAssertion)">
      <summary>Initializes the properties of the <see cref="T:System.IdentityModel.Tokens.SamlSecurityToken" /> class using the specified SAML assertion.</summary>
      <param name="assertion">A <see cref="T:System.IdentityModel.Tokens.SamlAssertion" /> that represents the SAML assertion for this security token.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="assertion" /> is null.</exception>
    </member>
    <member name="M:System.IdentityModel.Tokens.SamlSecurityToken.MatchesKeyIdentifierClause(System.IdentityModel.Tokens.SecurityKeyIdentifierClause)">
      <summary>Returns a value indicating whether the key identifier for this instance is equal to the specified key identifier. </summary>
      <returns>true if <paramref name="keyIdentifierClause" /> is a <see cref="T:System.IdentityModel.Tokens.SamlAssertionKeyIdentifierClause" /> and it has the same unique identifier as the <see cref="P:System.IdentityModel.Tokens.SamlSecurityToken.Id" /> property; otherwise, false.</returns>
      <param name="keyIdentifierClause">An <see cref="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" /> to compare to this instance.</param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.IdentityModel.Tokens.SamlSecurityToken.SecurityKeys">
      <summary>Gets the cryptographic keys associated with the security token.</summary>
      <returns>A <see cref="T:System.Collections.ObjectModel.ReadOnlyCollection`1" /> of type <see cref="T:System.IdentityModel.Tokens.SecurityKey" /> that contains the set of keys associated with the security token.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.IdentityModel.Tokens.SamlSecurityToken.ValidFrom">
      <summary>Gets the first instant in time at which this security token is valid.</summary>
      <returns>A <see cref="T:System.DateTime" /> that represents the first instant in time at which this security token is valid.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.IdentityModel.Tokens.SamlSecurityToken.ValidTo">
      <summary>Gets the last instant in time at which this security token is valid.</summary>
      <returns>A <see cref="T:System.DateTime" /> that represents the last instant in time at which this security token is valid.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="T:System.IdentityModel.Tokens.SamlSerializer">
      <summary>Serializes and deserializes <see cref="T:System.IdentityModel.Tokens.SamlSecurityToken" /> objects into and from XML documents. </summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IdentityModel.Tokens.SamlSerializer.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.IdentityModel.Tokens.SamlSerializer" /> class. </summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IdentityModel.Tokens.SamlSerializer.LoadAdvice(System.Xml.XmlDictionaryReader,System.IdentityModel.Selectors.SecurityTokenSerializer,System.IdentityModel.Selectors.SecurityTokenResolver)">
      <summary>Reads the additional information provided by the SAML authority within a &lt;saml:Advice&gt; element of a SAML assertion using the specified XML reader.</summary>
      <returns>A <see cref="T:System.IdentityModel.Tokens.SamlAdvice" /> that contains additional information provided by the SAML authority within a &lt;saml:Advice&gt; element of a SAML assertion.</returns>
      <param name="reader">An <see cref="T:System.Xml.XmlDictionaryReader" /> to read the additional information provided by the SAML authority.</param>
      <param name="keyInfoSerializer">A <see cref="T:System.IdentityModel.Selectors.SecurityTokenSerializer" /> that reads the KeyInfo clause of the digital signature.</param>
      <param name="outOfBandTokenResolver">A <see cref="T:System.IdentityModel.Selectors.SecurityTokenResolver" /> that determines the security token that created the digital signature.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="reader" /> is null</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IdentityModel.Tokens.SamlSerializer.LoadAssertion(System.Xml.XmlDictionaryReader,System.IdentityModel.Selectors.SecurityTokenSerializer,System.IdentityModel.Selectors.SecurityTokenResolver)">
      <summary>Reads a SAML assertion from the specified XML reader.</summary>
      <returns>A <see cref="T:System.IdentityModel.Tokens.SamlAssertion" /> that represents the SAML assertion.</returns>
      <param name="reader">An <see cref="T:System.Xml.XmlDictionaryReader" /> to read the SAML assertion.</param>
      <param name="keyInfoSerializer">A <see cref="T:System.IdentityModel.Selectors.SecurityTokenSerializer" /> that reads the KeyInfo clause of the digital signature.</param>
      <param name="outOfBandTokenResolver">A <see cref="T:System.IdentityModel.Selectors.SecurityTokenResolver" /> that determines the security token that created the digital signature.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="reader" /> is null</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IdentityModel.Tokens.SamlSerializer.LoadAttribute(System.Xml.XmlDictionaryReader,System.IdentityModel.Selectors.SecurityTokenSerializer,System.IdentityModel.Selectors.SecurityTokenResolver)">
      <summary>Reads an attribute of the subject of a SAML security token using the specified XML reader.</summary>
      <returns>A <see cref="T:System.IdentityModel.Tokens.SamlAttribute" /> that represents a claim that is an attribute of the subject of a SAML security token.</returns>
      <param name="reader">An <see cref="T:System.Xml.XmlDictionaryReader" /> to read the attributes.</param>
      <param name="keyInfoSerializer">A <see cref="T:System.IdentityModel.Selectors.SecurityTokenSerializer" /> that reads the KeyInfo clause of the digital signature.</param>
      <param name="outOfBandTokenResolver">A <see cref="T:System.IdentityModel.Selectors.SecurityTokenResolver" /> that determines the security token that created the digital signature.</param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IdentityModel.Tokens.SamlSerializer.LoadCondition(System.Xml.XmlDictionaryReader,System.IdentityModel.Selectors.SecurityTokenSerializer,System.IdentityModel.Selectors.SecurityTokenResolver)">
      <summary>Reads a condition that must be taken into account when assessing the validity of a SAML assertion using the specified XML reader.</summary>
      <returns>A <see cref="T:System.IdentityModel.Tokens.SamlCondition" /> that specifies a condition that must be taken into account when assessing the validity of a SAML assertion.</returns>
      <param name="reader">An <see cref="T:System.Xml.XmlDictionaryReader" /> to read the SAML condition.</param>
      <param name="keyInfoSerializer">A <see cref="T:System.IdentityModel.Selectors.SecurityTokenSerializer" /> that reads the KeyInfo clause of the digital signature.</param>
      <param name="outOfBandTokenResolver">A <see cref="T:System.IdentityModel.Selectors.SecurityTokenResolver" /> that determines the security token that created the digital signature.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="reader" /> is null.</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IdentityModel.Tokens.SamlSerializer.LoadConditions(System.Xml.XmlDictionaryReader,System.IdentityModel.Selectors.SecurityTokenSerializer,System.IdentityModel.Selectors.SecurityTokenResolver)">
      <summary>Reads a set of conditions that must be taken into account when assessing the validity of a SAML assertion using the specified XML reader.</summary>
      <returns>A <see cref="T:System.IdentityModel.Tokens.SamlConditions" /> that specifies a set of conditions that must be taken into account when assessing the validity of a SAML assertion.</returns>
      <param name="reader">An <see cref="T:System.Xml.XmlDictionaryReader" /> to read the SAML conditions.</param>
      <param name="keyInfoSerializer">A <see cref="T:System.IdentityModel.Selectors.SecurityTokenSerializer" /> that reads the KeyInfo clause of the digital signature.</param>
      <param name="outOfBandTokenResolver">A <see cref="T:System.IdentityModel.Selectors.SecurityTokenResolver" /> that determines the security token that created the digital signature.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="reader" /> is null.</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IdentityModel.Tokens.SamlSerializer.LoadStatement(System.Xml.XmlDictionaryReader,System.IdentityModel.Selectors.SecurityTokenSerializer,System.IdentityModel.Selectors.SecurityTokenResolver)">
      <summary>Reads a SAML statement using the specified XML reader.</summary>
      <returns>A <see cref="T:System.IdentityModel.Tokens.SamlStatement" /> that represents the SAML statement.</returns>
      <param name="reader">An <see cref="T:System.Xml.XmlDictionaryReader" /> to read the SAML statement.</param>
      <param name="keyInfoSerializer">A <see cref="T:System.IdentityModel.Selectors.SecurityTokenSerializer" /> that reads the KeyInfo clause of the digital signature.</param>
      <param name="outOfBandTokenResolver">A <see cref="T:System.IdentityModel.Selectors.SecurityTokenResolver" /> that determines the security token that created the digital signature.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="reader" /> is null.</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IdentityModel.Tokens.SamlSerializer.PopulateDictionary(System.Xml.IXmlDictionary)">
      <summary>Replaces the default set of XML elements and attributes that are recognized by this serializer with the specified dictionary of elements and attributes. </summary>
      <param name="dictionary">An <see cref="T:System.Xml.IXmlDictionary" /> that contains the set of XML elements and attributes.</param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IdentityModel.Tokens.SamlSerializer.ReadToken(System.Xml.XmlReader,System.IdentityModel.Selectors.SecurityTokenSerializer,System.IdentityModel.Selectors.SecurityTokenResolver)">
      <summary>Reads a SAML security token from the specified XML reader.</summary>
      <returns>A <see cref="T:System.IdentityModel.Tokens.SamlSecurityToken" /> security token.</returns>
      <param name="reader">An <see cref="T:System.Xml.XmlDictionaryReader" /> to read the <see cref="T:System.IdentityModel.Tokens.SamlSecurityToken" /> security token.</param>
      <param name="keyInfoSerializer">A <see cref="T:System.IdentityModel.Selectors.SecurityTokenSerializer" /> that reads the KeyInfo clause of the digital signature.</param>
      <param name="outOfBandTokenResolver">A <see cref="T:System.IdentityModel.Selectors.SecurityTokenResolver" /> that determines the security token that created the digital signature.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="reader" /> is null</exception>
      <exception cref="T:System.Security.SecurityException">
        <paramref name="reader" /> refers to an XML element that does not contain a digital signature. </exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IdentityModel.Tokens.SamlSerializer.WriteToken(System.IdentityModel.Tokens.SamlSecurityToken,System.Xml.XmlWriter,System.IdentityModel.Selectors.SecurityTokenSerializer)">
      <summary>Writes the specified SAML security token into the specified XML serializer.</summary>
      <param name="token">The <see cref="T:System.IdentityModel.Tokens.SamlSecurityToken" /> to write.</param>
      <param name="writer">An <see cref="T:System.Xml.XmlDictionaryWriter" /> to write the SAML authorization statement.</param>
      <param name="keyInfoSerializer">A <see cref="T:System.IdentityModel.Selectors.SecurityTokenSerializer" /> that is capable of writing KeyInfo clauses.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="writer" /> is null-or-<paramref name="token" /> is null</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="T:System.IdentityModel.Tokens.SamlStatement">
      <summary>Represents a claim for a <see cref="T:System.IdentityModel.Tokens.SamlSecurityToken" /> security token.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IdentityModel.Tokens.SamlStatement.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.IdentityModel.Tokens.SamlStatement" /> class. </summary>
    </member>
    <member name="M:System.IdentityModel.Tokens.SamlStatement.CreatePolicy(System.IdentityModel.Claims.ClaimSet,System.IdentityModel.Selectors.SamlSecurityTokenAuthenticator)">
      <summary>Creates an authorization policy for a <see cref="T:System.IdentityModel.Tokens.SamlSecurityToken" /> security token.</summary>
      <returns>An <see cref="T:System.IdentityModel.Policy.IAuthorizationPolicy" /> that represents an authorization policy for the <see cref="T:System.IdentityModel.Tokens.SamlSecurityToken" /> security token.</returns>
      <param name="issuer">A <see cref="T:System.IdentityModel.Claims.ClaimSet" /> that represents the issuer of the <see cref="T:System.IdentityModel.Tokens.SamlSecurityToken" /> security token.</param>
      <param name="samlAuthenticator">A <see cref="T:System.IdentityModel.Selectors.SamlSecurityTokenAuthenticator" /> to authenticate the <see cref="T:System.IdentityModel.Tokens.SamlSecurityToken" /> security token.</param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.IdentityModel.Tokens.SamlStatement.IsReadOnly">
      <summary>When overridden in a derived class, gets a value that indicates whether the properties of this instance are read-only.</summary>
      <returns>true if the properties of this instance are read-only; otherwise, false. The default is false.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IdentityModel.Tokens.SamlStatement.MakeReadOnly">
      <summary>Causes this instance to be read-only.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IdentityModel.Tokens.SamlStatement.ReadXml(System.Xml.XmlDictionaryReader,System.IdentityModel.Tokens.SamlSerializer,System.IdentityModel.Selectors.SecurityTokenSerializer,System.IdentityModel.Selectors.SecurityTokenResolver)">
      <summary>When overridden in a derived class, reads the SAML statement from the specified XML reader.</summary>
      <param name="reader">A <see cref="T:System.Xml.XmlDictionaryReader" /> to read the SAML statement.</param>
      <param name="samlSerializer">A <see cref="T:System.IdentityModel.Tokens.SamlSerializer" /> that is capable of reading XML elements in the SAML statement that is defined in the SAML specification.</param>
      <param name="keyInfoSerializer">A <see cref="T:System.IdentityModel.Selectors.SecurityTokenSerializer" /> that reads the KeyInfo clause of the digital signature.</param>
      <param name="outOfBandTokenResolver">A <see cref="T:System.IdentityModel.Selectors.SecurityTokenResolver" /> that determines the security token that created the digital signature.</param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IdentityModel.Tokens.SamlStatement.WriteXml(System.Xml.XmlDictionaryWriter,System.IdentityModel.Tokens.SamlSerializer,System.IdentityModel.Selectors.SecurityTokenSerializer)">
      <summary>Writes the SAML statement into the specified XML serializer.</summary>
      <param name="writer">A <see cref="T:System.Xml.XmlDictionaryWriter" /> to write the SAML statement.</param>
      <param name="samlSerializer">A <see cref="T:System.IdentityModel.Tokens.SamlSerializer" /> that is capable of writing XML elements in a SAML assertion.</param>
      <param name="keyInfoSerializer">A <see cref="T:System.IdentityModel.Selectors.SecurityTokenSerializer" /> that is capable of writing KeyInfo clauses.</param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="T:System.IdentityModel.Tokens.SamlSubject">
      <summary>Represents the subject of a SAML security token.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IdentityModel.Tokens.SamlSubject.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.IdentityModel.Tokens.SamlSubject" /> class. </summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IdentityModel.Tokens.SamlSubject.#ctor(System.String,System.String,System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.IdentityModel.Tokens.SamlSubject" /> class using the specified name, the domain in which the name resides, and the format the name is in.</summary>
      <param name="nameFormat">A URI reference that represents the format that the <paramref name="name" /> parameter is in. Sets the <see cref="P:System.IdentityModel.Tokens.SamlSubject.NameFormat" /> property.</param>
      <param name="nameQualifier">The domain in which the <paramref name="name" /> parameter resides. Sets the <see cref="P:System.IdentityModel.Tokens.SamlSubject.NameQualifier" /> property.</param>
      <param name="name">The subject name. Sets the <see cref="P:System.IdentityModel.Tokens.SamlSubject.Name" /> property.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="name" /> is null or is <see cref="F:System.String.Empty" />.</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IdentityModel.Tokens.SamlSubject.#ctor(System.String,System.String,System.String,System.Collections.Generic.IEnumerable{System.String},System.String,System.IdentityModel.Tokens.SecurityKeyIdentifier)">
      <summary>Initializes a new instance of the <see cref="T:System.IdentityModel.Tokens.SamlSubject" /> class using the specified name, the domain in which the name resides, the format the name is in, authentication protocols, additional authentication information, and a key identifier.</summary>
      <param name="nameFormat">A URI reference that represents the format that the <paramref name="name" /> parameter is in. Sets the <see cref="P:System.IdentityModel.Tokens.SamlSubject.NameFormat" /> property.</param>
      <param name="nameQualifier">The domain in which the <paramref name="name" /> parameter resides. Sets the <see cref="P:System.IdentityModel.Tokens.SamlSubject.NameQualifier" /> property.</param>
      <param name="name">The subject name. Sets the <see cref="P:System.IdentityModel.Tokens.SamlSubject.Name" /> property.</param>
      <param name="confirmations">An <see cref="T:System.Collections.Generic.IEnumerable`1" /> of type <see cref="T:System.String" /> that contains URI references that identify the protocols to authenticate the subject. Sets the <see cref="P:System.IdentityModel.Tokens.SamlSubject.ConfirmationMethods" /> property.</param>
      <param name="confirmationData">Additional authentication information that can be used by authentication protocols. Sets the <see cref="P:System.IdentityModel.Tokens.SamlSubject.SubjectConfirmationData" /> property.</param>
      <param name="securityKeyIdentifier">A <see cref="T:System.IdentityModel.Tokens.SecurityKeyIdentifier" /> that provides access to a cryptographic key held by the subject of the <see cref="T:System.IdentityModel.Tokens.SamlSecurityToken" /> security token. Sets the <see cref="P:System.IdentityModel.Tokens.SamlSubject.KeyIdentifier" /> property.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="name" /> is null or is <see cref="F:System.String.Empty" />.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="confirmations" /> contains a null or <see cref="F:System.String.Empty" /> member.-or-<paramref name="confirmations" /> does not contain any members and <paramref name="name" /> is null or is <see cref="F:System.String.Empty" />.-or-<paramref name="confirmations" /> does not contain any members and <paramref name="confirmationData" /> or <paramref name="securityKeyIdentifier" /> are not null.</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.IdentityModel.Tokens.SamlSubject.ConfirmationMethods">
      <summary>Gets a set of URI references that identify the protocols that should be used to authenticate the subject.</summary>
      <returns>An <see cref="T:System.Collections.Generic.IList`1" /> of type <see cref="T:System.String" /> that contains a set of URI references that identify the protocols that should be used to authenticate the subject.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.IdentityModel.Tokens.SamlSubject.Crypto">
      <summary>Gets or sets the cryptographic key that is used to verify the digital signature that is identified by this SAML subject statement.</summary>
      <returns>A <see cref="T:System.IdentityModel.Tokens.SecurityKey" /> that contains the cryptographic key that is used to verify the digital signature for a SAML security token.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IdentityModel.Tokens.SamlSubject.ExtractClaims">
      <summary>Gets a set of claims using the properties of this class.</summary>
      <returns>A <see cref="T:System.Collections.ObjectModel.ReadOnlyCollection`1" /> of type <see cref="T:System.IdentityModel.Claims.Claim" /> that contains the set of claims represented by this <see cref="T:System.IdentityModel.Tokens.SamlSubject" /> instance.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IdentityModel.Tokens.SamlSubject.ExtractSubjectKeyClaimSet(System.IdentityModel.Selectors.SamlSecurityTokenAuthenticator)">
      <summary>Gets a set of claims using the properties of this class and the specified SAML security token authenticator.</summary>
      <returns>A <see cref="T:System.IdentityModel.Claims.ClaimSet" /> that contains the set of claims represented by this <see cref="T:System.IdentityModel.Tokens.SamlSubject" /> instance.</returns>
      <param name="samlAuthenticator">A <see cref="T:System.IdentityModel.Selectors.SamlSecurityTokenAuthenticator" /> that authenticates the portion of a <see cref="T:System.IdentityModel.Tokens.SamlSecurityToken" /> security token that corresponds to the &lt;saml:Subject&gt; element.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="samlAuthenticator" /> is null.</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.IdentityModel.Tokens.SamlSubject.IsReadOnly">
      <summary>Gets a value that indicates whether the properties of this instance are read-only.</summary>
      <returns>true if the properties of this instance are read-only; otherwise, false. The default is false.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.IdentityModel.Tokens.SamlSubject.KeyIdentifier">
      <summary>Gets or sets a key identifier that provides access to a cryptographic key held by the subject of the SAML security token.</summary>
      <returns>A <see cref="T:System.IdentityModel.Tokens.SecurityKeyIdentifier" /> that provides access to a cryptographic key held by the subject of the <see cref="T:System.IdentityModel.Tokens.SamlSecurityToken" /> security token.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IdentityModel.Tokens.SamlSubject.MakeReadOnly">
      <summary>Causes this instance to be read-only.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.IdentityModel.Tokens.SamlSubject.Name">
      <summary>Gets or sets the subject name of a SAML security token.</summary>
      <returns>The subject name of a <see cref="T:System.IdentityModel.Tokens.SamlSecurityToken" /> security token.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.IdentityModel.Tokens.SamlSubject.NameClaimType">
      <summary>Gets the claim type that is used to represent the subject name of a SAML security token. </summary>
      <returns>The claim type that is used to represent the subject name of a SAML security token (<see cref="P:System.IdentityModel.Claims.ClaimTypes.NameIdentifier" />).</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.IdentityModel.Tokens.SamlSubject.NameFormat">
      <summary>Gets or sets a URI reference that represents the format that the subject name of a SAML security token is in.</summary>
      <returns>A URI reference that represents the format that the subject name of a SAML security token is in.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.IdentityModel.Tokens.SamlSubject.NameQualifier">
      <summary>Gets or sets the domain in which the subject name of a SAML security token resides in.</summary>
      <returns>The domain in which the subject name of a SAML security token resides in.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IdentityModel.Tokens.SamlSubject.ReadXml(System.Xml.XmlDictionaryReader,System.IdentityModel.Tokens.SamlSerializer,System.IdentityModel.Selectors.SecurityTokenSerializer,System.IdentityModel.Selectors.SecurityTokenResolver)">
      <summary>Reads the &lt;saml:Subject&gt; element from the specified XML reader.</summary>
      <param name="reader">A <see cref="T:System.Xml.XmlDictionaryReader" /> to read the &lt;saml:Subject&gt; element.</param>
      <param name="samlSerializer">A <see cref="T:System.IdentityModel.Tokens.SamlSerializer" /> that is capable of reading XML elements in a SAML assertion.</param>
      <param name="keyInfoSerializer">A <see cref="T:System.IdentityModel.Selectors.SecurityTokenSerializer" /> that reads the KeyInfo clause of the digital signature.</param>
      <param name="outOfBandTokenResolver">A <see cref="T:System.IdentityModel.Selectors.SecurityTokenResolver" /> that determines the security token that created the digital signature.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="reader" /> is null.-or-<paramref name="samlSerializer" /> is null.</exception>
      <exception cref="T:System.IdentityModel.Tokens.SecurityTokenException">
        <paramref name="reader" /> refers to an XML element in which one of the following is true:Contains an &lt;saml:NameIdentifier&gt; element without a value.-or-Contains an &lt;saml:ConfirmationMehtod&gt; element without a value.-or-Contains a &lt;saml:SubjectConfirmation&gt; element that does not have at least one &lt;saml:ConfirmationMethod&gt; child element.-or-Does not contain at least one &lt;saml:ConfirmationMethod&gt; or &lt;saml:NameIdentifier&gt; element. </exception>
      <exception cref="T:System.Security.SecurityException">
        <paramref name="reader" /> refers to an XML element that contains a &lt;ds:KeyInfo&gt; element that does not have a key that can be retrieved.</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.IdentityModel.Tokens.SamlSubject.SubjectConfirmationData">
      <summary>Gets or sets additional authentication information that can be used by authentication protocols. </summary>
      <returns>Additional authentication information that can be used by authentication protocols.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IdentityModel.Tokens.SamlSubject.WriteXml(System.Xml.XmlDictionaryWriter,System.IdentityModel.Tokens.SamlSerializer,System.IdentityModel.Selectors.SecurityTokenSerializer)">
      <summary>Writes the &lt;saml:Subject&gt; element into the specified XML serializer.</summary>
      <param name="writer">A <see cref="T:System.Xml.XmlDictionaryWriter" /> to write the &lt;saml:Subject&gt; element.</param>
      <param name="samlSerializer">A <see cref="T:System.IdentityModel.Tokens.SamlSerializer" /> that is capable of writing XML elements in a SAML assertion.</param>
      <param name="keyInfoSerializer">A <see cref="T:System.IdentityModel.Selectors.SecurityTokenSerializer" /> that is capable of writing KeyInfo clauses.</param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="T:System.IdentityModel.Tokens.SamlSubjectStatement">
      <summary>Represents a claim for a <see cref="T:System.IdentityModel.Tokens.SamlSecurityToken" /> security token.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IdentityModel.Tokens.SamlSubjectStatement.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.IdentityModel.Tokens.SamlSubjectStatement" /> class. </summary>
    </member>
    <member name="M:System.IdentityModel.Tokens.SamlSubjectStatement.#ctor(System.IdentityModel.Tokens.SamlSubject)">
      <summary>Initializes a new instance of the <see cref="T:System.IdentityModel.Tokens.SamlSubjectStatement" /> class using the specified subject. </summary>
      <param name="samlSubject">A <see cref="T:System.IdentityModel.Tokens.SamlSubject" /> that identifies the subject of a <see cref="T:System.IdentityModel.Tokens.SamlSecurityToken" /> security token. Sets the <see cref="P:System.IdentityModel.Tokens.SamlSubjectStatement.SamlSubject" /> property.</param>
    </member>
    <member name="M:System.IdentityModel.Tokens.SamlSubjectStatement.AddClaimsToList(System.Collections.Generic.IList{System.IdentityModel.Claims.Claim})">
      <summary>Adds a claim based on the properties of this instance to the specified collection of claims.</summary>
      <param name="claims">An <see cref="T:System.Collections.Generic.IList`1" /> of type <see cref="T:System.IdentityModel.Claims.Claim" /> that contains the set of claims to add to.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="claims" /> is null.</exception>
    </member>
    <member name="M:System.IdentityModel.Tokens.SamlSubjectStatement.CreatePolicy(System.IdentityModel.Claims.ClaimSet,System.IdentityModel.Selectors.SamlSecurityTokenAuthenticator)">
      <summary>Creates an authorization policy for a <see cref="T:System.IdentityModel.Tokens.SamlSecurityToken" /> security token.</summary>
      <returns>An <see cref="T:System.IdentityModel.Policy.IAuthorizationPolicy" /> that represents an authorization policy for the <see cref="T:System.IdentityModel.Tokens.SamlSecurityToken" /> security token.</returns>
      <param name="issuer">A <see cref="T:System.IdentityModel.Claims.ClaimSet" /> that represents the issuer of the <see cref="T:System.IdentityModel.Tokens.SamlSecurityToken" /> security token.</param>
      <param name="samlAuthenticator">A <see cref="T:System.IdentityModel.Selectors.SamlSecurityTokenAuthenticator" /> to authenticate the <see cref="T:System.IdentityModel.Tokens.SamlSecurityToken" /> security token.</param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.IdentityModel.Tokens.SamlSubjectStatement.IsReadOnly">
      <summary>Gets a value indicating whether the properties of this instance are read-only.</summary>
      <returns>true if the properties of this instance are read-only; otherwise, false. The default is false.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IdentityModel.Tokens.SamlSubjectStatement.MakeReadOnly">
      <summary>Causes this instance to be read-only.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.IdentityModel.Tokens.SamlSubjectStatement.SamlSubject">
      <summary>Gets or sets the subject of a <see cref="T:System.IdentityModel.Tokens.SamlSecurityToken" /> security token.</summary>
      <returns>A <see cref="T:System.IdentityModel.Tokens.SamlSubject" /> that identifies the subject of a <see cref="T:System.IdentityModel.Tokens.SamlSecurityToken" /> security token.</returns>
      <exception cref="T:System.InvalidOperationException">The <see cref="P:System.IdentityModel.Tokens.SamlSubjectStatement.SamlSubject" /> property is set and the <see cref="P:System.IdentityModel.Tokens.SamlSubjectStatement.IsReadOnly" /> property is true.</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IdentityModel.Tokens.SamlSubjectStatement.SetSubject(System.IdentityModel.Tokens.SamlSubject)">
      <summary>Sets the subject of a <see cref="T:System.IdentityModel.Tokens.SamlSecurityToken" /> security token.</summary>
      <param name="samlSubject">A <see cref="T:System.IdentityModel.Tokens.SamlSubject" /> that identifies the subject of a <see cref="T:System.IdentityModel.Tokens.SamlSecurityToken" /> security token.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="samlSubject" /> is null.</exception>
    </member>
    <member name="T:System.IdentityModel.Tokens.SecurityAlgorithms">
      <summary>Defines constants for the URIs that represent the cryptographic algorithms that are used to encrypt XML and compute digital signatures for SOAP messages.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="F:System.IdentityModel.Tokens.SecurityAlgorithms.Aes128Encryption">
      <summary>Specifies a URI that points to the 128-bit AES cryptographic algorithm for encrypting XML. This field is constant. </summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="F:System.IdentityModel.Tokens.SecurityAlgorithms.Aes128KeyWrap">
      <summary>Specifies a URI that points to the 128-bit AES cryptographic algorithm for encrypting and decrypting symmetric keys (key wrap). This field is constant.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="F:System.IdentityModel.Tokens.SecurityAlgorithms.Aes192Encryption">
      <summary>Specifies a URI that points to the 192-bit AES cryptographic algorithm for encrypting XML. This field is constant. </summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="F:System.IdentityModel.Tokens.SecurityAlgorithms.Aes192KeyWrap">
      <summary>Specifies a URI that points to the 192-bit AES cryptographic algorithm for encrypting and decrypting symmetric keys (key wrap). This field is constant.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="F:System.IdentityModel.Tokens.SecurityAlgorithms.Aes256Encryption">
      <summary>Specifies a URI that points to the 256-bit AES cryptographic algorithm for encrypting XML. This field is constant. </summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="F:System.IdentityModel.Tokens.SecurityAlgorithms.Aes256KeyWrap">
      <summary>Specifies a URI that points to the 256-bit AES cryptographic algorithm for encrypting and decrypting symmetric keys (key wrap). This field is constant.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="F:System.IdentityModel.Tokens.SecurityAlgorithms.DesEncryption">
      <summary>Specifies a URI that points to the DES cryptographic algorithm for encrypting XML. This field is constant.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="F:System.IdentityModel.Tokens.SecurityAlgorithms.DsaSha1Signature">
      <summary>Specifies a URI that points to the DSA cryptographic algorithm for digitally signing XML. This field is constant.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="F:System.IdentityModel.Tokens.SecurityAlgorithms.ExclusiveC14n">
      <summary>Represents the Exclusive XML Without Comments Canonicalization algorithm. This field is constant.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="F:System.IdentityModel.Tokens.SecurityAlgorithms.ExclusiveC14nWithComments">
      <summary>Represents the Exclusive XML With Comments Canonicalization algorithm. This field is constant.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="F:System.IdentityModel.Tokens.SecurityAlgorithms.HmacSha1Signature">
      <summary>Specifies a URI that points to the HMAC cryptographic algorithm for digitally signing XML. This field is constant.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="F:System.IdentityModel.Tokens.SecurityAlgorithms.HmacSha256Signature">
      <summary>Specifies a URI that points to the 256-bit HMAC cryptographic algorithm for digitally signing XML. This field is constant.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="F:System.IdentityModel.Tokens.SecurityAlgorithms.Psha1KeyDerivation">
      <summary>Represents the P-SHA1 key generation algorithm. This field is constant.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="F:System.IdentityModel.Tokens.SecurityAlgorithms.Psha1KeyDerivationDec2005">
      <summary>Represents the December 2007 version of the P-SHA1 key generation algorithm. This field is constant.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="F:System.IdentityModel.Tokens.SecurityAlgorithms.Ripemd160Digest">
      <summary>Specifies a URI that points to the RIPEMD-160 cryptographic digest algorithm. This field is constant.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="F:System.IdentityModel.Tokens.SecurityAlgorithms.RsaOaepKeyWrap">
      <summary>Specifies a URI that points to the RSAES-OAEP-ENCRYPT cryptographic algorithm for encrypting and decrypting asymmetric keys (key wrap). This field is constant.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="F:System.IdentityModel.Tokens.SecurityAlgorithms.RsaSha1Signature">
      <summary>Specifies a URI that points to the RSA-SHA1 cryptographic algorithm for digitally signing XML. This field is constant.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="F:System.IdentityModel.Tokens.SecurityAlgorithms.RsaSha256Signature">
      <summary>Specifies a URI that points to the RSA-SHA256 cryptographic algorithm for digitally signing XML. This field is constant.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="F:System.IdentityModel.Tokens.SecurityAlgorithms.RsaV15KeyWrap">
      <summary>Specifies a URI that points to the RSAES-PKCS1-v1_5 cryptographic algorithm for encrypting and decrypting asymmetric keys (key wrap). This field is constant.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="F:System.IdentityModel.Tokens.SecurityAlgorithms.Sha1Digest">
      <summary>Specifies a URI that points to the 160-bit SHA-1 digest algorithm. This field is constant.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="F:System.IdentityModel.Tokens.SecurityAlgorithms.Sha256Digest">
      <summary>Specifies a URI that points to the 256-bit SHA-256 digest algorithm. This field is constant.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="F:System.IdentityModel.Tokens.SecurityAlgorithms.Sha512Digest">
      <summary>Specifies a URI that points to the 512-bit SHA-512 digest algorithm. This field is constant.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="F:System.IdentityModel.Tokens.SecurityAlgorithms.TlsSspiKeyWrap">
      <summary>Specifies a URI that points to the Transport Layer Security (TLS) algorithm for encrypting and decrypting symmetric keys (key wrap). This field is constant.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="F:System.IdentityModel.Tokens.SecurityAlgorithms.TripleDesEncryption">
      <summary>Specifies a URI that points to the Triple DES cryptographic algorithm for encrypting XML. This field is constant.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="F:System.IdentityModel.Tokens.SecurityAlgorithms.TripleDesKeyWrap">
      <summary>Specifies a URI that points to the Triple DES cryptographic algorithm for encrypting and decrypting symmetric keys (key wrap). This field is constant.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="F:System.IdentityModel.Tokens.SecurityAlgorithms.WindowsSspiKeyWrap">
      <summary>Specifies a URI that points to the GSS-API cryptographic algorithm for encrypting and decrypting Kerberos ticket session keys (key wrap). This field is constant.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="T:System.IdentityModel.Tokens.SecurityKey">
      <summary>Base class for security keys.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IdentityModel.Tokens.SecurityKey.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.IdentityModel.Tokens.SecurityKey" /> class. </summary>
    </member>
    <member name="M:System.IdentityModel.Tokens.SecurityKey.DecryptKey(System.String,System.Byte[])">
      <summary>When overridden in a derived class, decrypts the specified encrypted key.</summary>
      <returns>An array of <see cref="T:System.Byte" /> that contains the decrypted key.</returns>
      <param name="algorithm">The cryptographic algorithm that was used to encrypt the key.</param>
      <param name="keyData">An array of <see cref="T:System.Byte" /> that contains the encrypted key.</param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IdentityModel.Tokens.SecurityKey.EncryptKey(System.String,System.Byte[])">
      <summary>When overridden in a derived class, encrypts the specified key.</summary>
      <returns>An array of <see cref="T:System.Byte" /> that contains the encrypted key.</returns>
      <param name="algorithm">The cryptographic algorithm to encrypt the key with.</param>
      <param name="keyData">An array of <see cref="T:System.Byte" /> that contains the key.</param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IdentityModel.Tokens.SecurityKey.IsAsymmetricAlgorithm(System.String)">
      <summary>When overridden in a derived class, gets a value that indicates whether the specified algorithm uses asymmetric keys. </summary>
      <returns>true when the specified algorithm uses asymmetric keys; otherwise, false. </returns>
      <param name="algorithm">The cryptographic algorithm.</param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IdentityModel.Tokens.SecurityKey.IsSupportedAlgorithm(System.String)">
      <summary>When overridden in a derived class, gets a value that indicates whether the specified algorithm is supported by this class.</summary>
      <returns>true when the specified algorithm is supported by this class; otherwise, false.</returns>
      <param name="algorithm">The cryptographic algorithm.</param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IdentityModel.Tokens.SecurityKey.IsSymmetricAlgorithm(System.String)">
      <summary>When overridden in a derived class, gets a value that indicates whether the specified algorithm uses symmetric keys.</summary>
      <returns>true when the specified algorithm uses symmetric keys; otherwise, false.</returns>
      <param name="algorithm">The cryptographic algorithm.</param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.IdentityModel.Tokens.SecurityKey.KeySize">
      <summary>When overridden in a derived class, gets the size, in bits, of the key.</summary>
      <returns>The size, in bits, of the key.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="T:System.IdentityModel.Tokens.SecurityKeyIdentifier">
      <summary>Represents a key identifier.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IdentityModel.Tokens.SecurityKeyIdentifier.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.IdentityModel.Tokens.SecurityKeyIdentifier" /> class. </summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IdentityModel.Tokens.SecurityKeyIdentifier.#ctor(System.IdentityModel.Tokens.SecurityKeyIdentifierClause[])">
      <summary>Initializes a new instance of the <see cref="T:System.IdentityModel.Tokens.SecurityKeyIdentifier" /> class using the specified key identifier clauses. </summary>
      <param name="clauses">An array of <see cref="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" /> that contains the key identifier clauses.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="clauses" /> is null.</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IdentityModel.Tokens.SecurityKeyIdentifier.Add(System.IdentityModel.Tokens.SecurityKeyIdentifierClause)">
      <summary>Adds a key identifier clause to the end of the list.</summary>
      <param name="clause">A <see cref="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" /> to be added to the end of the list.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="clause" /> is null.</exception>
      <exception cref="T:System.InvalidOperationException">The value of the <see cref="P:System.IdentityModel.Tokens.SecurityKeyIdentifier.IsReadOnly" /> property is true.</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.IdentityModel.Tokens.SecurityKeyIdentifier.CanCreateKey">
      <summary>Gets a value that indicates whether a key can be created for at least one of the key identifier clauses. </summary>
      <returns>true if a key can be created for at least one of the key identifier clauses; otherwise, false. </returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.IdentityModel.Tokens.SecurityKeyIdentifier.Count">
      <summary>Gets the number of key identifier clauses.</summary>
      <returns>The number of key identifier clauses.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IdentityModel.Tokens.SecurityKeyIdentifier.CreateKey">
      <summary>Creates a key for one of the key identifier clauses.</summary>
      <returns>A <see cref="T:System.IdentityModel.Tokens.SecurityKey" /> that represents the created key.</returns>
      <exception cref="T:System.InvalidOperationException">A key could not be created for any of the key identifier clauses.</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IdentityModel.Tokens.SecurityKeyIdentifier.Find``1">
      <summary>Searches for a key identifier clause of the specified type and returns the first occurrence within the entire collection. </summary>
      <returns>The first <see cref="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" /> in the collection that is of the type specified in the <paramref name="TClause" /> parameter.</returns>
      <typeparam name="TClause">A <see cref="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" /> that represents the type of key identifier clause to search the collection for.</typeparam>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="TClause" /> is null.</exception>
      <exception cref="T:System.ArgumentException">The collection does not contain a key identifier clause of the type specified in the <paramref name="TClause" /> parameter.</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IdentityModel.Tokens.SecurityKeyIdentifier.GetEnumerator">
      <summary>Returns an enumerator that iterates through the collection of key identifier clauses.</summary>
      <returns>A <see cref="T:System.Collections.Generic.List`1.Enumerator" /> of type <see cref="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" /> for the collection.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.IdentityModel.Tokens.SecurityKeyIdentifier.IsReadOnly">
      <summary>Gets a value that indicates whether the properties of this instance are read-only.</summary>
      <returns>true if the properties of this instance are read-only; otherwise, false. The default is false.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.IdentityModel.Tokens.SecurityKeyIdentifier.Item(System.Int32)">
      <summary>Gets the key identifier clause at the specified index.</summary>
      <returns>The <see cref="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" /> at the specified index.</returns>
      <param name="index">The zero-based index of the key identifier clause in the collection of key identifier clauses.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> is less than 0.-or-<paramref name="index" /> is equal to or greater than <see cref="P:System.IdentityModel.Tokens.SecurityKeyIdentifier.Count" />.</exception>
    </member>
    <member name="M:System.IdentityModel.Tokens.SecurityKeyIdentifier.MakeReadOnly">
      <summary>Causes this instance to be read-only.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IdentityModel.Tokens.SecurityKeyIdentifier.System#Collections#IEnumerable#GetEnumerator">
      <summary>Returns an enumerator that iterates through the collection of key identifier clauses.</summary>
      <returns>A <see cref="T:System.Collections.Generic.IEnumerator`1" /> that can be used to iterate through the collection.</returns>
    </member>
    <member name="M:System.IdentityModel.Tokens.SecurityKeyIdentifier.ToString">
      <summary>Returns the current object.</summary>
      <returns>The current object.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IdentityModel.Tokens.SecurityKeyIdentifier.TryFind``1(``0@)">
      <summary>Searches for a key identifier clause of the specified type and returns a value that indicates whether a clause of that type could be found. When a type is found it is returned in the out parameter. </summary>
      <returns>true when a key identifier clause of the type specified in the <paramref name="TClause" /> parameter exists in the collection; otherwise, false. </returns>
      <param name="clause">When this method returns, contains a <see cref="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" /> that is of the type specified in the <paramref name="TClause" /> parameter when a clause of that type could be found in the collection. This parameter is passed un-initialized. </param>
      <typeparam name="TClause">A <see cref="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" /> that represents the type of key identifier clause to search the collection for.</typeparam>
      <filterpriority>2</filterpriority>
    </member>
    <member name="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause">
      <summary>Represents an abstract base class for a key identifier clause.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IdentityModel.Tokens.SecurityKeyIdentifierClause.#ctor(System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" /> class using the specified key identifier clause type. </summary>
      <param name="clauseType">The key identifier clause type. Sets the value of the <see cref="P:System.IdentityModel.Tokens.SecurityKeyIdentifierClause.ClauseType" /> property.</param>
    </member>
    <member name="M:System.IdentityModel.Tokens.SecurityKeyIdentifierClause.#ctor(System.String,System.Byte[],System.Int32)">
      <summary>Initializes a new instance of the <see cref="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" /> class using the specified key identifier clause type, nonce, and the derived key length. </summary>
      <param name="clauseType">The key identifier clause type. Sets the value of the <see cref="P:System.IdentityModel.Tokens.SecurityKeyIdentifierClause.ClauseType" /> property.</param>
      <param name="nonce">An array of <see cref="T:System.Byte" /> that contains the nonce that was used to create a derived key. Sets the value that is returned by the <see cref="M:System.IdentityModel.Tokens.SecurityKeyIdentifierClause.GetDerivationNonce" /> method.</param>
      <param name="length">The size of the derived key. Sets the value of the <see cref="P:System.IdentityModel.Tokens.SecurityKeyIdentifierClause.DerivationLength" /> property.</param>
    </member>
    <member name="P:System.IdentityModel.Tokens.SecurityKeyIdentifierClause.CanCreateKey">
      <summary>Gets a value that indicates whether a key can be created. </summary>
      <returns>true if a key can be created; otherwise, false. The default is false.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.IdentityModel.Tokens.SecurityKeyIdentifierClause.ClauseType">
      <summary>Gets the key identifier clause type.</summary>
      <returns>The key identifier clause type.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IdentityModel.Tokens.SecurityKeyIdentifierClause.CreateKey">
      <summary>Creates a key based on the parameters passed into the constructor.</summary>
      <returns>A <see cref="T:System.IdentityModel.Tokens.SecurityKey" /> that contains the created key.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.IdentityModel.Tokens.SecurityKeyIdentifierClause.DerivationLength">
      <summary>Gets the size of the derived key.</summary>
      <returns>The size of the derived key.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IdentityModel.Tokens.SecurityKeyIdentifierClause.GetDerivationNonce">
      <summary>Gets the nonce that was used to generate the derived key.</summary>
      <returns>An array of <see cref="T:System.Byte" /> that contains the nonce that was used to generate the derived key.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IdentityModel.Tokens.SecurityKeyIdentifierClause.Matches(System.IdentityModel.Tokens.SecurityKeyIdentifierClause)">
      <summary>Returns a value that indicates whether the key identifier for this instance is equivalent to the specified key identifier clause.</summary>
      <returns>true if <paramref name="keyIdentifierClause" /> is the same instance as the current instance; otherwise, false.</returns>
      <param name="keyIdentifierClause">A <see cref="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" /> to compare to.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="keyIdentifierClause" /> is null.</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="T:System.IdentityModel.Tokens.SecurityKeyType">
      <summary>Specifies the type of key that is associated with a security token.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="F:System.IdentityModel.Tokens.SecurityKeyType.SymmetricKey">
      <summary>Specifies that the key is a symmetric key.</summary>
    </member>
    <member name="F:System.IdentityModel.Tokens.SecurityKeyType.AsymmetricKey">
      <summary>Specifies that the key is an asymmetric key.</summary>
    </member>
    <member name="F:System.IdentityModel.Tokens.SecurityKeyType.BearerKey">
      <summary>Specifies that the security token does not contain a proof-of-possession key. </summary>
    </member>
    <member name="T:System.IdentityModel.Tokens.SecurityKeyUsage">
      <summary>Specifies how a key that is associated with a security token can be used.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="F:System.IdentityModel.Tokens.SecurityKeyUsage.Exchange">
      <summary>Specifies that the key can be used to exchange keys between a sender and a receiver.</summary>
    </member>
    <member name="F:System.IdentityModel.Tokens.SecurityKeyUsage.Signature">
      <summary>Specifies that the key can be used to generate a digital signature.</summary>
    </member>
    <member name="T:System.IdentityModel.Tokens.SecurityToken">
      <summary>Represents a base class used to implement all security tokens.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IdentityModel.Tokens.SecurityToken.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.IdentityModel.Tokens.SecurityToken" /> class. </summary>
    </member>
    <member name="M:System.IdentityModel.Tokens.SecurityToken.CanCreateKeyIdentifierClause``1">
      <summary>Gets a value that indicates whether this security token is capable of creating the specified key identifier. </summary>
      <returns>true when <paramref name="T" /> is of type <see cref="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" />; otherwise, false. </returns>
      <typeparam name="T">A <see cref="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" /> that specifies the key identifier to create.</typeparam>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IdentityModel.Tokens.SecurityToken.CreateKeyIdentifierClause``1">
      <summary>Creates the specified key identifier clause.</summary>
      <returns>A <see cref="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" /> that is a key identifier clause for the security token.</returns>
      <typeparam name="T">A <see cref="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" /> that specifies the key identifier to create.</typeparam>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.IdentityModel.Tokens.SecurityToken.Id">
      <summary>Gets a unique identifier of the security token.</summary>
      <returns>The unique identifier of the security token.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IdentityModel.Tokens.SecurityToken.MatchesKeyIdentifierClause(System.IdentityModel.Tokens.SecurityKeyIdentifierClause)">
      <summary>Returns a value that indicates whether the key identifier for this instance can be resolved to the specified key identifier.</summary>
      <returns>true if <paramref name="keyIdentifierClause" /> is a <see cref="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" /> and it has the same unique identifier as the <see cref="P:System.IdentityModel.Tokens.SecurityToken.Id" /> property; otherwise, false.</returns>
      <param name="keyIdentifierClause">A <see cref="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" /> to compare to this instance.</param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IdentityModel.Tokens.SecurityToken.ResolveKeyIdentifierClause(System.IdentityModel.Tokens.SecurityKeyIdentifierClause)">
      <summary>Gets the key for the specified key identifier clause.</summary>
      <returns>A <see cref="T:System.IdentityModel.Tokens.SecurityKey" /> that represents the key.</returns>
      <param name="keyIdentifierClause">A <see cref="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" /> to get the key for.</param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.IdentityModel.Tokens.SecurityToken.SecurityKeys">
      <summary>Gets the cryptographic keys associated with the security token.</summary>
      <returns>A <see cref="T:System.Collections.ObjectModel.ReadOnlyCollection`1" /> of type <see cref="T:System.IdentityModel.Tokens.SecurityKey" /> that contains the set of keys associated with the security token.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.IdentityModel.Tokens.SecurityToken.ValidFrom">
      <summary>Gets the first instant in time at which this security token is valid.</summary>
      <returns>A <see cref="T:System.DateTime" /> that represents the instant in time at which this security token is first valid.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.IdentityModel.Tokens.SecurityToken.ValidTo">
      <summary>Gets the last instant in time at which this security token is valid.</summary>
      <returns>A <see cref="T:System.DateTime" /> that represents the last instant in time at which this security token is valid.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="T:System.IdentityModel.Tokens.SecurityTokenException">
      <summary>The exception that is thrown when a problem occurs while processing a security token.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IdentityModel.Tokens.SecurityTokenException.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.IdentityModel.Tokens.SecurityTokenException" /> class. </summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IdentityModel.Tokens.SecurityTokenException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Initializes a new instance of the <see cref="T:System.IdentityModel.Tokens.SecurityTokenException" /> class using the specified XML serialization data and contextual data about the source and destination of the serialization stream.</summary>
      <param name="info">A <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that contains values that are used during serialization and deserialization.</param>
      <param name="context">A <see cref="T:System.IdentityModel.Tokens.SecurityTokenException" /> that contains data about the source and destination of the serialization stream.</param>
    </member>
    <member name="M:System.IdentityModel.Tokens.SecurityTokenException.#ctor(System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.IdentityModel.Tokens.SecurityTokenException" /> class using the specified error message. </summary>
      <param name="message">A message that identifies the reason the exception occurred.</param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IdentityModel.Tokens.SecurityTokenException.#ctor(System.String,System.Exception)">
      <summary>Initializes a new instance of the <see cref="T:System.IdentityModel.Tokens.SecurityTokenException" /> class using the specified error message and root cause of the error. </summary>
      <param name="message">A message that identifies the reason the exception occurred.</param>
      <param name="innerException">A <see cref="T:System.Exception" /> that represents the root cause of the exception.</param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="T:System.IdentityModel.Tokens.SecurityTokenTypes">
      <summary>Contains a set of static properties that returns strings that represent security token types.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.IdentityModel.Tokens.SecurityTokenTypes.Kerberos">
      <summary>Gets a string that represents a security token based upon a Kerberos ticket.</summary>
      <returns>A string that represents a security token based upon a Kerberos ticket.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.IdentityModel.Tokens.SecurityTokenTypes.Rsa">
      <summary>Gets a string that represents a security token based upon an RSA key.</summary>
      <returns>A string that represents a security token based upon an RSA key.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.IdentityModel.Tokens.SecurityTokenTypes.Saml">
      <summary>Gets a string that represents a security token based upon a SAML assertion.</summary>
      <returns>A string that represents a security token based upon a SAML assertion.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.IdentityModel.Tokens.SecurityTokenTypes.UserName">
      <summary>Gets a string that represents a security token based upon a user name and password.</summary>
      <returns>A string that represents a security token based upon a user name and password.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.IdentityModel.Tokens.SecurityTokenTypes.X509Certificate">
      <summary>Gets a string that represents a security token based upon an X.509 certificate.</summary>
      <returns>A string that represents a security token based upon an X.509 certificate.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="T:System.IdentityModel.Tokens.SecurityTokenValidationException">
      <summary>The exception that is thrown when a received security token is invalid. </summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IdentityModel.Tokens.SecurityTokenValidationException.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.IdentityModel.Tokens.SecurityTokenValidationException" /> class. </summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IdentityModel.Tokens.SecurityTokenValidationException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Initializes a new instance of the <see cref="T:System.IdentityModel.Tokens.SecurityTokenValidationException" /> class using the specified XML serialization data and contextual data about the source and destination of the serialization stream. </summary>
      <param name="info">A <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that contains values that are used during serialization and deserialization.</param>
      <param name="context">A <see cref="T:System.IdentityModel.Tokens.SecurityTokenValidationException" /> that contains data about the source and destination of the serialization stream.</param>
    </member>
    <member name="M:System.IdentityModel.Tokens.SecurityTokenValidationException.#ctor(System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.IdentityModel.Tokens.SecurityTokenValidationException" /> class using the specified error message. </summary>
      <param name="message">A message that identifies the reason the exception occurred.</param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IdentityModel.Tokens.SecurityTokenValidationException.#ctor(System.String,System.Exception)">
      <summary>Initializes a new instance of the <see cref="T:System.IdentityModel.Tokens.SecurityTokenValidationException" /> class using the specified error message and root cause of the error. </summary>
      <param name="message">A message that identifies the reason the exception occurred.</param>
      <param name="innerException">A <see cref="T:System.Exception" /> that represents the root cause of the exception.</param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="T:System.IdentityModel.Tokens.SigningCredentials">
      <summary>Represents the cryptographic key and security algorithms that are used to generate a digital signature.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IdentityModel.Tokens.SigningCredentials.#ctor(System.IdentityModel.Tokens.SecurityKey,System.String,System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.IdentityModel.Tokens.SigningCredentials" /> class. </summary>
      <param name="signingKey">A <see cref="T:System.IdentityModel.Tokens.SecurityKey" /> that contains the cryptographic key that is used to generate the digital signature. </param>
      <param name="signatureAlgorithm">A URI that represents the cryptographic algorithm that is used to generate the digital signature.</param>
      <param name="digestAlgorithm">A URI that represents the cryptographic algorithm that is used to compute the digest for the portion of the SOAP message that is to be digitally signed.</param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IdentityModel.Tokens.SigningCredentials.#ctor(System.IdentityModel.Tokens.SecurityKey,System.String,System.String,System.IdentityModel.Tokens.SecurityKeyIdentifier)">
      <summary>Initializes a new instance of the <see cref="T:System.IdentityModel.Tokens.SigningCredentials" /> class.</summary>
      <param name="signingKey">A <see cref="T:System.IdentityModel.Tokens.SecurityKey" /> that contains the cryptographic key that is used to generate the digital signature.</param>
      <param name="signatureAlgorithm">A URI that represents the cryptographic algorithm that is used to generate the digital signature.</param>
      <param name="digestAlgorithm">A URI that represents the cryptographic algorithm that is used to compute the digest for the portion of the SOAP message that is to be digitally signed.</param>
      <param name="signingKeyIdentifier">A <see cref="T:System.IdentityModel.Tokens.SecurityKeyIdentifier" /> that specifies the identifier that represents the key that is used to create a digital signature.</param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.IdentityModel.Tokens.SigningCredentials.DigestAlgorithm">
      <summary>Gets the cryptographic algorithm that is used to compute the digest for the portion of the SOAP message that is to be digitally signed.</summary>
      <returns>A URI that represents the cryptographic algorithm that is used to compute the digest for the portion of the SOAP message that is to be digitally signed.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.IdentityModel.Tokens.SigningCredentials.SignatureAlgorithm">
      <summary>Gets the cryptographic algorithm that is used to generate the digital signature.</summary>
      <returns>A URI that represents the cryptographic algorithm that is used to generate the digital signature.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.IdentityModel.Tokens.SigningCredentials.SigningKey">
      <summary>Gets the cryptographic key that is used to generate the digital signature.</summary>
      <returns>A <see cref="T:System.IdentityModel.Tokens.SecurityKey" /> that contains the cryptographic key that is used to generate the digital signature.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.IdentityModel.Tokens.SigningCredentials.SigningKeyIdentifier">
      <summary>Gets the identifier that represents the key that is used to create a digital signature.</summary>
      <returns>A <see cref="T:System.IdentityModel.Tokens.SecurityKeyIdentifier" /> that specifies the identifier that represents the key that is used to create a digital signature.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="T:System.IdentityModel.Tokens.SymmetricSecurityKey">
      <summary>Represents the abstract base class for all keys that are generated using symmetric algorithms.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IdentityModel.Tokens.SymmetricSecurityKey.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.IdentityModel.Tokens.SymmetricSecurityKey" /> class. </summary>
    </member>
    <member name="M:System.IdentityModel.Tokens.SymmetricSecurityKey.GenerateDerivedKey(System.String,System.Byte[],System.Byte[],System.Int32,System.Int32)">
      <summary>When overridden in a derived class, generates a derived key using the specified cryptographic algorithm and parameters for the current key. </summary>
      <returns>An array of <see cref="T:System.Byte" /> that contains the derived key.</returns>
      <param name="algorithm">A URI that represents the cryptographic algorithm to use to generate the derived key.</param>
      <param name="label">An array of <see cref="T:System.Byte" /> that contains the label parameter for the cryptographic algorithm.</param>
      <param name="nonce">An array of <see cref="T:System.Byte" /> that contains the nonce that is used to create a derived key.</param>
      <param name="derivedKeyLength">The size of the derived key.</param>
      <param name="offset">The position at which the derived key is located in the byte array that is returned from this method.</param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IdentityModel.Tokens.SymmetricSecurityKey.GetDecryptionTransform(System.String,System.Byte[])">
      <summary>When overridden in a derived class, gets a transform that decrypts cipher text using the specified cryptographic algorithm. </summary>
      <returns>An <see cref="T:System.Security.Cryptography.ICryptoTransform" /> that represents the decryption transform.</returns>
      <param name="algorithm">A cryptographic algorithm that decrypts cipher text, such as encrypted XML.</param>
      <param name="iv">An array of <see cref="T:System.Byte" /> that contains the initialization vector (IV) for the specified algorithm.</param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IdentityModel.Tokens.SymmetricSecurityKey.GetEncryptionTransform(System.String,System.Byte[])">
      <summary>When overridden in a derived class, gets a transform that encrypts XML using the specified cryptographic algorithm. </summary>
      <returns>An <see cref="T:System.Security.Cryptography.ICryptoTransform" /> that represents the encryption transform.</returns>
      <param name="algorithm">A cryptographic algorithm that encrypts XML.</param>
      <param name="iv">An array of <see cref="T:System.Byte" /> that contains the initialization vector (IV) for the specified algorithm.</param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IdentityModel.Tokens.SymmetricSecurityKey.GetIVSize(System.String)">
      <summary>When overridden in a derived class, gets the size, in bits, of the initialization vector (IV) that is required for the specified cryptographic algorithm. </summary>
      <returns>The size, in bits, of the initialization vector (IV) that is required for the cryptographic algorithm specified in the <paramref name="algorithm" /> parameter.</returns>
      <param name="algorithm">The cryptographic algorithm to get the size of the initialization vector (IV).</param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IdentityModel.Tokens.SymmetricSecurityKey.GetKeyedHashAlgorithm(System.String)">
      <summary>When overridden in a derived class, gets an instance of the specified keyed hash algorithm.</summary>
      <returns>A <see cref="T:System.Security.Cryptography.KeyedHashAlgorithm" /> that represents the keyed hash algorithm.</returns>
      <param name="algorithm">The keyed hash algorithm to get an instance of.</param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IdentityModel.Tokens.SymmetricSecurityKey.GetSymmetricAlgorithm(System.String)">
      <summary>When overridden in a derived class, gets an instance of the specified symmetric algorithm.</summary>
      <returns>A <see cref="T:System.Security.Cryptography.SymmetricAlgorithm" /> that represents the symmetric algorithm.</returns>
      <param name="algorithm">The symmetric algorithm to get an instance of.</param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IdentityModel.Tokens.SymmetricSecurityKey.GetSymmetricKey">
      <summary>When overridden in a derived class, gets the bytes that represent the symmetric key.</summary>
      <returns>An array of <see cref="T:System.Byte" /> that contains the symmetric key.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="T:System.IdentityModel.Tokens.UserNameSecurityToken">
      <summary>Represents a security token that is based upon a user name and password.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IdentityModel.Tokens.UserNameSecurityToken.#ctor(System.String,System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.IdentityModel.Tokens.UserNameSecurityToken" /> class using the specified user name and password. </summary>
      <param name="userName">A user name. Sets the <see cref="P:System.IdentityModel.Tokens.UserNameSecurityToken.UserName" /> property.</param>
      <param name="password">A password for the user name. Sets the <see cref="P:System.IdentityModel.Tokens.UserNameSecurityToken.Password" /> property.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="userName" /> is null.-or-<paramref name="password" /> is null.</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IdentityModel.Tokens.UserNameSecurityToken.#ctor(System.String,System.String,System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.IdentityModel.Tokens.UserNameSecurityToken" /> class using the specified user name, password, and unique identifier.</summary>
      <param name="userName">A user name. Sets the <see cref="P:System.IdentityModel.Tokens.UserNameSecurityToken.UserName" /> property.</param>
      <param name="password">A password for the user name. Sets the <see cref="P:System.IdentityModel.Tokens.UserNameSecurityToken.Password" /> property.</param>
      <param name="id">A unique identifier of the security token. Sets the <see cref="P:System.IdentityModel.Tokens.UserNameSecurityToken.Id" /> property.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="userName" /> is null.-or-<paramref name="password" /> is null.-or-<paramref name="id" /> is null.</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.IdentityModel.Tokens.UserNameSecurityToken.Id">
      <summary>Gets a unique identifier of the security token.</summary>
      <returns>A unique identifier of the security token.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.IdentityModel.Tokens.UserNameSecurityToken.Password">
      <summary>Gets the password for the user name associated with the security token.</summary>
      <returns>The password for the user name associated with the security token.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.IdentityModel.Tokens.UserNameSecurityToken.SecurityKeys">
      <summary>Gets the cryptographic keys associated with the security token.</summary>
      <returns>A <see cref="T:System.Collections.ObjectModel.ReadOnlyCollection`1" /> of type <see cref="T:System.IdentityModel.Tokens.SecurityKey" /> that contains the set of keys associated with the security token.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.IdentityModel.Tokens.UserNameSecurityToken.UserName">
      <summary>Gets the user name that is associated with the security token.</summary>
      <returns>The user name that is associated with the security token.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.IdentityModel.Tokens.UserNameSecurityToken.ValidFrom">
      <summary>Gets the first instant in time at which this security token is valid.</summary>
      <returns>A <see cref="T:System.DateTime" /> that represents the instant in time at which this security token is first valid.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.IdentityModel.Tokens.UserNameSecurityToken.ValidTo">
      <summary>Gets the last instant in time at which this security token is valid.</summary>
      <returns>A <see cref="T:System.DateTime" /> that represents the last instant in time at which this security token is valid.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="T:System.IdentityModel.Tokens.WindowsSecurityToken">
      <summary>Represents a security token that is based on the identity of a Windows domain or user account.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IdentityModel.Tokens.WindowsSecurityToken.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.IdentityModel.Tokens.WindowsSecurityToken" /> class. </summary>
    </member>
    <member name="M:System.IdentityModel.Tokens.WindowsSecurityToken.#ctor(System.Security.Principal.WindowsIdentity)">
      <summary>Initializes a new instance of the <see cref="T:System.IdentityModel.Tokens.WindowsSecurityToken" /> class using the Windows user. </summary>
      <param name="windowsIdentity">A <see cref="T:System.Security.Principal.WindowsIdentity" /> that represents a Windows user.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="windowsIdentity" /> is null.</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IdentityModel.Tokens.WindowsSecurityToken.#ctor(System.Security.Principal.WindowsIdentity,System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.IdentityModel.Tokens.WindowsSecurityToken" /> class using the Windows user. </summary>
      <param name="windowsIdentity">A <see cref="T:System.Security.Principal.WindowsIdentity" /> that represents a Windows user.</param>
      <param name="id">A unique identifier for the security token.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="windowsIdentity" /> is null.-or-<paramref name="id" /> is null.</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IdentityModel.Tokens.WindowsSecurityToken.#ctor(System.Security.Principal.WindowsIdentity,System.String,System.String)">
      <summary>Creates a new instance of <see cref="T:System.IdentityModel.Tokens.WindowsSecurityToken" />.</summary>
      <param name="windowsIdentity">A <see cref="T:System.Security.Principal.WindowsIdentity" /> that represents a Windows user.</param>
      <param name="id">A unique identifier for the security token.</param>
      <param name="authenticationType">The authentication type for the security token.</param>
    </member>
    <member name="P:System.IdentityModel.Tokens.WindowsSecurityToken.AuthenticationType">
      <summary>Gets the authentication type for the token.</summary>
      <returns>Returns <see cref="T:System.String" />.</returns>
    </member>
    <member name="M:System.IdentityModel.Tokens.WindowsSecurityToken.Dispose">
      <summary>Releases all resources used by the <see cref="T:System.IdentityModel.Tokens.WindowsSecurityToken" />. </summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.IdentityModel.Tokens.WindowsSecurityToken.Id">
      <summary>Gets the unique identifier for the security token.</summary>
      <returns>A unique identifier for the security token.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IdentityModel.Tokens.WindowsSecurityToken.Initialize(System.String,System.DateTime,System.DateTime,System.Security.Principal.WindowsIdentity,System.Boolean)">
      <summary>Initializes a new instance of the <see cref="T:System.IdentityModel.Tokens.WindowsSecurityToken" /> class using the specified unique identifier, Windows user, and the first and last instants in time when the security token is valid.</summary>
      <param name="id">A unique identifier for the security token. Sets the value of the <see cref="P:System.IdentityModel.Tokens.WindowsSecurityToken.Id" /> property.</param>
      <param name="effectiveTime">A <see cref="T:System.DateTime" /> that represents the instant in time at which this security token is first valid. Set the value of the <see cref="P:System.IdentityModel.Tokens.WindowsSecurityToken.ValidFrom" /> property.</param>
      <param name="expirationTime">A <see cref="T:System.DateTime" /> that represents the last instant in time at which this security token is valid. Sets the value of the <see cref="P:System.IdentityModel.Tokens.WindowsSecurityToken.ValidTo" /> property.</param>
      <param name="windowsIdentity">A <see cref="T:System.Security.Principal.WindowsIdentity" /> that represents a Windows user. Sets the value of the <see cref="P:System.IdentityModel.Tokens.WindowsSecurityToken.WindowsIdentity" /> property.</param>
      <param name="clone">true to create a <see cref="T:System.Security.Principal.WindowsIdentity" /> object that is identical to the <paramref name="windowsIdentity" /> parameter and assign that to the <see cref="P:System.IdentityModel.Tokens.WindowsSecurityToken.WindowsIdentity" /> property; otherwise, assign the value of the <paramref name="windowsIdentity" /> parameter to the <see cref="P:System.IdentityModel.Tokens.WindowsSecurityToken.WindowsIdentity" /> property.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="windowsIdentity" /> is null.-or-<paramref name="id" /> is null.</exception>
    </member>
    <member name="M:System.IdentityModel.Tokens.WindowsSecurityToken.Initialize(System.String,System.String,System.DateTime,System.DateTime,System.Security.Principal.WindowsIdentity,System.Boolean)">
      <summary>Initializes a new instance of the <see cref="T:System.IdentityModel.Tokens.WindowsSecurityToken" /> class.</summary>
      <param name="id">A unique identifier for the security token.</param>
      <param name="authenticationType">The authentication type for the security token.</param>
      <param name="effectiveTime">A <see cref="System.DateTime" /> that represents the instant in time at which this security token is first valid.</param>
      <param name="expirationTime">A <see cref="T:System.DateTime" /> that represents the last instant in time at which this security token is valid.</param>
      <param name="windowsIdentity">Represents a Windows user.</param>
      <param name="clone">true to create a <see cref="T:System.Security.Principal.WindowsIdentity" /> object that is identical to the <paramref name="windowsIdentity" /> parameter and assign that to the <paramref name="WindowsIdentity" /> property; otherwise, assign the value of the <paramref name="windowsIdentity" /> parameter to the <paramref name="WindowsIdentity" /> property.</param>
    </member>
    <member name="P:System.IdentityModel.Tokens.WindowsSecurityToken.SecurityKeys">
      <summary>Gets the cryptographic keys associated with the security token.</summary>
      <returns>A <see cref="T:System.Collections.ObjectModel.ReadOnlyCollection`1" /> of type <see cref="T:System.IdentityModel.Tokens.SecurityKey" /> that contains the set of keys associated with the security token.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IdentityModel.Tokens.WindowsSecurityToken.ThrowIfDisposed">
      <summary>Throws an exception if the <see cref="M:System.IdentityModel.Tokens.WindowsSecurityToken.Dispose" /> method has been called for this instance.</summary>
      <exception cref="T:System.ObjectDisposedException">the <see cref="M:System.IdentityModel.Tokens.WindowsSecurityToken.Dispose" /> method has been called for this instance.</exception>
    </member>
    <member name="P:System.IdentityModel.Tokens.WindowsSecurityToken.ValidFrom">
      <summary>Gets the first instant in time at which this security token is valid.</summary>
      <returns>A <see cref="T:System.DateTime" /> that represents the instant in time at which this security token is first valid.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.IdentityModel.Tokens.WindowsSecurityToken.ValidTo">
      <summary>Gets the last instant in time at which this security token is valid.</summary>
      <returns>A <see cref="T:System.DateTime" /> that represents the last instant in time at which this security token is valid.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.IdentityModel.Tokens.WindowsSecurityToken.WindowsIdentity">
      <summary>Gets the Windows user associated with this security token.</summary>
      <returns>A <see cref="T:System.Security.Principal.WindowsIdentity" /> that represents a Windows user.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="T:System.IdentityModel.Tokens.X509AsymmetricSecurityKey">
      <summary>Represents an asymmetric key for X.509 certificates.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IdentityModel.Tokens.X509AsymmetricSecurityKey.#ctor(System.Security.Cryptography.X509Certificates.X509Certificate2)">
      <summary>Initializes a new instance of the <see cref="T:System.IdentityModel.Tokens.X509AsymmetricSecurityKey" /> class using the specified X.509 certificate. </summary>
      <param name="certificate">The <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2" /> that represents the X.509 certificate.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="certificate" /> is null.</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IdentityModel.Tokens.X509AsymmetricSecurityKey.DecryptKey(System.String,System.Byte[])">
      <summary>Decrypts the specified encrypted key using the specified cryptographic algorithm.</summary>
      <returns>An array of <see cref="T:System.Byte" /> that contains the decrypted key.</returns>
      <param name="algorithm">The cryptographic algorithm to decrypt the key.</param>
      <param name="keyData">An array of <see cref="T:System.Byte" /> that contains the encrypted key.</param>
      <exception cref="T:System.NotSupportedException">The X.509 certificate specified in the constructor does not have a private key.-or-The X.509 certificate has a private key, but it was not generated using the <see cref="T:System.Security.Cryptography.RSA" /> algorithm.-or-The X.509 certificate has a private key, it was generated using the <see cref="T:System.Security.Cryptography.RSA" /> algorithm, but the <see cref="P:System.Security.Cryptography.AsymmetricAlgorithm.KeyExchangeAlgorithm" /> property is null.-or-The <paramref name="algorithm" /> parameter is not supported. The supported algorithms are <see cref="F:System.Security.Cryptography.Xml.EncryptedXml.XmlEncRSA15Url" /> and <see cref="F:System.Security.Cryptography.Xml.EncryptedXml.XmlEncRSAOAEPUrl" />.</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IdentityModel.Tokens.X509AsymmetricSecurityKey.EncryptKey(System.String,System.Byte[])">
      <summary>Encrypts the specified encrypted key using the specified cryptographic algorithm.</summary>
      <returns>An array of <see cref="T:System.Byte" /> that contains the encrypted key.</returns>
      <param name="algorithm">The cryptographic algorithm to encrypt the key.</param>
      <param name="keyData">An array of <see cref="T:System.Byte" /> that contains the key to encrypt.</param>
      <exception cref="T:System.NotSupportedException">The X.509 certificate specified in the constructor has a public key that was not generated using the <see cref="T:System.Security.Cryptography.RSA" /> algorithm.-or-The <paramref name="algorithm" /> parameter is not supported. The supported algorithms are <see cref="F:System.Security.Cryptography.Xml.EncryptedXml.XmlEncRSA15Url" /> and <see cref="F:System.Security.Cryptography.Xml.EncryptedXml.XmlEncRSAOAEPUrl" />.</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IdentityModel.Tokens.X509AsymmetricSecurityKey.GetAsymmetricAlgorithm(System.String,System.Boolean)">
      <summary>Gets the specified asymmetric cryptographic algorithm.</summary>
      <returns>An <see cref="T:System.Security.Cryptography.AsymmetricAlgorithm" /> that represents the specified asymmetric cryptographic algorithm.</returns>
      <param name="algorithm">The asymmetric algorithm to create.</param>
      <param name="privateKey">true when a private key is required to create the algorithm; otherwise, false. </param>
      <exception cref="T:System.NotSupportedException">
        <paramref name="privateKey" /> is true and the X.509 certificate specified in the constructor does not have a private key.-or-<paramref name="algorithm" /> is <see cref="F:System.Security.Cryptography.Xml.SignedXml.XmlDsigDSAUrl" /> and the public or private key for the X.509 certificate specified in the constructor is not of type <see cref="T:System.Security.Cryptography.DSA" />. -or-<paramref name="algorithm" /> is <see cref="F:System.Security.Cryptography.Xml.EncryptedXml.XmlEncRSA15Url" />, <see cref="F:System.Security.Cryptography.Xml.EncryptedXml.XmlEncRSAOAEPUrl" />, <see cref="F:System.Security.Cryptography.Xml.SignedXml.XmlDsigRSASHA1Url" /> or <see cref="F:System.IdentityModel.Tokens.SecurityAlgorithms.RsaSha256Signature" /> and the public or private key for the X.509 certificate specified in the constructor is not of type <see cref="T:System.Security.Cryptography.RSA" />. -or-<paramref name="algorithm" /> is not supported. The supported algorithms are <see cref="F:System.Security.Cryptography.Xml.SignedXml.XmlDsigDSAUrl" />, <see cref="F:System.Security.Cryptography.Xml.EncryptedXml.XmlEncRSA15Url" />, <see cref="F:System.Security.Cryptography.Xml.EncryptedXml.XmlEncRSAOAEPUrl" />, <see cref="F:System.Security.Cryptography.Xml.SignedXml.XmlDsigRSASHA1Url" />, and <see cref="F:System.IdentityModel.Tokens.SecurityAlgorithms.RsaSha256Signature" />.</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IdentityModel.Tokens.X509AsymmetricSecurityKey.GetHashAlgorithmForSignature(System.String)">
      <summary>Gets a cryptographic algorithm that generates a hash for a digital signature.</summary>
      <returns>A <see cref="T:System.Security.Cryptography.HashAlgorithm" /> that generates hashes for digital signatures.</returns>
      <param name="algorithm">The hash algorithm.</param>
      <exception cref="T:System.NotSupportedException">
        <paramref name="algorithm" /> is not supported. The supported algorithms are <see cref="F:System.Security.Cryptography.Xml.SignedXml.XmlDsigDSAUrl" />, <see cref="F:System.Security.Cryptography.Xml.SignedXml.XmlDsigRSASHA1Url" />, and <see cref="F:System.IdentityModel.Tokens.SecurityAlgorithms.RsaSha256Signature" />.</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IdentityModel.Tokens.X509AsymmetricSecurityKey.GetSignatureDeformatter(System.String)">
      <summary>Gets the de-formatter algorithm for the digital signature.</summary>
      <returns>An <see cref="T:System.Security.Cryptography.AsymmetricSignatureDeformatter" /> that represents the de-formatter algorithm for the digital signature.</returns>
      <param name="algorithm">The de-formatter algorithm for the digital signature to get an instance of.</param>
      <exception cref="T:System.NotSupportedException">
        <paramref name="algorithm" /> is <see cref="F:System.Security.Cryptography.Xml.SignedXml.XmlDsigDSAUrl" /> and the public key for the X.509 certificate specified in the constructor is not of type <see cref="T:System.Security.Cryptography.DSA" />.-or-<paramref name="algorithm" /> is <see cref="F:System.Security.Cryptography.Xml.SignedXml.XmlDsigRSASHA1Url" /> or <see cref="F:System.IdentityModel.Tokens.SecurityAlgorithms.RsaSha256Signature" /> and the public key for the X.509 certificate specified in the constructor is not of type <see cref="T:System.Security.Cryptography.RSA" />.-or-<paramref name="algorithm" /> is not supported. The supported algorithms are <see cref="F:System.Security.Cryptography.Xml.SignedXml.XmlDsigDSAUrl" />,<see cref="F:System.Security.Cryptography.Xml.SignedXml.XmlDsigRSASHA1Url" />, and <see cref="F:System.IdentityModel.Tokens.SecurityAlgorithms.RsaSha256Signature" />.</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IdentityModel.Tokens.X509AsymmetricSecurityKey.GetSignatureFormatter(System.String)">
      <summary>Gets the formatter algorithm for the digital signature.</summary>
      <returns>An <see cref="T:System.Security.Cryptography.AsymmetricSignatureDeformatter" /> that represents the formatter algorithm for the digital signature.</returns>
      <param name="algorithm">The formatter algorithm for the digital signature to get an instance of.</param>
      <exception cref="T:System.NotSupportedException">The X.509 certificate specified in the constructor does not have a private key.-or-<paramref name="algorithm" /> is <see cref="F:System.Security.Cryptography.Xml.SignedXml.XmlDsigDSAUrl" /> and the private key for the X.509 certificate specified in the constructor is not of type <see cref="T:System.Security.Cryptography.DSA" />.-or-<paramref name="algorithm" /> is <see cref="F:System.Security.Cryptography.Xml.SignedXml.XmlDsigRSASHA1Url" /> or <see cref="F:System.IdentityModel.Tokens.SecurityAlgorithms.RsaSha256Signature" /> and the private key for the X.509 certificate specified in the constructor is not of type <see cref="T:System.Security.Cryptography.RSA" />.-or-<paramref name="algorithm" /> is not supported. The supported algorithms are <see cref="F:System.Security.Cryptography.Xml.SignedXml.XmlDsigDSAUrl" />,<see cref="F:System.Security.Cryptography.Xml.SignedXml.XmlDsigRSASHA1Url" />, and <see cref="F:System.IdentityModel.Tokens.SecurityAlgorithms.RsaSha256Signature" />.</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IdentityModel.Tokens.X509AsymmetricSecurityKey.HasPrivateKey">
      <summary>Gets a value that indicates whether the private key is a available. </summary>
      <returns>true when the private key is available; otherwise, false.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IdentityModel.Tokens.X509AsymmetricSecurityKey.IsAsymmetricAlgorithm(System.String)">
      <summary>Gets a value that indicates whether the specified algorithm uses asymmetric keys.</summary>
      <returns>true when the specified algorithm is <see cref="F:System.IdentityModel.Tokens.SecurityAlgorithms.DsaSha1Signature" />, <see cref="F:System.IdentityModel.Tokens.SecurityAlgorithms.RsaSha1Signature" />, <see cref="F:System.IdentityModel.Tokens.SecurityAlgorithms.RsaSha256Signature" />, <see cref="F:System.IdentityModel.Tokens.SecurityAlgorithms.RsaOaepKeyWrap" />, or <see cref="F:System.IdentityModel.Tokens.SecurityAlgorithms.RsaV15KeyWrap" />; otherwise, false.</returns>
      <param name="algorithm">The cryptographic algorithm.</param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IdentityModel.Tokens.X509AsymmetricSecurityKey.IsSupportedAlgorithm(System.String)">
      <summary>Gets a value that indicates whether the specified algorithm is supported by this class.</summary>
      <returns>true when the specified algorithm is <see cref="F:System.Security.Cryptography.Xml.SignedXml.XmlDsigDSAUrl" />, <see cref="F:System.Security.Cryptography.Xml.EncryptedXml.XmlEncRSA15Url" />, <see cref="F:System.Security.Cryptography.Xml.EncryptedXml.XmlEncRSAOAEPUrl" />, <see cref="F:System.Security.Cryptography.Xml.SignedXml.XmlDsigRSASHA1Url" />, or <see cref="F:System.IdentityModel.Tokens.SecurityAlgorithms.RsaSha256Signature" /> and the public key is of the right type; otherwise, false. See the remarks for details.</returns>
      <param name="algorithm">The cryptographic algorithm.</param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IdentityModel.Tokens.X509AsymmetricSecurityKey.IsSymmetricAlgorithm(System.String)">
      <summary>Gets a value that indicates whether the specified algorithm uses symmetric keys.</summary>
      <returns>true when the specified algorithm is <see cref="F:System.IdentityModel.Tokens.SecurityAlgorithms.HmacSha1Signature" />, <see cref="F:System.IdentityModel.Tokens.SecurityAlgorithms.Aes128Encryption" />, <see cref="F:System.IdentityModel.Tokens.SecurityAlgorithms.Aes192Encryption" />, <see cref="F:System.IdentityModel.Tokens.SecurityAlgorithms.Aes256Encryption" />, <see cref="F:System.IdentityModel.Tokens.SecurityAlgorithms.TripleDesEncryption" />, <see cref="F:System.IdentityModel.Tokens.SecurityAlgorithms.Aes128KeyWrap" />, <see cref="F:System.IdentityModel.Tokens.SecurityAlgorithms.Aes192KeyWrap" />, <see cref="F:System.IdentityModel.Tokens.SecurityAlgorithms.Aes256KeyWrap" />, <see cref="F:System.IdentityModel.Tokens.SecurityAlgorithms.TripleDesKeyWrap" />, or <see cref="F:System.IdentityModel.Tokens.SecurityAlgorithms.Psha1KeyDerivation" />; otherwise, false.</returns>
      <param name="algorithm">The cryptographic algorithm.</param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.IdentityModel.Tokens.X509AsymmetricSecurityKey.KeySize">
      <summary>Gets the size, in bits, of the public key associated with the X.509 certificate.</summary>
      <returns>The size, in bits, of the public key associated with the X.509 certificate.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="T:System.IdentityModel.Tokens.X509IssuerSerialKeyIdentifierClause">
      <summary>Represents a key identifier clause that identifies a <see cref="T:System.IdentityModel.Tokens.X509SecurityToken" /> security tokens using the distinguished name of the certificate issuer and the X.509 certificate's serial number.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IdentityModel.Tokens.X509IssuerSerialKeyIdentifierClause.#ctor(System.Security.Cryptography.X509Certificates.X509Certificate2)">
      <summary>Initializes a new instance of the <see cref="T:System.IdentityModel.Tokens.X509IssuerSerialKeyIdentifierClause" /> class using the specified X.509 certificate. </summary>
      <param name="certificate">An <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2" /> that contains the X.509 certificate.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="certificate" /> is null.</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IdentityModel.Tokens.X509IssuerSerialKeyIdentifierClause.#ctor(System.String,System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.IdentityModel.Tokens.X509IssuerSerialKeyIdentifierClause" /> class using the specified distinguished name of the certificate issuer and the serial number of the X.509 certificate. </summary>
      <param name="issuerName">The distinguished name of the certificate authority that issued the X.509 certificate. Sets the value of the <see cref="P:System.IdentityModel.Tokens.X509IssuerSerialKeyIdentifierClause.IssuerName" /> property.</param>
      <param name="issuerSerialNumber">The serial number of the X.509 certificate. Sets the value of the <see cref="P:System.IdentityModel.Tokens.X509IssuerSerialKeyIdentifierClause.IssuerSerialNumber" /> property.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="issuerName" /> is null.-or-<paramref name="issuerSerialNumber" /> is null.</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.IdentityModel.Tokens.X509IssuerSerialKeyIdentifierClause.IssuerName">
      <summary>Gets the distinguished name of the certificate authority that issued the X.509 certificate.</summary>
      <returns>The distinguished name of the certificate authority that issued the X.509 certificate.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.IdentityModel.Tokens.X509IssuerSerialKeyIdentifierClause.IssuerSerialNumber">
      <summary>Gets the serial number of the X.509 certificate.</summary>
      <returns>The serial number of the X.509 certificate.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IdentityModel.Tokens.X509IssuerSerialKeyIdentifierClause.Matches(System.IdentityModel.Tokens.SecurityKeyIdentifierClause)">
      <summary>Returns a value that indicates whether the key identifier for this instance matches the specified key identifier.</summary>
      <returns>true if <paramref name="keyIdentifierClause" /> is a <see cref="T:System.IdentityModel.Tokens.X509IssuerSerialKeyIdentifierClause" /> type and the key identifier clauses match; otherwise, false.</returns>
      <param name="keyIdentifierClause">A <see cref="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" /> to compare to this instance.</param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IdentityModel.Tokens.X509IssuerSerialKeyIdentifierClause.Matches(System.Security.Cryptography.X509Certificates.X509Certificate2)">
      <summary>Returns a value that indicates whether the key identifier for this instance matches the specified X.509 certificate.</summary>
      <returns>true if <paramref name="certificate" /> has the same issuer name and issuer serial number as the current instance; otherwise, false.</returns>
      <param name="certificate">An <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2" /> that contains the X.509 certificate to compare.</param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IdentityModel.Tokens.X509IssuerSerialKeyIdentifierClause.Matches(System.String,System.String)">
      <summary>Returns a value that indicates whether the key identifier for this instance is equivalent to the specified issuer name and issuer serial number.</summary>
      <returns>true if the <paramref name="issuerName " />and <paramref name="issuerSerialNumber" /> parameters match the <see cref="P:System.IdentityModel.Tokens.X509IssuerSerialKeyIdentifierClause.IssuerName" /> and <see cref="P:System.IdentityModel.Tokens.X509IssuerSerialKeyIdentifierClause.IssuerSerialNumber" /> properties; otherwise, false.</returns>
      <param name="issuerName">The distinguished name of the certificate authority that issued the X.509 certificate.</param>
      <param name="issuerSerialNumber">The serial number of the X.509 certificate.</param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IdentityModel.Tokens.X509IssuerSerialKeyIdentifierClause.ToString">
      <summary>Returns the current object.</summary>
      <returns>A <see cref="T:System.String" /> that represents the current object.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="T:System.IdentityModel.Tokens.X509RawDataKeyIdentifierClause">
      <summary>Represents a key identifier clause that identifies a <see cref="T:System.IdentityModel.Tokens.X509SecurityToken" /> security token using the X.509 certificate's raw data.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IdentityModel.Tokens.X509RawDataKeyIdentifierClause.#ctor(System.Byte[])">
      <summary>Initializes a new instance of the <see cref="T:System.IdentityModel.Tokens.X509RawDataKeyIdentifierClause" /> class using the specified raw data of an X.509 certificate. </summary>
      <param name="certificateRawData">An array of <see cref="T:System.Byte" /> that contains the raw data of an X.509 certificate.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="certificateRawData" /> is null.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="certificateRawData" /> is zero length.</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IdentityModel.Tokens.X509RawDataKeyIdentifierClause.#ctor(System.Security.Cryptography.X509Certificates.X509Certificate2)">
      <summary>Initializes a new instance of the <see cref="T:System.IdentityModel.Tokens.X509RawDataKeyIdentifierClause" /> class using the specified X.509 certificate. </summary>
      <param name="certificate">An <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2" /> that contains the X.509 certificate.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="certificate" /> is null.</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.IdentityModel.Tokens.X509RawDataKeyIdentifierClause.CanCreateKey">
      <summary>Gets a value that indicates whether a key can be created from the raw data of the X.509 certificate or byte array that is specified in the constructor. </summary>
      <returns>true in all cases.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IdentityModel.Tokens.X509RawDataKeyIdentifierClause.CreateKey">
      <summary>Creates a key from the raw data of the X.509 certificate or byte array that is specified in the constructor.</summary>
      <returns>A <see cref="T:System.IdentityModel.Tokens.X509AsymmetricSecurityKey" /> that contains the key(s) associated with the X.509 certificate.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IdentityModel.Tokens.X509RawDataKeyIdentifierClause.GetX509RawData">
      <summary>Gets the raw data associated with the X.509 certificate.</summary>
      <returns>An array of <see cref="T:System.Byte" /> that contains the raw data associated with the X.509 certificate.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IdentityModel.Tokens.X509RawDataKeyIdentifierClause.Matches(System.Security.Cryptography.X509Certificates.X509Certificate2)">
      <summary>Returns a value that indicates whether the key identifier for this instance is equivalent to the specified X.509 certificate.</summary>
      <returns>true if <paramref name="certificate" /> has the raw data that matches the current instance; otherwise, false.</returns>
      <param name="certificate">An <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2" /> that contains the X.509 certificate to compare.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="certificate" /> is null.</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IdentityModel.Tokens.X509RawDataKeyIdentifierClause.ToString">
      <summary>Returns the current object.</summary>
      <returns>A <see cref="T:System.String" /> that represents the current object.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="T:System.IdentityModel.Tokens.X509SecurityToken">
      <summary>Represents a security token that is based upon an X.509 certificate.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IdentityModel.Tokens.X509SecurityToken.#ctor(System.Security.Cryptography.X509Certificates.X509Certificate2)">
      <summary>Initializes a new instance of the <see cref="T:System.IdentityModel.Tokens.X509SecurityToken" /> class using the specified X.509 certificate. </summary>
      <param name="certificate">An <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2" /> that contains the X.509 certificate. Sets the <see cref="P:System.IdentityModel.Tokens.X509SecurityToken.Certificate" /> property.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="certificate" /> is null.</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IdentityModel.Tokens.X509SecurityToken.#ctor(System.Security.Cryptography.X509Certificates.X509Certificate2,System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.IdentityModel.Tokens.X509SecurityToken" /> class using the specified X.509 certificate and unique identifier. </summary>
      <param name="certificate">An <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2" /> that contains the X.509 certificate. Sets the <see cref="P:System.IdentityModel.Tokens.X509SecurityToken.Certificate" /> property.</param>
      <param name="id">A unique identifier of the security token. Sets the <see cref="P:System.IdentityModel.Tokens.X509SecurityToken.Id" /> property.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="certificate" /> is null.-or-<paramref name="id" /> is null.</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IdentityModel.Tokens.X509SecurityToken.CanCreateKeyIdentifierClause``1">
      <summary>Gets a value indicating whether this security token is capable of creating the specified key identifier.</summary>
      <returns>true when <paramref name="T" /> is of type <see cref="T:System.IdentityModel.Tokens.X509SubjectKeyIdentifierClause" />, <see cref="T:System.IdentityModel.Tokens.X509ThumbprintKeyIdentifierClause" />, <see cref="T:System.IdentityModel.Tokens.X509IssuerSerialKeyIdentifierClause" />, or <see cref="T:System.IdentityModel.Tokens.X509RawDataKeyIdentifierClause" />; otherwise, false.</returns>
      <typeparam name="T">A <see cref="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" /> that specifies the key identifier to create.</typeparam>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.IdentityModel.Tokens.X509SecurityToken.Certificate">
      <summary>Gets the X.509 certificate associated with the security token.</summary>
      <returns>An <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2" /> that contains the X.509 certificate.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IdentityModel.Tokens.X509SecurityToken.CreateKeyIdentifierClause``1">
      <summary>Creates the specified key identifier clause.</summary>
      <returns>A <see cref="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" /> that is a key identifier clause for the security token.</returns>
      <typeparam name="T">A <see cref="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" /> that specifies the key identifier to create.</typeparam>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IdentityModel.Tokens.X509SecurityToken.Dispose">
      <summary>Releases all resources used by the <see cref="T:System.IdentityModel.Tokens.X509SecurityToken" />. </summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.IdentityModel.Tokens.X509SecurityToken.Id">
      <summary>Gets a unique identifier of the security token.</summary>
      <returns>A unique identifier of the security token.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IdentityModel.Tokens.X509SecurityToken.MatchesKeyIdentifierClause(System.IdentityModel.Tokens.SecurityKeyIdentifierClause)">
      <summary>Returns a value indicating whether the key identifier for this instance is equal to the specified key identifier.</summary>
      <returns>true if <paramref name="keyIdentifierClause" /> is one of the <see cref="T:System.IdentityModel.Tokens.X509SubjectKeyIdentifierClause" />, <see cref="T:System.IdentityModel.Tokens.X509ThumbprintKeyIdentifierClause" />, <see cref="T:System.IdentityModel.Tokens.X509IssuerSerialKeyIdentifierClause" />, or <see cref="T:System.IdentityModel.Tokens.X509RawDataKeyIdentifierClause" /> types and the key identifier clauses match; otherwise, false.</returns>
      <param name="keyIdentifierClause">An <see cref="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" /> to compare to this instance.</param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.IdentityModel.Tokens.X509SecurityToken.SecurityKeys">
      <summary>Gets the cryptographic keys associated with the security token.</summary>
      <returns>A <see cref="T:System.Collections.ObjectModel.ReadOnlyCollection`1" /> of type <see cref="T:System.IdentityModel.Tokens.SecurityKey" /> that contains the set of keys associated with the security token.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IdentityModel.Tokens.X509SecurityToken.ThrowIfDisposed">
      <summary>Throws an exception if the <see cref="M:System.IdentityModel.Tokens.X509SecurityToken.ThrowIfDisposed" /> method has been called for this instance.</summary>
      <exception cref="T:System.ObjectDisposedException">the <see cref="M:System.IdentityModel.Tokens.X509SecurityToken.ThrowIfDisposed" />  method has been called for this instance.</exception>
    </member>
    <member name="P:System.IdentityModel.Tokens.X509SecurityToken.ValidFrom">
      <summary>Gets the first instant in time at which this security token is valid.</summary>
      <returns>A <see cref="T:System.DateTime" /> that represents the instant in time at which this security token is first valid.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.IdentityModel.Tokens.X509SecurityToken.ValidTo">
      <summary>Gets the last instant in time at which this security token is valid.</summary>
      <returns>A <see cref="T:System.DateTime" /> that represents the last instant in time at which this security token is valid.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="T:System.IdentityModel.Tokens.X509SubjectKeyIdentifierClause">
      <summary>Represents a key identifier clause that identifies a <see cref="T:System.IdentityModel.Tokens.X509SecurityToken" /> security token using the X.509 certificate's subject key identifier extension.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IdentityModel.Tokens.X509SubjectKeyIdentifierClause.#ctor(System.Byte[])">
      <summary>Initializes a new instance of the <see cref="T:System.IdentityModel.Tokens.X509SubjectKeyIdentifierClause" /> class using the specified subject key identifier. </summary>
      <param name="ski">An array of <see cref="T:System.Byte" /> that contains the subject key identifier.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="ski" /> is null.</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IdentityModel.Tokens.X509SubjectKeyIdentifierClause.CanCreateFrom(System.Security.Cryptography.X509Certificates.X509Certificate2)">
      <summary>Gets a value that indicates whether a key identifier clause can be created for the specified X.509 certificate. </summary>
      <returns>true if a key identifier clause can be created for <paramref name="certificate" />; otherwise, false.</returns>
      <param name="certificate">An <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2" /> that contains the X.509 certificate.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="certificate" /> is null.</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IdentityModel.Tokens.X509SubjectKeyIdentifierClause.GetX509SubjectKeyIdentifier">
      <summary>Gets the subject key identifier.</summary>
      <returns>An array of <see cref="T:System.Byte" /> that contains the subject key identifier.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IdentityModel.Tokens.X509SubjectKeyIdentifierClause.Matches(System.Security.Cryptography.X509Certificates.X509Certificate2)">
      <summary>Returns a value that indicates whether the key identifier for this instance is equivalent to the key identifier of the specified X.509 certificate.</summary>
      <returns>true if <paramref name="certificate" /> has the same subject key identifier as the current instance; otherwise, false.</returns>
      <param name="certificate">An <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2" /> that contains the X.509 certificate to compare.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="certificate" /> is null.</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IdentityModel.Tokens.X509SubjectKeyIdentifierClause.ToString">
      <summary>Returns a string that represents the current object.</summary>
      <returns>A <see cref="T:System.String" /> that represents the current object.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IdentityModel.Tokens.X509SubjectKeyIdentifierClause.TryCreateFrom(System.Security.Cryptography.X509Certificates.X509Certificate2,System.IdentityModel.Tokens.X509SubjectKeyIdentifierClause@)">
      <summary>Creates a key identifier clause using the specified X.509 certificate.</summary>
      <returns>true when a key identifier clause can be created for the specified X.509 certificate; otherwise, false. </returns>
      <param name="certificate">An <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2" /> to create the key identifier clause for.</param>
      <param name="keyIdentifierClause">When this method returns, contains a <see cref="T:System.IdentityModel.Tokens.X509SubjectKeyIdentifierClause" /> that represents the key identifier clause. This parameter is passed uninitialized. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="certificate" /> is null.</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="T:System.IdentityModel.Tokens.X509ThumbprintKeyIdentifierClause">
      <summary>Represents a key identifier clause that identifies a <see cref="T:System.IdentityModel.Tokens.X509SecurityToken" /> security tokens using the X.509 certificate's thumbprint.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IdentityModel.Tokens.X509ThumbprintKeyIdentifierClause.#ctor(System.Byte[])">
      <summary>Initializes a new instance of the <see cref="T:System.IdentityModel.Tokens.X509ThumbprintKeyIdentifierClause" /> class using the specified thumbprint for an X.509 certificate. </summary>
      <param name="thumbprint">An array of <see cref="T:System.Byte" /> that contains the thumbprint of the X.509 certificate.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="thumbprint" /> is null.-or-<paramref name="thumbprint" /> is zero length.</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IdentityModel.Tokens.X509ThumbprintKeyIdentifierClause.#ctor(System.Security.Cryptography.X509Certificates.X509Certificate2)">
      <summary>Initializes a new instance of the <see cref="T:System.IdentityModel.Tokens.X509ThumbprintKeyIdentifierClause" /> class using the specified X.509 certificate. </summary>
      <param name="certificate">An <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2" /> that contains the X.509 certificate.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="certificate" /> is null.</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IdentityModel.Tokens.X509ThumbprintKeyIdentifierClause.GetX509Thumbprint">
      <summary>Returns the thumbprint for the X.509 certificate.</summary>
      <returns>An array of <see cref="T:System.Byte" /> that contains the thumbprint of the X.509 certificate.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IdentityModel.Tokens.X509ThumbprintKeyIdentifierClause.Matches(System.Security.Cryptography.X509Certificates.X509Certificate2)">
      <summary>Returns a value that indicates whether the key identifier for this instance is equivalent to the specified X.509 certificate's thumbprint.</summary>
      <returns>true if <paramref name="certificate" /> has the same thumbprint as the current instance; otherwise, false.</returns>
      <param name="certificate">An <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2" /> that contains the X.509 certificate to compare.</param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IdentityModel.Tokens.X509ThumbprintKeyIdentifierClause.ToString">
      <summary>Returns a string that represents the current object.</summary>
      <returns>A <see cref="T:System.String" /> that represents the current object.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="T:System.IdentityModel.Tokens.X509WindowsSecurityToken">
      <summary>Represents a security token that is based upon an X.509 certificate and that the certificate is mapped to a Windows domain user or local computer user account.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IdentityModel.Tokens.X509WindowsSecurityToken.#ctor(System.Security.Cryptography.X509Certificates.X509Certificate2,System.Security.Principal.WindowsIdentity)">
      <summary>Initializes a new instance of the <see cref="T:System.IdentityModel.Tokens.X509WindowsSecurityToken" /> class using the specified X.509 certificate and Windows domain or computer account. </summary>
      <param name="certificate">An <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2" /> that contains the X.509 certificate.</param>
      <param name="windowsIdentity">A <see cref="T:System.Security.Principal.WindowsIdentity" /> that represents the identity of a Windows domain or computer account.</param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IdentityModel.Tokens.X509WindowsSecurityToken.#ctor(System.Security.Cryptography.X509Certificates.X509Certificate2,System.Security.Principal.WindowsIdentity,System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.IdentityModel.Tokens.X509WindowsSecurityToken" /> class using the specified X.509 certificate, Windows domain or computer account, and unique identifier.</summary>
      <param name="certificate">An <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2" /> that contains the X.509 certificate.</param>
      <param name="windowsIdentity">A <see cref="T:System.Security.Principal.WindowsIdentity" /> that represents the identity of a Windows domain or computer account.</param>
      <param name="id">A unique identifier of the security token.</param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IdentityModel.Tokens.X509WindowsSecurityToken.#ctor(System.Security.Cryptography.X509Certificates.X509Certificate2,System.Security.Principal.WindowsIdentity,System.String,System.String)">
      <summary>Creates a new instance of <see cref="T:System.IdentityModel.Tokens.X509WindowsSecurityToken" />.</summary>
      <param name="certificate">A <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2" /> that contains the X.509 certificate.</param>
      <param name="windowsIdentity">Represents the identity of a Windows domain or computer account.</param>
      <param name="authenticationType">The authentication type for the token.</param>
      <param name="id">A unique identifier for the security token.</param>
    </member>
    <member name="P:System.IdentityModel.Tokens.X509WindowsSecurityToken.AuthenticationType">
      <summary>Gets the authentication type for the token.</summary>
      <returns>Returns <see cref="T:System.String" />.</returns>
    </member>
    <member name="M:System.IdentityModel.Tokens.X509WindowsSecurityToken.Dispose">
      <summary>Releases all resources used by the <see cref="T:System.IdentityModel.Tokens.X509WindowsSecurityToken" />. </summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.IdentityModel.Tokens.X509WindowsSecurityToken.WindowsIdentity">
      <summary>Gets the identity of a Windows domain or computer account.</summary>
      <returns>A <see cref="T:System.Security.Principal.WindowsIdentity" /> that represents the identity of a Windows domain or computer account.</returns>
      <filterpriority>2</filterpriority>
    </member>
  </members>
</doc>
=== C:/Users/treeman/Desktop/windows nt source code\xbox\Xbox Live Source\XONLINE_MAIN\public\ext\sdk\CLR\netfx40rtm\Profile\Client\System.Messaging.xml ===
﻿<?xml version="1.0" encoding="utf-8"?>
<doc>
  <assembly>
    <name>System.Messaging</name>
  </assembly>
  <members>
    <member name="T:System.Messaging.AccessControlEntry">
      <summary>Specifies access rights for a trustee (user, group, or computer) to perform application-specific implementations of common tasks.</summary>
    </member>
    <member name="M:System.Messaging.AccessControlEntry.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Messaging.AccessControlEntry" /> class that specifies neither a trustee nor set of rights to apply.</summary>
    </member>
    <member name="M:System.Messaging.AccessControlEntry.#ctor(System.Messaging.Trustee)">
      <summary>Initializes a new instance of the <see cref="T:System.Messaging.AccessControlEntry" /> class that specifies a trustee to which rights are granted or denied.</summary>
      <param name="trustee">A <see cref="T:System.Messaging.Trustee" /> that specifies a user, group, computer, domain, or alias. </param>
      <exception cref="T:System.ArgumentNullException">The <paramref name="trustee" /> parameter is null. </exception>
    </member>
    <member name="M:System.Messaging.AccessControlEntry.#ctor(System.Messaging.Trustee,System.Messaging.GenericAccessRights,System.Messaging.StandardAccessRights,System.Messaging.AccessControlEntryType)">
      <summary>Initializes a new instance of the <see cref="T:System.Messaging.AccessControlEntry" /> class that specifies a trustee, rights to assign, and whether to grant or deny these rights.</summary>
      <param name="trustee">A <see cref="T:System.Messaging.Trustee" /> that specifies a user, group, computer, domain, or alias. </param>
      <param name="genericAccessRights">A bitwise combination of the <see cref="T:System.Messaging.GenericAccessRights" /> values. </param>
      <param name="standardAccessRights">A bitwise combination of the <see cref="T:System.Messaging.StandardAccessRights" /> values. </param>
      <param name="entryType">One of the <see cref="T:System.Messaging.AccessControlEntryType" /> values, which specifies whether to allow, deny, set, or revoke the specified rights. </param>
      <exception cref="T:System.ArgumentNullException">The <paramref name="trustee" /> parameter is null. </exception>
      <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">The <paramref name="genericAccessRights" />, <paramref name="standardAccessRights" />, or <paramref name="entryType" /> parameters are not valid enumeration values. </exception>
    </member>
    <member name="P:System.Messaging.AccessControlEntry.CustomAccessRights">
      <summary>Gets or sets custom access rights.</summary>
      <returns>Application-specific access rights, usually defined as a bitflag.</returns>
    </member>
    <member name="P:System.Messaging.AccessControlEntry.EntryType">
      <summary>Gets or sets a value that indicates how the access rights apply to the trustee.</summary>
      <returns>One of the <see cref="T:System.Messaging.AccessControlEntryType" /> values, which specifies whether to allow, deny, set, or revoke the specified rights. The default is Allow.</returns>
      <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">The entry type is not a valid <see cref="T:System.Messaging.AccessControlEntryType" /> enumeration value. </exception>
    </member>
    <member name="P:System.Messaging.AccessControlEntry.GenericAccessRights">
      <summary>Gets or sets a set of common access rights that map to both standard and object-specific access rights for reading, writing, and executing.</summary>
      <returns>A bitwise combination of the <see cref="T:System.Messaging.GenericAccessRights" /> values.</returns>
      <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">The value you set is not a valid combination of <see cref="T:System.Messaging.GenericAccessRights" /> bitflag members. </exception>
    </member>
    <member name="P:System.Messaging.AccessControlEntry.StandardAccessRights">
      <summary>Gets or sets a set of standard access rights that correspond to operations common to most types of securable objects.</summary>
      <returns>A bitwise combination of the <see cref="T:System.Messaging.StandardAccessRights" /> values.</returns>
      <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">The value you set is not a valid combination of <see cref="T:System.Messaging.StandardAccessRights" /> bitflag members. </exception>
    </member>
    <member name="P:System.Messaging.AccessControlEntry.Trustee">
      <summary>Gets or sets the user, group, domain, or alias to which you are assigning access rights.</summary>
      <returns>A <see cref="T:System.Messaging.Trustee" /> that specifies a user account, group account, or logon session to which a <see cref="T:System.Messaging.AccessControlEntry" /> applies.</returns>
      <exception cref="T:System.ArgumentNullException">The <see cref="P:System.Messaging.AccessControlEntry.Trustee" /> property is null. </exception>
    </member>
    <member name="T:System.Messaging.AccessControlEntryType">
      <summary>Specifies whether to allow, deny, or revoke access rights for a trustee.</summary>
    </member>
    <member name="F:System.Messaging.AccessControlEntryType.Allow">
      <summary>An access-allowed entry that causes the new rights to be added to any existing rights the trustee has.</summary>
    </member>
    <member name="F:System.Messaging.AccessControlEntryType.Set">
      <summary>An access-allowed entry that is similar to Allow, except that the new entry allows only the specified rights. Using it discards any existing rights, including all existing access-denied entries for the trustee.</summary>
    </member>
    <member name="F:System.Messaging.AccessControlEntryType.Deny">
      <summary>An access-denied entry that denies the specified rights in addition to any currently denied rights of the trustee.</summary>
    </member>
    <member name="F:System.Messaging.AccessControlEntryType.Revoke">
      <summary>An entry that removes all existing allowed or denied rights for the specified trustee.</summary>
    </member>
    <member name="T:System.Messaging.AccessControlList">
      <summary>Contains a list of access control entries, specifying access rights for one or more trustees.</summary>
    </member>
    <member name="M:System.Messaging.AccessControlList.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Messaging.AccessControlList" /> class.</summary>
    </member>
    <member name="M:System.Messaging.AccessControlList.Add(System.Messaging.AccessControlEntry)">
      <summary>Appends an access control entry to the access control list.</summary>
      <returns>The position into which the new access control entry was inserted.</returns>
      <param name="entry">A <see cref="T:System.Messaging.AccessControlEntry" /> to append to the end of the access control list. </param>
      <exception cref="T:System.ArgumentNullException">The <paramref name="entry" /> parameter is null. </exception>
    </member>
    <member name="M:System.Messaging.AccessControlList.Contains(System.Messaging.AccessControlEntry)">
      <summary>Determines whether the access control list contains a specific access control entry.</summary>
      <returns>true if the access control entry is found in the access control list; otherwise, false.</returns>
      <param name="entry">The <see cref="T:System.Messaging.AccessControlEntry" /> to locate in the access control list. </param>
    </member>
    <member name="M:System.Messaging.AccessControlList.CopyTo(System.Messaging.AccessControlEntry[],System.Int32)">
      <summary>Copies the entire access control list to a compatible one-dimensional array of access control entries, starting at the specified index of the target array.</summary>
      <param name="array">An array of type <see cref="T:System.Messaging.AccessControlEntry" /> to which the access control list entries will be copied. The array must have zero-based indexing. </param>
      <param name="index">The index in the array at which to begin copying the access control list entries. </param>
      <exception cref="T:System.ArgumentNullException">The <paramref name="array" /> parameter is null. </exception>
      <exception cref="T:System.ArgumentOutOfRangeException">The <paramref name="index" /> parameter is less than zero. </exception>
      <exception cref="T:System.ArgumentException">The <paramref name="index" /> parameter is greater than or equal to the length of the <paramref name="array" /> parameter.-or-The number of elements in the source access control list is greater than the available space from <paramref name="index" /> to the end of the destination array of access control entries. </exception>
    </member>
    <member name="M:System.Messaging.AccessControlList.IndexOf(System.Messaging.AccessControlEntry)">
      <summary>Determines the specific index of an access control entry in the access control list.</summary>
      <returns>The index of the entry if it was found in the list; otherwise, -1 </returns>
      <param name="entry">The <see cref="T:System.Messaging.AccessControlEntry" /> to locate in the access control list. </param>
    </member>
    <member name="M:System.Messaging.AccessControlList.Insert(System.Int32,System.Messaging.AccessControlEntry)">
      <summary>Inserts an access control entry into the access control list at the specified position.</summary>
      <param name="index">The zero-based index at which the access control entry should be inserted. </param>
      <param name="entry">A <see cref="T:System.Messaging.AccessControlEntry" /> to insert into the access control list. </param>
      <exception cref="T:System.ArgumentOutOfRangeException">The <paramref name="index" /> parameter is not a valid index in this access control list. </exception>
      <exception cref="T:System.ArgumentNullException">The <paramref name="entry" /> parameter is null. </exception>
    </member>
    <member name="M:System.Messaging.AccessControlList.Remove(System.Messaging.AccessControlEntry)">
      <summary>Removes the first occurrence of a specific access control entry from the access control list.</summary>
      <param name="entry">The <see cref="T:System.Messaging.AccessControlEntry" /> to remove from the access control list. </param>
      <exception cref="T:System.ArgumentNullException">The <paramref name="entry" /> parameter is null. </exception>
    </member>
    <member name="T:System.Messaging.AcknowledgeTypes">
      <summary>Specifies the types of acknowledgment message that Message Queuing returns to the sending application.</summary>
    </member>
    <member name="F:System.Messaging.AcknowledgeTypes.PositiveArrival">
      <summary>A mask used to request a positive acknowledgment when the original message reaches the queue.</summary>
    </member>
    <member name="F:System.Messaging.AcknowledgeTypes.PositiveReceive">
      <summary>A mask used to request a positive acknowledgment when the original message is successfully retrieved from the queue.</summary>
    </member>
    <member name="F:System.Messaging.AcknowledgeTypes.NegativeReceive">
      <summary>A mask used to request a negative acknowledgment when the original message fails to be received from the queue.</summary>
    </member>
    <member name="F:System.Messaging.AcknowledgeTypes.None">
      <summary>A mask used to request that no acknowledgment messages (positive or negative) be posted.</summary>
    </member>
    <member name="F:System.Messaging.AcknowledgeTypes.NotAcknowledgeReachQueue">
      <summary>A mask used to request a negative acknowledgment when the original message cannot reach the queue. This can happen when the time-to-reach-queue timer expires or if a message cannot be authenticated.</summary>
    </member>
    <member name="F:System.Messaging.AcknowledgeTypes.NotAcknowledgeReceive">
      <summary>A mask used to request a negative acknowledgment when an error occurs that prevents the original message from being received from the queue before its time-to-be-received timer expires.</summary>
    </member>
    <member name="F:System.Messaging.AcknowledgeTypes.FullReachQueue">
      <summary>A mask used to request positive acknowledgment if the original message reaches the queue or negative acknowledgment if the time-to-reach-queue timer expires or if the original message cannot be authenticated.</summary>
    </member>
    <member name="F:System.Messaging.AcknowledgeTypes.FullReceive">
      <summary>A mask used to request positive acknowledgment if the original message is received from the queue before its time-to-be-received timer expires or negative acknowledgment otherwise.</summary>
    </member>
    <member name="T:System.Messaging.Acknowledgment">
      <summary>Specifies the result of an attempted message delivery.</summary>
    </member>
    <member name="F:System.Messaging.Acknowledgment.None">
      <summary>The message is not an acknowledgment message.</summary>
    </member>
    <member name="F:System.Messaging.Acknowledgment.AccessDenied">
      <summary>A negative arrival acknowledgment indicating that the sending application does not have the necessary rights to send a message to the destination queue.</summary>
    </member>
    <member name="F:System.Messaging.Acknowledgment.BadDestinationQueue">
      <summary>A negative arrival acknowledgment indicating that the destination queue is not available to the sending application.</summary>
    </member>
    <member name="F:System.Messaging.Acknowledgment.BadEncryption">
      <summary>A negative arrival acknowledgment indicating that the destination queue manager could not decrypt a private message.</summary>
    </member>
    <member name="F:System.Messaging.Acknowledgment.BadSignature">
      <summary>A negative arrival acknowledgment indicating that the original message's digital signature is not valid and could not be authenticated by Message Queuing.</summary>
    </member>
    <member name="F:System.Messaging.Acknowledgment.CouldNotEncrypt">
      <summary>A negative arrival acknowledgment indicating that the source queue manager could not encrypt a private message.</summary>
    </member>
    <member name="F:System.Messaging.Acknowledgment.HopCountExceeded">
      <summary>A negative arrival acknowledgment indicating that the original message's hop count (which indicates the number of intermediate servers) was exceeded.</summary>
    </member>
    <member name="F:System.Messaging.Acknowledgment.NotTransactionalQueue">
      <summary>A negative arrival acknowledgment indicating that a transactional message was sent to a non-transactional queue.</summary>
    </member>
    <member name="F:System.Messaging.Acknowledgment.NotTransactionalMessage">
      <summary>A negative arrival acknowledgment indicating that a non-transactional message was sent to a transactional queue.</summary>
    </member>
    <member name="F:System.Messaging.Acknowledgment.Purged">
      <summary>A negative arrival acknowledgment indicating that the message was purged before reaching its destination queue.</summary>
    </member>
    <member name="F:System.Messaging.Acknowledgment.QueueDeleted">
      <summary>A negative read acknowledgment indicating that the queue was deleted before the message could be read.</summary>
    </member>
    <member name="F:System.Messaging.Acknowledgment.QueueExceedMaximumSize">
      <summary>A negative arrival acknowledgment indicating that the original message was not delivered because its destination queue is full.</summary>
    </member>
    <member name="F:System.Messaging.Acknowledgment.QueuePurged">
      <summary>A negative read acknowledgment indicating that the queue was purged before the message could be read.</summary>
    </member>
    <member name="F:System.Messaging.Acknowledgment.ReachQueue">
      <summary>A positive arrival acknowledgment indicating that the original message reached its destination queue.</summary>
    </member>
    <member name="F:System.Messaging.Acknowledgment.ReachQueueTimeout">
      <summary>A negative arrival acknowledgment indicating that the time-to-reach-queue or time-to-be-received timer expired before the original message could reach the destination queue.</summary>
    </member>
    <member name="F:System.Messaging.Acknowledgment.ReceiveTimeout">
      <summary>A negative read acknowledgment indicating that the original message was not received from the queue before its time-to-be-received timer expired.</summary>
    </member>
    <member name="F:System.Messaging.Acknowledgment.Receive">
      <summary>A positive read acknowledgment indicating that the original message was received by the receiving application.</summary>
    </member>
    <member name="T:System.Messaging.ActiveXMessageFormatter">
      <summary>Serializes or deserializes primitive data types and other objects to or from the body of a Message Queuing message, using a format that is compatible with the MSMQ ActiveX Component.</summary>
    </member>
    <member name="M:System.Messaging.ActiveXMessageFormatter.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Messaging.ActiveXMessageFormatter" /> class.</summary>
    </member>
    <member name="M:System.Messaging.ActiveXMessageFormatter.CanRead(System.Messaging.Message)">
      <summary>Determines whether the formatter can deserialize the contents of the message.</summary>
      <returns>true if the <see cref="T:System.Messaging.ActiveXMessageFormatter" /> can deserialize the message; otherwise, false.</returns>
      <param name="message">The <see cref="T:System.Messaging.Message" /> to inspect. </param>
      <exception cref="T:System.ArgumentNullException">The <paramref name="message" /> parameter is null. </exception>
    </member>
    <member name="M:System.Messaging.ActiveXMessageFormatter.Clone">
      <summary>Creates an instance of the <see cref="T:System.Messaging.ActiveXMessageFormatter" /> class that is identical to the current <see cref="T:System.Messaging.ActiveXMessageFormatter" />.</summary>
      <returns>An object whose properties are identical to those of this <see cref="T:System.Messaging.ActiveXMessageFormatter" />.</returns>
    </member>
    <member name="M:System.Messaging.ActiveXMessageFormatter.InitStreamedObject(System.Object)">
      <summary>Provides a utility to help serialize COM objects that implement IPersistStream and require IPersistStreamInit to be called.</summary>
      <param name="streamedObject">An OLE object that implements IPersistStreamInit. </param>
    </member>
    <member name="M:System.Messaging.ActiveXMessageFormatter.Read(System.Messaging.Message)">
      <summary>Reads the contents from the given message and creates an object that contains the deserialized message.</summary>
      <returns>The deserialized message.</returns>
      <param name="message">The <see cref="T:System.Messaging.Message" />, in MSMQ ActiveX control format, to deserialize. </param>
      <exception cref="T:System.InvalidOperationException">The <see cref="P:System.Messaging.Message.BodyType" /> property of the <paramref name="message" /> passed as a parameter cannot be mapped to a primitive type, nor does it represent a streamed object. </exception>
      <exception cref="T:System.NotSupportedException">The body represents a stored object. The <see cref="T:System.Messaging.ActiveXMessageFormatter" /> does not support deserialization of stored objects. </exception>
      <exception cref="T:System.ArgumentNullException">The <paramref name="message" /> parameter is null. </exception>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="M:System.Messaging.ActiveXMessageFormatter.Write(System.Messaging.Message,System.Object)">
      <summary>Serializes an object into the body of the message.</summary>
      <param name="message">The <see cref="T:System.Messaging.Message" /> whose <see cref="P:System.Messaging.Message.Body" /> property will contain the serialized object. </param>
      <param name="obj">The object to be serialized into the message body. </param>
      <exception cref="T:System.InvalidOperationException">The object to serialize is neither a primitive nor a streamed object that implements the OLE IPersistStream interface. </exception>
      <exception cref="T:System.ArgumentNullException">The <paramref name="message" /> parameter is null. </exception>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="T:System.Messaging.BinaryMessageFormatter">
      <summary>Serializes or deserializes an object, or an entire graph of connected objects, to or from the body of a Message Queuing message, using a binary format.</summary>
    </member>
    <member name="M:System.Messaging.BinaryMessageFormatter.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Messaging.BinaryMessageFormatter" /> class without specifying a type style or top object assembly style.</summary>
    </member>
    <member name="M:System.Messaging.BinaryMessageFormatter.#ctor(System.Runtime.Serialization.Formatters.FormatterAssemblyStyle,System.Runtime.Serialization.Formatters.FormatterTypeStyle)">
      <summary>Initializes a new instance of the <see cref="T:System.Messaging.BinaryMessageFormatter" /> class, specifying the formats of the root object and the type descriptions.</summary>
      <param name="topObjectFormat">Determines how the top (root) object of a graph is laid out in the serialized stream. </param>
      <param name="typeFormat">Determines how type descriptions are laid out in the serialized stream. </param>
    </member>
    <member name="M:System.Messaging.BinaryMessageFormatter.CanRead(System.Messaging.Message)">
      <summary>Determines whether the formatter can deserialize the contents of the message.</summary>
      <returns>true if the binary message formatter can deserialize the message; otherwise, false.</returns>
      <param name="message">The <see cref="T:System.Messaging.Message" /> to inspect. </param>
      <exception cref="T:System.ArgumentNullException">The <paramref name="message" /> parameter is null. </exception>
    </member>
    <member name="M:System.Messaging.BinaryMessageFormatter.Clone">
      <summary>Creates an instance of the <see cref="T:System.Messaging.BinaryMessageFormatter" /> class whose read/write properties (the root object and type description formats) are the same as the current <see cref="T:System.Messaging.BinaryMessageFormatter" />.</summary>
      <returns>An object whose properties are identical to those of this <see cref="T:System.Messaging.BinaryMessageFormatter" />, but whose metadata does not specify it to be a formatter class instance.</returns>
    </member>
    <member name="M:System.Messaging.BinaryMessageFormatter.Read(System.Messaging.Message)">
      <summary>Reads the contents from the given message and creates an object that contains the deserialized message.</summary>
      <returns>The deserialized message.</returns>
      <param name="message">The <see cref="T:System.Messaging.Message" />, in binary format, to deserialize. </param>
      <exception cref="T:System.InvalidOperationException">The message's <see cref="P:System.Messaging.Message.BodyType" /> property does not indicate a binary object. </exception>
      <exception cref="T:System.ArgumentNullException">The <paramref name="message" /> parameter is null. </exception>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="ControlEvidence" />
      </PermissionSet>
    </member>
    <member name="P:System.Messaging.BinaryMessageFormatter.TopObjectFormat">
      <summary>Gets or sets a value that defines how the top (root) object of a graph is deserialized with regards to finding and loading its assembly.</summary>
      <returns>One of the <see cref="T:System.Runtime.Serialization.Formatters.FormatterAssemblyStyle" /> values that defines the deserialization behavior.</returns>
    </member>
    <member name="P:System.Messaging.BinaryMessageFormatter.TypeFormat">
      <summary>Gets or sets a value that defines how type descriptions are laid out in the serialized stream.</summary>
      <returns>A <see cref="T:System.Runtime.Serialization.Formatters.FormatterTypeStyle" /> that defines the type description format.</returns>
    </member>
    <member name="M:System.Messaging.BinaryMessageFormatter.Write(System.Messaging.Message,System.Object)">
      <summary>Serializes an object into the body of the message.</summary>
      <param name="message">The <see cref="T:System.Messaging.Message" /> whose <see cref="P:System.Messaging.Message.Body" /> property will contain the serialized object. </param>
      <param name="obj">The object to be serialized into the message body. </param>
      <exception cref="T:System.ArgumentNullException">The <paramref name="message" /> parameter is null. </exception>
    </member>
    <member name="T:System.Messaging.CryptographicProviderType">
      <summary>Specifies the cryptographic service providers available for validating digital signatures.</summary>
    </member>
    <member name="F:System.Messaging.CryptographicProviderType.None">
      <summary>No cryptographic provider type specified.</summary>
    </member>
    <member name="F:System.Messaging.CryptographicProviderType.RsaFull">
      <summary>The full RSA provider type, which supports both digital signatures and data encryption. Considered a general purpose cryptographic services provider. The RSA public-key algorithm is used for all public-key operations.</summary>
    </member>
    <member name="F:System.Messaging.CryptographicProviderType.RsqSig">
      <summary>A subset of the RsaFull provider type, which supports only those functions and algorithms required for hashes and digital signatures.</summary>
    </member>
    <member name="F:System.Messaging.CryptographicProviderType.Dss">
      <summary>A provider type that, like RsqSig, only supports hashes and digital signatures. Dss specifies the Digital Signature Algorithm (DSA) signature algorithm.</summary>
    </member>
    <member name="F:System.Messaging.CryptographicProviderType.Fortezza">
      <summary>A provider type that contains a set of cryptographic protocols and algorithms owned by the National Institute of Standards and Technology.</summary>
    </member>
    <member name="F:System.Messaging.CryptographicProviderType.MicrosoftExchange">
      <summary>A provider type designed for the cryptographic needs of the Microsoft Exchange mail application and other applications compatible with Microsoft Mail.</summary>
    </member>
    <member name="F:System.Messaging.CryptographicProviderType.Ssl">
      <summary>A provider type that supports the Secure Sockets Layer (SSL) protocol.</summary>
    </member>
    <member name="F:System.Messaging.CryptographicProviderType.SttMer">
      <summary>Secure transaction technology provider enterprise.</summary>
    </member>
    <member name="F:System.Messaging.CryptographicProviderType.SttAcq">
      <summary>Secure transaction technology provider acquirer.</summary>
    </member>
    <member name="F:System.Messaging.CryptographicProviderType.SttBrnd">
      <summary>Secure transaction technology provider brand.</summary>
    </member>
    <member name="F:System.Messaging.CryptographicProviderType.SttRoot">
      <summary>Secure transaction technology provider root.</summary>
    </member>
    <member name="F:System.Messaging.CryptographicProviderType.SttIss">
      <summary>Secure transaction technology provider issuer.</summary>
    </member>
    <member name="T:System.Messaging.Cursor">
      <summary>A <see cref="T:System.Messaging.Cursor" /> is used to maintain a specific location in a <see cref="T:System.Messaging.MessageQueue" /> when reading the queue's messages.</summary>
    </member>
    <member name="M:System.Messaging.Cursor.Close">
      <summary>Closes the cursor, allowing Message Queuing to release the associated resources.</summary>
    </member>
    <member name="M:System.Messaging.Cursor.Dispose">
      <summary>Releases all resources used by the <see cref="T:System.Messaging.Cursor" />.</summary>
    </member>
    <member name="T:System.Messaging.DefaultPropertiesToSend">
      <summary>Specifies the default property values that will be used when sending objects other than <see cref="T:System.Messaging.Message" /> instances to a message queue.</summary>
    </member>
    <member name="M:System.Messaging.DefaultPropertiesToSend.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Messaging.DefaultPropertiesToSend" /> class.</summary>
    </member>
    <member name="P:System.Messaging.DefaultPropertiesToSend.AcknowledgeType">
      <summary>Gets or sets the type of acknowledgement message to be returned to the sending application.</summary>
      <returns>One of the <see cref="T:System.Messaging.AcknowledgeTypes" /> enumeration values. This value is used to determine the type of acknowledgment messages the system posts in the administration queue and when acknowledgments are returned to the sending application. The default is AcknowledgeTypes.None.</returns>
    </member>
    <member name="P:System.Messaging.DefaultPropertiesToSend.AdministrationQueue">
      <summary>Gets or sets the queue that receives acknowledgement messages generated by Message Queuing.</summary>
      <returns>The <see cref="T:System.Messaging.MessageQueue" /> that specifies the administration queue used for system-generated acknowledgment messages. The default is null.</returns>
    </member>
    <member name="P:System.Messaging.DefaultPropertiesToSend.AppSpecific">
      <summary>Gets or sets additional, application-specific information.</summary>
      <returns>Information specific to the application. The default is 0.</returns>
    </member>
    <member name="P:System.Messaging.DefaultPropertiesToSend.AttachSenderId">
      <summary>Gets or sets a value that indicates whether the sender ID should be attached to the message.</summary>
      <returns>true if sender ID should be attached to the message; otherwise, false. The default is true.</returns>
    </member>
    <member name="P:System.Messaging.DefaultPropertiesToSend.EncryptionAlgorithm">
      <summary>Gets or sets the encryption algorithm used to encrypt the body of a private message.</summary>
      <returns>One of the <see cref="T:System.Messaging.EncryptionAlgorithm" /> enumeration values. The default is RC2.</returns>
    </member>
    <member name="P:System.Messaging.DefaultPropertiesToSend.Extension">
      <summary>Gets or sets additional information associated with the message.</summary>
      <returns>An array of bytes that provides additional, application-defined information associated with the message. The default is a zero-length array.</returns>
    </member>
    <member name="P:System.Messaging.DefaultPropertiesToSend.HashAlgorithm">
      <summary>Gets or sets the hashing algorithm used when authenticating messages or creating a digital signature for a message.</summary>
      <returns>One of the <see cref="T:System.Messaging.HashAlgorithm" /> enumeration values. The default is MD5.</returns>
    </member>
    <member name="P:System.Messaging.DefaultPropertiesToSend.Label">
      <summary>Gets or sets an application-defined string that describes the message.</summary>
      <returns>The label of the message. The default is an empty string ("").</returns>
    </member>
    <member name="P:System.Messaging.DefaultPropertiesToSend.Priority">
      <summary>Gets or sets the message priority, which is used to determine where the message is placed in the queue.</summary>
      <returns>One of the <see cref="T:System.Messaging.MessagePriority" /> enumeration values that represents the priority level of a non-transactional message. The default is Normal.</returns>
    </member>
    <member name="P:System.Messaging.DefaultPropertiesToSend.Recoverable">
      <summary>Gets or sets a value that indicates whether the message is guaranteed to be delivered in the event of a computer failure or network problem.</summary>
      <returns>true if the message is guaranteed delivery by saving it to disk while en route; false if delivery is not assured. The default is false.</returns>
    </member>
    <member name="P:System.Messaging.DefaultPropertiesToSend.ResponseQueue">
      <summary>Gets or sets the queue that receives application-generated response messages.</summary>
      <returns>The <see cref="T:System.Messaging.MessageQueue" /> to which application-generated response messages are returned. The default is null.</returns>
    </member>
    <member name="P:System.Messaging.DefaultPropertiesToSend.TimeToBeReceived">
      <summary>Gets or sets the time limit for the message to be retrieved from the destination queue.</summary>
      <returns>The total time, in seconds, for a sent message to be received from the destination queue. The default is <see cref="F:System.Messaging.Message.InfiniteTimeout" />.</returns>
    </member>
    <member name="P:System.Messaging.DefaultPropertiesToSend.TimeToReachQueue">
      <summary>Gets or sets the time limit for the message to reach the queue.</summary>
      <returns>The time limit in seconds for a message to reach the destination queue, from the time the message is sent. The default is <see cref="F:System.Messaging.Message.InfiniteTimeout" />.</returns>
    </member>
    <member name="P:System.Messaging.DefaultPropertiesToSend.TransactionStatusQueue">
      <summary>Gets the transaction status queue on the source computer.</summary>
      <returns>The transaction status queue on the source computer, which is used for sending acknowledgement messages back to the sending application. The default is null.</returns>
    </member>
    <member name="P:System.Messaging.DefaultPropertiesToSend.UseAuthentication">
      <summary>Gets or sets a value that indicates whether the message must be authenticated before being sent.</summary>
      <returns>true if the sending application requested authentication for the message; otherwise, false. The default is false.</returns>
    </member>
    <member name="P:System.Messaging.DefaultPropertiesToSend.UseDeadLetterQueue">
      <summary>Gets or sets a value that indicates whether a copy of the message that could not be delivered should be sent to a dead-letter queue.</summary>
      <returns>true if message delivery failure should result in a copy of the message being sent to a dead-letter queue; otherwise, false. The default is false.</returns>
    </member>
    <member name="P:System.Messaging.DefaultPropertiesToSend.UseEncryption">
      <summary>Gets or sets a value that indicates whether to make the message private.</summary>
      <returns>true to require Message Queuing to encrypt the message; otherwise, false. The default is false.</returns>
    </member>
    <member name="P:System.Messaging.DefaultPropertiesToSend.UseJournalQueue">
      <summary>Gets or sets a value that indicates whether a copy of the message should be kept in a machine journal on the originating computer.</summary>
      <returns>true to require that a copy of a message be kept in the originating computer's machine journal after it has been successfully transmitted from the originating computer to the next step; otherwise, false. The default is false.</returns>
    </member>
    <member name="P:System.Messaging.DefaultPropertiesToSend.UseTracing">
      <summary>Gets or sets a value that indicates whether to trace a message as it moves toward its destination queue.</summary>
      <returns>true if each intermediate step made by the original message en route to the destination queue will generate a report to be sent to the system's report queue; otherwise, false. The default is false.</returns>
    </member>
    <member name="T:System.Messaging.EncryptionAlgorithm">
      <summary>Specifies the encryption algorithm used to encrypt the message body of a private message.</summary>
    </member>
    <member name="F:System.Messaging.EncryptionAlgorithm.None">
      <summary>No encryption.</summary>
    </member>
    <member name="F:System.Messaging.EncryptionAlgorithm.Rc2">
      <summary>The value MQMSG_CALG_RC2. This is the default value for the encryption property of the Message Queuing application's message object.</summary>
    </member>
    <member name="F:System.Messaging.EncryptionAlgorithm.Rc4">
      <summary>The value MQMSG_CALG_RC4. This corresponds to the less secure option for the encryption property of the Message Queuing application's message object.</summary>
    </member>
    <member name="T:System.Messaging.EncryptionRequired">
      <summary>Specifies the privacy level of messages received by the queue.</summary>
    </member>
    <member name="F:System.Messaging.EncryptionRequired.None">
      <summary>Accepts only non-private (non-encrypted) messages.</summary>
    </member>
    <member name="F:System.Messaging.EncryptionRequired.Optional">
      <summary>Does not force privacy. Accepts private (encrypted) messages and non-private (non-encrypted) messages.</summary>
    </member>
    <member name="F:System.Messaging.EncryptionRequired.Body">
      <summary>Accepts only private (encrypted) messages.</summary>
    </member>
    <member name="T:System.Messaging.GenericAccessRights">
      <summary>Uses the Windows 2000 and Windows NT access format to specify a set of common access rights that Message Queuing maps to both standard and object-specific access rights for reading, writing, and executing.</summary>
    </member>
    <member name="F:System.Messaging.GenericAccessRights.All">
      <summary>Read, write, and execute access.</summary>
    </member>
    <member name="F:System.Messaging.GenericAccessRights.Execute">
      <summary>Execute access.</summary>
    </member>
    <member name="F:System.Messaging.GenericAccessRights.Write">
      <summary>Write access.</summary>
    </member>
    <member name="F:System.Messaging.GenericAccessRights.Read">
      <summary>Read access.</summary>
    </member>
    <member name="F:System.Messaging.GenericAccessRights.None">
      <summary>No access.</summary>
    </member>
    <member name="T:System.Messaging.HashAlgorithm">
      <summary>Specifies the hash algorithm used by Message Queuing when authenticating messages.</summary>
    </member>
    <member name="F:System.Messaging.HashAlgorithm.None">
      <summary>No hashing algorithm.</summary>
    </member>
    <member name="F:System.Messaging.HashAlgorithm.Md2">
      <summary>MD2 hashing algorithm.</summary>
    </member>
    <member name="F:System.Messaging.HashAlgorithm.Md4">
      <summary>MD4 hashing algorithm.</summary>
    </member>
    <member name="F:System.Messaging.HashAlgorithm.Md5">
      <summary>MD5 hashing algorithm.</summary>
    </member>
    <member name="F:System.Messaging.HashAlgorithm.Sha">
      <summary>SHA hashing algorithm.</summary>
    </member>
    <member name="F:System.Messaging.HashAlgorithm.Mac">
      <summary>MAC keyed-hash algorithm.</summary>
    </member>
    <member name="T:System.Messaging.IMessageFormatter">
      <summary>Serializes or deserializes objects from the body of a Message Queuing message.</summary>
    </member>
    <member name="M:System.Messaging.IMessageFormatter.CanRead(System.Messaging.Message)">
      <summary>When implemented in a class, determines whether the formatter can deserialize the contents of the message.</summary>
      <returns>true if the formatter can deserialize the message; otherwise, false.</returns>
      <param name="message">The <see cref="T:System.Messaging.Message" /> to inspect. </param>
    </member>
    <member name="M:System.Messaging.IMessageFormatter.Read(System.Messaging.Message)">
      <summary>When implemented in a class, reads the contents from the given message and creates an object that contains data from the message.</summary>
      <returns>The deserialized message.</returns>
      <param name="message">The <see cref="T:System.Messaging.Message" /> to deserialize. </param>
    </member>
    <member name="M:System.Messaging.IMessageFormatter.Write(System.Messaging.Message,System.Object)">
      <summary>When implemented in a class, serializes an object into the body of the message.</summary>
      <param name="message">The <see cref="T:System.Messaging.Message" /> that will contain the serialized object. </param>
      <param name="obj">The object to be serialized into the message. </param>
    </member>
    <member name="T:System.Messaging.Message">
      <summary>Provides access to the properties needed to define a Message Queuing message.</summary>
    </member>
    <member name="M:System.Messaging.Message.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Messaging.Message" /> class with an empty body.</summary>
    </member>
    <member name="M:System.Messaging.Message.#ctor(System.Object)">
      <summary>Initializes a new instance of the <see cref="T:System.Messaging.Message" /> class, using the <see cref="T:System.Messaging.XmlMessageFormatter" /> to serialize the specified object into the body of the message.</summary>
      <param name="body">The object to be serialized into the body of the message. </param>
    </member>
    <member name="M:System.Messaging.Message.#ctor(System.Object,System.Messaging.IMessageFormatter)">
      <summary>Initializes a new instance of the <see cref="T:System.Messaging.Message" /> class using the specified formatter to serialize the specified object into the body of the message.</summary>
      <param name="body">The object to be serialized into the body of the message. </param>
      <param name="formatter">A <see cref="T:System.Messaging.IMessageFormatter" /> that specifies the formatter with which to serialize the message body. </param>
    </member>
    <member name="P:System.Messaging.Message.AcknowledgeType">
      <summary>Gets or sets the type of acknowledgment message to be returned to the sending application.</summary>
      <returns>One of the <see cref="T:System.Messaging.AcknowledgeTypes" /> values, which represent both the types of acknowledgment messages the system posts in the administration queue and the conditions under which acknowledgments are returned to the sending application. The default is None.</returns>
      <exception cref="T:System.InvalidOperationException">The message is filtered to ignore the <see cref="P:System.Messaging.Message.AcknowledgeType" /> property. </exception>
    </member>
    <member name="P:System.Messaging.Message.Acknowledgment">
      <summary>Gets the classification of acknowledgment that this message represents.</summary>
      <returns>One of the <see cref="T:System.Messaging.Acknowledgment" /> enumeration values.</returns>
      <exception cref="T:System.InvalidOperationException">The message has not been sent. This property can only be read on messages retrieved from a queue.-or-The message queue is filtered to ignore the <see cref="P:System.Messaging.MessagePropertyFilter.Acknowledgment" /> property. </exception>
    </member>
    <member name="P:System.Messaging.Message.AdministrationQueue">
      <summary>Gets or sets the queue that receives the acknowledgement messages that Message Queuing generates.</summary>
      <returns>The <see cref="T:System.Messaging.MessageQueue" /> that specifies the administration queue used for system-generated acknowledgment messages. The default is null.</returns>
      <exception cref="T:System.InvalidOperationException">The message queue is filtered to ignore the <see cref="P:System.Messaging.Message.AdministrationQueue" /> property. </exception>
    </member>
    <member name="P:System.Messaging.Message.AppSpecific">
      <summary>Gets or sets additional, application-specific information.</summary>
      <returns>Information that is specific to the application. The default is zero.</returns>
      <exception cref="T:System.InvalidOperationException">The message queue is filtered to ignore the <see cref="P:System.Messaging.Message.AppSpecific" /> property. </exception>
    </member>
    <member name="P:System.Messaging.Message.ArrivedTime">
      <summary>Gets the time that the message arrived in the destination queue.</summary>
      <returns>A <see cref="T:System.DateTime" /> that represents the message's arrival time in the destination queue. The time is adjusted from GMT to the local time of the computer on which the destination queue resides.</returns>
      <exception cref="T:System.InvalidOperationException">The message has not been sent. This property can only be read on messages retrieved from a queue.-or-The message queue is filtered to ignore the <see cref="P:System.Messaging.Message.ArrivedTime" /> property. </exception>
    </member>
    <member name="P:System.Messaging.Message.AttachSenderId">
      <summary>Gets or sets a value that indicates whether the sender ID should be attached to the message.</summary>
      <returns>true if the <see cref="P:System.Messaging.Message.SenderId" /> should be attached to the message; otherwise, false. The default is true.</returns>
      <exception cref="T:System.InvalidOperationException">The message queue is filtered to ignore the <see cref="P:System.Messaging.Message.AttachSenderId" /> property. </exception>
    </member>
    <member name="P:System.Messaging.Message.Authenticated">
      <summary>Gets a value that indicates whether the message was authenticated.</summary>
      <returns>true if authentication was requested for the message when it entered the queue; otherwise, false.</returns>
      <exception cref="T:System.InvalidOperationException">The message has not been sent. This property can only be read on messages retrieved from a queue.-or- The message queue is filtered to ignore the <see cref="P:System.Messaging.Message.Authenticated" /> property. </exception>
    </member>
    <member name="P:System.Messaging.Message.AuthenticationProviderName">
      <summary>Gets or sets the name of the cryptographic provider used to generate the digital signature of the message.</summary>
      <returns>The name of the cryptographic provider used to generate the digital signature of the message. The default is Microsoft Base Cryptographic Provider version 1.0.</returns>
      <exception cref="T:System.InvalidOperationException">The <see cref="P:System.Messaging.Message.AuthenticationProviderName" /> property could not be set.-or- The message queue is filtered to ignore the <see cref="P:System.Messaging.Message.AuthenticationProviderName" /> property. </exception>
      <exception cref="T:System.ArgumentException">The <see cref="P:System.Messaging.Message.AuthenticationProviderName" /> was set to null. </exception>
    </member>
    <member name="P:System.Messaging.Message.AuthenticationProviderType">
      <summary>Gets or sets the type of cryptographic provider used to generate the digital signature of the message.</summary>
      <returns>One of the <see cref="T:System.Messaging.CryptographicProviderType" /> values. The default is RSA_FULL.</returns>
      <exception cref="T:System.InvalidOperationException">The <see cref="P:System.Messaging.Message.AuthenticationProviderType" /> property could not be set.-or- The message queue is filtered to ignore the <see cref="P:System.Messaging.Message.AuthenticationProviderType" /> property. </exception>
    </member>
    <member name="P:System.Messaging.Message.Body">
      <summary>Gets or sets the content of the message.</summary>
      <returns>An object that specifies the message contents. The object can be a string, a date, a currency, a number, an array of bytes, or any managed object.</returns>
      <exception cref="T:System.InvalidOperationException">The <see cref="P:System.Messaging.Message.Formatter" /> property is null.-or- The message queue is filtered to ignore the <see cref="P:System.Messaging.Message.Body" /> property. </exception>
    </member>
    <member name="P:System.Messaging.Message.BodyStream">
      <summary>Gets or sets the information in the body of the message.</summary>
      <returns>A <see cref="T:System.IO.Stream" /> that contains the serialized information included in the <see cref="P:System.Messaging.Message.Body" /> of the message.</returns>
      <exception cref="T:System.InvalidOperationException">The message queue is filtered to ignore the <see cref="P:System.Messaging.Message.Body" /> property. </exception>
    </member>
    <member name="P:System.Messaging.Message.BodyType">
      <summary>Gets or sets the type of data that the message body contains.</summary>
      <returns>The message body's true type, such as a string, a date, a currency, or a number.</returns>
      <exception cref="T:System.InvalidOperationException">The message queue is filtered to ignore the <see cref="P:System.Messaging.Message.Body" /> property. </exception>
    </member>
    <member name="P:System.Messaging.Message.ConnectorType">
      <summary>Gets or sets a value that indicates that some message properties typically set by Message Queuing were set by the sending application.</summary>
      <returns>A <see cref="T:System.Guid" /> defined by the application and used in conjunction with connector applications or message encryption. This <see cref="T:System.Guid" /> allows a receiving application to interpret message properties that were set by the sending application but that are usually set by Message Queuing.</returns>
      <exception cref="T:System.InvalidOperationException">The message queue is filtered to ignore the <see cref="P:System.Messaging.Message.ConnectorType" /> property. </exception>
    </member>
    <member name="P:System.Messaging.Message.CorrelationId">
      <summary>Gets or sets the message identifier used by acknowledgment, report, and response messages to reference the original message.</summary>
      <returns>The message identifier specified by the <see cref="P:System.Messaging.Message.Id" /> property of the original message. The correlation identifier is used by Message Queuing when it generates an acknowledgment or report message, and by an application when it generates a response message.</returns>
      <exception cref="T:System.InvalidOperationException">The message queue is filtered to ignore the <see cref="P:System.Messaging.Message.CorrelationId" /> property. </exception>
      <exception cref="T:System.ArgumentException">The <see cref="P:System.Messaging.Message.CorrelationId" /> is null. </exception>
    </member>
    <member name="P:System.Messaging.Message.DestinationQueue">
      <summary>Gets the intended destination queue for a message.</summary>
      <returns>A <see cref="T:System.Messaging.MessageQueue" /> that specifies the intended destination queue for the message.</returns>
      <exception cref="T:System.InvalidOperationException">The message has not been sent. This property can only be read on messages retrieved from a queue.-or- The message queue is filtered to ignore the <see cref="P:System.Messaging.Message.DestinationQueue" /> property. </exception>
    </member>
    <member name="P:System.Messaging.Message.DestinationSymmetricKey">
      <summary>Gets or sets the symmetric key used to encrypt application-encrypted messages or messages sent to foreign queues.</summary>
      <returns>An array of byte values that specifies the destination symmetric key used to encrypt the message. The default is a zero-length array.</returns>
      <exception cref="T:System.InvalidOperationException">The message queue is filtered to ignore the <see cref="P:System.Messaging.Message.DestinationSymmetricKey" /> property. </exception>
      <exception cref="T:System.ArgumentException">The <see cref="P:System.Messaging.Message.DestinationSymmetricKey" /> is null. </exception>
    </member>
    <member name="P:System.Messaging.Message.DigitalSignature">
      <summary>Gets or sets the digital signature that Message Queuing uses to authenticate the message.</summary>
      <returns>An array of byte values that specifies the Message Queuing 1.0 digital signature used to authenticate the message. The default is a zero-length array.</returns>
      <exception cref="T:System.InvalidOperationException">The message queue is filtered to ignore the <see cref="P:System.Messaging.Message.DigitalSignature" /> property. </exception>
      <exception cref="T:System.ArgumentException">The <see cref="P:System.Messaging.Message.DigitalSignature" /> property is null. </exception>
    </member>
    <member name="P:System.Messaging.Message.EncryptionAlgorithm">
      <summary>Gets or sets the encryption algorithm used to encrypt the body of a private message.</summary>
      <returns>One of the <see cref="T:System.Messaging.EncryptionAlgorithm" /> enumeration values. The default is RC2.</returns>
      <exception cref="T:System.InvalidOperationException">The message queue is filtered to ignore the <see cref="P:System.Messaging.Message.EncryptionAlgorithm" /> property. </exception>
    </member>
    <member name="P:System.Messaging.Message.Extension">
      <summary>Gets or sets additional, application-defined information associated with the message.</summary>
      <returns>An array of byte values that provides application-defined information associated with the message. The default is a zero-length array.</returns>
      <exception cref="T:System.InvalidOperationException">The message queue is filtered to ignore the <see cref="P:System.Messaging.Message.Extension" /> property. </exception>
      <exception cref="T:System.ArgumentException">The <see cref="P:System.Messaging.Message.Extension" /> property is null. </exception>
    </member>
    <member name="P:System.Messaging.Message.Formatter">
      <summary>Gets or sets the formatter used to serialize an object into or deserialize an object from the message body.</summary>
      <returns>The <see cref="T:System.Messaging.IMessageFormatter" /> that produces a stream to be written to or read from the message body. The default is <see cref="T:System.Messaging.XmlMessageFormatter" />.</returns>
      <exception cref="T:System.ArgumentException">The <see cref="P:System.Messaging.Message.Formatter" /> property is null. </exception>
    </member>
    <member name="P:System.Messaging.Message.HashAlgorithm">
      <summary>Gets or sets the hashing algorithm that Message Queuing uses when authenticating a message or creating a digital signature for a message.</summary>
      <returns>One of the <see cref="T:System.Messaging.HashAlgorithm" /> enumeration values. For Windows XP, the default is SHA. Otherwise, the default is MD5.</returns>
      <exception cref="T:System.InvalidOperationException">The message queue is filtered to ignore the <see cref="P:System.Messaging.Message.HashAlgorithm" /> property. </exception>
    </member>
    <member name="P:System.Messaging.Message.Id">
      <summary>Gets the message's identifier.</summary>
      <returns>The message's unique identifier, which is generated by Message Queuing.</returns>
      <exception cref="T:System.InvalidOperationException">The message has not been sent. This property can only be read on messages retrieved from a queue.-or- The message queue is filtered to ignore the <see cref="P:System.Messaging.Message.Id" /> property. </exception>
    </member>
    <member name="F:System.Messaging.Message.InfiniteTimeout">
      <summary>Specifies that no time-out exists.</summary>
    </member>
    <member name="P:System.Messaging.Message.IsFirstInTransaction">
      <summary>Gets a value that indicates whether the message was the first message sent in a transaction.</summary>
      <returns>true if the message was the first message sent in a transaction; otherwise, false.</returns>
      <exception cref="T:System.InvalidOperationException">The message has not been sent. This property can only be read on messages retrieved from a queue.-or- The message queue is filtered to ignore the <see cref="P:System.Messaging.Message.IsFirstInTransaction" /> property. </exception>
    </member>
    <member name="P:System.Messaging.Message.IsLastInTransaction">
      <summary>Gets a value that indicates whether the message was the last message sent in a transaction.</summary>
      <returns>true if the message was the last message sent in a single transaction; otherwise, false.</returns>
      <exception cref="T:System.InvalidOperationException">The message has not been sent. This property can only be read on messages retrieved from a queue.-or- The message queue is filtered to ignore the <see cref="P:System.Messaging.Message.IsLastInTransaction" /> property. </exception>
    </member>
    <member name="P:System.Messaging.Message.Label">
      <summary>Gets or sets an application-defined Unicode string that describes the message.</summary>
      <returns>The label of the message. The default is an empty string ("").</returns>
      <exception cref="T:System.InvalidOperationException">The message queue is filtered to ignore the <see cref="P:System.Messaging.Message.Label" /> property. </exception>
    </member>
    <member name="P:System.Messaging.Message.LookupId">
      <summary>Introduced in MSMQ 3.0. Gets the message's lookup identifier.</summary>
      <returns>The message's lookup identifier, which is generated by Message Queuing and is unique to the queue where the message resides.</returns>
      <exception cref="T:System.PlatformNotSupportedException">MSMQ 3.0 is not installed.</exception>
      <exception cref="T:System.InvalidOperationException">The message has not been sent. This property can only be read on messages retrieved from a queue.-or- The message queue is filtered to ignore the <see cref="P:System.Messaging.Message.LookupId" /> property. </exception>
    </member>
    <member name="P:System.Messaging.Message.MessageType">
      <summary>Gets the message type: Normal, Acknowledgment, or Report.</summary>
      <returns>One of the <see cref="P:System.Messaging.Message.MessageType" /> values.</returns>
      <exception cref="T:System.InvalidOperationException">The message has not been sent. This property can only be read on messages retrieved from a queue.-or- The message queue is filtered to ignore the <see cref="P:System.Messaging.Message.MessageType" /> property. </exception>
    </member>
    <member name="P:System.Messaging.Message.Priority">
      <summary>Gets or sets the message priority, which determines where in the queue the message is placed.</summary>
      <returns>One of the <see cref="T:System.Messaging.MessagePriority" /> values, which represent the priority levels of non-transactional messages. The default is Normal.</returns>
      <exception cref="T:System.InvalidOperationException">The message queue is filtered to ignore the <see cref="P:System.Messaging.Message.Priority" /> property. </exception>
    </member>
    <member name="P:System.Messaging.Message.Recoverable">
      <summary>Gets or sets a value that indicates whether the message is guaranteed to be delivered in the event of a computer failure or network problem.</summary>
      <returns>true if delivery of the message is guaranteed (through saving the message to disk while en route); false if delivery is not assured. The default is false.</returns>
      <exception cref="T:System.InvalidOperationException">The message queue is filtered to ignore the <see cref="P:System.Messaging.Message.Recoverable" /> property. </exception>
    </member>
    <member name="P:System.Messaging.Message.ResponseQueue">
      <summary>Gets or sets the queue that receives application-generated response messages.</summary>
      <returns>The <see cref="T:System.Messaging.MessageQueue" /> to which application-generated response messages are returned. The default is null.</returns>
      <exception cref="T:System.InvalidOperationException">The message queue is filtered to ignore the <see cref="P:System.Messaging.Message.ResponseQueue" /> property. </exception>
    </member>
    <member name="P:System.Messaging.Message.SecurityContext">
      <summary>Gets or sets the security context for a message.</summary>
      <returns>A <see cref="T:System.Messaging.SecurityContext" /> object that contains the security context for a message, if the property has previously been set; otherwise NULL.</returns>
    </member>
    <member name="P:System.Messaging.Message.SenderCertificate">
      <summary>Gets or sets the security certificate used to authenticate messages.</summary>
      <returns>An array of byte values that represents a security certificate, which Message Queuing uses to verify the sender of the message. The default is a zero-length array.</returns>
      <exception cref="T:System.InvalidOperationException">The message queue is filtered to ignore the <see cref="P:System.Messaging.Message.SenderCertificate" /> property. </exception>
    </member>
    <member name="P:System.Messaging.Message.SenderId">
      <summary>Gets the identifier of the sending user.</summary>
      <returns>An array of byte values that identifies the sender. The receiving Queue Manager uses the identifier when it authenticates the message to verify the sender of the message and the sender's access rights to the queue.</returns>
      <exception cref="T:System.InvalidOperationException">The message has not been sent. This property can only be read on messages retrieved from a queue.-or- The message queue is filtered to ignore the <see cref="P:System.Messaging.Message.SenderId" /> property. </exception>
    </member>
    <member name="P:System.Messaging.Message.SenderVersion">
      <summary>Gets the version of Message Queuing used to send the message.</summary>
      <returns>The version of Message Queuing used to send the message.</returns>
      <exception cref="T:System.InvalidOperationException">The message has not been sent. This property can only be read on messages retrieved from a queue.-or- The message queue is filtered to ignore the <see cref="P:System.Messaging.Message.SenderVersion" /> property. </exception>
    </member>
    <member name="P:System.Messaging.Message.SentTime">
      <summary>Gets the date and time on the sending computer that the message was sent by the source queue manager.</summary>
      <returns>A <see cref="T:System.DateTime" /> that represents the time the message was sent.</returns>
      <exception cref="T:System.InvalidOperationException">The message has not been sent. This property can only be read on messages retrieved from a queue.-or- The message queue is filtered to ignore the <see cref="P:System.Messaging.Message.SentTime" /> property. </exception>
    </member>
    <member name="P:System.Messaging.Message.SourceMachine">
      <summary>Gets the computer from which the message originated.</summary>
      <returns>The name of the computer from which the message was sent.</returns>
      <exception cref="T:System.InvalidOperationException">The message has not been sent. This property can only be read on messages retrieved from a queue.-or- The message queue is filtered to ignore the <see cref="P:System.Messaging.Message.SourceMachine" /> property. </exception>
      <exception cref="T:System.Messaging.MessageQueueException">The computer information or directory service could not be accessed. </exception>
    </member>
    <member name="P:System.Messaging.Message.TimeToBeReceived">
      <summary>Gets or sets the maximum amount of time for the message to be received from the destination queue.</summary>
      <returns>The total time for a sent message to be received from the destination queue. The default is <see cref="F:System.Messaging.Message.InfiniteTimeout" />.</returns>
      <exception cref="T:System.InvalidOperationException">The message queue is filtered to ignore the <see cref="P:System.Messaging.Message.TimeToBeReceived" /> property. </exception>
      <exception cref="T:System.ArgumentException">The value specified for <see cref="P:System.Messaging.Message.TimeToBeReceived" /> is invalid. </exception>
    </member>
    <member name="P:System.Messaging.Message.TimeToReachQueue">
      <summary>Gets or sets the maximum amount of time for the message to reach the queue.</summary>
      <returns>The time limit for the message to reach the destination queue, beginning from the time the message is sent. The default is <see cref="F:System.Messaging.Message.InfiniteTimeout" />.</returns>
      <exception cref="T:System.InvalidOperationException">The message queue is filtered to ignore the <see cref="P:System.Messaging.Message.TimeToReachQueue" /> property. </exception>
      <exception cref="T:System.ArgumentException">The value specified for <see cref="P:System.Messaging.Message.TimeToReachQueue" /> is invalid. It might represent a negative number. </exception>
    </member>
    <member name="P:System.Messaging.Message.TransactionId">
      <summary>Gets the identifier for the transaction of which the message was a part.</summary>
      <returns>The identifier for the transaction associated with the message.</returns>
      <exception cref="T:System.InvalidOperationException">The message has not been sent. This property can only be read on messages retrieved from a queue.-or- The message queue is filtered to ignore the <see cref="P:System.Messaging.Message.TransactionId" /> property. </exception>
    </member>
    <member name="P:System.Messaging.Message.TransactionStatusQueue">
      <summary>Gets the transaction status queue on the source computer.</summary>
      <returns>The transaction status queue on the source computer, which is used for sending acknowledgement messages back to the sending application. The default is null.</returns>
      <exception cref="T:System.InvalidOperationException">The message has not been sent. This property can only be read on messages retrieved from a queue.-or- The message queue is filtered to ignore the <see cref="P:System.Messaging.Message.TransactionStatusQueue" /> property. </exception>
    </member>
    <member name="P:System.Messaging.Message.UseAuthentication">
      <summary>Gets or sets a value that indicates whether the message was (or must be) authenticated before being sent.</summary>
      <returns>true if the sending application requested authentication for the message; otherwise, false.</returns>
      <exception cref="T:System.InvalidOperationException">The message queue is filtered to ignore the <see cref="P:System.Messaging.Message.UseAuthentication" /> property. </exception>
    </member>
    <member name="P:System.Messaging.Message.UseDeadLetterQueue">
      <summary>Gets or sets a value that indicates whether a copy of the message that could not be delivered should be sent to a dead-letter queue.</summary>
      <returns>true if message-delivery failure should result in a copy of the message being sent to a dead-letter queue; otherwise, false. The default is false.</returns>
      <exception cref="T:System.InvalidOperationException">The message queue is filtered to ignore the <see cref="P:System.Messaging.Message.UseDeadLetterQueue" /> property. </exception>
    </member>
    <member name="P:System.Messaging.Message.UseEncryption">
      <summary>Gets or sets a value that indicates whether to make the message private.</summary>
      <returns>true to require Message Queuing to encrypt the message; otherwise, false. The default is false.</returns>
      <exception cref="T:System.InvalidOperationException">The message queue is filtered to ignore the <see cref="P:System.Messaging.Message.UseEncryption" /> property. </exception>
    </member>
    <member name="P:System.Messaging.Message.UseJournalQueue">
      <summary>Gets or sets a value that indicates whether a copy of the message should be kept in a machine journal on the originating computer.</summary>
      <returns>true to require that a copy of a message be kept in the originating computer's machine journal after the message has been successfully transmitted (from the originating computer to the next server); otherwise, false. The default is false.</returns>
      <exception cref="T:System.InvalidOperationException">The message queue is filtered to ignore the <see cref="P:System.Messaging.Message.UseJournalQueue" /> property. </exception>
    </member>
    <member name="P:System.Messaging.Message.UseTracing">
      <summary>Gets or sets a value that indicates whether to trace a message as it moves toward its destination queue.</summary>
      <returns>true if each intermediate step made by the original message en route to the destination queue generates a report to be sent to the system's report queue; otherwise, false. The default is false.</returns>
      <exception cref="T:System.InvalidOperationException">The message queue is filtered to ignore the <see cref="P:System.Messaging.Message.UseTracing" /> property. </exception>
    </member>
    <member name="T:System.Messaging.MessageEnumerator">
      <summary>Provides a forward-only cursor to enumerate through messages in a message queue.</summary>
    </member>
    <member name="M:System.Messaging.MessageEnumerator.Close">
      <summary>Frees the resources associated with the enumerator.</summary>
    </member>
    <member name="P:System.Messaging.MessageEnumerator.Current">
      <summary>Gets the current <see cref="T:System.Messaging.Message" /> that this enumerator points to.</summary>
      <returns>The current message.</returns>
      <exception cref="T:System.InvalidOperationException">You called <see cref="P:System.Messaging.MessageEnumerator.Current" /> before the first call to <see cref="M:System.Messaging.MessageEnumerator.MoveNext" />. The cursor is located before the first element of the message enumeration.-or- You called <see cref="P:System.Messaging.MessageEnumerator.Current" /> after a call to <see cref="M:System.Messaging.MessageEnumerator.MoveNext" /> had returned false (indicating the cursor is located after the last element of the message enumeration.) </exception>
      <exception cref="T:System.Messaging.MessageQueueException">The message the enumerator is currently pointing to no longer exists. It might have been deleted. </exception>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
        <IPermission class="System.Messaging.MessageQueuePermission, System.Messaging, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" version="1" Unrestricted="true" />
        <IPermission class="System.Diagnostics.PerformanceCounterPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="P:System.Messaging.MessageEnumerator.CursorHandle">
      <summary>Gets the native Message Queuing cursor handle used to browse messages in the queue.</summary>
      <returns>The native cursor handle.</returns>
      <exception cref="T:System.Messaging.MessageQueueException">The handle does not exist. </exception>
      <PermissionSet>
        <IPermission class="System.Messaging.MessageQueuePermission, System.Messaging, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:System.Messaging.MessageEnumerator.Dispose">
      <summary>Releases all resources used by the <see cref="T:System.Messaging.MessageEnumerator" />.</summary>
    </member>
    <member name="M:System.Messaging.MessageEnumerator.Dispose(System.Boolean)">
      <summary>Releases the unmanaged resources used by the <see cref="T:System.Messaging.MessageEnumerator" /> and optionally releases the managed resources.</summary>
      <param name="disposing">true to release both managed and unmanaged resources; false to release only unmanaged resources. </param>
    </member>
    <member name="M:System.Messaging.MessageEnumerator.Finalize">
      <summary>Releases the resources held by the enumerator.</summary>
    </member>
    <member name="M:System.Messaging.MessageEnumerator.MoveNext">
      <summary>Advances the enumerator to the next message in the queue, if one is currently available.</summary>
      <returns>true if the enumerator was succesfully advanced to the next message; false if the enumerator has reached the end of the queue.</returns>
      <exception cref="T:System.Messaging.MessageQueueException">An exception specific to Message Queuing was thrown. </exception>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
        <IPermission class="System.Messaging.MessageQueuePermission, System.Messaging, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" version="1" Unrestricted="true" />
        <IPermission class="System.Diagnostics.PerformanceCounterPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:System.Messaging.MessageEnumerator.MoveNext(System.TimeSpan)">
      <summary>Advances the enumerator to the next message in the queue. If the enumerator is positioned at the end of the queue, <see cref="M:System.Messaging.MessageEnumerator.MoveNext" /> waits until a message is available or the given timeout expires.</summary>
      <returns>true if the enumerator successfully advanced to the next message; false if the enumerator has reached the end of the queue and a message does not become available within the time specified by the <paramref name="timeout" /> parameter.</returns>
      <param name="timeout">The <see cref="T:System.TimeSpan" /> to wait for a message to be available if the enumerator is positioned at the end of the queue. </param>
      <exception cref="T:System.ArgumentException">The value specified for the timeout parameter is invalid. It might represent a negative number. </exception>
      <exception cref="T:System.Messaging.MessageQueueException">An exception specific to Message Queuing was thrown.-or- The timeout has expired. </exception>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
        <IPermission class="System.Messaging.MessageQueuePermission, System.Messaging, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" version="1" Unrestricted="true" />
        <IPermission class="System.Diagnostics.PerformanceCounterPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:System.Messaging.MessageEnumerator.RemoveCurrent">
      <summary>Removes the current message from a transactional or non-transactional queue and returns the message to the calling application. There is no timeout specified for a message to arrive in the queue.</summary>
      <returns>A <see cref="T:System.Messaging.Message" /> that references the first message available in the queue.</returns>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
        <IPermission class="System.Messaging.MessageQueuePermission, System.Messaging, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" version="1" Unrestricted="true" />
        <IPermission class="System.Diagnostics.PerformanceCounterPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:System.Messaging.MessageEnumerator.RemoveCurrent(System.Messaging.MessageQueueTransaction)">
      <summary>Removes the current message from a transactional queue and returns the message to the calling application. There is no timeout specified for a message to arrive in the queue.</summary>
      <returns>A <see cref="T:System.Messaging.Message" /> that references the first message available in the queue.</returns>
      <param name="transaction">The <see cref="T:System.Messaging.MessageQueueTransaction" /> object that specifies the transaction in which the message will be removed. </param>
      <exception cref="T:System.ArgumentNullException">The <paramref name="transaction" /> parameter is null. </exception>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
        <IPermission class="System.Messaging.MessageQueuePermission, System.Messaging, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" version="1" Unrestricted="true" />
        <IPermission class="System.Diagnostics.PerformanceCounterPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:System.Messaging.MessageEnumerator.RemoveCurrent(System.Messaging.MessageQueueTransactionType)">
      <summary>Removes the current message from a queue and returns the message to the calling application. There is no timeout specified for a message to arrive in the queue.</summary>
      <returns>A <see cref="T:System.Messaging.Message" /> that references the first message available in the queue.</returns>
      <param name="transactionType">One of the <see cref="T:System.Messaging.MessageQueueTransactionType" /> values, describing the type of transaction context to associate with the message. </param>
      <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">The <paramref name="transactionType" /> parameter is not one of the <see cref="T:System.Messaging.MessageQueueTransactionType" /> members. </exception>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
        <IPermission class="System.Messaging.MessageQueuePermission, System.Messaging, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" version="1" Unrestricted="true" />
        <IPermission class="System.Diagnostics.PerformanceCounterPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:System.Messaging.MessageEnumerator.RemoveCurrent(System.TimeSpan)">
      <summary>Removes the current message from the queue and returns the message to the calling application. If there is a message to remove, the method returns it immediately. Otherwise, the method waits the specified timeout for a new message to arrive.</summary>
      <returns>A <see cref="T:System.Messaging.Message" /> that references the first message available in the queue.</returns>
      <param name="timeout">The interval of time to wait for a message to arrive in the queue. </param>
      <exception cref="T:System.ArgumentException">The value specified for the <paramref name="timeout" /> parameter is invalid. </exception>
      <exception cref="T:System.Messaging.MessageQueueException">The timeout has expired. </exception>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
        <IPermission class="System.Messaging.MessageQueuePermission, System.Messaging, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" version="1" Unrestricted="true" />
        <IPermission class="System.Diagnostics.PerformanceCounterPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:System.Messaging.MessageEnumerator.RemoveCurrent(System.TimeSpan,System.Messaging.MessageQueueTransaction)">
      <summary>Removes the current message from a transactional queue and returns the message to the calling application. If there is a message to remove, the method returns it immediately. Otherwise, the method waits the specified timeout for a new message to arrive.</summary>
      <returns>A <see cref="T:System.Messaging.Message" /> that references the first message available in the queue.</returns>
      <param name="timeout">The interval of time to wait for the message to be removed. </param>
      <param name="transaction">The <see cref="T:System.Messaging.MessageQueueTransaction" /> object that specifies the transaction context for the message. </param>
      <exception cref="T:System.ArgumentException">The value specified for the <paramref name="timeout" /> parameter is invalid. </exception>
      <exception cref="T:System.ArgumentNullException">The <paramref name="transaction" /> parameter is null. </exception>
      <exception cref="T:System.Messaging.MessageQueueException">The timeout has expired. </exception>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
        <IPermission class="System.Messaging.MessageQueuePermission, System.Messaging, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" version="1" Unrestricted="true" />
        <IPermission class="System.Diagnostics.PerformanceCounterPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:System.Messaging.MessageEnumerator.RemoveCurrent(System.TimeSpan,System.Messaging.MessageQueueTransactionType)">
      <summary>Removes the current message from a queue and returns the message to the calling application. If there is a message to remove, the method returns it immediately. Otherwise, the method waits the specified timeout for a new message to arrive.</summary>
      <returns>A <see cref="T:System.Messaging.Message" /> that references the first message available in the queue.</returns>
      <param name="timeout">The interval of time to wait for the message to be removed. </param>
      <param name="transactionType">One of the <see cref="T:System.Messaging.MessageQueueTransactionType" /> values, describing the type of transaction context to associate with the message. </param>
      <exception cref="T:System.ArgumentException">The value specified for the <paramref name="timeout" /> parameter is invalid. </exception>
      <exception cref="T:System.Messaging.MessageQueueException">The timeout has expired. </exception>
      <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">The <paramref name="transactionType" /> parameter is not one of the <see cref="T:System.Messaging.MessageQueueTransactionType" /> members. </exception>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
        <IPermission class="System.Messaging.MessageQueuePermission, System.Messaging, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" version="1" Unrestricted="true" />
        <IPermission class="System.Diagnostics.PerformanceCounterPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:System.Messaging.MessageEnumerator.Reset">
      <summary>Resets the current enumerator so it points to the head of the queue.</summary>
    </member>
    <member name="P:System.Messaging.MessageEnumerator.System#Collections#IEnumerator#Current">
      <summary>Gets the current <see cref="T:System.Messaging.Message" /> that this enumerator points to.</summary>
      <returns>The current message.</returns>
      <exception cref="T:System.InvalidOperationException">You accessed this property before the first call to <see cref="M:System.Messaging.MessageEnumerator.MoveNext" />. The cursor is located before the first element of the message enumeration.-or- You accessed this property after a call to <see cref="M:System.Messaging.MessageEnumerator.MoveNext" /> had returned false (indicating the cursor is located after the last element of the message enumeration.) </exception>
      <exception cref="T:System.Messaging.MessageQueueException">The message the enumerator is currently pointing to no longer exists. It might have been deleted. </exception>
    </member>
    <member name="T:System.Messaging.MessageLookupAction">
      <summary>Specifies a message to peek at or receive from a message queue.</summary>
    </member>
    <member name="F:System.Messaging.MessageLookupAction.Current">
      <summary>Read the current message.</summary>
    </member>
    <member name="F:System.Messaging.MessageLookupAction.Next">
      <summary>Read the following message.</summary>
    </member>
    <member name="F:System.Messaging.MessageLookupAction.Previous">
      <summary>Read the preceding message.</summary>
    </member>
    <member name="F:System.Messaging.MessageLookupAction.First">
      <summary>Read the first message in the queue.</summary>
    </member>
    <member name="F:System.Messaging.MessageLookupAction.Last">
      <summary>Read the last message in the queue.</summary>
    </member>
    <member name="T:System.Messaging.MessagePriority">
      <summary>Specifies the priority Message Queuing applies to a message while it is en route to a queue, and when inserting the message into the destination queue.</summary>
    </member>
    <member name="F:System.Messaging.MessagePriority.Lowest">
      <summary>Lowest message priority.</summary>
    </member>
    <member name="F:System.Messaging.MessagePriority.VeryLow">
      <summary>Between Low and Lowest message priority.</summary>
    </member>
    <member name="F:System.Messaging.MessagePriority.Low">
      <summary>Low message priority.</summary>
    </member>
    <member name="F:System.Messaging.MessagePriority.Normal">
      <summary>Normal message priority.</summary>
    </member>
    <member name="F:System.Messaging.MessagePriority.AboveNormal">
      <summary>Between <see cref="F:System.Messaging.MessagePriority.High" /> and <see cref="F:System.Messaging.MessagePriority.Normal" /> message priority.</summary>
    </member>
    <member name="F:System.Messaging.MessagePriority.High">
      <summary>High message priority.</summary>
    </member>
    <member name="F:System.Messaging.MessagePriority.VeryHigh">
      <summary>Between Highest and High message priority.</summary>
    </member>
    <member name="F:System.Messaging.MessagePriority.Highest">
      <summary>Highest message priority.</summary>
    </member>
    <member name="T:System.Messaging.MessagePropertyFilter">
      <summary>Controls and selects the properties that are retrieved when peeking or receiving messages from a message queue.</summary>
    </member>
    <member name="M:System.Messaging.MessagePropertyFilter.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Messaging.MessagePropertyFilter" /> class and sets default values for all properties.</summary>
    </member>
    <member name="P:System.Messaging.MessagePropertyFilter.AcknowledgeType">
      <summary>Gets or sets a value that indicates whether to retrieve <see cref="P:System.Messaging.Message.AcknowledgeType" /> property information when receiving or peeking a message.</summary>
      <returns>true to receive <see cref="P:System.Messaging.Message.AcknowledgeType" /> information; otherwise, false. The default is true.</returns>
    </member>
    <member name="P:System.Messaging.MessagePropertyFilter.Acknowledgment">
      <summary>Gets or sets a value that indicates whether to retrieve <see cref="P:System.Messaging.Message.Acknowledgment" /> property information when receiving or peeking a message.</summary>
      <returns>true to receive <see cref="P:System.Messaging.Message.Acknowledgment" /> information; otherwise, false. The default is true.</returns>
    </member>
    <member name="P:System.Messaging.MessagePropertyFilter.AdministrationQueue">
      <summary>Gets or sets a value that indicates whether to retrieve <see cref="P:System.Messaging.Message.AdministrationQueue" /> property information when receiving or peeking a message.</summary>
      <returns>true to receive <see cref="P:System.Messaging.Message.AdministrationQueue" /> information; otherwise, false. The default is true.</returns>
    </member>
    <member name="P:System.Messaging.MessagePropertyFilter.AppSpecific">
      <summary>Gets or sets a value that indicates whether to retrieve <see cref="P:System.Messaging.Message.AppSpecific" /> property information when receiving or peeking a message.</summary>
      <returns>true to receive <see cref="P:System.Messaging.Message.AppSpecific" /> information; otherwise, false. The default is false.</returns>
    </member>
    <member name="P:System.Messaging.MessagePropertyFilter.ArrivedTime">
      <summary>Gets or sets a value that indicates whether to retrieve <see cref="P:System.Messaging.Message.ArrivedTime" /> property information when receiving or peeking a message.</summary>
      <returns>true to receive <see cref="P:System.Messaging.Message.ArrivedTime" /> information; otherwise, false. The default is false.</returns>
    </member>
    <member name="P:System.Messaging.MessagePropertyFilter.AttachSenderId">
      <summary>Gets or sets a value that indicates whether to retrieve <see cref="P:System.Messaging.Message.AttachSenderId" /> property information when receiving or peeking a message.</summary>
      <returns>true to receive <see cref="P:System.Messaging.Message.AttachSenderId" /> information; otherwise, false. The default is false.</returns>
    </member>
    <member name="P:System.Messaging.MessagePropertyFilter.Authenticated">
      <summary>Gets or sets a value that indicates whether to retrieve <see cref="P:System.Messaging.Message.Authenticated" /> property information when receiving or peeking a message.</summary>
      <returns>true to receive <see cref="P:System.Messaging.Message.Authenticated" /> information; otherwise, false. The default is false.</returns>
    </member>
    <member name="P:System.Messaging.MessagePropertyFilter.AuthenticationProviderName">
      <summary>Gets or sets a value that indicates whether to retrieve <see cref="P:System.Messaging.Message.AuthenticationProviderName" /> property information when receiving or peeking a message.</summary>
      <returns>true to receive <see cref="P:System.Messaging.Message.AuthenticationProviderName" /> information; otherwise, false. The default is false.</returns>
    </member>
    <member name="P:System.Messaging.MessagePropertyFilter.AuthenticationProviderType">
      <summary>Gets or sets a value that indicates whether to retrieve <see cref="P:System.Messaging.Message.AuthenticationProviderType" /> property information when receiving or peeking a message.</summary>
      <returns>true to receive <see cref="P:System.Messaging.Message.AuthenticationProviderType" /> information; otherwise, false. The default is false.</returns>
    </member>
    <member name="P:System.Messaging.MessagePropertyFilter.Body">
      <summary>Gets or sets a value that indicates whether to retrieve <see cref="P:System.Messaging.Message.Body" /> property information when receiving or peeking a message.</summary>
      <returns>true to receive <see cref="P:System.Messaging.Message.Body" /> information; otherwise, false. The default is true.</returns>
    </member>
    <member name="M:System.Messaging.MessagePropertyFilter.ClearAll">
      <summary>Sets all Boolean filter values to false, so that no message properties are retrieved when receiving a message.</summary>
    </member>
    <member name="M:System.Messaging.MessagePropertyFilter.Clone">
      <summary>Creates a shallow copy of the object.</summary>
      <returns>A <see cref="T:System.Object" /> that represents an instance of the <see cref="T:System.Messaging.MessagePropertyFilter" /> class.</returns>
    </member>
    <member name="P:System.Messaging.MessagePropertyFilter.ConnectorType">
      <summary>Gets or sets a value that indicates whether to retrieve <see cref="P:System.Messaging.Message.ConnectorType" /> property information when receiving or peeking a message.</summary>
      <returns>true to receive <see cref="P:System.Messaging.Message.ConnectorType" /> information; otherwise, false. The default is false.</returns>
    </member>
    <member name="P:System.Messaging.MessagePropertyFilter.CorrelationId">
      <summary>Gets or sets a value that indicates whether to retrieve <see cref="P:System.Messaging.Message.CorrelationId" /> property information when receiving or peeking a message.</summary>
      <returns>true to receive <see cref="P:System.Messaging.Message.CorrelationId" /> information; otherwise, false. The default is false.</returns>
    </member>
    <member name="P:System.Messaging.MessagePropertyFilter.DefaultBodySize">
      <summary>Gets or sets the size, in bytes, of the default body buffer.</summary>
      <returns>The default body buffer size to create when the message is received. The default is 1024 bytes.</returns>
      <exception cref="T:System.ArgumentException">The assigned value is negative. </exception>
    </member>
    <member name="P:System.Messaging.MessagePropertyFilter.DefaultExtensionSize">
      <summary>Gets or sets the size, in bytes, of the default extension buffer.</summary>
      <returns>The default extension buffer size to create when the message is received. The default is 255 bytes.</returns>
      <exception cref="T:System.ArgumentException">The assigned value is negative. </exception>
    </member>
    <member name="P:System.Messaging.MessagePropertyFilter.DefaultLabelSize">
      <summary>Gets or sets the size, in bytes, of the default label buffer.</summary>
      <returns>The default label buffer size to create when the message is received. The default is 255 bytes.</returns>
      <exception cref="T:System.ArgumentException">The assigned value is negative. </exception>
    </member>
    <member name="P:System.Messaging.MessagePropertyFilter.DestinationQueue">
      <summary>Gets or sets a value that indicates whether to retrieve <see cref="P:System.Messaging.Message.DestinationQueue" /> property information when receiving or peeking a message.</summary>
      <returns>true to receive <see cref="P:System.Messaging.Message.DestinationQueue" /> information; otherwise, false. The default is false.</returns>
    </member>
    <member name="P:System.Messaging.MessagePropertyFilter.DestinationSymmetricKey">
      <summary>Gets or sets a value that indicates whether to retrieve <see cref="P:System.Messaging.Message.DestinationSymmetricKey" /> property information when receiving or peeking a message.</summary>
      <returns>true to receive <see cref="P:System.Messaging.Message.DestinationSymmetricKey" /> information; otherwise, false. The default is false.</returns>
    </member>
    <member name="P:System.Messaging.MessagePropertyFilter.DigitalSignature">
      <summary>Gets or sets a value that indicates whether to retrieve <see cref="P:System.Messaging.Message.DigitalSignature" /> property information when receiving or peeking a message.</summary>
      <returns>true to receive <see cref="P:System.Messaging.Message.DigitalSignature" /> information; otherwise, false. The default is false.</returns>
    </member>
    <member name="P:System.Messaging.MessagePropertyFilter.EncryptionAlgorithm">
      <summary>Gets or sets a value that indicates whether to retrieve <see cref="P:System.Messaging.Message.EncryptionAlgorithm" /> property information when receiving or peeking a message.</summary>
      <returns>true to receive <see cref="P:System.Messaging.Message.EncryptionAlgorithm" /> information; otherwise, false. The default is false.</returns>
    </member>
    <member name="P:System.Messaging.MessagePropertyFilter.Extension">
      <summary>Gets or sets a value that indicates whether to retrieve <see cref="P:System.Messaging.Message.Extension" /> property information when receiving or peeking a message.</summary>
      <returns>true to receive <see cref="P:System.Messaging.Message.Extension" /> information; otherwise, false. The default is false.</returns>
    </member>
    <member name="P:System.Messaging.MessagePropertyFilter.HashAlgorithm">
      <summary>Gets or sets a value that indicates whether to retrieve <see cref="P:System.Messaging.Message.HashAlgorithm" /> property information when receiving or peeking a message.</summary>
      <returns>true to receive <see cref="P:System.Messaging.Message.HashAlgorithm" /> information; otherwise, false. The default is false.</returns>
    </member>
    <member name="P:System.Messaging.MessagePropertyFilter.Id">
      <summary>Gets or sets a value that indicates whether to retrieve <see cref="P:System.Messaging.Message.Id" /> property information when receiving or peeking a message.</summary>
      <returns>true to receive <see cref="P:System.Messaging.Message.Id" /> information; otherwise, false. The default is true.</returns>
    </member>
    <member name="P:System.Messaging.MessagePropertyFilter.IsFirstInTransaction">
      <summary>Gets or sets a value that indicates whether to retrieve <see cref="P:System.Messaging.Message.IsFirstInTransaction" /> property information when receiving or peeking a message.</summary>
      <returns>true to receive <see cref="P:System.Messaging.Message.IsFirstInTransaction" /> information; otherwise, false. The default is false.</returns>
    </member>
    <member name="P:System.Messaging.MessagePropertyFilter.IsLastInTransaction">
      <summary>Gets or sets a value that indicates whether to retrieve <see cref="P:System.Messaging.Message.IsLastInTransaction" /> property information when receiving or peeking a message.</summary>
      <returns>true to receive <see cref="P:System.Messaging.Message.IsLastInTransaction" /> information; otherwise, false. The default is false.</returns>
    </member>
    <member name="P:System.Messaging.MessagePropertyFilter.Label">
      <summary>Gets or sets a value that indicates whether to retrieve <see cref="P:System.Messaging.Message.Label" /> property information when receiving or peeking a message.</summary>
      <returns>true to receive <see cref="P:System.Messaging.Message.Label" /> information; otherwise, false. The default is true.</returns>
    </member>
    <member name="P:System.Messaging.MessagePropertyFilter.LookupId">
      <summary>Gets or sets a value that indicates whether to retrieve <see cref="P:System.Messaging.Message.LookupId" /> property information when receiving or peeking a message.</summary>
      <returns>true to receive <see cref="P:System.Messaging.Message.LookupId" /> property information; otherwise, false. The default is true.</returns>
    </member>
    <member name="P:System.Messaging.MessagePropertyFilter.MessageType">
      <summary>Gets or sets a value that indicates whether to retrieve <see cref="P:System.Messaging.Message.MessageType" /> property information when receiving or peeking a message.</summary>
      <returns>true to receive <see cref="P:System.Messaging.Message.MessageType" /> information; otherwise, false. The default is true.</returns>
    </member>
    <member name="P:System.Messaging.MessagePropertyFilter.Priority">
      <summary>Gets or sets a value that indicates whether to retrieve <see cref="P:System.Messaging.Message.Priority" /> property information when receiving or peeking a message.</summary>
      <returns>true to receive <see cref="P:System.Messaging.Message.Priority" /> information; otherwise, false. The default is false.</returns>
    </member>
    <member name="P:System.Messaging.MessagePropertyFilter.Recoverable">
      <summary>Gets or sets a value that indicates whether to retrieve <see cref="P:System.Messaging.Message.Recoverable" /> property information when receiving or peeking a message.</summary>
      <returns>true to receive <see cref="P:System.Messaging.Message.Recoverable" /> information; otherwise, false. The default is false.</returns>
    </member>
    <member name="P:System.Messaging.MessagePropertyFilter.ResponseQueue">
      <summary>Gets or sets a value that indicates whether to retrieve <see cref="P:System.Messaging.Message.ResponseQueue" /> property information when receiving or peeking a message.</summary>
      <returns>true to receive <see cref="P:System.Messaging.Message.ResponseQueue" /> information; otherwise, false. The default is true.</returns>
    </member>
    <member name="P:System.Messaging.MessagePropertyFilter.SenderCertificate">
      <summary>Gets or sets a value that indicates whether to retrieve <see cref="P:System.Messaging.Message.SenderCertificate" /> property information when receiving or peeking a message.</summary>
      <returns>true to receive <see cref="P:System.Messaging.Message.SenderCertificate" /> information; otherwise, false. The default is false.</returns>
    </member>
    <member name="P:System.Messaging.MessagePropertyFilter.SenderId">
      <summary>Gets or sets a value that indicates whether to retrieve <see cref="P:System.Messaging.Message.SenderId" /> property information when receiving or peeking a message.</summary>
      <returns>true to receive <see cref="P:System.Messaging.Message.SenderId" /> information; otherwise, false. The default is false.</returns>
    </member>
    <member name="P:System.Messaging.MessagePropertyFilter.SenderVersion">
      <summary>Gets or sets a value that indicates whether to retrieve <see cref="P:System.Messaging.Message.SenderVersion" /> property information when receiving or peeking a message.</summary>
      <returns>true to receive <see cref="P:System.Messaging.Message.SenderVersion" /> information; otherwise, false. The default is false.</returns>
    </member>
    <member name="P:System.Messaging.MessagePropertyFilter.SentTime">
      <summary>Gets or sets a value that indicates whether to retrieve <see cref="P:System.Messaging.Message.SentTime" /> property information when receiving or peeking a message.</summary>
      <returns>true to receive <see cref="P:System.Messaging.Message.SentTime" /> information; otherwise, false. The default is false.</returns>
    </member>
    <member name="M:System.Messaging.MessagePropertyFilter.SetAll">
      <summary>Specifies to retrieve all message properties when receiving a message.</summary>
    </member>
    <member name="M:System.Messaging.MessagePropertyFilter.SetDefaults">
      <summary>Sets the filter values of common Message Queuing properties to true and the integer-valued properties to their default values.</summary>
    </member>
    <member name="P:System.Messaging.MessagePropertyFilter.SourceMachine">
      <summary>Gets or sets a value that indicates whether to retrieve <see cref="P:System.Messaging.Message.SourceMachine" /> property information when receiving or peeking a message.</summary>
      <returns>true to receive <see cref="P:System.Messaging.Message.SourceMachine" /> information; otherwise, false. The default is false.</returns>
    </member>
    <member name="P:System.Messaging.MessagePropertyFilter.TimeToBeReceived">
      <summary>Gets or sets a value that indicates whether to retrieve <see cref="P:System.Messaging.Message.TimeToBeReceived" /> property information when receiving or peeking a message.</summary>
      <returns>true to receive <see cref="P:System.Messaging.Message.TimeToBeReceived" /> information; otherwise, false. The default is false.</returns>
    </member>
    <member name="P:System.Messaging.MessagePropertyFilter.TimeToReachQueue">
      <summary>Gets or sets a value that indicates whether to retrieve <see cref="P:System.Messaging.Message.TimeToReachQueue" /> property information when receiving or peeking a message.</summary>
      <returns>true to receive <see cref="P:System.Messaging.Message.TimeToReachQueue" /> information; otherwise, false. The default is false.</returns>
    </member>
    <member name="P:System.Messaging.MessagePropertyFilter.TransactionId">
      <summary>Gets or sets a value that indicates whether to retrieve <see cref="P:System.Messaging.Message.TransactionId" /> property information when receiving or peeking a message.</summary>
      <returns>true to receive <see cref="P:System.Messaging.Message.TransactionId" /> information; otherwise, false. The default is false.</returns>
    </member>
    <member name="P:System.Messaging.MessagePropertyFilter.TransactionStatusQueue">
      <summary>Gets or sets a value that indicates whether to retrieve <see cref="P:System.Messaging.Message.TransactionStatusQueue" /> property information when receiving or peeking a message.</summary>
      <returns>true to receive <see cref="P:System.Messaging.Message.TransactionStatusQueue" /> information; otherwise, false. The default is false.</returns>
    </member>
    <member name="P:System.Messaging.MessagePropertyFilter.UseAuthentication">
      <summary>Gets or sets a value that indicates whether to retrieve <see cref="P:System.Messaging.Message.UseAuthentication" /> property information when receiving or peeking a message.</summary>
      <returns>true to receive <see cref="P:System.Messaging.Message.UseAuthentication" /> information; otherwise, false. The default is false.</returns>
    </member>
    <member name="P:System.Messaging.MessagePropertyFilter.UseDeadLetterQueue">
      <summary>Gets or sets a value that indicates whether to retrieve <see cref="P:System.Messaging.Message.UseDeadLetterQueue" /> property information when receiving or peeking a message.</summary>
      <returns>true to receive <see cref="P:System.Messaging.Message.UseDeadLetterQueue" /> information; otherwise, false. The default is true.</returns>
    </member>
    <member name="P:System.Messaging.MessagePropertyFilter.UseEncryption">
      <summary>Gets or sets a value that indicates whether to retrieve <see cref="P:System.Messaging.Message.UseEncryption" /> property information when receiving or peeking a message.</summary>
      <returns>true to receive <see cref="P:System.Messaging.Message.UseEncryption" /> information; otherwise, false. The default is false.</returns>
    </member>
    <member name="P:System.Messaging.MessagePropertyFilter.UseJournalQueue">
      <summary>Gets or sets a value that indicates whether to retrieve <see cref="P:System.Messaging.Message.UseJournalQueue" /> property information when receiving or peeking a message.</summary>
      <returns>true to receive <see cref="P:System.Messaging.Message.UseJournalQueue" /> information; otherwise, false. The default is true.</returns>
    </member>
    <member name="P:System.Messaging.MessagePropertyFilter.UseTracing">
      <summary>Gets or sets a value that indicates whether to retrieve <see cref="P:System.Messaging.Message.UseTracing" /> property information when receiving or peeking a message.</summary>
      <returns>true to receive <see cref="P:System.Messaging.Message.UseTracing" /> information; otherwise, false. The default is false.</returns>
    </member>
    <member name="T:System.Messaging.MessageQueue">
      <summary>Provides access to a queue on a Message Queuing server.</summary>
    </member>
    <member name="M:System.Messaging.MessageQueue.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Messaging.MessageQueue" /> class. After the default constructor initializes the new instance, you must set the instance's <see cref="P:System.Messaging.MessageQueue.Path" /> property before you can use the instance.</summary>
    </member>
    <member name="M:System.Messaging.MessageQueue.#ctor(System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.Messaging.MessageQueue" /> class that references the Message Queuing queue at the specified path.</summary>
      <param name="path">The location of the queue referenced by this <see cref="T:System.Messaging.MessageQueue" />. </param>
      <exception cref="T:System.ArgumentException">The <see cref="P:System.Messaging.MessageQueue.Path" /> property is not valid, possibly because it has not been set. </exception>
    </member>
    <member name="M:System.Messaging.MessageQueue.#ctor(System.String,System.Boolean)">
      <summary>Initializes a new instance of the <see cref="T:System.Messaging.MessageQueue" /> class that references the Message Queuing queue at the specified path and with the specified read-access restriction.</summary>
      <param name="path">The location of the queue referenced by this <see cref="T:System.Messaging.MessageQueue" />, which can be "." for the local computer. For information about the proper syntax for this parameter, see the Remarks section. </param>
      <param name="sharedModeDenyReceive">true to grant exclusive read access to the first application that accesses the queue; otherwise, false. </param>
      <exception cref="T:System.ArgumentException">The <see cref="P:System.Messaging.MessageQueue.Path" /> property is not valid, possibly because it has not been set. </exception>
    </member>
    <member name="M:System.Messaging.MessageQueue.#ctor(System.String,System.Boolean,System.Boolean)">
      <summary>Initializes a new instance of the <see cref="T:System.Messaging.MessageQueue" /> class.</summary>
      <param name="path">The location of the queue referenced by this <see cref="T:System.Messaging.MessageQueue" />, which can be "." for the local computer.</param>
      <param name="sharedModeDenyReceive">true to grant exclusive read access to the first application that accesses the queue; otherwise, false. </param>
      <param name="enableCache">true to create and use a connection cache; otherwise, false.</param>
    </member>
    <member name="M:System.Messaging.MessageQueue.#ctor(System.String,System.Boolean,System.Boolean,System.Messaging.QueueAccessMode)">
      <summary>Initializes a new instance of the <see cref="T:System.Messaging.MessageQueue" /> class.</summary>
      <param name="path">The location of the queue referenced by this <see cref="T:System.Messaging.MessageQueue" />, which can be "." for the local computer.</param>
      <param name="sharedModeDenyReceive">true to grant exclusive read access to the first application that accesses the queue; otherwise, false. </param>
      <param name="enableCache">true to create and use a connection cache; otherwise, false.</param>
      <param name="accessMode">One of the <see cref="T:System.Messaging.QueueAccessMode" /> values.</param>
    </member>
    <member name="M:System.Messaging.MessageQueue.#ctor(System.String,System.Messaging.QueueAccessMode)">
      <summary>Initializes a new instance of the <see cref="T:System.Messaging.MessageQueue" /> class.</summary>
      <param name="path">The location of the queue referenced by this <see cref="T:System.Messaging.MessageQueue" />, which can be "." for the local computer.</param>
      <param name="accessMode">One of the <see cref="T:System.Messaging.QueueAccessMode" /> values.</param>
    </member>
    <member name="P:System.Messaging.MessageQueue.AccessMode">
      <summary>Gets a value that indicates the access mode for the queue.</summary>
      <returns>One of the <see cref="T:System.Messaging.QueueAccessMode" /> values.</returns>
    </member>
    <member name="P:System.Messaging.MessageQueue.Authenticate">
      <summary>Gets or sets a value that indicates whether the queue accepts only authenticated messages.</summary>
      <returns>true if the queue accepts only authenticated messages; otherwise, false. The default is false.</returns>
      <exception cref="T:System.Messaging.MessageQueueException">An error occurred when accessing a Message Queuing method. </exception>
      <PermissionSet>
        <IPermission class="System.Messaging.MessageQueuePermission, System.Messaging, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="P:System.Messaging.MessageQueue.BasePriority">
      <summary>Gets or sets the base priority Message Queuing uses to route a public queue's messages over the network.</summary>
      <returns>The single base priority for all messages sent to the (public) queue. The default is zero (0).</returns>
      <exception cref="T:System.ArgumentException">The base priority was set to an invalid value. </exception>
      <exception cref="T:System.Messaging.MessageQueueException">An error occurred when accessing a Message Queuing method. </exception>
      <PermissionSet>
        <IPermission class="System.Messaging.MessageQueuePermission, System.Messaging, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:System.Messaging.MessageQueue.BeginPeek">
      <summary>Initiates an asynchronous peek operation that has no time-out. The operation is not complete until a message becomes available in the queue.</summary>
      <returns>The <see cref="T:System.IAsyncResult" /> that identifies the posted asynchronous request.</returns>
      <exception cref="T:System.Messaging.MessageQueueException">An error occurred when accessing a Message Queuing method. </exception>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
        <IPermission class="System.Messaging.MessageQueuePermission, System.Messaging, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" version="1" Unrestricted="true" />
        <IPermission class="System.Diagnostics.PerformanceCounterPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:System.Messaging.MessageQueue.BeginPeek(System.TimeSpan)">
      <summary>Initiates an asynchronous peek operation that has a specified time-out. The operation is not complete until either a message becomes available in the queue or the time-out occurs.</summary>
      <returns>The <see cref="T:System.IAsyncResult" /> that identifies the posted asynchronous request.</returns>
      <param name="timeout">A <see cref="T:System.TimeSpan" /> that indicates the interval of time to wait for a message to become available. </param>
      <exception cref="T:System.ArgumentException">The value specified for the <paramref name="timeout" /> parameter is not valid. </exception>
      <exception cref="T:System.Messaging.MessageQueueException">An error occurred when accessing a Message Queuing method. </exception>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
        <IPermission class="System.Messaging.MessageQueuePermission, System.Messaging, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" version="1" Unrestricted="true" />
        <IPermission class="System.Diagnostics.PerformanceCounterPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:System.Messaging.MessageQueue.BeginPeek(System.TimeSpan,System.Messaging.Cursor,System.Messaging.PeekAction,System.Object,System.AsyncCallback)">
      <summary>Initiates an asynchronous peek operation that has a specified time-out and that uses a specified cursor, a specified peek action, and a specified state object. The state object provides associated information throughout the lifetime of the operation. This overload receives notification, through a callback, of the identity of the event handler for the operation. The operation is not complete until either a message becomes available in the queue or the time-out occurs.</summary>
      <returns>The <see cref="T:System.IAsyncResult" /> that identifies the posted asynchronous request.</returns>
      <param name="timeout">A <see cref="T:System.TimeSpan" /> that indicates the interval of time to wait for a message to become available. </param>
      <param name="cursor">A <see cref="T:System.Messaging.Cursor" /> that maintains a specific position in the message queue.</param>
      <param name="action">One of the <see cref="T:System.Messaging.PeekAction" /> values. Indicates whether to peek at the current message in the queue, or the next message.</param>
      <param name="state">A state object, specified by the application, that contains information associated with the asynchronous operation. </param>
      <param name="callback">The <see cref="T:System.AsyncCallback" /> that receives the notification of the asynchronous operation completion. </param>
      <exception cref="T:System.ArgumentOutOfRangeException">A value other than PeekAction.Current or PeekAction.Next was specified for the <paramref name="action" /> parameter.</exception>
      <exception cref="T:System.ArgumentNullException">The <paramref name="cursor" /> parameter is null.</exception>
      <exception cref="T:System.ArgumentException">The value specified for the <paramref name="timeout" /> parameter is not valid. </exception>
      <exception cref="T:System.Messaging.MessageQueueException">An error occurred when accessing a Message Queuing method. </exception>
    </member>
    <member name="M:System.Messaging.MessageQueue.BeginPeek(System.TimeSpan,System.Object)">
      <summary>Initiates an asynchronous peek operation that has a specified time-out and a specified state object, which provides associated information throughout the operation's lifetime. The operation is not complete until either a message becomes available in the queue or the time-out occurs.</summary>
      <returns>The <see cref="T:System.IAsyncResult" /> that identifies the posted asynchronous request.</returns>
      <param name="timeout">A <see cref="T:System.TimeSpan" /> that indicates the interval of time to wait for a message to become available. </param>
      <param name="stateObject">A state object, specified by the application, that contains information associated with the asynchronous operation. </param>
      <exception cref="T:System.ArgumentException">The value specified for the <paramref name="timeout" /> parameter is not valid. </exception>
      <exception cref="T:System.Messaging.MessageQueueException">An error occurred when accessing a Message Queuing method. </exception>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
        <IPermission class="System.Messaging.MessageQueuePermission, System.Messaging, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" version="1" Unrestricted="true" />
        <IPermission class="System.Diagnostics.PerformanceCounterPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:System.Messaging.MessageQueue.BeginPeek(System.TimeSpan,System.Object,System.AsyncCallback)">
      <summary>Initiates an asynchronous peek operation that has a specified time-out and a specified state object, which provides associated information throughout the operation's lifetime. This overload receives notification, through a callback, of the identity of the event handler for the operation. The operation is not complete until either a message becomes available in the queue or the time-out occurs.</summary>
      <returns>The <see cref="T:System.IAsyncResult" /> that identifies the posted asynchronous request.</returns>
      <param name="timeout">A <see cref="T:System.TimeSpan" /> that indicates the interval of time to wait for a message to become available. </param>
      <param name="stateObject">A state object, specified by the application, that contains information associated with the asynchronous operation. </param>
      <param name="callback">The <see cref="T:System.AsyncCallback" /> that will receive the notification of the asynchronous operation completion. </param>
      <exception cref="T:System.ArgumentException">The value specified for the <paramref name="timeout" /> parameter is not valid. </exception>
      <exception cref="T:System.Messaging.MessageQueueException">An error occurred when accessing a Message Queuing method. </exception>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
        <IPermission class="System.Messaging.MessageQueuePermission, System.Messaging, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" version="1" Unrestricted="true" />
        <IPermission class="System.Diagnostics.PerformanceCounterPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:System.Messaging.MessageQueue.BeginReceive">
      <summary>Initiates an asynchronous receive operation that has no time-out. The operation is not complete until a message becomes available in the queue.</summary>
      <returns>The <see cref="T:System.IAsyncResult" /> that identifies the posted asynchronous request.</returns>
      <exception cref="T:System.Messaging.MessageQueueException">An error occurred when accessing a Message Queuing method. </exception>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
        <IPermission class="System.Messaging.MessageQueuePermission, System.Messaging, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" version="1" Unrestricted="true" />
        <IPermission class="System.Diagnostics.PerformanceCounterPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:System.Messaging.MessageQueue.BeginReceive(System.TimeSpan)">
      <summary>Initiates an asynchronous receive operation that has a specified time-out. The operation is not complete until either a message becomes available in the queue or the time-out occurs.</summary>
      <returns>The <see cref="T:System.IAsyncResult" /> that identifies the posted asynchronous request.</returns>
      <param name="timeout">A <see cref="T:System.TimeSpan" /> that indicates the interval of time to wait for a message to become available. </param>
      <exception cref="T:System.ArgumentException">The value specified for the <paramref name="timeout" /> parameter is not valid, possibly because it represents a negative number. </exception>
      <exception cref="T:System.Messaging.MessageQueueException">An error occurred when accessing a Message Queuing method. </exception>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
        <IPermission class="System.Messaging.MessageQueuePermission, System.Messaging, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" version="1" Unrestricted="true" />
        <IPermission class="System.Diagnostics.PerformanceCounterPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:System.Messaging.MessageQueue.BeginReceive(System.TimeSpan,System.Messaging.Cursor,System.Object,System.AsyncCallback)">
      <summary>Initiates an asynchronous receive operation that has a specified time-out and uses a specified cursor and a specified state object. The state object provides associated information throughout the lifetime of the operation. This overload receives notification, through a callback, of the identity of the event handler for the operation. The operation is not complete until either a message becomes available in the queue or the time-out occurs.</summary>
      <returns>The <see cref="T:System.IAsyncResult" /> that identifies the posted asynchronous request.</returns>
      <param name="timeout">A <see cref="T:System.TimeSpan" /> that indicates the interval of time to wait for a message to become available. </param>
      <param name="cursor">A <see cref="T:System.Messaging.Cursor" /> that maintains a specific position in the message queue.</param>
      <param name="state">A state object, specified by the application, that contains information associated with the asynchronous operation. </param>
      <param name="callback">The <see cref="T:System.AsyncCallback" /> that receives the notification of the asynchronous operation completion. </param>
      <exception cref="T:System.ArgumentNullException">The <paramref name="cursor" /> parameter is null.</exception>
      <exception cref="T:System.ArgumentException">The value specified for the <paramref name="timeout" /> parameter is not valid. </exception>
      <exception cref="T:System.Messaging.MessageQueueException">An error occurred when accessing a Message Queuing method. </exception>
    </member>
    <member name="M:System.Messaging.MessageQueue.BeginReceive(System.TimeSpan,System.Object)">
      <summary>Initiates an asynchronous receive operation that has a specified time-out and a specified state object, which provides associated information throughout the operation's lifetime. The operation is not complete until either a message becomes available in the queue or the time-out occurs.</summary>
      <returns>The <see cref="T:System.IAsyncResult" /> that identifies the posted asynchronous request.</returns>
      <param name="timeout">A <see cref="T:System.TimeSpan" /> that indicates the interval of time to wait for a message to become available. </param>
      <param name="stateObject">A state object, specified by the application, that contains information associated with the asynchronous operation. </param>
      <exception cref="T:System.ArgumentException">The value specified for the <paramref name="timeout" /> parameter is not valid. </exception>
      <exception cref="T:System.Messaging.MessageQueueException">An error occurred when accessing a Message Queuing method. </exception>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
        <IPermission class="System.Messaging.MessageQueuePermission, System.Messaging, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" version="1" Unrestricted="true" />
        <IPermission class="System.Diagnostics.PerformanceCounterPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:System.Messaging.MessageQueue.BeginReceive(System.TimeSpan,System.Object,System.AsyncCallback)">
      <summary>Initiates an asynchronous receive operation that has a specified time-out and a specified state object, which provides associated information throughout the operation's lifetime. This overload receives notification, through a callback, of the identity of the event handler for the operation. The operation is not complete until either a message becomes available in the queue or the time-out occurs.</summary>
      <returns>The <see cref="T:System.IAsyncResult" /> that identifies the posted asynchronous request.</returns>
      <param name="timeout">A <see cref="T:System.TimeSpan" /> that indicates the interval of time to wait for a message to become available. </param>
      <param name="stateObject">A state object, specified by the application, that contains information associated with the asynchronous operation. </param>
      <param name="callback">The <see cref="T:System.AsyncCallback" /> that will receive the notification of the asynchronous operation completion. </param>
      <exception cref="T:System.ArgumentException">The value specified for the <paramref name="timeout" /> parameter is not valid. </exception>
      <exception cref="T:System.Messaging.MessageQueueException">An error occurred when accessing a Message Queuing method. </exception>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
        <IPermission class="System.Messaging.MessageQueuePermission, System.Messaging, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" version="1" Unrestricted="true" />
        <IPermission class="System.Diagnostics.PerformanceCounterPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="P:System.Messaging.MessageQueue.CanRead">
      <summary>Gets a value that indicates whether the <see cref="T:System.Messaging.MessageQueue" /> can be read.</summary>
      <returns>true if the <see cref="T:System.Messaging.MessageQueue" /> exists and the application can read from it; otherwise, false.</returns>
      <PermissionSet>
        <IPermission class="System.Messaging.MessageQueuePermission, System.Messaging, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="P:System.Messaging.MessageQueue.CanWrite">
      <summary>Gets a value that indicates whether the <see cref="T:System.Messaging.MessageQueue" /> can be written to.</summary>
      <returns>true if the <see cref="T:System.Messaging.MessageQueue" /> exists and the application can write to it; otherwise, false.</returns>
      <PermissionSet>
        <IPermission class="System.Messaging.MessageQueuePermission, System.Messaging, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="P:System.Messaging.MessageQueue.Category">
      <summary>Gets or sets the queue category.</summary>
      <returns>A <see cref="T:System.Guid" /> that represents the queue category (Message Queuing type identifier), which allows an application to categorize its queues. The default is Guid.empty.</returns>
      <exception cref="T:System.ArgumentException">The queue category was set to an invalid value. </exception>
      <exception cref="T:System.Messaging.MessageQueueException">An error occurred when accessing a Message Queuing method. </exception>
      <PermissionSet>
        <IPermission class="System.Messaging.MessageQueuePermission, System.Messaging, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:System.Messaging.MessageQueue.ClearConnectionCache">
      <summary>Clears the connection cache.</summary>
    </member>
    <member name="M:System.Messaging.MessageQueue.Close">
      <summary>Frees all resources allocated by the <see cref="T:System.Messaging.MessageQueue" />.</summary>
    </member>
    <member name="M:System.Messaging.MessageQueue.Create(System.String)">
      <summary>Creates a non-transactional Message Queuing queue at the specified path.</summary>
      <returns>A <see cref="T:System.Messaging.MessageQueue" /> that represents the new queue.</returns>
      <param name="path">The path of the queue to create. </param>
      <exception cref="T:System.ArgumentException">The <paramref name="path" /> parameter is null or is an empty string (""). </exception>
      <exception cref="T:System.Messaging.MessageQueueException">A queue already exists at the specified path.-or- An error occurred when accessing a Message Queuing method. </exception>
      <PermissionSet>
        <IPermission class="System.Messaging.MessageQueuePermission, System.Messaging, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" version="1">
          <Path value="*" access="Administer" />
        </IPermission>
      </PermissionSet>
    </member>
    <member name="M:System.Messaging.MessageQueue.Create(System.String,System.Boolean)">
      <summary>Creates a transactional or non-transactional Message Queuing queue at the specified path.</summary>
      <returns>A <see cref="T:System.Messaging.MessageQueue" /> that represents the new queue.</returns>
      <param name="path">The path of the queue to create. </param>
      <param name="transactional">true to create a transactional queue; false to create a non-transactional queue. </param>
      <exception cref="T:System.ArgumentException">The <paramref name="path" /> parameter is null or is an empty string (""). </exception>
      <exception cref="T:System.Messaging.MessageQueueException">A queue already exists at the specified path.-or- An error occurred when accessing a Message Queuing method. </exception>
      <PermissionSet>
        <IPermission class="System.Messaging.MessageQueuePermission, System.Messaging, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" version="1">
          <Path value="*" access="Administer" />
        </IPermission>
      </PermissionSet>
    </member>
    <member name="M:System.Messaging.MessageQueue.CreateCursor">
      <summary>Creates a new <see cref="T:System.Messaging.Cursor" /> for the current message queue.</summary>
      <returns>A new <see cref="T:System.Messaging.Cursor" /> for the current message queue. This cursor is used to maintain a specific location in the queue when reading the queue's messages.</returns>
    </member>
    <member name="P:System.Messaging.MessageQueue.CreateTime">
      <summary>Gets the time and date that the queue was created in Message Queuing.</summary>
      <returns>A <see cref="T:System.DateTime" /> that represents the date and time at which the queue was created.</returns>
      <exception cref="T:System.Messaging.MessageQueueException">An error occurred when accessing a Message Queuing method. </exception>
      <PermissionSet>
        <IPermission class="System.Messaging.MessageQueuePermission, System.Messaging, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="P:System.Messaging.MessageQueue.DefaultPropertiesToSend">
      <summary>Gets or sets the message property values to be used by default when the application sends messages to the queue.</summary>
      <returns>A <see cref="T:System.Messaging.DefaultPropertiesToSend" /> that contains the default Message Queuing message property values used when the application sends objects other than <see cref="T:System.Messaging.Message" /> instances to the queue.</returns>
      <exception cref="T:System.ArgumentException">The default properties could not be set for the queue, possibly because one of the properties is not valid. </exception>
    </member>
    <member name="M:System.Messaging.MessageQueue.Delete(System.String)">
      <summary>Deletes a queue on a Message Queuing server.</summary>
      <param name="path">The location of the queue to be deleted. </param>
      <exception cref="T:System.ArgumentException">The <paramref name="path" /> parameter is null or is an empty string (""). </exception>
      <exception cref="T:System.Messaging.MessageQueueException">The syntax for the <paramref name="path" /> parameter is not valid.-or- An error occurred when accessing a Message Queuing method. </exception>
      <PermissionSet>
        <IPermission class="System.Messaging.MessageQueuePermission, System.Messaging, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="P:System.Messaging.MessageQueue.DenySharedReceive">
      <summary>Gets or sets a value that indicates whether this <see cref="T:System.Messaging.MessageQueue" /> has exclusive access to receive messages from the Message Queuing queue.</summary>
      <returns>true if this <see cref="T:System.Messaging.MessageQueue" /> has exclusive rights to receive messages from the queue; otherwise, false. The default is false.</returns>
    </member>
    <member name="M:System.Messaging.MessageQueue.Dispose(System.Boolean)">
      <summary>Disposes of the resources (other than memory) used by the <see cref="T:System.Messaging.MessageQueue" />.</summary>
      <param name="disposing">true to release both managed and unmanaged resources; false to release only unmanaged resources. </param>
    </member>
    <member name="P:System.Messaging.MessageQueue.EnableConnectionCache">
      <summary>Gets or sets a value that indicates whether a cache of connections will be maintained by the application.</summary>
      <returns>true to create and use a connection cache; otherwise, false.</returns>
    </member>
    <member name="P:System.Messaging.MessageQueue.EncryptionRequired">
      <summary>Gets or sets a value that indicates whether the queue accepts only non-private (non-encrypted) messages.</summary>
      <returns>One of the <see cref="T:System.Messaging.EncryptionRequired" /> values. The default is None.</returns>
      <exception cref="T:System.Messaging.MessageQueueException">An error occurred when accessing a Message Queuing method. </exception>
      <PermissionSet>
        <IPermission class="System.Messaging.MessageQueuePermission, System.Messaging, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:System.Messaging.MessageQueue.EndPeek(System.IAsyncResult)">
      <summary>Completes the specified asynchronous peek operation.</summary>
      <returns>The <see cref="T:System.Messaging.Message" /> associated with the completed asynchronous operation.</returns>
      <param name="asyncResult">The <see cref="T:System.IAsyncResult" /> that identifies the asynchronous peek operation to finish and from which to retrieve an end result. </param>
      <exception cref="T:System.ArgumentNullException">The <paramref name="asyncResult" /> parameter is null. </exception>
      <exception cref="T:System.ArgumentException">The syntax of the <paramref name="asyncResult" /> parameter is not valid. </exception>
      <exception cref="T:System.Messaging.MessageQueueException">An error occurred when accessing a Message Queuing method. </exception>
    </member>
    <member name="M:System.Messaging.MessageQueue.EndReceive(System.IAsyncResult)">
      <summary>Completes the specified asynchronous receive operation.</summary>
      <returns>The <see cref="T:System.Messaging.Message" /> associated with the completed asynchronous operation.</returns>
      <param name="asyncResult">The <see cref="T:System.IAsyncResult" /> that identifies the asynchronous receive operation to finish and from which to retrieve an end result. </param>
      <exception cref="T:System.ArgumentNullException">The <paramref name="asyncResult" /> parameter is null. </exception>
      <exception cref="T:System.ArgumentException">The syntax of the <paramref name="asyncResult" /> parameter is not valid. </exception>
      <exception cref="T:System.Messaging.MessageQueueException">An error occurred when accessing a Message Queuing method. </exception>
    </member>
    <member name="M:System.Messaging.MessageQueue.Exists(System.String)">
      <summary>Determines whether a Message Queuing queue exists at the specified path.</summary>
      <returns>true if a queue with the specified path exists; otherwise, false.</returns>
      <param name="path">The location of the queue to find. </param>
      <exception cref="T:System.ArgumentException">The <paramref name="path" /> syntax is not valid. </exception>
      <exception cref="T:System.Messaging.MessageQueueException">An error occurred when accessing a Message Queuing method.-or- The <see cref="M:System.Messaging.MessageQueue.Exists(System.String)" /> method is being called on a remote private queue </exception>
      <exception cref="T:System.InvalidOperationException">The application used format name syntax when verifying queue existence. </exception>
      <PermissionSet>
        <IPermission class="System.Messaging.MessageQueuePermission, System.Messaging, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" version="1">
          <Path value="*" access="Browse" />
        </IPermission>
      </PermissionSet>
    </member>
    <member name="P:System.Messaging.MessageQueue.FormatName">
      <summary>Gets the unique queue name that Message Queuing generated at the time of the queue's creation.</summary>
      <returns>The name for the queue, which is unique on the network.</returns>
      <exception cref="T:System.Messaging.MessageQueueException">The <see cref="P:System.Messaging.MessageQueue.Path" /> is not set.-or- An error occurred when accessing a Message Queuing method. </exception>
      <PermissionSet>
        <IPermission class="System.Messaging.MessageQueuePermission, System.Messaging, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="P:System.Messaging.MessageQueue.Formatter">
      <summary>Gets or sets the formatter used to serialize an object into or deserialize an object from the body of a message read from or written to the queue.</summary>
      <returns>The <see cref="T:System.Messaging.IMessageFormatter" /> that produces a stream to be written to or read from the message body. The default is <see cref="T:System.Messaging.XmlMessageFormatter" />.</returns>
    </member>
    <member name="M:System.Messaging.MessageQueue.GetAllMessages">
      <summary>Returns all the messages that are in the queue.</summary>
      <returns>An array of type <see cref="T:System.Messaging.Message" /> that represents all the messages in the queue, in the same order as they appear in the Message Queuing queue.</returns>
      <exception cref="T:System.Messaging.MessageQueueException">An error occurred when accessing a Message Queuing method. </exception>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
        <IPermission class="System.Messaging.MessageQueuePermission, System.Messaging, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" version="1" Unrestricted="true" />
        <IPermission class="System.Diagnostics.PerformanceCounterPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:System.Messaging.MessageQueue.GetEnumerator">
      <summary>Enumerates the messages in a queue. <see cref="M:System.Messaging.MessageQueue.GetEnumerator" /> is deprecated. <see cref="M:System.Messaging.MessageQueue.GetMessageEnumerator2" /> should be used instead.</summary>
      <returns>A <see cref="T:System.Collections.IEnumerator" /> that provides a dynamic connection to the messages in the queue.</returns>
      <PermissionSet>
        <IPermission class="System.Messaging.MessageQueuePermission, System.Messaging, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:System.Messaging.MessageQueue.GetMachineId(System.String)">
      <summary>Gets the identifier of the computer on which the queue referenced by this <see cref="T:System.Messaging.MessageQueue" /> is located.</summary>
      <returns>A <see cref="T:System.Guid" /> that represents a unique identifier for the computer on which the queue is located.</returns>
      <param name="machineName">The name of the computer that contains the queue, without the two preceding backslashes (\\). </param>
      <exception cref="T:System.Messaging.MessageQueueException">The computer identifier could not be retrieved, possibly because the directory service is not available; for example, if you are working offline.-or- An error occurred when accessing a Message Queuing method. </exception>
      <PermissionSet>
        <IPermission class="System.Messaging.MessageQueuePermission, System.Messaging, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" version="1">
          <Path value="*" access="Browse" />
        </IPermission>
      </PermissionSet>
    </member>
    <member name="M:System.Messaging.MessageQueue.GetMessageEnumerator">
      <summary>Creates an enumerator object for all the messages in the queue. <see cref="M:System.Messaging.MessageQueue.GetMessageEnumerator" /> is deprecated. <see cref="M:System.Messaging.MessageQueue.GetMessageEnumerator2" /> should be used instead.</summary>
      <returns>The <see cref="T:System.Messaging.MessageEnumerator" /> holding the messages that are contained in the queue.</returns>
      <PermissionSet>
        <IPermission class="System.Messaging.MessageQueuePermission, System.Messaging, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:System.Messaging.MessageQueue.GetMessageEnumerator2">
      <summary>Creates an enumerator object for all the messages in the queue.</summary>
      <returns>The <see cref="T:System.Messaging.MessageEnumerator" /> holding the messages that are contained in the queue.</returns>
    </member>
    <member name="M:System.Messaging.MessageQueue.GetMessageQueueEnumerator">
      <summary>Provides forward-only cursor semantics to enumerate through all public queues on the network.</summary>
      <returns>A <see cref="T:System.Messaging.MessageQueueEnumerator" /> that provides a dynamic listing of all the public message queues on the network.</returns>
    </member>
    <member name="M:System.Messaging.MessageQueue.GetMessageQueueEnumerator(System.Messaging.MessageQueueCriteria)">
      <summary>Provides forward-only cursor semantics to enumerate through all public queues on the network that meet the specified criteria.</summary>
      <returns>A <see cref="T:System.Messaging.MessageQueueEnumerator" /> that provides a dynamic listing of the public message queues on the network that satisfy the restrictions specified by the <paramref name="criteria" /> parameter.</returns>
      <param name="criteria">A <see cref="T:System.Messaging.MessageQueueCriteria" /> that contains the criteria used to filter the available message queues. </param>
    </member>
    <member name="M:System.Messaging.MessageQueue.GetPrivateQueuesByMachine(System.String)">
      <summary>Retrieves all the private queues on the specified computer.</summary>
      <returns>An array of <see cref="T:System.Messaging.MessageQueue" /> objects that reference the retrieved private queues.</returns>
      <param name="machineName">The computer from which to retrieve the private queues. </param>
      <exception cref="T:System.ArgumentException">The <paramref name="machineName" /> parameter is null or an empty string (""). </exception>
      <exception cref="T:System.Messaging.MessageQueueException">An error occurred when accessing a Message Queuing method. </exception>
      <PermissionSet>
        <IPermission class="System.Messaging.MessageQueuePermission, System.Messaging, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" version="1">
          <Path value="*" access="Browse" />
        </IPermission>
      </PermissionSet>
    </member>
    <member name="M:System.Messaging.MessageQueue.GetPublicQueues">
      <summary>Retrieves all the public queues on the network.</summary>
      <returns>An array of <see cref="T:System.Messaging.MessageQueue" /> objects that reference the retrieved public queues.</returns>
      <exception cref="T:System.Messaging.MessageQueueException">An error occurred when accessing a Message Queuing method. </exception>
      <PermissionSet>
        <IPermission class="System.Messaging.MessageQueuePermission, System.Messaging, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" version="1">
          <Path value="*" access="Browse" />
        </IPermission>
      </PermissionSet>
    </member>
    <member name="M:System.Messaging.MessageQueue.GetPublicQueues(System.Messaging.MessageQueueCriteria)">
      <summary>Retrieves all the public queues on the network that meet the specified criteria.</summary>
      <returns>An array of <see cref="T:System.Messaging.MessageQueue" /> objects that reference the retrieved public queues.</returns>
      <param name="criteria">A <see cref="T:System.Messaging.MessageQueueCriteria" /> that contains the criteria used to filter the queues. </param>
      <exception cref="T:System.Messaging.MessageQueueException">An error occurred when accessing a Message Queuing method. </exception>
      <PermissionSet>
        <IPermission class="System.Messaging.MessageQueuePermission, System.Messaging, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" version="1">
          <Path value="*" access="Browse" />
        </IPermission>
      </PermissionSet>
    </member>
    <member name="M:System.Messaging.MessageQueue.GetPublicQueuesByCategory(System.Guid)">
      <summary>Retrieves all the public queues on the network that belong to the specified category.</summary>
      <returns>An array of <see cref="T:System.Messaging.MessageQueue" /> objects that reference the retrieved public queues.</returns>
      <param name="category">A <see cref="T:System.Guid" /> that groups the set of queues to be retrieved. </param>
      <exception cref="T:System.Messaging.MessageQueueException">An error occurred when accessing a Message Queuing method. </exception>
      <PermissionSet>
        <IPermission class="System.Messaging.MessageQueuePermission, System.Messaging, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" version="1">
          <Path value="*" access="Browse" />
        </IPermission>
      </PermissionSet>
    </member>
    <member name="M:System.Messaging.MessageQueue.GetPublicQueuesByLabel(System.String)">
      <summary>Retrieves all the public queues on the network that carry the specified label.</summary>
      <returns>An array of <see cref="T:System.Messaging.MessageQueue" /> objects that reference the retrieved public queues.</returns>
      <param name="label">A label that groups the set of queues to be retrieved. </param>
      <exception cref="T:System.Messaging.MessageQueueException">An error occurred when accessing a Message Queuing method. </exception>
      <exception cref="T:System.ArgumentNullException">The <paramref name="label" /> parameter is null. </exception>
      <PermissionSet>
        <IPermission class="System.Messaging.MessageQueuePermission, System.Messaging, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" version="1">
          <Path value="*" access="Browse" />
        </IPermission>
      </PermissionSet>
    </member>
    <member name="M:System.Messaging.MessageQueue.GetPublicQueuesByMachine(System.String)">
      <summary>Retrieves all the public queues that reside on the specified computer.</summary>
      <returns>An array of <see cref="T:System.Messaging.MessageQueue" /> objects that reference the public queues on the computer.</returns>
      <param name="machineName">The name of the computer that contains the set of public queues to be retrieved. </param>
      <exception cref="T:System.ArgumentException">The <paramref name="machineName" /> parameter has incorrect syntax. </exception>
      <exception cref="T:System.Messaging.MessageQueueException">An error occurred when accessing a Message Queuing method. </exception>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
        <IPermission class="System.Messaging.MessageQueuePermission, System.Messaging, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" version="1">
          <Path value="*" access="Browse" />
        </IPermission>
        <IPermission class="System.Diagnostics.PerformanceCounterPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:System.Messaging.MessageQueue.GetSecurityContext">
      <summary>Retrieves the security context that MSMQ associates with the current user (thread identity) at the time of this call.</summary>
      <returns>A <see cref="T:System.Messaging.SecurityContext" /> object that contains the security context.</returns>
    </member>
    <member name="P:System.Messaging.MessageQueue.Id">
      <summary>Gets the unique Message Queuing identifier of the queue.</summary>
      <returns>A <see cref="P:System.Messaging.MessageQueue.Id" /> that represents the message identifier generated by the Message Queuing application.</returns>
      <exception cref="T:System.Messaging.MessageQueueException">An error occurred when accessing a Message Queuing method. </exception>
      <PermissionSet>
        <IPermission class="System.Messaging.MessageQueuePermission, System.Messaging, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="F:System.Messaging.MessageQueue.InfiniteQueueSize">
      <summary>Specifies that no size restriction exists for a queue.</summary>
    </member>
    <member name="F:System.Messaging.MessageQueue.InfiniteTimeout">
      <summary>Specifies that no time-out exists for methods that peek or receive messages.</summary>
    </member>
    <member name="P:System.Messaging.MessageQueue.Label">
      <summary>Gets or sets the queue description.</summary>
      <returns>The label for the message queue. The default is an empty string ("").</returns>
      <exception cref="T:System.ArgumentException">The label was set to an invalid value. </exception>
      <exception cref="T:System.Messaging.MessageQueueException">An error occurred when accessing a Message Queuing method. </exception>
      <PermissionSet>
        <IPermission class="System.Messaging.MessageQueuePermission, System.Messaging, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="P:System.Messaging.MessageQueue.LastModifyTime">
      <summary>Gets the last time the properties of a queue were modified.</summary>
      <returns>A <see cref="T:System.DateTime" /> that indicates when the queue properties were last modified.</returns>
      <exception cref="T:System.Messaging.MessageQueueException">An error occurred when accessing a Message Queuing method. </exception>
      <PermissionSet>
        <IPermission class="System.Messaging.MessageQueuePermission, System.Messaging, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="P:System.Messaging.MessageQueue.MachineName">
      <summary>Gets or sets the name of the computer where the Message Queuing queue is located.</summary>
      <returns>The name of the computer where the queue is located. The Message Queuing default is ".", the local computer.</returns>
      <exception cref="T:System.ArgumentException">The <see cref="P:System.Messaging.MessageQueue.MachineName" /> is null. </exception>
      <exception cref="T:System.ArgumentException">The name of the computer is not valid, possibly because the syntax is incorrect. </exception>
      <exception cref="T:System.Messaging.MessageQueueException">An error occurred when accessing a Message Queuing method. </exception>
      <PermissionSet>
        <IPermission class="System.Messaging.MessageQueuePermission, System.Messaging, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="P:System.Messaging.MessageQueue.MaximumJournalSize">
      <summary>Gets or sets the maximum size of the journal queue.</summary>
      <returns>The maximum size, in kilobytes, of the journal queue. The Message Queuing default specifies that no limit exists.</returns>
      <exception cref="T:System.ArgumentException">The maximum journal queue size was set to an invalid value. </exception>
      <exception cref="T:System.Messaging.MessageQueueException">An error occurred when accessing a Message Queuing method. </exception>
      <PermissionSet>
        <IPermission class="System.Messaging.MessageQueuePermission, System.Messaging, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="P:System.Messaging.MessageQueue.MaximumQueueSize">
      <summary>Gets or sets the maximum size of the queue.</summary>
      <returns>The maximum size, in kilobytes, of the queue. The Message Queuing default specifies that no limit exists.</returns>
      <exception cref="T:System.ArgumentException">The maximum queue size contains a negative value. </exception>
      <exception cref="T:System.Messaging.MessageQueueException">An error occurred when accessing a Message Queuing method. </exception>
      <PermissionSet>
        <IPermission class="System.Messaging.MessageQueuePermission, System.Messaging, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="P:System.Messaging.MessageQueue.MessageReadPropertyFilter">
      <summary>Gets or sets the property filter for receiving or peeking messages.</summary>
      <returns>The <see cref="T:System.Messaging.MessagePropertyFilter" /> used by the queue to filter the set of properties it receives or peeks for each message.</returns>
      <exception cref="T:System.ArgumentException">The filter is null. </exception>
    </member>
    <member name="P:System.Messaging.MessageQueue.MulticastAddress">
      <summary>Introduced in MSMQ 3.0. Gets or sets the multicast address associated with the queue.</summary>
      <returns>A <see cref="T:System.String" /> that contains a valid multicast address (in the form shown below) or null, which indicates that the queue is not associated with a multicast address. Copy Code&lt;address&gt;:&lt;port&gt;
</returns>
      <exception cref="T:System.PlatformNotSupportedException">MSMQ 3.0 is not installed.</exception>
    </member>
    <member name="P:System.Messaging.MessageQueue.Path">
      <summary>Gets or sets the queue's path. Setting the <see cref="P:System.Messaging.MessageQueue.Path" /> causes the <see cref="T:System.Messaging.MessageQueue" /> to point to a new queue.</summary>
      <returns>The queue that is referenced by the <see cref="T:System.Messaging.MessageQueue" />. The default depends on which <see cref="M:System.Messaging.MessageQueue.#ctor" /> constructor you use; it is either null or is specified by the constructor's <paramref name="path" /> parameter.</returns>
      <exception cref="T:System.ArgumentException">The path is not valid, possibly because the syntax is not valid. </exception>
    </member>
    <member name="M:System.Messaging.MessageQueue.Peek">
      <summary>Returns without removing (peeks) the first message in the queue referenced by this <see cref="T:System.Messaging.MessageQueue" />. The <see cref="M:System.Messaging.MessageQueue.Peek" /> method is synchronous, so it blocks the current thread until a message becomes available.</summary>
      <returns>The <see cref="T:System.Messaging.Message" /> that represents the first message in the queue.</returns>
      <exception cref="T:System.Messaging.MessageQueueException">An error occurred when accessing a Message Queuing method. </exception>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
        <IPermission class="System.Messaging.MessageQueuePermission, System.Messaging, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" version="1" Unrestricted="true" />
        <IPermission class="System.Diagnostics.PerformanceCounterPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:System.Messaging.MessageQueue.Peek(System.TimeSpan)">
      <summary>Returns without removing (peeks) the first message in the queue referenced by this <see cref="T:System.Messaging.MessageQueue" />. The <see cref="M:System.Messaging.MessageQueue.Peek" /> method is synchronous, so it blocks the current thread until a message becomes available or the specified time-out occurs.</summary>
      <returns>The <see cref="T:System.Messaging.Message" /> that represents the first message in the queue.</returns>
      <param name="timeout">A <see cref="T:System.TimeSpan" /> that indicates the maximum time to wait for the queue to contain a message. </param>
      <exception cref="T:System.ArgumentException">The value specified for the <paramref name="timeout" /> parameter is not valid, possibly <paramref name="timeout" /> is less than <see cref="F:System.TimeSpan.Zero" /> or greater than <see cref="F:System.Messaging.MessageQueue.InfiniteTimeout" />. </exception>
      <exception cref="T:System.Messaging.MessageQueueException">An error occurred when accessing a Message Queuing method. </exception>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
        <IPermission class="System.Messaging.MessageQueuePermission, System.Messaging, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" version="1" Unrestricted="true" />
        <IPermission class="System.Diagnostics.PerformanceCounterPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:System.Messaging.MessageQueue.Peek(System.TimeSpan,System.Messaging.Cursor,System.Messaging.PeekAction)">
      <summary>Returns without removing (peeks) the current or next message in the queue, using the specified cursor. The <see cref="M:System.Messaging.MessageQueue.Peek" /> method is synchronous, so it blocks the current thread until a message becomes available or the specified time-out occurs.</summary>
      <returns>A <see cref="T:System.Messaging.Message" /> that represents a message in the queue.</returns>
      <param name="timeout">A <see cref="T:System.TimeSpan" /> that indicates the maximum time to wait for the queue to contain a message. </param>
      <param name="cursor">A <see cref="T:System.Messaging.Cursor" /> that maintains a specific position in the message queue.</param>
      <param name="action">One of the <see cref="T:System.Messaging.PeekAction" /> values. Indicates whether to peek at the current message in the queue, or the next message.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">A value other than PeekAction.Current or PeekAction.Next was specified for the <paramref name="action" /> parameter.</exception>
      <exception cref="T:System.ArgumentNullException">The <paramref name="cursor" /> parameter is null.</exception>
      <exception cref="T:System.ArgumentException">The value specified for the <paramref name="timeout" /> parameter is not valid. Possibly <paramref name="timeout" /> is less than <see cref="F:System.TimeSpan.Zero" /> or greater than <see cref="F:System.Messaging.MessageQueue.InfiniteTimeout" />. </exception>
      <exception cref="T:System.Messaging.MessageQueueException">An error occurred when accessing a Message Queuing method. </exception>
    </member>
    <member name="M:System.Messaging.MessageQueue.PeekByCorrelationId(System.String)">
      <summary>Peeks the message that matches the given correlation identifier and immediately raises an exception if no message with the specified correlation identifier currently exists in the queue.</summary>
      <returns>The <see cref="T:System.Messaging.Message" /> whose <see cref="P:System.Messaging.Message.CorrelationId" /> matches the <paramref name="correlationId" /> parameter passed in.</returns>
      <param name="correlationId">The <see cref="P:System.Messaging.Message.CorrelationId" /> of the message to peek. </param>
      <exception cref="T:System.ArgumentNullException">The <paramref name="correlationId" /> parameter is null. </exception>
      <exception cref="T:System.InvalidOperationException">The message with the specified <paramref name="correlationId" /> could not be found. </exception>
      <exception cref="T:System.Messaging.MessageQueueException">An error occurred when accessing a Message Queuing method. </exception>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
        <IPermission class="System.Messaging.MessageQueuePermission, System.Messaging, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" version="1" Unrestricted="true" />
        <IPermission class="System.Diagnostics.PerformanceCounterPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:System.Messaging.MessageQueue.PeekByCorrelationId(System.String,System.TimeSpan)">
      <summary>Peeks the message that matches the given correlation identifier and waits until either a message with the specified correlation identifier is available in the queue, or the time-out expires.</summary>
      <returns>The <see cref="T:System.Messaging.Message" /> whose <see cref="P:System.Messaging.Message.CorrelationId" /> matches the <paramref name="correlationId" /> parameter passed in.</returns>
      <param name="correlationId">The <see cref="P:System.Messaging.Message.CorrelationId" /> of the message to peek. </param>
      <param name="timeout">A <see cref="T:System.TimeSpan" /> that indicates the time to wait until a new message is available for inspection. </param>
      <exception cref="T:System.ArgumentNullException">The <paramref name="correlationId" /> parameter is null. </exception>
      <exception cref="T:System.ArgumentException">The value specified for the <paramref name="timeout" /> parameter is not valid, possibly <paramref name="timeout" /> is less than <see cref="F:System.TimeSpan.Zero" /> or greater than <see cref="F:System.Messaging.MessageQueue.InfiniteTimeout" />. </exception>
      <exception cref="T:System.InvalidOperationException">The message with the specified <paramref name="correlationId" /> does not exist in the queue and did not arrive before the time-out expired. </exception>
      <exception cref="T:System.Messaging.MessageQueueException">A message did not arrive before the time-out expired.-or- An error occurred when accessing a Message Queuing method. </exception>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
        <IPermission class="System.Messaging.MessageQueuePermission, System.Messaging, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" version="1" Unrestricted="true" />
        <IPermission class="System.Diagnostics.PerformanceCounterPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:System.Messaging.MessageQueue.PeekById(System.String)">
      <summary>Peeks the message whose message identifier matches the <paramref name="id" /> parameter.</summary>
      <returns>The <see cref="T:System.Messaging.Message" /> whose <see cref="P:System.Messaging.Message.Id" /> property matches the <paramref name="id" /> parameter.</returns>
      <param name="id">The <see cref="P:System.Messaging.Message.Id" /> of the message to peek. </param>
      <exception cref="T:System.ArgumentNullException">The <paramref name="id" /> parameter is null. </exception>
      <exception cref="T:System.InvalidOperationException">No message with the specified <paramref name="id" /> exists. </exception>
      <exception cref="T:System.Messaging.MessageQueueException">An error occurred when accessing a Message Queuing method. </exception>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
        <IPermission class="System.Messaging.MessageQueuePermission, System.Messaging, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" version="1" Unrestricted="true" />
        <IPermission class="System.Diagnostics.PerformanceCounterPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:System.Messaging.MessageQueue.PeekById(System.String,System.TimeSpan)">
      <summary>Peeks the message whose message identifier matches the <paramref name="id" /> parameter. Waits until the message appears in the queue or a time-out occurs.</summary>
      <returns>The <see cref="T:System.Messaging.Message" /> whose <see cref="P:System.Messaging.Message.Id" /> property matches the <paramref name="id" /> parameter.</returns>
      <param name="id">The <see cref="P:System.Messaging.Message.Id" /> of the message to peek. </param>
      <param name="timeout">A <see cref="T:System.TimeSpan" /> that indicates the time to wait until a new message is available for inspection. </param>
      <exception cref="T:System.ArgumentNullException">The <paramref name="id" /> parameter is null. </exception>
      <exception cref="T:System.ArgumentException">The value specified for the <paramref name="timeout" /> parameter is not valid, possibly <paramref name="timeout" /> is less than <see cref="F:System.TimeSpan.Zero" /> or greater than <see cref="F:System.Messaging.MessageQueue.InfiniteTimeout" />. </exception>
      <exception cref="T:System.InvalidOperationException">The message with the specified <paramref name="id" /> does not exist in the queue and did not arrive before the period specified by the <paramref name="timeout" /> parameter expired. </exception>
      <exception cref="T:System.Messaging.MessageQueueException">An error occurred when accessing a Message Queuing method. </exception>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
        <IPermission class="System.Messaging.MessageQueuePermission, System.Messaging, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" version="1" Unrestricted="true" />
        <IPermission class="System.Diagnostics.PerformanceCounterPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:System.Messaging.MessageQueue.PeekByLookupId(System.Int64)">
      <summary>Introduced in MSMQ 3.0. Peeks at the message that matches the given lookup identifier from a non-transactional queue.</summary>
      <returns>The <see cref="T:System.Messaging.Message" /> whose <see cref="P:System.Messaging.Message.LookupId" /> property matches the <paramref name="lookupId" /> parameter passed in.</returns>
      <param name="lookupId">The <see cref="P:System.Messaging.Message.LookupId" /> of the message to peek at. </param>
      <exception cref="T:System.PlatformNotSupportedException">MSMQ 3.0 is not installed.</exception>
      <exception cref="T:System.InvalidOperationException">The message with the specified <paramref name="lookupId" /> could not be found. </exception>
      <exception cref="T:System.Messaging.MessageQueueException">An error occurred when accessing a Message Queuing method. </exception>
    </member>
    <member name="M:System.Messaging.MessageQueue.PeekByLookupId(System.Messaging.MessageLookupAction,System.Int64)">
      <summary>Introduced in MSMQ 3.0. Peeks at a specific message from the queue. The message can be specified by a lookup identifier or by its position at the front or end of the queue.</summary>
      <returns>The <see cref="T:System.Messaging.Message" /> specified by the <paramref name="action" /> and <paramref name="lookupId" /> parameters passed in.</returns>
      <param name="action">One of the <see cref="T:System.Messaging.MessageLookupAction" /> values, specifying how the message is read in the queue. Specify one of the following:MessageLookupAction.Current: Peeks at the message specified by <paramref name="lookupId" />.MessageLookupAction.Next: Peeks at the message following the message specified by <paramref name="lookupId" />.MessageLookupAction.Previous: Peeks at the message preceding the message specified by <paramref name="lookupId" />.MessageLookupAction.First: Peeks at the first message in the queue. The <paramref name="lookupId" /> parameter must be set to 0.MessageLookupAction.Last: Peeks at the last message in the queue. The <paramref name="lookupId" /> parameter must be set to 0.</param>
      <param name="lookupId">The <see cref="P:System.Messaging.Message.LookupId" /> of the message to peek at, or 0. 0 is used when accessing the first or last message in the queue. </param>
      <exception cref="T:System.PlatformNotSupportedException">MSMQ 3.0 is not installed.</exception>
      <exception cref="T:System.InvalidOperationException">The message with the specified <paramref name="lookupId" /> could not be found. </exception>
      <exception cref="T:System.Messaging.MessageQueueException">An error occurred when accessing a Message Queuing method. </exception>
      <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">The <paramref name="action" /> parameter is not one of the <see cref="T:System.Messaging.MessageLookupAction" /> members.</exception>
    </member>
    <member name="E:System.Messaging.MessageQueue.PeekCompleted">
      <summary>Occurs when a message is read without being removed from the queue. This is a result of the asynchronous operation, <see cref="M:System.Messaging.MessageQueue.BeginPeek" />.</summary>
    </member>
    <member name="M:System.Messaging.MessageQueue.Purge">
      <summary>Deletes all the messages contained in the queue.</summary>
      <exception cref="T:System.Messaging.MessageQueueException">An error occurred when accessing a Message Queuing method. </exception>
      <PermissionSet>
        <IPermission class="System.Messaging.MessageQueuePermission, System.Messaging, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="P:System.Messaging.MessageQueue.QueueName">
      <summary>Gets or sets the friendly name that identifies the queue.</summary>
      <returns>The name that identifies the queue referenced by this <see cref="T:System.Messaging.MessageQueue" />. The value cannot be null.</returns>
      <exception cref="T:System.ArgumentException">The queue name is null. </exception>
      <PermissionSet>
        <IPermission class="System.Messaging.MessageQueuePermission, System.Messaging, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="P:System.Messaging.MessageQueue.ReadHandle">
      <summary>Gets the native handle used to read messages from the message queue.</summary>
      <returns>A handle to the native queue object that you use for peeking and receiving messages from the queue.</returns>
      <exception cref="T:System.Messaging.MessageQueueException">An error occurred when accessing a Message Queuing method. </exception>
      <PermissionSet>
        <IPermission class="System.Messaging.MessageQueuePermission, System.Messaging, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:System.Messaging.MessageQueue.Receive">
      <summary>Receives the first message available in the queue referenced by the <see cref="T:System.Messaging.MessageQueue" />. This call is synchronous, and blocks the current thread of execution until a message is available.</summary>
      <returns>A <see cref="T:System.Messaging.Message" /> that references the first message available in the queue.</returns>
      <exception cref="T:System.Messaging.MessageQueueException">An error occurred when accessing a Message Queuing method. </exception>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
        <IPermission class="System.Messaging.MessageQueuePermission, System.Messaging, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" version="1" Unrestricted="true" />
        <IPermission class="System.Diagnostics.PerformanceCounterPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:System.Messaging.MessageQueue.Receive(System.Messaging.MessageQueueTransaction)">
      <summary>Receives the first message available in the transactional queue referenced by the <see cref="T:System.Messaging.MessageQueue" />. This call is synchronous, and blocks the current thread of execution until a message is available.</summary>
      <returns>A <see cref="T:System.Messaging.Message" /> that references the first message available in the queue.</returns>
      <param name="transaction">The <see cref="T:System.Messaging.MessageQueueTransaction" /> object. </param>
      <exception cref="T:System.Messaging.MessageQueueException">An error occurred when accessing a Message Queuing method.-or- The queue is non-transactional. </exception>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
        <IPermission class="System.Messaging.MessageQueuePermission, System.Messaging, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" version="1" Unrestricted="true" />
        <IPermission class="System.Diagnostics.PerformanceCounterPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:System.Messaging.MessageQueue.Receive(System.Messaging.MessageQueueTransactionType)">
      <summary>Receives the first message available in the queue referenced by the <see cref="T:System.Messaging.MessageQueue" />. This call is synchronous, and blocks the current thread of execution until a message is available.</summary>
      <returns>A <see cref="T:System.Messaging.Message" /> that references the first message available in the queue.</returns>
      <param name="transactionType">One of the <see cref="T:System.Messaging.MessageQueueTransactionType" /> values, describing the type of transaction context to associate with the message. </param>
      <exception cref="T:System.Messaging.MessageQueueException">An error occurred when accessing a Message Queuing method. </exception>
      <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">The <paramref name="transactionType" /> parameter is not one of the <see cref="T:System.Messaging.MessageQueueTransactionType" /> members. </exception>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
        <IPermission class="System.Messaging.MessageQueuePermission, System.Messaging, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" version="1" Unrestricted="true" />
        <IPermission class="System.Diagnostics.PerformanceCounterPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:System.Messaging.MessageQueue.Receive(System.TimeSpan)">
      <summary>Receives the first message available in the queue referenced by the <see cref="T:System.Messaging.MessageQueue" /> and waits until either a message is available in the queue, or the time-out expires.</summary>
      <returns>A <see cref="T:System.Messaging.Message" /> that references the first message available in the queue.</returns>
      <param name="timeout">A <see cref="T:System.TimeSpan" /> that indicates the time to wait until a new message is available for inspection. </param>
      <exception cref="T:System.ArgumentException">The value specified for the <paramref name="timeout" /> parameter is not valid, possibly <paramref name="timeout" /> is less than <see cref="F:System.TimeSpan.Zero" /> or greater than <see cref="F:System.Messaging.MessageQueue.InfiniteTimeout" />. </exception>
      <exception cref="T:System.Messaging.MessageQueueException">A message did not arrive in the queue before the time-out expired.-or- An error occurred when accessing a Message Queuing method </exception>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
        <IPermission class="System.Messaging.MessageQueuePermission, System.Messaging, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" version="1" Unrestricted="true" />
        <IPermission class="System.Diagnostics.PerformanceCounterPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:System.Messaging.MessageQueue.Receive(System.TimeSpan,System.Messaging.Cursor)">
      <summary>Receives the current message in the queue, using a specified cursor. If no message is available, this method waits until either a message is available, or the time-out expires.</summary>
      <returns>A <see cref="T:System.Messaging.Message" /> that references the first message available in the queue.</returns>
      <param name="timeout">A <see cref="T:System.TimeSpan" /> that indicates the time to wait until a new message is available for inspection. </param>
      <param name="cursor">A <see cref="T:System.Messaging.Cursor" /> that maintains a specific position in the message queue.</param>
      <exception cref="T:System.ArgumentException">The value specified for the <paramref name="timeout" /> parameter is not valid, possibly <paramref name="timeout" /> is less than <see cref="F:System.TimeSpan.Zero" /> or greater than <see cref="F:System.Messaging.MessageQueue.InfiniteTimeout" />. </exception>
      <exception cref="T:System.Messaging.MessageQueueException">A message did not arrive in the queue before the time-out expired.-or- An error occurred when accessing a Message Queuing method </exception>
    </member>
    <member name="M:System.Messaging.MessageQueue.Receive(System.TimeSpan,System.Messaging.Cursor,System.Messaging.MessageQueueTransaction)">
      <summary>Receives the current message in the queue, using a specified cursor. If no message is available, this method waits until either a message is available, or the time-out expires.</summary>
      <returns>A <see cref="T:System.Messaging.Message" /> that references a message in the queue.</returns>
      <param name="timeout">A <see cref="T:System.TimeSpan" /> that indicates the time to wait until a new message is available for inspection. </param>
      <param name="cursor">A <see cref="T:System.Messaging.Cursor" /> that maintains a specific position in the message queue.</param>
      <param name="transaction">The <see cref="T:System.Messaging.MessageQueueTransaction" /> object. </param>
      <exception cref="T:System.ArgumentNullException">The <paramref name="cursor" /> parameter is null.-or-The <paramref name="transaction" /> parameter is null.</exception>
      <exception cref="T:System.ArgumentException">The value specified for the <paramref name="timeout" /> parameter is not valid. Possibly <paramref name="timeout" /> is less than <see cref="F:System.TimeSpan.Zero" /> or greater than <see cref="F:System.Messaging.MessageQueue.InfiniteTimeout" />. </exception>
      <exception cref="T:System.Messaging.MessageQueueException">A message did not arrive in the queue before the time-out expired.-or- The queue is non-transactional.-or- An error occurred when accessing a Message Queuing method. </exception>
    </member>
    <member name="M:System.Messaging.MessageQueue.Receive(System.TimeSpan,System.Messaging.Cursor,System.Messaging.MessageQueueTransactionType)">
      <summary>Receives the current message in the queue, using a specified cursor. If no message is available, this method waits until either a message is available, or the time-out expires.</summary>
      <returns>A <see cref="T:System.Messaging.Message" /> that references a message in the queue.</returns>
      <param name="timeout">A <see cref="T:System.TimeSpan" /> that indicates the time to wait until a new message is available for inspection. </param>
      <param name="cursor">A <see cref="T:System.Messaging.Cursor" /> that maintains a specific position in the message queue.</param>
      <param name="transactionType">One of the <see cref="T:System.Messaging.MessageQueueTransactionType" /> values that describes the type of transaction context to associate with the message. </param>
      <exception cref="T:System.ArgumentNullException">The <paramref name="cursor" /> parameter is null.</exception>
      <exception cref="T:System.ArgumentException">The value specified for the <paramref name="timeout" /> parameter is not valid. Possibly <paramref name="timeout" /> is less than <see cref="F:System.TimeSpan.Zero" /> or greater than <see cref="F:System.Messaging.MessageQueue.InfiniteTimeout" />. </exception>
      <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">The <paramref name="transactionType" /> parameter is not one of the <see cref="T:System.Messaging.MessageQueueTransactionType" /> members. </exception>
      <exception cref="T:System.Messaging.MessageQueueException">A message did not arrive in the queue before the time-out expired.-or- An error occurred when accessing a Message Queuing method. </exception>
    </member>
    <member name="M:System.Messaging.MessageQueue.Receive(System.TimeSpan,System.Messaging.MessageQueueTransaction)">
      <summary>Receives the first message available in the transactional queue referenced by the <see cref="T:System.Messaging.MessageQueue" /> and waits until either a message is available in the queue, or the time-out expires.</summary>
      <returns>A <see cref="T:System.Messaging.Message" /> that references the first message available in the queue.</returns>
      <param name="timeout">A <see cref="T:System.TimeSpan" /> that indicates the time to wait until a new message is available for inspection. </param>
      <param name="transaction">The <see cref="T:System.Messaging.MessageQueueTransaction" /> object. </param>
      <exception cref="T:System.ArgumentException">The value specified for the <paramref name="timeout" /> parameter is not valid, possibly <paramref name="timeout" /> is less than <see cref="F:System.TimeSpan.Zero" /> or greater than <see cref="F:System.Messaging.MessageQueue.InfiniteTimeout" />. </exception>
      <exception cref="T:System.Messaging.MessageQueueException">A message did not arrive in the queue before the time-out expired.-or- The queue is non-transactional.-or- An error occurred when accessing a Message Queuing method. </exception>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
        <IPermission class="System.Messaging.MessageQueuePermission, System.Messaging, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" version="1" Unrestricted="true" />
        <IPermission class="System.Diagnostics.PerformanceCounterPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:System.Messaging.MessageQueue.Receive(System.TimeSpan,System.Messaging.MessageQueueTransactionType)">
      <summary>Receives the first message available in the queue referenced by the <see cref="T:System.Messaging.MessageQueue" />. This call is synchronous, and waits until either a message is available in the queue, or the time-out expires.</summary>
      <returns>A <see cref="T:System.Messaging.Message" /> that references the first message available in the queue.</returns>
      <param name="timeout">A <see cref="T:System.TimeSpan" /> that indicates the time to wait until a new message is available for inspection. </param>
      <param name="transactionType">One of the <see cref="T:System.Messaging.MessageQueueTransactionType" /> values, describing the type of transaction context to associate with the message. </param>
      <exception cref="T:System.ArgumentException">The value specified for the <paramref name="timeout" /> parameter is not valid, possibly <paramref name="timeout" /> is less than <see cref="F:System.TimeSpan.Zero" /> or greater than <see cref="F:System.Messaging.MessageQueue.InfiniteTimeout" />. </exception>
      <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">The <paramref name="transactionType" /> parameter is not one of the <see cref="T:System.Messaging.MessageQueueTransactionType" /> members. </exception>
      <exception cref="T:System.Messaging.MessageQueueException">A message did not arrive in the queue before the time-out expired.-or- An error occurred when accessing a Message Queuing method. </exception>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
        <IPermission class="System.Messaging.MessageQueuePermission, System.Messaging, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" version="1" Unrestricted="true" />
        <IPermission class="System.Diagnostics.PerformanceCounterPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:System.Messaging.MessageQueue.ReceiveByCorrelationId(System.String)">
      <summary>Receives the message that matches the given correlation identifier (from a non-transactional queue) and immediately raises an exception if no message with the specified correlation identifier currently exists in the queue.</summary>
      <returns>The <see cref="T:System.Messaging.Message" /> whose <see cref="P:System.Messaging.Message.CorrelationId" /> matches the <paramref name="correlationId" /> parameter passed in.</returns>
      <param name="correlationId">The <see cref="P:System.Messaging.Message.CorrelationId" /> of the message to receive. </param>
      <exception cref="T:System.ArgumentNullException">The <paramref name="correlationId" /> parameter is null. </exception>
      <exception cref="T:System.InvalidOperationException">The message with the specified <paramref name="correlationId" /> could not be found. </exception>
      <exception cref="T:System.Messaging.MessageQueueException">An error occurred when accessing a Message Queuing method. </exception>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
        <IPermission class="System.Messaging.MessageQueuePermission, System.Messaging, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" version="1" Unrestricted="true" />
        <IPermission class="System.Diagnostics.PerformanceCounterPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:System.Messaging.MessageQueue.ReceiveByCorrelationId(System.String,System.Messaging.MessageQueueTransaction)">
      <summary>Receives the message that matches the given correlation identifier (from a transactional queue) and immediately raises an exception if no message with the specified correlation identifier currently exists in the queue.</summary>
      <returns>The <see cref="T:System.Messaging.Message" /> whose <see cref="P:System.Messaging.Message.CorrelationId" /> matches the <paramref name="correlationId" /> parameter passed in.</returns>
      <param name="correlationId">The <see cref="P:System.Messaging.Message.CorrelationId" /> of the message to receive. </param>
      <param name="transaction">The <see cref="T:System.Messaging.MessageQueueTransaction" /> object. </param>
      <exception cref="T:System.ArgumentNullException">The <paramref name="correlationId" /> parameter is null.-or- The <paramref name="transaction" /> parameter is null. </exception>
      <exception cref="T:System.InvalidOperationException">The message with the specified <paramref name="correlationId" /> could not be found. </exception>
      <exception cref="T:System.Messaging.MessageQueueException">The queue is non-transactional.-or- An error occurred when accessing a Message Queuing method. </exception>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
        <IPermission class="System.Messaging.MessageQueuePermission, System.Messaging, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" version="1" Unrestricted="true" />
        <IPermission class="System.Diagnostics.PerformanceCounterPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:System.Messaging.MessageQueue.ReceiveByCorrelationId(System.String,System.Messaging.MessageQueueTransactionType)">
      <summary>Receives the message that matches the given correlation identifier and immediately raises an exception if no message with the specified correlation identifier currently exists in the queue.</summary>
      <returns>The <see cref="T:System.Messaging.Message" /> whose <see cref="P:System.Messaging.Message.CorrelationId" /> matches the <paramref name="correlationId" /> parameter passed in.</returns>
      <param name="correlationId">The <see cref="P:System.Messaging.Message.CorrelationId" /> of the message to receive. </param>
      <param name="transactionType">One of the <see cref="T:System.Messaging.MessageQueueTransactionType" /> values, describing the type of transaction context to associate with the message. </param>
      <exception cref="T:System.ArgumentNullException">The <paramref name="correlationId" /> parameter is null. </exception>
      <exception cref="T:System.InvalidOperationException">The message with the specified <paramref name="correlationId" /> could not be found. </exception>
      <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">The <paramref name="transactionType" /> parameter is not one of the <see cref="T:System.Messaging.MessageQueueTransactionType" /> members. </exception>
      <exception cref="T:System.Messaging.MessageQueueException">An error occurred when accessing a Message Queuing method. </exception>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
        <IPermission class="System.Messaging.MessageQueuePermission, System.Messaging, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" version="1" Unrestricted="true" />
        <IPermission class="System.Diagnostics.PerformanceCounterPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:System.Messaging.MessageQueue.ReceiveByCorrelationId(System.String,System.TimeSpan)">
      <summary>Receives the message that matches the given correlation identifier (from a non-transactional queue) and waits until either a message with the specified correlation identifier is available in the queue, or the time-out expires.</summary>
      <returns>The <see cref="T:System.Messaging.Message" /> whose <see cref="P:System.Messaging.Message.CorrelationId" /> matches the <paramref name="correlationId" /> parameter passed in.</returns>
      <param name="correlationId">The <see cref="P:System.Messaging.Message.CorrelationId" /> of the message to receive. </param>
      <param name="timeout">A <see cref="T:System.TimeSpan" /> that indicates the time to wait until a new message is available for inspection. </param>
      <exception cref="T:System.ArgumentNullException">The <paramref name="correlationId" /> parameter is null. </exception>
      <exception cref="T:System.ArgumentException">The value specified for the <paramref name="timeout" /> parameter is not valid, possibly <paramref name="timeout" /> is less than <see cref="F:System.TimeSpan.Zero" /> or greater than <see cref="F:System.Messaging.MessageQueue.InfiniteTimeout" />. </exception>
      <exception cref="T:System.Messaging.MessageQueueException">The message with the specified <paramref name="correlationId" /> does not exist in the queue and did not arrive before the time-out expired.-or- An error occurred when accessing a Message Queuing method. </exception>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
        <IPermission class="System.Messaging.MessageQueuePermission, System.Messaging, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" version="1" Unrestricted="true" />
        <IPermission class="System.Diagnostics.PerformanceCounterPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:System.Messaging.MessageQueue.ReceiveByCorrelationId(System.String,System.TimeSpan,System.Messaging.MessageQueueTransaction)">
      <summary>Receives the message that matches the given correlation identifier (from a transactional queue) and waits until either a message with the specified correlation identifier is available in the queue, or the time-out expires.</summary>
      <returns>The <see cref="T:System.Messaging.Message" /> whose <see cref="P:System.Messaging.Message.CorrelationId" /> matches the <paramref name="correlationId" /> parameter passed in.</returns>
      <param name="correlationId">The <see cref="P:System.Messaging.Message.CorrelationId" /> of the message to receive. </param>
      <param name="timeout">A <see cref="T:System.TimeSpan" /> that indicates the time to wait until a new message is available for inspection. </param>
      <param name="transaction">The <see cref="T:System.Messaging.MessageQueueTransaction" /> object. </param>
      <exception cref="T:System.ArgumentNullException">The <paramref name="correlationId" /> parameter is null.-or- The <paramref name="transaction" /> parameter is null. </exception>
      <exception cref="T:System.ArgumentException">The value specified for the <paramref name="timeout" /> parameter is not valid, possibly <paramref name="timeout" /> is less than <see cref="F:System.TimeSpan.Zero" /> or greater than <see cref="F:System.Messaging.MessageQueue.InfiniteTimeout" />. </exception>
      <exception cref="T:System.Messaging.MessageQueueException">The message with the specified <paramref name="correlationId" /> does not exist in the queue and did not arrive before the time-out expired.-or- The queue is non-transactional.-or- An error occurred when accessing a Message Queuing method. </exception>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
        <IPermission class="System.Messaging.MessageQueuePermission, System.Messaging, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" version="1" Unrestricted="true" />
        <IPermission class="System.Diagnostics.PerformanceCounterPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:System.Messaging.MessageQueue.ReceiveByCorrelationId(System.String,System.TimeSpan,System.Messaging.MessageQueueTransactionType)">
      <summary>Receives the message that matches the given correlation identifier and waits until either a message with the specified correlation identifier is available in the queue, or the time-out expires.</summary>
      <returns>The <see cref="T:System.Messaging.Message" /> whose <see cref="P:System.Messaging.Message.CorrelationId" /> matches the <paramref name="correlationId" /> parameter passed in.</returns>
      <param name="correlationId">The <see cref="P:System.Messaging.Message.CorrelationId" /> of the message to receive. </param>
      <param name="timeout">A <see cref="T:System.TimeSpan" /> that indicates the time to wait until a new message is available for inspection. </param>
      <param name="transactionType">One of the <see cref="T:System.Messaging.MessageQueueTransactionType" /> values, describing the type of transaction context to associate with the message. </param>
      <exception cref="T:System.ArgumentNullException">The <paramref name="correlationId" /> parameter is null. </exception>
      <exception cref="T:System.InvalidOperationException">The message with the specified <paramref name="correlationId" /> could not be found. </exception>
      <exception cref="T:System.ArgumentException">The value specified for the <paramref name="timeout" /> parameter is not valid, possibly <paramref name="timeout" /> is less than <see cref="F:System.TimeSpan.Zero" /> or greater than <see cref="F:System.Messaging.MessageQueue.InfiniteTimeout" />. </exception>
      <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">The <paramref name="transactionType" /> parameter is not one of the <see cref="T:System.Messaging.MessageQueueTransactionType" /> members. </exception>
      <exception cref="T:System.Messaging.MessageQueueException">The message with the specified <paramref name="correlationId" /> does not exist in the queue and did not arrive before the time-out expired.-or- An error occurred when accessing a Message Queuing method. </exception>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
        <IPermission class="System.Messaging.MessageQueuePermission, System.Messaging, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" version="1" Unrestricted="true" />
        <IPermission class="System.Diagnostics.PerformanceCounterPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:System.Messaging.MessageQueue.ReceiveById(System.String)">
      <summary>Receives the message that matches the given identifier from a non-transactional queue and immediately raises an exception if no message with the specified identifier currently exists in the queue.</summary>
      <returns>The <see cref="T:System.Messaging.Message" /> whose <see cref="P:System.Messaging.Message.Id" /> property matches the <paramref name="id" /> parameter passed in.</returns>
      <param name="id">The <see cref="P:System.Messaging.Message.Id" /> of the message to receive. </param>
      <exception cref="T:System.ArgumentNullException">The <paramref name="id" /> parameter is null. </exception>
      <exception cref="T:System.InvalidOperationException">The message with the specified <paramref name="id" /> could not be found. </exception>
      <exception cref="T:System.Messaging.MessageQueueException">An error occurred when accessing a Message Queuing method. </exception>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
        <IPermission class="System.Messaging.MessageQueuePermission, System.Messaging, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" version="1" Unrestricted="true" />
        <IPermission class="System.Diagnostics.PerformanceCounterPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:System.Messaging.MessageQueue.ReceiveById(System.String,System.Messaging.MessageQueueTransaction)">
      <summary>Receives the message that matches the given identifier (from a transactional queue) and immediately raises an exception if no message with the specified identifier currently exists in the queue.</summary>
      <returns>The <see cref="T:System.Messaging.Message" /> whose <see cref="P:System.Messaging.Message.Id" /> property matches the <paramref name="id" /> parameter passed in.</returns>
      <param name="id">The <see cref="P:System.Messaging.Message.Id" /> of the message to receive. </param>
      <param name="transaction">The <see cref="T:System.Messaging.MessageQueueTransaction" /> object. </param>
      <exception cref="T:System.ArgumentNullException">The <paramref name="id" /> parameter is null.-or- The <paramref name="transaction" /> parameter is null. </exception>
      <exception cref="T:System.InvalidOperationException">The message with the specified <paramref name="id" /> could not be found. </exception>
      <exception cref="T:System.Messaging.MessageQueueException">The queue is non-transactional.-or- An error occurred when accessing a Message Queuing method. </exception>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
        <IPermission class="System.Messaging.MessageQueuePermission, System.Messaging, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" version="1" Unrestricted="true" />
        <IPermission class="System.Diagnostics.PerformanceCounterPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:System.Messaging.MessageQueue.ReceiveById(System.String,System.Messaging.MessageQueueTransactionType)">
      <summary>Receives the message that matches the given identifier and immediately raises an exception if no message with the specified identifier currently exists in the queue.</summary>
      <returns>The <see cref="T:System.Messaging.Message" /> whose <see cref="P:System.Messaging.Message.Id" /> property matches the <paramref name="id" /> parameter passed in.</returns>
      <param name="id">The <see cref="P:System.Messaging.Message.Id" /> of the message to receive. </param>
      <param name="transactionType">One of the <see cref="T:System.Messaging.MessageQueueTransactionType" /> values, describing the type of transaction context to associate with the message. </param>
      <exception cref="T:System.ArgumentNullException">The <paramref name="id" /> parameter is null. </exception>
      <exception cref="T:System.InvalidOperationException">The message with the specified <paramref name="id" /> could not be found. </exception>
      <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">The <paramref name="transactionType" /> parameter is not one of the <see cref="T:System.Messaging.MessageQueueTransactionType" /> members. </exception>
      <exception cref="T:System.Messaging.MessageQueueException">An error occurred when accessing a Message Queuing method. </exception>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
        <IPermission class="System.Messaging.MessageQueuePermission, System.Messaging, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" version="1" Unrestricted="true" />
        <IPermission class="System.Diagnostics.PerformanceCounterPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:System.Messaging.MessageQueue.ReceiveById(System.String,System.TimeSpan)">
      <summary>Receives the message that matches the given identifier (from a non-transactional queue) and waits until either a message with the specified identifier is available in the queue or the time-out expires.</summary>
      <returns>The <see cref="T:System.Messaging.Message" /> whose <see cref="P:System.Messaging.Message.Id" /> property matches the <paramref name="id" /> parameter passed in.</returns>
      <param name="id">The <see cref="P:System.Messaging.Message.Id" /> of the message to receive. </param>
      <param name="timeout">A <see cref="T:System.TimeSpan" /> that indicates the time to wait until a new message is available for inspection. </param>
      <exception cref="T:System.ArgumentNullException">The <paramref name="id" /> parameter is null. </exception>
      <exception cref="T:System.ArgumentException">The value specified for the <paramref name="timeout" /> parameter is not valid, possibly <paramref name="timeout" /> is less than <see cref="F:System.TimeSpan.Zero" /> or greater than <see cref="F:System.Messaging.MessageQueue.InfiniteTimeout" />. </exception>
      <exception cref="T:System.Messaging.MessageQueueException">A message with the specified <paramref name="id" /> did not arrive in the queue before the time-out expired.-or- An error occurred when accessing a Message Queuing method. </exception>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
        <IPermission class="System.Messaging.MessageQueuePermission, System.Messaging, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" version="1" Unrestricted="true" />
        <IPermission class="System.Diagnostics.PerformanceCounterPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:System.Messaging.MessageQueue.ReceiveById(System.String,System.TimeSpan,System.Messaging.MessageQueueTransaction)">
      <summary>Receives the message that matches the given identifier (from a transactional queue) and waits until either a message with the specified identifier is available in the queue or the time-out expires.</summary>
      <returns>The <see cref="T:System.Messaging.Message" /> whose <see cref="P:System.Messaging.Message.Id" /> property matches the <paramref name="id" /> parameter passed in.</returns>
      <param name="id">The <see cref="P:System.Messaging.Message.Id" /> of the message to receive. </param>
      <param name="timeout">A <see cref="T:System.TimeSpan" /> that indicates the time to wait until a new message is available for inspection. </param>
      <param name="transaction">The <see cref="T:System.Messaging.MessageQueueTransaction" /> object. </param>
      <exception cref="T:System.ArgumentNullException">The <paramref name="id" /> parameter is null.-or- The <paramref name="transaction" /> parameter is null. </exception>
      <exception cref="T:System.ArgumentException">The value specified for the <paramref name="timeout" /> parameter is not valid, possibly <paramref name="timeout" /> is less than <see cref="F:System.TimeSpan.Zero" /> or greater than <see cref="F:System.Messaging.MessageQueue.InfiniteTimeout" />. </exception>
      <exception cref="T:System.Messaging.MessageQueueException">A message with the specified <paramref name="id" /> did not arrive in the queue before the time-out expired.-or- The queue is non-transactional.-or- An error occurred when accessing a Message Queuing method. </exception>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
        <IPermission class="System.Messaging.MessageQueuePermission, System.Messaging, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" version="1" Unrestricted="true" />
        <IPermission class="System.Diagnostics.PerformanceCounterPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:System.Messaging.MessageQueue.ReceiveById(System.String,System.TimeSpan,System.Messaging.MessageQueueTransactionType)">
      <summary>Receives the message that matches the given identifier and waits until either a message with the specified identifier is available in the queue or the time-out expires.</summary>
      <returns>The <see cref="T:System.Messaging.Message" /> whose <see cref="P:System.Messaging.Message.Id" /> property matches the <paramref name="id" /> parameter passed in.</returns>
      <param name="id">The <see cref="P:System.Messaging.Message.Id" /> of the message to receive. </param>
      <param name="timeout">A <see cref="T:System.TimeSpan" /> that indicates the time to wait until a new message is available for inspection. </param>
      <param name="transactionType">One of the <see cref="T:System.Messaging.MessageQueueTransactionType" /> values, describing the type of transaction context to associate with the message. </param>
      <exception cref="T:System.ArgumentNullException">The <paramref name="id" /> parameter is null. </exception>
      <exception cref="T:System.ArgumentException">The value specified for the <paramref name="timeout" /> parameter is not valid, possibly <paramref name="timeout" /> is less than <see cref="F:System.TimeSpan.Zero" /> or greater than <see cref="F:System.Messaging.MessageQueue.InfiniteTimeout" />. </exception>
      <exception cref="T:System.Messaging.MessageQueueException">A message with the specified <paramref name="id" /> did not arrive in the queue before the time-out expired.-or- An error occurred when accessing a Message Queuing method. </exception>
      <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">The <paramref name="transactionType" /> parameter is not one of the <see cref="T:System.Messaging.MessageQueueTransactionType" /> members. </exception>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
        <IPermission class="System.Messaging.MessageQueuePermission, System.Messaging, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" version="1" Unrestricted="true" />
        <IPermission class="System.Diagnostics.PerformanceCounterPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:System.Messaging.MessageQueue.ReceiveByLookupId(System.Int64)">
      <summary>Introduced in MSMQ 3.0. Receives the message that matches the given lookup identifier from a non-transactional queue.</summary>
      <returns>The <see cref="T:System.Messaging.Message" /> whose <see cref="P:System.Messaging.Message.LookupId" /> property matches the <paramref name="lookupId" /> parameter passed in.</returns>
      <param name="lookupId">The <see cref="P:System.Messaging.Message.LookupId" /> of the message to receive. </param>
      <exception cref="T:System.PlatformNotSupportedException">MSMQ 3.0 is not installed.</exception>
      <exception cref="T:System.InvalidOperationException">The message with the specified <paramref name="lookupId" /> could not be found. </exception>
      <exception cref="T:System.Messaging.MessageQueueException">An error occurred when accessing a Message Queuing method. </exception>
    </member>
    <member name="M:System.Messaging.MessageQueue.ReceiveByLookupId(System.Messaging.MessageLookupAction,System.Int64,System.Messaging.MessageQueueTransaction)">
      <summary>Introduced in MSMQ 3.0. Receives a specific message from a transactional queue. The message can be specified by a lookup identifier or by its position at the front or end of the queue.</summary>
      <returns>The <see cref="T:System.Messaging.Message" /> specified by the <paramref name="lookupId" /> and <paramref name="action" /> parameters passed in.</returns>
      <param name="action">One of the <see cref="T:System.Messaging.MessageLookupAction" /> values, specifying how the message is read in the queue. Specify one of the following:MessageLookupAction.Current: Receives the message specified by <paramref name="lookupId" /> and removes it from the queue.MessageLookupAction.Next: Receives the message following the message specified by <paramref name="lookupId" /> and removes it from the queue.MessageLookupAction.Previous: Receives the message preceding the message specified by <paramref name="lookupId" /> and removes it from the queue.MessageLookupAction.First: Receives the first message in the queue and removes it from the queue. The <paramref name="lookupId" /> parameter must be set to 0.MessageLookupAction.Last: Receives the last message in the queue and removes it from the queue. The <paramref name="lookupId" /> parameter must be set to 0.</param>
      <param name="lookupId">The <see cref="P:System.Messaging.Message.LookupId" /> of the message to receive, or 0. 0 is used when accessing the first or last message in the queue. </param>
      <param name="transaction">The <see cref="T:System.Messaging.MessageQueueTransaction" /> object.</param>
      <exception cref="T:System.PlatformNotSupportedException">MSMQ 3.0 is not installed.</exception>
      <exception cref="T:System.InvalidOperationException">The message with the specified <paramref name="lookupId" /> could not be found. </exception>
      <exception cref="T:System.Messaging.MessageQueueException">An error occurred when accessing a Message Queuing method.-or- The queue is non-transactional.</exception>
      <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">The <paramref name="action" /> parameter is not one of the <see cref="T:System.Messaging.MessageLookupAction" /> members.</exception>
    </member>
    <member name="M:System.Messaging.MessageQueue.ReceiveByLookupId(System.Messaging.MessageLookupAction,System.Int64,System.Messaging.MessageQueueTransactionType)">
      <summary>Introduced in MSMQ 3.0. Receives a specific message from the queue, using the specified transaction context. The message can be specified by a lookup identifier or by its position at the front or end of the queue.</summary>
      <returns>The <see cref="T:System.Messaging.Message" /> specified by the <paramref name="action" /> and <paramref name="lookupId" /> parameters passed in.</returns>
      <param name="action">One of the <see cref="T:System.Messaging.MessageLookupAction" /> values, specifying how the message is read in the queue. Specify one of the following:MessageLookupAction.Current: Receives the message specified by <paramref name="lookupId" /> and removes it from the queue.MessageLookupAction.Next: Receives the message following the message specified by <paramref name="lookupId" /> and removes it from the queue.MessageLookupAction.Previous: Receives the message preceding the message specified by <paramref name="lookupId" /> and removes it from the queue.MessageLookupAction.First: Receives the first message in the queue and removes it from the queue. The <paramref name="lookupId" /> parameter must be set to 0.MessageLookupAction.Last: Receives the last message in the queue and removes it from the queue. The <paramref name="lookupId" /> parameter must be set to 0.</param>
      <param name="lookupId">The <see cref="P:System.Messaging.Message.LookupId" /> of the message to receive, or 0. 0 is used when accessing the first or last message in the queue. </param>
      <param name="transactionType">One of the <see cref="T:System.Messaging.MessageQueueTransactionType" /> values, describing the type of transaction context to associate with the message.</param>
      <exception cref="T:System.PlatformNotSupportedException">MSMQ 3.0 is not installed.</exception>
      <exception cref="T:System.InvalidOperationException">The message with the specified <paramref name="lookupId" /> could not be found. </exception>
      <exception cref="T:System.Messaging.MessageQueueException">An error occurred when accessing a Message Queuing method. </exception>
      <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">The <paramref name="action" /> parameter is not one of the <see cref="T:System.Messaging.MessageLookupAction" /> members.-or- The <paramref name="transactionType" /> parameter is not one of the <see cref="T:System.Messaging.MessageQueueTransactionType" /> members.</exception>
    </member>
    <member name="E:System.Messaging.MessageQueue.ReceiveCompleted">
      <summary>Occurs when a message has been removed from the queue. This event is raised by the asynchronous operation, <see cref="M:System.Messaging.MessageQueue.BeginReceive" />.</summary>
    </member>
    <member name="M:System.Messaging.MessageQueue.Refresh">
      <summary>Refreshes the properties presented by the <see cref="T:System.Messaging.MessageQueue" /> to reflect the current state of the resource.</summary>
    </member>
    <member name="M:System.Messaging.MessageQueue.ResetPermissions">
      <summary>Resets the permission list to the operating system's default values. Removes any queue permissions you have appended to the default list.</summary>
      <exception cref="T:System.Messaging.MessageQueueException">An error occurred when accessing a Message Queuing method. </exception>
      <PermissionSet>
        <IPermission class="System.Messaging.MessageQueuePermission, System.Messaging, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:System.Messaging.MessageQueue.Send(System.Object)">
      <summary>Sends an object to non-transactional queue referenced by this <see cref="T:System.Messaging.MessageQueue" />.</summary>
      <param name="obj">The object to send to the queue. </param>
      <exception cref="T:System.Messaging.MessageQueueException">The <see cref="P:System.Messaging.MessageQueue.Path" /> property has not been set.-or- An error occurred when accessing a Message Queuing method. </exception>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
        <IPermission class="System.Messaging.MessageQueuePermission, System.Messaging, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" version="1" Unrestricted="true" />
        <IPermission class="System.Diagnostics.PerformanceCounterPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:System.Messaging.MessageQueue.Send(System.Object,System.Messaging.MessageQueueTransaction)">
      <summary>Sends an object to the transactional queue referenced by this <see cref="T:System.Messaging.MessageQueue" />.</summary>
      <param name="obj">The object to send to the queue. </param>
      <param name="transaction">The <see cref="T:System.Messaging.MessageQueueTransaction" /> object. </param>
      <exception cref="T:System.ArgumentNullException">The <paramref name="transaction" /> parameter is null. </exception>
      <exception cref="T:System.Messaging.MessageQueueException">The <see cref="P:System.Messaging.MessageQueue.Path" /> property has not been set.-or- The Message Queuing application indicated an incorrect transaction use.-or- An error occurred when accessing a Message Queuing method. </exception>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
        <IPermission class="System.Messaging.MessageQueuePermission, System.Messaging, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" version="1" Unrestricted="true" />
        <IPermission class="System.Diagnostics.PerformanceCounterPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:System.Messaging.MessageQueue.Send(System.Object,System.Messaging.MessageQueueTransactionType)">
      <summary>Sends an object to the queue referenced by this <see cref="T:System.Messaging.MessageQueue" />.</summary>
      <param name="obj">The object to send to the queue. </param>
      <param name="transactionType">One of the <see cref="T:System.Messaging.MessageQueueTransactionType" /> values, describing the type of transaction context to associate with the message. </param>
      <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">The <paramref name="transactionType" /> parameter is not one of the <see cref="T:System.Messaging.MessageQueueTransactionType" /> members. </exception>
      <exception cref="T:System.Messaging.MessageQueueException">The <see cref="P:System.Messaging.MessageQueue.Path" /> property has not been set.-or- An error occurred when accessing a Message Queuing method. </exception>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
        <IPermission class="System.Messaging.MessageQueuePermission, System.Messaging, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" version="1" Unrestricted="true" />
        <IPermission class="System.Diagnostics.PerformanceCounterPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:System.Messaging.MessageQueue.Send(System.Object,System.String)">
      <summary>Sends an object to the non-transactional queue referenced by this <see cref="T:System.Messaging.MessageQueue" /> and specifies a label for the message.</summary>
      <param name="obj">The object to send to the queue. </param>
      <param name="label">The label of the message. </param>
      <exception cref="T:System.ArgumentNullException">The <paramref name="label" /> parameter is null. </exception>
      <exception cref="T:System.Messaging.MessageQueueException">The <see cref="P:System.Messaging.MessageQueue.Path" /> property has not been set.-or- An error occurred when accessing a Message Queuing method. </exception>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
        <IPermission class="System.Messaging.MessageQueuePermission, System.Messaging, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" version="1" Unrestricted="true" />
        <IPermission class="System.Diagnostics.PerformanceCounterPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:System.Messaging.MessageQueue.Send(System.Object,System.String,System.Messaging.MessageQueueTransaction)">
      <summary>Sends an object to the transactional queue referenced by this <see cref="T:System.Messaging.MessageQueue" /> and specifies a label for the message.</summary>
      <param name="obj">The object to send to the queue. </param>
      <param name="label">The label of the message. </param>
      <param name="transaction">The <see cref="T:System.Messaging.MessageQueueTransaction" /> object. </param>
      <exception cref="T:System.ArgumentNullException">The <paramref name="label" /> parameter is null.-or- The <paramref name="transaction" /> parameter is null. </exception>
      <exception cref="T:System.Messaging.MessageQueueException">The <see cref="P:System.Messaging.MessageQueue.Path" /> property has not been set.-or- The Message Queuing application indicated an incorrect transaction usage.-or- An error occurred when accessing a Message Queuing method. </exception>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
        <IPermission class="System.Messaging.MessageQueuePermission, System.Messaging, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" version="1" Unrestricted="true" />
        <IPermission class="System.Diagnostics.PerformanceCounterPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:System.Messaging.MessageQueue.Send(System.Object,System.String,System.Messaging.MessageQueueTransactionType)">
      <summary>Sends an object to the queue referenced by this <see cref="T:System.Messaging.MessageQueue" /> and specifies a label for the message.</summary>
      <param name="obj">The object to send to the queue. </param>
      <param name="label">The label of the message. </param>
      <param name="transactionType">One of the <see cref="T:System.Messaging.MessageQueueTransactionType" /> values, describing the type of transaction context to associate with the message. </param>
      <exception cref="T:System.ArgumentNullException">The <paramref name="label" /> parameter is null. </exception>
      <exception cref="T:System.Messaging.MessageQueueTransaction">The Message Queuing application indicated an incorrect transaction usage. </exception>
      <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">The <paramref name="transactionType" /> parameter is not one of the <see cref="T:System.Messaging.MessageQueueTransactionType" /> members. </exception>
      <exception cref="T:System.Messaging.MessageQueueException">The <see cref="P:System.Messaging.MessageQueue.Path" /> property has not been set.-or- An error occurred when accessing a Message Queuing method. </exception>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
        <IPermission class="System.Messaging.MessageQueuePermission, System.Messaging, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" version="1" Unrestricted="true" />
        <IPermission class="System.Diagnostics.PerformanceCounterPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:System.Messaging.MessageQueue.SetPermissions(System.Messaging.AccessControlList)">
      <summary>Assigns access rights to the queue based on the contents of an access control list.</summary>
      <param name="dacl">A <see cref="T:System.Messaging.AccessControlList" /> that contains one or more access control entries that specify the trustees and the permissions to grant. </param>
      <exception cref="T:System.Messaging.MessageQueueException">An error occurred when accessing a Message Queuing method. </exception>
      <PermissionSet>
        <IPermission class="System.Messaging.MessageQueuePermission, System.Messaging, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:System.Messaging.MessageQueue.SetPermissions(System.Messaging.MessageQueueAccessControlEntry)">
      <summary>Assigns access rights to the queue based on the contents of an access control entry.</summary>
      <param name="ace">A <see cref="T:System.Messaging.MessageQueueAccessControlEntry" /> that specifies a user, an access type, and a permission type. </param>
      <exception cref="T:System.Messaging.MessageQueueException">An error occurred when accessing a Message Queuing method. </exception>
      <PermissionSet>
        <IPermission class="System.Messaging.MessageQueuePermission, System.Messaging, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:System.Messaging.MessageQueue.SetPermissions(System.String,System.Messaging.MessageQueueAccessRights)">
      <summary>Gives a computer, group, or user the specified access rights.</summary>
      <param name="user">The individual, group, or computer that gets additional rights to the queue. </param>
      <param name="rights">A <see cref="T:System.Messaging.MessageQueueAccessRights" /> that indicates the set of rights to the queue that Message Queuing assigns to the <paramref name="user" /> passed in. </param>
      <exception cref="T:System.ArgumentException">The <paramref name="user" /> is null. </exception>
      <exception cref="T:System.Messaging.MessageQueueException">An error occurred when accessing a Message Queuing method. </exception>
      <PermissionSet>
        <IPermission class="System.Messaging.MessageQueuePermission, System.Messaging, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:System.Messaging.MessageQueue.SetPermissions(System.String,System.Messaging.MessageQueueAccessRights,System.Messaging.AccessControlEntryType)">
      <summary>Gives a computer, group, or user the specified access rights, with the specified access control type (allow, deny, revoke, or set).</summary>
      <param name="user">The individual, group, or computer that gets additional rights to the queue. </param>
      <param name="rights">A <see cref="T:System.Messaging.MessageQueueAccessRights" /> that indicates the set of rights to the queue that Message Queuing assigns to the <paramref name="user" /> passed in. </param>
      <param name="entryType">A <see cref="T:System.Messaging.AccessControlEntryType" /> that specifies whether to grant, deny, or revoke the permissions specified by the <paramref name="rights" /> parameter. </param>
      <exception cref="T:System.Messaging.MessageQueueException">An error occurred when accessing a Message Queuing method. </exception>
      <PermissionSet>
        <IPermission class="System.Messaging.MessageQueuePermission, System.Messaging, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="P:System.Messaging.MessageQueue.SynchronizingObject">
      <summary>Gets or sets the object that marshals the event-handler call resulting from a <see cref="E:System.Messaging.MessageQueue.ReceiveCompleted" /> or <see cref="E:System.Messaging.MessageQueue.PeekCompleted" /> event.</summary>
      <returns>A <see cref="T:System.ComponentModel.ISynchronizeInvoke" />, which represents the object that marshals the event-handler call resulting from a <see cref="E:System.Messaging.MessageQueue.ReceiveCompleted" /> or <see cref="E:System.Messaging.MessageQueue.PeekCompleted" /> event. The default is null.</returns>
    </member>
    <member name="P:System.Messaging.MessageQueue.Transactional">
      <summary>Gets a value that indicates whether the queue accepts only transactions.</summary>
      <returns>true if the queue accepts only messages sent as part of a transaction; otherwise, false.</returns>
      <exception cref="T:System.Messaging.MessageQueueException">An error occurred when accessing a Message Queuing method. </exception>
      <PermissionSet>
        <IPermission class="System.Messaging.MessageQueuePermission, System.Messaging, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="P:System.Messaging.MessageQueue.UseJournalQueue">
      <summary>Gets or sets a value that indicates whether received messages are copied to the journal queue.</summary>
      <returns>true if messages received from the queue are copied to its journal queue; otherwise, false.</returns>
      <exception cref="T:System.Messaging.MessageQueueException">An error occurred when accessing a Message Queuing method. </exception>
      <PermissionSet>
        <IPermission class="System.Messaging.MessageQueuePermission, System.Messaging, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="P:System.Messaging.MessageQueue.WriteHandle">
      <summary>Gets the native handle used to send messages to the message queue.</summary>
      <returns>A handle to the native queue object that you use for sending messages to the queue.</returns>
      <exception cref="T:System.Messaging.MessageQueueException">The message queue is not available for writing. </exception>
      <PermissionSet>
        <IPermission class="System.Messaging.MessageQueuePermission, System.Messaging, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="T:System.Messaging.MessageQueueAccessControlEntry">
      <summary>Specifies access rights for a trustee (user, group, or computer) to perform Message Queuing tasks.</summary>
    </member>
    <member name="M:System.Messaging.MessageQueueAccessControlEntry.#ctor(System.Messaging.Trustee,System.Messaging.MessageQueueAccessRights)">
      <summary>Initializes a new instance of the <see cref="T:System.Messaging.MessageQueueAccessControlEntry" /> class, granting the specified Message Queuing access rights to the specified trustee.</summary>
      <param name="trustee">A <see cref="T:System.Messaging.Trustee" /> that specifies a user, group, computer, domain, or alias. </param>
      <param name="rights">A bitwise combination of the <see cref="T:System.Messaging.MessageQueueAccessRights" /> values which defines the combination of rights to grant to the trustee. </param>
    </member>
    <member name="M:System.Messaging.MessageQueueAccessControlEntry.#ctor(System.Messaging.Trustee,System.Messaging.MessageQueueAccessRights,System.Messaging.AccessControlEntryType)">
      <summary>Initializes a new instance of the <see cref="T:System.Messaging.MessageQueueAccessControlEntry" /> class, with the specified trustee and Message Queuing access rights. The type of access (such as Allow or Deny) is defined by the entry type you pass in.</summary>
      <param name="trustee">A <see cref="T:System.Messaging.Trustee" /> that specifies a user, group, computer, domain, or alias. </param>
      <param name="rights">A bitwise combination of the <see cref="T:System.Messaging.MessageQueueAccessRights" /> values which defines the combination of rights to grant to the trustee. </param>
      <param name="entryType">One of the <see cref="T:System.Messaging.AccessControlEntryType" /> values, which specifies whether to allow, deny, set or revoke the specified rights. </param>
    </member>
    <member name="P:System.Messaging.MessageQueueAccessControlEntry.MessageQueueAccessRights">
      <summary>Gets or sets the set of Message Queuing-specific rights to apply to the trustee.</summary>
      <returns>A bitwise combination of the <see cref="T:System.Messaging.MessageQueueAccessRights" /> members. The default is defined by the <paramref name="rights" /> parameter passed into the constructor.</returns>
    </member>
    <member name="T:System.Messaging.MessageQueueAccessRights">
      <summary>Specifies a set of object-specific access rights for operations specific to Message Queuing.</summary>
    </member>
    <member name="F:System.Messaging.MessageQueueAccessRights.DeleteMessage">
      <summary>The right to delete messages from the queue.</summary>
    </member>
    <member name="F:System.Messaging.MessageQueueAccessRights.PeekMessage">
      <summary>The right to peek messages from the queue.</summary>
    </member>
    <member name="F:System.Messaging.MessageQueueAccessRights.WriteMessage">
      <summary>The right to send messages to the queue.</summary>
    </member>
    <member name="F:System.Messaging.MessageQueueAccessRights.DeleteJournalMessage">
      <summary>The right to delete messages from the journal queue.</summary>
    </member>
    <member name="F:System.Messaging.MessageQueueAccessRights.SetQueueProperties">
      <summary>The right to modify properties of the queue.</summary>
    </member>
    <member name="F:System.Messaging.MessageQueueAccessRights.GetQueueProperties">
      <summary>The right to read properties of the queue.</summary>
    </member>
    <member name="F:System.Messaging.MessageQueueAccessRights.DeleteQueue">
      <summary>The right to delete the queue.</summary>
    </member>
    <member name="F:System.Messaging.MessageQueueAccessRights.GetQueuePermissions">
      <summary>The right to read queue permissions.</summary>
    </member>
    <member name="F:System.Messaging.MessageQueueAccessRights.ChangeQueuePermissions">
      <summary>The right to modify queue permissions.</summary>
    </member>
    <member name="F:System.Messaging.MessageQueueAccessRights.TakeQueueOwnership">
      <summary>The right to take ownership of the queue.</summary>
    </member>
    <member name="F:System.Messaging.MessageQueueAccessRights.ReceiveMessage">
      <summary>The right to receive messages from the queue. This includes the rights to delete and peek messages.</summary>
    </member>
    <member name="F:System.Messaging.MessageQueueAccessRights.ReceiveJournalMessage">
      <summary>The right to receive messages from the journal queue. This includes the rights to delete and peek messages from the journal queue.</summary>
    </member>
    <member name="F:System.Messaging.MessageQueueAccessRights.GenericRead">
      <summary>A combination of GetQueueProperties, GetQueuePermissions, ReceiveMessage, and ReceiveJournalMessage.</summary>
    </member>
    <member name="F:System.Messaging.MessageQueueAccessRights.GenericWrite">
      <summary>A combination of GetQueueProperties, GetQueuePermissions, and WriteMessage.</summary>
    </member>
    <member name="F:System.Messaging.MessageQueueAccessRights.FullControl">
      <summary>Full rights to the queue. A union of all other rights in the enumeration.</summary>
    </member>
    <member name="T:System.Messaging.MessageQueueCriteria">
      <summary>Filters message queues when performing a query using the <see cref="T:System.Messaging.MessageQueue" /> class's <see cref="M:System.Messaging.MessageQueue.GetPublicQueues" /> method.</summary>
    </member>
    <member name="M:System.Messaging.MessageQueueCriteria.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Messaging.MessageQueueCriteria" /> class.</summary>
    </member>
    <member name="P:System.Messaging.MessageQueueCriteria.Category">
      <summary>Gets or sets the category by which to filter queues in the network.</summary>
      <returns>The queues' category.</returns>
      <exception cref="T:System.InvalidOperationException">The application did not set the <see cref="P:System.Messaging.MessageQueueCriteria.Category" /> property before reading it. </exception>
    </member>
    <member name="M:System.Messaging.MessageQueueCriteria.ClearAll">
      <summary>Clears all properties from being built into a filter and puts all property values into a "not set" state.</summary>
    </member>
    <member name="P:System.Messaging.MessageQueueCriteria.CreatedAfter">
      <summary>Gets or sets the lower boundary of the queue creation date and time by which to filter queues on the network.</summary>
      <returns>A <see cref="T:System.DateTime" /> that specifies the lower boundary for a queue's creation date and time.</returns>
      <exception cref="T:System.InvalidOperationException">The application did not set the <see cref="P:System.Messaging.MessageQueueCriteria.CreatedAfter" /> property before reading it. </exception>
    </member>
    <member name="P:System.Messaging.MessageQueueCriteria.CreatedBefore">
      <summary>Gets or sets the upper boundary of the queue creation date and time by which to filter queues on the network.</summary>
      <returns>A <see cref="T:System.DateTime" /> that specifies the upper boundary for a queue's creation date and time.</returns>
      <exception cref="T:System.InvalidOperationException">The application did not set the <see cref="P:System.Messaging.MessageQueueCriteria.CreatedBefore" /> property before reading it. </exception>
    </member>
    <member name="P:System.Messaging.MessageQueueCriteria.Label">
      <summary>Gets or sets the label by which to filter queues in the network.</summary>
      <returns>The queues' label.</returns>
      <exception cref="T:System.InvalidOperationException">The application did not set the <see cref="P:System.Messaging.MessageQueueCriteria.Label" /> property before reading it. </exception>
    </member>
    <member name="P:System.Messaging.MessageQueueCriteria.MachineName">
      <summary>Gets or sets the computer name by which to filter queues in the network.</summary>
      <returns>The server name of the computer on which the queues reside.</returns>
      <exception cref="T:System.InvalidOperationException">The application did not set the <see cref="P:System.Messaging.MessageQueueCriteria.MachineName" /> property before reading it.-or- The computer name syntax is invalid. </exception>
    </member>
    <member name="P:System.Messaging.MessageQueueCriteria.ModifiedAfter">
      <summary>Gets or sets the lower boundary of the queue modification date and time by which to filter queues on the network.</summary>
      <returns>A <see cref="T:System.DateTime" /> that specifies the lower boundary for a queue's last modification date and time.</returns>
      <exception cref="T:System.InvalidOperationException">The application did not set the <see cref="P:System.Messaging.MessageQueueCriteria.ModifiedAfter" /> property before reading it. </exception>
    </member>
    <member name="P:System.Messaging.MessageQueueCriteria.ModifiedBefore">
      <summary>Gets or sets the upper boundary of the queue modification date and time by which to filter queues on the network.</summary>
      <returns>A <see cref="T:System.DateTime" /> that specifies the upper boundary for a queue's last modification date and time.</returns>
      <exception cref="T:System.InvalidOperationException">The application did not set the <see cref="P:System.Messaging.MessageQueueCriteria.ModifiedBefore" /> property before reading it. </exception>
    </member>
    <member name="T:System.Messaging.MessageQueueEnumerator">
      <summary>Provides a forward-only cursor to enumerate through messages in a message queue.</summary>
    </member>
    <member name="M:System.Messaging.MessageQueueEnumerator.Close">
      <summary>Frees the resources associated with the enumerator.</summary>
    </member>
    <member name="P:System.Messaging.MessageQueueEnumerator.Current">
      <summary>Gets the current <see cref="T:System.Messaging.MessageQueue" /> of the enumeration.</summary>
      <returns>The queue at which the cursor is currently positioned.</returns>
      <exception cref="T:System.InvalidOperationException">You called <see cref="P:System.Messaging.MessageQueueEnumerator.Current" /> before the first call to <see cref="M:System.Messaging.MessageQueueEnumerator.MoveNext" />. The cursor is located before the first queue in the enumeration.-or- You called <see cref="P:System.Messaging.MessageQueueEnumerator.Current" /> after a call to <see cref="M:System.Messaging.MessageQueueEnumerator.MoveNext" /> had returned false (indicating the cursor is located after the last queue in the enumeration). </exception>
    </member>
    <member name="M:System.Messaging.MessageQueueEnumerator.Dispose">
      <summary>Releases all resources used by the <see cref="T:System.Messaging.MessageQueueEnumerator" />.</summary>
    </member>
    <member name="M:System.Messaging.MessageQueueEnumerator.Dispose(System.Boolean)">
      <summary>Releases the unmanaged resources used by the <see cref="T:System.Messaging.MessageQueueEnumerator" /> and optionally releases the managed resources.</summary>
      <param name="disposing">true to release both managed and unmanaged resources; false to release only unmanaged resources. </param>
    </member>
    <member name="M:System.Messaging.MessageQueueEnumerator.Finalize">
      <summary>Releases the resources held by the queue.</summary>
    </member>
    <member name="P:System.Messaging.MessageQueueEnumerator.LocatorHandle">
      <summary>Gets the native Message Queuing handle used to locate queues in a network.</summary>
      <returns>The native handle to the current queue.</returns>
      <exception cref="T:System.Messaging.MessageQueueException">The handle does not exist. </exception>
      <exception cref="T:System.Security.SecurityException">The calling code does not have browse permissions. </exception>
      <PermissionSet>
        <IPermission class="System.Messaging.MessageQueuePermission, System.Messaging, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" version="1">
          <Path value="*" access="Browse" />
        </IPermission>
      </PermissionSet>
    </member>
    <member name="M:System.Messaging.MessageQueueEnumerator.MoveNext">
      <summary>Advances the enumerator to the next queue of the enumeration, if one is currently available.</summary>
      <returns>true if the enumerator was successfully advanced to the next queue; false if the enumerator has reached the end of the enumeration.</returns>
      <exception cref="T:System.Security.SecurityException">The calling code does not have browse permissions. </exception>
      <PermissionSet>
        <IPermission class="System.Messaging.MessageQueuePermission, System.Messaging, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" version="1">
          <Path value="*" access="Browse" />
        </IPermission>
      </PermissionSet>
    </member>
    <member name="M:System.Messaging.MessageQueueEnumerator.Reset">
      <summary>Resets the cursor, so it points to the beginning of the enumeration.</summary>
    </member>
    <member name="P:System.Messaging.MessageQueueEnumerator.System#Collections#IEnumerator#Current">
      <summary>Gets the current <see cref="T:System.Messaging.MessageQueue" /> of the enumeration.</summary>
      <returns>The queue at which the cursor is currently positioned.</returns>
    </member>
    <member name="T:System.Messaging.MessageQueueErrorCode">
      <summary>Identifies the source of an error that occurred within the Message Queuing application and generated a <see cref="T:System.Messaging.MessageQueueException" /> exception.</summary>
    </member>
    <member name="F:System.Messaging.MessageQueueErrorCode.Base">
      <summary>Message Queuing does not return this error code.</summary>
    </member>
    <member name="F:System.Messaging.MessageQueueErrorCode.Generic">
      <summary>Message text: Generic Error.</summary>
    </member>
    <member name="F:System.Messaging.MessageQueueErrorCode.Property">
      <summary>Message text: One or more of the passed properties are invalid.</summary>
    </member>
    <member name="F:System.Messaging.MessageQueueErrorCode.QueueNotFound">
      <summary>Message text: The queue is not registered in the directory service.</summary>
    </member>
    <member name="F:System.Messaging.MessageQueueErrorCode.QueueExists">
      <summary>Message text: A queue with the same pathname is already registered.</summary>
    </member>
    <member name="F:System.Messaging.MessageQueueErrorCode.InvalidParameter">
      <summary>Message text: An invalid parameter passed to a function.</summary>
    </member>
    <member name="F:System.Messaging.MessageQueueErrorCode.InvalidHandle">
      <summary>Message text: An invalid handle passed to a function.</summary>
    </member>
    <member name="F:System.Messaging.MessageQueueErrorCode.OperationCanceled">
      <summary>Message text: The operation was canceled before it could be completed.</summary>
    </member>
    <member name="F:System.Messaging.MessageQueueErrorCode.SharingViolation">
      <summary>Message text: Sharing violation. The queue is already opened for exclusive receive.</summary>
    </member>
    <member name="F:System.Messaging.MessageQueueErrorCode.ServiceNotAvailable">
      <summary>Message text: The Message Queues service is not available.</summary>
    </member>
    <member name="F:System.Messaging.MessageQueueErrorCode.MachineNotFound">
      <summary>Message text: The specified computer could not be found.</summary>
    </member>
    <member name="F:System.Messaging.MessageQueueErrorCode.IllegalSort">
      <summary>Message text: Illegal sort specified (for example, duplicate columns).</summary>
    </member>
    <member name="F:System.Messaging.MessageQueueErrorCode.IllegalUser">
      <summary>Message text: The user has an invalid user name.</summary>
    </member>
    <member name="F:System.Messaging.MessageQueueErrorCode.NoDs">
      <summary>Message text: No connection with this site's controller(s).</summary>
    </member>
    <member name="F:System.Messaging.MessageQueueErrorCode.IllegalQueuePathName">
      <summary>Message text: Invalid queue path name.</summary>
    </member>
    <member name="F:System.Messaging.MessageQueueErrorCode.IllegalPropertyValue">
      <summary>Message text: Invalid property value.</summary>
    </member>
    <member name="F:System.Messaging.MessageQueueErrorCode.IllegalPropertyVt">
      <summary>Message text: Invalid VARTYPE value.</summary>
    </member>
    <member name="F:System.Messaging.MessageQueueErrorCode.BufferOverflow">
      <summary>Message text: The buffer supplied to MQReceiveMessage for message body retrieval was too small. The message is not removed from the queue and part of the message body that fits in the buffer was copied.</summary>
    </member>
    <member name="F:System.Messaging.MessageQueueErrorCode.IOTimeout">
      <summary>Message text: The receive or peek message time-out has expired.</summary>
    </member>
    <member name="F:System.Messaging.MessageQueueErrorCode.IllegalCursorAction">
      <summary>Message text: MQ_ACTION_PEEK_NEXT specified to MQReceiveMessage can not be used with the current cursor position.</summary>
    </member>
    <member name="F:System.Messaging.MessageQueueErrorCode.MessageAlreadyReceived">
      <summary>Message text: A message that is currently pointed at by the cursor has been removed from the queue by another process or by another call to receive the message without the use of this cursor.</summary>
    </member>
    <member name="F:System.Messaging.MessageQueueErrorCode.IllegalFormatName">
      <summary>Message text: The given format name is invalid.</summary>
    </member>
    <member name="F:System.Messaging.MessageQueueErrorCode.FormatNameBufferTooSmall">
      <summary>Message text: The format name buffer supplied to the API was too small to fit the format name.</summary>
    </member>
    <member name="F:System.Messaging.MessageQueueErrorCode.UnsupportedFormatNameOperation">
      <summary>Message text: The requested operation for the specified format name is not supported.</summary>
    </member>
    <member name="F:System.Messaging.MessageQueueErrorCode.IllegalSecurityDescriptor">
      <summary>Message text: The specified security descriptor is not a valid security descriptor.</summary>
    </member>
    <member name="F:System.Messaging.MessageQueueErrorCode.SenderIdBufferTooSmall">
      <summary>Message text: The passed buffer for the user identifier property is too small.</summary>
    </member>
    <member name="F:System.Messaging.MessageQueueErrorCode.SecurityDescriptorBufferTooSmall">
      <summary>Message text: The size of the buffer passed to MQGetQueueSecurity is too small.</summary>
    </member>
    <member name="F:System.Messaging.MessageQueueErrorCode.CannotImpersonateClient">
      <summary>Message text: The RPC server cannot impersonate the client application, hence security credentials could not be verified.</summary>
    </member>
    <member name="F:System.Messaging.MessageQueueErrorCode.AccessDenied">
      <summary>Message text: Access is denied.</summary>
    </member>
    <member name="F:System.Messaging.MessageQueueErrorCode.PrivilegeNotHeld">
      <summary>Message text: Client does not have the required privileges to perform the operation.</summary>
    </member>
    <member name="F:System.Messaging.MessageQueueErrorCode.InsufficientResources">
      <summary>Message text: Insufficient resources to perform operation.</summary>
    </member>
    <member name="F:System.Messaging.MessageQueueErrorCode.UserBufferTooSmall">
      <summary>Message text: Request failed because user buffer is too small to hold the returned information.</summary>
    </member>
    <member name="F:System.Messaging.MessageQueueErrorCode.MessageStorageFailed">
      <summary>Message text: Could not store a recoverable or journal message. Message was not sent.</summary>
    </member>
    <member name="F:System.Messaging.MessageQueueErrorCode.SenderCertificateBufferTooSmall">
      <summary>Message text: The passed buffer for the user certificate property is too small.</summary>
    </member>
    <member name="F:System.Messaging.MessageQueueErrorCode.InvalidCertificate">
      <summary>Message text: The user certificate is not valid.</summary>
    </member>
    <member name="F:System.Messaging.MessageQueueErrorCode.CorruptedInternalCertificate">
      <summary>Message text: The internal Message Queuing certificate is corrupted.</summary>
    </member>
    <member name="F:System.Messaging.MessageQueueErrorCode.NoInternalUserCertificate">
      <summary>Message text: The internal Message Queuing certificate for the user does not exist.</summary>
    </member>
    <member name="F:System.Messaging.MessageQueueErrorCode.CorruptedSecurityData">
      <summary>Message text: A cryptographic function has failed.</summary>
    </member>
    <member name="F:System.Messaging.MessageQueueErrorCode.CorruptedPersonalCertStore">
      <summary>Message text: The personal certificate store is corrupted.</summary>
    </member>
    <member name="F:System.Messaging.MessageQueueErrorCode.ComputerDoesNotSupportEncryption">
      <summary>Message text: The computer does not support encryption operations.</summary>
    </member>
    <member name="F:System.Messaging.MessageQueueErrorCode.BadSecurityContext">
      <summary>Message text: Bad security context.</summary>
    </member>
    <member name="F:System.Messaging.MessageQueueErrorCode.CouldNotGetUserSid">
      <summary>Message text: Could not get the SID information out of the thread token.</summary>
    </member>
    <member name="F:System.Messaging.MessageQueueErrorCode.CouldNotGetAccountInfo">
      <summary>Message text: Could not get the account information for the user.</summary>
    </member>
    <member name="F:System.Messaging.MessageQueueErrorCode.IllegalCriteriaColumns">
      <summary>Message text: Invalid MQCOLUMNS parameter.</summary>
    </member>
    <member name="F:System.Messaging.MessageQueueErrorCode.IllegalPropertyId">
      <summary>Message text: Invalid property identifier value.</summary>
    </member>
    <member name="F:System.Messaging.MessageQueueErrorCode.IllegalRelation">
      <summary>Message text: Invalid relation value in restriction.</summary>
    </member>
    <member name="F:System.Messaging.MessageQueueErrorCode.IllegalPropertySize">
      <summary>Message text: Illegal property buffer size.</summary>
    </member>
    <member name="F:System.Messaging.MessageQueueErrorCode.IllegalRestrictionPropertyId">
      <summary>Message text: Invalid propid value in MQRESTRICTION parameter.</summary>
    </member>
    <member name="F:System.Messaging.MessageQueueErrorCode.IllegalQueueProperties">
      <summary>Message text: Illegal MQQUEUEPROPS parameter, either null or with zero properties.</summary>
    </member>
    <member name="F:System.Messaging.MessageQueueErrorCode.PropertyNotAllowed">
      <summary>Message text: Invalid property for the requested operation </summary>
    </member>
    <member name="F:System.Messaging.MessageQueueErrorCode.InsufficientProperties">
      <summary>Message text: Not all the required properties for the operation were specified in the input parameters.</summary>
    </member>
    <member name="F:System.Messaging.MessageQueueErrorCode.MachineExists">
      <summary>Message text: Computer with the same name already exists in the site.</summary>
    </member>
    <member name="F:System.Messaging.MessageQueueErrorCode.IllegalMessageProperties">
      <summary>Message text: Illegal MQQMPROPS parameter, either null or with zero properties.</summary>
    </member>
    <member name="F:System.Messaging.MessageQueueErrorCode.DsIsFull">
      <summary>Message text: Directory service is full.</summary>
    </member>
    <member name="F:System.Messaging.MessageQueueErrorCode.DsError">
      <summary>Message text: Internal directory service error.</summary>
    </member>
    <member name="F:System.Messaging.MessageQueueErrorCode.InvalidOwner">
      <summary>Message text: Invalid object owner. For example CreateQueue failed because the Queue Manager object is invalid.</summary>
    </member>
    <member name="F:System.Messaging.MessageQueueErrorCode.UnsupportedAccessMode">
      <summary>Message text: The specified access mode is not supported.</summary>
    </member>
    <member name="F:System.Messaging.MessageQueueErrorCode.ResultBufferTooSmall">
      <summary>Message text: The supplied result buffer is too small.</summary>
    </member>
    <member name="F:System.Messaging.MessageQueueErrorCode.DeleteConnectedNetworkInUse">
      <summary>Message text: The connected network cannot be deleted; it is in use.</summary>
    </member>
    <member name="F:System.Messaging.MessageQueueErrorCode.NoResponseFromObjectServer">
      <summary>Message text: No response from object owner.</summary>
    </member>
    <member name="F:System.Messaging.MessageQueueErrorCode.ObjectServerNotAvailable">
      <summary>Message text: Object owner is not reachable.</summary>
    </member>
    <member name="F:System.Messaging.MessageQueueErrorCode.QueueNotAvailable">
      <summary>Message text: Error while reading from a queue residing on a remote computer.</summary>
    </member>
    <member name="F:System.Messaging.MessageQueueErrorCode.DtcConnect">
      <summary>Message text: Cannot connect to MS DTC.</summary>
    </member>
    <member name="F:System.Messaging.MessageQueueErrorCode.TransactionImport">
      <summary>Message text: Cannot import the transaction.</summary>
    </member>
    <member name="F:System.Messaging.MessageQueueErrorCode.TransactionUsage">
      <summary>Message text: Wrong transaction usage.</summary>
    </member>
    <member name="F:System.Messaging.MessageQueueErrorCode.TransactionSequence">
      <summary>Message text: Wrong transaction operations sequence.</summary>
    </member>
    <member name="F:System.Messaging.MessageQueueErrorCode.MissingConnectorType">
      <summary>Message text: Connector Type is mandatory when sending an Acknowledgment or secure message.</summary>
    </member>
    <member name="F:System.Messaging.MessageQueueErrorCode.StaleHandle">
      <summary>Message text: The Queue Manager service has been restarted. The queue handle is stale and should be closed.</summary>
    </member>
    <member name="F:System.Messaging.MessageQueueErrorCode.TransactionEnlist">
      <summary>Message text: Cannot enlist the transaction.</summary>
    </member>
    <member name="F:System.Messaging.MessageQueueErrorCode.QueueDeleted">
      <summary>Message text: The queue was deleted. Messages cannot be received anymore using this queue instance. The queue should be closed.</summary>
    </member>
    <member name="F:System.Messaging.MessageQueueErrorCode.IllegalContext">
      <summary>Message text: Invalid context parameter.</summary>
    </member>
    <member name="F:System.Messaging.MessageQueueErrorCode.IllegalSortPropertyId">
      <summary>Message text: Invalid propid value in MQSORTSET.</summary>
    </member>
    <member name="F:System.Messaging.MessageQueueErrorCode.LabelBufferTooSmall">
      <summary>Message text: The label buffer supplied to the API was too small.</summary>
    </member>
    <member name="F:System.Messaging.MessageQueueErrorCode.MqisServerEmpty">
      <summary>Message text: The list of MQIS servers (in registry) is empty.</summary>
    </member>
    <member name="F:System.Messaging.MessageQueueErrorCode.MqisReadOnlyMode">
      <summary>Message text: MQIS database is in read-only mode.</summary>
    </member>
    <member name="F:System.Messaging.MessageQueueErrorCode.SymmetricKeyBufferTooSmall">
      <summary>Message text: The passed buffer for the Symmetric key property is too small.</summary>
    </member>
    <member name="F:System.Messaging.MessageQueueErrorCode.SignatureBufferTooSmall">
      <summary>Message text: The passed buffer for the Signature property is too small.</summary>
    </member>
    <member name="F:System.Messaging.MessageQueueErrorCode.ProviderNameBufferTooSmall">
      <summary>Message text: The passed buffer for the Provider name property is too small.</summary>
    </member>
    <member name="F:System.Messaging.MessageQueueErrorCode.IllegalOperation">
      <summary>Message text: The operation is invalid on foreign message queuing systems.</summary>
    </member>
    <member name="F:System.Messaging.MessageQueueErrorCode.WriteNotAllowed">
      <summary>Message text: Another MQIS server is being installed; write operations to the database are not allowed at this time.</summary>
    </member>
    <member name="F:System.Messaging.MessageQueueErrorCode.WksCantServeClient">
      <summary>Message text: Message Queuing-independent clients cannot serve Message Queuing-dependent clients.</summary>
    </member>
    <member name="F:System.Messaging.MessageQueueErrorCode.DependentClientLicenseOverflow">
      <summary>Message text: The number of dependent clients served by this Message Queuing server reached its upper limit.</summary>
    </member>
    <member name="F:System.Messaging.MessageQueueErrorCode.CorruptedQueueWasDeleted">
      <summary>Message text: The.ini file for the queue in LQS was deleted because it was corrupted.</summary>
    </member>
    <member name="F:System.Messaging.MessageQueueErrorCode.RemoteMachineNotAvailable">
      <summary>Message text: The remote machine is not available.</summary>
    </member>
    <member name="F:System.Messaging.MessageQueueErrorCode.UnsupportedOperation">
      <summary>Message text: The operation is not supported for a WORKGROUP installation computer.</summary>
    </member>
    <member name="F:System.Messaging.MessageQueueErrorCode.EncryptionProviderNotSupported">
      <summary>Message text: The Cryptographic Service Provider is not supported by Message Queuing.</summary>
    </member>
    <member name="F:System.Messaging.MessageQueueErrorCode.CannotSetCryptographicSecurityDescriptor">
      <summary>Message text: Unable to set the security descriptor for the cryptographic keys.</summary>
    </member>
    <member name="F:System.Messaging.MessageQueueErrorCode.CertificateNotProvided">
      <summary>Message text: A user attempted to send an authenticated message without a certificate.</summary>
    </member>
    <member name="F:System.Messaging.MessageQueueErrorCode.QDnsPropertyNotSupported">
      <summary>DNS property is not supported as criteria to locate queues.</summary>
    </member>
    <member name="F:System.Messaging.MessageQueueErrorCode.CannotCreateCertificateStore">
      <summary>Message text: Unable to create a certificate store for the internal certificate.</summary>
    </member>
    <member name="F:System.Messaging.MessageQueueErrorCode.CannotOpenCertificateStore">
      <summary>Message text: Unable to open the certificates store for the internal certificate.</summary>
    </member>
    <member name="F:System.Messaging.MessageQueueErrorCode.IllegalEnterpriseOperation">
      <summary>Message text: The operation is invalid for a Message Queuing services object.</summary>
    </member>
    <member name="F:System.Messaging.MessageQueueErrorCode.CannotGrantAddGuid">
      <summary>Message text: Failed to grant the "Add Guid" permission to current user.</summary>
    </member>
    <member name="F:System.Messaging.MessageQueueErrorCode.CannotLoadMsmqOcm">
      <summary>Message text: Cannot load the MSMQOCM.DLL library.</summary>
    </member>
    <member name="F:System.Messaging.MessageQueueErrorCode.NoEntryPointMsmqOcm">
      <summary>Message text: Cannot locate an entry point in the MSMQOCM.DLL library.</summary>
    </member>
    <member name="F:System.Messaging.MessageQueueErrorCode.NoMsmqServersOnDc">
      <summary>Message text: Failed to find Message Queuing servers on domain controllers.</summary>
    </member>
    <member name="F:System.Messaging.MessageQueueErrorCode.CannotJoinDomain">
      <summary>Message text: Failed to join Message Queuing enterprise on Windows 2000 domain.</summary>
    </member>
    <member name="F:System.Messaging.MessageQueueErrorCode.CannotCreateOnGlobalCatalog">
      <summary>Message text: Failed to create an object on a specified global catalog server.</summary>
    </member>
    <member name="F:System.Messaging.MessageQueueErrorCode.GuidNotMatching">
      <summary>Message text: Failed to create Message Queuing configuration object with a GUID that matches the computer installation. You must uninstall Message Queuing and then reinstall it.</summary>
    </member>
    <member name="F:System.Messaging.MessageQueueErrorCode.PublicKeyNotFound">
      <summary>Message text: Unable to find the public key for computer.</summary>
    </member>
    <member name="F:System.Messaging.MessageQueueErrorCode.PublicKeyDoesNotExist">
      <summary>Message text: The public key for the computer does not exist.</summary>
    </member>
    <member name="F:System.Messaging.MessageQueueErrorCode.IllegalPrivateProperties">
      <summary>The private properties parameter value is invalid. This may be because it has a null value or has zero properties specified.</summary>
    </member>
    <member name="F:System.Messaging.MessageQueueErrorCode.NoGlobalCatalogInDomain">
      <summary>Message text: Unable to find Global Catalog servers in the specified domain.</summary>
    </member>
    <member name="F:System.Messaging.MessageQueueErrorCode.NoMsmqServersOnGlobalCatalog">
      <summary>Message text: Failed to find Message Queuing servers on Global Catalog domain controllers.</summary>
    </member>
    <member name="F:System.Messaging.MessageQueueErrorCode.CannotGetDistinguishedName">
      <summary>Message text: Failed to retrieve the distinguished name of local computer.</summary>
    </member>
    <member name="F:System.Messaging.MessageQueueErrorCode.CannotHashDataEx">
      <summary>Message text: Unable to hash data for an authenticated message.</summary>
    </member>
    <member name="F:System.Messaging.MessageQueueErrorCode.CannotSignDataEx">
      <summary>Message text: Unable to sign data before sending an authenticated message.</summary>
    </member>
    <member name="F:System.Messaging.MessageQueueErrorCode.CannotCreateHashEx">
      <summary>Message text: Unable to create a hash object for an authenticated message.</summary>
    </member>
    <member name="F:System.Messaging.MessageQueueErrorCode.FailVerifySignatureEx">
      <summary>Message text: Signature of received message is not valid.</summary>
    </member>
    <member name="F:System.Messaging.MessageQueueErrorCode.MessageNotFound">
      <summary>Message text: The specified message could not be found.</summary>
    </member>
    <member name="T:System.Messaging.MessageQueueException">
      <summary>The exception that is thrown if a Microsoft Message Queuing internal error occurs.</summary>
    </member>
    <member name="M:System.Messaging.MessageQueueException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Initializes a new instance of the <see cref="T:System.Messaging.MessageQueueException" /> class with serialized data.</summary>
      <param name="info">A <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized data associated with the <see cref="T:System.Messaging.MessageQueueException" />. </param>
      <param name="context">A <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains the source and destination of the serialized stream associated with the <see cref="T:System.Messaging.MessageQueueException" />. </param>
    </member>
    <member name="M:System.Messaging.MessageQueueException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Populates a serialization information object with the data needed to serialize the <see cref="T:System.Messaging.MessageQueueException" />.</summary>
      <param name="info">A <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized data associated with the <see cref="T:System.Messaging.MessageQueueException" />. </param>
      <param name="context">A <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains the source and destination of the serialized stream associated with the <see cref="T:System.Messaging.MessageQueueException" />. </param>
      <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is null. </exception>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="ControlEvidence" />
      </PermissionSet>
    </member>
    <member name="P:System.Messaging.MessageQueueException.Message">
      <summary>Gets a value that describes the Message Queuing error.</summary>
      <returns>The description of the Message Queuing internal error that generated this <see cref="T:System.Messaging.MessageQueueException" />.</returns>
    </member>
    <member name="P:System.Messaging.MessageQueueException.MessageQueueErrorCode">
      <summary>Gets a value that indicates the error code associated with this exception.</summary>
      <returns>A <see cref="T:System.Messaging.MessageQueueErrorCode" /> that identifies the type of error Message Queuing generated.</returns>
    </member>
    <member name="T:System.Messaging.MessageQueueInstaller">
      <summary>Allows you to install and configure a queue that your application needs in order to run. This class is called by the installation utility, for example, InstallUtil.exe, when installing a <see cref="T:System.Messaging.MessageQueue" />.</summary>
    </member>
    <member name="M:System.Messaging.MessageQueueInstaller.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Messaging.MessageQueueInstaller" /> class. Does not set any instance properties.</summary>
    </member>
    <member name="M:System.Messaging.MessageQueueInstaller.#ctor(System.Messaging.MessageQueue)">
      <summary>Initializes a new instance of the <see cref="T:System.Messaging.MessageQueueInstaller" /> class, initializing the installation settings to those of an existing <see cref="T:System.Messaging.MessageQueue" /> instance.</summary>
      <param name="componentToCopy">The <see cref="T:System.Messaging.MessageQueue" /> component whose settings determine the property settings of the new queue installed. </param>
    </member>
    <member name="P:System.Messaging.MessageQueueInstaller.Authenticate">
      <summary>Gets or sets a value that indicates whether the queue to be installed accepts only authenticated messages.</summary>
      <returns>true if the queue accepts only authenticated messages; otherwise, false. The default is false.</returns>
    </member>
    <member name="P:System.Messaging.MessageQueueInstaller.BasePriority">
      <summary>Gets or sets the base priority that is used to route a public queue's messages over the network.</summary>
      <returns>The single base priority for all messages sent to the public queue. The default is zero (0).</returns>
    </member>
    <member name="P:System.Messaging.MessageQueueInstaller.Category">
      <summary>Gets or sets an implementation-specific queue type.</summary>
      <returns>A <see cref="T:System.Guid" /> that represents the queue category (or Message Queuing type identifier), which allows applications to categorize their queues according to how they are used. The default is Guid.empty.</returns>
    </member>
    <member name="M:System.Messaging.MessageQueueInstaller.Commit(System.Collections.IDictionary)">
      <summary>Completes the installation process by committing the <see cref="T:System.Messaging.MessageQueue" /> installation information that the <see cref="M:System.Messaging.MessageQueueInstaller.Install(System.Collections.IDictionary)" /> method wrote to the registry. This method is meant to be used by installation tools, which automatically call the appropriate methods.</summary>
      <param name="savedState">A <see cref="T:System.Collections.IDictionary" /> that contains the post-installation state of the computer. </param>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="ControlEvidence" />
        <IPermission class="System.Messaging.MessageQueuePermission, System.Messaging, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:System.Messaging.MessageQueueInstaller.CopyFromComponent(System.ComponentModel.IComponent)">
      <summary>Copies the property values of a <see cref="T:System.Messaging.MessageQueue" /> component that are required at install time for a message queue.</summary>
      <param name="component">A <see cref="T:System.ComponentModel.IComponent" /> to use as a template for the <see cref="T:System.Messaging.MessageQueueInstaller" />. </param>
      <exception cref="T:System.ArgumentException">The component associated with this <see cref="T:System.Messaging.MessageQueueInstaller" /> is not a <see cref="T:System.Messaging.MessageQueue" />. </exception>
    </member>
    <member name="P:System.Messaging.MessageQueueInstaller.EncryptionRequired">
      <summary>Gets or sets a value that indicates whether the queue accepts only private, or encrypted, messages.</summary>
      <returns>One of the <see cref="T:System.Messaging.EncryptionRequired" /> values that indicates the encryption level required on messages sent to the queue. The default is Optional.</returns>
    </member>
    <member name="M:System.Messaging.MessageQueueInstaller.Install(System.Collections.IDictionary)">
      <summary>Performs the installation and writes message queue information to the registry. This method is meant to be used by installation tools, which automatically call the appropriate methods.</summary>
      <param name="stateSaver">A <see cref="T:System.Collections.IDictionary" /> used to save information needed to perform a commit, rollback, or uninstall operation. </param>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Messaging.MessageQueuePermission, System.Messaging, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:System.Messaging.MessageQueueInstaller.IsEquivalentInstaller(System.Configuration.Install.ComponentInstaller)">
      <summary>Determines whether the specified installer can handle the same kind of installation as this installer.</summary>
      <returns>true if this installer and the installer specified by the <paramref name="otherInstaller" /> parameter can handle the same kind of installation; otherwise, false.</returns>
      <param name="otherInstaller">The installer to compare. </param>
    </member>
    <member name="P:System.Messaging.MessageQueueInstaller.Label">
      <summary>Gets or sets a description of the queue.</summary>
      <returns>The label that describes the message queue. The default is an empty string ("").</returns>
      <exception cref="T:System.ArgumentException">The <see cref="P:System.Messaging.MessageQueueInstaller.Label" /> is null. </exception>
    </member>
    <member name="P:System.Messaging.MessageQueueInstaller.MaximumJournalSize">
      <summary>Gets or sets the maximum size of the journal that is associated with the queue.</summary>
      <returns>The maximum size, in kilobytes, of the journal queue, which records messages that are removed from the queue. The Message Queuing default is no limit.</returns>
    </member>
    <member name="P:System.Messaging.MessageQueueInstaller.MaximumQueueSize">
      <summary>Gets or sets the maximum size of the queue.</summary>
      <returns>The maximum size, in kilobytes, of the queue. The Message Queuing default is no limit.</returns>
    </member>
    <member name="P:System.Messaging.MessageQueueInstaller.MulticastAddress">
      <summary>Introduced in MSMQ 3.0. Gets or sets the multicast address associated with the queue.</summary>
      <returns>A <see cref="T:System.String" /> that contains a valid multicast address (in the form shown below) or null, which indicates that the queue is not associated with a multicast address. Copy Code&lt;address&gt;:&lt;port&gt;
</returns>
      <exception cref="T:System.PlatformNotSupportedException">MSMQ 3.0 is not installed.</exception>
    </member>
    <member name="P:System.Messaging.MessageQueueInstaller.Path">
      <summary>Gets or sets the location of the queue that is referenced by this object.</summary>
      <returns>The path that represents the location of the queue in the network.</returns>
      <exception cref="T:System.ArgumentException">The <see cref="P:System.Messaging.MessageQueueInstaller.Path" /> was set to an invalid value, possibly because the syntax is not valid.-or- The <see cref="P:System.Messaging.MessageQueueInstaller.Path" /> is null. </exception>
    </member>
    <member name="P:System.Messaging.MessageQueueInstaller.Permissions">
      <summary>Gets or sets permissions associated with the queue.</summary>
      <returns>A <see cref="T:System.Messaging.AccessControlList" /> that contains one or more access control entries that specify the trustees and permissions to grant for the queue.</returns>
    </member>
    <member name="M:System.Messaging.MessageQueueInstaller.Rollback(System.Collections.IDictionary)">
      <summary>Restores the computer to the state it was in before the installation, by rolling back the queue information that the installation procedure wrote to the registry. This method is meant to be used by installation tools, which automatically call the appropriate methods.</summary>
      <param name="savedState">A <see cref="T:System.Collections.IDictionary" /> that contains the pre-installation state of the computer. </param>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="ControlEvidence" />
        <IPermission class="System.Messaging.MessageQueuePermission, System.Messaging, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="P:System.Messaging.MessageQueueInstaller.Transactional">
      <summary>Gets or sets a value that indicates whether the queue accepts only messages sent as part of a transaction.</summary>
      <returns>true if the queue can only accept messages sent as part of a transaction; otherwise, false. The default is false.</returns>
    </member>
    <member name="M:System.Messaging.MessageQueueInstaller.Uninstall(System.Collections.IDictionary)">
      <summary>Removes an installation by removing queue information from the registry. This method is meant to be used by uninstallation tools, which automatically call the appropriate methods.</summary>
      <param name="savedState">A <see cref="T:System.Collections.IDictionary" /> that contains the post-installation state of the computer. </param>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="ControlEvidence" />
        <IPermission class="System.Messaging.MessageQueuePermission, System.Messaging, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="P:System.Messaging.MessageQueueInstaller.UninstallAction">
      <summary>Gets or sets a value that indicates what the installer does with the queue at uninstall time: remove it, restore it to its pre-installation state, or leave it in its current installed state.</summary>
      <returns>One of the <see cref="T:System.Configuration.Install.UninstallAction" /> values that indicates what state to leave the queue in when the <see cref="T:System.Messaging.MessageQueue" /> is uninstalled. The default is Remove.</returns>
    </member>
    <member name="P:System.Messaging.MessageQueueInstaller.UseJournalQueue">
      <summary>Gets or sets a value that indicates whether messages that are retrieved from the queue are also copied to the associated journal queue.</summary>
      <returns>true to copy messages that are retrieved from the queue to the journal queue; otherwise, false. The default is false.</returns>
    </member>
    <member name="T:System.Messaging.MessageQueuePermission">
      <summary>Allows control of code access permissions for messaging.</summary>
    </member>
    <member name="M:System.Messaging.MessageQueuePermission.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Messaging.MessageQueuePermission" /> class.</summary>
    </member>
    <member name="M:System.Messaging.MessageQueuePermission.#ctor(System.Messaging.MessageQueuePermissionAccess,System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.Messaging.MessageQueuePermission" /> class with the specified access levels and the path of the queue.</summary>
      <param name="permissionAccess">One of the <see cref="T:System.Messaging.MessageQueuePermissionAccess" /> values. </param>
      <param name="path">The path of the queue that is referenced by the <see cref="T:System.Messaging.MessageQueue" />. </param>
    </member>
    <member name="M:System.Messaging.MessageQueuePermission.#ctor(System.Messaging.MessageQueuePermissionAccess,System.String,System.String,System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.Messaging.MessageQueuePermission" /> class with the specified access levels, computer to use, queue description, and queue category.</summary>
      <param name="permissionAccess">One of the <see cref="T:System.Messaging.MessageQueuePermissionAccess" /> values. </param>
      <param name="machineName">The name of the computer where the Message Queuing queue is located. </param>
      <param name="label">The queue description. </param>
      <param name="category">The queue category (Message Queuing type identifier). </param>
    </member>
    <member name="M:System.Messaging.MessageQueuePermission.#ctor(System.Messaging.MessageQueuePermissionEntry[])">
      <summary>Initializes a new instance of the <see cref="T:System.Messaging.MessageQueuePermission" /> class with the specified permission access level entries.</summary>
      <param name="permissionAccessEntries">An array of <see cref="T:System.Messaging.MessageQueuePermissionEntry" /> objects. The <see cref="P:System.Messaging.MessageQueuePermission.PermissionEntries" /> property is set to this value. </param>
    </member>
    <member name="M:System.Messaging.MessageQueuePermission.#ctor(System.Security.Permissions.PermissionState)">
      <summary>Initializes a new instance of the <see cref="T:System.Messaging.MessageQueuePermission" /> class with the specified permission state.</summary>
      <param name="state">One of the <see cref="T:System.Security.Permissions.PermissionState" /> values. </param>
    </member>
    <member name="M:System.Messaging.MessageQueuePermission.Copy">
      <summary>Creates and returns an identical copy of the current permission object.</summary>
      <returns>A copy of the current permission object.</returns>
    </member>
    <member name="M:System.Messaging.MessageQueuePermission.FromXml(System.Security.SecurityElement)">
      <summary>Reconstructs a security object with a specified state from an XML encoding.</summary>
      <param name="securityElement">The XML encoding to use to reconstruct the security object. </param>
    </member>
    <member name="M:System.Messaging.MessageQueuePermission.Intersect(System.Security.IPermission)">
      <summary>Returns a new permission object that represents the intersection of the current permission object and the specified permission object.</summary>
      <returns>A new permission object that represents the intersection of the current permission object and the specified permission object. This new permission object is a null reference (Nothing in Visual Basic) if the intersection is empty.</returns>
      <param name="target">A permission object to intersect with the current permission object. It must be of the same type as the current permission object. </param>
    </member>
    <member name="M:System.Messaging.MessageQueuePermission.IsSubsetOf(System.Security.IPermission)">
      <summary>Returns a value that indicates whether the current permission object is a subset of the specified permission object.</summary>
      <returns>true if the current permission object is a subset of the specified permission object; otherwise, false.</returns>
      <param name="target">A permission object that is to be tested for the subset relationship. This object must be of the same type as the current permission object. </param>
    </member>
    <member name="M:System.Messaging.MessageQueuePermission.IsUnrestricted">
      <summary>Returns a value that indicates whether the permission can be represented as unrestricted without any knowledge of the permission semantics.</summary>
      <returns>true if the permission can be represented as unrestricted; otherwise, false.</returns>
    </member>
    <member name="P:System.Messaging.MessageQueuePermission.PermissionEntries">
      <summary>Gets the collection of permission entries for this permissions request.</summary>
      <returns>A <see cref="T:System.Messaging.MessageQueuePermissionEntryCollection" /> that contains the permission entries for this permissions request.</returns>
    </member>
    <member name="M:System.Messaging.MessageQueuePermission.ToXml">
      <summary>Creates an XML encoding of the security object and its current state.</summary>
      <returns>An XML encoding of the security object, including any state information.</returns>
    </member>
    <member name="M:System.Messaging.MessageQueuePermission.Union(System.Security.IPermission)">
      <summary>Returns a new permission object that is the union of the current and specified permission objects.</summary>
      <returns>A new permission object that represents the union of the current permission object and the specified permission object.</returns>
      <param name="target">A permission object to combine with the current permission object. It must be of the same type as the current permission object. </param>
    </member>
    <member name="T:System.Messaging.MessageQueuePermissionAccess">
      <summary>Defines access levels used by <see cref="N:System.Messaging" /> permission classes.</summary>
    </member>
    <member name="F:System.Messaging.MessageQueuePermissionAccess.None">
      <summary>The <see cref="T:System.Messaging.MessageQueue" /> has no permissions.</summary>
    </member>
    <member name="F:System.Messaging.MessageQueuePermissionAccess.Browse">
      <summary>The <see cref="T:System.Messaging.MessageQueue" /> can look at the queues that are available.</summary>
    </member>
    <member name="F:System.Messaging.MessageQueuePermissionAccess.Send">
      <summary>The <see cref="T:System.Messaging.MessageQueue" /> can look at the queues that are available and send messages.</summary>
    </member>
    <member name="F:System.Messaging.MessageQueuePermissionAccess.Peek">
      <summary>The <see cref="T:System.Messaging.MessageQueue" /> can look at the queues that are available and read the messages in the queue.</summary>
    </member>
    <member name="F:System.Messaging.MessageQueuePermissionAccess.Receive">
      <summary>The <see cref="T:System.Messaging.MessageQueue" /> can look at the queues that are available, read the messages in the queue, and receive messages.</summary>
    </member>
    <member name="F:System.Messaging.MessageQueuePermissionAccess.Administer">
      <summary>The <see cref="T:System.Messaging.MessageQueue" /> can look at the queues that are available, read the messages in the queue, and send and receive messages.</summary>
    </member>
    <member name="T:System.Messaging.MessageQueuePermissionAttribute">
      <summary>Allows declarative <see cref="T:System.Messaging.MessageQueue" /> permission checks.</summary>
    </member>
    <member name="M:System.Messaging.MessageQueuePermissionAttribute.#ctor(System.Security.Permissions.SecurityAction)">
      <summary>Initializes a new instance of the <see cref="T:System.Messaging.MessageQueuePermissionAttribute" /> class.</summary>
      <param name="action">One of the <see cref="T:System.Security.Permissions.SecurityAction" /> values. </param>
    </member>
    <member name="P:System.Messaging.MessageQueuePermissionAttribute.Category">
      <summary>Gets or sets the queue category.</summary>
      <returns>The queue category (Message Queuing type identifier), which allows an application to categorize its queues.</returns>
      <exception cref="T:System.InvalidOperationException">The value is null. </exception>
    </member>
    <member name="M:System.Messaging.MessageQueuePermissionAttribute.CreatePermission">
      <summary>Creates the permission based on the requested access levels, category, label, computer name, and path that are set through the <see cref="P:System.Messaging.MessageQueuePermissionAttribute.PermissionAccess" />, <see cref="P:System.Messaging.MessageQueuePermissionAttribute.Category" />, <see cref="P:System.Messaging.MessageQueuePermissionAttribute.Label" />, <see cref="P:System.Messaging.MessageQueuePermissionAttribute.MachineName" />, and <see cref="P:System.Messaging.MessageQueuePermissionAttribute.Path" /> properties on the attribute.</summary>
      <returns>A <see cref="T:System.Security.IPermission" /> that represents the created permission.</returns>
    </member>
    <member name="P:System.Messaging.MessageQueuePermissionAttribute.Label">
      <summary>Gets or sets the queue description.</summary>
      <returns>The label for the message queue.</returns>
      <exception cref="T:System.InvalidOperationException">The value is null. </exception>
    </member>
    <member name="P:System.Messaging.MessageQueuePermissionAttribute.MachineName">
      <summary>Gets or sets the name of the computer where the Message Queuing queue is located.</summary>
      <returns>The name of the computer where the queue is located.</returns>
      <exception cref="T:System.InvalidOperationException">The value is null. </exception>
    </member>
    <member name="P:System.Messaging.MessageQueuePermissionAttribute.Path">
      <summary>Gets or sets the queue's path.</summary>
      <returns>The queue that is referenced by the <see cref="T:System.Messaging.MessageQueue" />.</returns>
      <exception cref="T:System.InvalidOperationException">The value is null. </exception>
    </member>
    <member name="P:System.Messaging.MessageQueuePermissionAttribute.PermissionAccess">
      <summary>Gets or sets the permission access levels used in the permissions request.</summary>
      <returns>A bitwise combination of the <see cref="T:System.Messaging.MessageQueuePermissionAccess" /> values.</returns>
    </member>
    <member name="T:System.Messaging.MessageQueuePermissionEntry">
      <summary>Defines the smallest unit of a code access security permission set for messaging.</summary>
    </member>
    <member name="M:System.Messaging.MessageQueuePermissionEntry.#ctor(System.Messaging.MessageQueuePermissionAccess,System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.Messaging.MessageQueuePermissionEntry" /> class with the specified permission access levels and the path of the queue.</summary>
      <param name="permissionAccess">A bitwise combination of the <see cref="T:System.Messaging.MessageQueuePermissionAccess" /> values. The <see cref="P:System.Messaging.MessageQueuePermissionEntry.PermissionAccess" /> property is set to this value. </param>
      <param name="path">The path of the queue that is referenced by the <see cref="T:System.Messaging.MessageQueue" /> object. The <see cref="P:System.Messaging.MessageQueuePermissionEntry.Path" /> property is set to this value. </param>
    </member>
    <member name="M:System.Messaging.MessageQueuePermissionEntry.#ctor(System.Messaging.MessageQueuePermissionAccess,System.String,System.String,System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.Messaging.MessageQueuePermissionEntry" /> class with the specified permission access levels, the name of the computer where the queue is located, the queue description, and the queue category.</summary>
      <param name="permissionAccess">A bitwise combination of the <see cref="T:System.Messaging.MessageQueuePermissionAccess" /> values. The <see cref="P:System.Messaging.MessageQueuePermissionEntry.PermissionAccess" /> property is set to this value. </param>
      <param name="machineName">The name of the computer where the Message Queuing queue is located. The <see cref="P:System.Messaging.MessageQueuePermissionEntry.MachineName" /> property is set to this value. </param>
      <param name="label">The queue description. The <see cref="P:System.Messaging.MessageQueuePermissionEntry.Label" /> property is set to this value. </param>
      <param name="category">The queue category (Message Queuing type identifier). The <see cref="P:System.Messaging.MessageQueuePermissionEntry.Category" /> property is set to this value. </param>
    </member>
    <member name="P:System.Messaging.MessageQueuePermissionEntry.Category">
      <summary>Gets the queue category.</summary>
      <returns>The queue category (Message Queuing type identifier), which allows an application to categorize its queues.</returns>
    </member>
    <member name="P:System.Messaging.MessageQueuePermissionEntry.Label">
      <summary>Gets the queue description.</summary>
      <returns>The label for the message queue.</returns>
    </member>
    <member name="P:System.Messaging.MessageQueuePermissionEntry.MachineName">
      <summary>Gets the name of the computer where the Message Queuing queue is located.</summary>
      <returns>The name of the computer where the queue is located.</returns>
    </member>
    <member name="P:System.Messaging.MessageQueuePermissionEntry.Path">
      <summary>Gets the queue's path.</summary>
      <returns>The queue that is referenced by the <see cref="T:System.Messaging.MessageQueue" />.</returns>
    </member>
    <member name="P:System.Messaging.MessageQueuePermissionEntry.PermissionAccess">
      <summary>Gets the permission access levels used in the permissions request.</summary>
      <returns>A bitwise combination of the <see cref="T:System.Messaging.MessageQueuePermissionAccess" /> values.</returns>
    </member>
    <member name="T:System.Messaging.MessageQueuePermissionEntryCollection">
      <summary>Contains a strongly typed collection of <see cref="T:System.Messaging.MessageQueuePermissionEntry" /> objects.</summary>
    </member>
    <member name="M:System.Messaging.MessageQueuePermissionEntryCollection.Add(System.Messaging.MessageQueuePermissionEntry)">
      <summary>Adds a specified <see cref="T:System.Messaging.MessageQueuePermissionEntry" /> to this collection.</summary>
      <returns>The zero-based index of the added <see cref="T:System.Messaging.MessageQueuePermissionEntry" />.</returns>
      <param name="value">The <see cref="T:System.Messaging.MessageQueuePermissionEntry" /> to add. </param>
    </member>
    <member name="M:System.Messaging.MessageQueuePermissionEntryCollection.AddRange(System.Messaging.MessageQueuePermissionEntry[])">
      <summary>Appends a set of specified permission entries to this collection.</summary>
      <param name="value">An array of type <see cref="T:System.Messaging.MessageQueuePermissionEntry" /> objects that contains the permission entries to add. </param>
    </member>
    <member name="M:System.Messaging.MessageQueuePermissionEntryCollection.AddRange(System.Messaging.MessageQueuePermissionEntryCollection)">
      <summary>Appends a set of specified permission entries to this collection.</summary>
      <param name="value">A <see cref="T:System.Messaging.MessageQueuePermissionEntryCollection" /> that contains the permission entries to add. </param>
    </member>
    <member name="M:System.Messaging.MessageQueuePermissionEntryCollection.Contains(System.Messaging.MessageQueuePermissionEntry)">
      <summary>Determines whether this collection contains a specified <see cref="T:System.Messaging.MessageQueuePermissionEntry" />.</summary>
      <returns>true if the specified <see cref="T:System.Messaging.MessageQueuePermissionEntry" /> belongs to this collection; otherwise, false.</returns>
      <param name="value">The <see cref="T:System.Messaging.MessageQueuePermissionEntry" /> to find. </param>
    </member>
    <member name="M:System.Messaging.MessageQueuePermissionEntryCollection.CopyTo(System.Messaging.MessageQueuePermissionEntry[],System.Int32)">
      <summary>Copies the permission entries from this collection to an array, starting at a particular index of the array.</summary>
      <param name="array">An array of type <see cref="T:System.Messaging.MessageQueuePermissionEntry" /> that receives this collection's permission entries. </param>
      <param name="index">The zero-based index at which to begin copying the permission entries. </param>
    </member>
    <member name="M:System.Messaging.MessageQueuePermissionEntryCollection.IndexOf(System.Messaging.MessageQueuePermissionEntry)">
      <summary>Determines the index of a specified permission entry in this collection.</summary>
      <returns>The zero-based index of the specified permission entry, or -1 if the permission entry was not found in the collection.</returns>
      <param name="value">The permission entry to search for. </param>
    </member>
    <member name="M:System.Messaging.MessageQueuePermissionEntryCollection.Insert(System.Int32,System.Messaging.MessageQueuePermissionEntry)">
      <summary>Inserts a permission entry into this collection at a specified index.</summary>
      <param name="index">The zero-based index into the collection at which to insert the permission entry. </param>
      <param name="value">The permission entry to insert into this collection. </param>
    </member>
    <member name="P:System.Messaging.MessageQueuePermissionEntryCollection.Item(System.Int32)">
      <summary>Gets or sets the object at a specified index.</summary>
      <returns>The <see cref="T:System.Messaging.MessageQueuePermissionEntry" /> that exists at the specified index.</returns>
      <param name="index">The zero-based index into the collection. </param>
    </member>
    <member name="M:System.Messaging.MessageQueuePermissionEntryCollection.OnClear">
      <summary>Performs additional custom processes after clearing the contents of the collection.</summary>
    </member>
    <member name="M:System.Messaging.MessageQueuePermissionEntryCollection.OnInsert(System.Int32,System.Object)">
      <summary>Performs additional custom processes before a new permission entry is inserted into the collection.</summary>
      <param name="index">The zero-based index at which to insert <paramref name="value" />. </param>
      <param name="value">The new value of the permission entry at <paramref name="index" />. </param>
    </member>
    <member name="M:System.Messaging.MessageQueuePermissionEntryCollection.OnRemove(System.Int32,System.Object)">
      <summary>Performs additional custom processes when removing a new permission entry from the collection.</summary>
      <param name="index">The zero-based index at which <paramref name="value" /> can be found. </param>
      <param name="value">The permission entry to remove from <paramref name="index" />. </param>
    </member>
    <member name="M:System.Messaging.MessageQueuePermissionEntryCollection.OnSet(System.Int32,System.Object,System.Object)">
      <summary>Performs additional custom processes before setting a value in the collection.</summary>
      <param name="index">The zero-based index at which <paramref name="oldValue" /> can be found.</param>
      <param name="oldValue">The value to replace with <paramref name="newValue" />. </param>
      <param name="newValue">The new value of the permission entry at <paramref name="index" />. </param>
    </member>
    <member name="M:System.Messaging.MessageQueuePermissionEntryCollection.Remove(System.Messaging.MessageQueuePermissionEntry)">
      <summary>Removes a specified permission entry from this collection.</summary>
      <param name="value">The permission entry to remove. </param>
    </member>
    <member name="T:System.Messaging.MessageQueueTransaction">
      <summary>Provides a Message Queuing internal transaction.</summary>
    </member>
    <member name="M:System.Messaging.MessageQueueTransaction.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Messaging.MessageQueueTransaction" /> class.</summary>
    </member>
    <member name="M:System.Messaging.MessageQueueTransaction.Abort">
      <summary>Rolls back the pending internal transaction.</summary>
      <exception cref="T:System.InvalidOperationException">The internal transaction you are attempting to roll back has not started. </exception>
      <exception cref="T:System.Messaging.MessageQueueException">An internal Message Queuing error occurs. </exception>
    </member>
    <member name="M:System.Messaging.MessageQueueTransaction.Begin">
      <summary>Begins a new Message Queuing internal transaction.</summary>
      <exception cref="T:System.InvalidOperationException">The transaction has already been started. </exception>
      <exception cref="T:System.Messaging.MessageQueueException">An internal Message Queuing error occurs. </exception>
    </member>
    <member name="M:System.Messaging.MessageQueueTransaction.Commit">
      <summary>Commits a pending internal transaction.</summary>
      <exception cref="T:System.InvalidOperationException">The transaction you are trying to commit has not started. </exception>
      <exception cref="T:System.Messaging.MessageQueueException">An internal Message Queuing error occurs. </exception>
    </member>
    <member name="M:System.Messaging.MessageQueueTransaction.Dispose">
      <summary>Releases all resources used by the <see cref="T:System.Messaging.MessageQueueTransaction" />.</summary>
    </member>
    <member name="M:System.Messaging.MessageQueueTransaction.Dispose(System.Boolean)">
      <summary>Releases the unmanaged resources used by the <see cref="T:System.Messaging.MessageQueueTransaction" /> and optionally releases the managed resources.</summary>
      <param name="disposing">true to release both managed and unmanaged resources; false to release only unmanaged resources. </param>
    </member>
    <member name="M:System.Messaging.MessageQueueTransaction.Finalize">
      <summary>Releases the resources held by the current instance.</summary>
    </member>
    <member name="P:System.Messaging.MessageQueueTransaction.Status">
      <summary>Gets the status of the transaction.</summary>
      <returns>One of the <see cref="T:System.Messaging.MessageQueueTransactionStatus" /> values that indicates whether the transaction has been committed, aborted, initialized, or is pending.</returns>
    </member>
    <member name="T:System.Messaging.MessageQueueTransactionStatus">
      <summary>Specifies the state of an internal Message Queuing transaction.</summary>
    </member>
    <member name="F:System.Messaging.MessageQueueTransactionStatus.Aborted">
      <summary>The transaction has been aborted and all participants have been notified.</summary>
    </member>
    <member name="F:System.Messaging.MessageQueueTransactionStatus.Committed">
      <summary>The transaction has been committed and all participants have been notified.</summary>
    </member>
    <member name="F:System.Messaging.MessageQueueTransactionStatus.Initialized">
      <summary>The transaction has been initialized. It has not yet been started.</summary>
    </member>
    <member name="F:System.Messaging.MessageQueueTransactionStatus.Pending">
      <summary>The transaction has been started. It has not yet been either committed or rolled back.</summary>
    </member>
    <member name="T:System.Messaging.MessageQueueTransactionType">
      <summary>Specifies the type of a Message Queuing transaction.</summary>
    </member>
    <member name="F:System.Messaging.MessageQueueTransactionType.None">
      <summary>Operation will not be transactional.</summary>
    </member>
    <member name="F:System.Messaging.MessageQueueTransactionType.Automatic">
      <summary>A transaction type used for Microsoft Transaction Server (MTS) or COM+ 1.0 Services. If there is already an MTS transaction context, it will be used when sending or receiving the message.</summary>
    </member>
    <member name="F:System.Messaging.MessageQueueTransactionType.Single">
      <summary>A transaction type used for single internal transactions.</summary>
    </member>
    <member name="T:System.Messaging.MessageType">
      <summary>Identifies the type of a message. A message can be a typical Message Queuing message, a positive (arrival and read) or negative (arrival and read) acknowledgment message, or a report message.</summary>
    </member>
    <member name="F:System.Messaging.MessageType.Acknowledgment">
      <summary>An acknowledgment message.</summary>
    </member>
    <member name="F:System.Messaging.MessageType.Normal">
      <summary>A normal Message Queuing message.</summary>
    </member>
    <member name="F:System.Messaging.MessageType.Report">
      <summary>A report message.</summary>
    </member>
    <member name="T:System.Messaging.MessagingDescriptionAttribute">
      <summary>Specifies a description for a property or event.</summary>
    </member>
    <member name="M:System.Messaging.MessagingDescriptionAttribute.#ctor(System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.Messaging.MessagingDescriptionAttribute" /> class, using the specified description.</summary>
      <param name="description">The application-defined description text. </param>
    </member>
    <member name="P:System.Messaging.MessagingDescriptionAttribute.Description">
      <summary>Gets description text associated with the item monitored.</summary>
      <returns>An application-defined description.</returns>
    </member>
    <member name="T:System.Messaging.PeekAction">
      <summary>Indicates whether to peek the current message in a queue, or the next message.</summary>
    </member>
    <member name="F:System.Messaging.PeekAction.Current">
      <summary>Peek at the current message in the queue.</summary>
    </member>
    <member name="F:System.Messaging.PeekAction.Next">
      <summary>Peek at the next message in the queue.</summary>
    </member>
    <member name="T:System.Messaging.PeekCompletedEventArgs">
      <summary>Provides data for the <see cref="E:System.Messaging.MessageQueue.PeekCompleted" /> event. When your asynchronous peek operation calls an event handler, an instance of this class is passed to the handler.</summary>
    </member>
    <member name="P:System.Messaging.PeekCompletedEventArgs.AsyncResult">
      <summary>Gets or sets the result of the asynchronous operation requested.</summary>
      <returns>A <see cref="T:System.IAsyncResult" /> that contains the data associated with the peek operation.</returns>
    </member>
    <member name="P:System.Messaging.PeekCompletedEventArgs.Message">
      <summary>Gets the message associated with the asynchronous peek operation.</summary>
      <returns>A <see cref="T:System.Messaging.Message" /> that represents the end result of the asynchronous peek operation.</returns>
      <exception cref="T:System.Messaging.MessageQueueException">The <see cref="P:System.Messaging.PeekCompletedEventArgs.Message" /> could not be retrieved. The time-out on the asynchronous operation might have expired. </exception>
    </member>
    <member name="T:System.Messaging.PeekCompletedEventHandler">
      <summary>Represents the method that will handle the <see cref="E:System.Messaging.MessageQueue.PeekCompleted" /> event of a <see cref="T:System.Messaging.MessageQueue" />.</summary>
      <param name="sender">The source of the event, the <see cref="T:System.Messaging.MessageQueue" />. </param>
      <param name="e">A <see cref="T:System.Messaging.PeekCompletedEventArgs" /> that contains the event data. </param>
    </member>
    <member name="T:System.Messaging.QueueAccessMode">
      <summary>Specifies the access mode for a <see cref="T:System.Messaging.MessageQueue" /> at creation time.</summary>
    </member>
    <member name="F:System.Messaging.QueueAccessMode.Send">
      <summary>The queue can only send messages.</summary>
    </member>
    <member name="F:System.Messaging.QueueAccessMode.Peek">
      <summary>The queue can only peek at messages.</summary>
    </member>
    <member name="F:System.Messaging.QueueAccessMode.Receive">
      <summary>The queue can peek at or receive messages.</summary>
    </member>
    <member name="F:System.Messaging.QueueAccessMode.PeekAndAdmin">
      <summary>The queue can peek at messages. It can also be purged.</summary>
    </member>
    <member name="F:System.Messaging.QueueAccessMode.ReceiveAndAdmin">
      <summary>The queue can receive messages. It can also be purged.</summary>
    </member>
    <member name="F:System.Messaging.QueueAccessMode.SendAndReceive">
      <summary>The queue can peek at, receive, or send messages.</summary>
    </member>
    <member name="T:System.Messaging.ReceiveCompletedEventArgs">
      <summary>Provides data for the <see cref="E:System.Messaging.MessageQueue.ReceiveCompleted" /> event. When your asynchronous receive operation calls an event handler, an instance of this class is passed to the handler.</summary>
    </member>
    <member name="P:System.Messaging.ReceiveCompletedEventArgs.AsyncResult">
      <summary>Gets or sets the result of the asynchronous operation requested.</summary>
      <returns>A <see cref="T:System.IAsyncResult" /> that contains the data associated with the receive operation.</returns>
    </member>
    <member name="P:System.Messaging.ReceiveCompletedEventArgs.Message">
      <summary>Gets the message associated with the asynchronous receive operation.</summary>
      <returns>A <see cref="T:System.Messaging.Message" /> that represents the end result of the asynchronous receive operation.</returns>
      <exception cref="T:System.Messaging.MessageQueueException">The <see cref="P:System.Messaging.ReceiveCompletedEventArgs.Message" /> could not be retrieved. The time-out on the asynchronous operation might have expired. </exception>
    </member>
    <member name="T:System.Messaging.ReceiveCompletedEventHandler">
      <summary>Represents the method that will handle the <see cref="E:System.Messaging.MessageQueue.ReceiveCompleted" /> event of a <see cref="T:System.Messaging.MessageQueue" />.</summary>
      <param name="sender">The source of the event, the <see cref="T:System.Messaging.MessageQueue" />. </param>
      <param name="e">A <see cref="T:System.Messaging.ReceiveCompletedEventArgs" /> that contains the event data. </param>
    </member>
    <member name="T:System.Messaging.SecurityContext">
      <summary>Represents the security context for a message in a queue.</summary>
    </member>
    <member name="M:System.Messaging.SecurityContext.Dispose">
      <summary>Releases all resources used by the <see cref="T:System.Messaging.SecurityContext" />.</summary>
    </member>
    <member name="T:System.Messaging.StandardAccessRights">
      <summary>Specifies a set of standard access rights that correspond to operations common to most types of securable objects.</summary>
    </member>
    <member name="F:System.Messaging.StandardAccessRights.Delete">
      <summary>The right to delete the object.</summary>
    </member>
    <member name="F:System.Messaging.StandardAccessRights.ReadSecurity">
      <summary>The right to read the information in the object's security descriptor.</summary>
    </member>
    <member name="F:System.Messaging.StandardAccessRights.WriteSecurity">
      <summary>The right to modify the discretionary access control list (DACL) in the security descriptor.</summary>
    </member>
    <member name="F:System.Messaging.StandardAccessRights.Synchronize">
      <summary>The right to use the object for synchronization. This enables a thread to wait until the object is in a specific state.</summary>
    </member>
    <member name="F:System.Messaging.StandardAccessRights.ModifyOwner">
      <summary>The right to change the owner in the object's security descriptor.</summary>
    </member>
    <member name="F:System.Messaging.StandardAccessRights.Read">
      <summary>The right to read the information in the object's security descriptor. Read is currently defined to equal ReadSecurity.</summary>
    </member>
    <member name="F:System.Messaging.StandardAccessRights.Write">
      <summary>The right to read the information in the object's security descriptor. Write is currently defined to equal ReadSecurity.</summary>
    </member>
    <member name="F:System.Messaging.StandardAccessRights.Execute">
      <summary>The right to read the information in the object's security descriptor. On Windows 2000 and Windows NT, the security descriptor contains the security information for a securable object. It identifies the object's owner and primary group. Execute is currently defined to equal ReadSecurity.</summary>
    </member>
    <member name="F:System.Messaging.StandardAccessRights.Required">
      <summary>Combines Delete, ReadSecurity, WriteSecurity, and ModifyOwner access.</summary>
    </member>
    <member name="F:System.Messaging.StandardAccessRights.All">
      <summary>Combines Delete, ReadSecurity, WriteSecurity, ModifyOwner, and Synchronize access.</summary>
    </member>
    <member name="F:System.Messaging.StandardAccessRights.None">
      <summary>No access.</summary>
    </member>
    <member name="T:System.Messaging.Trustee">
      <summary>Specifies a user account, group account, or logon session to which an access control entry applies.</summary>
    </member>
    <member name="M:System.Messaging.Trustee.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Messaging.Trustee" /> class without setting any of its read/write properties.</summary>
    </member>
    <member name="M:System.Messaging.Trustee.#ctor(System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.Messaging.Trustee" /> class of type Unknown, setting the <see cref="P:System.Messaging.Trustee.Name" /> property to the value specified, and the <see cref="P:System.Messaging.Trustee.SystemName" /> to null.</summary>
      <param name="name">The value to assign to the <see cref="P:System.Messaging.Trustee.Name" /> property. </param>
      <exception cref="T:System.ArgumentNullException">The <paramref name="name" /> parameter is null. </exception>
    </member>
    <member name="M:System.Messaging.Trustee.#ctor(System.String,System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.Messaging.Trustee" /> class of type Unknown, setting the <see cref="P:System.Messaging.Trustee.Name" /> and the SystemName properties to the values specified.</summary>
      <param name="name">The value to assign to the <see cref="P:System.Messaging.Trustee.Name" /> property. </param>
      <param name="systemName">The value to assign to the <see cref="P:System.Messaging.Trustee.SystemName" /> property. </param>
      <exception cref="T:System.ArgumentNullException">The <paramref name="name" /> parameter is null. </exception>
    </member>
    <member name="M:System.Messaging.Trustee.#ctor(System.String,System.String,System.Messaging.TrusteeType)">
      <summary>Initializes a new instance of the <see cref="T:System.Messaging.Trustee" /> class of the specified type, setting the <see cref="P:System.Messaging.Trustee.Name" /> and the <see cref="P:System.Messaging.Trustee.SystemName" /> properties to the values specified.</summary>
      <param name="name">The value to assign to the <see cref="P:System.Messaging.Trustee.Name" /> property. </param>
      <param name="systemName">The value to assign to the <see cref="P:System.Messaging.Trustee.SystemName" /> property. </param>
      <param name="trusteeType">A <see cref="T:System.Messaging.TrusteeType" /> that indicates the account type of the trustee. </param>
      <exception cref="T:System.ArgumentNullException">The <paramref name="name" /> parameter is null. </exception>
    </member>
    <member name="P:System.Messaging.Trustee.Name">
      <summary>Gets or sets the name of the trustee.</summary>
      <returns>The name of the account to which the new rights will be assigned. The default is null.</returns>
      <exception cref="T:System.ArgumentNullException">The <see cref="P:System.Messaging.Trustee.Name" /> property is null. </exception>
    </member>
    <member name="P:System.Messaging.Trustee.SystemName">
      <summary>Gets or sets the computer on which to look up the trustee's account.</summary>
      <returns>The local or remote computer on which the account exists. The default is null, which indicates that the name will be looked up on the local computer.</returns>
    </member>
    <member name="P:System.Messaging.Trustee.TrusteeType">
      <summary>Gets or sets the type of the trustee, which identifies whether the trustee is a user, group, computer, domain, or alias.</summary>
      <returns>A <see cref="T:System.Messaging.TrusteeType" /> that indicates what type of account the trustee has on the system. The default is Unknown.</returns>
      <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">The trustee type specified is not one of the <see cref="T:System.Messaging.TrusteeType" /> enumeration members. </exception>
    </member>
    <member name="T:System.Messaging.TrusteeType">
      <summary>Specifies the type of a trustee.</summary>
    </member>
    <member name="F:System.Messaging.TrusteeType.Unknown">
      <summary>The trustee type is unknown, but not necessarily invalid.</summary>
    </member>
    <member name="F:System.Messaging.TrusteeType.User">
      <summary>The trustee is a user.</summary>
    </member>
    <member name="F:System.Messaging.TrusteeType.Group">
      <summary>The trustee is a group.</summary>
    </member>
    <member name="F:System.Messaging.TrusteeType.Domain">
      <summary>The trustee is a domain.</summary>
    </member>
    <member name="F:System.Messaging.TrusteeType.Alias">
      <summary>The trustee is an alias.</summary>
    </member>
    <member name="F:System.Messaging.TrusteeType.Computer">
      <summary>The trustee is a computer.</summary>
    </member>
    <member name="T:System.Messaging.XmlMessageFormatter">
      <summary>Serializes and deserializes objects to or from the body of a message, using the XML format based on the XSD schema definition.</summary>
    </member>
    <member name="M:System.Messaging.XmlMessageFormatter.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Messaging.XmlMessageFormatter" /> class, without target types set.</summary>
    </member>
    <member name="M:System.Messaging.XmlMessageFormatter.#ctor(System.String[])">
      <summary>Initializes a new instance of the <see cref="T:System.Messaging.XmlMessageFormatter" /> class, setting target types passed in as an array of (fully qualified) string values.</summary>
      <param name="targetTypeNames">An array of type <see cref="T:System.String" /> that specifies the set of possible types that will be deserialized by the formatter from the message provided. These values must be fully qualified, for example, "MyNamespace.MyOrders, MyOrdersAssemblyName". </param>
      <exception cref="T:System.ArgumentNullException">The <paramref name="targetTypeNames" /> parameter is null. </exception>
    </member>
    <member name="M:System.Messaging.XmlMessageFormatter.#ctor(System.Type[])">
      <summary>Initializes a new instance of the <see cref="T:System.Messaging.XmlMessageFormatter" /> class, setting target types passed in as an array of object types.</summary>
      <param name="targetTypes">An array of type <see cref="T:System.Type" /> that specifies the set of possible types that will be deserialized by the formatter from the message provided. </param>
      <exception cref="T:System.ArgumentNullException">The <paramref name="targetTypes" /> parameter is null. </exception>
    </member>
    <member name="M:System.Messaging.XmlMessageFormatter.CanRead(System.Messaging.Message)">
      <summary>Determines whether the formatter can deserialize the message.</summary>
      <returns>true if the XML formatter can deserialize the message; otherwise, false.</returns>
      <param name="message">The <see cref="T:System.Messaging.Message" /> to inspect. </param>
      <exception cref="T:System.InvalidOperationException">Neither the <see cref="P:System.Messaging.XmlMessageFormatter.TargetTypeNames" /> nor <see cref="P:System.Messaging.XmlMessageFormatter.TargetTypes" /> property has been set. </exception>
      <exception cref="T:System.ArgumentNullException">The <paramref name="message" /> parameter is null. </exception>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
        <IPermission class="System.Diagnostics.PerformanceCounterPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:System.Messaging.XmlMessageFormatter.Clone">
      <summary>Creates an instance of the <see cref="T:System.Messaging.XmlMessageFormatter" /> class whose read/write properties (the sets of target types) are the same as the current <see cref="T:System.Messaging.XmlMessageFormatter" /> instance.</summary>
      <returns>An object whose properties are identical to those of this <see cref="T:System.Messaging.XmlMessageFormatter" /> instance, but whose metadata does not specify it to be a formatter class instance.</returns>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
        <IPermission class="System.Diagnostics.PerformanceCounterPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:System.Messaging.XmlMessageFormatter.Read(System.Messaging.Message)">
      <summary>Reads the contents from the given message and creates an object that contains the deserialized message.</summary>
      <returns>The deserialized message.</returns>
      <param name="message">The <see cref="T:System.Messaging.Message" />, in XML format, to deserialize. </param>
      <exception cref="T:System.InvalidOperationException">Neither the <see cref="P:System.Messaging.XmlMessageFormatter.TargetTypeNames" /> nor <see cref="P:System.Messaging.XmlMessageFormatter.TargetTypes" /> property has been set.-or- The instance serialized in the message body does not comply with any of the schemas represented by the types in the <see cref="P:System.Messaging.XmlMessageFormatter.TargetTypeNames" /> and <see cref="P:System.Messaging.XmlMessageFormatter.TargetTypes" /> properties. </exception>
      <exception cref="T:System.ArgumentNullException">The <paramref name="message" /> parameter is null. </exception>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
        <IPermission class="System.Diagnostics.PerformanceCounterPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="P:System.Messaging.XmlMessageFormatter.TargetTypeNames">
      <summary>Specifies the set of possible types that will be deserialized by the formatter from the message provided.</summary>
      <returns>An array of type <see cref="T:System.String" /> that specifies the types of objects to deserialize from the message body when reading the message.</returns>
      <exception cref="T:System.ArgumentNullException">The <see cref="P:System.Messaging.XmlMessageFormatter.TargetTypeNames" /> property is null. </exception>
    </member>
    <member name="P:System.Messaging.XmlMessageFormatter.TargetTypes">
      <summary>Specifies the set of possible types that will be deserialized by the formatter from the message provided.</summary>
      <returns>An array of type <see cref="T:System.Type" /> that specifies the types of objects to deserialize from the message body when reading the message.</returns>
      <exception cref="T:System.ArgumentNullException">The <see cref="P:System.Messaging.XmlMessageFormatter.TargetTypes" /> property is null. </exception>
    </member>
    <member name="M:System.Messaging.XmlMessageFormatter.Write(System.Messaging.Message,System.Object)">
      <summary>Serializes an object into the body of the message.</summary>
      <param name="message">The <see cref="T:System.Messaging.Message" /> whose <see cref="P:System.Messaging.Message.Body" /> property will contain the serialized object. </param>
      <param name="obj">The <see cref="T:System.Object" /> to be serialized into the message body. </param>
      <exception cref="T:System.ArgumentNullException">The <paramref name="message" /> parameter is null.-or- The <paramref name="obj" /> parameter is null. </exception>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
        <IPermission class="System.Diagnostics.PerformanceCounterPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="T:System.Messaging.Design.QueuePathDialog">
      <summary>Represents a path editor control.</summary>
    </member>
    <member name="M:System.Messaging.Design.QueuePathDialog.#ctor(System.IServiceProvider)">
      <summary>Initializes a new instance of the <see cref="T:System.Messaging.Design.QueuePathDialog" /> class, using the specified service provider.</summary>
      <param name="provider">A <see cref="T:System.IServiceProvider" /> that can be used to obtain services.</param>
    </member>
    <member name="M:System.Messaging.Design.QueuePathDialog.#ctor(System.Windows.Forms.Design.IUIService)">
      <summary>Initializes a new instance of the <see cref="T:System.Messaging.Design.QueuePathDialog" /> class, using the specified UI service.</summary>
      <param name="uiService">A <see cref="T:System.Windows.Forms.Design.IUIService" /> that enables interaction with the user interface of the hosting development environment object.</param>
    </member>
    <member name="M:System.Messaging.Design.QueuePathDialog.ChoosePath">
      <summary>Updates the path editor control when a queue path is selected.</summary>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
        <IPermission class="System.Messaging.MessageQueuePermission, System.Messaging, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" version="1" Unrestricted="true" />
        <IPermission class="System.Diagnostics.PerformanceCounterPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:System.Messaging.Design.QueuePathDialog.DoubleClicked(System.Object,System.EventArgs)">
      <summary>Occurs when the control is double-clicked.</summary>
      <param name="source">The source of the event.</param>
      <param name="e">A <see cref="T:System.EventArgs" /> that contains the event data.</param>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
        <IPermission class="System.Diagnostics.PerformanceCounterPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:System.Messaging.Design.QueuePathDialog.OnFormClosing(System.Windows.Forms.FormClosingEventArgs)">
      <summary>Event handler for the form closing event of the queue path editor control.</summary>
      <param name="e">A <see cref="T:System.Windows.Forms.FormClosingEventArgs" /> object that contains the arguments for the form closing event handler.</param>
    </member>
    <member name="M:System.Messaging.Design.QueuePathDialog.OnHandleCreated(System.EventArgs)">
      <summary>Event handler for the form creation event of the queue path editor control.</summary>
      <param name="e">A <see cref="T:System.Windows.Forms.FormClosingEventArgs" /> object that contains the arguments for the form creation event handler.</param>
    </member>
    <member name="P:System.Messaging.Design.QueuePathDialog.Path">
      <summary>Gets the queue path.</summary>
      <returns>The path for the queue.</returns>
    </member>
    <member name="M:System.Messaging.Design.QueuePathDialog.SelectQueue(System.Messaging.MessageQueue)">
      <summary>Selects the specified queue.</summary>
      <param name="queue">The <see cref="T:System.Messaging.MessageQueue" /> to be selected.</param>
    </member>
    <member name="T:System.Messaging.Design.QueuePathEditor">
      <summary>Provides a user interface for selecting a message queue path.</summary>
    </member>
    <member name="M:System.Messaging.Design.QueuePathEditor.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Messaging.Design.QueuePathEditor" /> class.</summary>
    </member>
    <member name="M:System.Messaging.Design.QueuePathEditor.EditValue(System.ComponentModel.ITypeDescriptorContext,System.IServiceProvider,System.Object)">
      <summary>Edits the value of the specified message queue using the specified type descriptor context and service provider.</summary>
      <returns>The new value of the message queue path. </returns>
      <param name="context">A <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> that provides additional context information. </param>
      <param name="provider">A <see cref="T:System.IServiceProvider" /> that the editor can use to obtain services. </param>
      <param name="value">The message queue to edit. </param>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
        <IPermission class="System.Security.Permissions.UIPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Messaging.MessageQueuePermission, System.Messaging, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" version="1" Unrestricted="true" />
        <IPermission class="System.Diagnostics.PerformanceCounterPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:System.Messaging.Design.QueuePathEditor.GetEditStyle(System.ComponentModel.ITypeDescriptorContext)">
      <summary>Returns the editing style used by the <see cref="Overload:System.Messaging.Design.QueuePathEditor.EditValue" /> method. </summary>
      <returns>
        <see cref="T:System.Drawing.Design.UITypeEditorEditStyle" />.</returns>
      <param name="context">A <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> that provides additional context information. </param>
    </member>
  </members>
</doc>
=== C:/Users/treeman/Desktop/windows nt source code\xbox\Xbox Live Source\XONLINE_MAIN\public\ext\sdk\CLR\netfx40rtm\Profile\Client\System.Runtime.Serialization.Formatters.Soap.xml ===
﻿<?xml version="1.0" encoding="utf-8"?>
<doc>
  <assembly>
    <name>System.Runtime.Serialization.Formatters.Soap</name>
  </assembly>
  <members>
    <member name="T:System.Runtime.Serialization.Formatters.Soap.SoapFormatter">
      <summary>Serializes and deserializes an object, or an entire graph of connected objects, in SOAP format.</summary>
    </member>
    <member name="M:System.Runtime.Serialization.Formatters.Soap.SoapFormatter.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Runtime.Serialization.Formatters.Soap.SoapFormatter" /> class with default property values.</summary>
    </member>
    <member name="M:System.Runtime.Serialization.Formatters.Soap.SoapFormatter.#ctor(System.Runtime.Serialization.ISurrogateSelector,System.Runtime.Serialization.StreamingContext)">
      <summary>Initializes a new instance of the <see cref="T:System.Runtime.Serialization.Formatters.Soap.SoapFormatter" /> class with the specified <see cref="T:System.Runtime.Serialization.ISurrogateSelector" /> and <see cref="T:System.Runtime.Serialization.StreamingContext" />.</summary>
      <param name="selector">The <see cref="T:System.Runtime.Serialization.ISurrogateSelector" /> to use with the new instance of <see cref="T:System.Runtime.Serialization.Formatters.Soap.SoapFormatter" />. Can be null. </param>
      <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that holds the source and destination of the serialization. If the <paramref name="context" /> parameter is null, then the <see cref="P:System.Runtime.Serialization.Formatters.Soap.SoapFormatter.Context" /> defaults to <see cref="F:System.Runtime.Serialization.StreamingContextStates.CrossMachine" />. </param>
    </member>
    <member name="P:System.Runtime.Serialization.Formatters.Soap.SoapFormatter.AssemblyFormat">
      <summary>Gets or sets the behavior of the deserializer with regards to finding and loading assemblies.</summary>
      <returns>One of the <see cref="T:System.Runtime.Serialization.Formatters.FormatterAssemblyStyle" /> values that specifies the deserializer behavior.</returns>
    </member>
    <member name="P:System.Runtime.Serialization.Formatters.Soap.SoapFormatter.Binder">
      <summary>Gets or sets the <see cref="T:System.Runtime.Serialization.SerializationBinder" /> that controls the binding of a serialized object to a type.</summary>
      <returns>The <see cref="T:System.Runtime.Serialization.SerializationBinder" /> used with this <see cref="T:System.Runtime.Serialization.Formatters.Soap.SoapFormatter" />.</returns>
    </member>
    <member name="P:System.Runtime.Serialization.Formatters.Soap.SoapFormatter.Context">
      <summary>Gets or sets the <see cref="T:System.Runtime.Serialization.StreamingContext" /> used with this <see cref="T:System.Runtime.Serialization.Formatters.Soap.SoapFormatter" />.</summary>
      <returns>The <see cref="T:System.Runtime.Serialization.StreamingContext" /> used with this <see cref="T:System.Runtime.Serialization.Formatters.Soap.SoapFormatter" />.</returns>
    </member>
    <member name="M:System.Runtime.Serialization.Formatters.Soap.SoapFormatter.Deserialize(System.IO.Stream)">
      <summary>Deserializes the data on the provided stream and reconstitutes the graph of objects.</summary>
      <returns>The top object of the deserialized graph (root).</returns>
      <param name="serializationStream">The stream that contains the data to deserialize. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="serializationStream" /> is null. </exception>
    </member>
    <member name="M:System.Runtime.Serialization.Formatters.Soap.SoapFormatter.Deserialize(System.IO.Stream,System.Runtime.Remoting.Messaging.HeaderHandler)">
      <summary>Deserializes the stream into an object graph with any headers in that stream being handled by the given <see cref="T:System.Runtime.Remoting.Messaging.HeaderHandler" />.</summary>
      <returns>The top object of the deserialized graph (root).</returns>
      <param name="serializationStream">The stream that contains the data to deserialize.</param>
      <param name="handler">Delegate to handle any headers found on the stream. Can be null. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="serializationStream" /> is null. </exception>
      <exception cref="T:System.Runtime.Serialization.SerializationException">
        <paramref name="serializationStream" /> supports seeking, and its length is 0. </exception>
    </member>
    <member name="P:System.Runtime.Serialization.Formatters.Soap.SoapFormatter.FilterLevel">
      <summary>Gets or sets the <see cref="T:System.Runtime.Serialization.Formatters.TypeFilterLevel" /> of automatic deserialization for .NET Framework remoting.</summary>
      <returns>The <see cref="T:System.Runtime.Serialization.Formatters.TypeFilterLevel" /> that represents the current automatic deserialization level.</returns>
    </member>
    <member name="M:System.Runtime.Serialization.Formatters.Soap.SoapFormatter.Serialize(System.IO.Stream,System.Object)">
      <summary>Serializes an object or graph of objects with the specified root to the given <see cref="T:System.IO.Stream" />.</summary>
      <param name="serializationStream">The stream onto which the formatter puts the data to serialize. </param>
      <param name="graph">The object, or root of the object graph, to serialize. All child objects of this root object are automatically serialized. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="serializationStream" /> is null. </exception>
    </member>
    <member name="M:System.Runtime.Serialization.Formatters.Soap.SoapFormatter.Serialize(System.IO.Stream,System.Object,System.Runtime.Remoting.Messaging.Header[])">
      <summary>Serializes an object or graph of objects with the specified root to the given <see cref="T:System.IO.Stream" /> in the SOAP Remote Procedure Call (RPC) format.</summary>
      <param name="serializationStream">The stream onto which the formatter puts the data to serialize. </param>
      <param name="graph">The object or root of the object graph to serialize. All child objects of this root object are automatically serialized. </param>
      <param name="headers">Remoting headers to include in the serialization. Can be null. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="serializationStream" /> is null. </exception>
    </member>
    <member name="P:System.Runtime.Serialization.Formatters.Soap.SoapFormatter.SurrogateSelector">
      <summary>Gets or sets the <see cref="T:System.Runtime.Serialization.SurrogateSelector" /> that controls type substitution during serialization and deserialization.</summary>
      <returns>The <see cref="T:System.Runtime.Serialization.SurrogateSelector" /> used with this <see cref="T:System.Runtime.Serialization.Formatters.Soap.SoapFormatter" />.</returns>
    </member>
    <member name="P:System.Runtime.Serialization.Formatters.Soap.SoapFormatter.TopObject">
      <summary>Gets or sets the <see cref="T:System.Runtime.Serialization.Formatters.ISoapMessage" /> into which the SOAP top object is deserialized.</summary>
      <returns>The <see cref="T:System.Runtime.Serialization.Formatters.ISoapMessage" /> into which the SOAP top object is deserialized.</returns>
    </member>
    <member name="P:System.Runtime.Serialization.Formatters.Soap.SoapFormatter.TypeFormat">
      <summary>Gets or sets the format in which type descriptions are laid out in the serialized stream.</summary>
      <returns>The format in which type descriptions are laid out in the serialized stream.</returns>
    </member>
  </members>
</doc>
=== C:/Users/treeman/Desktop/windows nt source code\xbox\Xbox Live Source\XONLINE_MAIN\public\ext\sdk\CLR\netfx40rtm\Profile\Client\System.Management.xml ===
﻿<?xml version="1.0" encoding="utf-8"?>
<doc>
  <assembly>
    <name>System.Management</name>
  </assembly>
  <members>
    <member name="T:System.Management.AuthenticationLevel">
      <summary>Describes the authentication level to be used to connect to WMI. This is used for the COM connection to WMI.          </summary>
    </member>
    <member name="F:System.Management.AuthenticationLevel.Default">
      <summary>The default COM authentication level. WMI uses the default Windows Authentication setting.</summary>
    </member>
    <member name="F:System.Management.AuthenticationLevel.None">
      <summary>No COM authentication.</summary>
    </member>
    <member name="F:System.Management.AuthenticationLevel.Connect">
      <summary>Connect-level COM authentication.</summary>
    </member>
    <member name="F:System.Management.AuthenticationLevel.Call">
      <summary>Call-level COM authentication.</summary>
    </member>
    <member name="F:System.Management.AuthenticationLevel.Packet">
      <summary>Packet-level COM authentication.</summary>
    </member>
    <member name="F:System.Management.AuthenticationLevel.PacketIntegrity">
      <summary>Packet Integrity-level COM authentication.</summary>
    </member>
    <member name="F:System.Management.AuthenticationLevel.PacketPrivacy">
      <summary>Packet Privacy-level COM authentication.</summary>
    </member>
    <member name="F:System.Management.AuthenticationLevel.Unchanged">
      <summary>Authentication level should remain as it was before.</summary>
    </member>
    <member name="T:System.Management.CimType">
      <summary>Describes the possible CIM types for properties, qualifiers, or method parameters.          </summary>
    </member>
    <member name="F:System.Management.CimType.None">
      <summary>A null value.</summary>
    </member>
    <member name="F:System.Management.CimType.SInt8">
      <summary>A signed 8-bit integer. This value maps to the <see cref="T:System.SByte" /> type.</summary>
    </member>
    <member name="F:System.Management.CimType.UInt8">
      <summary>An unsigned 8-bit integer. This value maps to the <see cref="T:System.Byte" /> type.</summary>
    </member>
    <member name="F:System.Management.CimType.SInt16">
      <summary>A signed 16-bit integer. This value maps to the <see cref="T:System.Int16" /> type.</summary>
    </member>
    <member name="F:System.Management.CimType.UInt16">
      <summary>An unsigned 16-bit integer. This value maps to the <see cref="T:System.UInt16" /> type.</summary>
    </member>
    <member name="F:System.Management.CimType.SInt32">
      <summary>A signed 32-bit integer. This value maps to the <see cref="T:System.Int32" /> type.</summary>
    </member>
    <member name="F:System.Management.CimType.UInt32">
      <summary>An unsigned 32-bit integer. This value maps to the <see cref="T:System.UInt32" /> type.</summary>
    </member>
    <member name="F:System.Management.CimType.SInt64">
      <summary>A signed 64-bit integer. This value maps to the <see cref="T:System.Int64" /> type.</summary>
    </member>
    <member name="F:System.Management.CimType.UInt64">
      <summary>An unsigned 64-bit integer. This value maps to the <see cref="T:System.UInt64" /> type.</summary>
    </member>
    <member name="F:System.Management.CimType.Real32">
      <summary>A floating-point 32-bit number. This value maps to the <see cref="T:System.Single" /> type.</summary>
    </member>
    <member name="F:System.Management.CimType.Real64">
      <summary>A floating point 64-bit number. This value maps to the <see cref="T:System.Double" /> type.</summary>
    </member>
    <member name="F:System.Management.CimType.Boolean">
      <summary>A Boolean. This value maps to the <see cref="T:System.Boolean" /> type.</summary>
    </member>
    <member name="F:System.Management.CimType.String">
      <summary>A string. This value maps to the <see cref="T:System.String" /> type.</summary>
    </member>
    <member name="F:System.Management.CimType.DateTime">
      <summary>A date or time value, represented in a string in DMTF date/time format: yyyymmddHHMMSS.mmmmmmsUUU, where yyyymmdd is the date in year/month/day; HHMMSS is the time in hours/minutes/seconds; mmmmmm is the number of microseconds in 6 digits; and sUUU is a sign (+ or -) and a 3-digit UTC offset. This value maps to the <see cref="T:System.DateTime" /> type.</summary>
    </member>
    <member name="F:System.Management.CimType.Reference">
      <summary>A reference to another object. This is represented by a string containing the path to the referenced object. This value maps to the <see cref="T:System.Int16" /> type.</summary>
    </member>
    <member name="F:System.Management.CimType.Char16">
      <summary>A 16-bit character. This value maps to the <see cref="T:System.Char" /> type.</summary>
    </member>
    <member name="F:System.Management.CimType.Object">
      <summary>An embedded object. Note that embedded objects differ from references in that the embedded object does not have a path and its lifetime is identical to the lifetime of the containing object. This value maps to the <see cref="T:System.Object" /> type.</summary>
    </member>
    <member name="T:System.Management.CodeLanguage">
      <summary>Defines the languages supported by the code generator.          </summary>
    </member>
    <member name="F:System.Management.CodeLanguage.CSharp">
      <summary>A value for generating C# code.             </summary>
    </member>
    <member name="F:System.Management.CodeLanguage.JScript">
      <summary>A value for generating JScript code.</summary>
    </member>
    <member name="F:System.Management.CodeLanguage.VB">
      <summary>A value for generating Visual Basic code.</summary>
    </member>
    <member name="F:System.Management.CodeLanguage.VJSharp">
      <summary>A value for generating Visual J# code.</summary>
    </member>
    <member name="F:System.Management.CodeLanguage.Mcpp">
      <summary>A value for generating managed C++ code.             </summary>
    </member>
    <member name="T:System.Management.ComparisonSettings">
      <summary>Describes the object comparison modes that can be used with <see cref="M:System.Management.ManagementBaseObject.CompareTo(System.Management.ManagementBaseObject,System.Management.ComparisonSettings)" />. Note that these values may be combined.          </summary>
    </member>
    <member name="F:System.Management.ComparisonSettings.IncludeAll">
      <summary>A mode that compares all elements of the compared objects. Value: 0. </summary>
    </member>
    <member name="F:System.Management.ComparisonSettings.IgnoreQualifiers">
      <summary>A mode that compares the objects, ignoring qualifiers. Value: 1.</summary>
    </member>
    <member name="F:System.Management.ComparisonSettings.IgnoreObjectSource">
      <summary>A mode that ignores the source of the objects, namely the server and the namespace they came from, in comparison to other objects. Value: 2.</summary>
    </member>
    <member name="F:System.Management.ComparisonSettings.IgnoreDefaultValues">
      <summary>A mode that ignores the default values of properties. This value is only meaningful when comparing classes. Value: 4.</summary>
    </member>
    <member name="F:System.Management.ComparisonSettings.IgnoreClass">
      <summary>A mode that assumes that the objects being compared are instances of                    the same class. Consequently, this value causes comparison of instance-related information only. Use this flag to optimize performance. If the objects are not of the same class, the results are undefined. Value: 8.</summary>
    </member>
    <member name="F:System.Management.ComparisonSettings.IgnoreCase">
      <summary>A mode that compares string values in a case-insensitive manner. This applies to strings and to qualifier values. Property and qualifier names are always compared in a case-insensitive manner whether this flag is specified or not. Value: 16.</summary>
    </member>
    <member name="F:System.Management.ComparisonSettings.IgnoreFlavor">
      <summary>A mode that ignores qualifier flavors. This flag still takes qualifier values into account, but ignores flavor distinctions such as propagation rules and override restrictions. Value: 32.</summary>
    </member>
    <member name="T:System.Management.CompletedEventArgs">
      <summary>Holds event data for the <see cref="E:System.Management.ManagementOperationObserver.Completed" /> event.          </summary>
    </member>
    <member name="P:System.Management.CompletedEventArgs.Status">
      <summary>Gets the completion status of the operation.          </summary>
      <returns>Returns a <see cref="T:System.Management.ManagementStatus" /> enumeration value.</returns>
    </member>
    <member name="P:System.Management.CompletedEventArgs.StatusObject">
      <summary>Gets additional status information within a WMI object. This may be null.          </summary>
      <returns>Returns a <see cref="T:System.Management.ManagementBaseObject" /> that contains status information about the completion of an operation.</returns>
    </member>
    <member name="T:System.Management.CompletedEventHandler">
      <summary>Represents the method that will handle the <see cref="E:System.Management.ManagementOperationObserver.Completed" /> event.     </summary>
      <param name="sender">The instance of the object for which to invoke this method.</param>
      <param name="e">The <see cref="T:System.Management.CompletedEventArgs" /> that specifies the reason the event was invoked.</param>
    </member>
    <member name="T:System.Management.ConnectionOptions">
      <summary>Specifies all settings required to make a WMI connection.</summary>
    </member>
    <member name="M:System.Management.ConnectionOptions.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Management.ConnectionOptions" /> class for the connection operation, using default values. This is the default constructor.          </summary>
    </member>
    <member name="M:System.Management.ConnectionOptions.#ctor(System.String,System.String,System.Security.SecureString,System.String,System.Management.ImpersonationLevel,System.Management.AuthenticationLevel,System.Boolean,System.Management.ManagementNamedValueCollection,System.TimeSpan)">
      <summary>Creates a new ConnectionOption.</summary>
      <param name="locale">The locale to be used for the connection.</param>
      <param name="username">The user name to be used for the connection. If null, the credentials of the currently logged-on user are used.</param>
      <param name="password">The password for the given user name. If the user name is also null, the credentials used will be those of the currently logged-on user.</param>
      <param name="authority">The authority to be used to authenticate the specified user.</param>
      <param name="impersonation">The COM impersonation level to be used for the connection.</param>
      <param name="authentication">The COM authentication level to be used for the connection.  </param>
      <param name="enablePrivileges">true to enable special user privileges; otherwise, false. This parameter should only be used when performing an operation that requires special Windows NT user privileges.</param>
      <param name="context">A provider-specific, named value pairs object to be passed through to the provider.</param>
      <param name="timeout">Reserved for future use.</param>
    </member>
    <member name="M:System.Management.ConnectionOptions.#ctor(System.String,System.String,System.String,System.String,System.Management.ImpersonationLevel,System.Management.AuthenticationLevel,System.Boolean,System.Management.ManagementNamedValueCollection,System.TimeSpan)">
      <summary>Initializes a new instance of the <see cref="T:System.Management.ConnectionOptions" /> class to be used for a WMI connection, using the specified values.</summary>
      <param name="locale">The locale to be used for the connection.</param>
      <param name="username">The user name to be used for the connection. If null, the credentials of the currently logged-on user are used.</param>
      <param name="password">The password for the given user name. If the user name is also null, the credentials used will be those of the currently logged-on user.</param>
      <param name="authority">The authority to be used to authenticate the specified user. </param>
      <param name="impersonation">The COM impersonation level to be used for the connection. </param>
      <param name="authentication">The COM authentication level to be used for the connection.  </param>
      <param name="enablePrivileges">true to enable special user privileges; otherwise, false. This parameter should only be used when performing an operation that requires special Windows NT user privileges.</param>
      <param name="context">A provider-specific, named value pairs object to be passed through to the provider. </param>
      <param name="timeout">Reserved for future use. </param>
    </member>
    <member name="P:System.Management.ConnectionOptions.Authentication">
      <summary>Gets or sets the COM authentication level to be used for operations in this connection.</summary>
      <returns>Returns an <see cref="T:System.Management.AuthenticationLevel" /> enumeration value indicating the COM authentication level used for a connection to the local or a remote computer. </returns>
    </member>
    <member name="P:System.Management.ConnectionOptions.Authority">
      <summary>Gets or sets the authority to be used to authenticate the specified user.          </summary>
      <returns>Returns a <see cref="T:System.String" /> that defines the authority used to authenticate the specified user.</returns>
    </member>
    <member name="M:System.Management.ConnectionOptions.Clone">
      <summary>Returns a copy of the object.</summary>
      <returns>The cloned object.</returns>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
      </PermissionSet>
    </member>
    <member name="P:System.Management.ConnectionOptions.EnablePrivileges">
      <summary>Gets or sets a value indicating whether user privileges need to be enabled for the connection operation. This property should only be used when the operation performed requires a certain user privilege to be enabled (for example, a machine restart).          </summary>
      <returns>Returns a <see cref="T:System.Boolean" /> value indicating whether user privileges need to be enabled for the connection operation.</returns>
    </member>
    <member name="P:System.Management.ConnectionOptions.Impersonation">
      <summary>Gets or sets the COM impersonation level to be used for operations in this connection.</summary>
      <returns>Returns an <see cref="T:System.Management.ImpersonationLevel" /> enumeration value indicating the impersonation level used to connect to WMI.</returns>
    </member>
    <member name="P:System.Management.ConnectionOptions.Locale">
      <summary>Gets or sets the locale to be used for the connection operation.</summary>
      <returns>Returns a <see cref="T:System.String" /> value used for the locale in a connection to WMI.</returns>
    </member>
    <member name="P:System.Management.ConnectionOptions.Password">
      <summary>Sets the password for the specified user.</summary>
      <returns>Returns a <see cref="T:System.String" /> value used for the password in a connection to WMI.</returns>
    </member>
    <member name="P:System.Management.ConnectionOptions.SecurePassword">
      <summary>Sets the password for the specified user.</summary>
      <returns>Returns a SecureString value used for the password in a connection to WMI.</returns>
    </member>
    <member name="P:System.Management.ConnectionOptions.Username">
      <summary>Gets or sets the user name to be used for the connection operation.</summary>
      <returns>Returns a <see cref="T:System.String" /> value used as the user name in a connection to WMI.</returns>
    </member>
    <member name="T:System.Management.DeleteOptions">
      <summary>Specifies options for deleting a management object.          </summary>
    </member>
    <member name="M:System.Management.DeleteOptions.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Management.DeleteOptions" /> class for the delete operation, using default values. This is the default constructor.          </summary>
    </member>
    <member name="M:System.Management.DeleteOptions.#ctor(System.Management.ManagementNamedValueCollection,System.TimeSpan)">
      <summary>Initializes a new instance of the <see cref="T:System.Management.DeleteOptions" /> class for a delete operation, using the specified values.          </summary>
      <param name="context">A provider-specific, named-value pairs object to be passed through to the provider. </param>
      <param name="timeout">The length of time to let the operation perform before it times out. The default value is <see cref="F:System.TimeSpan.MaxValue" />. Setting this parameter will invoke the operation semisynchronously.</param>
    </member>
    <member name="M:System.Management.DeleteOptions.Clone">
      <summary>Returns a copy of the object.          </summary>
      <returns>A cloned object.</returns>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
      </PermissionSet>
    </member>
    <member name="T:System.Management.EnumerationOptions">
      <summary>Provides a base class for query and enumeration-related options objects.          </summary>
    </member>
    <member name="M:System.Management.EnumerationOptions.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Management.EnumerationOptions" /> class with default values (see the individual property descriptions for what the default values are). This is the default constructor.           </summary>
    </member>
    <member name="M:System.Management.EnumerationOptions.#ctor(System.Management.ManagementNamedValueCollection,System.TimeSpan,System.Int32,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean)">
      <summary>Initializes a new instance of the <see cref="T:System.Management.EnumerationOptions" /> class to be used for queries or enumerations, allowing the user to specify values for the different options.          </summary>
      <param name="context">The options context object containing provider-specific information that can be passed through to the provider.</param>
      <param name="timeout">The time-out value for enumerating through the results.</param>
      <param name="blockSize">The number of items to retrieve at one time from WMI.</param>
      <param name="rewindable">true to show that the result set is rewindable (allows multiple traversal); otherwise, false.</param>
      <param name="returnImmediatley">true to show that the operation should return immediately (semi-sync) or block until all results are available; otherwise, false.</param>
      <param name="useAmendedQualifiers">true to show that the returned objects should contain amended (locale-aware) qualifiers; otherwise, false.</param>
      <param name="ensureLocatable">true to ensure all returned objects have valid paths; otherwise, false.</param>
      <param name="prototypeOnly">true to return a prototype of the result set instead of the actual results; otherwise, false.</param>
      <param name="directRead">true to retrieve objects of only the specified class or from derived classes as well; otherwise, false.</param>
      <param name="enumerateDeep">true to use recursive enumeration in subclasses; otherwise, false.</param>
    </member>
    <member name="P:System.Management.EnumerationOptions.BlockSize">
      <summary>Gets or sets the block size for block operations. When enumerating through a collection, WMI will return results in groups of the specified size.          </summary>
      <returns>Returns an <see cref="T:System.Int32" /> value used for the block size in block operations.</returns>
    </member>
    <member name="M:System.Management.EnumerationOptions.Clone">
      <summary>Returns a copy of the object.          </summary>
      <returns>The cloned object.</returns>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
      </PermissionSet>
    </member>
    <member name="P:System.Management.EnumerationOptions.DirectRead">
      <summary>Gets or sets a value indicating whether direct access to the WMI provider is requested for the specified class, without any regard to its super class or derived classes.          </summary>
      <returns>Returns a <see cref="T:System.Boolean" /> value indicating whether direct access to the WMI provider is requested for the specified class.</returns>
    </member>
    <member name="P:System.Management.EnumerationOptions.EnsureLocatable">
      <summary>Gets or sets a value indicating whether to the objects returned should have locatable information in them. This ensures that the system properties, such as __PATH, __RELPATH, and __SERVER, are non-NULL. This flag can only be used in queries, and is ignored in enumerations.          </summary>
      <returns>Returns a <see cref="T:System.Boolean" /> value indicating whether the objects returned should have locatable information in them.</returns>
    </member>
    <member name="P:System.Management.EnumerationOptions.EnumerateDeep">
      <summary>Gets or sets a value indicating whether recursive enumeration is requested into all classes derived from the specified superclass. If false, only immediate derived class members are returned.          </summary>
      <returns>Returns a <see cref="T:System.Boolean" /> value indicating whether recursive enumeration is requested into all classes derived from the specified superclass.</returns>
    </member>
    <member name="P:System.Management.EnumerationOptions.PrototypeOnly">
      <summary>Gets or sets a value indicating whether the query should return a prototype of the result set instead of the actual results. This flag is used for prototyping.          </summary>
      <returns>Returns a <see cref="T:System.Boolean" /> value indicating whether the query should return a prototype of the result set instead of the actual results.</returns>
    </member>
    <member name="P:System.Management.EnumerationOptions.ReturnImmediately">
      <summary>Gets or sets a value indicating whether the invoked operation should be performed in a synchronous or semisynchronous fashion. If this property is set to true, the enumeration is invoked and the call returns immediately. The actual retrieval of the results will occur when the resulting collection is walked.          </summary>
      <returns>Returns a <see cref="T:System.Boolean" /> value indicating whether the invoked operation should be performed in a synchronous or semisynchronous fashion.</returns>
    </member>
    <member name="P:System.Management.EnumerationOptions.Rewindable">
      <summary>Gets or sets a value indicating whether the collection is assumed to be rewindable. If true, the objects in the collection will be kept available for multiple enumerations. If false, the collection can only be enumerated one time.          </summary>
      <returns>Returns a <see cref="T:System.Boolean" /> value indicating whether the collection is assumed to be rewindable.</returns>
    </member>
    <member name="P:System.Management.EnumerationOptions.UseAmendedQualifiers">
      <summary>Gets or sets a value indicating whether the objects returned from WMI should contain amended information. Typically, amended information is localizable information attached to the WMI object, such as object and property descriptions.  </summary>
      <returns>Returns a <see cref="T:System.Boolean" /> value indicating whether the objects returned from WMI should contain amended information.</returns>
    </member>
    <member name="T:System.Management.EventArrivedEventArgs">
      <summary>Holds event data for the <see cref="E:System.Management.ManagementEventWatcher.EventArrived" /> event.          </summary>
    </member>
    <member name="P:System.Management.EventArrivedEventArgs.NewEvent">
      <summary>Gets the WMI event that was delivered.      </summary>
      <returns>Returns a <see cref="T:System.Management.ManagementBaseObject" /> that contains the delivered WMI event.</returns>
    </member>
    <member name="T:System.Management.EventArrivedEventHandler">
      <summary>Represents the method that will handle the <see cref="E:System.Management.ManagementEventWatcher.EventArrived" /> event.          </summary>
      <param name="sender">The instance of the object for which to invoke this method.</param>
      <param name="e">The <see cref="T:System.Management.EventArrivedEventArgs" /> that specifies the reason the event was invoked.</param>
    </member>
    <member name="T:System.Management.EventQuery">
      <summary>Represents a WMI event query.          </summary>
    </member>
    <member name="M:System.Management.EventQuery.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Management.EventQuery" /> class. This is the default constructor.          </summary>
    </member>
    <member name="M:System.Management.EventQuery.#ctor(System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.Management.EventQuery" /> class for the specified query.          </summary>
      <param name="query">A textual representation of the event query.</param>
    </member>
    <member name="M:System.Management.EventQuery.#ctor(System.String,System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.Management.EventQuery" /> class for the specified language and query.           </summary>
      <param name="language">The language in which the query string is specified. </param>
      <param name="query">The string representation of the query.</param>
    </member>
    <member name="M:System.Management.EventQuery.Clone">
      <summary>Returns a copy of the object.          </summary>
      <returns>The cloned object.             </returns>
    </member>
    <member name="T:System.Management.EventWatcherOptions">
      <summary>Specifies options for management event watching.          </summary>
    </member>
    <member name="M:System.Management.EventWatcherOptions.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Management.EventWatcherOptions" /> class for event watching, using default values. This is the default constructor.          </summary>
    </member>
    <member name="M:System.Management.EventWatcherOptions.#ctor(System.Management.ManagementNamedValueCollection,System.TimeSpan,System.Int32)">
      <summary>Initializes a new instance of the <see cref="T:System.Management.EventWatcherOptions" /> class with the given values.          </summary>
      <param name="context">The options context object containing provider-specific information to be passed through to the provider. </param>
      <param name="timeout">The time-out to wait for the next events.</param>
      <param name="blockSize">The number of events to wait for in each block.  </param>
    </member>
    <member name="P:System.Management.EventWatcherOptions.BlockSize">
      <summary>Gets or sets the block size for block operations. When waiting for events, this value specifies how many events to wait for before returning.      </summary>
      <returns>Returns an <see cref="T:System.Int32" /> value indicating the block size for a block of operations.</returns>
    </member>
    <member name="M:System.Management.EventWatcherOptions.Clone">
      <summary>Returns a copy of the object.          </summary>
      <returns>The cloned object.             </returns>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
      </PermissionSet>
    </member>
    <member name="T:System.Management.ImpersonationLevel">
      <summary>Describes the impersonation level to be used to connect to WMI.          </summary>
    </member>
    <member name="F:System.Management.ImpersonationLevel.Default">
      <summary>Default impersonation.</summary>
    </member>
    <member name="F:System.Management.ImpersonationLevel.Anonymous">
      <summary>Anonymous COM impersonation level that hides the identity of the caller. Calls to WMI may fail with this impersonation level.</summary>
    </member>
    <member name="F:System.Management.ImpersonationLevel.Identify">
      <summary>Identify-level COM impersonation level that allows objects to query the credentials of the caller. Calls to WMI may fail with this impersonation level.</summary>
    </member>
    <member name="F:System.Management.ImpersonationLevel.Impersonate">
      <summary>Impersonate-level COM impersonation level that allows objects to use the credentials of the caller. This is the recommended impersonation level for WMI calls.</summary>
    </member>
    <member name="F:System.Management.ImpersonationLevel.Delegate">
      <summary>Delegate-level COM impersonation level that allows objects to permit other objects to use the credentials of the caller. This level, which will work with WMI calls but may constitute an unnecessary security risk, is supported only under Windows 2000.</summary>
    </member>
    <member name="T:System.Management.InvokeMethodOptions">
      <summary>Specifies options for invoking a management method.          </summary>
    </member>
    <member name="M:System.Management.InvokeMethodOptions.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Management.InvokeMethodOptions" /> class for the <see cref="M:System.Management.ManagementObject.InvokeMethod(System.String,System.Object[])" /> operation, using default values. This is the default constructor.          </summary>
    </member>
    <member name="M:System.Management.InvokeMethodOptions.#ctor(System.Management.ManagementNamedValueCollection,System.TimeSpan)">
      <summary>Initializes a new instance of the <see cref="T:System.Management.InvokeMethodOptions" /> class for an invoke operation using the specified values.          </summary>
      <param name="context">A provider-specific, named-value pairs object to be passed through to the provider.</param>
      <param name="timeout">The length of time to let the operation perform before it times out. The default value is <see cref="F:System.TimeSpan.MaxValue" />. Setting this parameter will invoke the operation semisynchronously.</param>
    </member>
    <member name="M:System.Management.InvokeMethodOptions.Clone">
      <summary>Returns a copy of the object.          </summary>
      <returns>The cloned object.</returns>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
      </PermissionSet>
    </member>
    <member name="T:System.Management.ManagementBaseObject">
      <summary>Contains the basic elements of a management object. It serves as a base class to more specific management object classes.</summary>
    </member>
    <member name="M:System.Management.ManagementBaseObject.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Initializes a new instance of the <see cref="T:System.Management.ManagementBaseObject" /> class that is serializable.</summary>
      <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> to populate with data.</param>
      <param name="context">The destination (see <see cref="T:System.Runtime.Serialization.StreamingContext" /> ) for this serialization.</param>
    </member>
    <member name="P:System.Management.ManagementBaseObject.ClassPath">
      <summary>Gets the path to the management object's class.</summary>
      <returns>Returns a <see cref="T:System.Management.ManagementPath" /> that contains the class path to the management object's class.</returns>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.RegistryPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="M:System.Management.ManagementBaseObject.Clone">
      <summary>Returns a copy of the object.</summary>
      <returns>The new cloned object.</returns>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.RegistryPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="M:System.Management.ManagementBaseObject.CompareTo(System.Management.ManagementBaseObject,System.Management.ComparisonSettings)">
      <summary>Compares this object to another, based on specified options.</summary>
      <returns>true if the objects compared are equal according to the given options; otherwise, false.</returns>
      <param name="otherObject">The object to which to compare this object. </param>
      <param name="settings">Options on how to compare the objects. </param>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.RegistryPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="M:System.Management.ManagementBaseObject.Dispose"></member>
    <member name="M:System.Management.ManagementBaseObject.Equals(System.Object)">
      <summary>Compares two management objects.</summary>
      <returns>true if this is an instance of <see cref="T:System.Management.ManagementBaseObject" /> and represents the same object as this instance; otherwise, false.             </returns>
      <param name="obj">An object to compare with this instance.</param>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.RegistryPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="M:System.Management.ManagementBaseObject.GetHashCode">
      <summary>Serves as a hash function for a particular type, suitable for use in hashing algorithms and data structures like a hash table.</summary>
      <returns>A hash code for the current object.</returns>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.RegistryPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="M:System.Management.ManagementBaseObject.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Populates a <see cref="T:System.Runtime.Serialization.SerializationInfo" /> with the data necessary to deserialize the field represented by this instance.</summary>
      <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> to populate with data.</param>
      <param name="context">The destination (see <see cref="T:System.Runtime.Serialization.StreamingContext" /> ) for this serialization.</param>
    </member>
    <member name="M:System.Management.ManagementBaseObject.GetPropertyQualifierValue(System.String,System.String)">
      <summary>Returns the value of the specified property qualifier.</summary>
      <returns>The value of the specified qualifier.</returns>
      <param name="propertyName">The name of the property to which the qualifier belongs. </param>
      <param name="qualifierName">The name of the property qualifier of interest. </param>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.RegistryPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="M:System.Management.ManagementBaseObject.GetPropertyValue(System.String)">
      <summary>Gets an equivalent accessor to a property's value.</summary>
      <returns>The value of the specified property.</returns>
      <param name="propertyName">The name of the property of interest. </param>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.RegistryPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="M:System.Management.ManagementBaseObject.GetQualifierValue(System.String)">
      <summary>Gets the value of the specified qualifier.          </summary>
      <returns>The value of the specified qualifier.</returns>
      <param name="qualifierName">The name of the qualifier of interest. </param>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.RegistryPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="M:System.Management.ManagementBaseObject.GetText(System.Management.TextFormat)">
      <summary>Returns a textual representation of the object in the specified format.          </summary>
      <returns>The textual representation of the object in the specified format.</returns>
      <param name="format">The requested textual format. </param>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.RegistryPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="P:System.Management.ManagementBaseObject.Item(System.String)">
      <summary>Gets access to property values through [] notation. This property is the indexer for the <see cref="T:System.Management.ManagementBaseObject" /> class. You can use the default indexed properties defined by a type, but you cannot explicitly define your own. However, specifying the expando attribute on a class automatically provides a default indexed property whose type is Object and whose index type is String.</summary>
      <returns>Returns an <see cref="T:System.Object" /> value that contains the management object for a specific class property.</returns>
      <param name="propertyName">The name of the property of interest. </param>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.RegistryPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="M:System.Management.ManagementBaseObject.op_Explicit(System.Management.ManagementBaseObject)~System.IntPtr">
      <summary>Provides the internal WMI object represented by a <see cref="T:System.Management.ManagementObject" />.  </summary>
      <returns>An <see cref="T:System.IntPtr" /> representing the internal WMI object.  </returns>
      <param name="managementObject">The <see cref="T:System.Management.ManagementBaseObject" /> that references the requested WMI object.</param>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.RegistryPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="P:System.Management.ManagementBaseObject.Properties">
      <summary>Gets a collection of <see cref="T:System.Management.PropertyData" /> objects describing the properties of the management object.</summary>
      <returns>Returns a <see cref="T:System.Management.PropertyDataCollection" /> that holds the properties for the management object.</returns>
    </member>
    <member name="P:System.Management.ManagementBaseObject.Qualifiers">
      <summary>Gets the collection of <see cref="T:System.Management.QualifierData" /> objects defined on the management object. Each element in the collection holds information such as the qualifier name, value, and flavor.</summary>
      <returns>Returns a <see cref="T:System.Management.QualifierDataCollection" /> that holds the qualifiers for the management object.</returns>
    </member>
    <member name="M:System.Management.ManagementBaseObject.SetPropertyQualifierValue(System.String,System.String,System.Object)">
      <summary>Sets the value of the specified property qualifier.</summary>
      <param name="propertyName">The name of the property to which the qualifier belongs.</param>
      <param name="qualifierName">The name of the property qualifier of interest.</param>
      <param name="qualifierValue">The new value for the qualifier.</param>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.RegistryPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="M:System.Management.ManagementBaseObject.SetPropertyValue(System.String,System.Object)">
      <summary>Sets the value of the named property.</summary>
      <param name="propertyName">The name of the property to be changed.</param>
      <param name="propertyValue">The new value for this property.</param>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="MemberAccess" />
        <IPermission class="System.Security.Permissions.RegistryPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="M:System.Management.ManagementBaseObject.SetQualifierValue(System.String,System.Object)">
      <summary>Sets the value of the named qualifier.</summary>
      <param name="qualifierName">The name of the qualifier to set. This parameter cannot be null.</param>
      <param name="qualifierValue">The value to set.</param>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.RegistryPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="M:System.Management.ManagementBaseObject.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Implements the <see cref="T:System.Runtime.Serialization.ISerializable" /> interface and returns the data needed to serialize the <see cref="T:System.Management.ManagementBaseObject" />.</summary>
      <param name="info">A <see cref="T:System.Runtime.Serialization.SerializationInfo" /> containing the information required to serialize the <see cref="T:System.Management.ManagementBaseObject" />.</param>
      <param name="context">A <see cref="T:System.Runtime.Serialization.StreamingContext" /> containing the source and destination of the serialized stream associated with the <see cref="T:System.Management.ManagementBaseObject" />.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="info" /> is null.</exception>
    </member>
    <member name="P:System.Management.ManagementBaseObject.SystemProperties">
      <summary>Gets  the collection of WMI system properties of the management object (for example, the class name, server, and namespace). WMI system property names begin with "__".</summary>
      <returns>Returns a <see cref="T:System.Management.PropertyDataCollection" /> that contains the system properties for a management object.</returns>
    </member>
    <member name="T:System.Management.ManagementClass">
      <summary>Represents a Common Information Model (CIM) management class. A management class is a WMI class such as Win32_LogicalDisk, which can represent a disk drive, and Win32_Process, which represents a process such as Notepad.exe. The members of this class enable you to access WMI data using a specific WMI class path. For more information, see "Win32 Classes" in the Windows Management Instrumentation documentation in the MSDN Library at http://msdn.microsoft.com/library.</summary>
    </member>
    <member name="M:System.Management.ManagementClass.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Management.ManagementClass" /> class. This is the default constructor.</summary>
    </member>
    <member name="M:System.Management.ManagementClass.#ctor(System.Management.ManagementPath)">
      <summary>Initializes a new instance of the <see cref="T:System.Management.ManagementClass" /> class. The class represents a Common Information Model (CIM) management class from WMI such as Win32_LogicalDisk, which can represent a disk drive, and Win32_Process, which represents a process such as Notepad.exe. For more information, see "Win32 Classes" in the Windows Management Instrumentation documentation in the MSDN Library at http://msdn.microsoft.com/library.</summary>
      <param name="path">A <see cref="T:System.Management.ManagementPath" /> specifying the WMI class to which to bind. The parameter must specify a WMI class path. The class represents a CIM management class from WMI. CIM classes represent management information including hardware, software, processes, and so on. For more information about the CIM classes available in Windows, see "Win32 classes" in the Windows Management Instrumentation documentation in the MSDN Library at http://msdn.microsoft.com/library. </param>
    </member>
    <member name="M:System.Management.ManagementClass.#ctor(System.Management.ManagementPath,System.Management.ObjectGetOptions)">
      <summary>Initializes a new instance of the <see cref="T:System.Management.ManagementClass" /> class initialized to the given WMI class path using the specified options. The class represents a Common Information Model (CIM) management class from WMI such as Win32_LogicalDisk, which can represent a disk drive, and Win32_Process, which represents a process such as Notepad.exe. For more information, see "Win32 Classes" in the Windows Management Instrumentation documentation in the MSDN Library at http://msdn.microsoft.com/library.</summary>
      <param name="path">A <see cref="T:System.Management.ManagementPath" /> instance representing the WMI class path. The class represents a CIM management class from WMI. CIM classes represent management information including hardware, software, processes, and so on. For more information about the CIM classes available in Windows, see "Win32 classes" in the Windows Management Instrumentation documentation in the MSDN Library at http://msdn.microsoft.com/library.</param>
      <param name="options">An <see cref="T:System.Management.ObjectGetOptions" /> representing the options to use when retrieving this class. </param>
    </member>
    <member name="M:System.Management.ManagementClass.#ctor(System.Management.ManagementScope,System.Management.ManagementPath,System.Management.ObjectGetOptions)">
      <summary>Initializes a new instance of the <see cref="T:System.Management.ManagementClass" /> class for the specified WMI class in the specified scope and with the specified options. The class represents a Common Information Model (CIM) management class from WMI such as Win32_LogicalDisk, which can represent a disk drive, and Win32_Process, which represents a process such as Notepad.exe. For more information, see "Win32 Classes" in the Windows Management Instrumentation documentation in the MSDN Library at http://msdn.microsoft.com/library.</summary>
      <param name="scope">A <see cref="T:System.Management.ManagementScope" /> that specifies the scope (server and namespace) where the WMI class resides. </param>
      <param name="path">A <see cref="T:System.Management.ManagementPath" /> that represents the path to the WMI class in the specified scope. The class represents a CIM management class from WMI. CIM classes represent management information including hardware, software, processes, and so on. For more information about the CIM classes available in Windows, see "Win32 classes" in the Windows Management Instrumentation documentation in the MSDN Library at http://msdn.microsoft.com/library.  </param>
      <param name="options">An <see cref="T:System.Management.ObjectGetOptions" /> that specifies the options to use when retrieving the WMI class. </param>
    </member>
    <member name="M:System.Management.ManagementClass.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Initializes a new instance of the <see cref="T:System.Management.ManagementClass" /> class from the specified instances of the <see cref="T:System.Runtime.Serialization.SerializationInfo" /> and <see cref="T:System.Runtime.Serialization.StreamingContext" /> classes.</summary>
      <param name="info">An instance of the <see cref="T:System.Runtime.Serialization.SerializationInfo" /> class containing the information required to serialize the new <see cref="T:System.Management.ManagementClass" />.</param>
      <param name="context">An instance of the <see cref="T:System.Runtime.Serialization.StreamingContext" /> class containing the source of the serialized stream associated with the new <see cref="T:System.Management.ManagementClass" />.</param>
    </member>
    <member name="M:System.Management.ManagementClass.#ctor(System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.Management.ManagementClass" /> class initialized to the given path. The class represents a Common Information Model (CIM) management class from WMI such as Win32_LogicalDisk, which can represent a disk drive, and Win32_Process, which represents a process such as Notepad.exe. For more information, see "Win32 Classes" in the Windows Management Instrumentation documentation in the MSDN Library at http://msdn.microsoft.com/library.</summary>
      <param name="path">The path to the WMI class. The class represents a CIM management class from WMI. CIM classes represent management information including hardware, software, processes, and so on. For more information about the CIM classes available in Windows, see "Win32 classes" in the Windows Management Instrumentation documentation in the MSDN Library at http://msdn.microsoft.com/library.</param>
    </member>
    <member name="M:System.Management.ManagementClass.#ctor(System.String,System.Management.ObjectGetOptions)">
      <summary>Initializes a new instance of the <see cref="T:System.Management.ManagementClass" /> class initialized to the given WMI class path using the specified options. The class represents a Common Information Model (CIM) management class from WMI such as Win32_LogicalDisk, which can represent a disk drive, and Win32_Process, which represents a process such as Notepad.exe. For more information, see "Win32 Classes" in the Windows Management Instrumentation documentation in the MSDN Library at http://msdn.microsoft.com/library.</summary>
      <param name="path">The path to the WMI class. The class represents a CIM management class from WMI. CIM classes represent management information including hardware, software, processes, and so on. For more information about the CIM classes available in Windows, see "Win32 classes" in the Windows Management Instrumentation documentation in the MSDN Library at http://msdn.microsoft.com/library. </param>
      <param name="options">An <see cref="T:System.Management.ObjectGetOptions" /> representing the options to use when retrieving the WMI class. </param>
    </member>
    <member name="M:System.Management.ManagementClass.#ctor(System.String,System.String,System.Management.ObjectGetOptions)">
      <summary>Initializes a new instance of the <see cref="T:System.Management.ManagementClass" /> class for the specified WMI class, in the specified scope, and with the specified options. The class represents a Common Information Model (CIM) management class from WMI such as Win32_LogicalDisk, which can represent a disk drive, and Win32_Process, which represents a process such as Notepad.exe. For more information, see "Win32 Classes" in the Windows Management Instrumentation documentation in the MSDN Library at http://msdn.microsoft.com/library.</summary>
      <param name="scope">The scope in which the WMI class resides. </param>
      <param name="path">The path to the WMI class within the specified scope. The class represents a CIM management class from WMI. CIM classes represent management information including hardware, software, processes, and so on. For more information about the CIM classes available in Windows, see "Win32 classes" in the Windows Management Instrumentation documentation in the MSDN Library at http://msdn.microsoft.com/library. </param>
      <param name="options">An <see cref="T:System.Management.ObjectGetOptions" /> that specifies the options to use when retrieving the WMI class. </param>
    </member>
    <member name="M:System.Management.ManagementClass.Clone">
      <summary>Returns a copy of the object.</summary>
      <returns>The cloned object.</returns>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="MemberAccess" />
        <IPermission class="System.Security.Permissions.RegistryPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="M:System.Management.ManagementClass.CreateInstance">
      <summary>Initializes a new instance of the WMI class.</summary>
      <returns>A <see cref="T:System.Management.ManagementObject" /> that represents a new instance of the WMI class.</returns>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="MemberAccess" />
        <IPermission class="System.Security.Permissions.RegistryPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="P:System.Management.ManagementClass.Derivation">
      <summary>Gets an array containing all WMI classes in the inheritance hierarchy from this class to the top of the hierarchy.</summary>
      <returns>A string collection containing the names of all WMI classes in the inheritance hierarchy of this class.</returns>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.RegistryPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="M:System.Management.ManagementClass.Derive(System.String)">
      <summary>Derives a new class from this class.</summary>
      <returns>A new <see cref="T:System.Management.ManagementClass" /> that represents a new WMI class derived from the original class.</returns>
      <param name="newClassName">The name of the new class to be derived. </param>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="MemberAccess" />
        <IPermission class="System.Security.Permissions.RegistryPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="M:System.Management.ManagementClass.GetInstances">
      <summary>Returns the collection of all instances of the class.</summary>
      <returns>A collection of the <see cref="T:System.Management.ManagementObject" /> objects representing the instances of the class.</returns>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="MemberAccess" />
        <IPermission class="System.Security.Permissions.RegistryPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="M:System.Management.ManagementClass.GetInstances(System.Management.EnumerationOptions)">
      <summary>Returns the collection of all instances of the class using the specified options.</summary>
      <returns>A collection of the <see cref="T:System.Management.ManagementObject" /> objects representing the instances of the class, according to the specified options.</returns>
      <param name="options">The additional operation options. </param>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="MemberAccess" />
        <IPermission class="System.Security.Permissions.RegistryPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="M:System.Management.ManagementClass.GetInstances(System.Management.ManagementOperationObserver)">
      <summary>Returns the collection of all instances of the class, asynchronously.</summary>
      <param name="watcher">The object to handle the asynchronous operation's progress. </param>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="MemberAccess" />
        <IPermission class="System.Security.Permissions.RegistryPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="M:System.Management.ManagementClass.GetInstances(System.Management.ManagementOperationObserver,System.Management.EnumerationOptions)">
      <summary>Returns the collection of all instances of the class, asynchronously, using the specified options.</summary>
      <param name="watcher">The object to handle the asynchronous operation's progress. </param>
      <param name="options">The specified additional options for getting the instances. </param>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="MemberAccess" />
        <IPermission class="System.Security.Permissions.RegistryPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="M:System.Management.ManagementClass.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Populates a <see cref="T:System.Runtime.Serialization.SerializationInfo" /> with the data necessary to deserialize the field represented by this instance.          </summary>
      <param name="info">The object to be populated with serialization information.</param>
      <param name="context">The location where serialized data will be stored and retrieved.</param>
    </member>
    <member name="M:System.Management.ManagementClass.GetRelatedClasses">
      <summary>Retrieves classes related to the WMI class.</summary>
      <returns>A collection of the <see cref="T:System.Management.ManagementClass" /> or <see cref="T:System.Management.ManagementObject" /> objects that represents WMI classes or instances related to the WMI class.</returns>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="MemberAccess" />
        <IPermission class="System.Security.Permissions.RegistryPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="M:System.Management.ManagementClass.GetRelatedClasses(System.Management.ManagementOperationObserver)">
      <summary>Retrieves classes related to the WMI class, asynchronously.</summary>
      <param name="watcher">The object to handle the asynchronous operation's progress. </param>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="MemberAccess" />
        <IPermission class="System.Security.Permissions.RegistryPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="M:System.Management.ManagementClass.GetRelatedClasses(System.Management.ManagementOperationObserver,System.String)">
      <summary>Retrieves classes related to the WMI class, asynchronously, given the related class name.</summary>
      <param name="watcher">The object to handle the asynchronous operation's progress. </param>
      <param name="relatedClass">The name of the related class. </param>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="MemberAccess" />
        <IPermission class="System.Security.Permissions.RegistryPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="M:System.Management.ManagementClass.GetRelatedClasses(System.Management.ManagementOperationObserver,System.String,System.String,System.String,System.String,System.String,System.String,System.Management.EnumerationOptions)">
      <summary>Retrieves classes related to the WMI class, asynchronously, using the specified options.</summary>
      <param name="watcher">Handler for progress and results of the asynchronous operation. </param>
      <param name="relatedClass">The class from which resulting classes have to be derived. </param>
      <param name="relationshipClass">The relationship type which resulting classes must have with the source class. </param>
      <param name="relationshipQualifier">This qualifier must be present on the relationship. </param>
      <param name="relatedQualifier">This qualifier must be present on the resulting classes. </param>
      <param name="relatedRole">The resulting classes must have this role in the relationship. </param>
      <param name="thisRole">The source class must have this role in the relationship. </param>
      <param name="options">The options for retrieving the resulting classes. </param>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="MemberAccess" />
        <IPermission class="System.Security.Permissions.RegistryPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="M:System.Management.ManagementClass.GetRelatedClasses(System.String)">
      <summary>Retrieves classes related to the WMI class.</summary>
      <returns>A collection of classes related to this class.</returns>
      <param name="relatedClass">The class from which resulting classes have to be derived. </param>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="MemberAccess" />
        <IPermission class="System.Security.Permissions.RegistryPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="M:System.Management.ManagementClass.GetRelatedClasses(System.String,System.String,System.String,System.String,System.String,System.String,System.Management.EnumerationOptions)">
      <summary>Retrieves classes related to the WMI class based on the specified options.</summary>
      <returns>A collection of classes related to this class.</returns>
      <param name="relatedClass">The class from which resulting classes have to be derived. </param>
      <param name="relationshipClass">The relationship type which resulting classes must have with the source class. </param>
      <param name="relationshipQualifier">This qualifier must be present on the relationship. </param>
      <param name="relatedQualifier">This qualifier must be present on the resulting classes. </param>
      <param name="relatedRole">The resulting classes must have this role in the relationship. </param>
      <param name="thisRole">The source class must have this role in the relationship. </param>
      <param name="options">The options for retrieving the resulting classes. </param>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="MemberAccess" />
        <IPermission class="System.Security.Permissions.RegistryPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="M:System.Management.ManagementClass.GetRelationshipClasses">
      <summary>Retrieves relationship classes that relate the class to others.</summary>
      <returns>A collection of association classes that relate the class to any other class.</returns>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="MemberAccess" />
        <IPermission class="System.Security.Permissions.RegistryPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="M:System.Management.ManagementClass.GetRelationshipClasses(System.Management.ManagementOperationObserver)">
      <summary>Retrieves relationship classes that relate the class to others, asynchronously.</summary>
      <param name="watcher">The object to handle the asynchronous operation's progress. </param>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="MemberAccess" />
        <IPermission class="System.Security.Permissions.RegistryPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="M:System.Management.ManagementClass.GetRelationshipClasses(System.Management.ManagementOperationObserver,System.String)">
      <summary>Retrieves relationship classes that relate the class to the specified WMI class, asynchronously.</summary>
      <param name="watcher">The object to handle the asynchronous operation's progress. </param>
      <param name="relationshipClass">The WMI class to which all returned relationships should point. </param>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="MemberAccess" />
        <IPermission class="System.Security.Permissions.RegistryPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="M:System.Management.ManagementClass.GetRelationshipClasses(System.Management.ManagementOperationObserver,System.String,System.String,System.String,System.Management.EnumerationOptions)">
      <summary>Retrieves relationship classes that relate the class according to the specified options, asynchronously.</summary>
      <param name="watcher">The handler for progress and results of the asynchronous operation. </param>
      <param name="relationshipClass">The class from which all resulting relationship classes must derive. </param>
      <param name="relationshipQualifier">The qualifier which the resulting relationship classes must have. </param>
      <param name="thisRole">The role which the source class must have in the resulting relationship classes. </param>
      <param name="options">The options for retrieving the results. </param>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="MemberAccess" />
        <IPermission class="System.Security.Permissions.RegistryPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="M:System.Management.ManagementClass.GetRelationshipClasses(System.String)">
      <summary>Retrieves relationship classes that relate the class to others, where the endpoint class is the specified class.</summary>
      <returns>A collection of association classes that relate the class to the specified class. For more information about relationship classes, see "ASSOCIATORS OF Statement" in the Windows Management Instrumentation documentation in the MSDN Library at http://msdn.microsoft.com/library.</returns>
      <param name="relationshipClass">The endpoint class for all relationship classes returned. </param>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="MemberAccess" />
        <IPermission class="System.Security.Permissions.RegistryPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="M:System.Management.ManagementClass.GetRelationshipClasses(System.String,System.String,System.String,System.Management.EnumerationOptions)">
      <summary>Retrieves relationship classes that relate this class to others, according to specified options.</summary>
      <returns>A collection of association classes that relate this class to others, according to the specified options. For more information about relationship classes, see "ASSOCIATORS OF Statement" in the Windows Management Instrumentation documentation in the MSDN Library at http://msdn.microsoft.com/library.</returns>
      <param name="relationshipClass">All resulting relationship classes must derive from this class. </param>
      <param name="relationshipQualifier">Resulting relationship classes must have this qualifier. </param>
      <param name="thisRole">The source class must have this role in the resulting relationship classes. </param>
      <param name="options">Specifies options for retrieving the results. </param>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="MemberAccess" />
        <IPermission class="System.Security.Permissions.RegistryPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="M:System.Management.ManagementClass.GetStronglyTypedClassCode(System.Boolean,System.Boolean)">
      <summary>Generates a strongly-typed class for a given WMI class.</summary>
      <returns>A <see cref="T:System.CodeDom.CodeTypeDeclaration" /> representing the declaration for the strongly-typed class.</returns>
      <param name="includeSystemClassInClassDef">true to include the class for managing system properties; otherwise, false. </param>
      <param name="systemPropertyClass">true to have the generated class manage system properties; otherwise, false. </param>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="MemberAccess" />
        <IPermission class="System.Security.Permissions.RegistryPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="M:System.Management.ManagementClass.GetStronglyTypedClassCode(System.Management.CodeLanguage,System.String,System.String)">
      <summary>Generates a strongly-typed class for a given WMI class. This function generates code for Visual Basic, C#, JScript, J#, or C++ depending on the input parameters.</summary>
      <returns>true, if the method succeeded; otherwise, false.</returns>
      <param name="lang">The language of the code to be generated. This code language comes from the <see cref="T:System.Management.CodeLanguage" /> enumeration.</param>
      <param name="filePath">The path of the file where the code is to be written. </param>
      <param name="classNamespace">The.NET namespace into which the class should be generated. If this is empty, the namespace will be generated from the WMI namespace. </param>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="MemberAccess" />
        <IPermission class="System.Security.Permissions.RegistryPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
      </PermissionSet>
    </member>
    <member name="M:System.Management.ManagementClass.GetSubclasses">
      <summary>Returns the collection of all subclasses for the class.</summary>
      <returns>A collection of the <see cref="T:System.Management.ManagementObject" /> objects that represent the subclasses of the WMI class.</returns>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="MemberAccess" />
        <IPermission class="System.Security.Permissions.RegistryPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="M:System.Management.ManagementClass.GetSubclasses(System.Management.EnumerationOptions)">
      <summary>Retrieves the subclasses of the class using the specified options.</summary>
      <returns>A collection of the <see cref="T:System.Management.ManagementObject" /> objects representing the subclasses of the WMI class, according to the specified options.</returns>
      <param name="options">The specified additional options for retrieving subclasses of the class. </param>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="MemberAccess" />
        <IPermission class="System.Security.Permissions.RegistryPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="M:System.Management.ManagementClass.GetSubclasses(System.Management.ManagementOperationObserver)">
      <summary>Returns the collection of all classes derived from this class, asynchronously.</summary>
      <param name="watcher">The object to handle the asynchronous operation's progress. </param>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="MemberAccess" />
        <IPermission class="System.Security.Permissions.RegistryPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="M:System.Management.ManagementClass.GetSubclasses(System.Management.ManagementOperationObserver,System.Management.EnumerationOptions)">
      <summary>Retrieves all classes derived from this class, asynchronously, using the specified options.</summary>
      <param name="watcher">The object to handle the asynchronous operation's progress. </param>
      <param name="options">The specified additional options to use in the derived class retrieval. </param>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="MemberAccess" />
        <IPermission class="System.Security.Permissions.RegistryPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="P:System.Management.ManagementClass.Methods">
      <summary>Gets or sets a collection of <see cref="T:System.Management.MethodData" /> objects that represent the methods defined in the WMI class.</summary>
      <returns>A <see cref="T:System.Management.MethodDataCollection" /> representing the methods defined in the WMI class.</returns>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.RegistryPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="P:System.Management.ManagementClass.Path">
      <summary>Gets or sets the path of the WMI class to which the <see cref="T:System.Management.ManagementClass" /> object is bound.</summary>
      <returns>The path of the object's class.</returns>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.RegistryPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="T:System.Management.ManagementDateTimeConverter">
      <summary>Provides methods to convert DMTF datetime and time intervals to CLR-compliant <see cref="T:System.DateTime" /> and <see cref="T:System.TimeSpan" /> format and vice versa.                           </summary>
    </member>
    <member name="M:System.Management.ManagementDateTimeConverter.ToDateTime(System.String)">
      <summary>Converts a given DMTF datetime to <see cref="T:System.DateTime" />. The returned <see cref="T:System.DateTime" /> will be in the current time zone of the system.          </summary>
      <returns>A <see cref="T:System.DateTime" /> that represents the given DMTF datetime.</returns>
      <param name="dmtfDate">A string representing the datetime in DMTF format.</param>
    </member>
    <member name="M:System.Management.ManagementDateTimeConverter.ToDmtfDateTime(System.DateTime)">
      <summary>Converts a given <see cref="T:System.DateTime" /> to DMTF datetime format.          </summary>
      <returns>A string that represents the DMTF datetime for the given <see cref="T:System.DateTime" />.</returns>
      <param name="date">A <see cref="T:System.DateTime" /> representing the datetime to be converted to DMTF datetime.</param>
    </member>
    <member name="M:System.Management.ManagementDateTimeConverter.ToDmtfTimeInterval(System.TimeSpan)">
      <summary>Converts a given <see cref="T:System.TimeSpan" /> to DMTF time interval.          </summary>
      <returns>A string that represents the DMTF time interval for the given <see cref="T:System.TimeSpan" />.</returns>
      <param name="timespan">A <see cref="T:System.TimeSpan" /> representing the datetime to be converted to DMTF time interval.             </param>
    </member>
    <member name="M:System.Management.ManagementDateTimeConverter.ToTimeSpan(System.String)">
      <summary>Converts a given DMTF time interval to a <see cref="T:System.TimeSpan" />.          </summary>
      <returns>A <see cref="T:System.TimeSpan" /> that represents the given DMTF time interval.</returns>
      <param name="dmtfTimespan">A string representation of the DMTF time interval.</param>
    </member>
    <member name="T:System.Management.ManagementEventArgs">
      <summary>Represents the virtual base class to hold event data for WMI events.          </summary>
    </member>
    <member name="P:System.Management.ManagementEventArgs.Context">
      <summary>Gets the operation context echoed back                   from the operation that triggered the event.          </summary>
      <returns>Returns an <see cref="T:System.Object" /> value for an operation context.</returns>
    </member>
    <member name="T:System.Management.ManagementEventWatcher">
      <summary>Subscribes to temporary event notifications based on a specified event query.          </summary>
    </member>
    <member name="M:System.Management.ManagementEventWatcher.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Management.ManagementEventWatcher" /> class. For further initialization, set the properties on the object. This is the default constructor.          </summary>
    </member>
    <member name="M:System.Management.ManagementEventWatcher.#ctor(System.Management.EventQuery)">
      <summary>Initializes a new instance of the <see cref="T:System.Management.ManagementEventWatcher" /> class when given a WMI event query.          </summary>
      <param name="query">An <see cref="T:System.Management.EventQuery" /> representing a WMI event query, which determines the events for which the watcher will listen.</param>
    </member>
    <member name="M:System.Management.ManagementEventWatcher.#ctor(System.Management.ManagementScope,System.Management.EventQuery)">
      <summary>Initializes a new instance of the <see cref="T:System.Management.ManagementEventWatcher" />              class that listens for events conforming to the given WMI event query.          </summary>
      <param name="scope">A <see cref="T:System.Management.ManagementScope" /> representing the scope (namespace) in which the watcher will listen for events.</param>
      <param name="query">An <see cref="T:System.Management.EventQuery" /> representing a WMI event query, which determines the events for which the watcher will listen.  </param>
    </member>
    <member name="M:System.Management.ManagementEventWatcher.#ctor(System.Management.ManagementScope,System.Management.EventQuery,System.Management.EventWatcherOptions)">
      <summary>Initializes a new instance of the <see cref="T:System.Management.ManagementEventWatcher" /> class that listens for events conforming to the given WMI event query, according to the specified options. For this variant, the query and the scope are specified objects. The options object can specify options such as time-out and context information.          </summary>
      <param name="scope">A <see cref="T:System.Management.ManagementScope" /> representing the scope (namespace) in which the watcher will listen for events.</param>
      <param name="query">An <see cref="T:System.Management.EventQuery" /> representing a WMI event query, which determines the events for which the watcher will listen. </param>
      <param name="options">An <see cref="T:System.Management.EventWatcherOptions" /> representing additional options used to watch for events. </param>
    </member>
    <member name="M:System.Management.ManagementEventWatcher.#ctor(System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.Management.ManagementEventWatcher" /> class when given a WMI event query in the form of a string.          </summary>
      <param name="query"> A WMI event query, which defines the events for which the watcher will listen.</param>
    </member>
    <member name="M:System.Management.ManagementEventWatcher.#ctor(System.String,System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.Management.ManagementEventWatcher" /> class that listens for events conforming to the given WMI event query. For this variant, the query and the scope are specified as strings.          </summary>
      <param name="scope">The management scope (namespace) in which the watcher will listen for events.</param>
      <param name="query">The query that defines the events for which the watcher will listen. </param>
    </member>
    <member name="M:System.Management.ManagementEventWatcher.#ctor(System.String,System.String,System.Management.EventWatcherOptions)">
      <summary>Initializes a new instance of the <see cref="T:System.Management.ManagementEventWatcher" /> class that listens for events conforming to the given WMI event query, according to the specified options. For this variant, the query and the scope are specified as strings. The options object can specify options such as a time-out and context information.          </summary>
      <param name="scope">The management scope (namespace) in which the watcher will listen for events.</param>
      <param name="query">The query that defines the events for which the watcher will listen.  </param>
      <param name="options">An <see cref="T:System.Management.EventWatcherOptions" /> representing additional options used to watch for events. </param>
    </member>
    <member name="E:System.Management.ManagementEventWatcher.EventArrived">
      <summary>Occurs when a new event arrives.</summary>
    </member>
    <member name="M:System.Management.ManagementEventWatcher.Finalize">
      <summary>Ensures that outstanding calls are cleared. This is the destructor for the object. In C#, finalizers are expressed using destructor syntax. </summary>
    </member>
    <member name="P:System.Management.ManagementEventWatcher.Options">
      <summary>Gets or sets the options used to watch for events. </summary>
      <returns>Returns an <see cref="T:System.Management.EventWatcherOptions" /> that contains the event options used to watch for events.</returns>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.RegistryPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="P:System.Management.ManagementEventWatcher.Query">
      <summary>Gets or sets the criteria to apply to events.      </summary>
      <returns>Returns an <see cref="T:System.Management.EventQuery" /> that contains the query to apply to events.</returns>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.RegistryPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="P:System.Management.ManagementEventWatcher.Scope">
      <summary>Gets or sets the scope in which to watch for events (namespace or scope).      </summary>
      <returns>Returns a <see cref="T:System.Management.ManagementScope" /> that contains the scope the in which to watch for events.</returns>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.RegistryPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="M:System.Management.ManagementEventWatcher.Start">
      <summary>Subscribes to events with the given query and delivers them, asynchronously, through the <see cref="E:System.Management.ManagementEventWatcher.EventArrived" /> event.          </summary>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="MemberAccess" />
        <IPermission class="System.Security.Permissions.RegistryPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="M:System.Management.ManagementEventWatcher.Stop">
      <summary>Cancels the subscription whether it is synchronous or asynchronous.          </summary>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.RegistryPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="E:System.Management.ManagementEventWatcher.Stopped">
      <summary>Occurs when a subscription is canceled.</summary>
    </member>
    <member name="M:System.Management.ManagementEventWatcher.WaitForNextEvent">
      <summary>Waits for the next event that matches the specified query to arrive, and then returns it.          </summary>
      <returns>A <see cref="T:System.Management.ManagementBaseObject" /> representing the newly arrived event.</returns>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="MemberAccess" />
        <IPermission class="System.Security.Permissions.RegistryPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="T:System.Management.ManagementException">
      <summary>Represents management exceptions.          </summary>
    </member>
    <member name="M:System.Management.ManagementException.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Management.ManagementException" /> class.          </summary>
    </member>
    <member name="M:System.Management.ManagementException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Initializes a new instance of the <see cref="T:System.Management.ManagementException" /> class that is serializable.          </summary>
      <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> to populate with data.</param>
      <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> destination for this serialization.</param>
    </member>
    <member name="M:System.Management.ManagementException.#ctor(System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.Management.ManagementException" />              class with a specified error message.          </summary>
      <param name="message">The message that describes the error. </param>
    </member>
    <member name="M:System.Management.ManagementException.#ctor(System.String,System.Exception)">
      <summary>Initializes an empty new instance of the <see cref="T:System.Management.ManagementException" /> class. If the <paramref name="innerException" /> parameter is not null, the current exception is raised in a catch block that handles the inner exception.</summary>
      <param name="message">The message that describes the error. </param>
      <param name="innerException">The exception that is the cause of the current exception.</param>
    </member>
    <member name="P:System.Management.ManagementException.ErrorCode">
      <summary>Gets the error code reported by WMI, which caused this exception.          </summary>
      <returns>Returns a <see cref="T:System.Management.ManagementStatus" /> enumeration value that contains the error code.</returns>
    </member>
    <member name="P:System.Management.ManagementException.ErrorInformation">
      <summary>Gets the extended error object provided by WMI.          </summary>
      <returns>Returns a <see cref="T:System.Management.ManagementBaseObject" /> that contains extended error information.</returns>
    </member>
    <member name="M:System.Management.ManagementException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Populates the <see cref="T:System.Runtime.Serialization.SerializationInfo" /> with the data needed to serialize the <see cref="T:System.Management.ManagementException" />.          </summary>
      <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> to populate with data.</param>
      <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> destination for this serialization.</param>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Read="*AllFiles*" PathDiscovery="*AllFiles*" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="SerializationFormatter" />
      </PermissionSet>
    </member>
    <member name="T:System.Management.ManagementNamedValueCollection">
      <summary>Represents a collection of named values suitable for use as context information to WMI operations. The names are case-insensitive.          </summary>
    </member>
    <member name="M:System.Management.ManagementNamedValueCollection.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Management.ManagementNamedValueCollection" /> class, which is empty. This is the default constructor.          </summary>
    </member>
    <member name="M:System.Management.ManagementNamedValueCollection.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Initializes a new instance of the <see cref="T:System.Management.ManagementNamedValueCollection" /> class that is serializable                 and uses the specified <see cref="T:System.Runtime.Serialization.SerializationInfo" /> and <see cref="T:System.Runtime.Serialization.StreamingContext" />.          </summary>
      <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> to populate with data.</param>
      <param name="context">The destination (see <see cref="T:System.Runtime.Serialization.StreamingContext" /> ) for this serialization.</param>
    </member>
    <member name="M:System.Management.ManagementNamedValueCollection.Add(System.String,System.Object)">
      <summary>Adds a single-named value to the collection.          </summary>
      <param name="name">The name of the new value.</param>
      <param name="value">The value to be associated with the name.</param>
    </member>
    <member name="M:System.Management.ManagementNamedValueCollection.Clone">
      <summary>Creates a clone of the collection. Individual values are cloned. If a value does not support cloning, then a <see cref="T:System.NotSupportedException" /> is thrown.           </summary>
      <returns>The new copy of the collection.             </returns>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
      </PermissionSet>
    </member>
    <member name="P:System.Management.ManagementNamedValueCollection.Item(System.String)">
      <summary>Gets the value associated with the specified name from this collection. In C#, this property is the indexer for the <see cref="T:System.Management.ManagementNamedValueCollection" /> class.  </summary>
      <returns>Returns an <see cref="T:System.Object" /> value that is associated with the specified name from this collection.</returns>
      <param name="name">The name of the value to be returned. </param>
    </member>
    <member name="M:System.Management.ManagementNamedValueCollection.Remove(System.String)">
      <summary>Removes a single-named value from the collection. If the collection does not contain an element with the specified name, the collection remains unchanged and no exception is thrown.          </summary>
      <param name="name">The name of the value to be removed. </param>
    </member>
    <member name="M:System.Management.ManagementNamedValueCollection.RemoveAll">
      <summary>Removes all entries from the collection.          </summary>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
      </PermissionSet>
    </member>
    <member name="T:System.Management.ManagementObject">
      <summary>Represents a WMI instance. </summary>
    </member>
    <member name="M:System.Management.ManagementObject.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Management.ManagementObject" /> class. This is the default constructor.</summary>
    </member>
    <member name="M:System.Management.ManagementObject.#ctor(System.Management.ManagementPath)">
      <summary>Initializes a new instance of the <see cref="T:System.Management.ManagementObject" /> class for the specified WMI object path. The path is provided as a <see cref="T:System.Management.ManagementPath" />.</summary>
      <param name="path">A <see cref="T:System.Management.ManagementPath" /> that contains a path to a WMI object. </param>
    </member>
    <member name="M:System.Management.ManagementObject.#ctor(System.Management.ManagementPath,System.Management.ObjectGetOptions)">
      <summary>Initializes a new instance of the <see cref="T:System.Management.ManagementObject" /> class bound to the specified WMI path, including the specified additional options.</summary>
      <param name="path">A <see cref="T:System.Management.ManagementPath" /> containing the WMI path. </param>
      <param name="options">An <see cref="T:System.Management.ObjectGetOptions" /> containing additional options for binding to the WMI object. This parameter could be null if default options are to be used. </param>
    </member>
    <member name="M:System.Management.ManagementObject.#ctor(System.Management.ManagementScope,System.Management.ManagementPath,System.Management.ObjectGetOptions)">
      <summary>Initializes a new instance of the <see cref="T:System.Management.ManagementObject" /> class bound to the specified WMI path that includes the specified options.</summary>
      <param name="scope">A <see cref="T:System.Management.ManagementScope" /> representing the scope in which the WMI object resides. In this version, scopes can only be WMI namespaces. </param>
      <param name="path">A <see cref="T:System.Management.ManagementPath" /> representing the WMI path to the manageable object. </param>
      <param name="options">An <see cref="T:System.Management.ObjectGetOptions" /> specifying additional options for getting the object. </param>
    </member>
    <member name="M:System.Management.ManagementObject.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Initializes a new instance of the <see cref="T:System.Management.ManagementObject" /> class that is serializable.</summary>
      <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> to populate with data. </param>
      <param name="context">The destination (see <see cref="T:System.Runtime.Serialization.StreamingContext" />) for this serialization. </param>
    </member>
    <member name="M:System.Management.ManagementObject.#ctor(System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.Management.ManagementObject" /> class for the specified WMI object path. The path is provided as a string.</summary>
      <param name="path">A WMI path. </param>
    </member>
    <member name="M:System.Management.ManagementObject.#ctor(System.String,System.Management.ObjectGetOptions)">
      <summary>Initializes a new instance of the <see cref="T:System.Management.ManagementObject" /> class bound to the specified WMI path, including the specified additional options. In this variant, the path can be specified as a string.</summary>
      <param name="path">The WMI path to the object. </param>
      <param name="options">An <see cref="T:System.Management.ObjectGetOptions" /> representing options to get the specified WMI object. </param>
    </member>
    <member name="M:System.Management.ManagementObject.#ctor(System.String,System.String,System.Management.ObjectGetOptions)">
      <summary>Initializes a new instance of the <see cref="T:System.Management.ManagementObject" /> class bound to the specified WMI path, and includes the specified options. The scope and the path are specified as strings.</summary>
      <param name="scopeString">The scope for the WMI object. </param>
      <param name="pathString">The WMI object path. </param>
      <param name="options">An <see cref="T:System.Management.ObjectGetOptions" /> representing additional options for getting the WMI object. </param>
    </member>
    <member name="P:System.Management.ManagementObject.ClassPath">
      <summary>Gets or sets the path to the object's class.</summary>
      <returns>A <see cref="T:System.Management.ManagementPath" /> representing the path to the object's class.</returns>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.RegistryPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="M:System.Management.ManagementObject.Clone">
      <summary>Creates a copy of the object.</summary>
      <returns>The copied object.</returns>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="MemberAccess" />
        <IPermission class="System.Security.Permissions.RegistryPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="M:System.Management.ManagementObject.CopyTo(System.Management.ManagementOperationObserver,System.Management.ManagementPath)">
      <summary>Copies the object to a different location, asynchronously.</summary>
      <param name="watcher">The object that will receive the results of the operation. </param>
      <param name="path">A <see cref="T:System.Management.ManagementPath" /> specifying the path to which the object should be copied. </param>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="MemberAccess" />
        <IPermission class="System.Security.Permissions.RegistryPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="M:System.Management.ManagementObject.CopyTo(System.Management.ManagementOperationObserver,System.Management.ManagementPath,System.Management.PutOptions)">
      <summary>Copies the object to a different location, asynchronously.</summary>
      <param name="watcher">The object that will receive the results of the operation. </param>
      <param name="path">The path to which the object should be copied. </param>
      <param name="options">The options for how the object should be put. </param>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="MemberAccess" />
        <IPermission class="System.Security.Permissions.RegistryPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="M:System.Management.ManagementObject.CopyTo(System.Management.ManagementOperationObserver,System.String)">
      <summary>Copies the object to a different location, asynchronously.</summary>
      <param name="watcher">The object that will receive the results of the operation. </param>
      <param name="path">The path to which the object should be copied. </param>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="MemberAccess" />
        <IPermission class="System.Security.Permissions.RegistryPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="M:System.Management.ManagementObject.CopyTo(System.Management.ManagementOperationObserver,System.String,System.Management.PutOptions)">
      <summary>Copies the object to a different location, asynchronously.</summary>
      <param name="watcher">The object that will receive the results of the operation. </param>
      <param name="path">The path to which the object should be copied. </param>
      <param name="options">The options for how the object should be put. </param>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="MemberAccess" />
        <IPermission class="System.Security.Permissions.RegistryPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="M:System.Management.ManagementObject.CopyTo(System.Management.ManagementPath)">
      <summary>Copies the object to a different location.</summary>
      <returns>The new path of the copied object.</returns>
      <param name="path">The <see cref="T:System.Management.ManagementPath" /> to which the object should be copied. </param>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="MemberAccess" />
        <IPermission class="System.Security.Permissions.RegistryPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="M:System.Management.ManagementObject.CopyTo(System.Management.ManagementPath,System.Management.PutOptions)">
      <summary>Copies the object to a different location.</summary>
      <returns>The new path of the copied object.</returns>
      <param name="path">The <see cref="T:System.Management.ManagementPath" /> to which the object should be copied. </param>
      <param name="options">The options for how the object should be put. </param>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="MemberAccess" />
        <IPermission class="System.Security.Permissions.RegistryPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="M:System.Management.ManagementObject.CopyTo(System.String)">
      <summary>Copies the object to a different location.</summary>
      <returns>The new path of the copied object.</returns>
      <param name="path">The path to which the object should be copied. </param>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="MemberAccess" />
        <IPermission class="System.Security.Permissions.RegistryPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="M:System.Management.ManagementObject.CopyTo(System.String,System.Management.PutOptions)">
      <summary>Copies the object to a different location.</summary>
      <returns>The new path of the copied object.</returns>
      <param name="path">The path to which the object should be copied. </param>
      <param name="options">The options for how the object should be put. </param>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="MemberAccess" />
        <IPermission class="System.Security.Permissions.RegistryPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="M:System.Management.ManagementObject.Delete">
      <summary>Deletes the object.</summary>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="MemberAccess" />
        <IPermission class="System.Security.Permissions.RegistryPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="M:System.Management.ManagementObject.Delete(System.Management.DeleteOptions)">
      <summary>Deletes the object.</summary>
      <param name="options">The options for how to delete the object. </param>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="MemberAccess" />
        <IPermission class="System.Security.Permissions.RegistryPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="M:System.Management.ManagementObject.Delete(System.Management.ManagementOperationObserver)">
      <summary>Deletes the object.</summary>
      <param name="watcher">The object that will receive the results of the operation. </param>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="MemberAccess" />
        <IPermission class="System.Security.Permissions.RegistryPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="M:System.Management.ManagementObject.Delete(System.Management.ManagementOperationObserver,System.Management.DeleteOptions)">
      <summary>Deletes the object.</summary>
      <param name="watcher">The object that will receive the results of the operation. </param>
      <param name="options">The options for how to delete the object. </param>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="MemberAccess" />
        <IPermission class="System.Security.Permissions.RegistryPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="M:System.Management.ManagementObject.Dispose">
      <summary>Releases all resources used by the Component.</summary>
    </member>
    <member name="M:System.Management.ManagementObject.Get">
      <summary>Binds WMI class information to the management object.</summary>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="MemberAccess" />
        <IPermission class="System.Security.Permissions.RegistryPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="M:System.Management.ManagementObject.Get(System.Management.ManagementOperationObserver)">
      <summary>Binds to the management object asynchronously.</summary>
      <param name="watcher">The object to receive the results of the operation as events. </param>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="MemberAccess" />
        <IPermission class="System.Security.Permissions.RegistryPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="M:System.Management.ManagementObject.GetMethodParameters(System.String)">
      <summary>Returns a <see cref="T:System.Management.ManagementBaseObject" /> representing the list of input parameters for a method.</summary>
      <returns>A <see cref="T:System.Management.ManagementBaseObject" /> containing the input parameters to the method.</returns>
      <param name="methodName">The name of the method. </param>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="MemberAccess" />
        <IPermission class="System.Security.Permissions.RegistryPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="M:System.Management.ManagementObject.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Populates a <see cref="T:System.Runtime.Serialization.SerializationInfo" /> with the data necessary to deserialize the field represented by this instance.          </summary>
      <param name="info">The object to be populated with serialization information.</param>
      <param name="context">The location where serialized data will be stored and retrieved.</param>
    </member>
    <member name="M:System.Management.ManagementObject.GetRelated">
      <summary>Gets a collection of objects related to the object (associators).</summary>
      <returns>A <see cref="T:System.Management.ManagementObjectCollection" /> containing the related objects.</returns>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="MemberAccess" />
        <IPermission class="System.Security.Permissions.RegistryPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="M:System.Management.ManagementObject.GetRelated(System.Management.ManagementOperationObserver)">
      <summary>Gets a collection of objects related to the object (associators) asynchronously. This call returns immediately, and a delegate is called when the results are available.</summary>
      <param name="watcher">The object to use to return results. </param>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="MemberAccess" />
        <IPermission class="System.Security.Permissions.RegistryPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="M:System.Management.ManagementObject.GetRelated(System.Management.ManagementOperationObserver,System.String)">
      <summary>Gets a collection of objects related to the object (associators).</summary>
      <param name="watcher">The object to use to return results. </param>
      <param name="relatedClass">The class of related objects. </param>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="MemberAccess" />
        <IPermission class="System.Security.Permissions.RegistryPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="M:System.Management.ManagementObject.GetRelated(System.Management.ManagementOperationObserver,System.String,System.String,System.String,System.String,System.String,System.String,System.Boolean,System.Management.EnumerationOptions)">
      <summary>Gets a collection of objects related to the object (associators).</summary>
      <param name="watcher">The object to use to return results. </param>
      <param name="relatedClass">The class of the related objects. </param>
      <param name="relationshipClass">The relationship class of interest. </param>
      <param name="relationshipQualifier">The qualifier required to be present on the relationship class. </param>
      <param name="relatedQualifier">The qualifier required to be present on the related class. </param>
      <param name="relatedRole">The role that the related class is playing in the relationship. </param>
      <param name="thisRole">The role that this class is playing in the relationship. </param>
      <param name="classDefinitionsOnly">Return only class definitions for the instances that match the query. </param>
      <param name="options">Extended options for how to execute the query. </param>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="MemberAccess" />
        <IPermission class="System.Security.Permissions.RegistryPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="M:System.Management.ManagementObject.GetRelated(System.String)">
      <summary>Gets a collection of objects related to the object (associators).</summary>
      <returns>A <see cref="T:System.Management.ManagementObjectCollection" /> containing the related objects.</returns>
      <param name="relatedClass">A class of related objects. </param>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="MemberAccess" />
        <IPermission class="System.Security.Permissions.RegistryPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="M:System.Management.ManagementObject.GetRelated(System.String,System.String,System.String,System.String,System.String,System.String,System.Boolean,System.Management.EnumerationOptions)">
      <summary>Gets a collection of objects related to the object (associators).</summary>
      <returns>A <see cref="T:System.Management.ManagementObjectCollection" /> containing the related objects.</returns>
      <param name="relatedClass">The class of the related objects. </param>
      <param name="relationshipClass">The relationship class of interest. </param>
      <param name="relationshipQualifier">The qualifier required to be present on the relationship class. </param>
      <param name="relatedQualifier">The qualifier required to be present on the related class. </param>
      <param name="relatedRole">The role that the related class is playing in the relationship. </param>
      <param name="thisRole">The role that this class is playing in the relationship. </param>
      <param name="classDefinitionsOnly">When this method returns, it contains only class definitions for the instances that match the query. </param>
      <param name="options">Extended options for how to execute the query. </param>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="MemberAccess" />
        <IPermission class="System.Security.Permissions.RegistryPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="M:System.Management.ManagementObject.GetRelationships">
      <summary>Gets a collection of associations to the object.</summary>
      <returns>A <see cref="T:System.Management.ManagementObjectCollection" /> containing the association objects.</returns>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="MemberAccess" />
        <IPermission class="System.Security.Permissions.RegistryPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="M:System.Management.ManagementObject.GetRelationships(System.Management.ManagementOperationObserver)">
      <summary>Gets a collection of associations to the object.</summary>
      <param name="watcher">The object to use to return results. </param>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="MemberAccess" />
        <IPermission class="System.Security.Permissions.RegistryPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="M:System.Management.ManagementObject.GetRelationships(System.Management.ManagementOperationObserver,System.String)">
      <summary>Gets a collection of associations to the object.</summary>
      <param name="watcher">The object to use to return results. </param>
      <param name="relationshipClass">The associations to include. </param>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="MemberAccess" />
        <IPermission class="System.Security.Permissions.RegistryPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="M:System.Management.ManagementObject.GetRelationships(System.Management.ManagementOperationObserver,System.String,System.String,System.String,System.Boolean,System.Management.EnumerationOptions)">
      <summary>Gets a collection of associations to the object.</summary>
      <param name="watcher">The object to use to return results. </param>
      <param name="relationshipClass">The type of relationship of interest. </param>
      <param name="relationshipQualifier">The qualifier to be present on the relationship. </param>
      <param name="thisRole">The role of this object in the relationship. </param>
      <param name="classDefinitionsOnly">When this method returns, it contains only the class definitions for the result set. </param>
      <param name="options">The extended options for the query execution. </param>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="MemberAccess" />
        <IPermission class="System.Security.Permissions.RegistryPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="M:System.Management.ManagementObject.GetRelationships(System.String)">
      <summary>Gets a collection of associations to the object.</summary>
      <returns>A <see cref="T:System.Management.ManagementObjectCollection" /> containing the association objects.</returns>
      <param name="relationshipClass">The associations to include. </param>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="MemberAccess" />
        <IPermission class="System.Security.Permissions.RegistryPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="M:System.Management.ManagementObject.GetRelationships(System.String,System.String,System.String,System.Boolean,System.Management.EnumerationOptions)">
      <summary>Gets a collection of associations to the object.</summary>
      <returns>A <see cref="T:System.Management.ManagementObjectCollection" /> containing the association objects.</returns>
      <param name="relationshipClass">The type of relationship of interest. </param>
      <param name="relationshipQualifier">The qualifier to be present on the relationship. </param>
      <param name="thisRole">The role of this object in the relationship. </param>
      <param name="classDefinitionsOnly">When this method returns, it contains only the class definitions for the result set. </param>
      <param name="options">The extended options for the query execution. </param>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="MemberAccess" />
        <IPermission class="System.Security.Permissions.RegistryPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="M:System.Management.ManagementObject.InvokeMethod(System.Management.ManagementOperationObserver,System.String,System.Management.ManagementBaseObject,System.Management.InvokeMethodOptions)">
      <summary>Invokes a method on the object, asynchronously.</summary>
      <param name="watcher">A <see cref="T:System.Management.ManagementOperationObserver" /> used to handle the asynchronous execution's progress and results. </param>
      <param name="methodName">The name of the method to be executed. </param>
      <param name="inParameters">A <see cref="T:System.Management.ManagementBaseObject" /> containing the input parameters for the method. </param>
      <param name="options">An <see cref="T:System.Management.InvokeMethodOptions" /> containing additional options used to execute the method. </param>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="MemberAccess" />
        <IPermission class="System.Security.Permissions.RegistryPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="M:System.Management.ManagementObject.InvokeMethod(System.Management.ManagementOperationObserver,System.String,System.Object[])">
      <summary>Invokes a method on the object, asynchronously.</summary>
      <param name="watcher">The object to receive the results of the operation. </param>
      <param name="methodName">The name of the method to execute. </param>
      <param name="args">An array containing parameter values. </param>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="MemberAccess" />
        <IPermission class="System.Security.Permissions.RegistryPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="M:System.Management.ManagementObject.InvokeMethod(System.String,System.Management.ManagementBaseObject,System.Management.InvokeMethodOptions)">
      <summary>Invokes a method on the WMI object. The input and output parameters are represented as <see cref="T:System.Management.ManagementBaseObject" /> objects.</summary>
      <returns>A <see cref="T:System.Management.ManagementBaseObject" /> containing the output parameters and return value of the executed method.</returns>
      <param name="methodName">The name of the method to execute. </param>
      <param name="inParameters">A <see cref="T:System.Management.ManagementBaseObject" /> holding the input parameters to the method. </param>
      <param name="options">An <see cref="T:System.Management.InvokeMethodOptions" /> containing additional options for the execution of the method. </param>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="MemberAccess" />
        <IPermission class="System.Security.Permissions.RegistryPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="M:System.Management.ManagementObject.InvokeMethod(System.String,System.Object[])">
      <summary>Invokes a method on the object.</summary>
      <returns>The object value returned by the method.</returns>
      <param name="methodName">The name of the method to execute. </param>
      <param name="args">An array containing parameter values. </param>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="MemberAccess" />
        <IPermission class="System.Security.Permissions.RegistryPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="P:System.Management.ManagementObject.Options">
      <summary>Gets or sets additional information to use when retrieving the object.</summary>
      <returns>An <see cref="T:System.Management.ObjectGetOptions" /> to use when retrieving the object.</returns>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
      </PermissionSet>
    </member>
    <member name="P:System.Management.ManagementObject.Path">
      <summary>Gets or sets the object's WMI path.</summary>
      <returns>A <see cref="T:System.Management.ManagementPath" /> representing the object's path.</returns>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.RegistryPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="M:System.Management.ManagementObject.Put">
      <summary>Commits the changes to the object.</summary>
      <returns>A <see cref="T:System.Management.ManagementPath" /> containing the path to the committed object.</returns>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="MemberAccess" />
        <IPermission class="System.Security.Permissions.RegistryPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="M:System.Management.ManagementObject.Put(System.Management.ManagementOperationObserver)">
      <summary>Commits the changes to the object, asynchronously.</summary>
      <param name="watcher">A <see cref="T:System.Management.ManagementOperationObserver" /> used to handle the progress and results of the asynchronous operation. </param>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="MemberAccess" />
        <IPermission class="System.Security.Permissions.RegistryPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="M:System.Management.ManagementObject.Put(System.Management.ManagementOperationObserver,System.Management.PutOptions)">
      <summary>Commits the changes to the object asynchronously and using the specified options.</summary>
      <param name="watcher">A <see cref="T:System.Management.ManagementOperationObserver" /> used to handle the progress and results of the asynchronous operation. </param>
      <param name="options">A <see cref="T:System.Management.PutOptions" /> used to specify additional options for the commit operation. </param>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="MemberAccess" />
        <IPermission class="System.Security.Permissions.RegistryPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="M:System.Management.ManagementObject.Put(System.Management.PutOptions)">
      <summary>Commits the changes to the object.</summary>
      <returns>A <see cref="T:System.Management.ManagementPath" /> containing the path to the committed object.</returns>
      <param name="options">The options for how to commit the changes. </param>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="MemberAccess" />
        <IPermission class="System.Security.Permissions.RegistryPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="P:System.Management.ManagementObject.Scope">
      <summary>Gets or sets the scope in which this object resides.</summary>
      <returns>A <see cref="T:System.Management.ManagementScope" />.</returns>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.RegistryPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="M:System.Management.ManagementObject.ToString">
      <summary>Returns the full path of the object. This is an override of the default object implementation.</summary>
      <returns>The full path of the object.</returns>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.RegistryPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="T:System.Management.ManagementObjectCollection">
      <summary>Represents different collections of management objects retrieved through WMI. The objects in this collection are of <see cref="T:System.Management.ManagementBaseObject" />-derived types, including <see cref="T:System.Management.ManagementObject" /> and <see cref="T:System.Management.ManagementClass" />. The collection can be the result of a WMI query executed through a <see cref="T:System.Management.ManagementObjectSearcher" />, or an enumeration of management objects of a specified type retrieved through a <see cref="T:System.Management.ManagementClass" /> representing that type. In addition, this can be a collection of management objects related in a specified way to a specific management object - in this case the collection would be retrieved through a method such as <see cref="M:System.Management.ManagementObject.GetRelated" />. The collection can be walked using the <see cref="T:System.Management.ManagementObjectCollection.ManagementObjectEnumerator" /> and objects in it can be inspected or manipulated for various management tasks.</summary>
    </member>
    <member name="M:System.Management.ManagementObjectCollection.CopyTo(System.Array,System.Int32)">
      <summary>Copies the collection to an array.          </summary>
      <param name="array">An array to copy to. </param>
      <param name="index">The index to start from. </param>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="MemberAccess" />
        <IPermission class="System.Security.Permissions.RegistryPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="M:System.Management.ManagementObjectCollection.CopyTo(System.Management.ManagementBaseObject[],System.Int32)">
      <summary>Copies the items in the collection to a <see cref="T:System.Management.ManagementBaseObject" /> array.          </summary>
      <param name="objectCollection">The target array.</param>
      <param name="index">The index to start from. </param>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="MemberAccess" />
        <IPermission class="System.Security.Permissions.RegistryPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="P:System.Management.ManagementObjectCollection.Count">
      <summary>Gets a value indicating the number of objects in the collection.          </summary>
      <returns>Returns an <see cref="T:System.Int32" /> value indicating the number of objects in the collection.</returns>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.RegistryPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="M:System.Management.ManagementObjectCollection.Dispose">
      <summary>Releases resources associated with this object. After this method has been called, an attempt to use this object will result in an <see cref="T:System.ObjectDisposedException" /> being thrown.                       </summary>
    </member>
    <member name="M:System.Management.ManagementObjectCollection.Finalize">
      <summary>Disposes of resources the object is holding. This is the destructor for the object. Finalizers are expressed using destructor syntax. </summary>
    </member>
    <member name="M:System.Management.ManagementObjectCollection.GetEnumerator">
      <summary>Returns the enumerator for the collection.</summary>
      <returns>An <see cref="T:System.Collections.IEnumerator" /> that can be used to iterate through the collection.</returns>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="MemberAccess" />
        <IPermission class="System.Security.Permissions.RegistryPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="P:System.Management.ManagementObjectCollection.IsSynchronized">
      <summary>Gets a value indicating whether the object is synchronized.          </summary>
      <returns>Returns a <see cref="T:System.Boolean" /> value indicating whether the object is synchronized.</returns>
    </member>
    <member name="P:System.Management.ManagementObjectCollection.SyncRoot">
      <summary>Gets the object to be used for synchronization.</summary>
      <returns>Returns an <see cref="T:System.Object" /> value that represents the object to be used for synchronization.</returns>
    </member>
    <member name="M:System.Management.ManagementObjectCollection.System#Collections#IEnumerable#GetEnumerator">
      <summary>Returns an <see cref="T:System.Collections.IEnumerator" /> that iterates through the <see cref="T:System.Management.ManagementObjectCollection" />.</summary>
      <returns>An <see cref="T:System.Collections.IEnumerator" /> for the <see cref="T:System.Management.ManagementObjectCollection" />.</returns>
    </member>
    <member name="T:System.Management.ManagementObjectCollection.ManagementObjectEnumerator">
      <summary>Represents the enumerator on the collection. </summary>
    </member>
    <member name="P:System.Management.ManagementObjectCollection.ManagementObjectEnumerator.Current">
      <summary>Gets the current <see cref="T:System.Management.ManagementBaseObject" /> that this enumerator points to.</summary>
      <returns>The current object in the enumeration.</returns>
    </member>
    <member name="M:System.Management.ManagementObjectCollection.ManagementObjectEnumerator.Dispose">
      <summary>Releases resources associated with this object. After this method has been called, an attempt to use this object will result in an <see cref="T:System.ObjectDisposedException" /> exception being thrown.</summary>
    </member>
    <member name="M:System.Management.ManagementObjectCollection.ManagementObjectEnumerator.Finalize">
      <summary>Disposes of resources the object is holding. This is the destructor for the object. Finalizers are expressed using destructor syntax.</summary>
    </member>
    <member name="M:System.Management.ManagementObjectCollection.ManagementObjectEnumerator.MoveNext">
      <summary>Indicates whether the enumerator has moved to the next object in the enumeration.</summary>
      <returns>true, if the enumerator was successfully advanced to the next element; false if the enumerator has passed the end of the collection.</returns>
    </member>
    <member name="M:System.Management.ManagementObjectCollection.ManagementObjectEnumerator.Reset">
      <summary>Resets the enumerator to the beginning of the collection.</summary>
    </member>
    <member name="P:System.Management.ManagementObjectCollection.ManagementObjectEnumerator.System#Collections#IEnumerator#Current">
      <summary>Gets the current object in the collection.</summary>
      <returns>Returns the current element in the collection.</returns>
      <exception cref="T:System.InvalidOperationException">The collection was modified after the enumerator was created.</exception>
    </member>
    <member name="T:System.Management.ManagementObjectSearcher">
      <summary>Retrieves a collection of management objects based on a specified query. This class is one of the more commonly used entry points to retrieving management information. For example, it can be used to enumerate all disk drives, network adapters, processes and many more management objects on a system, or to query for all network connections that are up, services that are paused, and so on.  When instantiated, an instance of this class takes as input a WMI query represented in an <see cref="T:System.Management.ObjectQuery" /> or its derivatives, and optionally a <see cref="T:System.Management.ManagementScope" /> representing the WMI namespace to execute the query in. It can also take additional advanced options in an <see cref="T:System.Management.EnumerationOptions" />. When the <see cref="M:System.Management.ManagementObjectSearcher.Get" /> method on this object                   is invoked, the <see cref="T:System.Management.ManagementObjectSearcher" /> executes the given query in the specified scope and returns a collection of management objects that match the query in a <see cref="T:System.Management.ManagementObjectCollection" />. </summary>
    </member>
    <member name="M:System.Management.ManagementObjectSearcher.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Management.ManagementObjectSearcher" /> class. After some properties on this object are set, the object can be used to invoke a query for management information. This is the default constructor.          </summary>
    </member>
    <member name="M:System.Management.ManagementObjectSearcher.#ctor(System.Management.ManagementScope,System.Management.ObjectQuery)">
      <summary>Initializes a new instance of the <see cref="T:System.Management.ManagementObjectSearcher" /> class used to invoke the specified query in the specified scope.          </summary>
      <param name="scope">A <see cref="T:System.Management.ManagementScope" /> representing the scope in which to invoke the query.</param>
      <param name="query">An <see cref="T:System.Management.ObjectQuery" /> representing the query to be invoked. </param>
    </member>
    <member name="M:System.Management.ManagementObjectSearcher.#ctor(System.Management.ManagementScope,System.Management.ObjectQuery,System.Management.EnumerationOptions)">
      <summary>Initializes a new instance of the <see cref="T:System.Management.ManagementObjectSearcher" /> class to be used to invoke the specified query in the specified scope, with the specified options.          </summary>
      <param name="scope">A <see cref="T:System.Management.ManagementScope" /> specifying the scope of the query.</param>
      <param name="query">An <see cref="T:System.Management.ObjectQuery" /> specifying the query to be invoked. </param>
      <param name="options">An <see cref="T:System.Management.EnumerationOptions" /> specifying additional options to be used for the query. </param>
    </member>
    <member name="M:System.Management.ManagementObjectSearcher.#ctor(System.Management.ObjectQuery)">
      <summary>Initializes a new instance of the <see cref="T:System.Management.ManagementObjectSearcher" /> class used to invoke the specified query for management information.          </summary>
      <param name="query">An <see cref="T:System.Management.ObjectQuery" /> representing the query to be invoked by the searcher.</param>
    </member>
    <member name="M:System.Management.ManagementObjectSearcher.#ctor(System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.Management.ManagementObjectSearcher" /> class used to invoke the specified query for management information.          </summary>
      <param name="queryString">The WMI query to be invoked by the object.</param>
    </member>
    <member name="M:System.Management.ManagementObjectSearcher.#ctor(System.String,System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.Management.ManagementObjectSearcher" /> class used to invoke the specified query in the specified scope.          </summary>
      <param name="scope">The scope in which to query.</param>
      <param name="queryString">The query to be invoked.  </param>
    </member>
    <member name="M:System.Management.ManagementObjectSearcher.#ctor(System.String,System.String,System.Management.EnumerationOptions)">
      <summary>Initializes a new instance of the <see cref="T:System.Management.ManagementObjectSearcher" /> class used to invoke the specified query, in the specified scope, and with the specified options.          </summary>
      <param name="scope">The scope in which the query should be invoked.</param>
      <param name="queryString">The query to be invoked. </param>
      <param name="options">An <see cref="T:System.Management.EnumerationOptions" /> specifying additional options for the query.  </param>
    </member>
    <member name="M:System.Management.ManagementObjectSearcher.Get">
      <summary>Invokes the specified WMI query and returns the resulting collection.          </summary>
      <returns>A <see cref="T:System.Management.ManagementObjectCollection" /> containing the objects that match the specified query.</returns>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="MemberAccess" />
        <IPermission class="System.Security.Permissions.RegistryPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="M:System.Management.ManagementObjectSearcher.Get(System.Management.ManagementOperationObserver)">
      <summary>Invokes the WMI query asynchronously, and binds to a watcher to deliver the results.          </summary>
      <param name="watcher">The watcher that raises events triggered by the operation. </param>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="MemberAccess" />
        <IPermission class="System.Security.Permissions.RegistryPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="P:System.Management.ManagementObjectSearcher.Options">
      <summary>Gets or sets the options for how to search for objects.          </summary>
      <returns>Returns an <see cref="T:System.Management.EnumerationOptions" /> that contains the options for searching for WMI objects.</returns>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
      </PermissionSet>
    </member>
    <member name="P:System.Management.ManagementObjectSearcher.Query">
      <summary>Gets or sets the query to be invoked in the searcher (that is, the criteria to be applied to the search for management objects).          </summary>
      <returns>Returns an <see cref="T:System.Management.ObjectQuery" /> that contains the query to be invoked in the searcher.</returns>
    </member>
    <member name="P:System.Management.ManagementObjectSearcher.Scope">
      <summary>Gets or sets the scope in which to look for objects (the scope represents a WMI namespace).          </summary>
      <returns>Returns a <see cref="T:System.Management.ManagementScope" /> that contains the scope (namespace) in which to look for the WMI objects.</returns>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.RegistryPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="T:System.Management.ManagementOperationObserver">
      <summary>Manages asynchronous operations and handles management information and events received asynchronously.          </summary>
    </member>
    <member name="M:System.Management.ManagementOperationObserver.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Management.ManagementOperationObserver" /> class. This is the default constructor.          </summary>
    </member>
    <member name="M:System.Management.ManagementOperationObserver.Cancel">
      <summary>Cancels all outstanding operations.          </summary>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="MemberAccess" />
      </PermissionSet>
    </member>
    <member name="E:System.Management.ManagementOperationObserver.Completed">
      <summary>Occurs when an operation has completed.</summary>
    </member>
    <member name="E:System.Management.ManagementOperationObserver.ObjectPut">
      <summary>Occurs when an object has been successfully committed.</summary>
    </member>
    <member name="E:System.Management.ManagementOperationObserver.ObjectReady">
      <summary>Occurs when a new object is available.</summary>
    </member>
    <member name="E:System.Management.ManagementOperationObserver.Progress">
      <summary>Occurs to indicate the progress of an ongoing operation.</summary>
    </member>
    <member name="T:System.Management.ManagementOptions">
      <summary>Provides an abstract base class for all options objects.</summary>
    </member>
    <member name="M:System.Management.ManagementOptions.Clone">
      <summary>Returns a copy of the object.          </summary>
      <returns>The cloned object.</returns>
    </member>
    <member name="P:System.Management.ManagementOptions.Context">
      <summary>Gets or sets a WMI context object. This is a name-value pairs list to be passed through to a WMI provider that supports context information for customized operation.          </summary>
      <returns>Returns a <see cref="T:System.Management.ManagementNamedValueCollection" /> that contains WMI context information. </returns>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
      </PermissionSet>
    </member>
    <member name="F:System.Management.ManagementOptions.InfiniteTimeout">
      <summary>Indicates that no timeout should occur.</summary>
    </member>
    <member name="P:System.Management.ManagementOptions.Timeout">
      <summary>Gets or sets the time-out to apply to the operation. Note that for operations that return collections, this time-out applies to the enumeration through the resulting collection, not the operation itself (the <see cref="P:System.Management.EnumerationOptions.ReturnImmediately" />                   property is used for the latter). This property is used to indicate that the operation should be performed semisynchronously.                       </summary>
      <returns>Returns a <see cref="T:System.TimeSpan" /> that defines the time-out time to apply to the operation.</returns>
    </member>
    <member name="T:System.Management.ManagementPath">
      <summary>Provides a wrapper for parsing and building paths to WMI objects.          </summary>
    </member>
    <member name="M:System.Management.ManagementPath.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Management.ManagementPath" /> class that is empty. This is the default constructor.          </summary>
    </member>
    <member name="M:System.Management.ManagementPath.#ctor(System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.Management.ManagementPath" /> class for the given path.          </summary>
      <param name="path"> The object path. </param>
    </member>
    <member name="P:System.Management.ManagementPath.ClassName">
      <summary>Gets or sets the class portion of the path.                       </summary>
      <returns>Returns a <see cref="T:System.String" /> value that holds the class portion of the path.</returns>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.RegistryPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="M:System.Management.ManagementPath.Clone">
      <summary>Returns a copy of the <see cref="T:System.Management.ManagementPath" />.          </summary>
      <returns>The cloned object.             </returns>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="MemberAccess" />
        <IPermission class="System.Security.Permissions.RegistryPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="P:System.Management.ManagementPath.DefaultPath">
      <summary>Gets or sets the default scope path used when no scope is specified. The default scope is \\.\root\cimv2, and can be changed by setting this property.          </summary>
      <returns>Returns a <see cref="T:System.Management.ManagementPath" /> that contains the default scope (namespace) path used when no scope is specified.</returns>
    </member>
    <member name="P:System.Management.ManagementPath.IsClass">
      <summary>Gets or sets a value indicating whether this is a class path.          </summary>
      <returns>Returns a <see cref="T:System.Boolean" /> value indicating whether this is a class path.</returns>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.RegistryPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="P:System.Management.ManagementPath.IsInstance">
      <summary>Gets or sets a value indicating whether this is an instance path.          </summary>
      <returns>Returns a <see cref="T:System.Boolean" /> value indicating whether this is an instance path.</returns>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.RegistryPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="P:System.Management.ManagementPath.IsSingleton">
      <summary>Gets or sets a value indicating whether this is a singleton instance path.          </summary>
      <returns>Returns a <see cref="T:System.Boolean" /> value indicating whether this is a singleton instance path.</returns>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.RegistryPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="P:System.Management.ManagementPath.NamespacePath">
      <summary>Gets or sets the namespace part of the path. Note that this does not include the server name, which can be retrieved separately.          </summary>
      <returns>Returns a <see cref="T:System.String" /> value containing the namespace part of the path.</returns>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.RegistryPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="P:System.Management.ManagementPath.Path">
      <summary>Gets or sets the string representation of the full path in the object.          </summary>
      <returns>Returns a <see cref="T:System.String" /> value containing the full path.</returns>
    </member>
    <member name="P:System.Management.ManagementPath.RelativePath">
      <summary>Gets or sets the relative path: class name and keys only.          </summary>
      <returns>Returns a <see cref="T:System.String" /> value containing the relative path.</returns>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.RegistryPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="P:System.Management.ManagementPath.Server">
      <summary>Gets or sets the server part of the path.          </summary>
      <returns>Returns a <see cref="T:System.String" /> value containing the server name.</returns>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.RegistryPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="M:System.Management.ManagementPath.SetAsClass">
      <summary>Sets the path as a new class path. This means that the path must have a class name but not key values.          </summary>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="MemberAccess" />
        <IPermission class="System.Security.Permissions.RegistryPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="M:System.Management.ManagementPath.SetAsSingleton">
      <summary>Sets the path as a new singleton object path. This means that it is a path to an instance but there are no key values.          </summary>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="MemberAccess" />
        <IPermission class="System.Security.Permissions.RegistryPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="M:System.Management.ManagementPath.System#ICloneable#Clone">
      <summary>Creates a new object that is a copy of the current instance.  </summary>
      <returns>A new object that is a copy of this instance.</returns>
    </member>
    <member name="M:System.Management.ManagementPath.ToString">
      <summary>Returns the full object path as the string representation.          </summary>
      <returns>A string containing the full object path represented by this object. This value is equivalent to the value of the <see cref="P:System.Management.ManagementPath.Path" /> property.             </returns>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.RegistryPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="T:System.Management.ManagementQuery">
      <summary>Provides an abstract base class for all management query objects.           </summary>
    </member>
    <member name="M:System.Management.ManagementQuery.Clone">
      <summary>Returns a copy of the object.          </summary>
      <returns>The cloned object.             </returns>
    </member>
    <member name="M:System.Management.ManagementQuery.ParseQuery(System.String)">
      <summary>Parses the query string and sets the property values accordingly. If the query is valid, the class name property and condition property of the query will be parsed.                       </summary>
      <param name="query">The query string to be parsed.</param>
    </member>
    <member name="P:System.Management.ManagementQuery.QueryLanguage">
      <summary>Gets or sets the query language used in the query string, defining the format of the query string.          </summary>
      <returns>Returns a <see cref="T:System.String" /> value containing the format of the query string.</returns>
    </member>
    <member name="P:System.Management.ManagementQuery.QueryString">
      <summary>Gets or sets the query in text format.          </summary>
      <returns>Returns a <see cref="T:System.String" /> value containing the query.</returns>
    </member>
    <member name="T:System.Management.ManagementScope">
      <summary>Represents a scope (namespace) for management operations.           </summary>
    </member>
    <member name="M:System.Management.ManagementScope.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Management.ManagementScope" /> class, with default values. This is the default constructor.          </summary>
    </member>
    <member name="M:System.Management.ManagementScope.#ctor(System.Management.ManagementPath)">
      <summary>Initializes a new instance of the <see cref="T:System.Management.ManagementScope" /> class representing the specified scope path.          </summary>
      <param name="path">A <see cref="T:System.Management.ManagementPath" /> containing the path to a server and namespace for the <see cref="T:System.Management.ManagementScope" />.</param>
    </member>
    <member name="M:System.Management.ManagementScope.#ctor(System.Management.ManagementPath,System.Management.ConnectionOptions)">
      <summary>Initializes a new instance of the <see cref="T:System.Management.ManagementScope" /> class representing the specified scope path, with the specified options.          </summary>
      <param name="path">A <see cref="T:System.Management.ManagementPath" /> containing the path to the server and namespace for the <see cref="T:System.Management.ManagementScope" />.</param>
      <param name="options">The <see cref="T:System.Management.ConnectionOptions" /> containing options for the connection. </param>
    </member>
    <member name="M:System.Management.ManagementScope.#ctor(System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.Management.ManagementScope" /> class representing the specified scope path.          </summary>
      <param name="path">The server and namespace path for the <see cref="T:System.Management.ManagementScope" />.</param>
    </member>
    <member name="M:System.Management.ManagementScope.#ctor(System.String,System.Management.ConnectionOptions)">
      <summary>Initializes a new instance of the <see cref="T:System.Management.ManagementScope" /> class representing the specified scope path, with the specified options.          </summary>
      <param name="path">The server and namespace for the <see cref="T:System.Management.ManagementScope" />.</param>
      <param name="options">A <see cref="T:System.Management.ConnectionOptions" /> containing options for the connection. </param>
    </member>
    <member name="M:System.Management.ManagementScope.Clone">
      <summary>Returns a copy of the object.          </summary>
      <returns>A new copy of the <see cref="T:System.Management.ManagementScope" />.</returns>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="MemberAccess" />
        <IPermission class="System.Security.Permissions.RegistryPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="M:System.Management.ManagementScope.Connect">
      <summary>Connects this <see cref="T:System.Management.ManagementScope" /> to the actual WMI scope.          </summary>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="MemberAccess" />
        <IPermission class="System.Security.Permissions.RegistryPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="P:System.Management.ManagementScope.IsConnected">
      <summary>Gets a value indicating whether the <see cref="T:System.Management.ManagementScope" /> is currently bound to a WMI server and namespace.          </summary>
      <returns>Returns a <see cref="T:System.Boolean" /> value indicating whether the scope is currently bound to a WMI server and namespace.</returns>
    </member>
    <member name="P:System.Management.ManagementScope.Options">
      <summary>Gets or sets options for making the WMI connection.          </summary>
      <returns>Returns a <see cref="T:System.Management.ConnectionOptions" /> that contains the options for making a WMI connection.</returns>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
      </PermissionSet>
    </member>
    <member name="P:System.Management.ManagementScope.Path">
      <summary>Gets or sets the path for the <see cref="T:System.Management.ManagementScope" />.          </summary>
      <returns>Returns a <see cref="T:System.Management.ManagementPath" /> containing the path to the scope (namespace).</returns>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.RegistryPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="M:System.Management.ManagementScope.System#ICloneable#Clone">
      <summary>Creates a new object that is a copy of the current instance.  </summary>
      <returns>A new object that is a copy of this instance.</returns>
    </member>
    <member name="T:System.Management.ManagementStatus">
      <summary>Describes the enumeration of all WMI error codes that are currently defined. </summary>
    </member>
    <member name="F:System.Management.ManagementStatus.NoError">
      <summary>The operation was successful. </summary>
    </member>
    <member name="F:System.Management.ManagementStatus.False">
      <summary>This value is returned when no more objects are available, the number of objects returned is less than the number requested, or at the end of an enumeration. It is also returned when the method is called with a value of 0 for the parameter.</summary>
    </member>
    <member name="F:System.Management.ManagementStatus.ResetToDefault">
      <summary>An overridden property was deleted. This value is returned to signal that the original, non-overridden value has been restored as a result of the deletion.</summary>
    </member>
    <member name="F:System.Management.ManagementStatus.Different">
      <summary>The compared items (such as objects and classes) are not identical.</summary>
    </member>
    <member name="F:System.Management.ManagementStatus.Timedout">
      <summary>A call timed out. This is not an error condition; therefore, some results may have been returned.</summary>
    </member>
    <member name="F:System.Management.ManagementStatus.NoMoreData">
      <summary>No more data is available from the enumeration; the user should terminate the enumeration. </summary>
    </member>
    <member name="F:System.Management.ManagementStatus.OperationCanceled">
      <summary>The operation was canceled.</summary>
    </member>
    <member name="F:System.Management.ManagementStatus.Pending">
      <summary>A request is still in progress; however, the results are not yet available.</summary>
    </member>
    <member name="F:System.Management.ManagementStatus.DuplicateObjects">
      <summary>More than one copy of the same object was detected in the result set of an enumeration. </summary>
    </member>
    <member name="F:System.Management.ManagementStatus.PartialResults">
      <summary>The user did not receive all of the requested objects because of inaccessible resources (other than security violations).</summary>
    </member>
    <member name="F:System.Management.ManagementStatus.Failed">
      <summary>The call failed.</summary>
    </member>
    <member name="F:System.Management.ManagementStatus.NotFound">
      <summary>The object could not be found. </summary>
    </member>
    <member name="F:System.Management.ManagementStatus.AccessDenied">
      <summary>The current user does not have permission to perform the action. </summary>
    </member>
    <member name="F:System.Management.ManagementStatus.ProviderFailure">
      <summary>The provider failed after initialization. </summary>
    </member>
    <member name="F:System.Management.ManagementStatus.TypeMismatch">
      <summary>A type mismatch occurred. </summary>
    </member>
    <member name="F:System.Management.ManagementStatus.OutOfMemory">
      <summary>There was not enough memory for the operation. </summary>
    </member>
    <member name="F:System.Management.ManagementStatus.InvalidContext">
      <summary>The context object is not valid.</summary>
    </member>
    <member name="F:System.Management.ManagementStatus.InvalidParameter">
      <summary>One of the parameters to the call is not correct. </summary>
    </member>
    <member name="F:System.Management.ManagementStatus.NotAvailable">
      <summary>The resource, typically a remote server, is not currently available. </summary>
    </member>
    <member name="F:System.Management.ManagementStatus.CriticalError">
      <summary>An internal, critical, and unexpected error occurred. Report this error to Microsoft Technical Support.</summary>
    </member>
    <member name="F:System.Management.ManagementStatus.InvalidStream">
      <summary>One or more network packets were corrupted during a remote session.</summary>
    </member>
    <member name="F:System.Management.ManagementStatus.NotSupported">
      <summary>The feature or operation is not supported. </summary>
    </member>
    <member name="F:System.Management.ManagementStatus.InvalidSuperclass">
      <summary>The specified superclass is not valid. </summary>
    </member>
    <member name="F:System.Management.ManagementStatus.InvalidNamespace">
      <summary>The specified namespace could not be found. </summary>
    </member>
    <member name="F:System.Management.ManagementStatus.InvalidObject">
      <summary>The specified instance is not valid. </summary>
    </member>
    <member name="F:System.Management.ManagementStatus.InvalidClass">
      <summary>The specified class is not valid. </summary>
    </member>
    <member name="F:System.Management.ManagementStatus.ProviderNotFound">
      <summary>A provider referenced in the schema does not have a corresponding registration. </summary>
    </member>
    <member name="F:System.Management.ManagementStatus.InvalidProviderRegistration">
      <summary>A provider referenced in the schema has an incorrect or incomplete registration. </summary>
    </member>
    <member name="F:System.Management.ManagementStatus.ProviderLoadFailure">
      <summary>COM cannot locate a provider referenced in the schema. </summary>
    </member>
    <member name="F:System.Management.ManagementStatus.InitializationFailure">
      <summary>A component, such as a provider, failed to initialize for internal reasons. </summary>
    </member>
    <member name="F:System.Management.ManagementStatus.TransportFailure">
      <summary> A networking error that prevents normal operation has occurred. </summary>
    </member>
    <member name="F:System.Management.ManagementStatus.InvalidOperation">
      <summary>The requested operation is not valid. This error usually applies to invalid attempts to delete classes or properties. </summary>
    </member>
    <member name="F:System.Management.ManagementStatus.InvalidQuery">
      <summary>The query was not syntactically valid. </summary>
    </member>
    <member name="F:System.Management.ManagementStatus.InvalidQueryType">
      <summary>The requested query language is not supported.</summary>
    </member>
    <member name="F:System.Management.ManagementStatus.AlreadyExists">
      <summary>In a put operation, the wbemChangeFlagCreateOnly flag was specified, but the instance already exists.</summary>
    </member>
    <member name="F:System.Management.ManagementStatus.OverrideNotAllowed">
      <summary>The add operation cannot be performed on the qualifier because the owning object does not permit overrides.</summary>
    </member>
    <member name="F:System.Management.ManagementStatus.PropagatedQualifier">
      <summary>The user attempted to delete a qualifier that was not owned. The qualifier was inherited from a parent class. </summary>
    </member>
    <member name="F:System.Management.ManagementStatus.PropagatedProperty">
      <summary>The user attempted to delete a property that was not owned. The property was inherited from a parent class. </summary>
    </member>
    <member name="F:System.Management.ManagementStatus.Unexpected">
      <summary>The client made an unexpected and illegal sequence of calls. </summary>
    </member>
    <member name="F:System.Management.ManagementStatus.IllegalOperation">
      <summary>The user requested an illegal operation, such as spawning a class from an instance.</summary>
    </member>
    <member name="F:System.Management.ManagementStatus.CannotBeKey">
      <summary>There was an illegal attempt to specify a key qualifier on a property that cannot be a key. The keys are specified in the class definition for an object and cannot be altered on a per-instance basis.</summary>
    </member>
    <member name="F:System.Management.ManagementStatus.IncompleteClass">
      <summary>The current object is not a valid class definition. Either it is incomplete, or it has not been registered with WMI using <see cref="M:System.Management.ManagementObject.Put" />().</summary>
    </member>
    <member name="F:System.Management.ManagementStatus.InvalidSyntax">
      <summary>Reserved for future use. </summary>
    </member>
    <member name="F:System.Management.ManagementStatus.NondecoratedObject">
      <summary>Reserved for future use. </summary>
    </member>
    <member name="F:System.Management.ManagementStatus.ReadOnly">
      <summary>The property that you are attempting to modify is read-only.</summary>
    </member>
    <member name="F:System.Management.ManagementStatus.ProviderNotCapable">
      <summary>The provider cannot perform the requested operation, such as requesting a query that is too complex, retrieving an instance, creating or updating a class, deleting a class, or enumerating a class. </summary>
    </member>
    <member name="F:System.Management.ManagementStatus.ClassHasChildren">
      <summary>An attempt was made to make a change that would invalidate a derived class.</summary>
    </member>
    <member name="F:System.Management.ManagementStatus.ClassHasInstances">
      <summary>An attempt has been made to delete or modify a class that has instances. </summary>
    </member>
    <member name="F:System.Management.ManagementStatus.QueryNotImplemented">
      <summary>Reserved for future use. </summary>
    </member>
    <member name="F:System.Management.ManagementStatus.IllegalNull">
      <summary>A value of null was specified for a property that may not be null, such as one that is marked by a Key, Indexed, or Not_Null qualifier.</summary>
    </member>
    <member name="F:System.Management.ManagementStatus.InvalidQualifierType">
      <summary>The value provided for a qualifier was not a legal qualifier type.</summary>
    </member>
    <member name="F:System.Management.ManagementStatus.InvalidPropertyType">
      <summary>The CIM type specified for a property is not valid. </summary>
    </member>
    <member name="F:System.Management.ManagementStatus.ValueOutOfRange">
      <summary>The request was made with an out-of-range value, or is incompatible with the type. </summary>
    </member>
    <member name="F:System.Management.ManagementStatus.CannotBeSingleton">
      <summary>An illegal attempt was made to make a class singleton, such as when the class is derived from a non-singleton class.</summary>
    </member>
    <member name="F:System.Management.ManagementStatus.InvalidCimType">
      <summary>The CIM type specified is not valid. </summary>
    </member>
    <member name="F:System.Management.ManagementStatus.InvalidMethod">
      <summary>The requested method is not available. </summary>
    </member>
    <member name="F:System.Management.ManagementStatus.InvalidMethodParameters">
      <summary>The parameters provided for the method are not valid. </summary>
    </member>
    <member name="F:System.Management.ManagementStatus.SystemProperty">
      <summary>There was an attempt to get qualifiers on a system property. </summary>
    </member>
    <member name="F:System.Management.ManagementStatus.InvalidProperty">
      <summary>The property type is not recognized. </summary>
    </member>
    <member name="F:System.Management.ManagementStatus.CallCanceled">
      <summary>An asynchronous process has been canceled internally or by the user. Note that because of the timing and nature of the asynchronous operation, the operation may not have been truly canceled. </summary>
    </member>
    <member name="F:System.Management.ManagementStatus.ShuttingDown">
      <summary>The user has requested an operation while WMI is in the process of closing.</summary>
    </member>
    <member name="F:System.Management.ManagementStatus.PropagatedMethod">
      <summary>An attempt was made to reuse an existing method name from a superclass, and the signatures did not match. </summary>
    </member>
    <member name="F:System.Management.ManagementStatus.UnsupportedParameter">
      <summary>One or more parameter values, such as a query text, is too complex or unsupported. WMI is requested to retry the operation with simpler parameters. </summary>
    </member>
    <member name="F:System.Management.ManagementStatus.MissingParameterID">
      <summary>A parameter was missing from the method call. </summary>
    </member>
    <member name="F:System.Management.ManagementStatus.InvalidParameterID">
      <summary>A method parameter has an invalid ID qualifier. </summary>
    </member>
    <member name="F:System.Management.ManagementStatus.NonconsecutiveParameterIDs">
      <summary>One or more of the method parameters have ID qualifiers that are out of sequence. </summary>
    </member>
    <member name="F:System.Management.ManagementStatus.ParameterIDOnRetval">
      <summary>The return value for a method has an ID qualifier. </summary>
    </member>
    <member name="F:System.Management.ManagementStatus.InvalidObjectPath">
      <summary>The specified object path was invalid. </summary>
    </member>
    <member name="F:System.Management.ManagementStatus.OutOfDiskSpace">
      <summary>There is not enough free disk space to continue the operation. </summary>
    </member>
    <member name="F:System.Management.ManagementStatus.BufferTooSmall">
      <summary>The supplied buffer was too small to hold all the objects in the enumerator or to read a string property. </summary>
    </member>
    <member name="F:System.Management.ManagementStatus.UnsupportedPutExtension">
      <summary>The provider does not support the requested put operation. </summary>
    </member>
    <member name="F:System.Management.ManagementStatus.UnknownObjectType">
      <summary>An object with an incorrect type or version was encountered during marshaling. </summary>
    </member>
    <member name="F:System.Management.ManagementStatus.UnknownPacketType">
      <summary>A packet with an incorrect type or version was encountered during marshaling. </summary>
    </member>
    <member name="F:System.Management.ManagementStatus.MarshalVersionMismatch">
      <summary>The packet has an unsupported version. </summary>
    </member>
    <member name="F:System.Management.ManagementStatus.MarshalInvalidSignature">
      <summary>The packet is corrupted.</summary>
    </member>
    <member name="F:System.Management.ManagementStatus.InvalidQualifier">
      <summary>An attempt has been made to mismatch qualifiers, such as putting [ManagementKey] on an object instead of a property. </summary>
    </member>
    <member name="F:System.Management.ManagementStatus.InvalidDuplicateParameter">
      <summary>A duplicate parameter has been declared in a CIM method. </summary>
    </member>
    <member name="F:System.Management.ManagementStatus.TooMuchData">
      <summary>Reserved for future use. </summary>
    </member>
    <member name="F:System.Management.ManagementStatus.ServerTooBusy">
      <summary>The delivery of an event has failed. The provider may choose to re-raise the event.</summary>
    </member>
    <member name="F:System.Management.ManagementStatus.InvalidFlavor">
      <summary>The specified flavor was invalid. </summary>
    </member>
    <member name="F:System.Management.ManagementStatus.CircularReference">
      <summary>An attempt has been made to create a reference that is circular (for example, deriving a class from itself). </summary>
    </member>
    <member name="F:System.Management.ManagementStatus.UnsupportedClassUpdate">
      <summary>The specified class is not supported. </summary>
    </member>
    <member name="F:System.Management.ManagementStatus.CannotChangeKeyInheritance">
      <summary>An attempt was made to change a key when instances or derived classes are already using the key. </summary>
    </member>
    <member name="F:System.Management.ManagementStatus.CannotChangeIndexInheritance">
      <summary>An attempt was made to change an index when instances or derived classes are already using the index. </summary>
    </member>
    <member name="F:System.Management.ManagementStatus.TooManyProperties">
      <summary>An attempt was made to create more properties than the current version of the class supports. </summary>
    </member>
    <member name="F:System.Management.ManagementStatus.UpdateTypeMismatch">
      <summary>A property was redefined with a conflicting type in a derived class. </summary>
    </member>
    <member name="F:System.Management.ManagementStatus.UpdateOverrideNotAllowed">
      <summary>An attempt was made in a derived class to override a non-overrideable qualifier. </summary>
    </member>
    <member name="F:System.Management.ManagementStatus.UpdatePropagatedMethod">
      <summary>A method was redeclared with a conflicting signature in a derived class. </summary>
    </member>
    <member name="F:System.Management.ManagementStatus.MethodNotImplemented">
      <summary>An attempt was made to execute a method not marked with [implemented] in any relevant class. </summary>
    </member>
    <member name="F:System.Management.ManagementStatus.MethodDisabled">
      <summary>An attempt was made to execute a method marked with [disabled]. </summary>
    </member>
    <member name="F:System.Management.ManagementStatus.RefresherBusy">
      <summary>The refresher is busy with another operation. </summary>
    </member>
    <member name="F:System.Management.ManagementStatus.UnparsableQuery">
      <summary>The filtering query is syntactically invalid. </summary>
    </member>
    <member name="F:System.Management.ManagementStatus.NotEventClass">
      <summary>The FROM clause of a filtering query references a class that is not an event class. </summary>
    </member>
    <member name="F:System.Management.ManagementStatus.MissingGroupWithin">
      <summary>A GROUP BY clause was used without the corresponding GROUP WITHIN clause. </summary>
    </member>
    <member name="F:System.Management.ManagementStatus.MissingAggregationList">
      <summary>A GROUP BY clause was used. Aggregation on all properties is not supported. </summary>
    </member>
    <member name="F:System.Management.ManagementStatus.PropertyNotAnObject">
      <summary>Dot notation was used on a property that is not an embedded object. </summary>
    </member>
    <member name="F:System.Management.ManagementStatus.AggregatingByObject">
      <summary>A GROUP BY clause references a property that is an embedded object without using dot notation. </summary>
    </member>
    <member name="F:System.Management.ManagementStatus.UninterpretableProviderQuery">
      <summary>An event provider registration query (__EventProviderRegistration) did not specify the classes for which events were provided. </summary>
    </member>
    <member name="F:System.Management.ManagementStatus.BackupRestoreWinmgmtRunning">
      <summary>An request was made to back up or restore the repository while WinMgmt.exe was using it. </summary>
    </member>
    <member name="F:System.Management.ManagementStatus.QueueOverflow">
      <summary>The asynchronous delivery queue overflowed from the event consumer being too slow. </summary>
    </member>
    <member name="F:System.Management.ManagementStatus.PrivilegeNotHeld">
      <summary>The operation failed because the client did not have the necessary security privilege. </summary>
    </member>
    <member name="F:System.Management.ManagementStatus.InvalidOperator">
      <summary>The operator is not valid for this property type.</summary>
    </member>
    <member name="F:System.Management.ManagementStatus.LocalCredentials">
      <summary>The user specified a user name, password, or authority on a local connection. The user must use an empty user name and password and rely on default security. </summary>
    </member>
    <member name="F:System.Management.ManagementStatus.CannotBeAbstract">
      <summary>The class was made abstract when its superclass is not abstract. </summary>
    </member>
    <member name="F:System.Management.ManagementStatus.AmendedObject">
      <summary>An amended object was used in a put operation without the WBEM_FLAG_USE_AMENDED_QUALIFIERS flag being specified. </summary>
    </member>
    <member name="F:System.Management.ManagementStatus.ClientTooSlow">
      <summary>The client was not retrieving objects quickly enough from an enumeration. </summary>
    </member>
    <member name="F:System.Management.ManagementStatus.RegistrationTooBroad">
      <summary>The provider registration overlaps with the system event domain. </summary>
    </member>
    <member name="F:System.Management.ManagementStatus.RegistrationTooPrecise">
      <summary>A WITHIN clause was not used in this query. </summary>
    </member>
    <member name="T:System.Management.MethodData">
      <summary>Contains information about a WMI method.          </summary>
    </member>
    <member name="P:System.Management.MethodData.InParameters">
      <summary>Gets the input parameters to the method. Each parameter is described as a property in the object. If a parameter is both in and out, it appears in both the <see cref="P:System.Management.MethodData.InParameters" /> and <see cref="P:System.Management.MethodData.OutParameters" /> properties.          </summary>
      <returns>Returns a <see cref="T:System.Management.ManagementBaseObject" /> containing the input parameters to the method.</returns>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.RegistryPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="P:System.Management.MethodData.Name">
      <summary>Gets the name of the method.          </summary>
      <returns>Returns a <see cref="T:System.String" /> value containing the name of the method.</returns>
    </member>
    <member name="P:System.Management.MethodData.Origin">
      <summary>Gets the name of the management class in which the method was first introduced in the class inheritance hierarchy.          </summary>
      <returns>Returns a <see cref="T:System.String" /> value containing the name of the class in which the method was first introduced in the class inheritance hierarchy.</returns>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.RegistryPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="P:System.Management.MethodData.OutParameters">
      <summary>Gets the output parameters to the method. Each parameter is described as a property in the object. If a parameter is both in and out, it will appear in both the <see cref="P:System.Management.MethodData.InParameters" /> and <see cref="P:System.Management.MethodData.OutParameters" /> properties.          </summary>
      <returns>Returns a <see cref="T:System.Management.ManagementBaseObject" /> containing the output parameters for the method.</returns>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.RegistryPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="P:System.Management.MethodData.Qualifiers">
      <summary>Gets a collection of qualifiers defined in the method. Each element is of type <see cref="T:System.Management.QualifierData" /> and contains information such as the qualifier name, value, and flavor.          </summary>
      <returns>Returns a <see cref="T:System.Management.QualifierDataCollection" /> containing the qualifiers for the method.</returns>
    </member>
    <member name="T:System.Management.MethodDataCollection">
      <summary>Represents the set of methods available in the collection.          </summary>
    </member>
    <member name="M:System.Management.MethodDataCollection.Add(System.String)">
      <summary>Adds a <see cref="T:System.Management.MethodData" /> to the <see cref="T:System.Management.MethodDataCollection" />. This overload will add a new method with no parameters to the collection.          </summary>
      <param name="methodName">The name of the method to add.</param>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.RegistryPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="M:System.Management.MethodDataCollection.Add(System.String,System.Management.ManagementBaseObject,System.Management.ManagementBaseObject)">
      <summary>Adds a <see cref="T:System.Management.MethodData" /> to the <see cref="T:System.Management.MethodDataCollection" />. This overload will add a new method with the specified parameter objects to the collection.          </summary>
      <param name="methodName">The name of the method to add.</param>
      <param name="inParameters">The <see cref="T:System.Management.ManagementBaseObject" /> holding the input parameters to the method. </param>
      <param name="outParameters">The <see cref="T:System.Management.ManagementBaseObject" /> holding the output parameters to the method. </param>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.RegistryPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="M:System.Management.MethodDataCollection.CopyTo(System.Array,System.Int32)">
      <summary>Copies the <see cref="T:System.Management.MethodDataCollection" /> into an array.          </summary>
      <param name="array">The array to which to copy the collection. </param>
      <param name="index">The index from which to start. </param>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.RegistryPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="M:System.Management.MethodDataCollection.CopyTo(System.Management.MethodData[],System.Int32)">
      <summary>Copies the <see cref="T:System.Management.MethodDataCollection" /> to a specialized <see cref="T:System.Management.MethodData" /> array.          </summary>
      <param name="methodArray">The destination array to which to copy the <see cref="T:System.Management.MethodData" /> objects.</param>
      <param name="index">The index in the destination array from which to start the copy.</param>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.RegistryPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="P:System.Management.MethodDataCollection.Count">
      <summary>Gets the number of objects in the <see cref="T:System.Management.MethodDataCollection" /> collection.         </summary>
      <returns>Returns an <see cref="T:System.Int32" /> value representing the number of objects in the collection.</returns>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.RegistryPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="M:System.Management.MethodDataCollection.GetEnumerator">
      <summary>Returns an enumerator for the <see cref="T:System.Management.MethodDataCollection" />.          </summary>
      <returns>An <see cref="T:System.Collections.IEnumerator" /> to enumerate through the collection.</returns>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.RegistryPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="P:System.Management.MethodDataCollection.IsSynchronized">
      <summary>Gets a value that indicates whether the object is synchronized.          </summary>
      <returns>Returns a <see cref="T:System.Boolean" /> value indicating whether the object is synchronized.</returns>
    </member>
    <member name="P:System.Management.MethodDataCollection.Item(System.String)">
      <summary>Gets the specified <see cref="T:System.Management.MethodData" /> from the <see cref="T:System.Management.MethodDataCollection" />.          </summary>
      <returns>Returns a <see cref="T:System.Management.MethodData" /> containing the method data for a specified method from the collection.</returns>
      <param name="methodName">The name of the method requested.</param>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.RegistryPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="M:System.Management.MethodDataCollection.Remove(System.String)">
      <summary>Removes a <see cref="T:System.Management.MethodData" /> from the <see cref="T:System.Management.MethodDataCollection" />.          </summary>
      <param name="methodName">The name of the method to remove from the collection.</param>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.RegistryPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="P:System.Management.MethodDataCollection.SyncRoot">
      <summary>Gets the object to be used for synchronization.          </summary>
      <returns>Returns an <see cref="T:System.Object" /> value representing the object to be used for synchronization.</returns>
    </member>
    <member name="M:System.Management.MethodDataCollection.System#Collections#IEnumerable#GetEnumerator">
      <summary>Returns an <see cref="T:System.Collections.IEnumerator" /> that iterates through the <see cref="T:System.Management.MethodDataCollection" />.</summary>
      <returns>An <see cref="T:System.Collections.IEnumerator" /> for the <see cref="T:System.Management.MethodDataCollection" />.</returns>
    </member>
    <member name="T:System.Management.MethodDataCollection.MethodDataEnumerator">
      <summary>Represents the enumerator for <see cref="T:System.Management.MethodData" /> objects in the <see cref="T:System.Management.MethodDataCollection" />. </summary>
    </member>
    <member name="P:System.Management.MethodDataCollection.MethodDataEnumerator.Current">
      <summary>Returns the current <see cref="T:System.Management.MethodData" /> in the <see cref="T:System.Management.MethodDataCollection" /> enumeration.</summary>
      <returns>The current <see cref="T:System.Management.MethodData" /> item in the collection.</returns>
    </member>
    <member name="M:System.Management.MethodDataCollection.MethodDataEnumerator.MoveNext">
      <summary>Moves to the next element in the <see cref="T:System.Management.MethodDataCollection" /> enumeration.</summary>
      <returns>true if the enumerator was successfully advanced to the next method; false if the enumerator has passed the end of the collection.</returns>
    </member>
    <member name="M:System.Management.MethodDataCollection.MethodDataEnumerator.Reset">
      <summary>Resets the enumerator to the beginning of the <see cref="T:System.Management.MethodDataCollection" /> enumeration.</summary>
    </member>
    <member name="P:System.Management.MethodDataCollection.MethodDataEnumerator.System#Collections#IEnumerator#Current">
      <summary>Gets the current object in the collection.</summary>
      <returns>Returns the current element in the collection.</returns>
      <exception cref="T:System.InvalidOperationException">The collection was modified after the enumerator was created.</exception>
    </member>
    <member name="T:System.Management.ObjectGetOptions">
      <summary>Specifies options for getting a management object.          </summary>
    </member>
    <member name="M:System.Management.ObjectGetOptions.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Management.ObjectGetOptions" /> class for getting a WMI object, using default values. This is the default constructor.          </summary>
    </member>
    <member name="M:System.Management.ObjectGetOptions.#ctor(System.Management.ManagementNamedValueCollection)">
      <summary>Initializes a new instance of the <see cref="T:System.Management.ObjectGetOptions" /> class for getting a WMI object, using the specified provider-specific context.          </summary>
      <param name="context">A provider-specific, named-value pairs context object to be passed through to the provider.</param>
    </member>
    <member name="M:System.Management.ObjectGetOptions.#ctor(System.Management.ManagementNamedValueCollection,System.TimeSpan,System.Boolean)">
      <summary>Initializes a new instance of the <see cref="T:System.Management.ObjectGetOptions" /> class for getting a WMI object, using the given options values.          </summary>
      <param name="context">A provider-specific, named-value pairs context object to be passed through to the provider.</param>
      <param name="timeout">The length of time to let the operation perform before it times out. The default is <see cref="F:System.TimeSpan.MaxValue" />.  </param>
      <param name="useAmendedQualifiers">true if the returned objects should contain amended (locale-aware) qualifiers; otherwise, false. </param>
    </member>
    <member name="M:System.Management.ObjectGetOptions.Clone">
      <summary>Returns a copy of the object.          </summary>
      <returns>The cloned object.</returns>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
      </PermissionSet>
    </member>
    <member name="P:System.Management.ObjectGetOptions.UseAmendedQualifiers">
      <summary>Gets or sets a value indicating whether the objects returned from WMI should contain amended information. Typically, amended information is localizable information attached to the WMI object, such as object and property descriptions.          </summary>
      <returns>Returns a <see cref="T:System.Boolean" /> value indicating whether the objects returned from WMI should contain amended information.</returns>
    </member>
    <member name="T:System.Management.ObjectPutEventArgs">
      <summary>Holds event data for the <see cref="E:System.Management.ManagementOperationObserver.ObjectPut" /> event.          </summary>
    </member>
    <member name="P:System.Management.ObjectPutEventArgs.Path">
      <summary>Gets the identity of the object that has been put.          </summary>
      <returns>Returns a <see cref="T:System.Management.ManagementPath" /> containing the path of the object that has been put.</returns>
    </member>
    <member name="T:System.Management.ObjectPutEventHandler">
      <summary>Represents the method that will handle the <see cref="E:System.Management.ManagementOperationObserver.ObjectPut" /> event.  </summary>
      <param name="sender">The instance of the object for which to invoke this method.</param>
      <param name="e">The <see cref="T:System.Management.ObjectPutEventArgs" /> that specifies the reason the event was invoked.</param>
    </member>
    <member name="T:System.Management.ObjectQuery">
      <summary>Represents a management query that returns instances or classes.          </summary>
    </member>
    <member name="M:System.Management.ObjectQuery.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Management.ObjectQuery" /> class with no initialized values. This is the default constructor.          </summary>
    </member>
    <member name="M:System.Management.ObjectQuery.#ctor(System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.Management.ObjectQuery" /> class for a specific query string.          </summary>
      <param name="query">The string representation of the query.</param>
    </member>
    <member name="M:System.Management.ObjectQuery.#ctor(System.String,System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.Management.ObjectQuery" /> class for a specific query string and language.          </summary>
      <param name="language">The query language in which this query is specified.</param>
      <param name="query">The string representation of the query. </param>
    </member>
    <member name="M:System.Management.ObjectQuery.Clone">
      <summary>Returns a copy of the object.          </summary>
      <returns>The cloned object.             </returns>
    </member>
    <member name="T:System.Management.ObjectReadyEventArgs">
      <summary>Holds event data for the <see cref="E:System.Management.ManagementOperationObserver.ObjectReady" /> event.          </summary>
    </member>
    <member name="P:System.Management.ObjectReadyEventArgs.NewObject">
      <summary>Gets the newly-returned object.          </summary>
      <returns>Returns a <see cref="T:System.Management.ManagementBaseObject" /> containing the newly-returned object.</returns>
    </member>
    <member name="T:System.Management.ObjectReadyEventHandler">
      <summary>Represents the method that will handle the <see cref="E:System.Management.ManagementOperationObserver.ObjectReady" /> event.</summary>
      <param name="sender">The instance of the object for which to invoke this method.</param>
      <param name="e">The <see cref="T:System.Management.ObjectReadyEventArgs" /> that specifies the reason the event was invoked.</param>
    </member>
    <member name="T:System.Management.ProgressEventArgs">
      <summary>Holds event data for the <see cref="E:System.Management.ManagementOperationObserver.Progress" /> event.          </summary>
    </member>
    <member name="P:System.Management.ProgressEventArgs.Current">
      <summary>Gets the current amount of work done by the operation. This is always less than or equal to <see cref="P:System.Management.ProgressEventArgs.UpperBound" />.          </summary>
      <returns>Returns an <see cref="T:System.Int32" /> value representing the current amount of work already completed by the operation.</returns>
    </member>
    <member name="P:System.Management.ProgressEventArgs.Message">
      <summary>Gets or sets optional additional information regarding the operation's progress.          </summary>
      <returns>Returns a <see cref="T:System.String" /> value containing information regarding the operation's progress.</returns>
    </member>
    <member name="P:System.Management.ProgressEventArgs.UpperBound">
      <summary>Gets the total amount of work required to be done by the operation.          </summary>
      <returns>Returns an <see cref="T:System.Int32" /> value representing the total amount of work to be done by the operation.</returns>
    </member>
    <member name="T:System.Management.ProgressEventHandler">
      <summary>Represents the method that will handle the <see cref="E:System.Management.ManagementOperationObserver.Progress" /> event.</summary>
      <param name="sender">The instance of the object for which to invoke this method.</param>
      <param name="e">The <see cref="T:System.Management.ProgressEventArgs" /> that specifies the reason the event was invoked.</param>
    </member>
    <member name="T:System.Management.PropertyData">
      <summary>Represents information about a WMI property.          </summary>
    </member>
    <member name="P:System.Management.PropertyData.IsArray">
      <summary>Gets a value indicating whether the property is an array.          </summary>
      <returns>Returns a <see cref="T:System.Boolean" /> value indicating whether the property is an array.</returns>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="P:System.Management.PropertyData.IsLocal">
      <summary>Gets a value indicating whether the property has been defined in the current WMI class.          </summary>
      <returns>Returns a <see cref="T:System.Boolean" /> value indicating whether the property has been defined in the current WMI class.</returns>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="P:System.Management.PropertyData.Name">
      <summary>Gets the name of the property.          </summary>
      <returns>Returns a <see cref="T:System.String" /> value containing the property name.</returns>
    </member>
    <member name="P:System.Management.PropertyData.Origin">
      <summary>Gets the name of the WMI class in the hierarchy in which the property was introduced.          </summary>
      <returns>Returns a <see cref="T:System.String" /> value containing the name of the WMI class in the hierarchy in which the property was introduced.</returns>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.RegistryPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="P:System.Management.PropertyData.Qualifiers">
      <summary>Gets the set of qualifiers defined on the property.          </summary>
      <returns>Returns a <see cref="T:System.Management.QualifierDataCollection" /> containing the set of qualifiers defined on the property.</returns>
    </member>
    <member name="P:System.Management.PropertyData.Type">
      <summary>Gets the CIM type of the property.          </summary>
      <returns>Returns a <see cref="T:System.Management.CimType" /> enumeration value representing the CIM type of the property.</returns>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="P:System.Management.PropertyData.Value">
      <summary>Gets or sets the current value of the property.          </summary>
      <returns>Returns an <see cref="T:System.Object" /> value representing the value of the property.</returns>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.RegistryPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="T:System.Management.PropertyDataCollection">
      <summary>Represents the set of properties of a WMI object.</summary>
    </member>
    <member name="M:System.Management.PropertyDataCollection.Add(System.String,System.Management.CimType,System.Boolean)">
      <summary>Adds a new <see cref="T:System.Management.PropertyData" /> with no assigned value.          </summary>
      <param name="propertyName">The name of the property.</param>
      <param name="propertyType">The Common Information Model (CIM) type of the property.</param>
      <param name="isArray">true to specify that the property is an array type; otherwise, false.</param>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.RegistryPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="M:System.Management.PropertyDataCollection.Add(System.String,System.Object)">
      <summary>Adds a new <see cref="T:System.Management.PropertyData" /> with the specified value. The value cannot be null and must be convertible to a Common Information Model (CIM) type.          </summary>
      <param name="propertyName">The name of the new property.</param>
      <param name="propertyValue">The value of the property (cannot be null).</param>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.RegistryPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="M:System.Management.PropertyDataCollection.Add(System.String,System.Object,System.Management.CimType)">
      <summary>Adds a new <see cref="T:System.Management.PropertyData" /> with the specified value and Common Information Model (CIM) type.          </summary>
      <param name="propertyName">The name of the property.</param>
      <param name="propertyValue">The value of the property (which can be null).</param>
      <param name="propertyType">The CIM type of the property.</param>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.RegistryPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="M:System.Management.PropertyDataCollection.CopyTo(System.Array,System.Int32)">
      <summary>Copies the <see cref="T:System.Management.PropertyDataCollection" /> into an array.          </summary>
      <param name="array">The array to which to copy the <see cref="T:System.Management.PropertyDataCollection" />. </param>
      <param name="index">The index from which to start copying. </param>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.RegistryPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="M:System.Management.PropertyDataCollection.CopyTo(System.Management.PropertyData[],System.Int32)">
      <summary>Copies the <see cref="T:System.Management.PropertyDataCollection" /> to a specialized <see cref="T:System.Management.PropertyData" /> object array.          </summary>
      <param name="propertyArray">The destination array to contain the copied <see cref="T:System.Management.PropertyDataCollection" />.</param>
      <param name="index">The index in the destination array from which to start copying. </param>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.RegistryPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="P:System.Management.PropertyDataCollection.Count">
      <summary>Gets the number of objects in the <see cref="T:System.Management.PropertyDataCollection" />.          </summary>
      <returns>Returns an <see cref="T:System.Int32" /> value representing the number of objects in the collection.</returns>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.RegistryPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="M:System.Management.PropertyDataCollection.GetEnumerator">
      <summary>Returns the enumerator for this <see cref="T:System.Management.PropertyDataCollection" />.          </summary>
      <returns>An <see cref="T:System.Collections.IEnumerator" /> that can be used to iterate through the collection.</returns>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.RegistryPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="P:System.Management.PropertyDataCollection.IsSynchronized">
      <summary>Gets a value indicating whether the object is synchronized.          </summary>
      <returns>Returns a <see cref="T:System.Boolean" /> value indicating whether the object is synchronized.</returns>
    </member>
    <member name="P:System.Management.PropertyDataCollection.Item(System.String)">
      <summary>Gets the specified property from the <see cref="T:System.Management.PropertyDataCollection" />, using [] syntax. This property is the indexer for the <see cref="T:System.Management.PropertyDataCollection" /> class.</summary>
      <returns>Returns a <see cref="T:System.Management.PropertyData" /> containing the data for a specified property in the collection.</returns>
      <param name="propertyName">The name of the property to retrieve.</param>
    </member>
    <member name="M:System.Management.PropertyDataCollection.Remove(System.String)">
      <summary>Removes a <see cref="T:System.Management.PropertyData" /> from the <see cref="T:System.Management.PropertyDataCollection" />.          </summary>
      <param name="propertyName">The name of the property to be removed.</param>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="MemberAccess" />
        <IPermission class="System.Security.Permissions.RegistryPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="P:System.Management.PropertyDataCollection.SyncRoot">
      <summary>Gets the object to be used for synchronization.          </summary>
      <returns>Returns an <see cref="T:System.Object" /> value containing the object to be used for synchronization.</returns>
    </member>
    <member name="M:System.Management.PropertyDataCollection.System#Collections#IEnumerable#GetEnumerator">
      <summary>Returns an <see cref="T:System.Collections.IEnumerator" /> that iterates through the <see cref="T:System.Management.PropertyDataCollection" />.</summary>
      <returns>An <see cref="T:System.Collections.IEnumerator" /> for the <see cref="T:System.Management.PropertyDataCollection" />.</returns>
    </member>
    <member name="T:System.Management.PropertyDataCollection.PropertyDataEnumerator">
      <summary>Represents the enumerator for <see cref="T:System.Management.PropertyData" /> objects in the <see cref="T:System.Management.PropertyDataCollection" />. </summary>
    </member>
    <member name="P:System.Management.PropertyDataCollection.PropertyDataEnumerator.Current">
      <summary>Gets the current <see cref="T:System.Management.PropertyData" /> in the <see cref="T:System.Management.PropertyDataCollection" /> enumeration.</summary>
      <returns>The current <see cref="T:System.Management.PropertyData" /> element in the collection.</returns>
    </member>
    <member name="M:System.Management.PropertyDataCollection.PropertyDataEnumerator.MoveNext">
      <summary>Moves to the next element in the <see cref="T:System.Management.PropertyDataCollection" /> enumeration.</summary>
      <returns>true if the enumerator was successfully advanced to the next element; false if the enumerator has passed the end of the collection.</returns>
    </member>
    <member name="M:System.Management.PropertyDataCollection.PropertyDataEnumerator.Reset">
      <summary>Resets the enumerator to the beginning of the <see cref="T:System.Management.PropertyDataCollection" /> enumeration.</summary>
    </member>
    <member name="P:System.Management.PropertyDataCollection.PropertyDataEnumerator.System#Collections#IEnumerator#Current">
      <summary>Gets the current object in the collection.</summary>
      <returns>Returns the current element in the collection.</returns>
      <exception cref="T:System.InvalidOperationException">The collection was modified after the enumerator was created.</exception>
    </member>
    <member name="T:System.Management.PutOptions">
      <summary>Specifies options for committing management object changes.          </summary>
    </member>
    <member name="M:System.Management.PutOptions.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Management.PutOptions" /> class for put operations, using default values. This is the default constructor.          </summary>
    </member>
    <member name="M:System.Management.PutOptions.#ctor(System.Management.ManagementNamedValueCollection)">
      <summary>Initializes a new instance of the <see cref="T:System.Management.PutOptions" /> class for committing a WMI object, using the specified provider-specific context.          </summary>
      <param name="context">A provider-specific, named-value pairs context object to be passed through to the provider.</param>
    </member>
    <member name="M:System.Management.PutOptions.#ctor(System.Management.ManagementNamedValueCollection,System.TimeSpan,System.Boolean,System.Management.PutType)">
      <summary>Initializes a new instance of the <see cref="T:System.Management.PutOptions" /> class for committing a WMI object, using the specified option values.          </summary>
      <param name="context">A provider-specific, named-value pairs object to be passed through to the provider. </param>
      <param name="timeout">The length of time to let the operation perform before it times out. The default is <see cref="F:System.TimeSpan.MaxValue" />. </param>
      <param name="useAmendedQualifiers">true if the returned objects should contain amended (locale-aware) qualifiers; otherwise, false. </param>
      <param name="putType">The type of commit to be performed (update or create). </param>
    </member>
    <member name="M:System.Management.PutOptions.Clone">
      <summary>Returns a copy of the object.          </summary>
      <returns>The cloned object.</returns>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
      </PermissionSet>
    </member>
    <member name="P:System.Management.PutOptions.Type">
      <summary>Gets or sets the type of commit to be performed for the object.          </summary>
      <returns>Returns a <see cref="T:System.Management.PutType" /> enumeration value representing the type of commit to be performed for the object.</returns>
    </member>
    <member name="P:System.Management.PutOptions.UseAmendedQualifiers">
      <summary>Gets or sets a value indicating whether the objects returned from WMI should                   contain amended information. Typically, amended information is localizable information attached to the WMI object, such as object and property descriptions.          </summary>
      <returns>Returns a <see cref="T:System.Boolean" /> value indicating whether the objects returned from WMI should contain amended information.</returns>
    </member>
    <member name="T:System.Management.PutType">
      <summary>Describes the possible effects of saving an object to WMI when using <see cref="M:System.Management.ManagementObject.Put" />.          </summary>
    </member>
    <member name="F:System.Management.PutType.None">
      <summary>No change.</summary>
    </member>
    <member name="F:System.Management.PutType.UpdateOnly">
      <summary>Updates an existing object only; does not create a new object.</summary>
    </member>
    <member name="F:System.Management.PutType.CreateOnly">
      <summary>Creates an object only; does not update an existing object.</summary>
    </member>
    <member name="F:System.Management.PutType.UpdateOrCreate">
      <summary>Saves the object, whether updating an existing object or creating a new object.</summary>
    </member>
    <member name="T:System.Management.QualifierData">
      <summary>Contains information about a WMI qualifier.          </summary>
    </member>
    <member name="P:System.Management.QualifierData.IsAmended">
      <summary>Gets or sets a value indicating whether the qualifier is amended.          </summary>
      <returns>Returns a <see cref="T:System.Boolean" /> value indicating whether the qualifier is amended.</returns>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.RegistryPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="P:System.Management.QualifierData.IsLocal">
      <summary>Gets a value indicating whether the qualifier has been defined locally on this class or has been propagated from a base class.          </summary>
      <returns>Returns a <see cref="T:System.Boolean" /> value indicating whether the qualifier has been defined locally on this class or has been propagated from a base class.</returns>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.RegistryPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="P:System.Management.QualifierData.IsOverridable">
      <summary>Gets or sets a value indicating whether the value of the qualifier can be overridden when propagated.          </summary>
      <returns>Returns a <see cref="T:System.Boolean" /> value indicating whether the value of the qualifier can be overridden when propagated.</returns>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.RegistryPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="P:System.Management.QualifierData.Name">
      <summary>Represents the name of the qualifier.          </summary>
      <returns>Returns a <see cref="T:System.String" /> value containing the name of the qualifier.</returns>
    </member>
    <member name="P:System.Management.QualifierData.PropagatesToInstance">
      <summary>Gets or sets a value indicating whether the qualifier should be propagated to instances of the class.          </summary>
      <returns>Returns a <see cref="T:System.Boolean" /> value indicating whether the qualifier should be propagated to instances of the class.</returns>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.RegistryPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="P:System.Management.QualifierData.PropagatesToSubclass">
      <summary>Gets or sets a value indicating whether the qualifier should be propagated to                    subclasses of the class.          </summary>
      <returns>Returns a <see cref="T:System.Boolean" /> value indicating whether the qualifier should be propagated to subclasses of the class.</returns>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.RegistryPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="P:System.Management.QualifierData.Value">
      <summary>Gets or sets the value of the qualifier.          </summary>
      <returns>Returns an <see cref="T:System.Object" /> value containing the value of the qualifier.</returns>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.RegistryPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="T:System.Management.QualifierDataCollection">
      <summary>Represents a collection of <see cref="T:System.Management.QualifierData" /> objects.          </summary>
    </member>
    <member name="M:System.Management.QualifierDataCollection.Add(System.String,System.Object)">
      <summary>Adds a <see cref="T:System.Management.QualifierData" /> to the <see cref="T:System.Management.QualifierDataCollection" />. This overload specifies the qualifier name and value.          </summary>
      <param name="qualifierName">The name of the <see cref="T:System.Management.QualifierData" /> to be added to the <see cref="T:System.Management.QualifierDataCollection" />. </param>
      <param name="qualifierValue">The value for the new qualifier. </param>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.RegistryPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="M:System.Management.QualifierDataCollection.Add(System.String,System.Object,System.Boolean,System.Boolean,System.Boolean,System.Boolean)">
      <summary>Adds a <see cref="T:System.Management.QualifierData" /> to the <see cref="T:System.Management.QualifierDataCollection" />. This overload specifies all property values for a <see cref="T:System.Management.QualifierData" />.          </summary>
      <param name="qualifierName">The qualifier name. </param>
      <param name="qualifierValue">The qualifier value. </param>
      <param name="isAmended">true to specify that this qualifier is amended (flavor); otherwise, false. </param>
      <param name="propagatesToInstance">true to propagate this qualifier to instances; otherwise, false. </param>
      <param name="propagatesToSubclass">true to propagate this qualifier to subclasses; otherwise, false. </param>
      <param name="isOverridable">true to specify that this qualifier's value is overridable in instances of subclasses; otherwise, false. </param>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.RegistryPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="M:System.Management.QualifierDataCollection.CopyTo(System.Array,System.Int32)">
      <summary>Copies the <see cref="T:System.Management.QualifierDataCollection" /> into an array.          </summary>
      <param name="array">The array to which to copy the <see cref="T:System.Management.QualifierDataCollection" />. </param>
      <param name="index">The index from which to start copying. </param>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.RegistryPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="M:System.Management.QualifierDataCollection.CopyTo(System.Management.QualifierData[],System.Int32)">
      <summary>Copies the <see cref="T:System.Management.QualifierDataCollection" /> into a specialized              <see cref="T:System.Management.QualifierData" /> array.          </summary>
      <param name="qualifierArray">The specialized array of <see cref="T:System.Management.QualifierData" /> objects to which to copy the <see cref="T:System.Management.QualifierDataCollection" />.</param>
      <param name="index">The index from which to start copying. </param>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.RegistryPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="P:System.Management.QualifierDataCollection.Count">
      <summary>Gets the number of <see cref="T:System.Management.QualifierData" /> objects in the <see cref="T:System.Management.QualifierDataCollection" />.          </summary>
      <returns>Returns an <see cref="T:System.Int32" /> value representing the number of objects in the collection.</returns>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.RegistryPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="M:System.Management.QualifierDataCollection.GetEnumerator">
      <summary>Returns an enumerator for the <see cref="T:System.Management.QualifierDataCollection" />. This method is strongly typed.          </summary>
      <returns>An <see cref="T:System.Collections.IEnumerator" /> that can be used to iterate through the collection.</returns>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.RegistryPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="P:System.Management.QualifierDataCollection.IsSynchronized">
      <summary>Gets a value indicating whether the object is synchronized.          </summary>
      <returns>Returns a <see cref="T:System.Boolean" /> value indicating whether the object is synchronized.</returns>
    </member>
    <member name="P:System.Management.QualifierDataCollection.Item(System.String)">
      <summary>Gets the specified <see cref="T:System.Management.QualifierData" /> from the <see cref="T:System.Management.QualifierDataCollection" />.          </summary>
      <returns>Returns a <see cref="T:System.Management.QualifierData" /> containing the data for a specified qualifier in the collection.</returns>
      <param name="qualifierName">The name of the <see cref="T:System.Management.QualifierData" /> to access in the <see cref="T:System.Management.QualifierDataCollection" />. </param>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.RegistryPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="M:System.Management.QualifierDataCollection.Remove(System.String)">
      <summary>Removes a <see cref="T:System.Management.QualifierData" /> from the <see cref="T:System.Management.QualifierDataCollection" /> by name.          </summary>
      <param name="qualifierName">The name of the <see cref="T:System.Management.QualifierData" /> to remove. </param>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.RegistryPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="P:System.Management.QualifierDataCollection.SyncRoot">
      <summary>Gets the object to be used for synchronization.          </summary>
      <returns>Returns an <see cref="T:System.Object" /> value to be used for synchronization.</returns>
    </member>
    <member name="M:System.Management.QualifierDataCollection.System#Collections#IEnumerable#GetEnumerator">
      <summary>Returns an <see cref="T:System.Collections.IEnumerator" /> that iterates through the <see cref="T:System.Management.QualifierDataCollection" />.</summary>
      <returns>An <see cref="T:System.Collections.IEnumerator" /> for the <see cref="T:System.Management.QualifierDataCollection" />.</returns>
    </member>
    <member name="T:System.Management.QualifierDataCollection.QualifierDataEnumerator">
      <summary>Represents the enumerator for <see cref="T:System.Management.QualifierData" /> objects in the <see cref="T:System.Management.QualifierDataCollection" />. </summary>
    </member>
    <member name="P:System.Management.QualifierDataCollection.QualifierDataEnumerator.Current">
      <summary>Gets or sets the current <see cref="T:System.Management.QualifierData" /> in the <see cref="T:System.Management.QualifierDataCollection" /> enumeration.</summary>
      <returns>The current <see cref="T:System.Management.QualifierData" /> element in the collection.</returns>
    </member>
    <member name="M:System.Management.QualifierDataCollection.QualifierDataEnumerator.MoveNext">
      <summary>Moves to the next element in the <see cref="T:System.Management.QualifierDataCollection" /> enumeration.</summary>
      <returns>true if the enumerator was successfully advanced to the next element; false if the enumerator has passed the end of the collection.</returns>
    </member>
    <member name="M:System.Management.QualifierDataCollection.QualifierDataEnumerator.Reset">
      <summary>Resets the enumerator to the beginning of the <see cref="T:System.Management.QualifierDataCollection" /> enumeration.</summary>
    </member>
    <member name="P:System.Management.QualifierDataCollection.QualifierDataEnumerator.System#Collections#IEnumerator#Current">
      <summary>Gets the current object in the collection.</summary>
      <returns>Returns the current element in the collection.</returns>
      <exception cref="T:System.InvalidOperationException">The collection was modified after the enumerator was created.</exception>
    </member>
    <member name="T:System.Management.RelatedObjectQuery">
      <summary>Represents a WQL ASSOCIATORS OF data query. It can be used for both instances and schema queries.           </summary>
    </member>
    <member name="M:System.Management.RelatedObjectQuery.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Management.RelatedObjectQuery" /> class. This is the default constructor.          </summary>
    </member>
    <member name="M:System.Management.RelatedObjectQuery.#ctor(System.Boolean,System.String,System.String,System.String,System.String,System.String,System.String,System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.Management.RelatedObjectQuery" /> class for a schema query using the given set of parameters. This constructor is used for schema queries only: the first parameter must be set to true                .          </summary>
      <param name="isSchemaQuery">true to indicate that this is a schema query; otherwise, false .</param>
      <param name="sourceObject">The path of the source class.</param>
      <param name="relatedClass">The related objects' required base class.</param>
      <param name="relationshipClass">The relationship type.</param>
      <param name="relatedQualifier">The qualifier required to be present on the related objects.</param>
      <param name="relationshipQualifier">The qualifier required to be present on the relationships.</param>
      <param name="relatedRole">The role that the related objects are required to play in the relationship.</param>
      <param name="thisRole">The role that the source class is required to play in the relationship.</param>
    </member>
    <member name="M:System.Management.RelatedObjectQuery.#ctor(System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.Management.RelatedObjectQuery" /> class. If the specified string can be successfully parsed as a WQL query, it is considered to be the query string; otherwise, it is assumed to be the path of the source object for the query. In this case, the query is assumed to be an instance query.           </summary>
      <param name="queryOrSourceObject">The query string or the path of the source object.</param>
    </member>
    <member name="M:System.Management.RelatedObjectQuery.#ctor(System.String,System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.Management.RelatedObjectQuery" /> class for the given source object and related class. The query is assumed to be an instance query (as opposed to a schema query).          </summary>
      <param name="sourceObject">The path of the source object for this query.</param>
      <param name="relatedClass">The related objects' class.</param>
    </member>
    <member name="M:System.Management.RelatedObjectQuery.#ctor(System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.Boolean)">
      <summary>Initializes a new instance of the <see cref="T:System.Management.RelatedObjectQuery" /> class for the given set of parameters. The query is assumed to be an instance query (as opposed to a schema query).          </summary>
      <param name="sourceObject">The path of the source object.</param>
      <param name="relatedClass">The related objects' required class.</param>
      <param name="relationshipClass">The relationship type.</param>
      <param name="relatedQualifier">The qualifier required to be present on the related objects.</param>
      <param name="relationshipQualifier">The qualifier required to be present on the relationships.</param>
      <param name="relatedRole">The role that the related objects are required to play in the relationship.</param>
      <param name="thisRole">The role that the source object is required to play in the relationship.</param>
      <param name="classDefinitionsOnly">true to return only the class definitions of the related objects; otherwise, false .</param>
    </member>
    <member name="M:System.Management.RelatedObjectQuery.BuildQuery">
      <summary>Builds the query string according to the current property values.                       </summary>
    </member>
    <member name="P:System.Management.RelatedObjectQuery.ClassDefinitionsOnly">
      <summary>Gets or sets a value indicating that for all instances that adhere to the query, only their class definitions be returned. This parameter is only valid for instance queries.          </summary>
      <returns>Returns a <see cref="T:System.Boolean" /> value indicating that for all instances that adhere to the query, only their class definitions are to be returned.</returns>
    </member>
    <member name="M:System.Management.RelatedObjectQuery.Clone">
      <summary>Creates a copy of the object.          </summary>
      <returns>The copied object.             </returns>
    </member>
    <member name="P:System.Management.RelatedObjectQuery.IsSchemaQuery">
      <summary>Gets or sets a value indicating whether this is a schema query or an instance query.          </summary>
      <returns>Returns a <see cref="T:System.Boolean" /> value indicating whether this is a schema query.</returns>
    </member>
    <member name="M:System.Management.RelatedObjectQuery.ParseQuery(System.String)">
      <summary>Parses the query string and sets the property values accordingly.                       </summary>
      <param name="query">The query string to be parsed.</param>
    </member>
    <member name="P:System.Management.RelatedObjectQuery.RelatedClass">
      <summary>Gets or sets the class of the endpoint objects (the related class).          </summary>
      <returns>Returns a <see cref="T:System.String" /> value containing the related class name.</returns>
    </member>
    <member name="P:System.Management.RelatedObjectQuery.RelatedQualifier">
      <summary>Gets or sets a qualifier required to be defined on the related objects.          </summary>
      <returns>Returns a <see cref="T:System.String" /> value containing the name of the qualifier required on the related object.</returns>
    </member>
    <member name="P:System.Management.RelatedObjectQuery.RelatedRole">
      <summary>Gets or sets the role that the related objects returned should be playing in the relationship.          </summary>
      <returns>Returns a <see cref="T:System.String" /> value containing the role of the related objects.</returns>
    </member>
    <member name="P:System.Management.RelatedObjectQuery.RelationshipClass">
      <summary>Gets or sets the type of relationship (association).          </summary>
      <returns>Returns a <see cref="T:System.String" /> value containing the relationship class name. </returns>
    </member>
    <member name="P:System.Management.RelatedObjectQuery.RelationshipQualifier">
      <summary>Gets or sets a qualifier required to be defined on the relationship objects.          </summary>
      <returns>Returns a <see cref="T:System.String" /> value containing the name of the qualifier required on the relationship objects.</returns>
    </member>
    <member name="P:System.Management.RelatedObjectQuery.SourceObject">
      <summary>Gets or sets the source object to be used for the query. For instance queries, this is typically an instance path. For schema queries, this is typically a class name.          </summary>
      <returns>Returns a <see cref="T:System.String" /> value containing the path of the object to be used for the query.</returns>
    </member>
    <member name="P:System.Management.RelatedObjectQuery.ThisRole">
      <summary>Gets or sets the role that the source object should be playing in the relationship.          </summary>
      <returns>Returns a <see cref="T:System.String" /> value containing the role of this object.</returns>
    </member>
    <member name="T:System.Management.RelationshipQuery">
      <summary>Represents a WQL REFERENCES OF data query.           </summary>
    </member>
    <member name="M:System.Management.RelationshipQuery.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Management.RelationshipQuery" /> class. This is the default constructor.          </summary>
    </member>
    <member name="M:System.Management.RelationshipQuery.#ctor(System.Boolean,System.String,System.String,System.String,System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.Management.RelationshipQuery" /> class for a schema query using the given set of parameters. This constructor is used for schema queries only, so the first parameter must be true.          </summary>
      <param name="isSchemaQuery">true to indicate that this is a schema query; otherwise, false.</param>
      <param name="sourceObject">The path of the source class for this query.</param>
      <param name="relationshipClass">The type of relationship for which to query.</param>
      <param name="relationshipQualifier">A qualifier required to be present on the relationship class.</param>
      <param name="thisRole">The role that the source class is required to play in the relationship.</param>
    </member>
    <member name="M:System.Management.RelationshipQuery.#ctor(System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.Management.RelationshipQuery" /> class. If the specified string can be successfully parsed as a WQL query, it is considered to be the query string; otherwise, it is assumed to be the path of the source object for the query. In this case, the query is assumed to be an instances query.           </summary>
      <param name="queryOrSourceObject">The query string or the class name for this query.</param>
    </member>
    <member name="M:System.Management.RelationshipQuery.#ctor(System.String,System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.Management.RelationshipQuery" /> class for the given source object and relationship class. The query is assumed to be an instance query (as opposed to a schema query).          </summary>
      <param name="sourceObject"> The path of the source object for this query.</param>
      <param name="relationshipClass"> The type of relationship for which to query.</param>
    </member>
    <member name="M:System.Management.RelationshipQuery.#ctor(System.String,System.String,System.String,System.String,System.Boolean)">
      <summary>Initializes a new instance of the <see cref="T:System.Management.RelationshipQuery" /> class for the given set of parameters. The query is assumed to be an instance query (as opposed to a schema query).          </summary>
      <param name="sourceObject">The path of the source object for this query.</param>
      <param name="relationshipClass">The type of relationship for which to query.</param>
      <param name="relationshipQualifier">A qualifier required to be present on the relationship object.</param>
      <param name="thisRole">The role that the source object is required to play in the relationship.</param>
      <param name="classDefinitionsOnly">When this method returns, it contains a Boolean that indicates that only class definitions for the resulting objects are returned.</param>
    </member>
    <member name="M:System.Management.RelationshipQuery.BuildQuery">
      <summary>Builds the query string according to the current property values.                       </summary>
    </member>
    <member name="P:System.Management.RelationshipQuery.ClassDefinitionsOnly">
      <summary>Gets or sets a value indicating that only the class definitions of the relevant relationship objects be returned.          </summary>
      <returns>Returns a <see cref="T:System.Boolean" /> value indicating that only the class definitions of the relevant relationship objects be returned.</returns>
    </member>
    <member name="M:System.Management.RelationshipQuery.Clone">
      <summary>Creates a copy of the object.          </summary>
      <returns>The copied object.             </returns>
    </member>
    <member name="P:System.Management.RelationshipQuery.IsSchemaQuery">
      <summary>Gets or sets a value indicating whether this query is a schema query or an instance query.          </summary>
      <returns>Returns a <see cref="T:System.Boolean" /> value indicating whether this query is a schema query.</returns>
    </member>
    <member name="M:System.Management.RelationshipQuery.ParseQuery(System.String)">
      <summary>Parses the query string and sets the property values accordingly.                       </summary>
      <param name="query">The query string to be parsed.</param>
    </member>
    <member name="P:System.Management.RelationshipQuery.RelationshipClass">
      <summary>Gets or sets the class of the relationship objects wanted in the query.          </summary>
      <returns>Returns a <see cref="T:System.String" /> value containing the relationship class name.</returns>
    </member>
    <member name="P:System.Management.RelationshipQuery.RelationshipQualifier">
      <summary>Gets or sets a qualifier required on the relationship objects.          </summary>
      <returns>Returns a <see cref="T:System.String" /> value containing the name of the qualifier required on the relationship objects.</returns>
    </member>
    <member name="P:System.Management.RelationshipQuery.SourceObject">
      <summary>Gets or sets the source object for this query.          </summary>
      <returns>Returns a <see cref="T:System.String" /> value containing the path of the object to be used for the query.</returns>
    </member>
    <member name="P:System.Management.RelationshipQuery.ThisRole">
      <summary>Gets or sets the role of the source object in the relationship.          </summary>
      <returns>Returns a <see cref="T:System.String" /> value containing the role of this object.</returns>
    </member>
    <member name="T:System.Management.SelectQuery">
      <summary>Represents a WQL SELECT data query.          </summary>
    </member>
    <member name="M:System.Management.SelectQuery.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Management.SelectQuery" /> class. This is the default constructor.          </summary>
    </member>
    <member name="M:System.Management.SelectQuery.#ctor(System.Boolean,System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.Management.SelectQuery" /> class for a schema query, optionally specifying a condition.          </summary>
      <param name="isSchemaQuery">true to indicate that this is a schema query; otherwise, false. A false value is invalid in this constructor.</param>
      <param name="condition">The condition to be applied to form the result set of classes. </param>
    </member>
    <member name="M:System.Management.SelectQuery.#ctor(System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.Management.SelectQuery" /> class for the specified query or the specified class name.          </summary>
      <param name="queryOrClassName">The entire query or the class name to use in the query. The parser in this class attempts to parse the string as a valid WQL SELECT query. If the parser is unsuccessful, it assumes the string is a class name.</param>
    </member>
    <member name="M:System.Management.SelectQuery.#ctor(System.String,System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.Management.SelectQuery" /> class with the specified class name and condition.          </summary>
      <param name="className">The name of the class to select in the query.</param>
      <param name="condition">The condition to be applied in the query. </param>
    </member>
    <member name="M:System.Management.SelectQuery.#ctor(System.String,System.String,System.String[])">
      <summary>Initializes a new instance of the <see cref="T:System.Management.SelectQuery" /> class with the specified class name and condition, selecting only the specified properties.          </summary>
      <param name="className">The name of the class from which to select.</param>
      <param name="condition">The condition to be applied to instances of the selected class. </param>
      <param name="selectedProperties">An array of property names to be returned in the query results. </param>
    </member>
    <member name="M:System.Management.SelectQuery.BuildQuery">
      <summary>Builds the query string according to the current property values.                       </summary>
    </member>
    <member name="P:System.Management.SelectQuery.ClassName">
      <summary>Gets or sets the class name to be selected from in the query.          </summary>
      <returns>Returns a <see cref="T:System.String" /> value containing the name of the class in the query.</returns>
    </member>
    <member name="M:System.Management.SelectQuery.Clone">
      <summary>Creates a copy of the object.          </summary>
      <returns>The copied object.             </returns>
    </member>
    <member name="P:System.Management.SelectQuery.Condition">
      <summary>Gets or sets the condition to be applied in the SELECT query.          </summary>
      <returns>Returns a <see cref="T:System.String" /> value containing the condition to be applied to the SELECT query.</returns>
    </member>
    <member name="P:System.Management.SelectQuery.IsSchemaQuery">
      <summary>Gets or sets a value indicating whether this query is a schema query or an instances query.          </summary>
      <returns>Returns a <see cref="T:System.Boolean" /> value indicating whether the query is a schema query.</returns>
    </member>
    <member name="M:System.Management.SelectQuery.ParseQuery(System.String)">
      <summary>Parses the query string and sets the property values accordingly.                       </summary>
      <param name="query">The query string to be parsed.</param>
    </member>
    <member name="P:System.Management.SelectQuery.QueryString">
      <summary>Gets or sets the query in the <see cref="T:System.Management.SelectQuery" /> object, in string form.          </summary>
      <returns>Returns a <see cref="T:System.String" /> value containing the query.</returns>
    </member>
    <member name="P:System.Management.SelectQuery.SelectedProperties">
      <summary>Ggets or sets an array of property names to be selected in the query.          </summary>
      <returns>Returns a <see cref="T:System.Collections.Specialized.StringCollection" /> containing the names of the properties to be selected in the query.</returns>
    </member>
    <member name="T:System.Management.StoppedEventArgs">
      <summary>Holds event data for the <see cref="E:System.Management.ManagementEventWatcher.Stopped" /> event.          </summary>
    </member>
    <member name="P:System.Management.StoppedEventArgs.Status">
      <summary>Gets the completion status of the operation.          </summary>
      <returns>Returns a <see cref="T:System.Management.ManagementStatus" /> containing the status of the operation.</returns>
    </member>
    <member name="T:System.Management.StoppedEventHandler">
      <summary>Represents the method that will handle the <see cref="E:System.Management.ManagementEventWatcher.Stopped" /> event.</summary>
      <param name="sender">The instance of the object for which to invoke this method.</param>
      <param name="e">The <see cref="T:System.Management.StoppedEventArgs" /> that specifies the reason the event was invoked.</param>
    </member>
    <member name="T:System.Management.TextFormat">
      <summary>Describes the possible text formats that can be used with <see cref="M:System.Management.ManagementBaseObject.GetText(System.Management.TextFormat)" />.          </summary>
    </member>
    <member name="F:System.Management.TextFormat.Mof">
      <summary>Managed Object Format</summary>
    </member>
    <member name="F:System.Management.TextFormat.CimDtd20">
      <summary>XML DTD that corresponds to CIM DTD version 2.0.             </summary>
    </member>
    <member name="F:System.Management.TextFormat.WmiDtd20">
      <summary>XML WMI DTD that corresponds to CIM DTD version 2.0. Using this value enables a few WMI-specific extensions, like embedded objects.             </summary>
    </member>
    <member name="T:System.Management.WqlEventQuery">
      <summary>Represents a WMI event query in WQL format.          </summary>
    </member>
    <member name="M:System.Management.WqlEventQuery.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Management.WqlEventQuery" /> class. This is the default constructor.          </summary>
    </member>
    <member name="M:System.Management.WqlEventQuery.#ctor(System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.Management.WqlEventQuery" /> class based on the given query string or event class name.          </summary>
      <param name="queryOrEventClassName">The string representing either the entire event query or the name of the event class to query. The object will try to parse the string as a valid event query. If unsuccessful, the parser will assume that the parameter represents an event class name.</param>
    </member>
    <member name="M:System.Management.WqlEventQuery.#ctor(System.String,System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.Management.WqlEventQuery" /> class for the specified event class name, with the specified condition.          </summary>
      <param name="eventClassName">The name of the event class to query.</param>
      <param name="condition">The condition to apply to events of the specified class. </param>
    </member>
    <member name="M:System.Management.WqlEventQuery.#ctor(System.String,System.String,System.TimeSpan)">
      <summary>Initializes a new instance of the <see cref="T:System.Management.WqlEventQuery" /> class with the specified event class name, condition, and grouping interval.          </summary>
      <param name="eventClassName">The name of the event class to query. </param>
      <param name="condition">The condition to apply to events of the specified class.</param>
      <param name="groupWithinInterval">The specified interval at which WMI sends one aggregate event, rather than many events. </param>
    </member>
    <member name="M:System.Management.WqlEventQuery.#ctor(System.String,System.String,System.TimeSpan,System.String[])">
      <summary>Initializes a new instance of the <see cref="T:System.Management.WqlEventQuery" /> class with the specified event class name, condition, grouping interval, and grouping properties.          </summary>
      <param name="eventClassName">The name of the event class to query. </param>
      <param name="condition">The condition to apply to events of the specified class.</param>
      <param name="groupWithinInterval">The specified interval at which WMI sends one aggregate event, rather than many events.</param>
      <param name="groupByPropertyList">The properties in the event class by which the events should be grouped.  </param>
    </member>
    <member name="M:System.Management.WqlEventQuery.#ctor(System.String,System.TimeSpan)">
      <summary>Initializes a new instance of the <see cref="T:System.Management.WqlEventQuery" /> class for the specified event class, with the specified latency time.          </summary>
      <param name="eventClassName">The name of the event class to query.</param>
      <param name="withinInterval">A <see cref="T:System.TimeSpan" /> value specifying the latency acceptable for receiving this event. This value is used in cases where there is no explicit event provider for the query requested, and WMI is required to poll for the condition. This interval is the maximum amount of time that can pass before notification of an event must be delivered.  </param>
    </member>
    <member name="M:System.Management.WqlEventQuery.#ctor(System.String,System.TimeSpan,System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.Management.WqlEventQuery" /> class with the specified event class name, polling interval, and condition.          </summary>
      <param name="eventClassName">The name of the event class to query. </param>
      <param name="withinInterval">A <see cref="T:System.TimeSpan" /> value specifying the latency acceptable for receiving this event. This value is used in cases where there is no explicit event provider for the query requested and WMI is required to poll for the condition. This interval is the maximum amount of time that can pass before notification of an event must be delivered. </param>
      <param name="condition">The condition to apply to events of the specified class. </param>
    </member>
    <member name="M:System.Management.WqlEventQuery.#ctor(System.String,System.TimeSpan,System.String,System.TimeSpan,System.String[],System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.Management.WqlEventQuery" /> class with the specified event class name, condition, grouping interval, grouping properties, and specified number of events.          </summary>
      <param name="eventClassName">The name of the event class on which to be queried.</param>
      <param name="withinInterval">A <see cref="T:System.TimeSpan" /> value specifying the latency acceptable for receiving this event. This value is used in cases where there is no explicit event provider for the query requested, and WMI is required to poll for the condition. This interval is the maximum amount of time that can pass before notification of an event must be delivered.</param>
      <param name="condition">The condition to apply to events of the specified class. </param>
      <param name="groupWithinInterval">The specified interval at which WMI sends one aggregate event, rather than many events. </param>
      <param name="groupByPropertyList">The properties in the event class by which the events should be grouped. </param>
      <param name="havingCondition">The condition to apply to the number of events. </param>
    </member>
    <member name="M:System.Management.WqlEventQuery.BuildQuery">
      <summary>Builds the query string according to the current property values.                       </summary>
    </member>
    <member name="M:System.Management.WqlEventQuery.Clone">
      <summary>Creates a copy of the object.          </summary>
      <returns>The copied object.             </returns>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="P:System.Management.WqlEventQuery.Condition">
      <summary>Gets or sets the condition to be applied to events of the specified class.          </summary>
      <returns>Returns a <see cref="T:System.String" /> value containing the condition or conditions in the event query.</returns>
    </member>
    <member name="P:System.Management.WqlEventQuery.EventClassName">
      <summary>Gets or sets the event class to query.          </summary>
      <returns>Returns a <see cref="T:System.String" /> value containing the name of the event class in the event query.</returns>
    </member>
    <member name="P:System.Management.WqlEventQuery.GroupByPropertyList">
      <summary>Gets or sets properties in the event to be used for grouping events of the same type.          </summary>
      <returns>Returns a <see cref="T:System.Collections.Specialized.StringCollection" /> containing the properties in the event to be used for grouping events of the same type.</returns>
    </member>
    <member name="P:System.Management.WqlEventQuery.GroupWithinInterval">
      <summary>Gets or sets the interval to be used for grouping events of the same type.          </summary>
      <returns>Returns a <see cref="T:System.TimeSpan" /> value containing the interval used for grouping events of the same type.</returns>
    </member>
    <member name="P:System.Management.WqlEventQuery.HavingCondition">
      <summary>Gets or sets the condition to be applied to the aggregation of events, based on the number of events received.          </summary>
      <returns>Returns a <see cref="T:System.String" /> value containing the condition applied to the aggregation of events, based on the number of events received.</returns>
    </member>
    <member name="M:System.Management.WqlEventQuery.ParseQuery(System.String)">
      <summary>Parses the query string and sets the property values accordingly.                       </summary>
      <param name="query">The query string to be parsed.</param>
    </member>
    <member name="P:System.Management.WqlEventQuery.QueryLanguage">
      <summary>Gets  the language of the query.          </summary>
      <returns>Returns a <see cref="T:System.String" /> value that contains the query language that the query is written in.</returns>
    </member>
    <member name="P:System.Management.WqlEventQuery.QueryString">
      <summary>Gets or sets the string representing the query.          </summary>
      <returns>Returns a <see cref="T:System.String" /> value containing the query.</returns>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="P:System.Management.WqlEventQuery.WithinInterval">
      <summary>Gets or sets the polling interval to be used in this query.          </summary>
      <returns>Returns a <see cref="T:System.TimeSpan" /> value containing the polling interval used in the event query.</returns>
    </member>
    <member name="T:System.Management.WqlObjectQuery">
      <summary>Represents a WMI data query in WQL format.          </summary>
    </member>
    <member name="M:System.Management.WqlObjectQuery.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Management.WqlObjectQuery" /> class. This is the default constructor.          </summary>
    </member>
    <member name="M:System.Management.WqlObjectQuery.#ctor(System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.Management.WqlObjectQuery" /> class initialized to the specified query.          </summary>
      <param name="query"> The representation of the data query.</param>
    </member>
    <member name="M:System.Management.WqlObjectQuery.Clone">
      <summary>Creates a copy of the object.          </summary>
      <returns>The copied object.             </returns>
    </member>
    <member name="P:System.Management.WqlObjectQuery.QueryLanguage">
      <summary>Gets the language of the query.          </summary>
      <returns>Returns a <see cref="T:System.String" /> value containing the language of the query.</returns>
    </member>
    <member name="T:System.Management.Instrumentation.BaseEvent">
      <summary>Represents classes derived from <see cref="T:System.Management.Instrumentation.BaseEvent" /> that are known to be management event classes. These derived classes inherit an implementation of <see cref="T:System.Management.Instrumentation.IEvent" /> that allows events to be fired through the <see cref="M:System.Management.Instrumentation.BaseEvent.Fire" /> method.</summary>
    </member>
    <member name="M:System.Management.Instrumentation.BaseEvent.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Management.Instrumentation.BaseEvent" /> class.</summary>
    </member>
    <member name="M:System.Management.Instrumentation.BaseEvent.Fire">
      <summary>Raises a management event.</summary>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="MemberAccess" />
        <IPermission class="System.Security.Permissions.RegistryPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="T:System.Management.Instrumentation.DefaultManagementProjectInstaller">
      <summary>Installs an instrumented assembly. To use this default project installer, derive a class from <see cref="T:System.Management.Instrumentation.DefaultManagementProjectInstaller" /> inside the assembly. No methods need to be overridden.</summary>
    </member>
    <member name="M:System.Management.Instrumentation.DefaultManagementProjectInstaller.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Management.Instrumentation.DefaultManagementProjectInstaller" /> class. This is the default constructor.</summary>
    </member>
    <member name="T:System.Management.Instrumentation.IEvent">
      <summary>Specifies a source of a management instrumentation event. Objects that implement this interface are known to be sources of management instrumentation events. Classes that do not derive from <see cref="T:System.Management.Instrumentation.BaseEvent" /> should implement this interface instead.          </summary>
    </member>
    <member name="M:System.Management.Instrumentation.IEvent.Fire">
      <summary>Raises a management event.          </summary>
    </member>
    <member name="T:System.Management.Instrumentation.IgnoreMemberAttribute">
      <summary>Causes the associated member of an instrumented class to be ignored by management instrumentation.</summary>
    </member>
    <member name="M:System.Management.Instrumentation.IgnoreMemberAttribute.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Management.Instrumentation.IgnoreMemberAttribute" /> class          </summary>
    </member>
    <member name="T:System.Management.Instrumentation.IInstance">
      <summary>Specifies a source of a management instrumentation instance. Objects that implement this interface are known to be sources of management instrumentation instances. Classes that do not derive from <see cref="T:System.Management.Instrumentation.Instance" /> should implement this interface instead.          </summary>
    </member>
    <member name="P:System.Management.Instrumentation.IInstance.Published">
      <summary>Gets or sets a value indicating whether instances of classes that implement this interface are visible through management instrumentation.                       </summary>
      <returns>Returns a <see cref="T:System.Boolean" /> value indicating whether instances of classes that implement this interface are visible through management instrumentation.</returns>
    </member>
    <member name="T:System.Management.Instrumentation.Instance">
      <summary>Represents derived classes known to be management instrumentation instance classes. These derived classes inherit an implementation of <see cref="T:System.Management.Instrumentation.IInstance" /> that allows instances to be published through the <see cref="P:System.Management.Instrumentation.IInstance.Published" /> property.          </summary>
    </member>
    <member name="M:System.Management.Instrumentation.Instance.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Management.Instrumentation.Instance" /> class.            </summary>
    </member>
    <member name="P:System.Management.Instrumentation.Instance.Published">
      <summary>Gets or sets a value indicating whether instances of classes that implement this interface are visible through management instrumentation.          </summary>
      <returns>Returns a <see cref="T:System.Boolean" /> value indicating whether instances of classes that implement this interface are visible through management instrumentation.</returns>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.RegistryPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence, ControlPrincipal" />
      </PermissionSet>
    </member>
    <member name="T:System.Management.Instrumentation.Instrumentation">
      <summary>Provides helper functions for exposing events and data for management. There is a single instance of this class per application domain.          </summary>
    </member>
    <member name="M:System.Management.Instrumentation.Instrumentation.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Management.Instrumentation.Instrumentation" /> class.          </summary>
    </member>
    <member name="M:System.Management.Instrumentation.Instrumentation.Fire(System.Object)">
      <summary>Raises a management event.          </summary>
      <param name="eventData">The object that determines the class, properties, and values of the event.</param>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="MemberAccess" />
        <IPermission class="System.Security.Permissions.RegistryPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:System.Management.Instrumentation.Instrumentation.IsAssemblyRegistered(System.Reflection.Assembly)">
      <summary>Determines if the instrumentation schema of the specified assembly has already been correctly registered with WMI.          </summary>
      <returns>true if the instrumentation schema in the specified assembly is registered with WMI; otherwise, false.</returns>
      <param name="assemblyToRegister">The <see cref="T:System.Reflection.Assembly" /> containing instrumentation instance or event types.</param>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="MemberAccess" />
        <IPermission class="System.Security.Permissions.RegistryPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
      </PermissionSet>
    </member>
    <member name="M:System.Management.Instrumentation.Instrumentation.Publish(System.Object)">
      <summary>Makes an instance visible through management instrumentation.          </summary>
      <param name="instanceData">The object that is to be visible through management instrumentation.</param>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="MemberAccess" />
        <IPermission class="System.Security.Permissions.RegistryPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:System.Management.Instrumentation.Instrumentation.RegisterAssembly(System.Reflection.Assembly)">
      <summary>Registers the management instance or event classes in the specified assembly with WMI. This ensures that the instrumentation schema is accessible to <see cref="N:System.Management" /> client applications.          </summary>
      <param name="assemblyToRegister">The <see cref="T:System.Reflection.Assembly" /> containing instrumentation instance or event types.</param>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="MemberAccess" />
        <IPermission class="System.Security.Permissions.RegistryPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:System.Management.Instrumentation.Instrumentation.Revoke(System.Object)">
      <summary>Makes an instance that was previously published through the <see cref="M:System.Management.Instrumentation.Instrumentation.Publish(System.Object)" />             method no longer visible through management instrumentation.          </summary>
      <param name="instanceData">The object to remove from visibility for management instrumentation.</param>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="MemberAccess" />
        <IPermission class="System.Security.Permissions.RegistryPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:System.Management.Instrumentation.Instrumentation.SetBatchSize(System.Type,System.Int32)">
      <summary>Specifies the maximum number of objects of the specified type to be provided at a time.                       </summary>
      <param name="instrumentationClass">The class for which the batch size is being set.</param>
      <param name="batchSize">The maximum number of objects to be provided at a time.</param>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="MemberAccess" />
        <IPermission class="System.Security.Permissions.RegistryPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="T:System.Management.Instrumentation.InstrumentationClassAttribute">
      <summary>Specifies that a class provides event or instance instrumentation.                       </summary>
    </member>
    <member name="M:System.Management.Instrumentation.InstrumentationClassAttribute.#ctor(System.Management.Instrumentation.InstrumentationType)">
      <summary>Initializes a new instance of the <see cref="T:System.Management.Instrumentation.InstrumentationClassAttribute" /> class that is used if this type is derived from another type that has the <see cref="T:System.Management.Instrumentation.InstrumentationClassAttribute" /> attribute, or if this is a top-level instrumentation class (for example, an instance or abstract class                without a base class, or an event derived from __ExtrinsicEvent).          </summary>
      <param name="instrumentationType">The type of instrumentation provided by this class.</param>
    </member>
    <member name="M:System.Management.Instrumentation.InstrumentationClassAttribute.#ctor(System.Management.Instrumentation.InstrumentationType,System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.Management.Instrumentation.InstrumentationClassAttribute" /> class that has schema for an existing base class. The class must contain proper member definitions for the properties of the existing WMI base class.          </summary>
      <param name="instrumentationType">The type of instrumentation provided by this class.</param>
      <param name="managedBaseClassName">The name of the base class.</param>
    </member>
    <member name="P:System.Management.Instrumentation.InstrumentationClassAttribute.InstrumentationType">
      <summary>Gets or sets the type of instrumentation provided by this class.          </summary>
      <returns>Returns an <see cref="T:System.Management.Instrumentation.InstrumentationType" /> enumeration value containing the type of instrumentation provided by this class.</returns>
    </member>
    <member name="P:System.Management.Instrumentation.InstrumentationClassAttribute.ManagedBaseClassName">
      <summary>Gets or sets the name of the base class of this instrumentation class.          </summary>
      <returns>Returns a <see cref="T:System.String" /> value containing the name of the base class of this instrumentation class.</returns>
    </member>
    <member name="T:System.Management.Instrumentation.InstrumentationType">
      <summary>Specifies the type of instrumentation provided by a class.           </summary>
    </member>
    <member name="F:System.Management.Instrumentation.InstrumentationType.Instance">
      <summary>The class provides instances for management instrumentation.</summary>
    </member>
    <member name="F:System.Management.Instrumentation.InstrumentationType.Event">
      <summary>The class provides events for management instrumentation.</summary>
    </member>
    <member name="F:System.Management.Instrumentation.InstrumentationType.Abstract">
      <summary>The class defines an abstract class for management instrumentation.</summary>
    </member>
    <member name="T:System.Management.Instrumentation.InstrumentedAttribute">
      <summary>Specifies that this assembly provides management instrumentation. This attribute should appear one time per assembly.</summary>
    </member>
    <member name="M:System.Management.Instrumentation.InstrumentedAttribute.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Management.Instrumentation.InstrumentedAttribute" /> class that is set for the root\default namespace. This is the default constructor.          </summary>
    </member>
    <member name="M:System.Management.Instrumentation.InstrumentedAttribute.#ctor(System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.Management.Instrumentation.InstrumentedAttribute" /> class that is set to the specified namespace for instrumentation within this assembly.          </summary>
      <param name="namespaceName">The namespace for instrumentation instances and events.</param>
    </member>
    <member name="M:System.Management.Instrumentation.InstrumentedAttribute.#ctor(System.String,System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.Management.Instrumentation.InstrumentedAttribute" /> class that is set to the specified namespace and security settings for instrumentation within this assembly.          </summary>
      <param name="namespaceName">The namespace for instrumentation instances and events.</param>
      <param name="securityDescriptor"> A security descriptor that allows only the specified users or groups to run applications that provide the instrumentation supported by this assembly.</param>
    </member>
    <member name="P:System.Management.Instrumentation.InstrumentedAttribute.NamespaceName">
      <summary>Gets or sets the namespace for instrumentation instances and events in this assembly.          </summary>
      <returns>Returns a <see cref="T:System.String" /> value containing the name of the namespace for instrumentation instances and events in this assembly.</returns>
    </member>
    <member name="P:System.Management.Instrumentation.InstrumentedAttribute.SecurityDescriptor">
      <summary>Gets or sets a security descriptor that allows only the specified users or groups to run applications that provide the instrumentation supported by this assembly.          </summary>
      <returns>Returns a <see cref="T:System.String" /> value containing the security descriptor that allows only the specified users or groups to run applications that provide the instrumentation supported by this assembly.</returns>
    </member>
    <member name="T:System.Management.Instrumentation.ManagedNameAttribute">
      <summary>Allows an instrumented class, or member of an instrumented class, to present an alternate name through management instrumentation.          </summary>
    </member>
    <member name="M:System.Management.Instrumentation.ManagedNameAttribute.#ctor(System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.Management.Instrumentation.ManagedNameAttribute" /> class that allows the alternate name to be specified for the type, field, property, method, or parameter to which this attribute is applied.          </summary>
      <param name="name">The alternate name for the type, field, property, method, or parameter to which this attribute is applied.</param>
    </member>
    <member name="P:System.Management.Instrumentation.ManagedNameAttribute.Name">
      <summary>Gets the name of the managed entity.          </summary>
      <returns>Returns a T:System.String value containing the name of the managed entity.</returns>
    </member>
    <member name="T:System.Management.Instrumentation.ManagementInstaller">
      <summary>Installs instrumented assemblies. Include an instance of this installer class in the project installer for an assembly that includes instrumentation.          </summary>
    </member>
    <member name="M:System.Management.Instrumentation.ManagementInstaller.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Management.Instrumentation.ManagementInstaller" /> class.          </summary>
    </member>
    <member name="M:System.Management.Instrumentation.ManagementInstaller.Commit(System.Collections.IDictionary)">
      <summary>Commits the assembly to the operation.          </summary>
      <param name="savedState">The state of the assembly.</param>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="P:System.Management.Instrumentation.ManagementInstaller.HelpText">
      <summary>Gets or sets installer options for this class.          </summary>
      <returns>Returns a <see cref="T:System.String" /> value containing the installer options for this class.</returns>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:System.Management.Instrumentation.ManagementInstaller.Install(System.Collections.IDictionary)">
      <summary>Installs the assembly.          </summary>
      <param name="savedState">The state of the assembly.</param>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="MemberAccess" />
        <IPermission class="System.Security.Permissions.RegistryPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:System.Management.Instrumentation.ManagementInstaller.Rollback(System.Collections.IDictionary)">
      <summary>Rolls back the state of the assembly.          </summary>
      <param name="savedState">The state of the assembly.</param>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Read="*AllFiles*" PathDiscovery="*AllFiles*" />
      </PermissionSet>
    </member>
    <member name="M:System.Management.Instrumentation.ManagementInstaller.Uninstall(System.Collections.IDictionary)">
      <summary>Uninstalls the assembly.          </summary>
      <param name="savedState">The state of the assembly.</param>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Read="*AllFiles*" PathDiscovery="*AllFiles*" />
      </PermissionSet>
    </member>
  </members>
</doc>
=== C:/Users/treeman/Desktop/windows nt source code\xbox\Xbox Live Source\XONLINE_MAIN\public\ext\sdk\CLR\netfx40rtm\Profile\Client\System.Net.xml ===
﻿<?xml version="1.0" encoding="utf-8"?>
<doc>
  <assembly>
    <name>System.Net</name>
  </assembly>
  <members>
    <member name="T:System.Net.IPEndPointCollection">
      <summary>Represents a collection used to store network endpoints as <see cref="T:System.Net.IPEndPoint" /> objects. </summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Net.IPEndPointCollection.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Net.IPEndPointCollection" /> class.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Net.IPEndPointCollection.InsertItem(System.Int32,System.Net.IPEndPoint)">
      <summary>Inserts an <see cref="T:System.Net.IPEndPoint" /> element into the <see cref="T:System.Net.IPEndPointCollection" /> at the specified index.</summary>
      <param name="index">The zero-based index at which <paramref name="item" /> should be inserted.</param>
      <param name="item">The <see cref="T:System.Net.IPEndPoint" /> object to insert. The value can be null for reference types.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">The <paramref name="index" /> parameter is less than zero -or- the <paramref name="index" /> parameter is greater than the current count of items in the <see cref="T:System.Net.IPEndPointCollection" />. </exception>
      <exception cref="T:System.ArgumentNullException">The <paramref name="item" /> parameter is null.</exception>
    </member>
    <member name="M:System.Net.IPEndPointCollection.SetItem(System.Int32,System.Net.IPEndPoint)">
      <summary>Replaces the <see cref="T:System.Net.IPEndPoint" /> element at the specified index.</summary>
      <param name="index">The zero-based index of the element to replace.</param>
      <param name="item">The new <see cref="T:System.Net.IPEndPoint" /> value for the element at the specified index. The value can be null for reference types.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">The <paramref name="index" /> parameter is less than zero -or- the <paramref name="index" /> parameter is greater than the current count of items in the <see cref="T:System.Net.IPEndPointCollection" />.</exception>
      <exception cref="T:System.ArgumentNullException">The <paramref name="item" /> parameter is null.</exception>
    </member>
    <member name="T:System.Net.PeerToPeer.Cloud">
      <summary>Specifies the values that define a Peer <see cref="T:System.Net.PeerToPeer.Cloud" /> object.</summary>
    </member>
    <member name="M:System.Net.PeerToPeer.Cloud.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Initializes a new instance of the PNRP <see cref="T:System.Net.PeerToPeer.Cloud" /> type. This populates a serialization information object with the data needed to serialize the Cloud object.</summary>
      <param name="info">Reference to the object that holds the data needed to deserialize this instance.</param>
      <param name="context">Context that provides the means for deserializing the data. Also referred to as the source of the serialized data.</param>
    </member>
    <member name="F:System.Net.PeerToPeer.Cloud.AllLinkLocal">
      <summary>Returns a reference to a <see cref="T:System.Net.PeerToPeer.Cloud" /> which represents all the link-local clouds in which the client or peer is currently participating.</summary>
    </member>
    <member name="F:System.Net.PeerToPeer.Cloud.Available">
      <summary>Returns a static reference to a <see cref="T:System.Net.PeerToPeer.Cloud" /> which represents all the available clouds in which the client is currently participating.</summary>
    </member>
    <member name="M:System.Net.PeerToPeer.Cloud.Equals(System.Net.PeerToPeer.Cloud)">
      <summary>Performs a case-sensitive comparison between two cloud objects.  </summary>
      <returns>True if the <see cref="T:System.Net.PeerToPeer.Cloud" /> specified identifies the same resource as the current one, otherwise false. </returns>
      <param name="other">The cloud to compare with this <see cref="T:System.Net.PeerToPeer.Cloud" />.</param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Net.PeerToPeer.Cloud.Equals(System.Object)">
      <summary>Determines whether the content of this peer <see cref="T:System.Net.PeerToPeer.Cloud" /> is equivalent to the content of a <see cref="N:System" /> object.  </summary>
      <returns>True if the <see cref="T:System.Net.PeerToPeer.PeerName" /> and the comparison object contain the same information; otherwise false. </returns>
      <param name="obj">The <see cref="T:System.Object" /> to compare with this <see cref="T:System.Net.PeerToPeer.Cloud" />.</param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Net.PeerToPeer.Cloud.GetAvailableClouds">
      <summary>Obtains a collection of peer clouds known to the calling peer.  </summary>
      <returns>A <see cref="T:System.Net.PeerToPeer.CloudCollection" /> object that specifies a collection of peer clouds known to the calling peer.  If no clouds are available, null is returned.</returns>
    </member>
    <member name="M:System.Net.PeerToPeer.Cloud.GetCloudByName(System.String)">
      <summary>Returns the <see cref="T:System.Net.PeerToPeer.Cloud" /> object with the specified cloud name.  </summary>
      <returns>The <see cref="T:System.Net.PeerToPeer.Cloud" /> object with the specified cloud name.</returns>
      <param name="cloudName">Contains the name of the PNRP <see cref="T:System.Net.PeerToPeer.Cloud" />.</param>
      <exception cref="T:System.ArgumentException">The <see cref="T:System.Net.PeerToPeer.Cloud" /> name is not known.</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Net.PeerToPeer.Cloud.GetHashCode">
      <summary>Overrides <see cref="M:System.Object.GetHashCode" />.</summary>
      <returns>A hashcode for the current <see cref="T:System.Object" />.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Net.PeerToPeer.Cloud.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Populates a <see cref="N:System.Runtime.Serialization" /> information object with the data needed to serialize the <see cref="T:System.Net.PeerToPeer.Cloud" />.</summary>
      <param name="info">Holds the serialized data associated with the <see cref="T:System.Net.PeerToPeer.Cloud" /> object.</param>
      <param name="context">Contains the destination for the serialized stream associated with the <see cref="T:System.Net.PeerToPeer.Cloud" /> object.</param>
    </member>
    <member name="P:System.Net.PeerToPeer.Cloud.Global">
      <summary>Gets a <see cref="T:System.Net.PeerToPeer.Cloud" /> instance that contains globally (internet) scoped peers.</summary>
      <returns>
        <see cref="T:System.Net.PeerToPeer.Cloud" /> which contains the peers that will communicate via the global network scope.</returns>
    </member>
    <member name="P:System.Net.PeerToPeer.Cloud.Name">
      <summary>Gets the name of the peer <see cref="T:System.Net.PeerToPeer.Cloud" />.  </summary>
      <returns>The name of the peer <see cref="T:System.Net.PeerToPeer.Cloud" />.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.Net.PeerToPeer.Cloud.Scope">
      <summary>Gets the network scope of the peer <see cref="T:System.Net.PeerToPeer.Cloud" />.</summary>
      <returns>
        <see cref="T:System.Net.PeerToPeer.PnrpScope" /> enumeration value that specifies the PNRP scope of the current peer cloud instance. </returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.Net.PeerToPeer.Cloud.ScopeId">
      <summary>Gets the identifier of a specific IP address for this peer <see cref="T:System.Net.PeerToPeer.Cloud" />.</summary>
      <returns>An integer value that specifies the scope-specific ID for this peer cloud.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Net.PeerToPeer.Cloud.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)"></member>
    <member name="M:System.Net.PeerToPeer.Cloud.ToString">
      <summary>Returns a string representation of the current <see cref="T:System.Net.PeerToPeer.Cloud" />.</summary>
      <returns>A string that represents the current <see cref="T:System.Net.PeerToPeer.Cloud" />.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="T:System.Net.PeerToPeer.CloudCollection">
      <summary>Represents a container for <see cref="T:System.Net.PeerToPeer.CloudCollection" /> elements. This class cannot be inherited. </summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Net.PeerToPeer.CloudCollection.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Net.PeerToPeer.CloudCollection" /> class.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Net.PeerToPeer.CloudCollection.InsertItem(System.Int32,System.Net.PeerToPeer.Cloud)">
      <summary>Inserts a <see cref="T:System.Net.PeerToPeer.Cloud" /> into the <see cref="T:System.Net.PeerToPeer.CloudCollection" /> at the specified index.</summary>
      <param name="index">The zero-based index of the element to replace.</param>
      <param name="item">The value for the new element at the specified index.</param>
      <exception cref="T:System.ArgumentNullException">The <see cref="T:System.Net.PeerToPeer.Cloud" /> provided cannot be null.</exception>
    </member>
    <member name="M:System.Net.PeerToPeer.CloudCollection.SetItem(System.Int32,System.Net.PeerToPeer.Cloud)">
      <summary>Replaces the <see cref="T:System.Net.PeerToPeer.Cloud" /> at the specified index.</summary>
      <param name="index"></param>
      <param name="item">The new value for the element to be replaced.</param>
      <exception cref="T:System.ArgumentNullException">The <see cref="T:System.Net.PeerToPeer.Cloud" /> provided cannot be null.</exception>
    </member>
    <member name="T:System.Net.PeerToPeer.PeerName">
      <summary>Specifies the values that define a peer-to-peer <see cref="T:System.Net.PeerToPeer.PeerName" /> object. A peer name is typically a string used to identify a peer resource. </summary>
    </member>
    <member name="M:System.Net.PeerToPeer.PeerName.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Populates a <see cref="T:System.Runtime.Serialization.SerializationInfo" /> object with the data needed to serialize the <see cref="T:System.Net.PeerToPeer.PeerName" />.</summary>
      <param name="info">Reference to the object that holds the data needed to deserialize this instance.</param>
      <param name="context">Context that provides the means for deserializing the data. Also referred to as the source of the serialized data.</param>
    </member>
    <member name="M:System.Net.PeerToPeer.PeerName.#ctor(System.String)">
      <summary>Initializes a new object of type <see cref="T:System.Net.PeerToPeer.PeerName" /> with the supplied fully qualified peer name <see cref="T:System.String" /> value.</summary>
      <param name="remotePeerName">Contains the peer name to encode as a <see cref="T:System.Net.PeerToPeer.PeerName" /> instance.</param>
      <exception cref="T:System.ArgumentException">The <see cref="T:System.String" /> provided is not a valid <see cref="T:System.Net.PeerToPeer.PeerName" />.</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Net.PeerToPeer.PeerName.#ctor(System.String,System.Net.PeerToPeer.PeerNameType)">
      <summary>Initializes a new instance of the <see cref="T:System.Net.PeerToPeer.PeerName" /> class. </summary>
      <param name="classifier">
        <see cref="T:System.String" /> that contains the Peer Name to encode as a PeerToPeer name.</param>
      <param name="peerNameType">
        <see cref="T:System.Net.PeerToPeer.PeerNameType" /> enumeration value that specifies the type of peer name to create.</param>
      <exception cref="T:System.ArgumentException">The <see cref="P:System.Net.PeerToPeer.PeerName.Classifier" /> includes one or more illegal characters.</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.Net.PeerToPeer.PeerName.Authority">
      <summary>Returns a string that specifies the <see cref="P:System.Net.PeerToPeer.PeerName.Authority" /> used by this <see cref="T:System.Net.PeerToPeer.PeerName" /> object.  </summary>
      <returns>The string which contains the authentication portion of the specified <see cref="T:System.Net.PeerToPeer.PeerName" />. For secured peer names, this property contains the public key as a forty-character hexadecimal string. For unsecured peer names, this property is set to zero (0).</returns>
    </member>
    <member name="P:System.Net.PeerToPeer.PeerName.Classifier">
      <summary>Returns a string that contains the classifier for a peer-to-peer <see cref="T:System.Net.PeerToPeer.PeerName" />. </summary>
      <returns>The string which contains the classifier portion used to identify a peer name for <see cref="T:System.Net.PeerToPeer.PeerNameRegistration" /> or resolution within a PNRP <see cref="T:System.Net.PeerToPeer.Cloud" />.Unless explicitly specified, the default value for all properties is null for reference types and zero (0) for properties of type int.</returns>
    </member>
    <member name="M:System.Net.PeerToPeer.PeerName.CreateFromPeerHostName(System.String)">
      <summary>Creates a new instance of the specified <see cref="P:System.Net.PeerToPeer.PeerName.PeerHostName" /> object with the specified peer host name.</summary>
      <returns>A <see cref="T:System.Net.PeerToPeer.PeerName" /> object that represents the specified peer host name.</returns>
      <param name="peerHostName"></param>
      <exception cref="T:System.ArgumentException">The <see cref="T:System.String" /> provided is not a valid peer host name string.</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Net.PeerToPeer.PeerName.CreateRelativePeerName(System.Net.PeerToPeer.PeerName,System.String)">
      <summary>Creates a new <see cref="T:System.Net.PeerToPeer.PeerName" /> by replacing the <see cref="P:System.Net.PeerToPeer.PeerName.Classifier" /> field defined on the supplied <see cref="T:System.Net.PeerToPeer.PeerName" /> object with the specified classifier string value.</summary>
      <returns>The new <see cref="T:System.Net.PeerToPeer.PeerName" /> object that contains the updated classifier.</returns>
      <param name="peerName">The <see cref="T:System.Net.PeerToPeer.PeerName" /> object on which to set the new classifier string value.</param>
      <param name="classifier"></param>
      <exception cref="T:System.ArgumentException">The <see cref="T:System.String" /> provided is not a valid peer name classifier.</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Net.PeerToPeer.PeerName.Equals(System.Net.PeerToPeer.PeerName)">
      <summary>Performs a case-sensitive comparison of the current <see cref="T:System.Net.PeerToPeer.PeerName" /> and the specified peer name.</summary>
      <param name="other">The peer name to compare with this <see cref="T:System.Net.PeerToPeer.PeerName" />.</param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Net.PeerToPeer.PeerName.Equals(System.Object)">
      <summary>Determines whether the content of this <see cref="T:System.Net.PeerToPeer.PeerName" /> is equal to the content of another object. </summary>
      <returns>True if the <see cref="T:System.Net.PeerToPeer.PeerName" /> and the comparison object contain the same information; otherwise false.</returns>
      <param name="obj">The <see cref="T:System.Object" /> to compare with the current <see cref="T:System.Net.PeerToPeer.PeerName" />.</param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Net.PeerToPeer.PeerName.GetHashCode">
      <summary>Overrides the <see cref="M:System.Object.GetHashCode" /> method.</summary>
      <returns>A hashcode for the current <see cref="T:System.Object" />.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Net.PeerToPeer.PeerName.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Populates a serialization information object with the data needed to serialize the <see cref="T:System.Net.PeerToPeer.PeerName" />.</summary>
      <param name="info">Holds the serialized data associated with the <see cref="T:System.Net.PeerToPeer.PeerName" /> object.</param>
      <param name="context">Contains the destination for the serialized stream associated with the <see cref="T:System.Net.PeerToPeer.PeerName" /> object.</param>
    </member>
    <member name="P:System.Net.PeerToPeer.PeerName.IsSecured">
      <summary>Gets a Boolean value that specifies whether this is a secured peer name.</summary>
      <returns>If true, this peer name is secured with a private key/ public key pair. Its name contains the Secure Hash Algorithm (SHA) hash of the public key of the user certificate of that peer machine. Otherwise, if false, the peer name has no associated identity.Unless explicitly specified, the default value for all properties is null for reference types and zero (0) for properties of type int.</returns>
    </member>
    <member name="P:System.Net.PeerToPeer.PeerName.PeerHostName">
      <summary>Gets the name of the peer-to-peer host. This is a DNS-encoded version of the <see cref="T:System.Net.PeerToPeer.PeerName" /> which is equivalent to a <see cref="P:System.Net.PeerToPeer.PeerName.PeerHostName" /> in that they are both identifiers.  The difference between the two is visual representation.</summary>
      <returns>A <see cref="T:System.String" /> value that is the name of the peer-to-peer host. Unless explicitly specified, the default value for all properties is null for reference types. </returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Net.PeerToPeer.PeerName.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Implements the <see cref="T:System.Runtime.Serialization.ISerializable" /> interface and returns the data needed to serialize the <see cref="T:System.Net.PeerToPeer.PeerName" /> instance. </summary>
      <param name="info">Holds the serialized data associated with the <see cref="T:System.Net.PeerToPeer.PeerName" /> object.</param>
      <param name="context">Contains the destination for the serialized stream associated with the <see cref="T:System.Net.PeerToPeer.PeerName" /> object.</param>
    </member>
    <member name="M:System.Net.PeerToPeer.PeerName.ToString">
      <summary>Returns a string representation of the current <see cref="T:System.Net.PeerToPeer.PeerName" /> object.</summary>
      <returns>A string that represents the current <see cref="T:System.Net.PeerToPeer.PeerName" />, and specified in the following format: Authority.Classifier. For example, "0.MyInternetPeer".</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="T:System.Net.PeerToPeer.PeerNameRecord">
      <summary>Defines the set of values that form a peer name record object. This record includes items such as the peer name and the collection of endpoints with which it communicates. Peer name records are used to define the individual peer nodes within a <see cref="T:System.Net.PeerToPeer.Cloud" />.</summary>
    </member>
    <member name="M:System.Net.PeerToPeer.PeerNameRecord.#ctor">
      <summary>Initializes a new default instance of the <see cref="T:System.Net.PeerToPeer.PeerNameRecord" /> class.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Net.PeerToPeer.PeerNameRecord.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Initializes a new default instance of the <see cref="T:System.Net.PeerToPeer.PeerNameRecord" /> class.</summary>
      <param name="info">Reference to the object that holds the data needed to deserialize this instance.</param>
      <param name="context">Context that provides the means for deserializing the data. Also referred to as the source of the serialized data.</param>
    </member>
    <member name="P:System.Net.PeerToPeer.PeerNameRecord.Comment">
      <summary>Gets or sets additional information about the <see cref="T:System.Net.PeerToPeer.PeerNameRecord" /> object.</summary>
      <returns>The comment associated with the <see cref="T:System.Net.PeerToPeer.PeerNameRecord" /> object. The default value for this property is null. </returns>
      <exception cref="T:System.ArgumentException">The comment to set is either larger than 39 Unicode characters or less than one character.</exception>
      <exception cref="T:System.ArgumentNullException">The comment to set is null.</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.Net.PeerToPeer.PeerNameRecord.Data">
      <summary>Gets or sets application-defined binary data for the <see cref="T:System.Net.PeerToPeer.PeerNameRecord" /> object.</summary>
      <returns>An array of bytes that holds the binary data associated with the entry. The default value for this property is an empty (zero-length) array instance.</returns>
      <exception cref="T:System.ArgumentException">The length of the binary data array to set is either greater than 4096 or less than 1.</exception>
      <exception cref="T:System.ArgumentNullException">The data to set is null.</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.Net.PeerToPeer.PeerNameRecord.EndPointCollection">
      <summary>Gets an <see cref="T:System.Net.PeerToPeer.Collaboration.PeerEndPointCollection" /> object that contains all the endpoints available to the peer associated with this <see cref="T:System.Net.PeerToPeer.PeerNameRecord" /> object. </summary>
      <returns>A <see cref="T:System.Net.IPEndPointCollection" /> object that contains a collection of <see cref="T:System.Net.IPEndPoint" /> objects. These objects contain the endpoints of other peers participating within the associated peer cloud. The default value for this property is null.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Net.PeerToPeer.PeerNameRecord.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Populates a serialization information object with the data needed to serialize the <see cref="T:System.Net.PeerToPeer.PeerNameRecord" />.</summary>
      <param name="info">Holds the serialized data associated with the <see cref="T:System.Net.PeerToPeer.PeerNameRecord" /> object.</param>
      <param name="context">Contains the destination for the serialized stream associated with the <see cref="T:System.Net.PeerToPeer.PeerNameRecord" /> object.</param>
    </member>
    <member name="P:System.Net.PeerToPeer.PeerNameRecord.PeerName">
      <summary>Gets or sets the <see cref="T:System.Net.PeerToPeer.PeerName" /> within this <see cref="T:System.Net.PeerToPeer.PeerNameRecord" /> object. A peer name is a string used to identify a peer resource.</summary>
      <returns>The <see cref="P:System.Net.PeerToPeer.PeerNameRecord.PeerName" /> within this <see cref="T:System.Net.PeerToPeer.PeerNameRecord" /> object. The default value for this property is null.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Net.PeerToPeer.PeerNameRecord.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Implements the <see cref="T:System.Runtime.Serialization.ISerializable" /> interface and returns the data needed to serialize the <see cref="T:System.Net.PeerToPeer.PeerNameRecord" /> instance. </summary>
      <param name="info">Holds the serialized data associated with the <see cref="T:System.Net.PeerToPeer.PeerNameRecord" /> instance.</param>
      <param name="context">Contains the destination for the serialized stream associated with the <see cref="T:System.Net.PeerToPeer.PeerNameRecord" /> instance.</param>
    </member>
    <member name="T:System.Net.PeerToPeer.PeerNameRecordCollection">
      <summary>Represents a container for <see cref="T:System.Net.PeerToPeer.PeerNameRecord" /> elements. </summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Net.PeerToPeer.PeerNameRecordCollection.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Net.PeerToPeer.PeerNameRecordCollection" /> class.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Net.PeerToPeer.PeerNameRecordCollection.InsertItem(System.Int32,System.Net.PeerToPeer.PeerNameRecord)">
      <summary>Inserts a <see cref="T:System.Net.PeerToPeer.PeerNameRecord" /> element into the <see cref="T:System.Net.PeerToPeer.PeerNameRecordCollection" /> at the specified index.  </summary>
      <param name="index">The zero-based index of the element to replace.</param>
      <param name="item">The value for the new element at the specified index.</param>
      <exception cref="T:System.ArgumentNullException">The item provided cannot be null.</exception>
    </member>
    <member name="M:System.Net.PeerToPeer.PeerNameRecordCollection.SetItem(System.Int32,System.Net.PeerToPeer.PeerNameRecord)">
      <summary>Replaces the <see cref="T:System.Net.PeerToPeer.PeerNameRecord" /> at the specified index.</summary>
      <param name="index">The zero-based index of the element to replace.</param>
      <param name="item">The new value for the element to be replaced.</param>
      <exception cref="T:System.ArgumentNullException">The item provided cannot be null.</exception>
    </member>
    <member name="T:System.Net.PeerToPeer.PeerNameRegistration">
      <summary>Registers a <see cref="P:System.Net.PeerToPeer.PeerNameRegistration.PeerName" /> in a <see cref="T:System.Net.PeerToPeer.Cloud" /> or set of clouds.</summary>
    </member>
    <member name="M:System.Net.PeerToPeer.PeerNameRegistration.#ctor">
      <summary>Initializes a new default instance of the <see cref="T:System.Net.PeerToPeer.PeerNameRegistration" /> class.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Net.PeerToPeer.PeerNameRegistration.#ctor(System.Net.PeerToPeer.PeerName,System.Int32)">
      <summary>Initializes a new instance of the <see cref="T:System.Net.PeerToPeer.PeerNameRegistration" /> class with the specified name and port number.</summary>
      <param name="name">The <see cref="T:System.Net.PeerToPeer.PeerName" /> object to register.</param>
      <param name="port">Integer value that specifies the port number to register. </param>
      <exception cref="T:System.ArgumentNullException">The <paramref name="name" /> parameter cannot be null.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">The specified port number is less than zero.  Port numbers must be greater than or equal to zero and less than 65,535 (0xFFFF).</exception>
      <exception cref="T:System.Net.PeerToPeer.PeerToPeerException">The <see cref="T:System.Net.PeerToPeer.PeerName" /> specified has already been registered from this host.The remote peer does not own the <see cref="P:System.Net.PeerToPeer.PeerName.Authority" /> for the supplied <see cref="T:System.Net.PeerToPeer.PeerName" /> object.</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Net.PeerToPeer.PeerNameRegistration.#ctor(System.Net.PeerToPeer.PeerName,System.Int32,System.Net.PeerToPeer.Cloud)">
      <summary>Initializes a new instance of the <see cref="T:System.Net.PeerToPeer.PeerNameRegistration" /> class with the specified peer name, port number, and <see cref="T:System.Net.PeerToPeer.Cloud" />.</summary>
      <param name="name">The <see cref="T:System.Net.PeerToPeer.PeerName" /> object to register.</param>
      <param name="port">Integer value that specifies the port number to register.</param>
      <param name="cloud">
        <see cref="T:System.Net.PeerToPeer.Cloud" /> in which to register the peer name.</param>
      <exception cref="T:System.ArgumentNullException">The <paramref name="name" /> parameter cannot be null.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">The specified port number is less than zero.  Port numbers must be greater than or equal to zero and less than 65,535 (0xFFFF).</exception>
      <exception cref="T:System.Net.PeerToPeer.PeerToPeerException">The <see cref="T:System.Net.PeerToPeer.PeerName" /> specified has already been registered from this host.The remote peer does not own the <see cref="P:System.Net.PeerToPeer.PeerName.Authority" /> for the supplied <see cref="T:System.Net.PeerToPeer.PeerName" /> object.</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Net.PeerToPeer.PeerNameRegistration.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Initializes a new serializable <see cref="T:System.Net.PeerToPeer.PeerNameRegistration" /> object.</summary>
      <param name="info">Reference to the object that holds the data needed to deserialize this instance.</param>
      <param name="context">Context that provides the means for deserializing the data. Also referred to as the source of the serialized data.</param>
    </member>
    <member name="P:System.Net.PeerToPeer.PeerNameRegistration.Cloud">
      <summary>Gets or sets information in a <see cref="P:System.Net.PeerToPeer.PeerNameRegistration.Cloud" /> into which this <see cref="P:System.Net.PeerToPeer.PeerNameRecord.PeerName" /> object will be registered.</summary>
      <returns>An object of type <see cref="T:System.Net.PeerToPeer.Cloud" /> that specifies the peer cloud for which this registration is defined. This property is set to null by default.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.Net.PeerToPeer.PeerNameRegistration.Comment">
      <summary>Gets or sets additional information about the <see cref="T:System.Net.PeerToPeer.PeerName" /> object that will be registered with the <see cref="T:System.Net.PeerToPeer.Cloud" />.</summary>
      <returns>The comment that contains additional information about the <see cref="T:System.Net.PeerToPeer.PeerName" /> to associate with the <see cref="T:System.Net.PeerToPeer.Cloud" />. This property is set to null by default.</returns>
      <exception cref="T:System.Net.PeerToPeer.PeerToPeerException">The specified string value is greater than 39 Unicode characters.</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.Net.PeerToPeer.PeerNameRegistration.Data">
      <summary>Gets or sets application-defined binary data for the <see cref="T:System.Net.PeerToPeer.PeerNameRegistration" /> object.</summary>
      <returns>An array of bytes that holds the binary data associated with the entry. This property is set to null by default.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">The specified <see cref="P:System.Net.PeerToPeer.PeerNameRegistration.Data" /> is greater than 4096 bytes.</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Net.PeerToPeer.PeerNameRegistration.Dispose">
      <summary>Releases all resources used by the <see cref="T:System.Net.PeerToPeer.PeerNameRegistration" /> object.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Net.PeerToPeer.PeerNameRegistration.Dispose(System.Boolean)">
      <summary>Releases the unmanaged resources and optionally releases the managed resources used by the <see cref="T:System.Net.PeerToPeer.PeerNameRegistration" /> object.</summary>
      <param name="disposing">True to release both managed and unmanaged resources; false to release only unmanaged resources.</param>
    </member>
    <member name="P:System.Net.PeerToPeer.PeerNameRegistration.EndPointCollection">
      <summary>Gets the collection of network endpoints for which the associated peer name is registered.</summary>
      <returns>An <see cref="P:System.Net.PeerToPeer.PeerNameRecord.EndPointCollection" /> object that contains the network endpoints for which the associated peer name is registered. Unless explicitly specified, the default value for all properties is null for reference types.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Net.PeerToPeer.PeerNameRegistration.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Populates a serialization information object with the data needed to serialize the <see cref="T:System.Net.PeerToPeer.PeerNameRegistration" /> instance.</summary>
      <param name="info">Holds the serialized data associated with the <see cref="T:System.Net.PeerToPeer.PeerNameRegistration" /> object.</param>
      <param name="context">Contains destination for the serialized stream associated with the <see cref="T:System.Net.PeerToPeer.PeerNameRegistration" /> object.</param>
    </member>
    <member name="M:System.Net.PeerToPeer.PeerNameRegistration.IsRegistered">
      <summary>Gets or sets whether the peer name specified in the <see cref="P:System.Net.PeerToPeer.PeerNameRegistration.PeerName" /> property is registered with a specific <see cref="T:System.Net.PeerToPeer.Cloud" /> on a host.</summary>
      <returns>If true, the peer name is registered with a <see cref="P:System.Net.PeerToPeer.PeerNameRegistration.Cloud" /> for the peer host. If false, then the registration process can be started with <see cref="M:System.Net.PeerToPeer.PeerNameRegistration.Start" />.</returns>
      <exception cref="T:System.ObjectDisposedException">An object that has been disposed already cannot be registered.</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.Net.PeerToPeer.PeerNameRegistration.PeerName">
      <summary>Gets or sets the peer name to register with a peer cloud.</summary>
      <returns>An object of type <see cref="T:System.Net.PeerToPeer.PeerName" /> that contains values associated with this <see cref="T:System.Net.PeerToPeer.PeerNameRegistration" /> object. Unless explicitly specified, the default value for all properties is null for reference types.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.Net.PeerToPeer.PeerNameRegistration.Port">
      <summary>Gets or sets the TCP/IP port number used by the peer being registered into the <see cref="T:System.Net.PeerToPeer.PeerNameRegistration" /> object.</summary>
      <returns>An integer value indicating the TCP port number of the <see cref="T:System.Net.IPEndPoint" />. Unless explicitly specified, the default value for this property is zero (0).</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">The specified port value is less than zero.  Port numbers must be greater than or equal to zero and less than 65,535 (0xFFFF).</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Net.PeerToPeer.PeerNameRegistration.Start">
      <summary>Registers the <see cref="P:System.Net.PeerToPeer.PeerNameRegistration.PeerName" /> into the <see cref="P:System.Net.PeerToPeer.PeerNameRegistration.Cloud" />. If no <see cref="P:System.Net.PeerToPeer.PeerNameRegistration.EndPointCollection" /> is specified, automatic address selection is used with the port value specified by the <see cref="P:System.Net.PeerToPeer.PeerNameRegistration.Port" /> property.</summary>
      <exception cref="T:System.ArgumentNullException">The <see cref="P:System.Net.PeerToPeer.PeerNameRegistration.PeerName" /> property is set to null.</exception>
      <exception cref="T:System.ObjectDisposedException">This object had Dispose() called on it previously.</exception>
      <exception cref="T:System.Net.PeerToPeer.PeerToPeerException">The <see cref="T:System.Net.PeerToPeer.PeerName" /> specified has already been registered. The <see cref="M:System.Net.PeerToPeer.PeerNameRegistration.Update" /> method must be used to update a registration. The remote peer does not own the <see cref="P:System.Net.PeerToPeer.PeerName.Authority" /> for the <see cref="T:System.Net.PeerToPeer.PeerName" /> specified.Either the <see cref="T:System.Net.PeerToPeer.PeerName" /> or the <see cref="P:System.Net.PeerToPeer.PeerNameRecord.Data" /> is not specified; at least one needs to be provided.The message or data elements are invalid. Or, <see cref="P:System.Net.PeerToPeer.PeerNameRegistration.UseAutoEndPointSelection" /> is not set and no data blob or <see cref="T:System.Net.IPEndPoint" /> is specified.</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Net.PeerToPeer.PeerNameRegistration.Stop">
      <summary>Unregisters the peer name specified in the <see cref="P:System.Net.PeerToPeer.PeerNameRegistration.PeerName" /> property from all the clouds in which it was registered.</summary>
      <exception cref="T:System.InvalidOperationException">The <see cref="P:System.Net.PeerToPeer.PeerNameRegistration.PeerName" /> property has not yet been registered. This occurs when a <see cref="T:System.Net.PeerToPeer.PeerNameRegistration" /> object is constructed using the empty constructor. The <see cref="P:System.Net.PeerToPeer.PeerNameRegistration.PeerName" /> property must be populated in this instance prior to calling <see cref="M:System.Net.PeerToPeer.PeerNameRegistration.Start" />.</exception>
      <exception cref="T:System.ObjectDisposedException">This object had Dispose() called on it previously.</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Net.PeerToPeer.PeerNameRegistration.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Implements the <see cref="T:System.Runtime.Serialization.ISerializable" /> interface and returns the data needed to serialize the <see cref="T:System.Net.PeerToPeer.PeerNameRegistration" /> instance.</summary>
      <param name="info">Holds the serialized data associated with the <see cref="T:System.Net.PeerToPeer.PeerNameRegistration" /> instance.</param>
      <param name="context">Contains the destination for the serialized stream associated with the <see cref="T:System.Net.PeerToPeer.PeerNameRegistration" /> instance.</param>
    </member>
    <member name="M:System.Net.PeerToPeer.PeerNameRegistration.Update">
      <summary>Updates the <see cref="T:System.Net.PeerToPeer.PeerNameRegistration" /> for a node registered with a specific <see cref="T:System.Net.PeerToPeer.Cloud" />. Update is performed using the information specified in the properties.</summary>
      <exception cref="T:System.InvalidOperationException">The <see cref="P:System.Net.PeerToPeer.PeerNameRegistration.PeerName" /> property is set to null.</exception>
      <exception cref="T:System.ObjectDisposedException">The <see cref="P:System.Net.PeerToPeer.PeerNameRegistration.PeerName" /> property has not yet been registered. The <see cref="M:System.Net.PeerToPeer.PeerNameRegistration.Update" /> method cannot be called until the peer name specified in the <see cref="P:System.Net.PeerToPeer.PeerNameRegistration.PeerName" /> property is registered in one or more clouds.The peer name specified in the <see cref="P:System.Net.PeerToPeer.PeerNameRegistration.PeerName" /> property has changed since the corresponding <see cref="T:System.Net.PeerToPeer.PeerNameRecord" /> was registered.</exception>
      <exception cref="T:System.Net.PeerToPeer.PeerToPeerException">An object that has been disposed cannot be registered.</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.Net.PeerToPeer.PeerNameRegistration.UseAutoEndPointSelection">
      <summary>Gets or sets a value that specifies whether to use automatic endpoint selection when traversing a peer mesh or <see cref="P:System.Net.PeerToPeer.PeerNameRegistration.Cloud" />. </summary>
      <returns>True if automatic endpoint selection is to be used; false if some other method will be used to determine an endpoint. The default value is true. </returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="T:System.Net.PeerToPeer.PeerNameResolver">
      <summary>Specifies the values that resolve a <see cref="T:System.Net.PeerToPeer.PeerName" /> to a <see cref="T:System.Net.PeerToPeer.PeerNameRecord" /> using the PNRP Namespace Provider API protocol.</summary>
    </member>
    <member name="M:System.Net.PeerToPeer.PeerNameResolver.#ctor">
      <summary>Initializes a new default instance of the <see cref="T:System.Net.PeerToPeer.PeerNameResolver" /> class.</summary>
    </member>
    <member name="M:System.Net.PeerToPeer.PeerNameResolver.OnResolveCompleted(System.Net.PeerToPeer.ResolveCompletedEventArgs)">
      <summary>Returns peer resolution data after the <see cref="E:System.Net.PeerToPeer.PeerNameResolver.ResolveCompleted" /> event is raised.</summary>
      <param name="e">The <see cref="T:System.Net.PeerToPeer.ResolveCompletedEventArgs" /> object that contains the data returned by the <see cref="E:System.Net.PeerToPeer.PeerNameResolver.ResolveCompleted" /> event.</param>
    </member>
    <member name="M:System.Net.PeerToPeer.PeerNameResolver.OnResolveProgressChanged(System.Net.PeerToPeer.ResolveProgressChangedEventArgs)">
      <summary>Returns peer resolution progress data when the <see cref="E:System.Net.PeerToPeer.PeerNameResolver.ResolveProgressChanged" /> event is raised.</summary>
      <param name="e">
        <see cref="T:System.Net.PeerToPeer.ResolveProgressChangedEventArgs" /> object that contains peer name resolution progress information returned by the <see cref="E:System.Net.PeerToPeer.PeerNameResolver.ResolveProgressChanged" /> event.</param>
    </member>
    <member name="M:System.Net.PeerToPeer.PeerNameResolver.Resolve(System.Net.PeerToPeer.PeerName)">
      <summary>Resolves the specified <see cref="T:System.Net.PeerToPeer.PeerName" /> in all clouds known to the calling peer.</summary>
      <returns>A <see cref="T:System.Net.PeerToPeer.PeerNameRecordCollection" /> that contains all peer name records (represented as <see cref="T:System.Net.PeerToPeer.PeerNameRecord" /> objects) associated with the specified peer name. For unsecured peer names, the same <see cref="T:System.Net.PeerToPeer.PeerName" /> can be registered by different users in the same <see cref="T:System.Net.PeerToPeer.Cloud" />, and associated with different endpoints.</returns>
      <param name="peerName">The <see cref="T:System.Net.PeerToPeer.PeerName" /> to resolve.</param>
      <exception cref="T:System.ArgumentNullException">The <paramref name="peerName" /> parameter is set to null.</exception>
      <exception cref="T:System.Net.PeerToPeer.PeerToPeerException">The peer name specified cannot be resolved. </exception>
    </member>
    <member name="M:System.Net.PeerToPeer.PeerNameResolver.Resolve(System.Net.PeerToPeer.PeerName,System.Int32)">
      <summary>Resolves the specified peer name in all clouds known to the calling peer, returning no more than the specified number of <see cref="T:System.Net.PeerToPeer.PeerNameRecord" /> objects.</summary>
      <returns>A <see cref="T:System.Net.PeerToPeer.PeerNameRecordCollection" /> whose size is less than or equal to <paramref name="maxRecords" /> entries. This collection contains peer name records associated with the <see cref="T:System.Net.PeerToPeer.PeerName" /> that was resolved.</returns>
      <param name="peerName">The <see cref="T:System.Net.PeerToPeer.PeerName" /> to resolve.</param>
      <param name="maxRecords">The maximum number of <see cref="T:System.Net.PeerToPeer.PeerNameRecord" /> objects to obtain from all <see cref="T:System.Net.PeerToPeer.Cloud" /> objects for the supplied <paramref name="peerName" />.</param>
      <exception cref="T:System.ArgumentNullException">The <paramref name="peerName" /> parameter is set to null.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">The <paramref name="maxRecords" /> parameter is less than or equal to zero.</exception>
      <exception cref="T:System.Net.PeerToPeer.PeerToPeerException">The supplied peer name cannot be resolved.</exception>
    </member>
    <member name="M:System.Net.PeerToPeer.PeerNameResolver.Resolve(System.Net.PeerToPeer.PeerName,System.Net.PeerToPeer.Cloud)">
      <summary>Resolves the specified <see cref="P:System.Net.PeerToPeer.PeerNameRecord.PeerName" /> in the specified <see cref="T:System.Net.PeerToPeer.Cloud" />.</summary>
      <returns>
        <see cref="T:System.Net.PeerToPeer.PeerNameRecordCollection" /> that contains all peer name records (represented as <see cref="T:System.Net.PeerToPeer.PeerNameRecord" /> objects) associated with the specified peer name. For unsecured peer names, the same <see cref="T:System.Net.PeerToPeer.PeerName" /> can be registered by different users in the same <see cref="T:System.Net.PeerToPeer.Cloud" />, and associated with different endpoints.</returns>
      <param name="peerName">The <see cref="T:System.Net.PeerToPeer.PeerName" /> to resolve.</param>
      <param name="cloud">The <see cref="T:System.Net.PeerToPeer.Cloud" /> in which to resolve the peer name.</param>
      <exception cref="T:System.ArgumentNullException">The <paramref name="peerName" /> parameter is set to null.</exception>
      <exception cref="T:System.Net.PeerToPeer.PeerToPeerException">The supplied peer name cannot be resolved. </exception>
    </member>
    <member name="M:System.Net.PeerToPeer.PeerNameResolver.Resolve(System.Net.PeerToPeer.PeerName,System.Net.PeerToPeer.Cloud,System.Int32)">
      <summary>Resolves the specified <see cref="P:System.Net.PeerToPeer.PeerNameRecord.PeerName" /> in the specified <see cref="T:System.Net.PeerToPeer.Cloud" />, returning no more than the specified number of <see cref="T:System.Net.PeerToPeer.PeerNameRecord" /> objects. </summary>
      <returns>A <see cref="T:System.Net.PeerToPeer.PeerNameRecordCollection" /> whose size is less than or equal to <paramref name="maxRecords" /> entries. This collection contains peer name records associated with the <see cref="T:System.Net.PeerToPeer.PeerName" /> that was resolved.</returns>
      <param name="peerName">The <see cref="T:System.Net.PeerToPeer.PeerName" /> to resolve.</param>
      <param name="cloud">The <see cref="T:System.Net.PeerToPeer.Cloud" /> in which to resolve the <paramref name="peerName" />.</param>
      <param name="maxRecords">The maximum number of peer name record objects to obtain from the specified cloud for the specified <paramref name="peerName" />.</param>
      <exception cref="T:System.ArgumentNullException">The <paramref name="peerName" /> parameter is set to null.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">The <paramref name="maxRecords" /> parameter is less than or equal to zero.  </exception>
      <exception cref="T:System.Net.PeerToPeer.PeerToPeerException">The supplied peer name cannot be resolved.</exception>
    </member>
    <member name="M:System.Net.PeerToPeer.PeerNameResolver.ResolveAsync(System.Net.PeerToPeer.PeerName,System.Int32,System.Object)">
      <summary>Begins an asynchronous peer name resolution operation for the specified <see cref="T:System.Net.PeerToPeer.PeerName" /> in all clouds known to the calling peer, returning no more than <paramref name="maxRecords" /> entries for the peer name.</summary>
      <param name="peerName">The <see cref="T:System.Net.PeerToPeer.PeerName" /> to resolve.</param>
      <param name="maxRecords">The maximum number of records to obtain for the Peer Name.</param>
      <param name="userState">A user-defined object that contains information about the resolve operation.</param>
      <exception cref="T:System.ArgumentNullException">One or both of the <paramref name="peerName" /> and <paramref name="userState" /> parameters are set to null.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">The <paramref name="maxRecords" /> parameter is less than or equal to zero.</exception>
    </member>
    <member name="M:System.Net.PeerToPeer.PeerNameResolver.ResolveAsync(System.Net.PeerToPeer.PeerName,System.Net.PeerToPeer.Cloud,System.Int32,System.Object)">
      <summary>Begins an asynchronous peer name resolution operation for the specified <see cref="T:System.Net.PeerToPeer.PeerName" /> in the specified <see cref="T:System.Net.PeerToPeer.Cloud" />.  The resolution operation will resolve no more than <paramref name="maxRecords" /> entries for the specified peer name.</summary>
      <param name="peerName">The <paramref name="peerName" /> to resolve.</param>
      <param name="cloud">The <paramref name="cloud" /> in which to resolve <paramref name="peerName" />.</param>
      <param name="maxRecords">The maximum number of records to obtain from <paramref name="cloud" /> for <paramref name="peerName" />.</param>
      <param name="userState">A user-defined object that contains information about the peer name resolution operation. </param>
      <exception cref="T:System.ArgumentNullException">One or both of the <paramref name="peerName" /> and <paramref name="userState" /> parameters are set to null.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">The <paramref name="maxRecords" /> parameter is less than or equal to zero.</exception>
    </member>
    <member name="M:System.Net.PeerToPeer.PeerNameResolver.ResolveAsync(System.Net.PeerToPeer.PeerName,System.Net.PeerToPeer.Cloud,System.Object)">
      <summary>Begins an asynchronous peer name resolution operation for the specified <see cref="T:System.Net.PeerToPeer.PeerName" /> in the specified <see cref="T:System.Net.PeerToPeer.Cloud" />.</summary>
      <param name="peerName">The <see cref="T:System.Net.PeerToPeer.PeerName" /> to resolve.</param>
      <param name="cloud">The <see cref="T:System.Net.PeerToPeer.Cloud" /> in which to resolve the <paramref name="peerName" />.</param>
      <param name="userState">A user-defined <see cref="T:System.Object" /> that contains information about the peer name resolution operation.</param>
      <exception cref="T:System.ArgumentNullException">One or both of the <paramref name="peerName" /> and <paramref name="userState" /> parameters are set to null.</exception>
    </member>
    <member name="M:System.Net.PeerToPeer.PeerNameResolver.ResolveAsync(System.Net.PeerToPeer.PeerName,System.Object)">
      <summary>Begins an asynchronous peer name resolution operation for the specified <see cref="P:System.Net.PeerToPeer.PeerNameRecord.PeerName" /> in all clouds known to the calling peer.</summary>
      <param name="peerName">The <see cref="T:System.Net.PeerToPeer.PeerName" /> to resolve.</param>
      <param name="userState">A user-defined object that contains state information about the peer name resolution operation.</param>
      <exception cref="T:System.ArgumentNullException">One or both of the <paramref name="peerName" /> and <paramref name="userState" /> parameters are set to null.</exception>
    </member>
    <member name="M:System.Net.PeerToPeer.PeerNameResolver.ResolveAsyncCancel(System.Object)">
      <summary>Cancels the specified asynchronous peer name resolution request. </summary>
      <param name="userState">The object provided to the <see cref="Overload:System.Net.PeerToPeer.PeerNameResolver.ResolveAsync" /> method instance which started the resolve operation. </param>
      <exception cref="T:System.ArgumentNullException">The <paramref name="userState" /> parameters cannot be null.</exception>
    </member>
    <member name="E:System.Net.PeerToPeer.PeerNameResolver.ResolveCompleted">
      <summary>The <see cref="E:System.Net.PeerToPeer.PeerNameResolver.ResolveCompleted" /> event is signaled when a peer name resolution request for a specific <see cref="P:System.Net.PeerToPeer.PeerNameRegistration.PeerName" /> has completed.  </summary>
    </member>
    <member name="E:System.Net.PeerToPeer.PeerNameResolver.ResolveProgressChanged">
      <summary>This event is signaled whenever a <see cref="T:System.Net.PeerToPeer.PeerNameRecord" /> object is found in response to a <see cref="Overload:System.Net.PeerToPeer.PeerNameResolver.ResolveAsync" /> operation for a specific <see cref="T:System.Net.PeerToPeer.PeerName" />.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="T:System.Net.PeerToPeer.PeerNameType">
      <summary>Defines the type of <see cref="T:System.Net.PeerToPeer.PeerName" /> to create. A peer name is either secured or unsecured. A secured peer name provides a proof of ownership of the name. An unsecured peer name has no identity associated.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="F:System.Net.PeerToPeer.PeerNameType.Secured">
      <summary>Create a secured <see cref="T:System.Net.PeerToPeer.PeerName" />  using the identity of current user.</summary>
    </member>
    <member name="F:System.Net.PeerToPeer.PeerNameType.Unsecured">
      <summary>Create an unsecured <see cref="T:System.Net.PeerToPeer.PeerName" />  using the identity of current user.</summary>
    </member>
    <member name="T:System.Net.PeerToPeer.PeerToPeerException">
      <summary>Represents the exceptions that are thrown when an error is raised by the Peer-to-Peer Infrastructure.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Net.PeerToPeer.PeerToPeerException.#ctor">
      <summary>Initializes a new default instance of the <see cref="T:System.Net.PeerToPeer.PeerToPeerException" /> class.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Net.PeerToPeer.PeerToPeerException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Initializes a new instance of the <see cref="T:System.Net.PeerToPeer.PeerToPeerException" /> class with serialized data.</summary>
      <param name="info">Reference to the object that holds the data needed to deserialize the object.</param>
      <param name="context">Context that provides the means for deserializing the <see cref="T:System.Net.PeerToPeer.PeerToPeerException" /> data. Also referred to as the source of the serialized data.</param>
    </member>
    <member name="M:System.Net.PeerToPeer.PeerToPeerException.#ctor(System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.Net.PeerToPeer.PeerToPeerException" /> class with the supplied message string.</summary>
      <param name="message">The error message that provides the reason for the exception.</param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Net.PeerToPeer.PeerToPeerException.#ctor(System.String,System.Exception)">
      <summary>Initializes a new instance of the <see cref="T:System.Net.PeerToPeer.PeerToPeerException" /> class with the supplied message string and exception. </summary>
      <param name="message"></param>
      <param name="innerException">The exception instance that caused the current <see cref="T:System.Exception" />.</param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Net.PeerToPeer.PeerToPeerException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Implements the <see cref="T:System.Runtime.Serialization.ISerializable" /> interface and returns the data needed to serialize the peer object.</summary>
      <param name="info">Contains the information required to serialize the <see cref="T:System.Net.PeerToPeer.PeerToPeerException" /> object.</param>
      <param name="context">Contains the destination for the serialized stream associated with the <see cref="T:System.Net.PeerToPeer.PeerToPeerException" /> object.</param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Net.PeerToPeer.PeerToPeerException.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Implements the <see cref="T:System.Runtime.Serialization.ISerializable" /> interface and returns the data needed to serialize the <see cref="T:System.Net.PeerToPeer.PeerToPeerException" /> instance. </summary>
      <param name="info">Contains the information required to serialize the <see cref="T:System.Net.PeerToPeer.PeerToPeerException" /> instance.</param>
      <param name="context">Contains the destination for the serialized stream associated with the <see cref="T:System.Net.PeerToPeer.PeerToPeerException" /> instance.</param>
    </member>
    <member name="T:System.Net.PeerToPeer.PnrpPermission">
      <summary>Specifies the values that are used in <see cref="N:System.Net.PeerToPeer" /> object permissions. </summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Net.PeerToPeer.PnrpPermission.#ctor(System.Security.Permissions.PermissionState)">
      <summary>Initializes a new instance of the <see cref="T:System.Net.PeerToPeer.PnrpPermission" /> class with the supplied initial permission state.</summary>
      <param name="state">One of the values in the <see cref="T:System.Security.Permissions.PermissionState" /> enumeration.</param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Net.PeerToPeer.PnrpPermission.Copy">
      <summary>Creates and returns an identical copy of the current <see cref="T:System.Net.PeerToPeer.PnrpPermission" />.</summary>
      <returns>An object with an IPermission interface, whose instance contains a copy of the current instance of <see cref="T:System.Net.PeerToPeer.PnrpPermission" />. </returns>
      <exception cref="T:System.ArgumentException">The parameter is not a valid <see cref="T:System.Net.PeerToPeer.PnrpPermission" /> element.The parameter's version number is not supported. </exception>
      <exception cref="T:System.ArgumentNullException">The parameter is a null reference (Nothing in Visual Basic). </exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Net.PeerToPeer.PnrpPermission.FromXml(System.Security.SecurityElement)">
      <summary>Reconstructs a security object with a specified state from an XML encoding.</summary>
      <param name="e">The XML encoding to use to reconstruct the permission. </param>
      <exception cref="T:System.ArgumentException">The parameter is not a valid <see cref="T:System.Net.PeerToPeer.PnrpPermission" /> element.The parameter's version number is not supported. </exception>
      <exception cref="T:System.ArgumentNullException">The parameter is a null reference (Nothing in Visual Basic). </exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Net.PeerToPeer.PnrpPermission.Intersect(System.Security.IPermission)">
      <summary>Creates and returns a permission that is the intersection of the current <see cref="T:System.Net.PeerToPeer.PnrpPermission" /> and the specified permission.</summary>
      <returns>A new permission that represents the intersection of the current <see cref="T:System.Net.PeerToPeer.PnrpPermission" /> and the specified permission. This new permission is a null reference (Nothing in Visual Basic) if the intersection is empty. </returns>
      <param name="target">A permission to <see cref="M:System.Net.PeerToPeer.PnrpPermission.Intersect(System.Security.IPermission)" /> with the current permission. It must be of the same type as the current permission.</param>
      <exception cref="T:System.ArgumentException">The target parameter is not a null reference (Nothing in Visual Basic) and is not an instance of the same class as the current permission. </exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Net.PeerToPeer.PnrpPermission.IsSubsetOf(System.Security.IPermission)">
      <summary>Determines whether the current <see cref="T:System.Net.PeerToPeer.PnrpPermission" /> is a subset of the specified permission.</summary>
      <returns>True if the current <see cref="T:System.Net.PeerToPeer.PnrpPermission" /> is a subset of the specified permission; otherwise, false. </returns>
      <param name="target">A permission that is to be tested for the subset relationship. This permission must be of the same type as the current permission. </param>
      <exception cref="T:System.ArgumentException">The target parameter is not a null reference (Nothing in Visual Basic) and is not an instance of the same class as the current permission. </exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Net.PeerToPeer.PnrpPermission.IsUnrestricted">
      <summary>Returns a value specifying whether the current <see cref="T:System.Net.PeerToPeer.PnrpPermission" /> is unrestricted.</summary>
      <returns>True if the current permission is unrestricted; otherwise, false.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Net.PeerToPeer.PnrpPermission.ToXml">
      <summary>Creates an XML encoding of the <see cref="T:System.Net.PeerToPeer.PnrpPermission" /> and its current state.</summary>
      <returns>A <see cref="T:System.Security.SecurityElement" /> object that contains an XML encoding of the permission, including any state information. </returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Net.PeerToPeer.PnrpPermission.Union(System.Security.IPermission)">
      <summary>Creates a permission that is the union of the current <see cref="T:System.Net.PeerToPeer.PnrpPermission" /> and the specified permission.</summary>
      <returns>A new permission that represents the <see cref="M:System.Net.PeerToPeer.PnrpPermission.Union(System.Security.IPermission)" /> of the current <see cref="T:System.Net.PeerToPeer.PnrpPermission" /> and the specified permission.</returns>
      <param name="target">A permission to combine with the current permission. It must be of the same type as the current permission.</param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="T:System.Net.PeerToPeer.PnrpPermissionAttribute">
      <summary>Allows security actions for <see cref="T:System.Net.PeerToPeer.PnrpPermission" /> to be applied to code using declarative security.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Net.PeerToPeer.PnrpPermissionAttribute.#ctor(System.Security.Permissions.SecurityAction)">
      <summary>Initializes a new instance of the <see cref="T:System.Net.PeerToPeer.PnrpPermissionAttribute" /> class with the specified <see cref="T:System.Security.Permissions.SecurityAction" />.</summary>
      <param name="action">One of the <see cref="T:System.Security.Permissions.SecurityAction" /> values.</param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Net.PeerToPeer.PnrpPermissionAttribute.CreatePermission">
      <summary>Creates and returns a new <see cref="T:System.Security.IPermission" />.</summary>
      <returns>A new <see cref="T:System.Security.IPermission" /> object.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="T:System.Net.PeerToPeer.PnrpScope">
      <summary>Specifies the different scopes of a PNRP cloud. </summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="F:System.Net.PeerToPeer.PnrpScope.All">
      <summary>All IP addresses are allowed to register with the PNRP <see cref="T:System.Net.PeerToPeer.Cloud" />. There is no difference between any scope and all scopes.</summary>
    </member>
    <member name="F:System.Net.PeerToPeer.PnrpScope.Global">
      <summary>The scope is global; all valid IP addresses are allowed to register with the PNRP <see cref="T:System.Net.PeerToPeer.Cloud" />.</summary>
    </member>
    <member name="F:System.Net.PeerToPeer.PnrpScope.SiteLocal">
      <summary>The scope is site-local; only IP addresses defined for the site are allowed to register with the PNRP.</summary>
    </member>
    <member name="F:System.Net.PeerToPeer.PnrpScope.LinkLocal">
      <summary>The scope is link-local; only IP addresses defined for the local area subnet are allowed to register with the PNRP <see cref="T:System.Net.PeerToPeer.Cloud" />.</summary>
    </member>
    <member name="T:System.Net.PeerToPeer.ResolveCompletedEventArgs">
      <summary>Used in conjunction with the <see cref="E:System.Net.PeerToPeer.PeerNameResolver.ResolveCompleted" /> event, which is signaled when a resolve request for a specific <see cref="T:System.Net.PeerToPeer.PeerName" /> has completed.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Net.PeerToPeer.ResolveCompletedEventArgs.#ctor(System.Net.PeerToPeer.PeerNameRecordCollection,System.Exception,System.Boolean,System.Object)">
      <summary>Initializes a new instance of the <see cref="T:System.Net.PeerToPeer.ResolveCompletedEventArgs" /> class.</summary>
      <param name="peerNameRecordCollection">The collection associated with the peer name that was resolved.</param>
      <param name="error">Returns an exception if an error occurred. </param>
      <param name="canceled"></param>
      <param name="userToken">The user token specified when a <see cref="Overload:System.Net.PeerToPeer.PeerNameResolver.ResolveAsync" /> operation was started. </param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.Net.PeerToPeer.ResolveCompletedEventArgs.PeerNameRecordCollection">
      <summary>Gets the <see cref="T:System.Net.PeerToPeer.PeerNameRecordCollection" /> object to resolve.</summary>
      <returns>The <see cref="T:System.Net.PeerToPeer.PeerNameRecordCollection" /> object to resolve is the one found in response to a <see cref="Overload:System.Net.PeerToPeer.PeerNameResolver.ResolveAsync" /> operation on a specific <see cref="T:System.Net.PeerToPeer.PeerName" />.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="T:System.Net.PeerToPeer.ResolveProgressChangedEventArgs">
      <summary>Used in conjunction with signaling the <see cref="E:System.Net.PeerToPeer.PeerNameResolver.ResolveProgressChanged" /> event.  It is signaled whenever a <see cref="T:System.Net.PeerToPeer.PeerNameRecord" /> object is found in response to a <see cref="Overload:System.Net.PeerToPeer.PeerNameResolver.ResolveAsync" /> operation on a specific <see cref="T:System.Net.PeerToPeer.PeerName" />.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Net.PeerToPeer.ResolveProgressChangedEventArgs.#ctor(System.Net.PeerToPeer.PeerNameRecord,System.Object)">
      <summary>Initializes a new instance of the <see cref="T:System.Net.PeerToPeer.ResolveProgressChangedEventArgs" /> class.</summary>
      <param name="peerNameRecord"></param>
      <param name="userToken">The unique user state object suppliedwhen a <see cref="Overload:System.Net.PeerToPeer.PeerNameResolver.ResolveAsync" /> operation was started. </param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.Net.PeerToPeer.ResolveProgressChangedEventArgs.PeerNameRecord">
      <summary>Gets the <see cref="T:System.Net.PeerToPeer.PeerNameRecord" /> object to resolve.</summary>
      <returns>The peer name record object found in response to a <see cref="Overload:System.Net.PeerToPeer.PeerNameResolver.ResolveAsync" /> operation on a specific <see cref="P:System.Net.PeerToPeer.PeerNameRecord.PeerName" />.Unless explicitly specified, the default value for all properties is null for reference types and zero (0) for properties of type int.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="T:System.Net.PeerToPeer.Collaboration.ApplicationChangedEventArgs">
      <summary>Provides qualifying information to a callback method when a <see cref="E:System.Net.PeerToPeer.Collaboration.PeerApplication.ApplicationChanged" /> event occurs.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.Net.PeerToPeer.Collaboration.ApplicationChangedEventArgs.PeerApplication">
      <summary>Gets the <see cref="T:System.Net.PeerToPeer.Collaboration.PeerApplication" /> for which the event was raised.</summary>
      <returns>The <see cref="T:System.Net.PeerToPeer.Collaboration.PeerApplication" /> instance that was updated.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.Net.PeerToPeer.Collaboration.ApplicationChangedEventArgs.PeerChangeType">
      <summary>Gets the type of change to the <see cref="T:System.Net.PeerToPeer.Collaboration.PeerApplication" /> that occurred.</summary>
      <returns>The <see cref="T:System.Net.PeerToPeer.Collaboration.PeerChangeType" /> enumeration value that specifies the type of change that was performed on the <see cref="T:System.Net.PeerToPeer.Collaboration.PeerApplication" />.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.Net.PeerToPeer.Collaboration.ApplicationChangedEventArgs.PeerContact">
      <summary>Gets the <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" /> associated with the <see cref="T:System.Net.PeerToPeer.Collaboration.PeerApplication" />.</summary>
      <returns>
        <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" /> associated with the <see cref="T:System.Net.PeerToPeer.Collaboration.PeerApplication" />.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.Net.PeerToPeer.Collaboration.ApplicationChangedEventArgs.PeerEndPoint">
      <summary>Gets the endpoint for which <see cref="T:System.Net.PeerToPeer.Collaboration.PeerApplication" /> information has changed.</summary>
      <returns>The <see cref="T:System.Net.PeerToPeer.Collaboration.PeerEndPoint" /> that contains the endpoint for which application information has changed. Unless explicitly specified, the default value for all properties is null for reference types and zero (0) for properties of type int.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="T:System.Net.PeerToPeer.Collaboration.ContactManager">
      <summary>Represents a collection of <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" /> objects which persist in a Windows Address Book.</summary>
    </member>
    <member name="M:System.Net.PeerToPeer.Collaboration.ContactManager.AddContact(System.Net.PeerToPeer.Collaboration.PeerContact)">
      <summary>Adds the specified <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" /> to the <see cref="T:System.Net.PeerToPeer.Collaboration.ContactManager" /> of the local peer.</summary>
      <param name="peerContact">The <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" /> instance to add to <see cref="T:System.Net.PeerToPeer.Collaboration.ContactManager" />. </param>
      <exception cref="T:System.ArgumentException">The <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" /> specified by <paramref name="peerContact" /> already exists.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="peerContact" /> is null.</exception>
      <exception cref="T:System.ObjectDisposedException">The specified <paramref name="peerContact" /> has been disposed.</exception>
      <exception cref="T:System.Net.PeerToPeer.PeerToPeerException">The <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" /> specified by <paramref name="peerContact" /> could not be reconstituted from its serialized XML format.Unable to add the local peer to the <see cref="T:System.Net.PeerToPeer.Collaboration.ContactManager" /> instance being constructed.</exception>
    </member>
    <member name="E:System.Net.PeerToPeer.Collaboration.ContactManager.ApplicationChanged">
      <summary>Raised whenever a <see cref="T:System.Net.PeerToPeer.Collaboration.PeerApplication" /> associated with a <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" /> in the <see cref="T:System.Net.PeerToPeer.Collaboration.ContactManager" /> has changed.</summary>
      <exception cref="T:System.ObjectDisposedException">The calling object has been disposed.</exception>
    </member>
    <member name="M:System.Net.PeerToPeer.Collaboration.ContactManager.CreateContact(System.Net.PeerToPeer.Collaboration.PeerNearMe)">
      <summary>Creates a <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" /> instance for the specified <see cref="T:System.Net.PeerToPeer.Collaboration.PeerNearMe" /> object.</summary>
      <returns>A <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" /> instance for the specified <see cref="T:System.Net.PeerToPeer.Collaboration.PeerNearMe" />.</returns>
      <param name="peerNearMe">The <see cref="T:System.Net.PeerToPeer.Collaboration.PeerNearMe" /> to associate with the new <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" /> instance.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="peerNearMe" /> is null.</exception>
      <exception cref="T:System.ObjectDisposedException">This <see cref="T:System.Net.PeerToPeer.Collaboration.PeerNearMe" /> object has been disposed.</exception>
      <exception cref="T:System.Net.PeerToPeer.PeerToPeerException">The contact manager of the remote peer passed in <paramref name="peerNearMe" /> could not be reached, or the contact could not be read from it.The <see cref="T:System.Net.PeerToPeer.Collaboration.PeerNearMe" /> instance passed in <paramref name="peerNearMe" /> has no endpoints set on it.</exception>
    </member>
    <member name="M:System.Net.PeerToPeer.Collaboration.ContactManager.CreateContactAsync(System.Net.PeerToPeer.Collaboration.PeerNearMe,System.Object)">
      <summary>Creates a contact instance for the specified <see cref="T:System.Net.PeerToPeer.Collaboration.PeerNearMe" /> object.</summary>
      <param name="peerNearMe">The <see cref="T:System.Net.PeerToPeer.Collaboration.PeerNearMe" /> to associate with the new <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" /> instance.</param>
      <param name="userToken">A user-defined <see cref="T:System.Object" /> that contains information about the <see cref="M:System.Net.PeerToPeer.Collaboration.ContactManager.CreateContactAsync(System.Net.PeerToPeer.Collaboration.PeerNearMe,System.Object)" /> operation. It will be passed to the callback of the asynchronous operation for identification.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="userToken" /> already exists and is in use.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="peerNearMe" /> is null.</exception>
      <exception cref="T:System.ObjectDisposedException">The <see cref="T:System.Net.PeerToPeer.Collaboration.PeerNearMe" /> object has been disposed.</exception>
      <exception cref="T:System.Net.PeerToPeer.PeerToPeerException">The specified <see cref="T:System.Net.PeerToPeer.Collaboration.PeerNearMe" /> instance has no endpoints set on it.</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="E:System.Net.PeerToPeer.Collaboration.ContactManager.CreateContactCompleted">
      <summary>Raised whenever a <see cref="M:System.Net.PeerToPeer.Collaboration.ContactManager.CreateContact(System.Net.PeerToPeer.Collaboration.PeerNearMe)" /> method has completed.</summary>
      <exception cref="T:System.ObjectDisposedException">The calling object has been disposed.</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Net.PeerToPeer.Collaboration.ContactManager.DeleteContact(System.Net.PeerToPeer.Collaboration.PeerContact)">
      <summary>Removes the specified <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" /> from the <see cref="T:System.Net.PeerToPeer.Collaboration.ContactManager" /> of the local peer.</summary>
      <param name="peerContact">The <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" /> to remove from the <see cref="T:System.Net.PeerToPeer.Collaboration.ContactManager" />.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="peerContact" /> is null.</exception>
    </member>
    <member name="M:System.Net.PeerToPeer.Collaboration.ContactManager.DeleteContact(System.Net.PeerToPeer.PeerName)">
      <summary>Removes the <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" /> associated with the specified <see cref="P:System.Net.PeerToPeer.Collaboration.PeerContact.PeerName" /> from the <see cref="T:System.Net.PeerToPeer.Collaboration.ContactManager" /> of the local peer.</summary>
      <param name="peerName">The <see cref="P:System.Net.PeerToPeer.Collaboration.PeerContact.PeerName" /> associated with the <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" /> to remove from the <see cref="T:System.Net.PeerToPeer.Collaboration.ContactManager" />.</param>
      <exception cref="T:System.ArgumentException">The <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" /> associated with <see cref="P:System.Net.PeerToPeer.Collaboration.PeerContact.PeerName" /> could not be found in the contact manager.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="peerName" /> is null.</exception>
      <exception cref="T:System.ObjectDisposedException">This object has had <see cref="M:System.Net.PeerToPeer.Collaboration.ContactManager.Dispose" /> previously called on it and cannot be used for future operations.</exception>
      <exception cref="T:System.Net.PeerToPeer.PeerToPeerException">Unable to complete <see cref="Overload:System.Net.PeerToPeer.Collaboration.ContactManager.DeleteContact" /> operation.</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Net.PeerToPeer.Collaboration.ContactManager.Dispose">
      <summary>Releases all resources used by the <see cref="T:System.Net.PeerToPeer.Collaboration.ContactManager" /> object.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Net.PeerToPeer.Collaboration.ContactManager.GetContact(System.Net.PeerToPeer.PeerName)">
      <summary>Returns the <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" /> object for the specified <see cref="P:System.Net.PeerToPeer.Collaboration.PeerContact.PeerName" />.</summary>
      <returns>
        <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" /> associated with the supplied <see cref="P:System.Net.PeerToPeer.Collaboration.PeerContact.PeerName" />.</returns>
      <param name="peerName">The <see cref="P:System.Net.PeerToPeer.Collaboration.PeerContact.PeerName" /> associated with the <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" /> to be retrieved.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="peerName" /> is null.</exception>
      <exception cref="T:System.ObjectDisposedException">This <see cref="P:System.Net.PeerToPeer.Collaboration.PeerContact.PeerName" /> object has been disposed.</exception>
      <exception cref="T:System.Net.PeerToPeer.PeerToPeerException">Contact not found in <see cref="T:System.Net.PeerToPeer.Collaboration.ContactManager" />.Unable to obtain the contact for the supplied <see cref="P:System.Net.PeerToPeer.Collaboration.PeerContact.PeerName" />.</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Net.PeerToPeer.Collaboration.ContactManager.GetContacts">
      <summary>Returns a <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContactCollection" /> that contains all contacts within the <see cref="T:System.Net.PeerToPeer.Collaboration.ContactManager" /> of the remote peer.</summary>
      <returns>
        <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContactCollection" /> that contains all contacts within the <see cref="T:System.Net.PeerToPeer.Collaboration.ContactManager" /> of the remote peer. If the contact manager is empty, then a collection of size zero (0) is returned.</returns>
      <exception cref="T:System.ObjectDisposedException">This <see cref="T:System.Net.PeerToPeer.Collaboration.ContactManager" /> object has been disposed.</exception>
      <exception cref="T:System.Net.PeerToPeer.PeerToPeerException">An invalid value was returned when this method attempted to enumerate a <see cref="T:System.Net.PeerToPeer.Collaboration.Peer" /> in this peer contact collection.</exception>
    </member>
    <member name="P:System.Net.PeerToPeer.Collaboration.ContactManager.LocalContact">
      <summary>Gets the <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" /> representing the local peer.</summary>
      <returns>The <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" /> instance representing the local peer. </returns>
    </member>
    <member name="E:System.Net.PeerToPeer.Collaboration.ContactManager.NameChanged">
      <summary>Raised whenever the <see cref="P:System.Net.PeerToPeer.Collaboration.PeerContact.PeerName" /> associated with a <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" /> in the <see cref="T:System.Net.PeerToPeer.Collaboration.ContactManager" /> has changed.</summary>
      <exception cref="T:System.ObjectDisposedException">The calling object has been disposed.</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="E:System.Net.PeerToPeer.Collaboration.ContactManager.ObjectChanged">
      <summary>Raised whenever an object within a contact’s registered <see cref="T:System.Net.PeerToPeer.Collaboration.PeerObject" /> objects has changed.</summary>
      <exception cref="T:System.ObjectDisposedException">The <see cref="T:System.Net.PeerToPeer.Collaboration.PeerObject" /> object has been disposed.</exception>
    </member>
    <member name="E:System.Net.PeerToPeer.Collaboration.ContactManager.PresenceChanged">
      <summary>Raised whenever the presence status of a <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" /> in the <see cref="T:System.Net.PeerToPeer.Collaboration.ContactManager" /> has changed.</summary>
      <exception cref="T:System.ObjectDisposedException">The <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" /> object has been disposed.</exception>
    </member>
    <member name="E:System.Net.PeerToPeer.Collaboration.ContactManager.SubscriptionListChanged">
      <summary>Raised when the list of subscribed contacts changes.</summary>
      <exception cref="T:System.ObjectDisposedException">The object has been disposed.</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.Net.PeerToPeer.Collaboration.ContactManager.SynchronizingObject">
      <summary>When this property value is set, all events not fired as the result of an asynchronous operation will have the associated event handlers called back on the thread that created the specific <see cref="P:System.Net.PeerToPeer.Collaboration.PeerEndPoint.SynchronizingObject" />.</summary>
      <returns>Object that implements the <see cref="T:System.ComponentModel.ISynchronizeInvoke" /> interface and is used by instances of this type for event handler synchronization on the thread that created it.</returns>
      <exception cref="T:System.ObjectDisposedException">The calling object has been disposed.</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Net.PeerToPeer.Collaboration.ContactManager.UpdateContact(System.Net.PeerToPeer.Collaboration.PeerContact)">
      <summary>Updates the data associated with the <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" />.</summary>
      <param name="peerContact">The <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" /> to be updated.</param>
      <exception cref="T:System.ArgumentException">
        <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" /> not found in <see cref="T:System.Net.PeerToPeer.Collaboration.ContactManager" />.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="peerContact" /> is null.</exception>
      <exception cref="T:System.ObjectDisposedException">This <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" /> object has been disposed.</exception>
      <exception cref="T:System.Net.PeerToPeer.PeerToPeerException">Unable to complete <see cref="M:System.Net.PeerToPeer.Collaboration.ContactManager.UpdateContact(System.Net.PeerToPeer.Collaboration.PeerContact)" /> operation.</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="T:System.Net.PeerToPeer.Collaboration.CreateContactCompletedEventArgs">
      <summary>Provides qualifying information to a callback method when a <see cref="E:System.Net.PeerToPeer.Collaboration.ContactManager.CreateContactCompleted" /> event occurs.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.Net.PeerToPeer.Collaboration.CreateContactCompletedEventArgs.PeerContact">
      <summary>Gets the <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" /> for which the event was raised.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="T:System.Net.PeerToPeer.Collaboration.InviteCompletedEventArgs">
      <summary>Provides qualifying information to a callback method when an <see cref="E:System.Net.PeerToPeer.Collaboration.Peer.InviteCompleted" /> event occurs.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.Net.PeerToPeer.Collaboration.InviteCompletedEventArgs.InviteResponse">
      <summary>Gets the <see cref="T:System.Net.PeerToPeer.Collaboration.PeerInvitationResponse" /> to an invitation operation.</summary>
      <returns>The <see cref="T:System.Net.PeerToPeer.Collaboration.PeerInvitationResponse" /> to the invitation. </returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="T:System.Net.PeerToPeer.Collaboration.NameChangedEventArgs">
      <summary>Provides qualifying information to a callback method when a <see cref="E:System.Net.PeerToPeer.Collaboration.PeerEndPoint.NameChanged" /> event occurs.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.Net.PeerToPeer.Collaboration.NameChangedEventArgs.Name">
      <summary>Gets the new <see cref="P:System.Net.PeerToPeer.Collaboration.PeerEndPoint.Name" /> for the <see cref="T:System.Net.PeerToPeer.Collaboration.PeerEndPoint" />.</summary>
      <returns>Gets the new <see cref="P:System.Net.PeerToPeer.Collaboration.PeerEndPoint.Name" /> for the <see cref="T:System.Net.PeerToPeer.Collaboration.PeerEndPoint" />. </returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.Net.PeerToPeer.Collaboration.NameChangedEventArgs.PeerContact">
      <summary>Gets the <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" /> associated with the <see cref="T:System.Net.PeerToPeer.Collaboration.PeerEndPoint" />.</summary>
      <returns>The <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" /> associated with the <see cref="T:System.Net.PeerToPeer.Collaboration.PeerEndPoint" />.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.Net.PeerToPeer.Collaboration.NameChangedEventArgs.PeerEndPoint">
      <summary>Gets the <see cref="T:System.Net.PeerToPeer.Collaboration.PeerEndPoint" /> associated with the <see cref="P:System.Net.PeerToPeer.Collaboration.PeerEndPoint.Name" />.</summary>
      <returns>
        <see cref="T:System.Net.PeerToPeer.Collaboration.PeerEndPoint" /> associated with the <see cref="P:System.Net.PeerToPeer.Collaboration.PeerEndPoint.Name" />.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="T:System.Net.PeerToPeer.Collaboration.ObjectChangedEventArgs">
      <summary>Provides qualifying information to a callback method when a <see cref="E:System.Net.PeerToPeer.Collaboration.PeerObject.ObjectChanged" /> event occurs.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.Net.PeerToPeer.Collaboration.ObjectChangedEventArgs.PeerChangeType">
      <summary>Gets the <see cref="T:System.Net.PeerToPeer.Collaboration.PeerChangeType" /> that specifies the type of change that has occurred to a <see cref="T:System.Net.PeerToPeer.Collaboration.Peer" /> or <see cref="T:System.Net.PeerToPeer.Collaboration.PeerObject" />.</summary>
      <returns>
        <see cref="T:System.Net.PeerToPeer.Collaboration.PeerChangeType" /> that specifies the type of change that has occurred. </returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.Net.PeerToPeer.Collaboration.ObjectChangedEventArgs.PeerContact">
      <summary>Gets the <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" /> associated with the <see cref="T:System.Net.PeerToPeer.Collaboration.PeerEndPoint" /> for which object information has changed.</summary>
      <returns>The <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" /> associated with the <see cref="T:System.Net.PeerToPeer.Collaboration.PeerEndPoint" /> on which <see cref="T:System.Net.PeerToPeer.Collaboration.PeerObject" /> information has changed.  If the endpoint is not associated with a contact, null is returned. </returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.Net.PeerToPeer.Collaboration.ObjectChangedEventArgs.PeerEndPoint">
      <summary>Gets the <see cref="T:System.Net.PeerToPeer.Collaboration.PeerEndPoint" /> for which object information has changed.</summary>
      <returns>The <see cref="T:System.Net.PeerToPeer.Collaboration.PeerEndPoint" /> on which <see cref="T:System.Net.PeerToPeer.Collaboration.PeerObject" /> information has changed.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.Net.PeerToPeer.Collaboration.ObjectChangedEventArgs.PeerObject">
      <summary>Gets the <see cref="T:System.Net.PeerToPeer.Collaboration.PeerObject" /> that has been added, deleted or updated.</summary>
      <returns>The <see cref="T:System.Net.PeerToPeer.Collaboration.PeerObject" /> that has been added, deleted, or updated. </returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="T:System.Net.PeerToPeer.Collaboration.Peer">
      <summary>This class represents a remote peer. </summary>
    </member>
    <member name="M:System.Net.PeerToPeer.Collaboration.Peer.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Initializes a new instance of the <see cref="T:System.Net.PeerToPeer.Collaboration.Peer" /> type. </summary>
      <param name="serializationInfo">Reference to the object that holds the data needed to deserialize this instance.</param>
      <param name="streamingContext">Context that provides the means for deserializing the data. Also referred to as the source of the serialized data.</param>
    </member>
    <member name="M:System.Net.PeerToPeer.Collaboration.Peer.Dispose">
      <summary>Releases all resources used by the <see cref="T:System.Net.PeerToPeer.Collaboration.Peer" /> object.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Net.PeerToPeer.Collaboration.Peer.Dispose(System.Boolean)">
      <summary>Releases the unmanaged resources used by the <see cref="T:System.Net.PeerToPeer.Collaboration.Peer" /> object and optionally releases the managed resources.</summary>
      <param name="disposing">Set to true to release both managed and unmanaged resources; false to release only unmanaged resources.</param>
    </member>
    <member name="M:System.Net.PeerToPeer.Collaboration.Peer.Equals(System.Net.PeerToPeer.Collaboration.Peer)">
      <summary>Performs a case-sensitive comparison of the current <see cref="T:System.Net.PeerToPeer.Collaboration.Peer" /> and the specified peer.</summary>
      <returns>Returns true if the supplied <see cref="T:System.Net.PeerToPeer.Collaboration.Peer" /> instance has the same <see cref="P:System.Net.PeerToPeer.Collaboration.Peer.PeerEndPoints" /> as this peer instance, otherwise false. This method also returns false if the peer parameter is null.</returns>
      <param name="other">A <see cref="T:System.Net.PeerToPeer.Collaboration.Peer" /> instance to compare to this instance.</param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Net.PeerToPeer.Collaboration.Peer.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Populates a <see cref="T:System.Runtime.Serialization.SerializationInfo" /> object with the data needed to serialize the target <see cref="T:System.Net.PeerToPeer.Collaboration.Peer" />. </summary>
      <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> to populate with data.</param>
      <param name="context">The destination for this serialization.</param>
    </member>
    <member name="M:System.Net.PeerToPeer.Collaboration.Peer.GetObjects">
      <summary>Gets the collection of data objects from a local cache.</summary>
      <returns>The <see cref="T:System.Net.PeerToPeer.Collaboration.PeerObject" /> collection for the peer or endpoint specified by this instance.</returns>
      <exception cref="T:System.InvalidOperationException">The caller is not subscribed to the endpoint or has not yet called <see cref="M:System.Net.PeerToPeer.Collaboration.PeerNearMe.RefreshData" />.</exception>
      <exception cref="T:System.Net.PeerToPeer.PeerToPeerException">The method is unable to complete due to an error in the underlying Peer Collaboration infrastructure.</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Net.PeerToPeer.Collaboration.Peer.GetObjects(System.Guid)">
      <summary>Gets the <see cref="T:System.Net.PeerToPeer.Collaboration.Peer" /> object associated with the supplied <see cref="T:System.Guid" /> from the <see cref="T:System.Net.PeerToPeer.Collaboration.PeerObjectCollection" />.</summary>
      <returns>
        <see cref="T:System.Net.PeerToPeer.Collaboration.Peer" /> object associated with the supplied <see cref="T:System.Guid" />. If an object is not found, a collection of size zero (0) is returned.</returns>
      <param name="objectId">The <see cref="T:System.Guid" /> of the <see cref="T:System.Net.PeerToPeer.Collaboration.Peer" /> object to be retrieved from the collection</param>
      <exception cref="T:System.ArgumentNullException">The object ID is null.</exception>
      <exception cref="T:System.InvalidOperationException">The caller is not subscribed to the <see cref="T:System.Net.PeerToPeer.Collaboration.PeerEndPoint" /> or has not yet called <see cref="M:System.Net.PeerToPeer.Collaboration.PeerNearMe.RefreshData" /> against it.</exception>
      <exception cref="T:System.Net.PeerToPeer.PeerToPeerException">An error occurred when getting object information from the peer.</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Net.PeerToPeer.Collaboration.Peer.GetPresenceInfo(System.Net.PeerToPeer.Collaboration.PeerEndPoint)">
      <summary>Gets the available presence information for a <see cref="T:System.Net.PeerToPeer.Collaboration.PeerEndPoint" />.</summary>
      <returns>Returns a <see cref="T:System.Net.PeerToPeer.Collaboration.PeerPresenceInfo" /> object which contains presence information for an available endpoint if it is available; otherwise it is null.</returns>
      <param name="peerEndPoint">The <see cref="T:System.Net.PeerToPeer.Collaboration.PeerEndPoint" /> for which to retrieve presence information.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="peerEndPoint" /> does not contain a valid endpoint.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="peerEndPoint" /> is null.</exception>
      <exception cref="T:System.ObjectDisposedException">This object has been disposed and cannot be used in current peer operations.</exception>
      <exception cref="T:System.Net.PeerToPeer.PeerToPeerException">An error occurred while retrieving presence information from the peer.</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Net.PeerToPeer.Collaboration.Peer.Invite">
      <summary>Sends an invitation to a <see cref="T:System.Net.PeerToPeer.Collaboration.Peer" /> to start a specific <see cref="T:System.Net.PeerToPeer.Collaboration.PeerApplication" />.</summary>
      <returns>A <see cref="T:System.Net.PeerToPeer.Collaboration.PeerInvitationResponse" /> from the peer that received the invitation. </returns>
      <exception cref="T:System.Net.PeerToPeer.PeerToPeerException">An error occurred during the invitation process.The currently executing application is not registered with the Peer Collaboration infrastructure.</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Net.PeerToPeer.Collaboration.Peer.Invite(System.Net.PeerToPeer.Collaboration.PeerApplication,System.String,System.Byte[])">
      <summary>Sends an invitation to a <see cref="T:System.Net.PeerToPeer.Collaboration.Peer" /> to start a specific <see cref="T:System.Net.PeerToPeer.Collaboration.PeerApplication" />.</summary>
      <returns>A <see cref="T:System.Net.PeerToPeer.Collaboration.PeerInvitationResponse" /> from the peer that received the invitation.</returns>
      <param name="applicationToInvite">The <see cref="T:System.Net.PeerToPeer.Collaboration.PeerApplication" /> for which the invitation is sent.</param>
      <param name="message">A message to send to the remote peer along with the application invitation.  The message can be no more than 255 Unicode characters.</param>
      <param name="invitationData">A user defined data blob to associate with the invitation.  Its size can be no more than 16,384 bytes.</param>
      <exception cref="T:System.ArgumentException">The application is not registered for collaboration.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="invitationData" /> is larger than 16,384 bytes.</exception>
      <exception cref="T:System.Net.PeerToPeer.PeerToPeerException">An error occurred during the invitation process.The currently executing application is not registered with the peer collaboration infrastructure.</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Net.PeerToPeer.Collaboration.Peer.InviteAsync(System.Net.PeerToPeer.Collaboration.PeerApplication,System.String,System.Byte[],System.Object)">
      <summary>Begins an asynchronous invitation operation which sends an invitation to a <see cref="T:System.Net.PeerToPeer.Collaboration.Peer" /> to start a specific <see cref="T:System.Net.PeerToPeer.Collaboration.PeerApplication" />.</summary>
      <param name="applicationToInvite">The <see cref="T:System.Net.PeerToPeer.Collaboration.PeerApplication" /> for which the invitation is sent.</param>
      <param name="message">A message to send to the remote peer along with the application invitation. The maximum size of this message is 255 Unicode characters.</param>
      <param name="invitationData">A user defined data blob to associate with the invitation.  Its size can be no more than 16,384 bytes.</param>
      <param name="userToken">User-defined object to pass to the callback of the asynchronous operation for identification. This required parameter must be unique across all asynchronous invitation operations in progress.</param>
      <exception cref="T:System.ArgumentException">The application is not registered with the collaboration infrastructure.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="userToken" /> is null.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="invitationData" /> is larger than 16,384 bytes.</exception>
      <exception cref="T:System.Net.PeerToPeer.PeerToPeerException">An error occurred during the invitation process.The currently executing application is not registered with the collaboration infrastructure.</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Net.PeerToPeer.Collaboration.Peer.InviteAsync(System.Object)">
      <summary>Begins an asynchronous invitation operation which sends an invitation to a <see cref="T:System.Net.PeerToPeer.Collaboration.Peer" /> to start a specific <see cref="T:System.Net.PeerToPeer.Collaboration.PeerApplication" />.</summary>
      <param name="userToken">User-defined object to pass to the callback of the asynchronous operation for identification. This required parameter must be unique across all asynchronous invitation operations in progress.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="userToken" /> is null.</exception>
      <exception cref="T:System.Net.PeerToPeer.PeerToPeerException">An error occurred during the invitation process.The currently executing application is not registered with the collaboration infrastructure. </exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Net.PeerToPeer.Collaboration.Peer.InviteAsyncCancel(System.Object)">
      <summary>Cancels the invitation that was sent with the <see cref="M:System.Net.PeerToPeer.Collaboration.Peer.InviteAsync(System.Net.PeerToPeer.Collaboration.PeerApplication,System.String,System.Byte[],System.Object)" /> method. </summary>
      <param name="userToken">User defined object to pass to the callback of the <see cref="M:System.Net.PeerToPeer.Collaboration.Peer.InviteAsync(System.Net.PeerToPeer.Collaboration.PeerApplication,System.String,System.Byte[],System.Object)" /> operation for identification. This required parameter must be unique across all asynchronous invitation operations in progress.</param>
      <exception cref="T:System.ArgumentNullException">The <paramref name="userToken" /> parameter cannot be null.</exception>
      <exception cref="T:System.InvalidOperationException">An asynchronous invitation is not outstanding.</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="E:System.Net.PeerToPeer.Collaboration.Peer.InviteCompleted">
      <summary>Raised when the invitation process for a remote peer has completed.</summary>
      <exception cref="T:System.ObjectDisposedException">This <see cref="T:System.Net.PeerToPeer.Collaboration.Peer" /> object has been disposed.</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.Net.PeerToPeer.Collaboration.Peer.IsOnline">
      <summary>Gets a value specifying if the <see cref="T:System.Net.PeerToPeer.Collaboration.Peer" /> is currently 'online'.</summary>
      <returns>Returns true if the <see cref="T:System.Net.PeerToPeer.Collaboration.Peer" /> is online at any of the endpoints associated with it; otherwise false. Unless specified, the default value for this property is null.</returns>
      <exception cref="T:System.ObjectDisposedException">The <see cref="T:System.Net.PeerToPeer.Collaboration.Peer" /> object has been disposed.</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Net.PeerToPeer.Collaboration.Peer.OnInviteCompleted(System.Net.PeerToPeer.Collaboration.InviteCompletedEventArgs)">
      <summary>Raises the <see cref="E:System.Net.PeerToPeer.Collaboration.Peer.InviteCompleted" /> event.</summary>
      <param name="e">The <see cref="T:System.Net.PeerToPeer.Collaboration.PeerInvitationResponse" /> object containing the event data to be passed to delegates associated with the <see cref="E:System.Net.PeerToPeer.Collaboration.Peer.InviteCompleted" /> event.</param>
    </member>
    <member name="P:System.Net.PeerToPeer.Collaboration.Peer.PeerEndPoints">
      <summary>Gets the <see cref="T:System.Net.PeerToPeer.Collaboration.PeerEndPointCollection" /> associated with the <see cref="T:System.Net.PeerToPeer.Collaboration.Peer" />.</summary>
      <returns>The <see cref="T:System.Net.PeerToPeer.Collaboration.PeerEndPointCollection" /> associated with the <see cref="T:System.Net.PeerToPeer.Collaboration.Peer" />.</returns>
      <exception cref="T:System.ObjectDisposedException">The <see cref="T:System.Net.PeerToPeer.Collaboration.Peer" /> object has been disposed.</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.Net.PeerToPeer.Collaboration.Peer.SynchronizingObject">
      <summary>When this property value is set, all events not fired as the result of an asynchronous operation will have the associated event handlers called back on the thread that created the specific <see cref="P:System.Net.PeerToPeer.Collaboration.PeerEndPoint.SynchronizingObject" />.</summary>
      <returns>Object that implements the <see cref="T:System.ComponentModel.ISynchronizeInvoke" /> interface and is used by instances of this type for event handler synchronization on the thread that created it. </returns>
      <exception cref="T:System.ObjectDisposedException">The calling object has been disposed.</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Net.PeerToPeer.Collaboration.Peer.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Populates a <see cref="T:System.Runtime.Serialization.SerializationInfo" /> class instance with the data required to serialize the specified <see cref="T:System.Net.PeerToPeer.Collaboration.PeerObject" /> instance. A derived type must call the base type <see cref="M:System.Runtime.Serialization.ISerializable.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" /> method. </summary>
      <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> to populate with data.</param>
      <param name="context">The destination for the serialization.</param>
    </member>
    <member name="M:System.Net.PeerToPeer.Collaboration.Peer.ToString">
      <summary>Returns a <see cref="T:System.String" /> representing the <see cref="P:System.Net.PeerToPeer.Collaboration.PeerContact.PeerName" /> associated with the <see cref="T:System.Net.PeerToPeer.Collaboration.Peer" />.</summary>
      <returns>
        <see cref="T:System.String" /> representing the <see cref="P:System.Net.PeerToPeer.Collaboration.PeerContact.PeerName" />.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="T:System.Net.PeerToPeer.Collaboration.PeerApplication">
      <summary>Represents an application that is available for use with the Peer Collaboration infrastructure.</summary>
    </member>
    <member name="M:System.Net.PeerToPeer.Collaboration.PeerApplication.#ctor">
      <summary>Initializes a new default instance of the <see cref="T:System.Net.PeerToPeer.Collaboration.PeerApplication" /> type.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Net.PeerToPeer.Collaboration.PeerApplication.#ctor(System.Guid,System.String,System.Byte[],System.String,System.String,System.Net.PeerToPeer.Collaboration.PeerScope)">
      <summary>Initializes a new <see cref="T:System.Net.PeerToPeer.Collaboration.PeerApplication" /> instance with the supplied application ID, description, scope, and data elements.</summary>
      <param name="id">A user-specified <see cref="T:System.Guid" /> used to identify the <see cref="T:System.Net.PeerToPeer.Collaboration.PeerApplication" />.</param>
      <param name="description">A <see cref="T:System.String" /> description of the peer application.</param>
      <param name="data">A binary data object to associate with the peer application, such as a small image.</param>
      <param name="path">The local file system path to the peer application.</param>
      <param name="commandLineArgs">Command-line arguments for starting the peer application.</param>
      <param name="peerScope">The scope in which the application will be registered for peer collaboration.</param>
      <exception cref="T:System.ArgumentException">Length of the binary data object cannot be less than one or greater than 16k.<paramref name="id" /> is set to null.</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Net.PeerToPeer.Collaboration.PeerApplication.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Initializes a new instance of the <see cref="T:System.Net.PeerToPeer.Collaboration.PeerApplication" /> type with the data required for serialization.</summary>
      <param name="serializationInfo">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> associated with the <see cref="T:System.Net.PeerToPeer.Collaboration.PeerEndPoint" />.</param>
      <param name="streamingContext">The serialization destination associated with the <see cref="T:System.Net.PeerToPeer.Collaboration.PeerEndPoint" />.</param>
    </member>
    <member name="E:System.Net.PeerToPeer.Collaboration.PeerApplication.ApplicationChanged">
      <summary>This event is raised whenever a <see cref="T:System.Net.PeerToPeer.Collaboration.PeerApplication" /> is added, updated or deleted by a remote peer on a subscribed endpoint.</summary>
      <exception cref="T:System.ObjectDisposedException">The <see cref="T:System.Net.PeerToPeer.Collaboration.PeerApplication" /> object has been disposed.</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.Net.PeerToPeer.Collaboration.PeerApplication.CommandLineArgs">
      <summary>Gets or sets command-line parameters to use when initiating a <see cref="T:System.Net.PeerToPeer.Collaboration.PeerApplication" />.</summary>
      <returns>
        <see cref="T:System.String" /> that represents application-specific command-line parameters to use when initiating the <see cref="T:System.Net.PeerToPeer.Collaboration.PeerApplication" />. </returns>
      <exception cref="T:System.ObjectDisposedException">The <see cref="T:System.Net.PeerToPeer.Collaboration.PeerApplication" /> object has been disposed.</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.Net.PeerToPeer.Collaboration.PeerApplication.Data">
      <summary>Gets or sets data associated with the current <see cref="T:System.Net.PeerToPeer.Collaboration.PeerApplication" /> instance.</summary>
      <returns>Array of <see cref="T:System.Byte" /> data that contain a binary object to associate with the peer application. This is commonly a small image or XML blob. </returns>
      <exception cref="T:System.ArgumentException">The size of this binary data object is either less than 0 or greater than 4,096 bytes.</exception>
      <exception cref="T:System.ObjectDisposedException">The <see cref="T:System.Net.PeerToPeer.Collaboration.PeerApplication" /> object has been disposed.</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.Net.PeerToPeer.Collaboration.PeerApplication.Description">
      <summary>Gets or sets a Unicode <see cref="T:System.String" /> that describes the <see cref="T:System.Net.PeerToPeer.Collaboration.PeerApplication" />.</summary>
      <returns>
        <see cref="T:System.String" /> value that describes the application. Unless specified, the default value for this property is null.</returns>
      <exception cref="T:System.ObjectDisposedException">The <see cref="T:System.Net.PeerToPeer.Collaboration.PeerApplication" /> object has been disposed.</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Net.PeerToPeer.Collaboration.PeerApplication.Dispose">
      <summary>Releases resources used by the <see cref="T:System.Net.PeerToPeer.Collaboration.PeerApplication" /> object.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Net.PeerToPeer.Collaboration.PeerApplication.Dispose(System.Boolean)">
      <summary>Releases the unmanaged resources used by the <see cref="T:System.Net.PeerToPeer.Collaboration.PeerApplication" /> object and optionally releases the managed resources.</summary>
      <param name="disposing">Set to true to release both managed and unmanaged resources; false to release only unmanaged resources.</param>
    </member>
    <member name="M:System.Net.PeerToPeer.Collaboration.PeerApplication.Equals(System.Net.PeerToPeer.Collaboration.PeerApplication)">
      <summary>Compares the <see cref="T:System.Net.PeerToPeer.Collaboration.PeerApplication" /> to the specified <see cref="T:System.Net.PeerToPeer.Collaboration.PeerApplication" /> instance.</summary>
      <returns>Returns true if the <see cref="T:System.Net.PeerToPeer.Collaboration.PeerApplication" /> instance provided has matching data, else false. This method also returns false if <paramref name="other" /> is null. </returns>
      <param name="other">The <see cref="T:System.Net.PeerToPeer.Collaboration.PeerApplication" /> instance to test for equality.</param>
      <exception cref="T:System.ObjectDisposedException">This <see cref="T:System.Net.PeerToPeer.Collaboration.PeerApplication" /> object has been disposed.</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Net.PeerToPeer.Collaboration.PeerApplication.Equals(System.Object)">
      <summary>Compares the <see cref="T:System.Net.PeerToPeer.Collaboration.PeerApplication" /> to the specified <see cref="T:System.Object" />.</summary>
      <returns>Returns true if the <see cref="T:System.Net.PeerToPeer.Collaboration.PeerApplication" /> is equal to the specified object instance, else false.</returns>
      <param name="obj">The <see cref="T:System.Object" /> to test for equality.</param>
      <exception cref="T:System.ObjectDisposedException">The <see cref="T:System.Object" /> has been disposed.</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Net.PeerToPeer.Collaboration.PeerApplication.Equals(System.Object,System.Object)">
      <summary>Determines whether the specified <see cref="T:System.Net.PeerToPeer.Collaboration.PeerApplication" /> objects are considered equal.</summary>
      <returns>Returns true if the specified objects have the same globally unique application <see cref="P:System.Net.PeerToPeer.Collaboration.PeerApplication.Id" /> and <see cref="P:System.Net.PeerToPeer.Collaboration.PeerApplication.Description" />, else false.</returns>
      <param name="objA">The first <see cref="T:System.Net.PeerToPeer.Collaboration.PeerApplication" />    to compare.</param>
      <param name="objB">The second <see cref="T:System.Net.PeerToPeer.Collaboration.PeerApplication" /> to compare.</param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Net.PeerToPeer.Collaboration.PeerApplication.GetHashCode">
      <summary>Returns the hash code for a <see cref="T:System.Net.PeerToPeer.Collaboration.PeerApplication" /> instance.</summary>
      <returns>A 32-bit signed integer hash code used to compare instances of this type.</returns>
      <exception cref="T:System.ObjectDisposedException">The <see cref="T:System.Net.PeerToPeer.Collaboration.PeerApplication" /> object has been disposed.</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Net.PeerToPeer.Collaboration.PeerApplication.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Populates a <see cref="T:System.Runtime.Serialization.SerializationInfo" /> with the data needed to serialize the target <see cref="T:System.Net.PeerToPeer.Collaboration.PeerApplication" />.</summary>
      <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> to populate with data.</param>
      <param name="context">The destination for this serialization.</param>
    </member>
    <member name="P:System.Net.PeerToPeer.Collaboration.PeerApplication.Id">
      <summary>Gets or sets the user-defined <see cref="T:System.Guid" /> associated with the <see cref="T:System.Net.PeerToPeer.Collaboration.PeerApplication" />.</summary>
      <returns>
        <see cref="T:System.Guid" /> associated with the <see cref="T:System.Net.PeerToPeer.Collaboration.PeerApplication" /> instance. Unless specified, the default value for this property is null.</returns>
      <exception cref="T:System.ObjectDisposedException">The <see cref="T:System.Net.PeerToPeer.Collaboration.PeerApplication" /> object has been disposed.</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Net.PeerToPeer.Collaboration.PeerApplication.OnApplicationChanged(System.Net.PeerToPeer.Collaboration.ApplicationChangedEventArgs)">
      <summary>Raises the <see cref="E:System.Net.PeerToPeer.Collaboration.PeerApplication.ApplicationChanged" /> event.</summary>
      <param name="appChangedArgs">The <see cref="T:System.Net.PeerToPeer.Collaboration.ApplicationChangedEventArgs" /> object that contains data to be passed to delegates for the <see cref="E:System.Net.PeerToPeer.Collaboration.PeerApplication.ApplicationChanged" /> event.</param>
    </member>
    <member name="P:System.Net.PeerToPeer.Collaboration.PeerApplication.Path">
      <summary>Gets or sets the path that designates where the <see cref="T:System.Net.PeerToPeer.Collaboration.PeerApplication" /> executable file resides on the local file system.</summary>
      <returns>
        <see cref="T:System.String" /> that represents the file path. Unless explicitly specified, the default value for this property is null.</returns>
      <exception cref="T:System.ObjectDisposedException">The <see cref="T:System.Net.PeerToPeer.Collaboration.PeerApplication" /> object has been disposed.</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.Net.PeerToPeer.Collaboration.PeerApplication.PeerScope">
      <summary>Gets or sets the scope in which the <see cref="T:System.Net.PeerToPeer.Collaboration.PeerApplication" /> is registered for collaboration.</summary>
      <returns>
        <see cref="T:System.Net.PeerToPeer.Collaboration.PeerScope" /> object that specifies the scope in which the <see cref="T:System.Net.PeerToPeer.Collaboration.PeerApplication" /> will collaborate. </returns>
      <exception cref="T:System.ObjectDisposedException">The <see cref="T:System.Net.PeerToPeer.Collaboration.PeerApplication" /> object has been disposed.</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.Net.PeerToPeer.Collaboration.PeerApplication.SynchronizingObject">
      <summary>When this property value is set, all events not fired as the result of an asynchronous operation will have the associated event handlers called back on the thread that created the specific <see cref="P:System.Net.PeerToPeer.Collaboration.PeerEndPoint.SynchronizingObject" />.</summary>
      <returns>Object that implements the <see cref="T:System.ComponentModel.ISynchronizeInvoke" /> interface and is used by instances of this type for event handler synchronization on the thread that created it.</returns>
      <exception cref="T:System.ObjectDisposedException">The calling object has been disposed.</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Net.PeerToPeer.Collaboration.PeerApplication.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Implements the <see cref="T:System.Runtime.Serialization.ISerializable" /> interface and returns the data required to serialize the target <see cref="T:System.Net.PeerToPeer.Collaboration.PeerApplication" />.</summary>
      <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> object to populate with data.</param>
      <param name="context">The destination for this serialization.</param>
    </member>
    <member name="M:System.Net.PeerToPeer.Collaboration.PeerApplication.ToString">
      <summary>Returns a string that contains the <see cref="P:System.Net.PeerToPeer.Collaboration.PeerApplication.Id" /> and <see cref="P:System.Net.PeerToPeer.Collaboration.PeerApplication.Description" /> of the <see cref="T:System.Net.PeerToPeer.Collaboration.PeerApplication" /> instance.</summary>
      <returns>A string that contains the <see cref="P:System.Net.PeerToPeer.Collaboration.PeerApplication.Id" /> and <see cref="P:System.Net.PeerToPeer.Collaboration.PeerApplication.Description" /> of the <see cref="T:System.Net.PeerToPeer.Collaboration.PeerApplication" /> instance, separated by a space.</returns>
      <exception cref="T:System.ObjectDisposedException">The <see cref="T:System.Net.PeerToPeer.Collaboration.PeerApplication" /> object has been disposed.</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="T:System.Net.PeerToPeer.Collaboration.PeerApplicationCollection">
      <summary>Represents a container for <see cref="T:System.Net.PeerToPeer.Collaboration.PeerApplication" /> elements. An instance of this type is returned by the <see cref="M:System.Net.PeerToPeer.Collaboration.ContactManager.GetContacts" /> static method.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Net.PeerToPeer.Collaboration.PeerApplicationCollection.InsertItem(System.Int32,System.Net.PeerToPeer.Collaboration.PeerApplication)">
      <summary>Inserts a new <see cref="T:System.Net.PeerToPeer.Collaboration.PeerApplication" /> element into the <see cref="T:System.Net.PeerToPeer.Collaboration.PeerApplicationCollection" /> at the specified index or key.</summary>
      <param name="index">The zero-based index of the element to replace</param>
      <param name="item">The new value for the element at the specified index</param>
    </member>
    <member name="M:System.Net.PeerToPeer.Collaboration.PeerApplicationCollection.SetItem(System.Int32,System.Net.PeerToPeer.Collaboration.PeerApplication)">
      <summary>Replaces the <see cref="T:System.Net.PeerToPeer.Collaboration.PeerApplication" /> at the specified index.</summary>
      <param name="index">The zero-based index of the element to replace.</param>
      <param name="item">The new value for the element at the specified index.</param>
    </member>
    <member name="M:System.Net.PeerToPeer.Collaboration.PeerApplicationCollection.ToString">
      <summary>Returns a <see cref="T:System.String" /> representing the current value of each <see cref="T:System.Net.PeerToPeer.Collaboration.PeerApplication" /> object, separated by commas.</summary>
      <returns>A <see cref="T:System.String" /> representing the current value of each <see cref="T:System.Net.PeerToPeer.Collaboration.PeerApplication" /> in the <see cref="T:System.Net.PeerToPeer.Collaboration.PeerApplicationCollection" />, separated by commas.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="T:System.Net.PeerToPeer.Collaboration.PeerApplicationLaunchInfo">
      <summary>Represents the launch information required by a <see cref="T:System.Net.PeerToPeer.Collaboration.PeerApplication" /> that has initiated in response to a peer collaboration invitation.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.Net.PeerToPeer.Collaboration.PeerApplicationLaunchInfo.Data">
      <summary>Gets or sets application-defined binary data associated with the <see cref="T:System.Net.PeerToPeer.Collaboration.PeerApplication" /> invitation.</summary>
      <returns>An array of bytes that containing the data associated with the <see cref="T:System.Net.PeerToPeer.Collaboration.PeerCollaboration" /> invitation. </returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.Net.PeerToPeer.Collaboration.PeerApplicationLaunchInfo.Message">
      <summary>Get or set a message associated with the response to the <see cref="T:System.Net.PeerToPeer.Collaboration.PeerCollaboration" /> invitation. </summary>
      <returns>A text message associated with the <see cref="T:System.Net.PeerToPeer.Collaboration.PeerInvitationResponse" /> to the <see cref="T:System.Net.PeerToPeer.Collaboration.PeerCollaboration" /> invitation. </returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.Net.PeerToPeer.Collaboration.PeerApplicationLaunchInfo.PeerApplication">
      <summary>Gets or sets the <see cref="T:System.Net.PeerToPeer.Collaboration.PeerApplication" /> for which the invitation was sent. </summary>
      <returns>The <see cref="T:System.Net.PeerToPeer.Collaboration.PeerApplication" /> for which the <see cref="T:System.Net.PeerToPeer.Collaboration.PeerCollaboration" /> invitation was sent. </returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.Net.PeerToPeer.Collaboration.PeerApplicationLaunchInfo.PeerContact">
      <summary>Gets or sets the <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" /> that sent the invitation.</summary>
      <returns>The <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" /> that sent the invitation. </returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.Net.PeerToPeer.Collaboration.PeerApplicationLaunchInfo.PeerEndPoint">
      <summary>Gets or sets the <see cref="T:System.Net.PeerToPeer.Collaboration.PeerEndPoint" /> from which the <see cref="T:System.Net.PeerToPeer.Collaboration.PeerApplication" /> invitation was sent.</summary>
      <returns>The <see cref="T:System.Net.PeerToPeer.Collaboration.PeerEndPoint" /> from which the invitation was sent. </returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="T:System.Net.PeerToPeer.Collaboration.PeerApplicationRegistrationType">
      <summary>Specifies the type of registration to perform for a <see cref="T:System.Net.PeerToPeer.Collaboration.PeerApplication" /> or <see cref="T:System.Net.PeerToPeer.Collaboration.PeerObject" /> registration.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="F:System.Net.PeerToPeer.Collaboration.PeerApplicationRegistrationType.CurrentUser">
      <summary>The application or object is being registered only for the user associated with the calling peer</summary>
    </member>
    <member name="F:System.Net.PeerToPeer.Collaboration.PeerApplicationRegistrationType.AllUsers">
      <summary>The <see cref="T:System.Net.PeerToPeer.Collaboration.PeerApplication" />  or <see cref="T:System.Net.PeerToPeer.Collaboration.PeerObject" /> is being registered for all peers of the application host</summary>
    </member>
    <member name="T:System.Net.PeerToPeer.Collaboration.PeerChangeType">
      <summary>Specifies the type of change that occurred for a peer.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="F:System.Net.PeerToPeer.Collaboration.PeerChangeType.Added">
      <summary>A peer object, endpoint or application has been added.</summary>
    </member>
    <member name="F:System.Net.PeerToPeer.Collaboration.PeerChangeType.Deleted">
      <summary>A peer object, endpoint or application has been deleted.</summary>
    </member>
    <member name="F:System.Net.PeerToPeer.Collaboration.PeerChangeType.Updated">
      <summary>A peer object, endpoint or application has been updated.</summary>
    </member>
    <member name="T:System.Net.PeerToPeer.Collaboration.PeerCollaboration">
      <summary>Interacts with the Peer Collaboration infrastructure. Many of the core collaboration scenarios begin with this class.</summary>
    </member>
    <member name="P:System.Net.PeerToPeer.Collaboration.PeerCollaboration.ApplicationLaunchInfo">
      <summary>Gets the <see cref="T:System.Net.PeerToPeer.Collaboration.PeerApplicationLaunchInfo" /> object that contains information needed when an application is started due to a collaboration request from a remote peer.</summary>
      <returns>If the application was started due to an invitation, a <see cref="T:System.Net.PeerToPeer.Collaboration.PeerApplicationLaunchInfo" /> object that contains both information about the peer that sent the application invitation and the invitation itself is returned; otherwise, null is returned.  The default value for this property is null.</returns>
    </member>
    <member name="P:System.Net.PeerToPeer.Collaboration.PeerCollaboration.ContactManager">
      <summary>Gets the persistent store that contains all <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" /> objects for remote peers.</summary>
      <returns>
        <see cref="T:System.Net.PeerToPeer.Collaboration.ContactManager" /> object that contains all peer contact objects for remote peers. The default value for this property is null.</returns>
    </member>
    <member name="M:System.Net.PeerToPeer.Collaboration.PeerCollaboration.DeleteObject(System.Net.PeerToPeer.Collaboration.PeerObject)">
      <summary>Deregisters a <see cref="T:System.Net.PeerToPeer.Collaboration.PeerObject" /> associated with the calling peer.</summary>
      <param name="peerObject">The <see cref="T:System.Net.PeerToPeer.Collaboration.PeerObject" /> to deregister. </param>
      <exception cref="T:System.ArgumentNullException">The <paramref name="peerObject" /> parameter cannot be null.</exception>
      <exception cref="T:System.Net.PeerToPeer.PeerToPeerException">Unable to complete <see cref="M:System.Net.PeerToPeer.Collaboration.PeerCollaboration.DeleteObject(System.Net.PeerToPeer.Collaboration.PeerObject)" /> operation.</exception>
    </member>
    <member name="M:System.Net.PeerToPeer.Collaboration.PeerCollaboration.GetLocalRegisteredApplications">
      <summary>Gets all <see cref="T:System.Net.PeerToPeer.Collaboration.PeerApplication" /> objects that are registered on the local machine.</summary>
      <returns>A <see cref="T:System.Net.PeerToPeer.Collaboration.PeerApplicationCollection" /> that contains all applications that are registered on the local machine. If an application is not found, a collection of size zero (0) is returned.</returns>
      <exception cref="T:System.Net.PeerToPeer.PeerToPeerException">An invalid value was returned when this method attempted to enumerate the application registered to this peer. Please make sure that all applications have valid registry values.</exception>
    </member>
    <member name="M:System.Net.PeerToPeer.Collaboration.PeerCollaboration.GetLocalRegisteredApplications(System.Net.PeerToPeer.Collaboration.PeerApplicationRegistrationType)">
      <summary>Gets a collection of all <see cref="T:System.Net.PeerToPeer.Collaboration.PeerApplication" /> objects that are registered on the local machine for the specified <see cref="T:System.Net.PeerToPeer.Collaboration.PeerApplicationRegistrationType" />.</summary>
      <returns>A <see cref="T:System.Net.PeerToPeer.Collaboration.PeerApplicationCollection" /> that contains all applications of the specified <paramref name="type" /> that are registered on the local machine. If an application is not found, a collection of size zero (0) is returned.</returns>
      <param name="type">
        <see cref="T:System.Net.PeerToPeer.Collaboration.PeerApplicationRegistrationType" /> to return for the specified application.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">The <paramref name="type" /> parameter is not set to a known value in the <see cref="T:System.Net.PeerToPeer.Collaboration.PeerApplicationRegistrationType" /> enumeration.</exception>
      <exception cref="T:System.Net.PeerToPeer.PeerToPeerException">An invalid value was returned when this method attempted to enumerate the application registered to this peer. Please make sure that all applications have valid registry values.</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Net.PeerToPeer.Collaboration.PeerCollaboration.GetLocalSetObjects">
      <summary>Obtains all <see cref="T:System.Net.PeerToPeer.Collaboration.PeerObject" /> instances registered by the calling peer with the <see cref="T:System.Net.PeerToPeer.Collaboration.PeerCollaboration" /> infrastructure on this machine.</summary>
      <returns>A <see cref="T:System.Net.PeerToPeer.Collaboration.PeerObjectCollection" /> which contains all the <see cref="T:System.Net.PeerToPeer.Collaboration.PeerObject" /> instances registered by the calling peer with the <see cref="T:System.Net.PeerToPeer.Collaboration.PeerCollaboration" /> infrastructure on the local machine.If registered <see cref="T:System.Net.PeerToPeer.Collaboration.PeerObject" /> instances are not discovered on the local machine, a collection of size zero (0) is returned.</returns>
      <exception cref="T:System.Net.PeerToPeer.PeerToPeerException">An invalid value was returned when this method attempted to enumerate all available <see cref="T:System.Net.PeerToPeer.Collaboration.PeerObject" /> instances.</exception>
    </member>
    <member name="M:System.Net.PeerToPeer.Collaboration.PeerCollaboration.GetPeersNearMe">
      <summary>Returns a collection of all the <see cref="T:System.Net.PeerToPeer.Collaboration.PeerCollaboration" /> endpoints currently signed in on the network subnet of the calling peer.</summary>
      <returns>A <see cref="T:System.Net.PeerToPeer.Collaboration.PeerNearMeCollection" /> that contains all the <see cref="T:System.Net.PeerToPeer.Collaboration.PeerCollaboration" /> endpoints currently signed into the 'Near Me' scope. If peers are not discovered on the subnet, a collection of size zero (0) is returned.</returns>
      <exception cref="T:System.InvalidOperationException">The peer is not signed in to the 'Near Me' scope.</exception>
      <exception cref="T:System.Net.PeerToPeer.PeerToPeerException">An invalid value was returned when this method attempted to enumerate all known People Near Me endpoints.</exception>
    </member>
    <member name="E:System.Net.PeerToPeer.Collaboration.PeerCollaboration.LocalApplicationChanged">
      <summary>Raised when a <see cref="T:System.Net.PeerToPeer.Collaboration.PeerApplication" /> in the <see cref="T:System.Net.PeerToPeer.Collaboration.PeerApplicationCollection" /> for the local peer on the local host has changed.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.Net.PeerToPeer.Collaboration.PeerCollaboration.LocalEndPointName">
      <summary>Gets or sets the name of the <see cref="T:System.Net.PeerToPeer.Collaboration.PeerEndPoint" /> associated with the calling peer.</summary>
      <returns>
        <see cref="T:System.String" /> that contains the name associated with the calling peer's endpoint (provided as the <see cref="P:System.Net.PeerToPeer.Collaboration.PeerEndPoint.Name" /> property). The default value for this property is null.</returns>
      <exception cref="T:System.Net.PeerToPeer.PeerToPeerException">Unable to set <see cref="P:System.Net.PeerToPeer.Collaboration.PeerCollaboration.LocalEndPointName" />.</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="E:System.Net.PeerToPeer.Collaboration.PeerCollaboration.LocalNameChanged">
      <summary>Raised when the name of the <see cref="T:System.Net.PeerToPeer.Collaboration.PeerEndPoint" /> on the local host for the local peer has changed.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="E:System.Net.PeerToPeer.Collaboration.PeerCollaboration.LocalObjectChanged">
      <summary>A <see cref="T:System.Net.PeerToPeer.Collaboration.PeerObject" /> in the <see cref="T:System.Net.PeerToPeer.Collaboration.PeerObjectCollection" /> for the local peer on the local host has changed.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="E:System.Net.PeerToPeer.Collaboration.PeerCollaboration.LocalPresenceChanged">
      <summary>The <see cref="T:System.Net.PeerToPeer.Collaboration.PeerPresenceInfo" /> of the local peer on the local host has changed.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.Net.PeerToPeer.Collaboration.PeerCollaboration.LocalPresenceInfo">
      <summary>Gets or sets the presence for the calling peer within the <see cref="T:System.Net.PeerToPeer.Collaboration.PeerCollaboration" /> infrastructure.</summary>
      <returns>The <see cref="T:System.Net.PeerToPeer.Collaboration.PeerPresenceInfo" /> that contains presence information for the calling peer that has registered for a <see cref="T:System.Net.PeerToPeer.Collaboration.PeerCollaboration" /> session. </returns>
      <exception cref="T:System.ArgumentNullException">
        <see cref="T:System.Net.PeerToPeer.Collaboration.PeerPresenceInfo" /> cannot specify null</exception>
      <exception cref="T:System.Net.PeerToPeer.PeerToPeerException">
        <see cref="T:System.Net.PeerToPeer.Collaboration.PeerPresenceStatus" /> is offlineUnable to set  <see cref="T:System.Net.PeerToPeer.Collaboration.PeerPresenceInfo" /></exception>
    </member>
    <member name="M:System.Net.PeerToPeer.Collaboration.PeerCollaboration.RegisterApplication(System.Net.PeerToPeer.Collaboration.PeerApplication,System.Net.PeerToPeer.Collaboration.PeerApplicationRegistrationType)">
      <summary>Registers the specified <see cref="T:System.Net.PeerToPeer.Collaboration.PeerApplication" /> for a collaboration session with the calling peer.</summary>
      <param name="application">The <see cref="T:System.Net.PeerToPeer.Collaboration.PeerApplication" /> for which to register the calling peer within the associated scope (global, local, and link-local).</param>
      <param name="type">The type of registration to perform.  The application may be registered for just the calling peer or for all peers using the machine.</param>
      <exception cref="T:System.ArgumentException">The <see cref="P:System.Net.PeerToPeer.Collaboration.PeerApplication.Path" /> property on the <see cref="T:System.Net.PeerToPeer.Collaboration.PeerApplication" /> object passed to <paramref name="application" /> is null.The peer application instance provided has the same globally unique <see cref="P:System.Net.PeerToPeer.Collaboration.PeerApplication.Id" /> as an application which is already registered.  The existing registration must be unregistered before a new application can be registered with the provided identifier.</exception>
      <exception cref="T:System.ArgumentNullException">The <paramref name="application" /> and <paramref name="type" /> parameters cannot be null.  Both parameters must be specified.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">The type parameter is not set to a known value in the <see cref="T:System.Net.PeerToPeer.Collaboration.PeerApplicationRegistrationType" /> enumeration.</exception>
      <exception cref="T:System.Net.PeerToPeer.PeerToPeerException">The <see cref="M:System.Net.PeerToPeer.Collaboration.PeerCollaboration.RegisterApplication(System.Net.PeerToPeer.Collaboration.PeerApplication,System.Net.PeerToPeer.Collaboration.PeerApplicationRegistrationType)" /> operation cannot be completed until the caller has signed-in to the infrastructure.</exception>
    </member>
    <member name="M:System.Net.PeerToPeer.Collaboration.PeerCollaboration.SetObject(System.Net.PeerToPeer.Collaboration.PeerObject)">
      <summary>Registers a <see cref="T:System.Net.PeerToPeer.Collaboration.PeerObject" /> associated with the calling peer.</summary>
      <param name="peerObject">The <see cref="T:System.Net.PeerToPeer.Collaboration.PeerObject" /> to register. </param>
      <exception cref="T:System.ArgumentException">Object already registered</exception>
      <exception cref="T:System.ArgumentNullException">
        <see cref="T:System.Net.PeerToPeer.Collaboration.PeerObject" /> cannot be null.<see cref="P:System.Net.PeerToPeer.Collaboration.PeerObject.Id" /> cannot be null.</exception>
      <exception cref="T:System.Net.PeerToPeer.PeerToPeerException">The <see cref="M:System.Net.PeerToPeer.Collaboration.PeerCollaboration.SetObject(System.Net.PeerToPeer.Collaboration.PeerObject)" /> operation could not be completed.</exception>
    </member>
    <member name="M:System.Net.PeerToPeer.Collaboration.PeerCollaboration.SignIn(System.Net.PeerToPeer.Collaboration.PeerScope)">
      <summary>Signs the peer into the collaboration infrastructure with the specified <see cref="T:System.Net.PeerToPeer.Collaboration.PeerScope" />.</summary>
      <param name="peerScope">The scope the peer is using to join the <see cref="T:System.Net.PeerToPeer.Collaboration.PeerCollaboration" /> activity.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="peerScope" /> is set to <see cref="F:System.Net.PeerToPeer.Collaboration.PeerScope.None" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">The <paramref name="peerScope" /> parameter contains an invalid enumeration value.</exception>
      <exception cref="T:System.Net.PeerToPeer.PeerToPeerException">The <see cref="M:System.Net.PeerToPeer.Collaboration.PeerCollaboration.SignIn(System.Net.PeerToPeer.Collaboration.PeerScope)" /> operation could not be completed.</exception>
    </member>
    <member name="P:System.Net.PeerToPeer.Collaboration.PeerCollaboration.SignInScope">
      <summary>Gets the <see cref="T:System.Net.PeerToPeer.Collaboration.PeerScope" /> to which the calling peer can publish presence, capability and object information.</summary>
      <returns>
        <see cref="T:System.Net.PeerToPeer.Collaboration.PeerScope" /> object that specifies the scope in which the calling peer will participate. The default value for this property is null.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Net.PeerToPeer.Collaboration.PeerCollaboration.SignOut(System.Net.PeerToPeer.Collaboration.PeerScope)">
      <summary>Signs the peer out of the specified scope. </summary>
      <param name="peerScope">Scope enumeration specified by <see cref="T:System.Net.PeerToPeer.Collaboration.PeerScope" />.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">The <paramref name="peerScope" /> parameter contains an invalid enumeration value.</exception>
      <exception cref="T:System.Net.PeerToPeer.PeerToPeerException">The <see cref="M:System.Net.PeerToPeer.Collaboration.PeerCollaboration.SignOut(System.Net.PeerToPeer.Collaboration.PeerScope)" /> operation could not be completed.</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.Net.PeerToPeer.Collaboration.PeerCollaboration.SynchronizingObject">
      <summary>Gets or sets the event handler callback object for all event handlers.</summary>
      <returns>An object with <see cref="T:System.ComponentModel.ISynchronizeInvoke" /> implemented on it, to be used for application thread synchronization. The default value for this property is null. </returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Net.PeerToPeer.Collaboration.PeerCollaboration.UnregisterApplication(System.Net.PeerToPeer.Collaboration.PeerApplication,System.Net.PeerToPeer.Collaboration.PeerApplicationRegistrationType)">
      <summary>Deregisters the specified <see cref="T:System.Net.PeerToPeer.Collaboration.PeerApplication" /> from the <see cref="T:System.Net.PeerToPeer.Collaboration.PeerCollaboration" /> infrastructure.</summary>
      <param name="application">The <see cref="T:System.Net.PeerToPeer.Collaboration.PeerApplication" /> to deregister for the calling peer.</param>
      <param name="type">The type of deregistration to perform for either the calling peer or for all peers that exist on the machine.</param>
      <exception cref="T:System.ArgumentException">The globally unique <see cref="P:System.Net.PeerToPeer.Collaboration.PeerApplication.Id" /> for the specified application does not exist or is empty.</exception>
      <exception cref="T:System.ArgumentNullException">The <paramref name="application" /> or <paramref name="type" /> parameter is set to null.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">The <paramref name="type" /> parameter is not set to a known value in <see cref="T:System.Net.PeerToPeer.Collaboration.PeerApplicationRegistrationType" />.</exception>
      <exception cref="T:System.Net.PeerToPeer.PeerToPeerException">The  <see cref="M:System.Net.PeerToPeer.Collaboration.PeerCollaboration.UnregisterApplication(System.Net.PeerToPeer.Collaboration.PeerApplication,System.Net.PeerToPeer.Collaboration.PeerApplicationRegistrationType)" /> operation could not be completed.</exception>
    </member>
    <member name="T:System.Net.PeerToPeer.Collaboration.PeerCollaborationPermission">
      <summary>Specifies the values that define or are used in <see cref="N:System.Net.PeerToPeer.Collaboration" /> object permissions. </summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Net.PeerToPeer.Collaboration.PeerCollaborationPermission.#ctor(System.Security.Permissions.PermissionState)">
      <summary>Initializes a new instance of the <see cref="T:System.Net.PeerToPeer.Collaboration.PeerCollaborationPermission" />. The initial <see cref="T:System.Security.Permissions.PermissionState" /> for this instance is passed when the constructor is called.</summary>
      <param name="state">One of the values in the <see cref="T:System.Security.Permissions.PermissionState" /> enumeration.</param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Net.PeerToPeer.Collaboration.PeerCollaborationPermission.Copy">
      <summary>Creates and returns a copy of the current <see cref="T:System.Net.PeerToPeer.Collaboration.PeerCollaborationPermission" />.</summary>
      <returns>A <see cref="T:System.Object" /> that contains a copy of the current instance of <see cref="T:System.Net.PeerToPeer.Collaboration.PeerCollaborationPermission" />.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Net.PeerToPeer.Collaboration.PeerCollaborationPermission.FromXml(System.Security.SecurityElement)">
      <summary>Represents the XML object model for encoding security objects. </summary>
      <param name="e">The XML encoding to use to reconstruct the permission.</param>
      <exception cref="T:System.ArgumentException">The parameter is not a valid permission element.The parameter does not contain a valid type or class.The parameter's version number is not supported. </exception>
      <exception cref="T:System.ArgumentNullException">The parameter is a null reference (Nothing in Visual Basic). </exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Net.PeerToPeer.Collaboration.PeerCollaborationPermission.Intersect(System.Security.IPermission)">
      <summary>Creates and returns a permission that is the intersection of the current <see cref="T:System.Net.PeerToPeer.Collaboration.PeerCollaborationPermission" /> and the specified <paramref name="target" /> permission.</summary>
      <returns>A new permission that represents the intersection of the current <see cref="T:System.Net.PeerToPeer.Collaboration.PeerCollaborationPermission" /> and the specified <paramref name="target" /> permission. This new permission is a null reference (Nothing in Visual Basic) if the intersection is empty. </returns>
      <param name="target">Permission to <see cref="M:System.Net.PeerToPeer.Collaboration.PeerCollaborationPermission.Intersect(System.Security.IPermission)" /> with the current permission. It must be of the same type as the current permission.</param>
      <exception cref="T:System.ArgumentException">The target parameter is not a null reference (Nothing in Visual Basic) and is not an instance of the same class as the current permission. </exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Net.PeerToPeer.Collaboration.PeerCollaborationPermission.IsSubsetOf(System.Security.IPermission)">
      <summary>Determines whether the current <see cref="T:System.Net.PeerToPeer.Collaboration.PeerCollaborationPermission" /> is a subset of the specified <paramref name="target" /> permission.</summary>
      <returns>True if the current <see cref="T:System.Net.PeerToPeer.Collaboration.PeerCollaborationPermission" /> is a subset of the specified permission; otherwise, false. </returns>
      <param name="target">A permission that is to be tested for the subset relationship. This permission must be of the same type as the current permission.</param>
      <exception cref="T:System.ArgumentException">The parameter is a null reference (Nothing in Visual Basic). </exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Net.PeerToPeer.Collaboration.PeerCollaborationPermission.IsUnrestricted">
      <summary>Returns a value specifying whether the current <see cref="T:System.Net.PeerToPeer.Collaboration.PeerCollaborationPermission" /> is unrestricted.</summary>
      <returns>True if the current permission is unrestricted; otherwise, false.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Net.PeerToPeer.Collaboration.PeerCollaborationPermission.ToXml">
      <summary>Creates an XML encoding of the <see cref="T:System.Net.PeerToPeer.Collaboration.PeerCollaborationPermission" /> and its current state.</summary>
      <returns>An XML encoding of the permission, including any state information. </returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Net.PeerToPeer.Collaboration.PeerCollaborationPermission.Union(System.Security.IPermission)">
      <summary>Creates a permission that is the union of the current <see cref="T:System.Net.PeerToPeer.Collaboration.PeerCollaborationPermission" /> and the specified <paramref name="target" /> permission.</summary>
      <returns>A new permission that represents the <see cref="M:System.Net.PeerToPeer.Collaboration.PeerCollaborationPermission.Union(System.Security.IPermission)" /> of the current <see cref="T:System.Net.PeerToPeer.Collaboration.PeerCollaborationPermission" /> and the specified permission.</returns>
      <param name="target">A permission to combine with the current permission. It must be of the same type as the current permission.</param>
      <exception cref="T:System.ArgumentException">The parameter is a null reference (Nothing in Visual Basic). </exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="T:System.Net.PeerToPeer.Collaboration.PeerCollaborationPermissionAttribute">
      <summary>Allows security actions for <see cref="T:System.Net.PeerToPeer.Collaboration.PeerCollaborationPermission" /> to be applied to code using declarative security. This class cannot be inherited.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Net.PeerToPeer.Collaboration.PeerCollaborationPermissionAttribute.#ctor(System.Security.Permissions.SecurityAction)">
      <summary>Initializes a new instance of the <see cref="T:System.Net.PeerToPeer.Collaboration.PeerCollaborationPermissionAttribute" /> class with the specified <see cref="T:System.Security.Permissions.SecurityAction" />.</summary>
      <param name="action">Specifies a <see cref="T:System.Security.Permissions.SecurityAction" /> value.</param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Net.PeerToPeer.Collaboration.PeerCollaborationPermissionAttribute.CreatePermission">
      <summary>Creates and returns a new <see cref="T:System.Security.IPermission" />.</summary>
      <returns>A new <see cref="T:System.Security.IPermission" /> object.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="T:System.Net.PeerToPeer.Collaboration.PeerContact">
      <summary>Represents a peer for which a user has retrieved extended information.</summary>
    </member>
    <member name="M:System.Net.PeerToPeer.Collaboration.PeerContact.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>No public constructor is defined for this class.</summary>
      <param name="serializationInfo">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> associated with the <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" />.</param>
      <param name="streamingContext">The serialization destination associated with the <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" />.</param>
    </member>
    <member name="E:System.Net.PeerToPeer.Collaboration.PeerContact.ApplicationChanged">
      <summary>This event is raised whenever an application associated with the <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" /> has changed.</summary>
      <exception cref="T:System.ObjectDisposedException">This <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" /> object has been disposed.</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.Net.PeerToPeer.Collaboration.PeerContact.Credentials">
      <summary>Gets or sets the X509Certificate (public key) for the peer identified by this <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" /> instance.</summary>
      <returns>The X509Certificate (public key) for the peer identified by this <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" /> instance. The default value for this property is null.</returns>
      <exception cref="T:System.ObjectDisposedException">This <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" /> object has been disposed.</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.Net.PeerToPeer.Collaboration.PeerContact.DisplayName">
      <summary>Gets or sets a string which represents the display name of the <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" />.</summary>
      <returns>
        <see cref="T:System.String" /> which represents the display name of this <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" />. Unless explicitly specified, the default value for all properties is null for reference types.</returns>
      <exception cref="T:System.ObjectDisposedException">This <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" /> object has been disposed.</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Net.PeerToPeer.Collaboration.PeerContact.Dispose(System.Boolean)">
      <summary>Releases the unmanaged resources and optionally releases the managed resources used by the <see cref="T:System.Net.PeerToPeer.Collaboration.PeerApplication" /> object.</summary>
      <param name="disposing">True to release both managed and unmanaged resources; false to release only unmanaged resources.</param>
    </member>
    <member name="P:System.Net.PeerToPeer.Collaboration.PeerContact.EmailAddress">
      <summary>Gets or sets the email address associated with the <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" />.</summary>
      <returns>
        <see cref="T:System.Net.Mail.MailAddress" /> object that contains the email address associated with the <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" />. </returns>
      <exception cref="T:System.ObjectDisposedException">This <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" /> object has been disposed.</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Net.PeerToPeer.Collaboration.PeerContact.Equals(System.Net.PeerToPeer.Collaboration.PeerContact)">
      <summary>Compares the <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" /> to the specified <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" /> instance.</summary>
      <returns>Returns true if the <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" /> instance provided has matching data, else false.</returns>
      <param name="other">The <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" /> instance to test for equality.</param>
      <exception cref="T:System.ObjectDisposedException">The <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" /> object has been disposed.</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Net.PeerToPeer.Collaboration.PeerContact.Equals(System.Object)">
      <summary>Compares the <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" /> instance to the specified object.</summary>
      <returns>Returns true if the <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" /> instance provided has matching data, else false. This method also returns false if the passed parameter is null.</returns>
      <param name="obj">Compares the <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" /> instance to the specified object.</param>
      <exception cref="T:System.ObjectDisposedException">The <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" /> object has been disposed.</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Net.PeerToPeer.Collaboration.PeerContact.Equals(System.Object,System.Object)">
      <summary>Determines whether the specified <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" /> instances are considered equal. </summary>
      <returns>Returns true if the <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" /> instances provided have matching data, else false.</returns>
      <param name="objA">The first <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" /> to compare.</param>
      <param name="objB">The second <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" /> to compare.</param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Net.PeerToPeer.Collaboration.PeerContact.FromXml(System.String)">
      <summary>Creates a <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" /> instance based on provided XML data.</summary>
      <returns>A string that represents the XML object model for encoding the <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" /> instance.</returns>
      <param name="peerContactXml">The XML encoding used to reconstruct the <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" />. </param>
      <exception cref="T:System.ArgumentNullException">Parameter cannot be null.</exception>
      <exception cref="T:System.Net.PeerToPeer.PeerToPeerException">Unable to complete <see cref="M:System.Net.PeerToPeer.Collaboration.PeerContact.FromXml(System.String)" /> operationParameter is not a valid <see cref="M:System.Net.PeerToPeer.Collaboration.PeerCollaborationPermission.FromXml(System.Security.SecurityElement)" /> object.</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Net.PeerToPeer.Collaboration.PeerContact.GetApplications">
      <summary>Retrieves the <see cref="T:System.Net.PeerToPeer.Collaboration.PeerApplication" /> objects that were registered by the remote peer into the local cache.</summary>
      <returns>The <see cref="T:System.Net.PeerToPeer.Collaboration.PeerApplicationCollection" /> from the local cache. If associated applications are not found for the <see cref="T:System.Net.PeerToPeer.Collaboration.PeerEndPoint" />, a collection of size zero (0) is returned.</returns>
      <exception cref="T:System.InvalidOperationException">The calling peer is not subscribed to the <see cref="T:System.Net.PeerToPeer.Collaboration.PeerEndPoint" />.The calling peer has not yet called the <see cref="M:System.Net.PeerToPeer.Collaboration.PeerNearMe.RefreshData" /> method.</exception>
      <exception cref="T:System.Net.PeerToPeer.PeerToPeerException">Unable to complete <see cref="M:System.Net.PeerToPeer.Collaboration.PeerContact.GetApplications" /> operation.</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Net.PeerToPeer.Collaboration.PeerContact.GetApplications(System.Guid)">
      <summary>Gets the collection of <see cref="T:System.Net.PeerToPeer.Collaboration.PeerApplication" /> objects with the specified <see cref="T:System.Guid" /> from the local cache. </summary>
      <returns>The <see cref="T:System.Net.PeerToPeer.Collaboration.PeerApplicationCollection" /> from the local cache. If no applications are found with the specified <paramref name="applicationId" />, a collection of size zero (0) is returned.</returns>
      <param name="applicationId">The <see cref="T:System.Guid" /> of the peer application to be retrieved.</param>
      <exception cref="T:System.InvalidOperationException">The calling peer is not subscribed to the <see cref="T:System.Net.PeerToPeer.Collaboration.PeerEndPoint" />.The calling peer has not yet called the <see cref="M:System.Net.PeerToPeer.Collaboration.PeerNearMe.RefreshData" /> method.</exception>
      <exception cref="T:System.Net.PeerToPeer.PeerToPeerException">Unable to complete <see cref="M:System.Net.PeerToPeer.Collaboration.PeerContact.GetApplications" /> operation.</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Net.PeerToPeer.Collaboration.PeerContact.GetApplications(System.Net.PeerToPeer.Collaboration.PeerEndPoint)">
      <summary>Gets the <see cref="T:System.Net.PeerToPeer.Collaboration.PeerApplicationCollection" /> associated with the specified <see cref="T:System.Net.PeerToPeer.Collaboration.PeerEndPoint" />.</summary>
      <returns>The <see cref="T:System.Net.PeerToPeer.Collaboration.PeerApplicationCollection" /> associated with the specified <see cref="T:System.Net.PeerToPeer.Collaboration.PeerEndPoint" />. If applications are not associated with the specified <see cref="T:System.Net.PeerToPeer.Collaboration.PeerEndPoint" />, a collection of size zero (0) is returned.</returns>
      <param name="peerEndPoint">Contains endpoint information associated with the <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" />.</param>
      <exception cref="T:System.ArgumentNullException">
        <see cref="T:System.Net.PeerToPeer.Collaboration.PeerEndPoint" /> cannot be null.</exception>
      <exception cref="T:System.InvalidOperationException">The calling peer is not subscribed to the <see cref="T:System.Net.PeerToPeer.Collaboration.PeerEndPoint" />.The calling peer has not yet called the <see cref="M:System.Net.PeerToPeer.Collaboration.PeerNearMe.RefreshData" /> method.</exception>
      <exception cref="T:System.Net.PeerToPeer.PeerToPeerException">Unable to complete <see cref="M:System.Net.PeerToPeer.Collaboration.PeerContact.GetApplications" /> operation.</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Net.PeerToPeer.Collaboration.PeerContact.GetApplications(System.Net.PeerToPeer.Collaboration.PeerEndPoint,System.Guid)">
      <summary>Gets the <see cref="T:System.Net.PeerToPeer.Collaboration.PeerApplicationCollection" /> associated with the specified <see cref="T:System.Net.PeerToPeer.Collaboration.PeerEndPoint" />.</summary>
      <returns>The collection of <see cref="T:System.Net.PeerToPeer.Collaboration.PeerApplication" /> objects associated with the <see cref="T:System.Net.PeerToPeer.Collaboration.PeerEndPoint" />. If applications identified by the ID are not found for the <see cref="T:System.Net.PeerToPeer.Collaboration.PeerEndPoint" />, or if the ID for the endpoint is null or invalid, a collection of size zero (0) is returned.</returns>
      <param name="peerEndPoint">The endpoint associated with the <see cref="T:System.Net.PeerToPeer.Collaboration.PeerApplicationCollection" />.</param>
      <param name="applicationId">Contains application information associated with the <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" />.</param>
      <exception cref="T:System.ArgumentNullException">
        <see cref="T:System.Net.PeerToPeer.Collaboration.PeerEndPoint" /> cannot be null.</exception>
      <exception cref="T:System.InvalidOperationException">The calling peer is not subscribed to the <see cref="T:System.Net.PeerToPeer.Collaboration.PeerEndPoint" />.The calling peer has not yet called the <see cref="M:System.Net.PeerToPeer.Collaboration.PeerNearMe.RefreshData" /> method.</exception>
      <exception cref="T:System.Net.PeerToPeer.PeerToPeerException">Unable to complete <see cref="M:System.Net.PeerToPeer.Collaboration.PeerContact.GetApplications" /> operation.</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Net.PeerToPeer.Collaboration.PeerContact.GetHashCode">
      <summary>Returns the hash code for a <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" /> instance.</summary>
      <returns>A 32-bit signed integer hash code.</returns>
      <exception cref="T:System.ObjectDisposedException">The <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" /> object has been disposed.</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Net.PeerToPeer.Collaboration.PeerContact.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Populates a <see cref="T:System.Runtime.Serialization.SerializationInfo" /> object with the data needed to serialize the <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" />.</summary>
      <param name="info">Holds the serialized data associated with the <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" /> object.</param>
      <param name="context">Contains the destination for the serialized stream associated with the <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" /> object.</param>
    </member>
    <member name="M:System.Net.PeerToPeer.Collaboration.PeerContact.GetObjects(System.Net.PeerToPeer.Collaboration.PeerEndPoint)">
      <summary>Gets the <see cref="T:System.Net.PeerToPeer.Collaboration.PeerObjectCollection" /> registered by the specified <see cref="T:System.Net.PeerToPeer.Collaboration.PeerEndPoint" /> and stored in the local cache.</summary>
      <returns>The <see cref="T:System.Net.PeerToPeer.Collaboration.PeerObjectCollection" /> associated with the specified <see cref="T:System.Net.PeerToPeer.Collaboration.PeerEndPoint" />. If no applications are associated with the endpoint, a collection of size zero (0) is returned.</returns>
      <param name="peerEndPoint">The endpoint from which to retrieve objects.</param>
      <exception cref="T:System.ArgumentNullException">
        <see cref="T:System.Net.PeerToPeer.Collaboration.PeerEndPoint" /> cannot be null.</exception>
      <exception cref="T:System.InvalidOperationException">The calling peer is not subscribed to the <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" /> associated with the <see cref="T:System.Net.PeerToPeer.Collaboration.PeerEndPoint" />.The calling peer has not yet called the <see cref="M:System.Net.PeerToPeer.Collaboration.PeerNearMe.RefreshData" /> method.</exception>
      <exception cref="T:System.Net.PeerToPeer.PeerToPeerException">Unable to complete <see cref="Overload:System.Net.PeerToPeer.Collaboration.PeerContact.GetObjects" /> operation.</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Net.PeerToPeer.Collaboration.PeerContact.GetObjects(System.Net.PeerToPeer.Collaboration.PeerEndPoint,System.Guid)">
      <summary>Gets the collection of peer objects registered by the specified <see cref="T:System.Net.PeerToPeer.Collaboration.PeerEndPoint" /> and registered in the <see cref="T:System.Net.PeerToPeer.Collaboration.PeerApplication" /> identified by the specified <see cref="T:System.Guid" />.</summary>
      <returns>The <see cref="T:System.Net.PeerToPeer.Collaboration.PeerObjectCollection" /> associated with the specified <see cref="T:System.Net.PeerToPeer.Collaboration.PeerEndPoint" />. If no applications are associated with the endpoint, a collection of size zero (0) is returned.</returns>
      <param name="peerEndPoint">The endpoint from which to retrieve objects.</param>
      <param name="objectId">The <see cref="T:System.Guid" /> of the <see cref="T:System.Net.PeerToPeer.Collaboration.PeerObject" /> to be retrieved.</param>
      <exception cref="T:System.ArgumentNullException">
        <see cref="T:System.Net.PeerToPeer.Collaboration.PeerEndPoint" /> cannot be null.</exception>
      <exception cref="T:System.InvalidOperationException">The calling peer is not subscribed to the <see cref="T:System.Net.PeerToPeer.Collaboration.PeerEndPoint" />.The calling peer has not yet called the <see cref="M:System.Net.PeerToPeer.Collaboration.PeerNearMe.RefreshData" /> method.</exception>
      <exception cref="T:System.Net.PeerToPeer.PeerToPeerException">Unable to complete <see cref="Overload:System.Net.PeerToPeer.Collaboration.PeerContact.GetObjects" /> operation.</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Net.PeerToPeer.Collaboration.PeerContact.Invite">
      <summary>Sends an invitation to join into peer collaboration sponsored by the sender.</summary>
      <returns>A <see cref="T:System.Net.PeerToPeer.Collaboration.PeerInvitationResponse" /> from the peer who received the invitation. </returns>
      <exception cref="T:System.ObjectDisposedException">The <see cref="T:System.Net.PeerToPeer.Collaboration.PeerEndPoint" /> object has been disposed.</exception>
      <exception cref="T:System.Net.PeerToPeer.PeerToPeerException">The <see cref="P:System.Net.PeerToPeer.Collaboration.PeerApplication.Id" /> for the current application does not exist.</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Net.PeerToPeer.Collaboration.PeerContact.Invite(System.Net.PeerToPeer.Collaboration.PeerApplication,System.String,System.Byte[])">
      <summary>Sends the specified invitation to join into the specified <see cref="T:System.Net.PeerToPeer.Collaboration.PeerApplication" /> sponsored by the sender.  </summary>
      <returns>A <see cref="T:System.Net.PeerToPeer.Collaboration.PeerInvitationResponse" /> from the peer who received the invitation.</returns>
      <param name="applicationToInvite">The <see cref="T:System.Net.PeerToPeer.Collaboration.PeerApplication" /> for which the invitation is sent.</param>
      <param name="message">A message to send to the remote peer along with the application invitation.</param>
      <param name="invitationData">A user-defined data blob to associate with the invitation.  Its size can be no more than 16,384 bytes.</param>
      <exception cref="T:System.ArgumentNullException">
        <see cref="T:System.Net.PeerToPeer.Collaboration.PeerApplication" /> cannot be null.</exception>
      <exception cref="T:System.ObjectDisposedException">The <see cref="T:System.Net.PeerToPeer.Collaboration.PeerEndPoint" /> object has been disposed.</exception>
      <exception cref="T:System.Net.PeerToPeer.PeerToPeerException">The <see cref="P:System.Net.PeerToPeer.Collaboration.PeerApplication.Id" /> for the current application does not exist or is empty.</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Net.PeerToPeer.Collaboration.PeerContact.Invite(System.Net.PeerToPeer.Collaboration.PeerEndPoint)">
      <summary>Sends an invitation to a specific endpoint to join into peer collaboration with the sender of the invitation. </summary>
      <returns>A <see cref="T:System.Net.PeerToPeer.Collaboration.PeerInvitationResponse" /> from the peer endpoint who received the invitation. </returns>
      <param name="peerEndPoint">The endpoint to receive the invitation.</param>
      <exception cref="T:System.ArgumentNullException">
        <see cref="T:System.Net.PeerToPeer.Collaboration.PeerEndPoint" /> cannot be null.</exception>
      <exception cref="T:System.ObjectDisposedException">The <see cref="T:System.Net.PeerToPeer.Collaboration.PeerEndPoint" /> object has been disposed.</exception>
      <exception cref="T:System.Net.PeerToPeer.PeerToPeerException">Unable to complete <see cref="M:System.Net.PeerToPeer.Collaboration.PeerContact.Invite" /> operation.The currently executing application is not registered with the peer collaboration infrastructure.<see cref="P:System.Net.PeerToPeer.Collaboration.PeerEndPoint.EndPoint" /> specified by <see cref="T:System.Net.PeerToPeer.Collaboration.PeerEndPoint" /> object is not valid.</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Net.PeerToPeer.Collaboration.PeerContact.Invite(System.Net.PeerToPeer.Collaboration.PeerEndPoint,System.Net.PeerToPeer.Collaboration.PeerApplication,System.String,System.Byte[])">
      <summary>Sends the specified invitation to the specified <see cref="T:System.Net.PeerToPeer.Collaboration.PeerEndPoint" /> to join into the specified <see cref="T:System.Net.PeerToPeer.Collaboration.PeerCollaboration" /> application sponsored by the sender.</summary>
      <returns>A <see cref="T:System.Net.PeerToPeer.Collaboration.PeerInvitationResponse" /> from the peer who received the invitation. </returns>
      <param name="peerEndPoint">The endpoint or remote peer to which to send the invitation.</param>
      <param name="applicationToInvite">The application for which the invitation is sent.</param>
      <param name="message">A message to send to the remote peer along with the application invitation.  The message can be no more than 255 Unicode characters.</param>
      <param name="invitationData">A user-defined data blob to associate with the invitation.  Its size can be no more than 16,384 bytes.</param>
      <exception cref="T:System.ArgumentException">Endpoint in <paramref name="PeerEndPoint" /> cannot be null.</exception>
      <exception cref="T:System.ArgumentNullException">
        <see cref="T:System.Net.PeerToPeer.Collaboration.PeerApplication" /> object cannot be empty.<see cref="T:System.Net.PeerToPeer.Collaboration.PeerApplication" /> and <see cref="T:System.Net.PeerToPeer.Collaboration.PeerEndPoint" /> objects cannot be null.</exception>
      <exception cref="T:System.ObjectDisposedException">The <see cref="T:System.Net.PeerToPeer.Collaboration.PeerEndPoint" /> object has been disposed.</exception>
      <exception cref="T:System.Net.PeerToPeer.PeerToPeerException">The <see cref="P:System.Net.PeerToPeer.Collaboration.PeerApplication.Id" /> for the current application does not exist or is empty.</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Net.PeerToPeer.Collaboration.PeerContact.InviteAsync(System.Net.PeerToPeer.Collaboration.PeerApplication,System.String,System.Byte[],System.Object)">
      <summary>Begins an asynchronous invitation operation for the specified peer endpoints to join the specified collaboration <see cref="T:System.Net.PeerToPeer.Collaboration.PeerApplication" /> sponsored by the sender of the invitation.</summary>
      <param name="applicationToInvite">The application for which the invitation is sent.</param>
      <param name="message">A message to send to the remote peer along with the application invitation.  The message can be no more than 255 Unicode characters.</param>
      <param name="invitationData">A user-defined data blob to associate with the invitation.  Its size can be no more than 16,384 bytes.</param>
      <param name="userToken">User-defined object to pass to the callback of the asynchronous operation. Also used to identify the asynchronous operation for cancellation. This parameter must be specified and is unique across all asynchronous invitation operations in progress.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="UserToken" /> cannot be null.</exception>
      <exception cref="T:System.ArgumentNullException">
        <see cref="T:System.Net.PeerToPeer.Collaboration.PeerApplication" /> object cannot be null.</exception>
      <exception cref="T:System.ObjectDisposedException">The <see cref="T:System.Net.PeerToPeer.Collaboration.PeerEndPoint" /> object has been disposed.</exception>
      <exception cref="T:System.Net.PeerToPeer.PeerToPeerException">The <see cref="T:System.Guid" /> for the current application does not exist or is empty.Endpoint collection is empty or null.</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Net.PeerToPeer.Collaboration.PeerContact.InviteAsync(System.Net.PeerToPeer.Collaboration.PeerEndPoint,System.Object)">
      <summary>Begins an asynchronous invitation operation for the specified peer endpoint to join a <see cref="T:System.Net.PeerToPeer.Collaboration.PeerCollaboration" /> application sponsored by the sender of the invitation. The invitation is identified using the specified <see cref="T:System.Object" />.</summary>
      <param name="peerEndPoint">The endpoint or remote peer to which to send the invitation.</param>
      <param name="userToken">User-defined object to pass to the callback of the asynchronous operation. Also used to identify the asynchronous operation for cancellation. This parameter must be specified and is unique across all asynchronous invitation operations in progress.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="UserToken" /> cannot be null.Endpoint in <paramref name="peerEndPoint" /> cannot be null.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="peerEndPoint" /> object cannot be null.</exception>
      <exception cref="T:System.ObjectDisposedException">The <see cref="T:System.Net.PeerToPeer.Collaboration.PeerEndPoint" /> object has been disposed.</exception>
      <exception cref="T:System.Net.PeerToPeer.PeerToPeerException">The <see cref="T:System.Guid" /> for the current application does not exist or is empty.</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Net.PeerToPeer.Collaboration.PeerContact.InviteAsync(System.Net.PeerToPeer.Collaboration.PeerEndPoint,System.String,System.Byte[],System.Net.PeerToPeer.Collaboration.PeerApplication,System.Object)">
      <summary>Begins an asynchronous invitation operation for the specified <paramref name="peerEndPoint" /> to join the specified collaboration <see cref="T:System.Net.PeerToPeer.Collaboration.PeerApplication" /> sponsored by the sender of the invitation.</summary>
      <param name="peerEndPoint">The endpoint or remote peer to which to send the invitation.</param>
      <param name="message">A message to send to the remote peer along with the application invitation.  The message can be no more than 255 Unicode characters.</param>
      <param name="invitationData">A user defined data blob to associate with the invitation.  Its size can be no more than 16,384 bytes.</param>
      <param name="applicationToInvite">The application for which the invitation is sent.</param>
      <param name="userToken">User-defined object to pass to the callback of the asynchronous operation. Also used to identify the asynchronous operation for cancellation. This parameter must be specified and is unique across all asynchronous invitation operations in progress.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="UserToken" /> cannot be null.Endpoint specified by <paramref name="peerEndPoint" /> cannot be null.</exception>
      <exception cref="T:System.ArgumentNullException">
        <see cref="T:System.Net.PeerToPeer.Collaboration.PeerApplication" /> and <see cref="T:System.Net.PeerToPeer.Collaboration.PeerEndPoint" /> objects cannot be null.</exception>
      <exception cref="T:System.ObjectDisposedException">The <see cref="T:System.Net.PeerToPeer.Collaboration.PeerEndPoint" /> object has been disposed.</exception>
      <exception cref="T:System.Net.PeerToPeer.PeerToPeerException">The <see cref="P:System.Net.PeerToPeer.Collaboration.PeerApplication.Id" /> for the current application does not exist or is empty.</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Net.PeerToPeer.Collaboration.PeerContact.InviteAsync(System.Object)">
      <summary>Begins an asynchronous invitation operation for an endpoint to join a <see cref="T:System.Net.PeerToPeer.Collaboration.PeerCollaboration" /> application sponsored by the sender of the invitation. The invitation is identified using the specified <see cref="T:System.Object" />.</summary>
      <param name="userToken">User-defined object to pass to the callback of the asynchronous operation. Also used to identify the asynchronous operation for cancellation. This parameter must be specified and is unique across all asynchronous invitation operations in progress.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="UserToken" /> cannot be null.</exception>
      <exception cref="T:System.ObjectDisposedException">The <see cref="T:System.Net.PeerToPeer.Collaboration.PeerEndPoint" /> object has been disposed.</exception>
      <exception cref="T:System.Net.PeerToPeer.PeerToPeerException">The <see cref="P:System.Net.PeerToPeer.Collaboration.PeerApplication.Id" /> for the current application does not exist or is empty.<see cref="T:System.Net.PeerToPeer.Collaboration.PeerEndPointCollection" /> cannot be null.</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.Net.PeerToPeer.Collaboration.PeerContact.IsSubscribed">
      <summary>Gets or sets a value specifying whether the current <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" /> is subscribed or unsubscribed to an endpoint. Alternatively, this property gets or sets a value specifying whether the current peer host or hosting application has subscribed or unsubscribed to this <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" />.</summary>
      <returns>True if this <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" /> is subscribed to this endpoint, false if the contact has not subscribed or has unsubscribed.</returns>
      <exception cref="T:System.ObjectDisposedException">This <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" /> object has been disposed.</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.Net.PeerToPeer.Collaboration.PeerContact.Nickname">
      <summary>Gets or sets a string which represents the <paramref name="Nickname" /> of the <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" />.</summary>
      <returns>
        <see cref="T:System.String" /> which represents the nickname of the <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" />. The default value for this property is null.</returns>
      <exception cref="T:System.ObjectDisposedException">This <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" /> object has been disposed.</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="E:System.Net.PeerToPeer.Collaboration.PeerContact.ObjectChanged">
      <summary>This event is signaled whenever a <see cref="T:System.Net.PeerToPeer.Collaboration.PeerObject" /> associated with the <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" /> has changed.</summary>
      <exception cref="T:System.ObjectDisposedException">This <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" /> object has been disposed.</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Net.PeerToPeer.Collaboration.PeerContact.OnApplicationChanged(System.Net.PeerToPeer.Collaboration.ApplicationChangedEventArgs)">
      <summary>Raises the <see cref="E:System.Net.PeerToPeer.Collaboration.PeerContact.ApplicationChanged" /> event.</summary>
      <param name="appChangedArgs">The <see cref="T:System.Net.PeerToPeer.Collaboration.ApplicationChangedEventArgs" /> object to be passed to delegates associated with the <see cref="E:System.Net.PeerToPeer.Collaboration.PeerContact.ApplicationChanged" /> event.</param>
    </member>
    <member name="M:System.Net.PeerToPeer.Collaboration.PeerContact.OnObjectChanged(System.Net.PeerToPeer.Collaboration.ObjectChangedEventArgs)">
      <summary>Raises the <see cref="E:System.Net.PeerToPeer.Collaboration.PeerContact.ObjectChanged" /> event when a <see cref="T:System.Net.PeerToPeer.Collaboration.PeerObject" /> is added, updated or removed by a remote peer.</summary>
      <param name="objChangedArgs">Type of object change specified by <see cref="T:System.Net.PeerToPeer.Collaboration.ObjectChangedEventArgs" />.</param>
    </member>
    <member name="M:System.Net.PeerToPeer.Collaboration.PeerContact.OnPresenceChanged(System.Net.PeerToPeer.Collaboration.PresenceChangedEventArgs)">
      <summary>Raises the <see cref="E:System.Net.PeerToPeer.Collaboration.PeerContact.PresenceChanged" /> event when the <see cref="T:System.Net.PeerToPeer.Collaboration.PeerPresenceInfo" /> of a peer has changed.</summary>
      <param name="presenceChangedArgs">The <see cref="T:System.Net.PeerToPeer.Collaboration.PresenceChangedEventArgs" /> object to be passed to delegates associated with the <see cref="E:System.Net.PeerToPeer.Collaboration.PeerContact.PresenceChanged" /> event.</param>
    </member>
    <member name="M:System.Net.PeerToPeer.Collaboration.PeerContact.OnSubscribeCompleted(System.Net.PeerToPeer.Collaboration.SubscribeCompletedEventArgs)">
      <summary>Raises the <see cref="E:System.Net.PeerToPeer.Collaboration.PeerContact.SubscribeCompleted" /> event. </summary>
      <param name="e">The <see cref="T:System.Net.PeerToPeer.Collaboration.SubscribeCompletedEventArgs" /> or <see cref="T:System.Net.PeerToPeer.Collaboration.SubscriptionListChangedEventArgs" /> object associated with the <see cref="E:System.Net.PeerToPeer.Collaboration.PeerContact.SubscribeCompleted" /> event.</param>
    </member>
    <member name="P:System.Net.PeerToPeer.Collaboration.PeerContact.PeerEndPoints">
      <summary>Gets the <see cref="T:System.Net.PeerToPeer.Collaboration.PeerEndPointCollection" /> associated with this <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" />.</summary>
      <returns>The <see cref="T:System.Net.PeerToPeer.Collaboration.PeerEndPoint" /> collection associated with this <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" />. The default value for this property is null.</returns>
      <exception cref="T:System.ObjectDisposedException">This <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" /> object has been disposed.</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.Net.PeerToPeer.Collaboration.PeerContact.PeerName">
      <summary>Gets or sets the <see cref="T:System.Net.PeerToPeer.PeerName" /> associated with the <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" />.</summary>
      <returns>
        <see cref="T:System.String" /> which represents the <see cref="T:System.Net.PeerToPeer.PeerName" /> of the <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" />. Unless explicitly specified, the default value for all properties is null for reference types.</returns>
      <exception cref="T:System.ObjectDisposedException">This <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" /> object has been disposed.</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="E:System.Net.PeerToPeer.Collaboration.PeerContact.PresenceChanged">
      <summary>This event is raised whenever the <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" /> has changed its presence status.</summary>
      <exception cref="T:System.ObjectDisposedException">This <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" /> object has been disposed.</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Net.PeerToPeer.Collaboration.PeerContact.Subscribe">
      <summary>Subscribes the calling peer to the <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" />, and as a result, the peer will receive any future <see cref="T:System.Net.PeerToPeer.Collaboration.PeerCollaboration" /> events associated with the <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" />.</summary>
      <exception cref="T:System.InvalidOperationException">The calling peer is not signed in to People Near Me.</exception>
      <exception cref="T:System.ObjectDisposedException">The <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" /> object has been disposed.</exception>
      <exception cref="T:System.Net.PeerToPeer.PeerToPeerException">Unable to complete <see cref="M:System.Net.PeerToPeer.Collaboration.PeerContact.Subscribe" /> operation. Failure may be due to an inability to establish a TCP connection to the peer.</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.Net.PeerToPeer.Collaboration.PeerContact.SubscribeAllowed">
      <summary>Gets or sets a value that specifies whether the <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" /> is exposed to the collaboration events associated with the peer or application that has ownership of the <see cref="T:System.Net.PeerToPeer.Collaboration.ContactManager" /> in which this <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" /> object resides.</summary>
      <returns>
        <see cref="T:System.Net.PeerToPeer.Collaboration.SubscriptionType" /> enumeration value that specifies whether this <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" /> is exposed to collaboration events belonging to the peer host or hosting application. Unless explicitly specified, the default value for all properties is null for reference types.</returns>
      <exception cref="T:System.ObjectDisposedException">This <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" />object has been disposed.</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Net.PeerToPeer.Collaboration.PeerContact.SubscribeAsync(System.Object)">
      <summary>Asynchronously subscribes the calling peer to the <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" />, and as a result, the peer will receive any future <see cref="T:System.Net.PeerToPeer.Collaboration.PeerCollaboration" /> events associated with the <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" />.</summary>
      <param name="userToken">A user-defined <see cref="T:System.Object" /> that contains information about the <see cref="M:System.Net.PeerToPeer.Collaboration.PeerContact.SubscribeAsync(System.Object)" /> operation.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="UserToken" /> cannot be null.</exception>
      <exception cref="T:System.InvalidOperationException">The calling peer is not signed in to People Near Me.</exception>
      <exception cref="T:System.ObjectDisposedException">The <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" /> object has been disposed.</exception>
      <exception cref="T:System.Net.PeerToPeer.PeerToPeerException">Duplicate <see cref="M:System.Net.PeerToPeer.Collaboration.PeerContact.SubscribeAsync(System.Object)" /> identifier.</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="E:System.Net.PeerToPeer.Collaboration.PeerContact.SubscribeCompleted">
      <summary>Raised when a subscription operation has completed.</summary>
      <exception cref="T:System.ObjectDisposedException">This <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" /> object has been disposed.</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Net.PeerToPeer.Collaboration.PeerContact.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)"></member>
    <member name="M:System.Net.PeerToPeer.Collaboration.PeerContact.ToString">
      <summary>Returns a <see cref="T:System.String" /> representation of the <see cref="P:System.Net.PeerToPeer.Collaboration.PeerContact.DisplayName" /> associated with the <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" />.</summary>
      <returns>
        <see cref="T:System.String" /> representation of the <see cref="P:System.Net.PeerToPeer.Collaboration.PeerContact.DisplayName" />.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Net.PeerToPeer.Collaboration.PeerContact.ToXml">
      <summary>Serializes the <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" /> to an XML string for persistent storage or network transfer.</summary>
      <returns>An XML encoding of the <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" />.</returns>
      <exception cref="T:System.Net.PeerToPeer.PeerToPeerException">Unable to complete <see cref="M:System.Net.PeerToPeer.Collaboration.PeerContact.ToXml" /> operation.</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Net.PeerToPeer.Collaboration.PeerContact.Unsubscribe">
      <summary>Removes a subscription to the <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" /> and as a result the calling peer no longer receives <see cref="T:System.Net.PeerToPeer.Collaboration.PeerCollaboration" /> events associated with the <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" />.</summary>
      <exception cref="T:System.ObjectDisposedException">This <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" /> object has been disposed.</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="T:System.Net.PeerToPeer.Collaboration.PeerContactCollection">
      <summary>Represents a container for <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" /> elements. An instance of this type is returned by the <see cref="M:System.Net.PeerToPeer.Collaboration.ContactManager.GetContacts" /> static method.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Net.PeerToPeer.Collaboration.PeerContactCollection.InsertItem(System.Int32,System.Net.PeerToPeer.Collaboration.PeerContact)">
      <summary>Inserts a new <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" /> element into the <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContactCollection" /> at the specified index or key.</summary>
      <param name="index">The zero-based index of the element to replace</param>
      <param name="item">The new value for the element at the specified index</param>
      <exception cref="T:System.ArgumentNullException">The <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" /> provided is null</exception>
    </member>
    <member name="M:System.Net.PeerToPeer.Collaboration.PeerContactCollection.SetItem(System.Int32,System.Net.PeerToPeer.Collaboration.PeerContact)">
      <summary>Replaces the <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" /> at the specified index.</summary>
      <param name="index">The zero-based index of the element to replace.</param>
      <param name="item">The new value for the element at the specified index.</param>
      <exception cref="T:System.ArgumentNullException">The <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" /> provided is null</exception>
    </member>
    <member name="M:System.Net.PeerToPeer.Collaboration.PeerContactCollection.ToString">
      <summary>Returns a Unicode <see cref="T:System.String" /> representing the current value of each <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" />, separated by commas.</summary>
      <returns>Unicode <see cref="T:System.String" /> representing the current value of each <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" />, separated by commas.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="T:System.Net.PeerToPeer.Collaboration.PeerEndPoint">
      <summary>Represents the location of a <see cref="T:System.Net.PeerToPeer.Collaboration.PeerNearMe" />, or <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" /> instance specified with a unique network address configuration by describing the current instance of a <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" /> or <see cref="T:System.Net.PeerToPeer.Collaboration.PeerNearMe" /> within the Peer-to-Peer Collaboration Infrastructure.</summary>
    </member>
    <member name="M:System.Net.PeerToPeer.Collaboration.PeerEndPoint.#ctor">
      <summary>Generates a new instance of the <see cref="T:System.Net.PeerToPeer.Collaboration.PeerEndPoint" /> class.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Net.PeerToPeer.Collaboration.PeerEndPoint.#ctor(System.Net.IPEndPoint)">
      <summary>Initializes a new instance of the <see cref="T:System.Net.PeerToPeer.Collaboration.PeerEndPoint" /> class with the peer-associated endpoint contained in <see cref="T:System.Net.IPEndPoint" />.</summary>
      <param name="endPoint">The endpoint associated with the peer.</param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Net.PeerToPeer.Collaboration.PeerEndPoint.#ctor(System.Net.IPEndPoint,System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.Net.PeerToPeer.Collaboration.PeerEndPoint" /> class with the peer-associated endpoint contained in <see cref="T:System.Net.IPEndPoint" /> and a string specifying <paramref name="endPointName" />.</summary>
      <param name="endPoint">The endpoint associated with the peer.</param>
      <param name="endPointName">Specifies the name associated with the <see cref="T:System.Net.PeerToPeer.Collaboration.PeerEndPoint" />.</param>
      <exception cref="T:System.ArgumentNullException">The <paramref name="endPoint" /> argument specifies null.</exception>
      <exception cref="T:System.ArgumentException">The <paramref name="endPoint" /> specified is not a valid IPv6 endpoint.</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Net.PeerToPeer.Collaboration.PeerEndPoint.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Initializes a new <see cref="T:System.Net.PeerToPeer.Collaboration.PeerEndPoint" /> instance with the associated parameters required for serialization.</summary>
      <param name="serializationInfo">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> associated with the <see cref="T:System.Net.PeerToPeer.Collaboration.PeerEndPoint" />.</param>
      <param name="streamingContext">The serialization destination associated with the <see cref="T:System.Net.PeerToPeer.Collaboration.PeerEndPoint" />.</param>
    </member>
    <member name="M:System.Net.PeerToPeer.Collaboration.PeerEndPoint.Dispose">
      <summary>Releases all resources used by the <see cref="T:System.Net.PeerToPeer.Collaboration.PeerEndPoint" /> object.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Net.PeerToPeer.Collaboration.PeerEndPoint.Dispose(System.Boolean)">
      <summary>Releases the unmanaged resources used by the <see cref="T:System.Net.PeerToPeer.Collaboration.PeerEndPoint" /> object and optionally releases the managed resources.</summary>
      <param name="disposing">Set to true to release both managed and unmanaged resources; false to release only unmanaged resources.</param>
    </member>
    <member name="P:System.Net.PeerToPeer.Collaboration.PeerEndPoint.EndPoint">
      <summary>Gets or sets the <see cref="T:System.Net.IPEndPoint" /> that contains the IP address associated with the <see cref="T:System.Net.PeerToPeer.Collaboration.PeerEndPoint" /> instance.</summary>
      <returns>IP address associated with the <see cref="T:System.Net.PeerToPeer.Collaboration.PeerEndPoint" /> instance.</returns>
      <exception cref="T:System.Net.PeerToPeer.PeerToPeerException">The specified <see cref="P:System.Net.PeerToPeer.Collaboration.PeerEndPoint.EndPoint" /> endpoint is not a valid IPv6 endpoint.</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Net.PeerToPeer.Collaboration.PeerEndPoint.Equals(System.Net.PeerToPeer.Collaboration.PeerEndPoint)">
      <summary>Compares the <see cref="T:System.Net.PeerToPeer.Collaboration.PeerEndPoint" /> to the specified <see cref="T:System.Net.PeerToPeer.Collaboration.PeerEndPoint" /> instance.</summary>
      <returns>Returns true if the <see cref="T:System.Net.PeerToPeer.Collaboration.PeerEndPoint" /> instance provided has matching data, else false.</returns>
      <param name="other">The <see cref="T:System.Net.PeerToPeer.Collaboration.PeerEndPoint" /> instance to test for equality.</param>
      <exception cref="T:System.ObjectDisposedException">This <see cref="T:System.Net.PeerToPeer.Collaboration.PeerEndPoint" /> object has been disposed.</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Net.PeerToPeer.Collaboration.PeerEndPoint.Equals(System.Object)">
      <summary>Compares the <see cref="T:System.Net.PeerToPeer.Collaboration.PeerEndPoint" /> to the specified <see cref="T:System.Object" />.</summary>
      <returns>Returns true if the <see cref="T:System.Net.PeerToPeer.Collaboration.PeerEndPoint" /> is equal to the specified object instance, else false.</returns>
      <param name="obj">The <see cref="T:System.Object" /> to test for equality.</param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Net.PeerToPeer.Collaboration.PeerEndPoint.Equals(System.Object,System.Object)">
      <summary>Determines whether the specified <see cref="T:System.Net.PeerToPeer.Collaboration.PeerEndPoint" /> objects are considered equal.</summary>
      <returns>Returns true if the <see cref="T:System.Net.PeerToPeer.Collaboration.PeerEndPoint" /> instances provided have matching data, else false.</returns>
      <param name="objA">The first <see cref="T:System.Net.PeerToPeer.Collaboration.PeerEndPoint" />    to compare.</param>
      <param name="objB">The second <see cref="T:System.Net.PeerToPeer.Collaboration.PeerEndPoint" /> to compare.</param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Net.PeerToPeer.Collaboration.PeerEndPoint.GetHashCode">
      <summary>Returns the hash code for a <see cref="T:System.Net.PeerToPeer.Collaboration.PeerEndPoint" /> instance.</summary>
      <returns>A 32-bit signed integer hash code used to compare instances of this type.</returns>
      <exception cref="T:System.ObjectDisposedException">The <see cref="T:System.Net.PeerToPeer.Collaboration.PeerEndPoint" /> object has been disposed.</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Net.PeerToPeer.Collaboration.PeerEndPoint.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Populates a <see cref="T:System.Runtime.Serialization.SerializationInfo" /> class instance with the data required to serialize the specified <see cref="T:System.Net.PeerToPeer.Collaboration.PeerObject" /> instance. A derived type must call the base type <see cref="M:System.Runtime.Serialization.ISerializable.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" /> method.</summary>
      <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> to populate with data.</param>
      <param name="context">The destination for the serialization.</param>
    </member>
    <member name="P:System.Net.PeerToPeer.Collaboration.PeerEndPoint.Name">
      <summary>Gets or sets a <see cref="T:System.String" /> that represents a displayed name for the <see cref="T:System.Net.PeerToPeer.Collaboration.PeerEndPoint" /> instance.</summary>
      <returns>
        <see cref="T:System.String" /> representing the display name of the <see cref="T:System.Net.PeerToPeer.Collaboration.PeerEndPoint" />.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="E:System.Net.PeerToPeer.Collaboration.PeerEndPoint.NameChanged">
      <summary>Signaled when the name associated with a <see cref="T:System.Net.PeerToPeer.Collaboration.PeerEndPoint" /> object changes.</summary>
      <exception cref="T:System.ObjectDisposedException">The <see cref="T:System.Net.PeerToPeer.Collaboration.PeerEndPoint" /> object has been disposed.</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Net.PeerToPeer.Collaboration.PeerEndPoint.OnNameChanged(System.Net.PeerToPeer.Collaboration.NameChangedEventArgs)">
      <summary>Called when a change occurs to the <paramref name="PeerName" /> specified by the <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" /> associated with the <see cref="T:System.Net.PeerToPeer.Collaboration.PeerEndPoint" /> instance.</summary>
      <param name="nameChangedArgs">Specifies the type of change that has occurred to the <paramref name="PeerName" />.</param>
    </member>
    <member name="P:System.Net.PeerToPeer.Collaboration.PeerEndPoint.SynchronizingObject">
      <summary>When this property value is set, all events not fired as the result of an asynchronous operation will have the associated event handlers called back on the thread that created the specific <see cref="P:System.Net.PeerToPeer.Collaboration.PeerEndPoint.SynchronizingObject" />.</summary>
      <returns>Object that implements the <see cref="T:System.ComponentModel.ISynchronizeInvoke" /> interface and is used by instances of this type for event handler synchronization on the thread that created it.</returns>
      <exception cref="T:System.ObjectDisposedException">The calling object has been disposed.</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Net.PeerToPeer.Collaboration.PeerEndPoint.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Populates the current <see cref="T:System.Net.PeerToPeer.Collaboration.PeerEndPoint" /> instance with the data obtained from the serialized source.</summary>
      <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> to populate with data.</param>
      <param name="context">The destination for the serialization.</param>
    </member>
    <member name="M:System.Net.PeerToPeer.Collaboration.PeerEndPoint.ToString">
      <summary>Returns a <see cref="T:System.String" /> that represents a <see cref="T:System.Net.PeerToPeer.Collaboration.PeerEndPoint" /> instance.</summary>
      <returns>
        <see cref="T:System.String" /> representing a <see cref="T:System.Net.PeerToPeer.Collaboration.PeerEndPoint" />.</returns>
      <exception cref="T:System.ObjectDisposedException">The <see cref="T:System.Net.PeerToPeer.Collaboration.PeerEndPoint" /> object has been disposed.</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="T:System.Net.PeerToPeer.Collaboration.PeerEndPointCollection">
      <summary>Represents a container for elements of a <see cref="T:System.Net.PeerToPeer.Collaboration.PeerEndPoint" /> object. An instance of this type is returned by the <see cref="T:System.Net.PeerToPeer.Collaboration.Peer" /> class.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Net.PeerToPeer.Collaboration.PeerEndPointCollection.Equals(System.Net.PeerToPeer.Collaboration.PeerEndPointCollection)">
      <summary>Compares the <see cref="T:System.Net.PeerToPeer.Collaboration.PeerEndPointCollection" /> to the specified object.</summary>
      <returns>Returns true if the <see cref="T:System.Net.PeerToPeer.Collaboration.PeerEndPointCollection" /> is equal to the object specified.</returns>
      <param name="other"> The object to compare against.</param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Net.PeerToPeer.Collaboration.PeerEndPointCollection.InsertItem(System.Int32,System.Net.PeerToPeer.Collaboration.PeerEndPoint)">
      <summary>Inserts a new <see cref="T:System.Net.PeerToPeer.Collaboration.PeerEndPoint" /> element into the <see cref="T:System.Net.PeerToPeer.Collaboration.PeerEndPointCollection" /> at the specified index or key.</summary>
      <param name="index">The zero-based index of the element to replace</param>
      <param name="item">The new value for the element at the specified index</param>
      <exception cref="T:System.ArgumentNullException">The <paramref name="item" /> argument is null.</exception>
    </member>
    <member name="M:System.Net.PeerToPeer.Collaboration.PeerEndPointCollection.SetItem(System.Int32,System.Net.PeerToPeer.Collaboration.PeerEndPoint)">
      <summary>Replaces the <see cref="T:System.Net.PeerToPeer.Collaboration.PeerEndPoint" /> element at the specified index.</summary>
      <param name="index"> The zero-based index of the element to replace</param>
      <param name="item">The new value for the element at the specified index</param>
      <exception cref="T:System.ArgumentNullException">The <paramref name="item" /> argument is null.</exception>
    </member>
    <member name="M:System.Net.PeerToPeer.Collaboration.PeerEndPointCollection.ToString">
      <summary>Returns a <see cref="T:System.String" /> representing the current value for each instance of <see cref="T:System.Net.PeerToPeer.Collaboration.PeerEndPoint" />, separated by commas.</summary>
      <returns>Unicode <see cref="T:System.String" /> representing the current value of each instance of <see cref="T:System.Net.PeerToPeer.Collaboration.PeerEndPoint" />.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="T:System.Net.PeerToPeer.Collaboration.PeerInvitationResponse">
      <summary>Represents a response received from a remote peer to an invitation sent via the <see cref="M:System.Net.PeerToPeer.Collaboration.Peer.Invite" /> or <see cref="M:System.Net.PeerToPeer.Collaboration.PeerNearMe.Invite" /> method.</summary>
    </member>
    <member name="P:System.Net.PeerToPeer.Collaboration.PeerInvitationResponse.PeerInvitationResponseType">
      <summary>Gets or sets the response to the invitation from the remote peer specified by <see cref="T:System.Net.PeerToPeer.Collaboration.PeerInvitationResponseType" /> class.</summary>
      <returns>
        <see cref="T:System.Net.PeerToPeer.Collaboration.PeerInvitationResponseType" /> object containing the response from an invitation to a remote peer.</returns>
    </member>
    <member name="T:System.Net.PeerToPeer.Collaboration.PeerInvitationResponseType">
      <summary>Specifies the responses a local peer can receive from an application driven collaboration invitation requests.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="F:System.Net.PeerToPeer.Collaboration.PeerInvitationResponseType.Declined">
      <summary>The peer declined the invitation request.</summary>
    </member>
    <member name="F:System.Net.PeerToPeer.Collaboration.PeerInvitationResponseType.Accepted">
      <summary>The peer accepted the invitation request.</summary>
    </member>
    <member name="F:System.Net.PeerToPeer.Collaboration.PeerInvitationResponseType.Expired">
      <summary>The invitation request has expired.</summary>
    </member>
    <member name="T:System.Net.PeerToPeer.Collaboration.PeerNearMe">
      <summary>Represents a peer located by the "People Near Me" infrastructure.  </summary>
    </member>
    <member name="M:System.Net.PeerToPeer.Collaboration.PeerNearMe.#ctor">
      <summary>Initializes a new default instance of the <see cref="T:System.Net.PeerToPeer.Collaboration.PeerNearMe" /> class.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Net.PeerToPeer.Collaboration.PeerNearMe.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Initializes a new <see cref="T:System.Net.PeerToPeer.Collaboration.PeerNearMe" /> instance with the associated parameters required for serialization.</summary>
      <param name="serializationInfo">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> associated with the <see cref="T:System.Net.PeerToPeer.Collaboration.PeerNearMe" />.</param>
      <param name="streamingContext">The serialization destination associated with the <see cref="T:System.Net.PeerToPeer.Collaboration.PeerNearMe" />.</param>
    </member>
    <member name="M:System.Net.PeerToPeer.Collaboration.PeerNearMe.AddToContactManager">
      <summary>Generates a <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" /> from the <see cref="T:System.Net.PeerToPeer.Collaboration.PeerNearMe" /> object and associates it with the <see cref="T:System.Net.PeerToPeer.Collaboration.ContactManager" />.</summary>
      <returns>
        <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" /> object associated with the <see cref="T:System.Net.PeerToPeer.Collaboration.PeerEndPoint" />.</returns>
      <exception cref="T:System.Net.PeerToPeer.PeerToPeerException">The Collaboration infrastructure has failed to create and associate a <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" /> with the <see cref="T:System.Net.PeerToPeer.Collaboration.ContactManager" />.</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Net.PeerToPeer.Collaboration.PeerNearMe.AddToContactManager(System.String,System.String,System.Net.Mail.MailAddress)">
      <summary>Generates a <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" /> with the associated descriptive parameters from the <see cref="T:System.Net.PeerToPeer.Collaboration.PeerNearMe" /> object and associates it with the <see cref="T:System.Net.PeerToPeer.Collaboration.ContactManager" />.</summary>
      <returns>
        <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" /> object associated with a <see cref="T:System.Net.PeerToPeer.Collaboration.PeerNearMe" /> containing descriptive parameters.</returns>
      <param name="displayName">The display name assigned to the newly created contact.</param>
      <param name="nickname">The <paramref name="nickname" /> to assign to the newly created contact.</param>
      <param name="emailAddress">
        <see cref="T:System.Net.Mail.MailAddress" /> object that specifies the email address to assign to the newly created contact.</param>
      <exception cref="T:System.Net.PeerToPeer.PeerToPeerException">The Collaboration infrastructure has failed to create or update a <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" /> with the <see cref="T:System.Net.PeerToPeer.Collaboration.ContactManager" />.</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Net.PeerToPeer.Collaboration.PeerNearMe.CreateFromPeerEndPoint(System.Net.PeerToPeer.Collaboration.PeerEndPoint)">
      <summary>Generates a <see cref="T:System.Net.PeerToPeer.Collaboration.PeerNearMe" /> object from the provided <see cref="T:System.Net.PeerToPeer.Collaboration.PeerEndPoint" />.</summary>
      <returns>
        <see cref="T:System.Net.PeerToPeer.Collaboration.PeerNearMe" /> object associated with the <see cref="T:System.Net.PeerToPeer.Collaboration.PeerEndPoint" />. </returns>
      <param name="peerEndPoint">
        <see cref="T:System.Net.PeerToPeer.Collaboration.PeerEndPoint" /> object that specifies the endpoint associated with the peer.</param>
      <exception cref="T:System.ArgumentNullException">The <paramref name="peerEndPoint" /> is null.</exception>
      <exception cref="T:System.Net.PeerToPeer.PeerToPeerException">The referenced <see cref="P:System.Net.PeerToPeer.Collaboration.PeerEndPoint.EndPoint" /> specifies null.</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Net.PeerToPeer.Collaboration.PeerNearMe.Dispose(System.Boolean)">
      <summary>Releases the unmanaged resources used by the <see cref="T:System.Net.PeerToPeer.Collaboration.PeerNearMe" /> object and optionally releases the managed resources.</summary>
      <param name="disposing">Set to true to release both managed and unmanaged resources; false to release only unmanaged resources.</param>
    </member>
    <member name="M:System.Net.PeerToPeer.Collaboration.PeerNearMe.Equals(System.Net.PeerToPeer.Collaboration.PeerNearMe)">
      <summary>Compares the <see cref="T:System.Net.PeerToPeer.Collaboration.PeerNearMe" /> to the specified <see cref="T:System.Net.PeerToPeer.Collaboration.PeerNearMe" /> instance.</summary>
      <returns>Returns true if the <see cref="T:System.Net.PeerToPeer.Collaboration.PeerNearMe" /> instance provided has matching data, else false.</returns>
      <param name="other">The <see cref="T:System.Net.PeerToPeer.Collaboration.PeerNearMe" /> instance to test for equality.</param>
      <exception cref="T:System.ArgumentNullException">The <paramref name="other" /> argument is null.</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Net.PeerToPeer.Collaboration.PeerNearMe.Equals(System.Object)">
      <summary>Compares the <see cref="T:System.Net.PeerToPeer.Collaboration.PeerNearMe" /> instance to the specified object.</summary>
      <returns>Returns true if the <see cref="T:System.Net.PeerToPeer.Collaboration.PeerNearMe" /> instance provided has matching data, else false.</returns>
      <param name="obj">The object to test for equality.</param>
      <exception cref="T:System.ObjectDisposedException">The <see cref="T:System.Net.PeerToPeer.Collaboration.PeerNearMe" /> object has been disposed.</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Net.PeerToPeer.Collaboration.PeerNearMe.Equals(System.Object,System.Object)">
      <summary>Determines whether the specified <see cref="T:System.Net.PeerToPeer.Collaboration.PeerNearMe" /> instances are considered equal.</summary>
      <returns>Returns true if the <see cref="T:System.Net.PeerToPeer.Collaboration.PeerNearMe" /> instances provided have matching data, else false.</returns>
      <param name="objA">The first <see cref="T:System.Net.PeerToPeer.Collaboration.PeerNearMe" /> to compare.</param>
      <param name="objB">The second <see cref="T:System.Net.PeerToPeer.Collaboration.PeerNearMe" /> to compare.</param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Net.PeerToPeer.Collaboration.PeerNearMe.GetHashCode">
      <summary>Returns the hash code for the <see cref="T:System.Net.PeerToPeer.Collaboration.PeerNearMe" /> instance.</summary>
      <returns>A 32-bit signed integer hash code used to compare instances of this type.</returns>
      <exception cref="T:System.ObjectDisposedException">The <see cref="T:System.Net.PeerToPeer.Collaboration.PeerNearMe" /> object has been disposed.</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Net.PeerToPeer.Collaboration.PeerNearMe.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Populates a <see cref="T:System.Runtime.Serialization.SerializationInfo" /> with the data required to serialize the specified <see cref="T:System.Net.PeerToPeer.Collaboration.PeerNearMe" />. A derived type must call the base type <see cref="M:System.Runtime.Serialization.ISerializable.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" /> method.</summary>
      <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> to populate with data.</param>
      <param name="context">The destination for the serialization.</param>
    </member>
    <member name="M:System.Net.PeerToPeer.Collaboration.PeerNearMe.InternalRefreshData(System.Object)">
      <summary>Initiates a network operation to retrieve the application, object and presence data specific to a <see cref="T:System.Net.PeerToPeer.Collaboration.PeerNearMe" /> instance.</summary>
      <param name="state">Specifies the application, object, and presence data relevant to a <see cref="T:System.Net.PeerToPeer.Collaboration.PeerNearMe" /> instance. </param>
    </member>
    <member name="M:System.Net.PeerToPeer.Collaboration.PeerNearMe.Invite">
      <summary>Sends an invitation to join a peer collaboration application to a remote peer.</summary>
      <returns>
        <see cref="T:System.Net.PeerToPeer.Collaboration.PeerInvitationResponse" /> object containing the relevant <see cref="T:System.Net.PeerToPeer.Collaboration.PeerInvitationResponseType" /> value specified by the remote peer.</returns>
      <exception cref="T:System.ObjectDisposedException">The <see cref="T:System.Net.PeerToPeer.Collaboration.PeerNearMe" /> object has been disposed.</exception>
      <exception cref="T:System.Net.PeerToPeer.PeerToPeerException">The <see cref="T:System.Net.PeerToPeer.Collaboration.PeerEndPoint" /> associated with the <see cref="T:System.Net.PeerToPeer.Collaboration.PeerApplication" /> specified by the <see cref="T:System.Net.PeerToPeer.Collaboration.PeerEndPointCollection" /> is null or has a value count of '0' associated endpoints.A <see cref="T:System.Guid" /> has not been associated with the current peer-to-peer application.</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Net.PeerToPeer.Collaboration.PeerNearMe.Invite(System.Net.PeerToPeer.Collaboration.PeerApplication,System.String,System.Byte[])">
      <summary>Sends an invitation to join a peer collaboration application to a remote peer that includes data that describes or specifies the application invite.</summary>
      <returns>
        <see cref="T:System.Net.PeerToPeer.Collaboration.PeerInvitationResponse" /> object containing the relevant <see cref="T:System.Net.PeerToPeer.Collaboration.PeerInvitationResponseType" /> value specified by the remote peer.</returns>
      <param name="applicationToInvite">Specifies the relevant Peer Collaboration application represented by a <see cref="T:System.Net.PeerToPeer.Collaboration.PeerApplication" /> instance.</param>
      <param name="message">A message to send to the remote peer along with the application invitation.  The message can be no more than 255 Unicode characters.</param>
      <param name="invitationData">A user defined data blob to associate with the invitation.  Size is limited to 16K (16,384 bytes).</param>
      <exception cref="T:System.ObjectDisposedException">The <see cref="T:System.Net.PeerToPeer.Collaboration.PeerApplication" /> object has been disposed.</exception>
      <exception cref="T:System.ArgumentNullException">The <paramref name="applicationToInvite" /> argument specifies null.</exception>
      <exception cref="T:System.Net.PeerToPeer.PeerToPeerException">The <paramref name="applicationToInvite" /> argument specifies an empty <see cref="T:System.Guid" />.The <see cref="T:System.Net.PeerToPeer.Collaboration.PeerEndPoint" /> associated with the <see cref="T:System.Net.PeerToPeer.Collaboration.PeerApplication" /> specified by the <see cref="T:System.Net.PeerToPeer.Collaboration.PeerEndPointCollection" /> is null or has a value count of '0' associated endpoints.</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Net.PeerToPeer.Collaboration.PeerNearMe.InviteAsync(System.Net.PeerToPeer.Collaboration.PeerApplication,System.String,System.Byte[],System.Object)">
      <summary>Receives an invitation response from a peer regarding an invitation to a peer collaboration application.</summary>
      <param name="applicationToInvite">Specifies the relevant Peer Collaboration application information represented by a <see cref="T:System.Net.PeerToPeer.Collaboration.PeerApplication" /> object.</param>
      <param name="message">A message to send to the remote peer along with the application invitation. The message can be no more than 255 Unicode characters.</param>
      <param name="invitationData">A user defined data blob to associate with the invitation.  Size is limited to 16K.</param>
      <param name="userToken">User-defined object passed to the callback of the asynchronous operation for identification. This required parameter must be unique across all asynchronous invitation operations still in-progress.</param>
      <exception cref="T:System.ObjectDisposedException">The <see cref="T:System.Net.PeerToPeer.Collaboration.PeerApplication" /> object has been disposed.</exception>
      <exception cref="T:System.ArgumentNullException">The <paramref name="applicationToInvite" /> argument specifies an empty <see cref="T:System.Guid" />.</exception>
      <exception cref="T:System.ArgumentException">The <paramref name="userToken" /> argument specifies null.</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Net.PeerToPeer.Collaboration.PeerNearMe.InviteAsync(System.Object)">
      <summary>Receives an invitation response from a peer regarding joining a peer collaboration application.</summary>
      <param name="userToken">User-defined object passed to the callback of the asynchronous operation for identification. This required parameter must be unique across all asynchronous invitation operations still in-progress.</param>
      <exception cref="T:System.ObjectDisposedException">The <see cref="T:System.Net.PeerToPeer.Collaboration.PeerApplication" /> object has been disposed.</exception>
      <exception cref="T:System.ArgumentException">The <paramref name="userToken" /> argument specifies null.</exception>
      <exception cref="T:System.Net.PeerToPeer.PeerToPeerException">This <see cref="T:System.Net.PeerToPeer.Collaboration.PeerApplication" /> object does not specify a valid <see cref="T:System.Guid" />.</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.Net.PeerToPeer.Collaboration.PeerNearMe.Nickname">
      <summary>Gets or sets a <see cref="T:System.String" /> representing the Nickname of the <see cref="T:System.Net.PeerToPeer.Collaboration.PeerNearMe" /> object.</summary>
      <returns>
        <see cref="T:System.String" /> that represents the Nickname of the <see cref="T:System.Net.PeerToPeer.Collaboration.PeerNearMe" /> object.</returns>
      <exception cref="T:System.ObjectDisposedException">The <see cref="T:System.Net.PeerToPeer.Collaboration.PeerNearMe" /> object has been disposed.</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Net.PeerToPeer.Collaboration.PeerNearMe.OnRefreshDataCompleted(System.Net.PeerToPeer.Collaboration.RefreshDataCompletedEventArgs)">
      <summary>Signals the <see cref="E:System.Net.PeerToPeer.Collaboration.PeerNearMe.RefreshDataCompleted" /> event.</summary>
      <param name="e">Event data contained in a <see cref="T:System.Net.PeerToPeer.Collaboration.RefreshDataCompletedEventArgs" /> instance.</param>
    </member>
    <member name="E:System.Net.PeerToPeer.Collaboration.PeerNearMe.PeerNearMeChanged">
      <summary>Signaled when a new <see cref="T:System.Net.PeerToPeer.Collaboration.PeerNearMe" /> instance is found, no longer available, or the associated <see cref="T:System.Net.PeerToPeer.Collaboration.PeerEndPoint" /> object information has changed.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Net.PeerToPeer.Collaboration.PeerNearMe.RefreshData">
      <summary>Initiates a network operation to retrieve the application, object and presence data specific to a <see cref="T:System.Net.PeerToPeer.Collaboration.PeerNearMe" /> instance.</summary>
      <exception cref="T:System.ObjectDisposedException">The <see cref="T:System.Net.PeerToPeer.Collaboration.PeerNearMe" /> object has been disposed.</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Net.PeerToPeer.Collaboration.PeerNearMe.RefreshDataAsync(System.Object)">
      <summary>Initiates a network operation to retrieve the application, object and presence data specific to a <see cref="T:System.Net.PeerToPeer.Collaboration.PeerNearMe" /> instance.</summary>
      <param name="userToken">User-specified state object that is passed to the delegate when this method completes the operation.</param>
      <exception cref="T:System.ObjectDisposedException">The <see cref="T:System.Net.PeerToPeer.Collaboration.PeerNearMe" /> object has been disposed.</exception>
      <exception cref="T:System.ArgumentNullException">The <paramref name="userToken" /> argument specifies null.</exception>
      <exception cref="T:System.Net.PeerToPeer.PeerToPeerException">The prior <see cref="M:System.Net.PeerToPeer.Collaboration.PeerNearMe.RefreshDataAsync(System.Object)" /> call has not yet completed.</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="E:System.Net.PeerToPeer.Collaboration.PeerNearMe.RefreshDataCompleted">
      <summary>Signaled when the <see cref="M:System.Net.PeerToPeer.Collaboration.PeerNearMe.RefreshData" /> or <see cref="M:System.Net.PeerToPeer.Collaboration.PeerNearMe.RefreshDataAsync(System.Object)" /> operation for the <see cref="T:System.Net.PeerToPeer.Collaboration.PeerNearMe" /> instance is completed.</summary>
      <exception cref="T:System.ObjectDisposedException">The <see cref="T:System.Net.PeerToPeer.Collaboration.PeerNearMe" /> object has been disposed.</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Net.PeerToPeer.Collaboration.PeerNearMe.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Populates the current <see cref="T:System.Net.PeerToPeer.Collaboration.PeerNearMe" /> instance with the data obtained from the serialized source.</summary>
      <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> to populate with data.</param>
      <param name="context">The destination for the serialization.</param>
    </member>
    <member name="M:System.Net.PeerToPeer.Collaboration.PeerNearMe.ToString">
      <summary>Returns <see cref="T:System.String" /> that represents a <see cref="T:System.Net.PeerToPeer.Collaboration.PeerNearMe" /> instance.</summary>
      <returns>
        <see cref="T:System.String" /> representing the <see cref="T:System.Net.PeerToPeer.Collaboration.PeerObject" />.</returns>
      <exception cref="T:System.ObjectDisposedException">The <see cref="T:System.Net.PeerToPeer.Collaboration.PeerNearMe" /> object has been disposed.</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="T:System.Net.PeerToPeer.Collaboration.PeerNearMeChangedEventArgs">
      <summary>Provides qualifying information to a callback method when a <see cref="E:System.Net.PeerToPeer.Collaboration.PeerNearMe.PeerNearMeChanged" /> event occurs.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.Net.PeerToPeer.Collaboration.PeerNearMeChangedEventArgs.PeerChangeType">
      <summary>Gets the type of change to the <see cref="T:System.Net.PeerToPeer.Collaboration.PeerNearMe" /> object that has occurred.</summary>
      <returns>
        <see cref="T:System.Net.PeerToPeer.Collaboration.PeerChangeType" /> object that specifies the type of change to the <see cref="T:System.Net.PeerToPeer.Collaboration.PeerNearMe" /> instance that occurred.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.Net.PeerToPeer.Collaboration.PeerNearMeChangedEventArgs.PeerNearMe">
      <summary>Gets the instance of <see cref="T:System.Net.PeerToPeer.Collaboration.PeerNearMe" /> that has changed.</summary>
      <returns>The <see cref="T:System.Net.PeerToPeer.Collaboration.PeerNearMe" /> object that has changed.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="T:System.Net.PeerToPeer.Collaboration.PeerNearMeCollection">
      <summary>Represents a container for elements of a <see cref="T:System.Net.PeerToPeer.Collaboration.PeerNearMe" /> object. An instance of this type is returned by the <see cref="M:System.Net.PeerToPeer.Collaboration.PeerCollaboration.GetPeersNearMe" /> static method.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Net.PeerToPeer.Collaboration.PeerNearMeCollection.InsertItem(System.Int32,System.Net.PeerToPeer.Collaboration.PeerNearMe)">
      <summary>Inserts a new <see cref="T:System.Net.PeerToPeer.Collaboration.PeerNearMe" /> element into the <see cref="T:System.Net.PeerToPeer.Collaboration.PeerNearMeCollection" /> at the specified index or key.</summary>
      <param name="index">The zero-based index in which the element resides.</param>
      <param name="item">The new value for the element in the specified index.</param>
      <exception cref="T:System.ArgumentNullException">The <paramref name="item" /> argument is null.</exception>
    </member>
    <member name="M:System.Net.PeerToPeer.Collaboration.PeerNearMeCollection.SetItem(System.Int32,System.Net.PeerToPeer.Collaboration.PeerNearMe)">
      <summary>Replaces the <see cref="T:System.Net.PeerToPeer.Collaboration.PeerNearMe" /> element at the specified index.</summary>
      <param name="index">The zero-based index in which the element resides.</param>
      <param name="item">The new value for the element in the specified index.</param>
      <exception cref="T:System.ArgumentNullException">The <paramref name="item" /> argument is null.</exception>
    </member>
    <member name="M:System.Net.PeerToPeer.Collaboration.PeerNearMeCollection.ToString">
      <summary>Returns a string representation of the current value for each instance of <see cref="T:System.Net.PeerToPeer.Collaboration.PeerNearMe" />, separated by commas.</summary>
      <returns>Unicode string representing the current value for each instance of <see cref="T:System.Net.PeerToPeer.Collaboration.PeerNearMe" />.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="T:System.Net.PeerToPeer.Collaboration.PeerObject">
      <summary>Represents a new instance of the PeerObject class with an auto-generated <see cref="T:System.Guid" />.  </summary>
    </member>
    <member name="M:System.Net.PeerToPeer.Collaboration.PeerObject.#ctor">
      <summary>Initializes a new default instance of the <see cref="T:System.Net.PeerToPeer.Collaboration.PeerObject" /> class.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Net.PeerToPeer.Collaboration.PeerObject.#ctor(System.Guid,System.Byte[],System.Net.PeerToPeer.Collaboration.PeerScope)">
      <summary>Initializes a new <see cref="T:System.Net.PeerToPeer.Collaboration.PeerObject" /> instance with the associated scope and data. </summary>
      <param name="Id">The user-defined identifier for the <see cref="T:System.Net.PeerToPeer.Collaboration.PeerObject" />.</param>
      <param name="data">A data blob that contains information about the <see cref="T:System.Net.PeerToPeer.Collaboration.PeerObject" />. This parameter is limited a size that is less than or equal to 16K.</param>
      <param name="peerScope">Specifies the scope in which the <see cref="T:System.Net.PeerToPeer.Collaboration.PeerObject" /> is to be registered. </param>
      <exception cref="T:System.ArgumentException">One of the arguments provided to this method is not valid.</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Net.PeerToPeer.Collaboration.PeerObject.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Initializes a new <see cref="T:System.Net.PeerToPeer.Collaboration.PeerObject" /> instance with the associated parameters required for serialization.</summary>
      <param name="serializationInfo">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> associated with the <see cref="T:System.Net.PeerToPeer.Collaboration.PeerObject" />.</param>
      <param name="streamingContext">The serialization destination associated with the <see cref="T:System.Net.PeerToPeer.Collaboration.PeerObject" />.</param>
    </member>
    <member name="P:System.Net.PeerToPeer.Collaboration.PeerObject.Data">
      <summary>Gets or sets descriptive data associated with the <see cref="T:System.Net.PeerToPeer.Collaboration.PeerObject" /> instance for a Peer Collaboration application.</summary>
      <returns>Descriptive data (such as text or a small image) associated with the <see cref="T:System.Net.PeerToPeer.Collaboration.PeerObject" />.</returns>
      <exception cref="T:System.ObjectDisposedException">The <see cref="T:System.Net.PeerToPeer.Collaboration.PeerObject" /> instance has been disposed.</exception>
      <exception cref="T:System.ArgumentException">One of the arguments provided to this method is not valid.</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Net.PeerToPeer.Collaboration.PeerObject.Dispose">
      <summary>Releases all resources utilized by the <see cref="T:System.Net.PeerToPeer.Collaboration.PeerObject" />.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Net.PeerToPeer.Collaboration.PeerObject.Dispose(System.Boolean)">
      <summary>Releases the unmanaged resources used by the <see cref="T:System.Net.PeerToPeer.Collaboration.PeerObject" /> and optionally releases the managed resources.</summary>
      <param name="disposing">Set to true to release both managed and unmanaged resources; false to release only unmanaged resources.</param>
    </member>
    <member name="M:System.Net.PeerToPeer.Collaboration.PeerObject.Equals(System.Net.PeerToPeer.Collaboration.PeerObject)">
      <summary>Compares a <see cref="T:System.Net.PeerToPeer.Collaboration.PeerObject" /> to the specified <see cref="T:System.Net.PeerToPeer.Collaboration.PeerObject" /> instance.</summary>
      <returns>Returns true if the <see cref="T:System.Net.PeerToPeer.Collaboration.PeerObject" /> instance provided has matching data, else false.</returns>
      <param name="other">The <see cref="T:System.Net.PeerToPeer.Collaboration.PeerObject" /> instance to test for equality.</param>
      <exception cref="T:System.ObjectDisposedException">The <see cref="T:System.Net.PeerToPeer.Collaboration.PeerObject" /> instance specified by <paramref name="other" /> has been disposed.</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Net.PeerToPeer.Collaboration.PeerObject.Equals(System.Object)">
      <summary>Compares the <see cref="T:System.Net.PeerToPeer.Collaboration.PeerObject" /> to the specified object.</summary>
      <returns>Returns true if the <see cref="T:System.Net.PeerToPeer.Collaboration.PeerObject" />instance provided has matching data, else false.</returns>
      <param name="obj"> The object to test for equality.</param>
      <exception cref="T:System.ObjectDisposedException">The object specified by <paramref name="obj" /> has been disposed.</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Net.PeerToPeer.Collaboration.PeerObject.Equals(System.Object,System.Object)">
      <summary>Determines whether the specified <see cref="T:System.Net.PeerToPeer.Collaboration.PeerObject" /> instances are considered equal.</summary>
      <returns>Returns true if the <see cref="T:System.Net.PeerToPeer.Collaboration.PeerObject" /> instances provided have matching data, else false.</returns>
      <param name="objA">The first <see cref="T:System.Net.PeerToPeer.Collaboration.PeerObject" /> to compare.</param>
      <param name="objB">The second <see cref="T:System.Net.PeerToPeer.Collaboration.PeerObject" /> to compare.</param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Net.PeerToPeer.Collaboration.PeerObject.GetHashCode">
      <summary>Returns the hash code for the <see cref="T:System.Net.PeerToPeer.Collaboration.PeerObject" /> instance.</summary>
      <returns>A 32-bit signed integer hash code used to compare instances of this type.</returns>
      <exception cref="T:System.ObjectDisposedException">The <see cref="T:System.Net.PeerToPeer.Collaboration.PeerObject" /> instance has been disposed.</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Net.PeerToPeer.Collaboration.PeerObject.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Populates a <see cref="T:System.Runtime.Serialization.SerializationInfo" /> with the data required to serialize the specified <see cref="T:System.Net.PeerToPeer.Collaboration.PeerObject" />.</summary>
      <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> instance to populate with data.</param>
      <param name="context">The destination for the serialization.</param>
    </member>
    <member name="P:System.Net.PeerToPeer.Collaboration.PeerObject.Id">
      <summary>Gets or sets a <see cref="T:System.Guid" /> associated with the <see cref="T:System.Net.PeerToPeer.Collaboration.PeerObject" /> instance.</summary>
      <returns>
        <see cref="T:System.Guid" /> associated with the <see cref="T:System.Net.PeerToPeer.Collaboration.PeerObject" />.</returns>
      <exception cref="T:System.ObjectDisposedException">The <see cref="T:System.Net.PeerToPeer.Collaboration.PeerObject" /> instance has been disposed.</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="E:System.Net.PeerToPeer.Collaboration.PeerObject.ObjectChanged">
      <summary>Signaled when a <see cref="T:System.Net.PeerToPeer.Collaboration.PeerObject" /> instance changes.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Net.PeerToPeer.Collaboration.PeerObject.OnObjectChanged(System.Net.PeerToPeer.Collaboration.ObjectChangedEventArgs)">
      <summary>Signaled when a <see cref="T:System.Net.PeerToPeer.Collaboration.PeerObject" /> instance with the specified ID is added, updated or removed by a remote peer. </summary>
      <param name="objChangedArgs">Type of object change specified by <see cref="T:System.Net.PeerToPeer.Collaboration.ObjectChangedEventArgs" />.</param>
    </member>
    <member name="P:System.Net.PeerToPeer.Collaboration.PeerObject.PeerScope">
      <summary>Gets or sets the <see cref="T:System.Net.PeerToPeer.Collaboration.PeerScope" /> in which the <see cref="T:System.Net.PeerToPeer.Collaboration.PeerObject" /> instance is registered.</summary>
      <returns>PeerScope that specifies the scope in which the <see cref="T:System.Net.PeerToPeer.Collaboration.PeerObject" /> is registered.</returns>
      <exception cref="T:System.ObjectDisposedException">The <see cref="T:System.Net.PeerToPeer.Collaboration.PeerObject" /> instance has been disposed.</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.Net.PeerToPeer.Collaboration.PeerObject.SynchronizingObject">
      <summary>Gets or sets the object used to marshal the event handler calls that are issued as a result of a <see cref="T:System.Net.PeerToPeer.Collaboration.PeerObject" /> instance change.</summary>
      <returns>Object with an implementation of the <see cref="T:System.ComponentModel.ISynchronizeInvoke" /> interface. This object is used for event handler synchronization.</returns>
      <exception cref="T:System.ObjectDisposedException">The calling object has been disposed.</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Net.PeerToPeer.Collaboration.PeerObject.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Populates the current <see cref="T:System.Net.PeerToPeer.Collaboration.PeerObject" /> instance with the data obtained from the serialized source.</summary>
      <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> to populate with data.</param>
      <param name="context">The destination for the serialization.</param>
    </member>
    <member name="M:System.Net.PeerToPeer.Collaboration.PeerObject.ToString">
      <summary>Returns a <see cref="T:System.String" /> that represents a <see cref="T:System.Net.PeerToPeer.Collaboration.PeerObject" /> instance.</summary>
      <exception cref="T:System.ObjectDisposedException">The <see cref="T:System.Net.PeerToPeer.Collaboration.PeerObject" /> instance has been disposed.</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="T:System.Net.PeerToPeer.Collaboration.PeerObjectCollection">
      <summary>Represents a container for elements of a <see cref="T:System.Net.PeerToPeer.Collaboration.PeerObject" /> instance.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Net.PeerToPeer.Collaboration.PeerObjectCollection.InsertItem(System.Int32,System.Net.PeerToPeer.Collaboration.PeerObject)">
      <summary>Inserts a new <see cref="T:System.Net.PeerToPeer.Collaboration.PeerObject" /> element into the <see cref="T:System.Net.PeerToPeer.Collaboration.PeerObjectCollection" /> at the specified index or key.</summary>
      <param name="index">The zero-based index in which the element resides.</param>
      <param name="item">The new value for the element in the specified index.</param>
      <exception cref="T:System.ArgumentNullException">The <paramref name="item" /> argument is null.</exception>
    </member>
    <member name="M:System.Net.PeerToPeer.Collaboration.PeerObjectCollection.SetItem(System.Int32,System.Net.PeerToPeer.Collaboration.PeerObject)">
      <summary>Replaces the <see cref="T:System.Net.PeerToPeer.Collaboration.PeerObject" /> element at the specified index.</summary>
      <param name="index">The zero-based index in which the element resides.</param>
      <param name="item">The new value for the element in the specified index.</param>
      <exception cref="T:System.ArgumentNullException">The <paramref name="item" /> argument is null.</exception>
    </member>
    <member name="M:System.Net.PeerToPeer.Collaboration.PeerObjectCollection.ToString">
      <summary>Returns a string representation of the current value for each instance of <see cref="T:System.Net.PeerToPeer.Collaboration.PeerObject" />, separated by commas.</summary>
      <returns>String representing the current value for each instance of PeerObject, separated by commas.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="T:System.Net.PeerToPeer.Collaboration.PeerPresenceInfo">
      <summary>Represents the presence information of a peer.</summary>
    </member>
    <member name="M:System.Net.PeerToPeer.Collaboration.PeerPresenceInfo.#ctor">
      <summary>Initializes a new default instance of a <see cref="T:System.Net.PeerToPeer.Collaboration.PeerPresenceInfo" /> object.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Net.PeerToPeer.Collaboration.PeerPresenceInfo.#ctor(System.Net.PeerToPeer.Collaboration.PeerPresenceStatus,System.String)">
      <summary>Initializes an instance of a <see cref="T:System.Net.PeerToPeer.Collaboration.PeerPresenceInfo" /> object that includes a Unicode string describing the presence status the local peer.</summary>
      <param name="presenceStatus"> Status of the Peer.</param>
      <param name="description"> Description of the presence state.</param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.Net.PeerToPeer.Collaboration.PeerPresenceInfo.DescriptiveText">
      <summary>Gets or sets a Unicode string further describing the presence status for the local peer.</summary>
      <returns>Unicode string describing the presence status of a peer.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.Net.PeerToPeer.Collaboration.PeerPresenceInfo.PresenceStatus">
      <summary>Gets or sets the presence status of the local peer. </summary>
      <returns>
        <see cref="T:System.Net.PeerToPeer.Collaboration.PeerPresenceStatus" /> enumeration that specifies the presence status of a peer.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="T:System.Net.PeerToPeer.Collaboration.PeerPresenceStatus">
      <summary>Specifies the presence status of a peer.</summary>
    </member>
    <member name="F:System.Net.PeerToPeer.Collaboration.PeerPresenceStatus.Offline">
      <summary>Specifies that the peer is Offline.</summary>
    </member>
    <member name="F:System.Net.PeerToPeer.Collaboration.PeerPresenceStatus.OutToLunch">
      <summary>Specifies that the peer is currently "Out to Lunch" and unable to respond.</summary>
    </member>
    <member name="F:System.Net.PeerToPeer.Collaboration.PeerPresenceStatus.Away">
      <summary>Specifies that the peer is "Away" and unable to respond.</summary>
    </member>
    <member name="F:System.Net.PeerToPeer.Collaboration.PeerPresenceStatus.BeRightBack">
      <summary>Specifies that the peer has stepped away from the application and will participate soon.</summary>
    </member>
    <member name="F:System.Net.PeerToPeer.Collaboration.PeerPresenceStatus.Idle">
      <summary>Specifies that the peer is idling.</summary>
    </member>
    <member name="F:System.Net.PeerToPeer.Collaboration.PeerPresenceStatus.Busy">
      <summary>Specifies that the peer is "Busy" and does not wish to be disturbed.</summary>
    </member>
    <member name="F:System.Net.PeerToPeer.Collaboration.PeerPresenceStatus.OnThePhone">
      <summary>Specifies that the peer is currently on the phone and does not wish to be disturbed.</summary>
    </member>
    <member name="F:System.Net.PeerToPeer.Collaboration.PeerPresenceStatus.Online">
      <summary>Specifies that the peer is actively participating in the Peer Collaboration network.</summary>
    </member>
    <member name="T:System.Net.PeerToPeer.Collaboration.PeerScope">
      <summary>Specifies the current network scope of a peer.</summary>
    </member>
    <member name="F:System.Net.PeerToPeer.Collaboration.PeerScope.None">
      <summary>Specifies that a peer not sign-in to a Peer Collaboration scope. Passing this value to the <see cref="M:System.Net.PeerToPeer.Collaboration.PeerCollaboration.SignIn(System.Net.PeerToPeer.Collaboration.PeerScope)" /> method generates no result.</summary>
    </member>
    <member name="F:System.Net.PeerToPeer.Collaboration.PeerScope.NearMe">
      <summary>Specifies sign-in to the 'NearMe' scope. This scope facilitates connections to all peers on the same subnet via Peer Collaboration Methods.</summary>
    </member>
    <member name="F:System.Net.PeerToPeer.Collaboration.PeerScope.Internet">
      <summary>Specifies sign-in to the 'Internet' scope. This scope facilitates connections with all contacts in the Contact Manager.</summary>
    </member>
    <member name="F:System.Net.PeerToPeer.Collaboration.PeerScope.All">
      <summary>Specifies sign-in to the 'NearMe' scope and 'Internet' scope.</summary>
    </member>
    <member name="T:System.Net.PeerToPeer.Collaboration.PresenceChangedEventArgs">
      <summary>Provides qualifying information to a callback method when a <see cref="E:System.Net.PeerToPeer.Collaboration.ContactManager.PresenceChanged" /> or <see cref="E:System.Net.PeerToPeer.Collaboration.PeerCollaboration.LocalPresenceChanged" /> event occurs.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.Net.PeerToPeer.Collaboration.PresenceChangedEventArgs.PeerChangeType">
      <summary>Specifies the type of change that has occurred to the presence status of a peer.</summary>
      <returns>
        <see cref="T:System.Net.PeerToPeer.Collaboration.PeerChangeType" /> object containing data that specifies the type of change that has occurred to the presence status of a peer.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.Net.PeerToPeer.Collaboration.PresenceChangedEventArgs.PeerContact">
      <summary>Specifies the <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" /> on which the presence information has changed. </summary>
      <returns>
        <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" /> object associated with the <see cref="T:System.Net.PeerToPeer.Collaboration.PeerEndPoint" /> on which the presence information has changed.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.Net.PeerToPeer.Collaboration.PresenceChangedEventArgs.PeerEndPoint">
      <summary>Specifies the <see cref="T:System.Net.PeerToPeer.Collaboration.PeerEndPoint" /> on which the presence information has changed.</summary>
      <returns>
        <see cref="T:System.Net.PeerToPeer.Collaboration.PeerEndPoint" /> on which the presence information has changed.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.Net.PeerToPeer.Collaboration.PresenceChangedEventArgs.PeerPresenceInfo">
      <summary>Specifies the changed presence information of a <see cref="T:System.Net.PeerToPeer.Collaboration.PeerEndPoint" /> as well as a string provided by <see cref="T:System.Net.PeerToPeer.Collaboration.PeerPresenceInfo" /> describing the updated presence status.</summary>
      <returns>Changed presence information for <see cref="T:System.Net.PeerToPeer.Collaboration.PeerEndPoint" /> and a string describing the updated presence status.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="T:System.Net.PeerToPeer.Collaboration.RefreshDataCompletedEventArgs">
      <summary>Provides qualifying information to the <see cref="M:System.Net.PeerToPeer.Collaboration.PeerNearMe.OnRefreshDataCompleted(System.Net.PeerToPeer.Collaboration.RefreshDataCompletedEventArgs)" /> method when <see cref="E:System.Net.PeerToPeer.Collaboration.PeerNearMe.RefreshDataCompleted" /> events occur.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.Net.PeerToPeer.Collaboration.RefreshDataCompletedEventArgs.PeerEndPoint">
      <summary>Specifies the updated <see cref="T:System.Net.PeerToPeer.Collaboration.PeerEndPoint" />.</summary>
      <returns>The updated <see cref="T:System.Net.PeerToPeer.Collaboration.PeerEndPoint" /> object containing the endpoint data of a peer.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="T:System.Net.PeerToPeer.Collaboration.SubscribeCompletedEventArgs">
      <summary>Provides qualifying information to a callback method when a <see cref="E:System.Net.PeerToPeer.Collaboration.PeerContact.SubscribeCompleted" /> event is signaled.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.Net.PeerToPeer.Collaboration.SubscribeCompletedEventArgs.PeerContact">
      <summary>Specifies the <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" /> for which the subscription was requested. </summary>
      <returns>
        <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" /> object for which a subscription was requested.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.Net.PeerToPeer.Collaboration.SubscribeCompletedEventArgs.PeerNearMe">
      <summary>Specifies the <see cref="T:System.Net.PeerToPeer.Collaboration.PeerNearMe" /> for which the subscription is requested. </summary>
      <returns>
        <see cref="T:System.Net.PeerToPeer.Collaboration.PeerNearMe" /> object for which a subscription was requested.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="T:System.Net.PeerToPeer.Collaboration.SubscriptionListChangedEventArgs">
      <summary>Provides qualifying information to a callback method when a <see cref="E:System.Net.PeerToPeer.Collaboration.ContactManager.SubscriptionListChanged" /> event is signaled.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.Net.PeerToPeer.Collaboration.SubscriptionListChangedEventArgs.PeerChangeType">
      <summary>Specifies the type of change that has occurred.</summary>
      <returns>
        <see cref="T:System.Net.PeerToPeer.Collaboration.PeerChangeType" /> enumeration that specifies the type of change performed on the Subscription List.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.Net.PeerToPeer.Collaboration.SubscriptionListChangedEventArgs.PeerContact">
      <summary>Specifies the <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" /> for which the Subscription List was changed.</summary>
      <returns>
        <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" /> object for which the Subscription List was changed.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.Net.PeerToPeer.Collaboration.SubscriptionListChangedEventArgs.PeerEndPoint">
      <summary>Specifies the <see cref="T:System.Net.PeerToPeer.Collaboration.PeerEndPoint" /> for which the subscription notification was received.</summary>
      <returns>
        <see cref="T:System.Net.PeerToPeer.Collaboration.PeerEndPoint" /> object for which the Subscription List was changed.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="T:System.Net.PeerToPeer.Collaboration.SubscriptionType">
      <summary>Specifies if a remote peer subscribed to the local peer can receive event notifications.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="F:System.Net.PeerToPeer.Collaboration.SubscriptionType.Blocked">
      <summary>Specifies that a remote peer can subscribe to the local peer, but will not receive event notifications.</summary>
    </member>
    <member name="F:System.Net.PeerToPeer.Collaboration.SubscriptionType.Allowed">
      <summary>Specifies that a remote peer can subscribe to the local peer as well as receive event notifications.</summary>
    </member>
  </members>
</doc>
=== C:/Users/treeman/Desktop/windows nt source code\xbox\Xbox Live Source\XONLINE_MAIN\public\ext\sdk\CLR\netfx40rtm\Profile\Client\System.Numerics.xml ===
﻿<?xml version="1.0" encoding="utf-8"?>
<doc>
  <assembly>
    <name>System.Numerics</name>
  </assembly>
  <members>
    <member name="T:System.Numerics.BigInteger">
      <summary>Represents an arbitrarily large signed integer.</summary>
    </member>
    <member name="M:System.Numerics.BigInteger.#ctor(System.Byte[])">
      <summary>Initializes a new instance of the <see cref="T:System.Numerics.BigInteger" /> structure using the values in a byte array.</summary>
      <param name="value">An array of byte values in little-endian order.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="value" /> is null.</exception>
    </member>
    <member name="M:System.Numerics.BigInteger.#ctor(System.Decimal)">
      <summary>Initializes a new instance of the <see cref="T:System.Numerics.BigInteger" /> structure using a <see cref="T:System.Decimal" /> value.</summary>
      <param name="value">A decimal number.</param>
    </member>
    <member name="M:System.Numerics.BigInteger.#ctor(System.Double)">
      <summary>Initializes a new instance of the <see cref="T:System.Numerics.BigInteger" /> structure using a double-precision floating-point value.</summary>
      <param name="value">A double-precision floating-point value.</param>
      <exception cref="T:System.OverflowException">The value of <paramref name="value" /> is <see cref="F:System.Double.NaN" />.-or-The value of <paramref name="value" /> is <see cref="F:System.Double.NegativeInfinity" />.-or-The value of <paramref name="value" /> is <see cref="F:System.Double.PositiveInfinity" />.</exception>
    </member>
    <member name="M:System.Numerics.BigInteger.#ctor(System.Int32)">
      <summary>Initializes a new instance of the <see cref="T:System.Numerics.BigInteger" /> structure using a 32-bit signed integer value.</summary>
      <param name="value">A 32-bit signed integer.</param>
    </member>
    <member name="M:System.Numerics.BigInteger.#ctor(System.Int64)">
      <summary>Initializes a new instance of the <see cref="T:System.Numerics.BigInteger" /> structure using a 64-bit signed integer value.</summary>
      <param name="value">A 64-bit signed integer.</param>
    </member>
    <member name="M:System.Numerics.BigInteger.#ctor(System.Single)">
      <summary>Initializes a new instance of the <see cref="T:System.Numerics.BigInteger" /> structure using a single-precision floating-point value.</summary>
      <param name="value">A single-precision floating-point value.</param>
      <exception cref="T:System.OverflowException">The value of <paramref name="value" /> is <see cref="F:System.Single.NaN" />.-or-The value of <paramref name="value" /> is <see cref="F:System.Single.NegativeInfinity" />.-or-The value of <paramref name="value" /> is <see cref="F:System.Single.PositiveInfinity" />.</exception>
    </member>
    <member name="M:System.Numerics.BigInteger.#ctor(System.UInt32)">
      <summary>Initializes a new instance of the <see cref="T:System.Numerics.BigInteger" /> structure using an unsigned 32-bit integer value.</summary>
      <param name="value">An unsigned 32-bit integer value.</param>
    </member>
    <member name="M:System.Numerics.BigInteger.#ctor(System.UInt64)">
      <summary>Initializes a new instance of the <see cref="T:System.Numerics.BigInteger" /> structure with an unsigned 64-bit integer value.</summary>
      <param name="value">An unsigned 64-bit integer.</param>
    </member>
    <member name="M:System.Numerics.BigInteger.Abs(System.Numerics.BigInteger)">
      <summary>Gets the absolute value of a <see cref="T:System.Numerics.BigInteger" /> object.</summary>
      <returns>The absolute value of <paramref name="value" />.</returns>
      <param name="value">A number.</param>
    </member>
    <member name="M:System.Numerics.BigInteger.Add(System.Numerics.BigInteger,System.Numerics.BigInteger)">
      <summary>Adds two <see cref="T:System.Numerics.BigInteger" /> values and returns the result.</summary>
      <returns>The sum of <paramref name="left" /> and <paramref name="right" />.</returns>
      <param name="left">The first value to add.</param>
      <param name="right">The second value to add.</param>
    </member>
    <member name="M:System.Numerics.BigInteger.Compare(System.Numerics.BigInteger,System.Numerics.BigInteger)">
      <summary>Compares two <see cref="T:System.Numerics.BigInteger" /> values and returns an integer that indicates whether the first value is less than, equal to, or greater than the second value.</summary>
      <returns>A signed integer that indicates the relative values of <paramref name="left" /> and <paramref name="right" />, as shown in the following table.ValueConditionLess than zero<paramref name="left" /> is less than <paramref name="right" />.Zero<paramref name="left" /> equals <paramref name="right" />.Greater than zero<paramref name="left" /> is greater than <paramref name="right" />.</returns>
      <param name="left">The first value to compare.</param>
      <param name="right">The second value to compare.</param>
    </member>
    <member name="M:System.Numerics.BigInteger.CompareTo(System.Int64)">
      <summary>Compares this instance to a signed 64-bit integer and returns an integer that indicates whether the value of this instance is less than, equal to, or greater than the value of the signed 64-bit integer.</summary>
      <returns>A signed integer value that indicates the relationship of this instance to <paramref name="other" />, as shown in the following table.Return valueDescriptionLess than zeroThe current instance is less than <paramref name="other" />.ZeroThe current instance equals <paramref name="other" />.Greater than zeroThe current instance is greater than <paramref name="other" />.</returns>
      <param name="other">The signed 64-bit integer to compare.</param>
    </member>
    <member name="M:System.Numerics.BigInteger.CompareTo(System.Numerics.BigInteger)">
      <summary>Compares this instance to a second <see cref="T:System.Numerics.BigInteger" /> and returns an integer that indicates whether the value of this instance is less than, equal to, or greater than the value of the specified object.</summary>
      <returns>A signed integer value that indicates the relationship of this instance to <paramref name="other" />, as shown in the following table.Return valueDescriptionLess than zeroThe current instance is less than <paramref name="other" />.ZeroThe current instance equals <paramref name="other" />.Greater than zeroThe current instance is greater than <paramref name="other" />.</returns>
      <param name="other">The object to compare.</param>
    </member>
    <member name="M:System.Numerics.BigInteger.CompareTo(System.Object)">
      <summary>Compares this instance to a specified object and returns an integer that indicates whether the value of this instance is less than, equal to, or greater than the value of the specified object.</summary>
      <returns>A signed integer that indicates the relationship of the current instance to the <paramref name="obj" /> parameter, as shown in the following table.Return valueDescriptionLess than zeroThe current instance is less than <paramref name="obj" />.ZeroThe current instance equals <paramref name="obj" />.Greater than zeroThe current instance is greater than <paramref name="obj" />, or the <paramref name="obj" /> parameter is null. </returns>
      <param name="obj">The object to compare.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="obj" /> is not a <see cref="T:System.Numerics.BigInteger" />. </exception>
    </member>
    <member name="M:System.Numerics.BigInteger.CompareTo(System.UInt64)">
      <summary>Compares this instance to an unsigned 64-bit integer and returns an integer that indicates whether the value of this instance is less than, equal to, or greater than the value of the unsigned 64-bit integer.</summary>
      <returns>A signed integer that indicates the relative value of this instance and <paramref name="other" />, as shown in the following table.Return valueDescriptionLess than zeroThe current instance is less than <paramref name="other" />.ZeroThe current instance equals <paramref name="other" />.Greater than zeroThe current instance is greater than <paramref name="other" />.</returns>
      <param name="other">The unsigned 64-bit integer to compare.</param>
    </member>
    <member name="M:System.Numerics.BigInteger.Divide(System.Numerics.BigInteger,System.Numerics.BigInteger)">
      <summary>Divides one <see cref="T:System.Numerics.BigInteger" /> value by another and returns the result.</summary>
      <returns>The quotient of the division.</returns>
      <param name="dividend">The value to be divided.</param>
      <param name="divisor">The value to divide by.</param>
      <exception cref="T:System.DivideByZeroException">
        <paramref name="divisor" /> is 0 (zero).</exception>
    </member>
    <member name="M:System.Numerics.BigInteger.DivRem(System.Numerics.BigInteger,System.Numerics.BigInteger,System.Numerics.BigInteger@)">
      <summary>Divides one <see cref="T:System.Numerics.BigInteger" /> value by another, returns the result, and returns the remainder in an output parameter.</summary>
      <returns>The quotient of the division.</returns>
      <param name="dividend">The value to be divided.</param>
      <param name="divisor">The value to divide by.</param>
      <param name="remainder">When this method returns, contains a <see cref="T:System.Numerics.BigInteger" /> value that represents the remainder from the division. This parameter is passed uninitialized.</param>
      <exception cref="T:System.DivideByZeroException">
        <paramref name="divisor" /> is 0 (zero).</exception>
    </member>
    <member name="M:System.Numerics.BigInteger.Equals(System.Int64)">
      <summary>Returns a value that indicates whether the current instance and a signed 64-bit integer have the same value.</summary>
      <returns>true if the signed 64-bit integer and the current instance have the same value; otherwise, false.</returns>
      <param name="other">The signed 64-bit integer value to compare.</param>
    </member>
    <member name="M:System.Numerics.BigInteger.Equals(System.Numerics.BigInteger)">
      <summary>Returns a value that indicates whether the current instance and a specified <see cref="T:System.Numerics.BigInteger" /> object have the same value.</summary>
      <returns>true if this <see cref="T:System.Numerics.BigInteger" /> object and <paramref name="other" /> have the same value; otherwise, false.</returns>
      <param name="other">The object to compare.</param>
    </member>
    <member name="M:System.Numerics.BigInteger.Equals(System.Object)">
      <summary>Returns a value that indicates whether the current instance and a specified object have the same value.</summary>
      <returns>true if the <paramref name="obj" /> parameter is a <see cref="T:System.Numerics.BigInteger" /> object or a type capable of implicit conversion to a <see cref="T:System.Numerics.BigInteger" /> value, and its value is equal to the value of the current <see cref="T:System.Numerics.BigInteger" /> object; otherwise, false.</returns>
      <param name="obj">The object to compare. </param>
    </member>
    <member name="M:System.Numerics.BigInteger.Equals(System.UInt64)">
      <summary>Returns a value that indicates whether the current instance and an unsigned 64-bit integer have the same value.</summary>
      <returns>true if the current instance and the unsigned 64-bit integer have the same value; otherwise, false.</returns>
      <param name="other">The unsigned 64-bit integer to compare.</param>
    </member>
    <member name="M:System.Numerics.BigInteger.GetHashCode">
      <summary>Returns the hash code for the current <see cref="T:System.Numerics.BigInteger" /> object.</summary>
      <returns>A 32-bit signed integer hash code.</returns>
    </member>
    <member name="M:System.Numerics.BigInteger.GreatestCommonDivisor(System.Numerics.BigInteger,System.Numerics.BigInteger)">
      <summary>Finds the greatest common divisor of two <see cref="T:System.Numerics.BigInteger" /> values.</summary>
      <returns>The greatest common divisor of <paramref name="left" /> and <paramref name="right" />.</returns>
      <param name="left">The first value.</param>
      <param name="right">The second value.</param>
    </member>
    <member name="P:System.Numerics.BigInteger.IsEven">
      <summary>Indicates whether the value of the current <see cref="T:System.Numerics.BigInteger" /> object is an even number.</summary>
      <returns>true if the value of the <see cref="T:System.Numerics.BigInteger" /> object is an even number; otherwise, false.</returns>
    </member>
    <member name="P:System.Numerics.BigInteger.IsOne">
      <summary>Indicates whether the value of the current <see cref="T:System.Numerics.BigInteger" /> object is <see cref="P:System.Numerics.BigInteger.One" />.</summary>
      <returns>true if the value of the <see cref="T:System.Numerics.BigInteger" /> object is <see cref="P:System.Numerics.BigInteger.One" />; otherwise, false.</returns>
    </member>
    <member name="P:System.Numerics.BigInteger.IsPowerOfTwo">
      <summary>Indicates whether the value of the current <see cref="T:System.Numerics.BigInteger" /> object is a power of two.</summary>
      <returns>true if the value of the <see cref="T:System.Numerics.BigInteger" /> object is a power of two; otherwise, false.</returns>
    </member>
    <member name="P:System.Numerics.BigInteger.IsZero">
      <summary>Indicates whether the value of the current <see cref="T:System.Numerics.BigInteger" /> object is <see cref="P:System.Numerics.BigInteger.Zero" />.</summary>
      <returns>true if the value of the <see cref="T:System.Numerics.BigInteger" /> object is <see cref="P:System.Numerics.BigInteger.Zero" />; otherwise, false.</returns>
    </member>
    <member name="M:System.Numerics.BigInteger.Log(System.Numerics.BigInteger)">
      <summary>Returns the natural (base e) logarithm of a specified number.</summary>
      <returns>The natural (base e) logarithm of <paramref name="value" />, as shown in the table in the Remarks section.</returns>
      <param name="value">The number whose logarithm is to be found.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">The natural log of <paramref name="value" /> is out of range of the <see cref="T:System.Double" /> data type.</exception>
    </member>
    <member name="M:System.Numerics.BigInteger.Log(System.Numerics.BigInteger,System.Double)">
      <summary>Returns the logarithm of a specified number in a specified base.</summary>
      <returns>The base <paramref name="baseValue" /> logarithm of <paramref name="value" />, as shown in the table in the Remarks section.</returns>
      <param name="value">A number whose logarithm is to be found.</param>
      <param name="baseValue">The base of the logarithm.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">The log of <paramref name="value" /> is out of range of the <see cref="T:System.Double" /> data type.</exception>
    </member>
    <member name="M:System.Numerics.BigInteger.Log10(System.Numerics.BigInteger)">
      <summary>Returns the base 10 logarithm of a specified number.</summary>
      <returns>The base 10 logarithm of <paramref name="value" />, as shown in the table in the Remarks section.</returns>
      <param name="value">A number whose logarithm is to be found.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">The base 10 log of <paramref name="value" /> is out of range of the <see cref="T:System.Double" /> data type.</exception>
    </member>
    <member name="M:System.Numerics.BigInteger.Max(System.Numerics.BigInteger,System.Numerics.BigInteger)">
      <summary>Returns the larger of two <see cref="T:System.Numerics.BigInteger" /> values.</summary>
      <returns>The <paramref name="left" /> or <paramref name="right" /> parameter, whichever is larger.</returns>
      <param name="left">The first value to compare.</param>
      <param name="right">The second value to compare.</param>
    </member>
    <member name="M:System.Numerics.BigInteger.Min(System.Numerics.BigInteger,System.Numerics.BigInteger)">
      <summary>Returns the smaller of two <see cref="T:System.Numerics.BigInteger" /> values.</summary>
      <returns>The <paramref name="left" /> or <paramref name="right" /> parameter, whichever is smaller.</returns>
      <param name="left">The first value to compare.</param>
      <param name="right">The second value to compare.</param>
    </member>
    <member name="P:System.Numerics.BigInteger.MinusOne">
      <summary>Gets a value that represents the number negative one (-1).</summary>
      <returns>An integer whose value is negative one (-1).</returns>
    </member>
    <member name="M:System.Numerics.BigInteger.ModPow(System.Numerics.BigInteger,System.Numerics.BigInteger,System.Numerics.BigInteger)">
      <summary>Performs modulus division on a number raised to the power of another number.</summary>
      <returns>The remainder after dividing <paramref name="value" />exponent by <paramref name="modulus" />.</returns>
      <param name="value">The number to raise to the <paramref name="exponent" /> power.</param>
      <param name="exponent">The exponent to raise <paramref name="value" /> by.</param>
      <param name="modulus">The value to divide <paramref name="value" />exponent by.</param>
      <exception cref="T:System.DivideByZeroException">
        <paramref name="modulus" /> is zero.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="exponent" /> is negative.</exception>
    </member>
    <member name="M:System.Numerics.BigInteger.Multiply(System.Numerics.BigInteger,System.Numerics.BigInteger)">
      <summary>Returns the product of two <see cref="T:System.Numerics.BigInteger" /> values.</summary>
      <returns>The product of the <paramref name="left" /> and <paramref name="right" /> parameters.</returns>
      <param name="left">The first number to multiply.</param>
      <param name="right">The second number to multiply.</param>
    </member>
    <member name="M:System.Numerics.BigInteger.Negate(System.Numerics.BigInteger)">
      <summary>Negates a specified <see cref="T:System.Numerics.BigInteger" /> value.</summary>
      <returns>The result of the <paramref name="value" /> parameter multiplied by negative one (-1).</returns>
      <param name="value">The value to negate.</param>
    </member>
    <member name="P:System.Numerics.BigInteger.One">
      <summary>Gets a value that represents the number one (1).</summary>
      <returns>An object whose value is one (1).</returns>
    </member>
    <member name="M:System.Numerics.BigInteger.op_Addition(System.Numerics.BigInteger,System.Numerics.BigInteger)">
      <summary>Adds the values of two specified <see cref="T:System.Numerics.BigInteger" /> objects.</summary>
      <returns>The sum of <paramref name="left" /> and <paramref name="right" />.</returns>
      <param name="left">The first value to add.</param>
      <param name="right">The second value to add.</param>
    </member>
    <member name="M:System.Numerics.BigInteger.op_BitwiseAnd(System.Numerics.BigInteger,System.Numerics.BigInteger)">
      <summary>Performs a bitwise And operation on two <see cref="T:System.Numerics.BigInteger" /> values.</summary>
      <returns>The result of the bitwise And operation.</returns>
      <param name="left">The first value.</param>
      <param name="right">The second value.</param>
    </member>
    <member name="M:System.Numerics.BigInteger.op_BitwiseOr(System.Numerics.BigInteger,System.Numerics.BigInteger)">
      <summary>Performs a bitwise Or operation on two <see cref="T:System.Numerics.BigInteger" /> values.</summary>
      <returns>The result of the bitwise Or operation.</returns>
      <param name="left">The first value.</param>
      <param name="right">The second value.</param>
    </member>
    <member name="M:System.Numerics.BigInteger.op_Decrement(System.Numerics.BigInteger)">
      <summary>Decrements a <see cref="T:System.Numerics.BigInteger" /> value by 1.</summary>
      <returns>The value of the <paramref name="value" /> parameter decremented by 1.</returns>
      <param name="value">The value to decrement.</param>
    </member>
    <member name="M:System.Numerics.BigInteger.op_Division(System.Numerics.BigInteger,System.Numerics.BigInteger)">
      <summary>Divides a specified <see cref="T:System.Numerics.BigInteger" /> value by another specified <see cref="T:System.Numerics.BigInteger" /> value by using integer division.</summary>
      <returns>The integral result of the division.</returns>
      <param name="dividend">The value to be divided.</param>
      <param name="divisor">The value to divide by.</param>
      <exception cref="T:System.DivideByZeroException">
        <paramref name="divisor" /> is 0 (zero).</exception>
    </member>
    <member name="M:System.Numerics.BigInteger.op_Equality(System.Int64,System.Numerics.BigInteger)">
      <summary>Returns a value that indicates whether a signed long integer value and a <see cref="T:System.Numerics.BigInteger" /> value are equal.</summary>
      <returns>true if the <paramref name="left" /> and <paramref name="right" /> parameters have the same value; otherwise, false.</returns>
      <param name="left">The first value to compare.</param>
      <param name="right">The second value to compare.</param>
    </member>
    <member name="M:System.Numerics.BigInteger.op_Equality(System.Numerics.BigInteger,System.Int64)">
      <summary>Returns a value that indicates whether a <see cref="T:System.Numerics.BigInteger" /> value and a signed long integer value are equal.</summary>
      <returns>true if the <paramref name="left" /> and <paramref name="right" /> parameters have the same value; otherwise, false.</returns>
      <param name="left">The first value to compare.</param>
      <param name="right">The second value to compare.</param>
    </member>
    <member name="M:System.Numerics.BigInteger.op_Equality(System.Numerics.BigInteger,System.Numerics.BigInteger)">
      <summary>Returns a value that indicates whether the values of two <see cref="T:System.Numerics.BigInteger" /> objects are equal.</summary>
      <returns>true if the <paramref name="left" /> and <paramref name="right" /> parameters have the same value; otherwise, false.</returns>
      <param name="left">The first value to compare.</param>
      <param name="right">The second value to compare.</param>
    </member>
    <member name="M:System.Numerics.BigInteger.op_Equality(System.Numerics.BigInteger,System.UInt64)">
      <summary>Returns a value that indicates whether a <see cref="T:System.Numerics.BigInteger" /> value and an unsigned long integer value are equal.</summary>
      <returns>true if the <paramref name="left" /> and <paramref name="right" /> parameters have the same value; otherwise, false.</returns>
      <param name="left">The first value to compare.</param>
      <param name="right">The second value to compare.</param>
    </member>
    <member name="M:System.Numerics.BigInteger.op_Equality(System.UInt64,System.Numerics.BigInteger)">
      <summary>Returns a value that indicates whether an unsigned long integer value and a <see cref="T:System.Numerics.BigInteger" /> value are equal.</summary>
      <returns>true if the <paramref name="left" /> and <paramref name="right" /> parameters have the same value; otherwise, false.</returns>
      <param name="left">The first value to compare.</param>
      <param name="right">The second value to compare.</param>
    </member>
    <member name="M:System.Numerics.BigInteger.op_ExclusiveOr(System.Numerics.BigInteger,System.Numerics.BigInteger)">
      <summary>Performs a bitwise exclusive Or (XOr) operation on two <see cref="T:System.Numerics.BigInteger" /> values.</summary>
      <returns>The result of the bitwise Or operation.</returns>
      <param name="left">The first value.</param>
      <param name="right">The second value.</param>
    </member>
    <member name="M:System.Numerics.BigInteger.op_Explicit(System.Decimal)~System.Numerics.BigInteger">
      <summary>Defines an explicit conversion of a <see cref="T:System.Decimal" /> object to a <see cref="T:System.Numerics.BigInteger" /> value.</summary>
      <returns>An object that contains the value of the <paramref name="value" /> parameter.</returns>
      <param name="value">The value to convert to a <see cref="T:System.Numerics.BigInteger" />.</param>
    </member>
    <member name="M:System.Numerics.BigInteger.op_Explicit(System.Double)~System.Numerics.BigInteger">
      <summary>Defines an explicit conversion of a <see cref="T:System.Double" /> value to a <see cref="T:System.Numerics.BigInteger" /> value.</summary>
      <returns>An object that contains the value of the <paramref name="value" /> parameter.</returns>
      <param name="value">The value to convert to a <see cref="T:System.Numerics.BigInteger" />.</param>
      <exception cref="T:System.OverflowException">
        <paramref name="value" /> is <see cref="F:System.Double.NaN" />.-or-<paramref name="value" /> is <see cref="F:System.Double.PositiveInfinity" />.-or-<paramref name="value" /> is <see cref="F:System.Double.NegativeInfinity" />.</exception>
    </member>
    <member name="M:System.Numerics.BigInteger.op_Explicit(System.Numerics.BigInteger)~System.Byte">
      <summary>Defines an explicit conversion of a <see cref="T:System.Numerics.BigInteger" /> object to an unsigned byte value.</summary>
      <returns>An object that contains the value of the <paramref name="value" /> parameter.</returns>
      <param name="value">The value to convert to a <see cref="T:System.Byte" />.</param>
      <exception cref="T:System.OverflowException">
        <paramref name="value" /> is less than <see cref="F:System.Byte.MinValue" />. -or-<paramref name="value" /> is greater than <see cref="F:System.Byte.MaxValue" />.</exception>
    </member>
    <member name="M:System.Numerics.BigInteger.op_Explicit(System.Numerics.BigInteger)~System.Int32">
      <summary>Defines an explicit conversion of a <see cref="T:System.Numerics.BigInteger" /> object to a 32-bit signed integer value.</summary>
      <returns>An object that contains the value of the <paramref name="value" /> parameter.</returns>
      <param name="value">The value to convert to a 32-bit signed integer. </param>
      <exception cref="T:System.OverflowException">
        <paramref name="value" /> is less than <see cref="F:System.Int32.MinValue" />.-or-<paramref name="value" /> is greater than <see cref="F:System.Int32.MaxValue" />.</exception>
    </member>
    <member name="M:System.Numerics.BigInteger.op_Explicit(System.Numerics.BigInteger)~System.UInt64">
      <summary>Defines an explicit conversion of a <see cref="T:System.Numerics.BigInteger" /> object to an unsigned 64-bit integer value.</summary>
      <returns>An object that contains the value of the <paramref name="value" /> parameter.</returns>
      <param name="value">The value to convert to an unsigned 64-bit integer.</param>
      <exception cref="T:System.OverflowException">
        <paramref name="value" /> is less than <see cref="F:System.UInt64.MinValue" />.-or-<paramref name="value" /> is greater than <see cref="F:System.UInt64.MaxValue" />. </exception>
    </member>
    <member name="M:System.Numerics.BigInteger.op_Explicit(System.Numerics.BigInteger)~System.Single">
      <summary>Defines an explicit conversion of a <see cref="T:System.Numerics.BigInteger" /> object to a single-precision floating-point value.</summary>
      <returns>An object that contains the closest possible representation of the <paramref name="value" /> parameter.</returns>
      <param name="value">The value to convert to a single-precision floating-point value.</param>
    </member>
    <member name="M:System.Numerics.BigInteger.op_Explicit(System.Numerics.BigInteger)~System.Double">
      <summary>Defines an explicit conversion of a <see cref="T:System.Numerics.BigInteger" /> object to a <see cref="T:System.Double" /> value.</summary>
      <returns>An object that contains the value of the <paramref name="value" /> parameter.</returns>
      <param name="value">The value to convert to a <see cref="T:System.Double" />.</param>
    </member>
    <member name="M:System.Numerics.BigInteger.op_Explicit(System.Numerics.BigInteger)~System.Int64">
      <summary>Defines an explicit conversion of a <see cref="T:System.Numerics.BigInteger" /> object to a 64-bit signed integer value.</summary>
      <returns>An object that contains the value of the <paramref name="value" /> parameter.</returns>
      <param name="value">The value to convert to a 64-bit signed integer.</param>
      <exception cref="T:System.OverflowException">
        <paramref name="value" /> is less than <see cref="F:System.Int64.MinValue" />.-or-<paramref name="value" /> is greater than <see cref="F:System.Int64.MaxValue" />.</exception>
    </member>
    <member name="M:System.Numerics.BigInteger.op_Explicit(System.Numerics.BigInteger)~System.Int16">
      <summary>Defines an explicit conversion of a <see cref="T:System.Numerics.BigInteger" /> object to a 16-bit signed integer value.</summary>
      <returns>An object that contains the value of the <paramref name="value" /> parameter.</returns>
      <param name="value">The value to convert to a 16-bit signed integer.</param>
      <exception cref="T:System.OverflowException">
        <paramref name="value" /> is less than <see cref="F:System.Int16.MinValue" />.-or-<paramref name="value" /> is greater than <see cref="F:System.Int16.MaxValue" />.</exception>
    </member>
    <member name="M:System.Numerics.BigInteger.op_Explicit(System.Numerics.BigInteger)~System.SByte">
      <summary>Defines an explicit conversion of a <see cref="T:System.Numerics.BigInteger" /> object to a signed 8-bit value.</summary>
      <returns>An object that contains the value of the <paramref name="value" /> parameter.</returns>
      <param name="value">The value to convert to a signed 8-bit value.</param>
      <exception cref="T:System.OverflowException">
        <paramref name="value" /> is less than <see cref="F:System.SByte.MinValue" />.-or-<paramref name="value" /> is greater than <see cref="F:System.SByte.MaxValue" />.</exception>
    </member>
    <member name="M:System.Numerics.BigInteger.op_Explicit(System.Numerics.BigInteger)~System.UInt32">
      <summary>Defines an explicit conversion of a <see cref="T:System.Numerics.BigInteger" /> object to an unsigned 32-bit integer value.</summary>
      <returns>An object that contains the value of the <paramref name="value" /> parameter.</returns>
      <param name="value">The value to convert to an unsigned 32-bit integer.</param>
      <exception cref="T:System.OverflowException">
        <paramref name="value" /> is less than <see cref="F:System.UInt32.MinValue" />.-or-<paramref name="value" /> is greater than <see cref="F:System.UInt32.MaxValue" />.</exception>
    </member>
    <member name="M:System.Numerics.BigInteger.op_Explicit(System.Numerics.BigInteger)~System.UInt16">
      <summary>Defines an explicit conversion of a <see cref="T:System.Numerics.BigInteger" /> object to an unsigned 16-bit integer value.</summary>
      <returns>An object that contains the value of the <paramref name="value" /> parameter</returns>
      <param name="value">The value to convert to an unsigned 16-bit integer.</param>
      <exception cref="T:System.OverflowException">
        <paramref name="value" /> is less than <see cref="F:System.UInt16.MinValue" />.-or-<paramref name="value" /> is greater than <see cref="F:System.UInt16.MaxValue" />. </exception>
    </member>
    <member name="M:System.Numerics.BigInteger.op_Explicit(System.Numerics.BigInteger)~System.Decimal">
      <summary>Defines an explicit conversion of a <see cref="T:System.Numerics.BigInteger" /> object to a <see cref="T:System.Decimal" /> value.</summary>
      <returns>An object that contains the value of the <paramref name="value" /> parameter.</returns>
      <param name="value">The value to convert to a <see cref="T:System.Decimal" />.</param>
      <exception cref="T:System.OverflowException">
        <paramref name="value" /> is less than <see cref="F:System.Decimal.MinValue" />.-or-<paramref name="value" /> is greater than <see cref="F:System.Decimal.MaxValue" />.</exception>
    </member>
    <member name="M:System.Numerics.BigInteger.op_Explicit(System.Single)~System.Numerics.BigInteger">
      <summary>Defines an explicit conversion of a <see cref="T:System.Single" /> object to a <see cref="T:System.Numerics.BigInteger" /> value.</summary>
      <returns>An object that contains the value of the <paramref name="value" /> parameter.</returns>
      <param name="value">The value to convert to a <see cref="T:System.Numerics.BigInteger" />.</param>
      <exception cref="T:System.OverflowException">
        <paramref name="value" /> is <see cref="F:System.Single.NaN" />.-or-<paramref name="value" /> is <see cref="F:System.Single.PositiveInfinity" />.-or-<paramref name="value" /> is <see cref="F:System.Single.NegativeInfinity" />.</exception>
    </member>
    <member name="M:System.Numerics.BigInteger.op_GreaterThan(System.Int64,System.Numerics.BigInteger)">
      <summary>Returns a value that indicates whether a 64-bit signed integer is greater than a <see cref="T:System.Numerics.BigInteger" /> value.</summary>
      <returns>true if <paramref name="left" /> is greater than <paramref name="right" />; otherwise, false.</returns>
      <param name="left">The first value to compare.</param>
      <param name="right">The second value to compare.</param>
    </member>
    <member name="M:System.Numerics.BigInteger.op_GreaterThan(System.Numerics.BigInteger,System.Int64)">
      <summary>Returns a value that indicates whether a <see cref="T:System.Numerics.BigInteger" /> is greater than a 64-bit signed integer value.</summary>
      <returns>true if <paramref name="left" /> is greater than <paramref name="right" />; otherwise, false.</returns>
      <param name="left">The first value to compare.</param>
      <param name="right">The second value to compare.</param>
    </member>
    <member name="M:System.Numerics.BigInteger.op_GreaterThan(System.Numerics.BigInteger,System.Numerics.BigInteger)">
      <summary>Returns a value that indicates whether a <see cref="T:System.Numerics.BigInteger" /> value is greater than another <see cref="T:System.Numerics.BigInteger" /> value.</summary>
      <returns>true if <paramref name="left" /> is greater than <paramref name="right" />; otherwise, false.</returns>
      <param name="left">The first value to compare.</param>
      <param name="right">The second value to compare.</param>
    </member>
    <member name="M:System.Numerics.BigInteger.op_GreaterThan(System.Numerics.BigInteger,System.UInt64)">
      <summary>Returns a value that indicates whether a <see cref="T:System.Numerics.BigInteger" /> value is greater than a 64-bit unsigned integer.</summary>
      <returns>true if <paramref name="left" /> is greater than <paramref name="right" />; otherwise, false.</returns>
      <param name="left">The first value to compare.</param>
      <param name="right">The second value to compare.</param>
    </member>
    <member name="M:System.Numerics.BigInteger.op_GreaterThan(System.UInt64,System.Numerics.BigInteger)">
      <summary>Returns a value that indicates whether a <see cref="T:System.Numerics.BigInteger" /> value is greater than a 64-bit unsigned integer.</summary>
      <returns>true if <paramref name="left" /> is greater than <paramref name="right" />; otherwise, false.</returns>
      <param name="left">The first value to compare.</param>
      <param name="right">The second value to compare.</param>
    </member>
    <member name="M:System.Numerics.BigInteger.op_GreaterThanOrEqual(System.Int64,System.Numerics.BigInteger)">
      <summary>Returns a value that indicates whether a 64-bit signed integer is greater than or equal to a <see cref="T:System.Numerics.BigInteger" /> value.</summary>
      <returns>true if <paramref name="left" /> is greater than <paramref name="right" />; otherwise, false.</returns>
      <param name="left">The first value to compare.</param>
      <param name="right">The second value to compare.</param>
    </member>
    <member name="M:System.Numerics.BigInteger.op_GreaterThanOrEqual(System.Numerics.BigInteger,System.Int64)">
      <summary>Returns a value that indicates whether a <see cref="T:System.Numerics.BigInteger" /> value is greater than or equal to a 64-bit signed integer value.</summary>
      <returns>true if <paramref name="left" /> is greater than <paramref name="right" />; otherwise, false.</returns>
      <param name="left">The first value to compare.</param>
      <param name="right">The second value to compare.</param>
    </member>
    <member name="M:System.Numerics.BigInteger.op_GreaterThanOrEqual(System.Numerics.BigInteger,System.Numerics.BigInteger)">
      <summary>Returns a value that indicates whether a <see cref="T:System.Numerics.BigInteger" /> value is greater than or equal to another <see cref="T:System.Numerics.BigInteger" /> value.</summary>
      <returns>true if <paramref name="left" /> is greater than <paramref name="right" />; otherwise, false.</returns>
      <param name="left">The first value to compare.</param>
      <param name="right">The second value to compare.</param>
    </member>
    <member name="M:System.Numerics.BigInteger.op_GreaterThanOrEqual(System.Numerics.BigInteger,System.UInt64)">
      <summary>Returns a value that indicates whether a <see cref="T:System.Numerics.BigInteger" /> value is greater than or equal to a 64-bit unsigned integer value.</summary>
      <returns>true if <paramref name="left" /> is greater than <paramref name="right" />; otherwise, false.</returns>
      <param name="left">The first value to compare.</param>
      <param name="right">The second value to compare.</param>
    </member>
    <member name="M:System.Numerics.BigInteger.op_GreaterThanOrEqual(System.UInt64,System.Numerics.BigInteger)">
      <summary>Returns a value that indicates whether a 64-bit unsigned integer is greater than or equal to a <see cref="T:System.Numerics.BigInteger" /> value.</summary>
      <returns>true if <paramref name="left" /> is greater than <paramref name="right" />; otherwise, false.</returns>
      <param name="left">The first value to compare.</param>
      <param name="right">The second value to compare.</param>
    </member>
    <member name="M:System.Numerics.BigInteger.op_Implicit(System.Byte)~System.Numerics.BigInteger">
      <summary>Defines an implicit conversion of an unsigned byte to a <see cref="T:System.Numerics.BigInteger" /> value.</summary>
      <returns>An object that contains the value of the <paramref name="value" /> parameter.</returns>
      <param name="value">The value to convert to a <see cref="T:System.Numerics.BigInteger" />.</param>
    </member>
    <member name="M:System.Numerics.BigInteger.op_Implicit(System.Int16)~System.Numerics.BigInteger">
      <summary>Defines an implicit conversion of a signed 16-bit integer to a <see cref="T:System.Numerics.BigInteger" /> value.</summary>
      <returns>An object that contains the value of the <paramref name="value" /> parameter.</returns>
      <param name="value">The value to convert to a <see cref="T:System.Numerics.BigInteger" />.</param>
    </member>
    <member name="M:System.Numerics.BigInteger.op_Implicit(System.Int32)~System.Numerics.BigInteger">
      <summary>Defines an implicit conversion of a signed 32-bit integer to a <see cref="T:System.Numerics.BigInteger" /> value.</summary>
      <returns>An object that contains the value of the <paramref name="value" /> parameter.</returns>
      <param name="value">The value to convert to a <see cref="T:System.Numerics.BigInteger" />.</param>
    </member>
    <member name="M:System.Numerics.BigInteger.op_Implicit(System.Int64)~System.Numerics.BigInteger">
      <summary>Defines an implicit conversion of a signed 64-bit integer to a <see cref="T:System.Numerics.BigInteger" /> value.</summary>
      <returns>An object that contains the value of the <paramref name="value" /> parameter.</returns>
      <param name="value">The value to convert to a <see cref="T:System.Numerics.BigInteger" />.</param>
    </member>
    <member name="M:System.Numerics.BigInteger.op_Implicit(System.SByte)~System.Numerics.BigInteger">
      <summary>Defines an implicit conversion of an 8-bit signed integer to a <see cref="T:System.Numerics.BigInteger" /> value.</summary>
      <returns>An object that contains the value of the <paramref name="value" /> parameter.</returns>
      <param name="value">The value to convert to a <see cref="T:System.Numerics.BigInteger" />.</param>
    </member>
    <member name="M:System.Numerics.BigInteger.op_Implicit(System.UInt16)~System.Numerics.BigInteger">
      <summary>Defines an implicit conversion of a 16-bit unsigned integer to a <see cref="T:System.Numerics.BigInteger" /> value.</summary>
      <returns>An object that contains the value of the <paramref name="value" /> parameter.</returns>
      <param name="value">The value to convert to a <see cref="T:System.Numerics.BigInteger" />.</param>
    </member>
    <member name="M:System.Numerics.BigInteger.op_Implicit(System.UInt32)~System.Numerics.BigInteger">
      <summary>Defines an implicit conversion of a 32-bit unsigned integer to a <see cref="T:System.Numerics.BigInteger" /> value.</summary>
      <returns>An object that contains the value of the <paramref name="value" /> parameter.</returns>
      <param name="value">The value to convert to a <see cref="T:System.Numerics.BigInteger" />.</param>
    </member>
    <member name="M:System.Numerics.BigInteger.op_Implicit(System.UInt64)~System.Numerics.BigInteger">
      <summary>Defines an implicit conversion of a 64-bit unsigned integer to a <see cref="T:System.Numerics.BigInteger" /> value.</summary>
      <returns>An object that contains the value of the <paramref name="value" /> parameter.</returns>
      <param name="value">The value to convert to a <see cref="T:System.Numerics.BigInteger" />.</param>
    </member>
    <member name="M:System.Numerics.BigInteger.op_Increment(System.Numerics.BigInteger)">
      <summary>Increments a <see cref="T:System.Numerics.BigInteger" /> value by 1.</summary>
      <returns>The value of the <paramref name="value" /> parameter incremented by 1.</returns>
      <param name="value">The value to increment.</param>
    </member>
    <member name="M:System.Numerics.BigInteger.op_Inequality(System.Int64,System.Numerics.BigInteger)">
      <summary>Returns a value that indicates whether a 64-bit signed integer and a <see cref="T:System.Numerics.BigInteger" /> value are not equal.</summary>
      <returns>true if <paramref name="left" /> and <paramref name="right" /> are not equal; otherwise, false.</returns>
      <param name="left">The first value to compare.</param>
      <param name="right">The second value to compare.</param>
    </member>
    <member name="M:System.Numerics.BigInteger.op_Inequality(System.Numerics.BigInteger,System.Int64)">
      <summary>Returns a value that indicates whether a <see cref="T:System.Numerics.BigInteger" /> value and a 64-bit signed integer are not equal.</summary>
      <returns>true if <paramref name="left" /> and <paramref name="right" /> are not equal; otherwise, false.</returns>
      <param name="left">The first value to compare.</param>
      <param name="right">The second value to compare.</param>
    </member>
    <member name="M:System.Numerics.BigInteger.op_Inequality(System.Numerics.BigInteger,System.Numerics.BigInteger)">
      <summary>Returns a value that indicates whether two <see cref="T:System.Numerics.BigInteger" /> objects have different values.</summary>
      <returns>true if <paramref name="left" /> and <paramref name="right" /> are not equal; otherwise, false.</returns>
      <param name="left">The first value to compare.</param>
      <param name="right">The second value to compare.</param>
    </member>
    <member name="M:System.Numerics.BigInteger.op_Inequality(System.Numerics.BigInteger,System.UInt64)">
      <summary>Returns a value that indicates whether a <see cref="T:System.Numerics.BigInteger" /> value and a 64-bit unsigned integer are not equal.</summary>
      <returns>true if <paramref name="left" /> and <paramref name="right" /> are not equal; otherwise, false.</returns>
      <param name="left">The first value to compare.</param>
      <param name="right">The second value to compare.</param>
    </member>
    <member name="M:System.Numerics.BigInteger.op_Inequality(System.UInt64,System.Numerics.BigInteger)">
      <summary>Returns a value that indicates whether a 64-bit unsigned integer and a <see cref="T:System.Numerics.BigInteger" /> value are not equal.</summary>
      <returns>true if <paramref name="left" /> and <paramref name="right" /> are not equal; otherwise, false.</returns>
      <param name="left">The first value to compare.</param>
      <param name="right">The second value to compare.</param>
    </member>
    <member name="M:System.Numerics.BigInteger.op_LeftShift(System.Numerics.BigInteger,System.Int32)">
      <summary>Shifts a <see cref="T:System.Numerics.BigInteger" /> value a specified number of bits to the left.</summary>
      <returns>A value that has been shifted to the left by the specified number of bits.</returns>
      <param name="value">The value whose bits are to be shifted.</param>
      <param name="shift">The number of bits to shift <paramref name="value" /> to the left.</param>
    </member>
    <member name="M:System.Numerics.BigInteger.op_LessThan(System.Int64,System.Numerics.BigInteger)">
      <summary>Returns a value that indicates whether a 64-bit signed integer is less than a <see cref="T:System.Numerics.BigInteger" /> value.</summary>
      <returns>true if <paramref name="left" /> is less than <paramref name="right" />; otherwise, false.</returns>
      <param name="left">The first value to compare.</param>
      <param name="right">The second value to compare.</param>
    </member>
    <member name="M:System.Numerics.BigInteger.op_LessThan(System.Numerics.BigInteger,System.Int64)">
      <summary>Returns a value that indicates whether a <see cref="T:System.Numerics.BigInteger" /> value is less than a 64-bit signed integer.</summary>
      <returns>true if <paramref name="left" /> is less than <paramref name="right" />; otherwise, false.</returns>
      <param name="left">The first value to compare.</param>
      <param name="right">The second value to compare.</param>
    </member>
    <member name="M:System.Numerics.BigInteger.op_LessThan(System.Numerics.BigInteger,System.Numerics.BigInteger)">
      <summary>Returns a value that indicates whether a <see cref="T:System.Numerics.BigInteger" /> value is less than another <see cref="T:System.Numerics.BigInteger" /> value.</summary>
      <returns>true if <paramref name="left" /> is less than <paramref name="right" />; otherwise, false.</returns>
      <param name="left">The first value to compare.</param>
      <param name="right">The second value to compare.</param>
    </member>
    <member name="M:System.Numerics.BigInteger.op_LessThan(System.Numerics.BigInteger,System.UInt64)">
      <summary>Returns a value that indicates whether a <see cref="T:System.Numerics.BigInteger" /> value is less than a 64-bit unsigned integer.</summary>
      <returns>true if <paramref name="left" /> is less than <paramref name="right" />; otherwise, false.</returns>
      <param name="left">The first value to compare.</param>
      <param name="right">The second value to compare.</param>
    </member>
    <member name="M:System.Numerics.BigInteger.op_LessThan(System.UInt64,System.Numerics.BigInteger)">
      <summary>Returns a value that indicates whether a 64-bit unsigned integer is less than a <see cref="T:System.Numerics.BigInteger" /> value.</summary>
      <returns>true if <paramref name="left" /> is less than <paramref name="right" />; otherwise, false.</returns>
      <param name="left">The first value to compare.</param>
      <param name="right">The second value to compare.</param>
    </member>
    <member name="M:System.Numerics.BigInteger.op_LessThanOrEqual(System.Int64,System.Numerics.BigInteger)">
      <summary>Returns a value that indicates whether a 64-bit signed integer is less than or equal to a <see cref="T:System.Numerics.BigInteger" /> value.</summary>
      <returns>true if <paramref name="left" /> is less than or equal to <paramref name="right" />; otherwise, false.</returns>
      <param name="left">The first value to compare.</param>
      <param name="right">The second value to compare.</param>
    </member>
    <member name="M:System.Numerics.BigInteger.op_LessThanOrEqual(System.Numerics.BigInteger,System.Int64)">
      <summary>Returns a value that indicates whether a <see cref="T:System.Numerics.BigInteger" /> value is less than or equal to a 64-bit signed integer.</summary>
      <returns>true if <paramref name="left" /> is less than or equal to <paramref name="right" />; otherwise, false.</returns>
      <param name="left">The first value to compare.</param>
      <param name="right">The second value to compare.</param>
    </member>
    <member name="M:System.Numerics.BigInteger.op_LessThanOrEqual(System.Numerics.BigInteger,System.Numerics.BigInteger)">
      <summary>Returns a value that indicates whether a <see cref="T:System.Numerics.BigInteger" /> value is less than or equal to another <see cref="T:System.Numerics.BigInteger" /> value.</summary>
      <returns>true if <paramref name="left" /> is less than or equal to <paramref name="right" />; otherwise, false.</returns>
      <param name="left">The first value to compare.</param>
      <param name="right">The second value to compare.</param>
    </member>
    <member name="M:System.Numerics.BigInteger.op_LessThanOrEqual(System.Numerics.BigInteger,System.UInt64)">
      <summary>Returns a value that indicates whether a <see cref="T:System.Numerics.BigInteger" /> value is less than or equal to a 64-bit unsigned integer.</summary>
      <returns>true if <paramref name="left" /> is less than or equal to <paramref name="right" />; otherwise, false.</returns>
      <param name="left">The first value to compare.</param>
      <param name="right">The second value to compare.</param>
    </member>
    <member name="M:System.Numerics.BigInteger.op_LessThanOrEqual(System.UInt64,System.Numerics.BigInteger)">
      <summary>Returns a value that indicates whether a 64-bit unsigned integer is less than or equal to a <see cref="T:System.Numerics.BigInteger" /> value.</summary>
      <returns>true if <paramref name="left" /> is less than or equal to <paramref name="right" />; otherwise, false.</returns>
      <param name="left">The first value to compare.</param>
      <param name="right">The second value to compare.</param>
    </member>
    <member name="M:System.Numerics.BigInteger.op_Modulus(System.Numerics.BigInteger,System.Numerics.BigInteger)">
      <summary>Returns the remainder that results from division with two specified <see cref="T:System.Numerics.BigInteger" /> values.</summary>
      <returns>The remainder that results from the division.</returns>
      <param name="dividend">The value to be divided.</param>
      <param name="divisor">The value to divide by.</param>
      <exception cref="T:System.DivideByZeroException">
        <paramref name="divisor" /> is 0 (zero).</exception>
    </member>
    <member name="M:System.Numerics.BigInteger.op_Multiply(System.Numerics.BigInteger,System.Numerics.BigInteger)">
      <summary>Multiplies two specified <see cref="T:System.Numerics.BigInteger" /> values.</summary>
      <returns>The product of <paramref name="left" /> and <paramref name="right" />.</returns>
      <param name="left">The first value to multiply.</param>
      <param name="right">The second value to multiply.</param>
    </member>
    <member name="M:System.Numerics.BigInteger.op_OnesComplement(System.Numerics.BigInteger)">
      <summary>Returns the bitwise one's complement of a <see cref="T:System.Numerics.BigInteger" /> value.</summary>
      <returns>The bitwise one's complement of <paramref name="value" />.</returns>
      <param name="value">An integer value.</param>
    </member>
    <member name="M:System.Numerics.BigInteger.op_RightShift(System.Numerics.BigInteger,System.Int32)">
      <summary>Shifts a <see cref="T:System.Numerics.BigInteger" /> value a specified number of bits to the right.</summary>
      <returns>A value that has been shifted to the right by the specified number of bits.</returns>
      <param name="value">The value whose bits are to be shifted.</param>
      <param name="shift">The number of bits to shift <paramref name="value" /> to the right.</param>
    </member>
    <member name="M:System.Numerics.BigInteger.op_Subtraction(System.Numerics.BigInteger,System.Numerics.BigInteger)">
      <summary>Subtracts a <see cref="T:System.Numerics.BigInteger" /> value from another <see cref="T:System.Numerics.BigInteger" /> value.</summary>
      <returns>The result of subtracting <paramref name="right" /> from <paramref name="left" />.</returns>
      <param name="left">The value to subtract from (the minuend).</param>
      <param name="right">The value to subtract (the subtrahend).</param>
    </member>
    <member name="M:System.Numerics.BigInteger.op_UnaryNegation(System.Numerics.BigInteger)">
      <summary>Negates a specified BigInteger value. </summary>
      <returns>The result of the <paramref name="value" /> parameter multiplied by negative one (-1).</returns>
      <param name="value">The value to negate.</param>
    </member>
    <member name="M:System.Numerics.BigInteger.op_UnaryPlus(System.Numerics.BigInteger)">
      <summary>Returns the value of the <see cref="T:System.Numerics.BigInteger" /> operand. (The sign of the operand is unchanged.)</summary>
      <returns>The value of the <paramref name="value" /> operand.</returns>
      <param name="value">An integer value.</param>
    </member>
    <member name="M:System.Numerics.BigInteger.Parse(System.String)">
      <summary>Converts the string representation of a number to its <see cref="T:System.Numerics.BigInteger" /> equivalent.</summary>
      <returns>A value that is equivalent to the number specified in the <paramref name="value" /> parameter.</returns>
      <param name="value">A string that contains the number to convert.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="value" /> is null.</exception>
      <exception cref="T:System.FormatException">
        <paramref name="value" /> is not in the correct format.</exception>
    </member>
    <member name="M:System.Numerics.BigInteger.Parse(System.String,System.Globalization.NumberStyles)">
      <summary>Converts the string representation of a number in a specified style to its <see cref="T:System.Numerics.BigInteger" /> equivalent.</summary>
      <returns>A value that is equivalent to the number specified in the <paramref name="value" /> parameter.</returns>
      <param name="value">A string that contains a number to convert. </param>
      <param name="style">A bitwise combination of the enumeration values that specify the permitted format of <paramref name="value" />.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="style" /> is not a <see cref="T:System.Globalization.NumberStyles" /> value.-or-<paramref name="style" /> includes the <see cref="F:System.Globalization.NumberStyles.AllowHexSpecifier" /> or <see cref="F:System.Globalization.NumberStyles.HexNumber" /> flag along with another value.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="value" /> is null.</exception>
      <exception cref="T:System.FormatException">
        <paramref name="value" /> does not comply with the input pattern specified by <see cref="T:System.Globalization.NumberStyles" />.</exception>
    </member>
    <member name="M:System.Numerics.BigInteger.Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)">
      <summary>Converts the string representation of a number in a specified style and culture-specific format to its <see cref="T:System.Numerics.BigInteger" /> equivalent.</summary>
      <returns>A value that is equivalent to the number specified in the <paramref name="value" /> parameter.</returns>
      <param name="value">A string that contains a number to convert.</param>
      <param name="style">A bitwise combination of the enumeration values that specify the permitted format of <paramref name="value" />.</param>
      <param name="provider">An object that provides culture-specific formatting information about <paramref name="value" />.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="style" /> is not a <see cref="T:System.Globalization.NumberStyles" /> value.-or-<paramref name="style" /> includes the <see cref="F:System.Globalization.NumberStyles.AllowHexSpecifier" /> or <see cref="F:System.Globalization.NumberStyles.HexNumber" /> flag along with another value.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="value" /> is null.</exception>
      <exception cref="T:System.FormatException">
        <paramref name="value" /> does not comply with the input pattern specified by <paramref name="style" />.</exception>
    </member>
    <member name="M:System.Numerics.BigInteger.Parse(System.String,System.IFormatProvider)">
      <summary>Converts the string representation of a number in a specified culture-specific format to its <see cref="T:System.Numerics.BigInteger" /> equivalent.</summary>
      <returns>A value that is equivalent to the number specified in the <paramref name="value" /> parameter.</returns>
      <param name="value">A string that contains a number to convert.</param>
      <param name="provider">An object that provides culture-specific formatting information about <paramref name="value" />.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="value" /> is null.</exception>
      <exception cref="T:System.FormatException">
        <paramref name="value" /> is not in the correct format.</exception>
    </member>
    <member name="M:System.Numerics.BigInteger.Pow(System.Numerics.BigInteger,System.Int32)">
      <summary>Raises a <see cref="T:System.Numerics.BigInteger" /> value to the power of a specified value.</summary>
      <returns>The result of raising <paramref name="value" /> to the <paramref name="exponent" /> power.</returns>
      <param name="value">The number to raise to the <paramref name="exponent" /> power.</param>
      <param name="exponent">The exponent to raise <paramref name="value" /> by.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">The value of the <paramref name="exponent" /> parameter is negative.</exception>
    </member>
    <member name="M:System.Numerics.BigInteger.Remainder(System.Numerics.BigInteger,System.Numerics.BigInteger)">
      <summary>Performs integer division on two <see cref="T:System.Numerics.BigInteger" /> values and returns the remainder.</summary>
      <returns>The remainder after dividing <paramref name="dividend" /> by <paramref name="divisor" />.</returns>
      <param name="dividend">The value to be divided.</param>
      <param name="divisor">The value to divide by.</param>
      <exception cref="T:System.DivideByZeroException">
        <paramref name="divisor" /> is 0 (zero).</exception>
    </member>
    <member name="P:System.Numerics.BigInteger.Sign">
      <summary>Gets a number that indicates the sign (negative, positive, or zero) of the current <see cref="T:System.Numerics.BigInteger" /> object.</summary>
      <returns>A number that indicates the sign of the <see cref="T:System.Numerics.BigInteger" /> object, as shown in the following table.NumberDescription-1The value of this object is negative.0The value of this object is 0 (zero).1The value of this object is positive.</returns>
    </member>
    <member name="M:System.Numerics.BigInteger.Subtract(System.Numerics.BigInteger,System.Numerics.BigInteger)">
      <summary>Subtracts one <see cref="T:System.Numerics.BigInteger" /> value from another and returns the result.</summary>
      <returns>The result of subtracting <paramref name="right" /> from <paramref name="left" />.</returns>
      <param name="left">The value to subtract from (the minuend).</param>
      <param name="right">The value to subtract (the subtrahend).</param>
    </member>
    <member name="M:System.Numerics.BigInteger.ToByteArray">
      <summary>Converts a <see cref="T:System.Numerics.BigInteger" /> value to a byte array.</summary>
      <returns>The value of the current <see cref="T:System.Numerics.BigInteger" /> object converted to an array of bytes.</returns>
    </member>
    <member name="M:System.Numerics.BigInteger.ToString">
      <summary>Converts the numeric value of the current <see cref="T:System.Numerics.BigInteger" /> object to its equivalent string representation.</summary>
      <returns>The string representation of the current <see cref="T:System.Numerics.BigInteger" /> value.</returns>
    </member>
    <member name="M:System.Numerics.BigInteger.ToString(System.IFormatProvider)">
      <summary>Converts the numeric value of the current <see cref="T:System.Numerics.BigInteger" /> object to its equivalent string representation by using the specified culture-specific formatting information.</summary>
      <returns>The string representation of the current <see cref="T:System.Numerics.BigInteger" /> value in the format specified by the <paramref name="provider" /> parameter.</returns>
      <param name="provider">An object that supplies culture-specific formatting information.</param>
    </member>
    <member name="M:System.Numerics.BigInteger.ToString(System.String)">
      <summary>Converts the numeric value of the current <see cref="T:System.Numerics.BigInteger" /> object to its equivalent string representation by using the specified format.</summary>
      <returns>The string representation of the current <see cref="T:System.Numerics.BigInteger" /> value in the format specified by the <paramref name="format" /> parameter.</returns>
      <param name="format">A standard or custom numeric format string.</param>
      <exception cref="T:System.FormatException">
        <paramref name="format" /> is not a valid format string.</exception>
    </member>
    <member name="M:System.Numerics.BigInteger.ToString(System.String,System.IFormatProvider)">
      <summary>Converts the numeric value of the current <see cref="T:System.Numerics.BigInteger" /> object to its equivalent string representation by using the specified format and culture-specific format information.</summary>
      <returns>The string representation of the current <see cref="T:System.Numerics.BigInteger" /> value as specified by the <paramref name="format" /> and <paramref name="provider" /> parameters.</returns>
      <param name="format">A standard or custom numeric format string.</param>
      <param name="provider">An object that supplies culture-specific formatting information.</param>
      <exception cref="T:System.FormatException">
        <paramref name="format" /> is not a valid format string.</exception>
    </member>
    <member name="M:System.Numerics.BigInteger.TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.Numerics.BigInteger@)">
      <summary>Tries to convert the string representation of a number in a specified style and culture-specific format to its <see cref="T:System.Numerics.BigInteger" /> equivalent, and returns a value that indicates whether the conversion succeeded.</summary>
      <returns>true if the <paramref name="value" /> parameter was converted successfully; otherwise, false.</returns>
      <param name="value">The string representation of a number. The string is interpreted using the style specified by <paramref name="style" />.</param>
      <param name="style">A bitwise combination of enumeration values that indicates the style elements that can be present in <paramref name="value" />. A typical value to specify is <see cref="F:System.Globalization.NumberStyles.Integer" />.</param>
      <param name="provider">An object that supplies culture-specific formatting information about <paramref name="value" />.</param>
      <param name="result">When this method returns, contains the <see cref="T:System.Numerics.BigInteger" /> equivalent to the number that is contained in <paramref name="value" />, or <see cref="P:System.Numerics.BigInteger.Zero" /> if the conversion failed. The conversion fails if the <paramref name="value" /> parameter is null or is not in a format that is compliant with <paramref name="style" />. This parameter is passed uninitialized.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="style" /> is not a <see cref="T:System.Globalization.NumberStyles" /> value.-or-<paramref name="style" /> includes the <see cref="F:System.Globalization.NumberStyles.AllowHexSpecifier" /> or <see cref="F:System.Globalization.NumberStyles.HexNumber" /> flag along with another value. </exception>
    </member>
    <member name="M:System.Numerics.BigInteger.TryParse(System.String,System.Numerics.BigInteger@)">
      <summary>Tries to convert the string representation of a number to its <see cref="T:System.Numerics.BigInteger" /> equivalent, and returns a value that indicates whether the conversion succeeded.</summary>
      <returns>true if <paramref name="value" /> was converted successfully; otherwise, false.</returns>
      <param name="value">The string representation of a number.</param>
      <param name="result">When this method returns, contains the <see cref="T:System.Numerics.BigInteger" /> equivalent to the number that is contained in <paramref name="value" />, or zero (0) if the conversion fails. The conversion fails if the <paramref name="value" /> parameter is null or is not of the correct format. This parameter is passed uninitialized.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="value" /> is null.</exception>
    </member>
    <member name="P:System.Numerics.BigInteger.Zero">
      <summary>Gets a value that represents the number 0 (zero).</summary>
      <returns>An integer whose value is 0 (zero).</returns>
    </member>
    <member name="T:System.Numerics.Complex">
      <summary>Represents a complex number.</summary>
    </member>
    <member name="M:System.Numerics.Complex.#ctor(System.Double,System.Double)">
      <summary>Initializes a new instance of the <see cref="T:System.Numerics.Complex" /> structure using the specified real and imaginary values.</summary>
      <param name="real">The real part of the complex number.</param>
      <param name="imaginary">The imaginary part of the complex number.</param>
    </member>
    <member name="M:System.Numerics.Complex.Abs(System.Numerics.Complex)">
      <summary>Gets the absolute value (or magnitude) of a complex number.</summary>
      <returns>The absolute value of <paramref name="value" />.</returns>
      <param name="value">A complex number.</param>
    </member>
    <member name="M:System.Numerics.Complex.Acos(System.Numerics.Complex)">
      <summary>Returns the angle that is the arc cosine of the specified complex number.</summary>
      <returns>The angle, measured in radians, which is the arc cosine of <paramref name="value" />.</returns>
      <param name="value">A complex number that represents a cosine.</param>
    </member>
    <member name="M:System.Numerics.Complex.Add(System.Numerics.Complex,System.Numerics.Complex)">
      <summary>Adds two complex numbers and returns the result.</summary>
      <returns>The sum of <paramref name="left" /> and <paramref name="right" />.</returns>
      <param name="left">The first complex number to add.</param>
      <param name="right">The second complex number to add.</param>
    </member>
    <member name="M:System.Numerics.Complex.Asin(System.Numerics.Complex)">
      <summary>Returns the angle that is the arc sine of the specified complex number.</summary>
      <returns>The angle which is the arc sine of <paramref name="value" />.</returns>
      <param name="value">A complex number.</param>
    </member>
    <member name="M:System.Numerics.Complex.Atan(System.Numerics.Complex)">
      <summary>Returns the angle that is the arc tangent of the specified complex number.</summary>
      <returns>The angle that is the arc tangent of <paramref name="value" />.</returns>
      <param name="value">A complex number.</param>
    </member>
    <member name="M:System.Numerics.Complex.Conjugate(System.Numerics.Complex)">
      <summary>Computes the conjugate of a complex number and returns the result.</summary>
      <returns>The conjugate of <paramref name="value" />.</returns>
      <param name="value">A complex number.</param>
    </member>
    <member name="M:System.Numerics.Complex.Cos(System.Numerics.Complex)">
      <summary>Returns the cosine of the specified complex number.</summary>
      <returns>The cosine of <paramref name="value" />.</returns>
      <param name="value">A complex number.</param>
    </member>
    <member name="M:System.Numerics.Complex.Cosh(System.Numerics.Complex)">
      <summary>Returns the hyperbolic cosine of the specified complex number.</summary>
      <returns>The hyperbolic cosine of <paramref name="value" />.</returns>
      <param name="value">A complex number.</param>
    </member>
    <member name="M:System.Numerics.Complex.Divide(System.Numerics.Complex,System.Numerics.Complex)">
      <summary>Divides one complex number by another and returns the result.</summary>
      <returns>The quotient of the division.</returns>
      <param name="dividend">The complex number to be divided.</param>
      <param name="divisor">The complex number to divide by.</param>
    </member>
    <member name="M:System.Numerics.Complex.Equals(System.Numerics.Complex)">
      <summary>Returns a value that indicates whether the current instance and a specified complex number have the same value.</summary>
      <returns>true if this complex number and <paramref name="value" /> have the same value; otherwise, false.</returns>
      <param name="value">The complex number to compare.</param>
    </member>
    <member name="M:System.Numerics.Complex.Equals(System.Object)">
      <summary>Returns a value that indicates whether the current instance and a specified object have the same value. </summary>
      <returns>true if the <paramref name="obj" /> parameter is a <see cref="T:System.Numerics.Complex" /> object or a type capable of implicit conversion to a <see cref="T:System.Numerics.Complex" /> object, and its value is equal to the current <see cref="T:System.Numerics.Complex" /> object; otherwise, false.</returns>
      <param name="obj">The object to compare.</param>
    </member>
    <member name="M:System.Numerics.Complex.Exp(System.Numerics.Complex)">
      <summary>Returns e raised to the power specified by a complex number.</summary>
      <returns>The number e raised to the power <paramref name="value" />.</returns>
      <param name="value">A complex number that specifies a power.</param>
    </member>
    <member name="M:System.Numerics.Complex.FromPolarCoordinates(System.Double,System.Double)">
      <summary>Creates a complex number from a point's polar coordinates.</summary>
      <returns>A complex number.</returns>
      <param name="magnitude">The magnitude, which is the distance from the origin (the intersection of the x-axis and the y-axis) to the number.</param>
      <param name="phase">The phase, which is the angle from the line to the horizontal axis, measured in radians.</param>
    </member>
    <member name="M:System.Numerics.Complex.GetHashCode">
      <summary>Returns the hash code for the current <see cref="T:System.Numerics.Complex" /> object.</summary>
      <returns>A 32-bit signed integer hash code.</returns>
    </member>
    <member name="P:System.Numerics.Complex.Imaginary">
      <summary>Gets the imaginary component of the current <see cref="T:System.Numerics.Complex" /> object.</summary>
      <returns>The imaginary component of a complex number.</returns>
    </member>
    <member name="F:System.Numerics.Complex.ImaginaryOne">
      <summary>Returns a new <see cref="T:System.Numerics.Complex" /> instance with a real number equal to zero and an imaginary number equal to one.</summary>
    </member>
    <member name="M:System.Numerics.Complex.Log(System.Numerics.Complex)">
      <summary>Returns the natural (base e) logarithm of a specified complex number.</summary>
      <returns>The natural (base e) logarithm of <paramref name="value" />.</returns>
      <param name="value">A complex number.</param>
    </member>
    <member name="M:System.Numerics.Complex.Log(System.Numerics.Complex,System.Double)">
      <summary>Returns the logarithm of a specified complex number in a specified base.</summary>
      <returns>The logarithm of <paramref name="value" /> in base <paramref name="baseValue" />.</returns>
      <param name="value">A complex number.</param>
      <param name="baseValue">The base of the logarithm.</param>
    </member>
    <member name="M:System.Numerics.Complex.Log10(System.Numerics.Complex)">
      <summary>Returns the base-10 logarithm of a specified complex number.</summary>
      <returns>The base-10 logarithm of <paramref name="value" />.</returns>
      <param name="value">A complex number.</param>
    </member>
    <member name="P:System.Numerics.Complex.Magnitude">
      <summary>Gets the magnitude (or absolute value) of a complex number.</summary>
      <returns>The magnitude of the current instance.</returns>
    </member>
    <member name="M:System.Numerics.Complex.Multiply(System.Numerics.Complex,System.Numerics.Complex)">
      <summary>Returns the product of two complex numbers.</summary>
      <returns>The product of the <paramref name="left" /> and <paramref name="right" /> parameters.</returns>
      <param name="left">The first complex number to multiply.</param>
      <param name="right">The second complex number to multiply.</param>
    </member>
    <member name="M:System.Numerics.Complex.Negate(System.Numerics.Complex)">
      <summary>Returns the additive inverse of a specified complex number.</summary>
      <returns>The result of the <see cref="P:System.Numerics.Complex.Real" /> and <see cref="P:System.Numerics.Complex.Imaginary" /> components of the <paramref name="value" /> parameter multiplied by -1.</returns>
      <param name="value">A complex number.</param>
    </member>
    <member name="F:System.Numerics.Complex.One">
      <summary>Returns a new <see cref="T:System.Numerics.Complex" /> instance with a real number equal to one and an imaginary number equal to zero.</summary>
    </member>
    <member name="M:System.Numerics.Complex.op_Addition(System.Numerics.Complex,System.Numerics.Complex)">
      <summary>Adds two complex numbers.</summary>
      <returns>The sum of <paramref name="left" /> and <paramref name="right" />.</returns>
      <param name="left">The first value to add.</param>
      <param name="right">The second value to add.</param>
    </member>
    <member name="M:System.Numerics.Complex.op_Division(System.Numerics.Complex,System.Numerics.Complex)">
      <summary>Divides a specified complex number by another specified complex number.</summary>
      <returns>The result of dividing <paramref name="left" /> by <paramref name="right" />.</returns>
      <param name="left">The value to be divided.</param>
      <param name="right">The value to divide by.</param>
    </member>
    <member name="M:System.Numerics.Complex.op_Equality(System.Numerics.Complex,System.Numerics.Complex)">
      <summary>Returns a value that indicates whether two complex numbers are equal.</summary>
      <returns>true if the <paramref name="left" /> and <paramref name="right" /> parameters have the same value; otherwise, false.</returns>
      <param name="left">The first complex number to compare.</param>
      <param name="right">The second complex number to compare.</param>
    </member>
    <member name="M:System.Numerics.Complex.op_Explicit(System.Decimal)~System.Numerics.Complex">
      <summary>Defines an explicit conversion of a <see cref="T:System.Decimal" /> value to a complex number.</summary>
      <returns>A complex number that has a real component equal to <paramref name="value" /> and an imaginary component equal to zero. </returns>
      <param name="value">The value to convert to a complex number.</param>
    </member>
    <member name="M:System.Numerics.Complex.op_Explicit(System.Numerics.BigInteger)~System.Numerics.Complex">
      <summary>Defines an explicit conversion of a <see cref="T:System.Numerics.BigInteger" /> value to a complex number. </summary>
      <returns>A complex number that has a real component equal to <paramref name="value" /> and an imaginary component equal to zero. </returns>
      <param name="value">The value to convert to a complex number.</param>
    </member>
    <member name="M:System.Numerics.Complex.op_Implicit(System.Byte)~System.Numerics.Complex">
      <summary>Defines an implicit conversion of an unsigned byte to a complex number.</summary>
      <returns>An object that contains the value of the <paramref name="value" /> parameter as its real part and zero as its imaginary part.</returns>
      <param name="value">The value to convert to a complex number.</param>
    </member>
    <member name="M:System.Numerics.Complex.op_Implicit(System.Double)~System.Numerics.Complex">
      <summary>Defines an implicit conversion of a double-precision floating-point number to a complex number.</summary>
      <returns>An object that contains the value of the <paramref name="value" /> parameter as its real part and zero as its imaginary part.</returns>
      <param name="value">The value to convert to a complex number.</param>
    </member>
    <member name="M:System.Numerics.Complex.op_Implicit(System.Int16)~System.Numerics.Complex">
      <summary>Defines an implicit conversion of a 16-bit signed integer to a complex number.</summary>
      <returns>An object that contains the value of the <paramref name="value" /> parameter as its real part and zero as its imaginary part.</returns>
      <param name="value">The value to convert to a complex number.</param>
    </member>
    <member name="M:System.Numerics.Complex.op_Implicit(System.Int32)~System.Numerics.Complex">
      <summary>Defines an implicit conversion of a 32-bit signed integer to a complex number.</summary>
      <returns>An object that contains the value of the <paramref name="value" /> parameter as its real part and zero as its imaginary part.</returns>
      <param name="value">The value to convert to a complex number.</param>
    </member>
    <member name="M:System.Numerics.Complex.op_Implicit(System.Int64)~System.Numerics.Complex">
      <summary>Defines an implicit conversion of a 64-bit signed integer to a complex number.</summary>
      <returns>An object that contains the value of the <paramref name="value" /> parameter as its real part and zero as its imaginary part.</returns>
      <param name="value">The value to convert to a complex number.</param>
    </member>
    <member name="M:System.Numerics.Complex.op_Implicit(System.SByte)~System.Numerics.Complex">
      <summary>Defines an implicit conversion of a signed byte to a complex number.</summary>
      <returns>An object that contains the value of the <paramref name="value" /> parameter as its real part and zero as its imaginary part.</returns>
      <param name="value">The value to convert to a complex number.</param>
    </member>
    <member name="M:System.Numerics.Complex.op_Implicit(System.Single)~System.Numerics.Complex">
      <summary>Defines an implicit conversion of a single-precision floating-point number to a complex number.</summary>
      <returns>An object that contains the value of the <paramref name="value" /> parameter as its real part and zero as its imaginary part.</returns>
      <param name="value">The value to convert to a complex number.</param>
    </member>
    <member name="M:System.Numerics.Complex.op_Implicit(System.UInt16)~System.Numerics.Complex">
      <summary>Defines an implicit conversion of a 16-bit unsigned integer to a complex number.</summary>
      <returns>An object that contains the value of the <paramref name="value" /> parameter as its real part and zero as its imaginary part.</returns>
      <param name="value">The value to convert to a complex number.</param>
    </member>
    <member name="M:System.Numerics.Complex.op_Implicit(System.UInt32)~System.Numerics.Complex">
      <summary>Defines an implicit conversion of a 32-bit unsigned integer to a complex number.</summary>
      <returns>An object that contains the value of the <paramref name="value" /> parameter as its real part and zero as its imaginary part.</returns>
      <param name="value">The value to convert to a complex number.</param>
    </member>
    <member name="M:System.Numerics.Complex.op_Implicit(System.UInt64)~System.Numerics.Complex">
      <summary>Defines an implicit conversion of a 64-bit unsigned integer to a complex number.</summary>
      <returns>An object that contains the value of the <paramref name="value" /> parameter as its real part and zero as its imaginary part.</returns>
      <param name="value">The value to convert to a complex number.</param>
    </member>
    <member name="M:System.Numerics.Complex.op_Inequality(System.Numerics.Complex,System.Numerics.Complex)">
      <summary>Returns a value that indicates whether two complex numbers are not equal.</summary>
      <returns>true if <paramref name="left" /> and <paramref name="right" /> are not equal; otherwise, false.</returns>
      <param name="left">The first value to compare.</param>
      <param name="right">The second value to compare.</param>
    </member>
    <member name="M:System.Numerics.Complex.op_Multiply(System.Numerics.Complex,System.Numerics.Complex)">
      <summary>Multiplies two specified complex numbers.</summary>
      <returns>The product of <paramref name="left" /> and <paramref name="right" />.</returns>
      <param name="left">The first value to multiply.</param>
      <param name="right">The second value to multiply.</param>
    </member>
    <member name="M:System.Numerics.Complex.op_Subtraction(System.Numerics.Complex,System.Numerics.Complex)">
      <summary>Subtracts a complex number from another complex number.</summary>
      <returns>The result of subtracting <paramref name="right" /> from <paramref name="left" />.</returns>
      <param name="left">The value to subtract from (the minuend).</param>
      <param name="right">The value to subtract (the subtrahend).</param>
    </member>
    <member name="M:System.Numerics.Complex.op_UnaryNegation(System.Numerics.Complex)">
      <summary>Returns the additive inverse of a specified complex number.</summary>
      <returns>The result of the <see cref="P:System.Numerics.Complex.Real" /> and <see cref="P:System.Numerics.Complex.Imaginary" /> components of the <paramref name="value" /> parameter multiplied by -1.</returns>
      <param name="value">The value to negate.</param>
    </member>
    <member name="P:System.Numerics.Complex.Phase">
      <summary>Gets the phase of a complex number.</summary>
      <returns>The phase of a complex number, in radians.</returns>
    </member>
    <member name="M:System.Numerics.Complex.Pow(System.Numerics.Complex,System.Double)">
      <summary>Returns a specified complex number raised to a power specified by a double-precision floating-point number.</summary>
      <returns>The complex number <paramref name="value" /> raised to the power <paramref name="power" />.</returns>
      <param name="value">A complex number to be raised to a power.</param>
      <param name="power">A double-precision floating-point number that specifies a power.</param>
    </member>
    <member name="M:System.Numerics.Complex.Pow(System.Numerics.Complex,System.Numerics.Complex)">
      <summary>Returns a specified complex number raised to a power specified by a complex number.</summary>
      <returns>The complex number <paramref name="value" /> raised to the power <paramref name="power" />.</returns>
      <param name="value">A complex number to be raised to a power.</param>
      <param name="power">A complex number that specifies a power.</param>
    </member>
    <member name="P:System.Numerics.Complex.Real">
      <summary>Gets the real component of the current <see cref="T:System.Numerics.Complex" /> object.</summary>
      <returns>The real component of a complex number.</returns>
    </member>
    <member name="M:System.Numerics.Complex.Reciprocal(System.Numerics.Complex)">
      <summary>Returns the multiplicative inverse of a complex number.</summary>
      <returns>The reciprocal of <paramref name="value" />.</returns>
      <param name="value">A complex number.</param>
    </member>
    <member name="M:System.Numerics.Complex.Sin(System.Numerics.Complex)">
      <summary>Returns the sine of the specified complex number.</summary>
      <returns>The sine of <paramref name="value" />.</returns>
      <param name="value">A complex number.</param>
    </member>
    <member name="M:System.Numerics.Complex.Sinh(System.Numerics.Complex)">
      <summary>Returns the hyperbolic sine of the specified complex number.</summary>
      <returns>The hyperbolic sine of <paramref name="value" />.</returns>
      <param name="value">A complex number.</param>
    </member>
    <member name="M:System.Numerics.Complex.Sqrt(System.Numerics.Complex)">
      <summary>Returns the square root of a specified complex number.</summary>
      <returns>The square root of <paramref name="value" />.</returns>
      <param name="value">A complex number.</param>
    </member>
    <member name="M:System.Numerics.Complex.Subtract(System.Numerics.Complex,System.Numerics.Complex)">
      <summary>Subtracts one complex number from another and returns the result.</summary>
      <returns>The result of subtracting <paramref name="right" /> from <paramref name="left" />.</returns>
      <param name="left">The value to subtract from (the minuend).</param>
      <param name="right">The value to subtract (the subtrahend).</param>
    </member>
    <member name="M:System.Numerics.Complex.Tan(System.Numerics.Complex)">
      <summary>Returns the tangent of the specified complex number.</summary>
      <returns>The tangent of <paramref name="value" />.</returns>
      <param name="value">A complex number.</param>
    </member>
    <member name="M:System.Numerics.Complex.Tanh(System.Numerics.Complex)">
      <summary>Returns the hyperbolic tangent of the specified complex number.</summary>
      <returns>The hyperbolic tangent of <paramref name="value" />.</returns>
      <param name="value">A complex number.</param>
    </member>
    <member name="M:System.Numerics.Complex.ToString">
      <summary>Converts the value of the current complex number to its equivalent string representation in Cartesian form.</summary>
      <returns>The string representation of the current instance in Cartesian form.</returns>
    </member>
    <member name="M:System.Numerics.Complex.ToString(System.IFormatProvider)">
      <summary>Converts the value of the current complex number to its equivalent string representation in Cartesian form by using the specified culture-specific formatting information.</summary>
      <returns>The string representation of the current instance in Cartesian form, as specified by <paramref name="provider" />.</returns>
      <param name="provider">An object that supplies culture-specific formatting information.</param>
    </member>
    <member name="M:System.Numerics.Complex.ToString(System.String)">
      <summary>Converts the value of the current complex number to its equivalent string representation in Cartesian form by using the specified format for its real and imaginary parts.</summary>
      <returns>The string representation of the current instance in Cartesian form.</returns>
      <param name="format">A standard or custom numeric format string.</param>
      <exception cref="T:System.FormatException">
        <paramref name="format" /> is not a valid format string.</exception>
    </member>
    <member name="M:System.Numerics.Complex.ToString(System.String,System.IFormatProvider)">
      <summary>Converts the value of the current complex number to its equivalent string representation in Cartesian form by using the specified format and culture-specific format information for its real and imaginary parts.</summary>
      <returns>The string representation of the current instance in Cartesian form, as specified by <paramref name="format" /> and <paramref name="provider" />.</returns>
      <param name="format">A standard or custom numeric format string.</param>
      <param name="provider">An object that supplies culture-specific formatting information.</param>
      <exception cref="T:System.FormatException">
        <paramref name="format" /> is not a valid format string.</exception>
    </member>
    <member name="F:System.Numerics.Complex.Zero">
      <summary>Returns a new <see cref="T:System.Numerics.Complex" /> instance with a real number equal to zero and an imaginary number equal to zero.</summary>
    </member>
  </members>
</doc>
=== C:/Users/treeman/Desktop/windows nt source code\xbox\Xbox Live Source\XONLINE_MAIN\public\ext\sdk\CLR\netfx40rtm\Profile\Client\System.Printing.xml ===
﻿<?xml version="1.0" encoding="utf-8"?>
<doc>
  <assembly>
    <name>System.Printing</name>
  </assembly>
  <members>
    <member name="T:System.Printing.EnumeratedPrintQueueTypes">
      <summary>Specifies attributes of print queues.</summary>
    </member>
    <member name="F:System.Printing.EnumeratedPrintQueueTypes.EnableDevQuery">
      <summary>A print queue that holds its print jobs when the document and printer configurations do not match.</summary>
    </member>
    <member name="F:System.Printing.EnumeratedPrintQueueTypes.PushedMachineConnection">
      <summary>A print queue that was installed by using the Push Printer Connections computer policy. See Remarks.</summary>
    </member>
    <member name="F:System.Printing.EnumeratedPrintQueueTypes.PushedUserConnection">
      <summary>A print queue that was installed by using the Push Printer Connections user policy. See Remarks.</summary>
    </member>
    <member name="F:System.Printing.EnumeratedPrintQueueTypes.Queued">
      <summary>A print queue that allows multiple print jobs in the queue.</summary>
    </member>
    <member name="F:System.Printing.EnumeratedPrintQueueTypes.DirectPrinting">
      <summary>A print queue that sends a print job directly to printing instead of spooling the job first.</summary>
    </member>
    <member name="F:System.Printing.EnumeratedPrintQueueTypes.PublishedInDirectoryServices">
      <summary>A print queue that is visible in the directory of printers.</summary>
    </member>
    <member name="F:System.Printing.EnumeratedPrintQueueTypes.WorkOffline">
      <summary>A print queue that can work offline.</summary>
    </member>
    <member name="F:System.Printing.EnumeratedPrintQueueTypes.RawOnly">
      <summary>A print queue that spools only raw data.</summary>
    </member>
    <member name="F:System.Printing.EnumeratedPrintQueueTypes.EnableBidi">
      <summary>A print queue for a printer that has bidirectional communication enabled.</summary>
    </member>
    <member name="F:System.Printing.EnumeratedPrintQueueTypes.KeepPrintedJobs">
      <summary>A print queue that keeps jobs in the queue after printing them.</summary>
    </member>
    <member name="F:System.Printing.EnumeratedPrintQueueTypes.Fax">
      <summary>A print queue that services a fax machine.</summary>
    </member>
    <member name="F:System.Printing.EnumeratedPrintQueueTypes.TerminalServer">
      <summary>A print queue that is installed by the redirection feature in Terminal Services.</summary>
    </member>
    <member name="F:System.Printing.EnumeratedPrintQueueTypes.Connections">
      <summary>A print queue that is connected to the specified print server.</summary>
    </member>
    <member name="F:System.Printing.EnumeratedPrintQueueTypes.Shared">
      <summary>A print queue that is shared.</summary>
    </member>
    <member name="F:System.Printing.EnumeratedPrintQueueTypes.Local">
      <summary>A print queue that is installed as a local print queue on the specified print server.</summary>
    </member>
    <member name="T:System.Printing.LocalPrintServer">
      <summary>Represents the local print server (the computer on which your application is running) and enables management of its print queues.</summary>
    </member>
    <member name="M:System.Printing.LocalPrintServer.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Printing.LocalPrintServer" /> class. </summary>
    </member>
    <member name="M:System.Printing.LocalPrintServer.#ctor(System.Printing.LocalPrintServerIndexedProperty[])">
      <summary>Initializes a new instance of the <see cref="T:System.Printing.LocalPrintServer" /> class that has the specified <see cref="T:System.Printing.LocalPrintServerIndexedProperty" /> array. </summary>
      <param name="propertiesFilter">An array of properties that the constructor initializes.</param>
    </member>
    <member name="M:System.Printing.LocalPrintServer.#ctor(System.Printing.LocalPrintServerIndexedProperty[],System.Printing.PrintSystemDesiredAccess)">
      <summary>Initializes a new instance of the <see cref="T:System.Printing.LocalPrintServer" /> class that has the specified <see cref="T:System.Printing.LocalPrintServerIndexedProperty" /> array and the specified <see cref="T:System.Printing.PrintSystemDesiredAccess" />. </summary>
      <param name="propertiesFilter">An array of properties that the constructor initializes.</param>
      <param name="desiredAccess">A value specifying the type of access to the print server that your program needs.</param>
      <exception cref="T:System.Printing.PrintServerException">
        <paramref name="desiredAccess" /> is a value that can be applied only to a <see cref="T:System.Printing.PrintQueue" /> object, not a <see cref="T:System.Printing.LocalPrintServer" /> object. For example, <see cref="F:System.Printing.PrintSystemDesiredAccess.UsePrinter" />.</exception>
    </member>
    <member name="M:System.Printing.LocalPrintServer.#ctor(System.Printing.PrintSystemDesiredAccess)">
      <summary>Initializes a new instance of the <see cref="T:System.Printing.LocalPrintServer" /> class that has the specified <see cref="T:System.Printing.PrintSystemDesiredAccess" />. </summary>
      <param name="desiredAccess">A value specifying the type of access to the print server that your application needs.</param>
      <exception cref="T:System.Printing.PrintServerException">
        <paramref name="desiredAccess" /> is a value that can be applied only to a <see cref="T:System.Printing.PrintQueue" /> object, not a <see cref="T:System.Printing.LocalPrintServer" /> object. For example, <see cref="F:System.Printing.PrintSystemDesiredAccess.UsePrinter" />.</exception>
    </member>
    <member name="M:System.Printing.LocalPrintServer.#ctor(System.String[])">
      <summary>Initializes a new instance of the <see cref="T:System.Printing.LocalPrintServer" /> class that has the specified properties.</summary>
      <param name="propertiesFilter">An array of the property names that the constructor initializes.</param>
    </member>
    <member name="M:System.Printing.LocalPrintServer.#ctor(System.String[],System.Printing.PrintSystemDesiredAccess)">
      <summary>Initializes a new instance of the <see cref="T:System.Printing.LocalPrintServer" /> class that has the specified properties and <see cref="T:System.Printing.PrintSystemDesiredAccess" />. </summary>
      <param name="propertiesFilter">An array of the property names that the constructor initializes.</param>
      <param name="desiredAccess">A value specifying the type of access to the print server that your application needs.</param>
      <exception cref="T:System.Printing.PrintServerException">
        <paramref name="desiredAccess" /> is a value that can be applied only to a <see cref="T:System.Printing.PrintQueue" /> object, not a <see cref="T:System.Printing.LocalPrintServer" /> object. For example, <see cref="F:System.Printing.PrintSystemDesiredAccess.UsePrinter" />.</exception>
    </member>
    <member name="M:System.Printing.LocalPrintServer.Commit">
      <summary>Writes any changes that your application made to the properties of the <see cref="T:System.Printing.LocalPrintServer" /> to the actual print server that the object represents. </summary>
      <exception cref="T:System.Printing.PrintServerException">Some properties are not committed.</exception>
      <exception cref="T:System.Printing.PrintCommitAttributesException">Some of the properties could not be committed. - or -The <see cref="T:System.Printing.LocalPrintServer" /> object was not created with sufficient rights. See Remarks.</exception>
    </member>
    <member name="M:System.Printing.LocalPrintServer.ConnectToPrintQueue(System.Printing.PrintQueue)">
      <summary>Connects the local print server to the specified <see cref="T:System.Printing.PrintQueue" />. </summary>
      <returns>true if the connection is made; otherwise false.</returns>
      <param name="printer">The print queue to connect.</param>
      <exception cref="T:System.Printing.PrintServerException">A print queue that matches the <see cref="P:System.Printing.PrintQueue.FullName" /> property of the <paramref name="printer" /> is not found.</exception>
    </member>
    <member name="M:System.Printing.LocalPrintServer.ConnectToPrintQueue(System.String)">
      <summary>Connects to the print queue that is specified by using the <see cref="T:System.String" />. </summary>
      <returns>true if the connection is made; otherwise false.</returns>
      <param name="printQueuePath">The full path of the print queue that is being connected.</param>
      <exception cref="T:System.Printing.PrintServerException">A print queue with the specified path is not found.</exception>
    </member>
    <member name="P:System.Printing.LocalPrintServer.DefaultPrintQueue">
      <summary>Gets or sets the default print queue. </summary>
      <returns>The <see cref="T:System.Printing.PrintQueue" /> that is designated as the default queue for the local computer.</returns>
    </member>
    <member name="M:System.Printing.LocalPrintServer.DisconnectFromPrintQueue(System.Printing.PrintQueue)">
      <summary>Disconnects the local print server from the specified <see cref="T:System.Printing.PrintQueue" />. </summary>
      <returns>true if the disconnection is successful; otherwise false.</returns>
      <param name="printer">The print queue that is being disconnected.</param>
      <exception cref="T:System.Printing.PrintServerException">A print queue matching the <see cref="P:System.Printing.PrintQueue.FullName" /> property of the <paramref name="printer" /> is not found.</exception>
    </member>
    <member name="M:System.Printing.LocalPrintServer.DisconnectFromPrintQueue(System.String)">
      <summary>Disconnects from the print queue that is specified in the <see cref="T:System.String" />. </summary>
      <returns>true if the disconnection is successful; otherwise false.</returns>
      <param name="printQueuePath">The full path to the print queue that is disconnected.</param>
      <exception cref="T:System.Printing.PrintServerException">A print queue with the specified path is not found.</exception>
    </member>
    <member name="M:System.Printing.LocalPrintServer.GetDefaultPrintQueue">
      <summary>Returns a reference to the default print queue of the <see cref="T:System.Printing.LocalPrintServer" />. </summary>
      <returns>The default <see cref="T:System.Printing.PrintQueue" />.</returns>
    </member>
    <member name="M:System.Printing.LocalPrintServer.Refresh">
      <summary>Updates the properties of the <see cref="T:System.Printing.LocalPrintServer" /> object so that their values match the values of the print server that the object represents. </summary>
      <exception cref="T:System.Printing.PrintServerException">Some properties did not update.</exception>
    </member>
    <member name="T:System.Printing.LocalPrintServerIndexedProperty">
      <summary>Specifies the properties of a <see cref="T:System.Printing.LocalPrintServer" /> object that are initialized when it is constructed.</summary>
    </member>
    <member name="F:System.Printing.LocalPrintServerIndexedProperty.MinorVersion">
      <summary>The property that specifies the minor version of the operating system.</summary>
    </member>
    <member name="F:System.Printing.LocalPrintServerIndexedProperty.MajorVersion">
      <summary>The property that specifies the major version of the operating system.</summary>
    </member>
    <member name="F:System.Printing.LocalPrintServerIndexedProperty.EventLog">
      <summary>The property that specifies the kind of event logging that is provided by the local print server.</summary>
    </member>
    <member name="F:System.Printing.LocalPrintServerIndexedProperty.DefaultPrintQueue">
      <summary>The property that specifies the default print queue for the local print server.</summary>
    </member>
    <member name="F:System.Printing.LocalPrintServerIndexedProperty.RestartJobOnPoolEnabled">
      <summary>The property that specifies whether users can restart jobs when printer pooling is being used.</summary>
    </member>
    <member name="F:System.Printing.LocalPrintServerIndexedProperty.RestartJobOnPoolTimeout">
      <summary>The property that specifies the wait time before jobs can be restarted when printer pooling is being used.</summary>
    </member>
    <member name="F:System.Printing.LocalPrintServerIndexedProperty.NetPopup">
      <summary>The property that specifies whether the client computer or the print server receives notifications that a job is finished.</summary>
    </member>
    <member name="F:System.Printing.LocalPrintServerIndexedProperty.BeepEnabled">
      <summary>The property that specifies whether a printer error causes the local print server to beep.</summary>
    </member>
    <member name="F:System.Printing.LocalPrintServerIndexedProperty.DefaultSchedulerPriority">
      <summary>The property that specifies the default priority for the scheduler.</summary>
    </member>
    <member name="F:System.Printing.LocalPrintServerIndexedProperty.SchedulerPriority">
      <summary>The property that specifies the priority of the scheduler.</summary>
    </member>
    <member name="F:System.Printing.LocalPrintServerIndexedProperty.DefaultPortThreadPriority">
      <summary>The property that specifies the default priority for the thread that manages port I/0.</summary>
    </member>
    <member name="F:System.Printing.LocalPrintServerIndexedProperty.PortThreadPriority">
      <summary>The property that specifies the priority of the thread that manages port I/O.</summary>
    </member>
    <member name="F:System.Printing.LocalPrintServerIndexedProperty.DefaultSpoolDirectory">
      <summary>The property that specifies the path to the folder where spool jobs are located as temporary files.</summary>
    </member>
    <member name="T:System.Printing.PrintDocumentImageableArea">
      <summary>Specifies the size of the paper (or other media), the size of the imageable area, and the location of the imageable area.</summary>
    </member>
    <member name="P:System.Printing.PrintDocumentImageableArea.ExtentHeight">
      <summary>Gets the height of the imageable area. </summary>
      <returns>A <see cref="T:System.Double" /> that represents the distance from the origin.</returns>
    </member>
    <member name="P:System.Printing.PrintDocumentImageableArea.ExtentWidth">
      <summary>Gets the width of the imageable area. </summary>
      <returns>A <see cref="T:System.Double" /> that represents the distance from the origin.</returns>
    </member>
    <member name="P:System.Printing.PrintDocumentImageableArea.MediaSizeHeight">
      <summary>Gets the height of the paper or media.</summary>
      <returns>A <see cref="T:System.Double" /> that represents the distance from the upper-left corner of the page to the lower-left corner.</returns>
    </member>
    <member name="P:System.Printing.PrintDocumentImageableArea.MediaSizeWidth">
      <summary>Gets the width of the paper or media.</summary>
      <returns>A <see cref="T:System.Double" /> that represents the distance from the upper-left corner of the page to the upper-right corner.</returns>
    </member>
    <member name="P:System.Printing.PrintDocumentImageableArea.OriginHeight">
      <summary>Gets the distance from the upper-left corner of the imageable area (also called the 'origin' of the imageable area) to the nearest point on the top edge of the page.</summary>
      <returns>A <see cref="T:System.Double" /> that represents the distance (in pixels - 1/96 of an inch) from the upper-left corner of the imageable area (also called the 'origin' of the imageable area) to the nearest point on the top edge of the page.</returns>
    </member>
    <member name="P:System.Printing.PrintDocumentImageableArea.OriginWidth">
      <summary>Gets the origin width, which is the distance from the left edge of the page to the upper-left corner of the imageable area (also called the "origin" of the imageable area).</summary>
      <returns>A <see cref="T:System.Double" /> that represents the origin width (in pixels - 1/96 of an inch), which is the distance from the left edge of the page to the upper-left corner of the imageable area (also called the "origin" of the imageable area).</returns>
    </member>
    <member name="T:System.Printing.PrintDriver">
      <summary>Represents a print driver.</summary>
    </member>
    <member name="M:System.Printing.PrintDriver.Commit">
      <summary>Do not use.</summary>
    </member>
    <member name="M:System.Printing.PrintDriver.Refresh">
      <summary>Do not use.</summary>
    </member>
    <member name="T:System.Printing.PrintFilter">
      <summary>Defines disposal behavior that is common to both the <see cref="T:System.Printing.PrintDriver" /> and <see cref="T:System.Printing.PrintProcessor" /> classes. <see cref="T:System.Printing.PrintFilter" /> supports the Windows Presentation Foundation (WPF) infrastructure and is not intended to be used directly from your code.</summary>
    </member>
    <member name="M:System.Printing.PrintFilter.InternalDispose(System.Boolean)">
      <summary>Releases the unmanaged resources that are used by the class that is derived from <see cref="T:System.Printing.PrintFilter" /> and optionally releases the managed resources. </summary>
      <param name="disposing">true to release both managed and unmanaged resources; false to release only unmanaged resources. </param>
    </member>
    <member name="T:System.Printing.PrintJobInfoCollection">
      <summary>Represents one or more <see cref="T:System.Printing.PrintSystemJobInfo" /> objects. </summary>
    </member>
    <member name="M:System.Printing.PrintJobInfoCollection.#ctor(System.Printing.PrintQueue,System.String[])">
      <summary>Initializes a new instance of the <see cref="T:System.Printing.PrintJobInfoCollection" /> class that contains the <see cref="T:System.Printing.PrintSystemJobInfo" /> objects for every job that is in the specified <see cref="T:System.Printing.PrintQueue" /> and that initializes those objects only in the properties that are listed in the specified property filter. </summary>
      <param name="printQueue">The print queue whose print jobs will populate the collection. </param>
      <param name="propertyFilter">A list of a subset of the properties of a <see cref="T:System.Printing.PrintSystemJobInfo" /> object. </param>
    </member>
    <member name="M:System.Printing.PrintJobInfoCollection.Add(System.Printing.PrintSystemJobInfo)">
      <summary>Adds a member to the <see cref="T:System.Printing.PrintJobInfoCollection" />. </summary>
      <param name="printObject">The object that is added.</param>
    </member>
    <member name="M:System.Printing.PrintJobInfoCollection.Dispose(System.Boolean)">
      <summary>Releases the unmanaged resources that are being used by the <see cref="T:System.Printing.PrintJobInfoCollection" /> and optionally releases the managed resources. </summary>
      <param name="disposing">true to release both managed and unmanaged resources; false to release only unmanaged resources.</param>
    </member>
    <member name="M:System.Printing.PrintJobInfoCollection.GetEnumerator">
      <summary>Gets an object that implements the generic <see cref="T:System.Collections.IEnumerator" /> interface that is closed with <see cref="T:System.Printing.PrintSystemJobInfo" />.</summary>
      <returns>An object that implements the generic <see cref="T:System.Collections.IEnumerator" /> interface and that can iterate through the <see cref="T:System.Printing.PrintSystemJobInfo" /> objects that the <see cref="T:System.Printing.PrintJobInfoCollection" /> contains.</returns>
    </member>
    <member name="M:System.Printing.PrintJobInfoCollection.GetNonGenericEnumerator">
      <summary>Gets an object that implements the non-generic <see cref="T:System.Collections.IEnumerator" /> interface. </summary>
      <returns>An object that implements the non-generic <see cref="T:System.Collections.IEnumerator" /> interface and that can iterate through the <see cref="T:System.Printing.PrintSystemJobInfo" /> objects that the <see cref="T:System.Printing.PrintJobInfoCollection" /> contains.</returns>
    </member>
    <member name="T:System.Printing.PrintJobPriority">
      <summary>Specifies a non-numerical priority for a print job relative to other print jobs in the print queue. </summary>
    </member>
    <member name="F:System.Printing.PrintJobPriority.Default">
      <summary>A job that has the <see cref="P:System.Printing.PrintQueue.DefaultPriority" /> for the <see cref="T:System.Printing.PrintQueueStream" />.</summary>
    </member>
    <member name="F:System.Printing.PrintJobPriority.None">
      <summary>A job that has no non-numerical priority.</summary>
    </member>
    <member name="F:System.Printing.PrintJobPriority.Minimum">
      <summary>A job that has the lowest priority.</summary>
    </member>
    <member name="F:System.Printing.PrintJobPriority.Maximum">
      <summary>A job that has the highest priority.</summary>
    </member>
    <member name="T:System.Printing.PrintJobSettings">
      <summary>Describes a print job. </summary>
    </member>
    <member name="P:System.Printing.PrintJobSettings.CurrentPrintTicket">
      <summary>Gets or sets a <see cref="T:System.Printing.PrintTicket" /> object that holds all the detailed settings for the print job.</summary>
      <returns>A <see cref="T:System.Printing.PrintTicket" /> object that holds all the details about the print job, such as the number of copies to print, and whether stapling or duplex printing is used. </returns>
    </member>
    <member name="P:System.Printing.PrintJobSettings.Description">
      <summary>Gets or sets a description of a print job. </summary>
      <returns>A <see cref="T:System.String" /> that describes the print job, for example, "Quarterly Report." </returns>
    </member>
    <member name="T:System.Printing.PrintJobStatus">
      <summary>Specifies the current status of a print job in a print queue.</summary>
    </member>
    <member name="F:System.Printing.PrintJobStatus.Retained">
      <summary>The print job is retained in the print queue after printing.</summary>
    </member>
    <member name="F:System.Printing.PrintJobStatus.Completed">
      <summary>The print job is complete, including any post-printing processing. </summary>
    </member>
    <member name="F:System.Printing.PrintJobStatus.Restarted">
      <summary>The print job was blocked but has restarted.</summary>
    </member>
    <member name="F:System.Printing.PrintJobStatus.UserIntervention">
      <summary>The printer requires user action to fix an error condition.  </summary>
    </member>
    <member name="F:System.Printing.PrintJobStatus.Blocked">
      <summary>An error condition, possibly on a print job that precedes this one in the queue, blocked the print job.</summary>
    </member>
    <member name="F:System.Printing.PrintJobStatus.Deleted">
      <summary>The print job was deleted from the queue, typically after printing.</summary>
    </member>
    <member name="F:System.Printing.PrintJobStatus.Printed">
      <summary>The print job printed. </summary>
    </member>
    <member name="F:System.Printing.PrintJobStatus.PaperOut">
      <summary>The printer is out of the required paper size.</summary>
    </member>
    <member name="F:System.Printing.PrintJobStatus.Offline">
      <summary>The printer is offline.</summary>
    </member>
    <member name="F:System.Printing.PrintJobStatus.Spooling">
      <summary>The print job is spooling.</summary>
    </member>
    <member name="F:System.Printing.PrintJobStatus.Deleting">
      <summary>The print job is in the process of being deleted.</summary>
    </member>
    <member name="F:System.Printing.PrintJobStatus.Paused">
      <summary>The print job is paused.</summary>
    </member>
    <member name="F:System.Printing.PrintJobStatus.None">
      <summary>The print job has no specified state.</summary>
    </member>
    <member name="F:System.Printing.PrintJobStatus.Printing">
      <summary>The print job is now printing.</summary>
    </member>
    <member name="F:System.Printing.PrintJobStatus.Error">
      <summary>The print job is in an error state.</summary>
    </member>
    <member name="T:System.Printing.PrintJobType">
      <summary>Specifies whether the print job uses XML Paper Specification (XPS). </summary>
    </member>
    <member name="F:System.Printing.PrintJobType.None">
      <summary>Not specified whether the print job is XPS.</summary>
    </member>
    <member name="F:System.Printing.PrintJobType.Xps">
      <summary>An XPS print job. </summary>
    </member>
    <member name="F:System.Printing.PrintJobType.Legacy">
      <summary>A non-XPS print job.</summary>
    </member>
    <member name="T:System.Printing.PrintPort">
      <summary>Represents a printer port on a print server. Each print queue has a print port assigned to it.</summary>
    </member>
    <member name="M:System.Printing.PrintPort.Commit">
      <summary>Do not use. </summary>
    </member>
    <member name="M:System.Printing.PrintPort.Refresh">
      <summary>Do not use. </summary>
    </member>
    <member name="T:System.Printing.PrintProcessor">
      <summary>Represents a print processor on a print server.</summary>
    </member>
    <member name="M:System.Printing.PrintProcessor.Commit">
      <summary>Do not use. </summary>
    </member>
    <member name="M:System.Printing.PrintProcessor.Refresh">
      <summary>Do not use. </summary>
    </member>
    <member name="T:System.Printing.PrintQueue">
      <summary>Manages printers and print jobs. </summary>
    </member>
    <member name="M:System.Printing.PrintQueue.#ctor(System.Printing.PrintServer,System.String)">
      <summary>Initializes a new instance of <see cref="T:System.Printing.PrintQueue" /> class using the specified <see cref="T:System.Printing.PrintServer" /> and queue name. </summary>
      <param name="printServer">The print server to host the print queue.</param>
      <param name="printQueueName">The name of the print queue.</param>
    </member>
    <member name="M:System.Printing.PrintQueue.#ctor(System.Printing.PrintServer,System.String,System.Int32)">
      <summary>Initializes a new instance of <see cref="T:System.Printing.PrintQueue" /> class using the specified <see cref="T:System.Printing.PrintServer" />, queue name, and print schema version. </summary>
      <param name="printServer">The print server that hosts the print queue.</param>
      <param name="printQueueName">The name of the print queue.</param>
      <param name="printSchemaVersion">The version of the Print Schema to use.</param>
    </member>
    <member name="M:System.Printing.PrintQueue.#ctor(System.Printing.PrintServer,System.String,System.Int32,System.Printing.PrintSystemDesiredAccess)">
      <summary>Initializes a new instance of <see cref="T:System.Printing.PrintQueue" /> class using the specified <see cref="T:System.Printing.PrintServer" />, queue name, print schema version, and desired access. </summary>
      <param name="printServer">The print server that hosts the print queue.</param>
      <param name="printQueueName">The name of the print queue.</param>
      <param name="printSchemaVersion">The version of the Print Schema to use.</param>
      <param name="desiredAccess">One of the <see cref="T:System.Printing.PrintSystemDesiredAccess" />   values that specifies the type of access to the print queue that your program needs.</param>
      <exception cref="T:System.Printing.PrintQueueException">
        <paramref name="desiredAccess" /> is a value that can be applied only to a <see cref="T:System.Printing.PrintServer" /> object, not a <see cref="T:System.Printing.PrintQueue" /> object. For example, <see cref="F:System.Printing.PrintSystemDesiredAccess.AdministrateServer" />.</exception>
    </member>
    <member name="M:System.Printing.PrintQueue.#ctor(System.Printing.PrintServer,System.String,System.Printing.PrintQueueIndexedProperty[])">
      <summary>Initializes a new instance of <see cref="T:System.Printing.PrintQueue" /> class using the specified <see cref="T:System.Printing.PrintServer" />, queue name, and array of <see cref="T:System.Printing.PrintQueueIndexedProperty" /> values to initialize. </summary>
      <param name="printServer">The print server that hosts the print queue.</param>
      <param name="printQueueName">The name of the print queue.</param>
      <param name="propertyFilter">An array of <see cref="T:System.Printing.PrintQueueIndexedProperty" /> values that specifies the property values to initialize.</param>
    </member>
    <member name="M:System.Printing.PrintQueue.#ctor(System.Printing.PrintServer,System.String,System.Printing.PrintQueueIndexedProperty[],System.Printing.PrintSystemDesiredAccess)">
      <summary>Initializes a new instance of <see cref="T:System.Printing.PrintQueue" /> class with the specified <see cref="T:System.Printing.PrintServer" />, queue name, array of <see cref="T:System.Printing.PrintQueueIndexedProperty" /> values to initialize, and desired access. </summary>
      <param name="printServer">The print server that hosts the print queue.</param>
      <param name="printQueueName">The name of the print queue.</param>
      <param name="propertyFilter">An array of <see cref="T:System.Printing.PrintQueueIndexedProperty" /> values that specifies the properties to initialize.</param>
      <param name="desiredAccess">One of the <see cref="T:System.Printing.PrintSystemDesiredAccess" /> values that specifies the type of access to the print queue that your program needs.</param>
      <exception cref="T:System.Printing.PrintQueueException">
        <paramref name="desiredAccess" /> is a value that can be applied only to a <see cref="T:System.Printing.PrintServer" /> object, not a <see cref="T:System.Printing.PrintQueue" /> object. For example, <see cref="F:System.Printing.PrintSystemDesiredAccess.AdministrateServer" />.</exception>
    </member>
    <member name="M:System.Printing.PrintQueue.#ctor(System.Printing.PrintServer,System.String,System.Printing.PrintSystemDesiredAccess)">
      <summary>Initializes a new instance of <see cref="T:System.Printing.PrintQueue" /> class using the specified <see cref="T:System.Printing.PrintServer" />, queue name, and desired access. </summary>
      <param name="printServer">The print server that hosts the print queue.</param>
      <param name="printQueueName">The name of the print queue.</param>
      <param name="desiredAccess">One of the <see cref="T:System.Printing.PrintSystemDesiredAccess" />   values that specifies the type of access to the print queue that your program needs.</param>
      <exception cref="T:System.Printing.PrintQueueException">
        <paramref name="desiredAccess" /> is a value that can be applied only to a <see cref="T:System.Printing.PrintServer" /> object, not a <see cref="T:System.Printing.PrintQueue" /> object. For example, <see cref="F:System.Printing.PrintSystemDesiredAccess.AdministrateServer" />.</exception>
    </member>
    <member name="M:System.Printing.PrintQueue.#ctor(System.Printing.PrintServer,System.String,System.String[])">
      <summary>Initializes a new instance of <see cref="T:System.Printing.PrintQueue" /> class using the specified <see cref="T:System.Printing.PrintServer" />, queue name, and array of property names to initialize. </summary>
      <param name="printServer">The print server that hosts the print queue.</param>
      <param name="printQueueName">The name of the print queue.</param>
      <param name="propertyFilter">An array of the names of properties to initialize.</param>
    </member>
    <member name="M:System.Printing.PrintQueue.#ctor(System.Printing.PrintServer,System.String,System.String[],System.Printing.PrintSystemDesiredAccess)">
      <summary>Initializes a new instance of <see cref="T:System.Printing.PrintQueue" /> class using the specified <see cref="T:System.Printing.PrintServer" />, queue name, property filter, and desired access. </summary>
      <param name="printServer">The print server that hosts the print queue.</param>
      <param name="printQueueName">The name of the print queue.</param>
      <param name="propertyFilter">An array of the names of properties to initialize.</param>
      <param name="desiredAccess">One of the <see cref="T:System.Printing.PrintSystemDesiredAccess" />   values that specifies the type of access to the print queue that your program needs.</param>
      <exception cref="T:System.Printing.PrintQueueException">
        <paramref name="desiredAccess" /> is a value that can be applied only to a <see cref="T:System.Printing.PrintServer" /> object, not a <see cref="T:System.Printing.PrintQueue" /> object. For example, <see cref="F:System.Printing.PrintSystemDesiredAccess.AdministrateServer" />.</exception>
    </member>
    <member name="M:System.Printing.PrintQueue.AddJob">
      <summary>Inserts a new (generically named) print job, whose content is a <see cref="T:System.Byte" /> array, into the queue. </summary>
      <returns>A <see cref="T:System.Printing.PrintSystemJobInfo" /> that represents the print job and its status.</returns>
    </member>
    <member name="M:System.Printing.PrintQueue.AddJob(System.String)">
      <summary>Inserts a new print job, whose content is a <see cref="T:System.Byte" /> array, into the queue. </summary>
      <returns>A <see cref="T:System.Printing.PrintSystemJobInfo" /> that represents the print job and its status.</returns>
      <param name="jobName">The name of the print job.</param>
    </member>
    <member name="M:System.Printing.PrintQueue.AddJob(System.String,System.String,System.Boolean)">
      <summary>Inserts a new print job for an XML Paper Specification (XPS) Document into the queue, gives it the specified name, and specifies whether or not it should be validated.</summary>
      <returns>A <see cref="T:System.Printing.PrintSystemJobInfo" /> that represents the print job and its status.</returns>
      <param name="jobName">The name of the print job.</param>
      <param name="documentPath">The path and name of the document that is being printed.</param>
      <param name="fastCopy">true to spool quickly without page-by-page progress feedback and without validating that the file is valid XPS; otherwise, false. </param>
    </member>
    <member name="P:System.Printing.PrintQueue.AveragePagesPerMinute">
      <summary>Gets the speed of the printer measured in pages per minute. </summary>
      <returns>The average pages printed per minute of the printer.</returns>
    </member>
    <member name="P:System.Printing.PrintQueue.ClientPrintSchemaVersion">
      <summary>Gets the version of the Print Schema. </summary>
      <returns>The version of the Print Schema in use.</returns>
    </member>
    <member name="P:System.Printing.PrintQueue.Comment">
      <summary>Gets or sets a comment about the printer. </summary>
      <returns>A comment about the printer.</returns>
    </member>
    <member name="M:System.Printing.PrintQueue.Commit">
      <summary>Writes the current properties of the <see cref="T:System.Printing.PrintQueue" /> object to the actual print queue on the print server. </summary>
      <exception cref="T:System.Printing.PrintSystemException">Some of the properties could not be committed. </exception>
      <exception cref="T:System.Printing.PrintCommitAttributesException">Some of the properties could not be committed. - or -The <see cref="T:System.Printing.PrintQueue" /> object was not created with sufficient rights.</exception>
    </member>
    <member name="M:System.Printing.PrintQueue.CreateXpsDocumentWriter(System.Double@,System.Double@)">
      <summary>Creates an <see cref="T:System.Windows.Xps.XpsDocumentWriter" /> object with the specified dimensions. </summary>
      <returns>An <see cref="T:System.Windows.Xps.XpsDocumentWriter" /> that writes to an XPS stream. This can be null. </returns>
      <param name="width">The width of the XPS document.</param>
      <param name="height">The height of the XPS document.</param>
    </member>
    <member name="M:System.Printing.PrintQueue.CreateXpsDocumentWriter(System.Printing.PrintDocumentImageableArea@)">
      <summary>Creates an <see cref="T:System.Windows.Xps.XpsDocumentWriter" /> object, opens a Windows common print dialog and returns a ref (ByRef in Visual Basic) parameter that represents information about the imageable area and the dimensions of the media.</summary>
      <returns>An <see cref="T:System.Windows.Xps.XpsDocumentWriter" /> that writes XPS data to a stream. This can be null. (The parameter <paramref name="documentImageableArea" /> is a ref [ByRef in Visual Basic] parameter that is initialized by the method, so it represents a second returned item.) </returns>
      <param name="documentImageableArea">A reference to an object that contains the dimensions of the area of the page on which the device can print. Since its data type has no public constructor, this parameter is passed uninitialized.</param>
    </member>
    <member name="M:System.Printing.PrintQueue.CreateXpsDocumentWriter(System.Printing.PrintDocumentImageableArea@,System.Windows.Controls.PageRangeSelection@,System.Windows.Controls.PageRange@)">
      <summary>Creates an <see cref="T:System.Windows.Xps.XpsDocumentWriter" /> object, opens a Windows common print dialog, provides the dialog with a page range and a description of the print job, and returns a ref (ByRef in Visual Basic) parameter that represents information about the imageable area and the dimensions of the media.</summary>
      <returns>An <see cref="T:System.Windows.Xps.XpsDocumentWriter" /> that writes XPS data to a stream. This can be null. (The parameters <paramref name="documentImageableArea" />, <paramref name="pageRangeSelection" />, and <paramref name="pageRange" /> are all ref [ByRef in Visual Basic] parameters that are initialized by the user and returned when the dialog is closed, so each represents an additional returned item.) </returns>
      <param name="documentImageableArea">A reference to an object that contains the dimensions of the area of the page on which the device can print. Since its data type has no public constructor, this parameter is passed uninitialized.</param>
      <param name="pageRangeSelection">A value that specifies whether to print all pages or only a range that is specified by the user.</param>
      <param name="pageRange">The range of pages that is printed.</param>
    </member>
    <member name="M:System.Printing.PrintQueue.CreateXpsDocumentWriter(System.Printing.PrintQueue)">
      <summary>Creates an <see cref="T:System.Windows.Xps.XpsDocumentWriter" /> object and associates it with the specified print queue. </summary>
      <returns>An <see cref="T:System.Windows.Xps.XpsDocumentWriter" /> that writes to an XPS stream. </returns>
      <param name="printQueue">A print queue to print the XPS document.</param>
    </member>
    <member name="M:System.Printing.PrintQueue.CreateXpsDocumentWriter(System.String,System.Printing.PrintDocumentImageableArea@)">
      <summary>Creates an <see cref="T:System.Windows.Xps.XpsDocumentWriter" /> object, opens a Windows common print dialog (and provides it a job description) and returns a ref (ByRef in Visual Basic) parameter that represents information about the imageable area and the dimensions of the media.</summary>
      <returns>An <see cref="T:System.Windows.Xps.XpsDocumentWriter" /> that writes XPS data to a stream. This can be null. (The parameter <paramref name="documentImageableArea" /> is a ref [ByRef in Visual Basic] parameter that is initialized by the method, so it represents a second returned item.) </returns>
      <param name="jobDescription">A name for the print job. It appears in the Windows printing user interface. </param>
      <param name="documentImageableArea">A reference to an object that contains the dimensions of the area of the page on which the device can print. Since its data type has no public constructor, this parameter is passed uninitialized.</param>
    </member>
    <member name="M:System.Printing.PrintQueue.CreateXpsDocumentWriter(System.String,System.Printing.PrintDocumentImageableArea@,System.Windows.Controls.PageRangeSelection@,System.Windows.Controls.PageRange@)">
      <summary>Creates an <see cref="T:System.Windows.Xps.XpsDocumentWriter" /> object, opens a Windows common print dialog, provides the dialog with a page range, and returns a ref (ByRef in Visual Basic) parameter that represents information about the imageable area and the dimensions of the media.</summary>
      <returns>An <see cref="T:System.Windows.Xps.XpsDocumentWriter" /> that writes XPS data to a stream. This can be null. (The parameters <paramref name="documentImageableArea" />, <paramref name="pageRangeSelection" />, and <paramref name="pageRange" /> are all ref [ByRef in Visual Basic] parameters that are initialized by the user and returned when the dialog is closed, so each represents an additional returned item.)</returns>
      <param name="jobDescription">A name for the print job. It appears in the Windows printing user interface. </param>
      <param name="documentImageableArea">A reference to an object that contains the dimensions of the area of the page on which the device can print. Since its data type has no public constructor, this parameter is passed uninitialized.</param>
      <param name="pageRangeSelection">A value that specifies whether to print all pages or only a range that is specified by the user.</param>
      <param name="pageRange">The range of pages that is printed.</param>
    </member>
    <member name="P:System.Printing.PrintQueue.CurrentJobSettings">
      <summary>Gets an object that contains the configuration settings for the current print job. </summary>
      <returns>A <see cref="T:System.Printing.PrintJobSettings" /> value that holds the settings of the currently printing job. These settings include a description of the job and a reference to the job's <see cref="T:System.Printing.PrintTicket" />. </returns>
    </member>
    <member name="P:System.Printing.PrintQueue.DefaultPrintTicket">
      <summary>Gets or sets the default printer options associated with this <see cref="T:System.Printing.PrintQueue" />.</summary>
      <returns>The default <see cref="T:System.Printing.PrintTicket" /> for the print queue; or null if an error has occurred in the print queue.</returns>
    </member>
    <member name="P:System.Printing.PrintQueue.DefaultPriority">
      <summary>Gets or sets the default priority that is given to each new print job added to the queue. </summary>
      <returns>The default priority for print jobs added to the queue. Possible values range from 1 through 99. The default is 1. </returns>
    </member>
    <member name="P:System.Printing.PrintQueue.Description">
      <summary>Gets a description of the print queue. </summary>
      <returns>A description of the print queue.</returns>
    </member>
    <member name="P:System.Printing.PrintQueue.FullName">
      <summary>Gets the complete name of the queue. </summary>
      <returns>The complete name of the print queue.</returns>
    </member>
    <member name="M:System.Printing.PrintQueue.GetJob(System.Int32)">
      <summary>Gets the print job with the specified ID number. </summary>
      <returns>A <see cref="T:System.Printing.PrintSystemJobInfo" /> that specifies the properties of the job and its status.</returns>
      <param name="jobId">The number of the job in the queue.</param>
    </member>
    <member name="M:System.Printing.PrintQueue.GetPrintCapabilities">
      <summary>Gets a <see cref="T:System.Printing.PrintCapabilities" /> object that identifies the capabilities of the printer. </summary>
      <returns>A <see cref="T:System.Printing.PrintCapabilities" /> object that specifies what the printer can and cannot do, such as two-sided coping or automatic stapling. </returns>
      <exception cref="T:System.Printing.PrintQueueException">The <see cref="T:System.Printing.PrintCapabilities" /> object could not be retrieved.</exception>
    </member>
    <member name="M:System.Printing.PrintQueue.GetPrintCapabilities(System.Printing.PrintTicket)">
      <summary>Gets a <see cref="T:System.Printing.PrintCapabilities" /> object that identifies the capabilities of the printer. </summary>
      <returns>A <see cref="T:System.Printing.PrintCapabilities" /> object that specifies what the printer can and cannot do, such as two-sided coping or automatic stapling. </returns>
      <param name="printTicket">A print ticket that provides the basis on which the print capabilities are reported. </param>
      <exception cref="T:System.Printing.PrintQueueException">The <see cref="T:System.Printing.PrintCapabilities" /> object could not be retrieved.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="printTicket" /> is not well-formed.</exception>
    </member>
    <member name="M:System.Printing.PrintQueue.GetPrintCapabilitiesAsXml">
      <summary>Gets a <see cref="T:System.IO.MemoryStream" /> object that specifies the printer's capabilities as an XML stream that complies with the Print Schema. </summary>
      <returns>A <see cref="T:System.IO.MemoryStream" /> specifying the printer's capabilities by using the XML schema "PrintCapabilities," a part of the Print Schema system.</returns>
      <exception cref="T:System.Printing.PrintQueueException">The print capabilities could not be retrieved.</exception>
    </member>
    <member name="M:System.Printing.PrintQueue.GetPrintCapabilitiesAsXml(System.Printing.PrintTicket)">
      <summary>Gets a <see cref="T:System.IO.MemoryStream" /> object that specifies the printer's capabilities in an XML format that complies with the Print Schema. </summary>
      <returns>A <see cref="T:System.IO.MemoryStream" /> specifying the printer's capabilities by using the XML schema "PrintCapabilities," a part of the Print Schema system.</returns>
      <param name="printTicket">A print ticket that provides the basis on which the print capabilities are reported. </param>
      <exception cref="T:System.Printing.PrintQueueException">The print capabilities could not be retrieved.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="printTicket" /> is not well-formed.</exception>
    </member>
    <member name="M:System.Printing.PrintQueue.GetPrintJobInfoCollection">
      <summary>Creates a collection that contains a <see cref="T:System.Printing.PrintSystemJobInfo" /> object for each job in the queue. </summary>
      <returns>Returns a <see cref="T:System.Printing.PrintJobInfoCollection" /> of <see cref="T:System.Printing.PrintSystemJobInfo" /> objects. There is one for each job in the queue.</returns>
    </member>
    <member name="P:System.Printing.PrintQueue.HasPaperProblem">
      <summary>Gets a value that indicates if the printer is having an unspecified paper problem. </summary>
      <returns>true if there is an unspecified paper problem; otherwise, false.</returns>
    </member>
    <member name="P:System.Printing.PrintQueue.HasToner">
      <summary>Gets a value that indicates if the printer has toner. </summary>
      <returns>true if the current printer has toner; otherwise, false.</returns>
    </member>
    <member name="P:System.Printing.PrintQueue.HostingPrintServer">
      <summary>Gets or sets (protected) the print server that controls the print queue. </summary>
      <returns>The name and other properties of the <see cref="T:System.Printing.PrintServer" /> that is hosting the print queue.</returns>
    </member>
    <member name="P:System.Printing.PrintQueue.InPartialTrust">
      <summary>Gets or sets a value that indicates whether the queue is operating in a partially trusted mode, a higher level of trust. </summary>
      <returns>true if the queue is operating in a partially trusted mode; otherwise, false.</returns>
    </member>
    <member name="M:System.Printing.PrintQueue.InternalDispose(System.Boolean)">
      <summary>Releases the unmanaged resources used by the <see cref="T:System.Printing.PrintQueue" /> and optionally releases the managed resources. </summary>
      <param name="disposing">true to release both managed and unmanaged resources; false to release only unmanaged resources.</param>
    </member>
    <member name="P:System.Printing.PrintQueue.IsBidiEnabled">
      <summary>Gets a value that indicates whether bidirectional communication with the printer is enabled. </summary>
      <returns>true if bidirectional communication with the printer is enabled; otherwise, false.</returns>
    </member>
    <member name="P:System.Printing.PrintQueue.IsBusy">
      <summary>Gets a value that indicates whether the printing device is busy. </summary>
      <returns>true if the device is busy; otherwise, false.</returns>
    </member>
    <member name="P:System.Printing.PrintQueue.IsDevQueryEnabled">
      <summary>Gets a value that indicates whether the queue holds documents when document and printer configurations do not match. </summary>
      <returns>true if the queue holds mismatched configurations; otherwise, false.</returns>
    </member>
    <member name="P:System.Printing.PrintQueue.IsDirect">
      <summary>Gets a value that indicates whether the queue prints directly to the printer or spools documents first and then prints them. </summary>
      <returns>true if the queue prints directly to the printer; otherwise, false.</returns>
    </member>
    <member name="P:System.Printing.PrintQueue.IsDoorOpened">
      <summary>Gets a value that indicates whether a door is open on the printer. </summary>
      <returns>true if a door is open; otherwise, false.</returns>
    </member>
    <member name="P:System.Printing.PrintQueue.IsHidden">
      <summary>Gets a value that indicates whether the print queue is hidden in your application's user interface. </summary>
      <returns>true if the print queue is hidden in the Windows user interface; otherwise, false.</returns>
    </member>
    <member name="P:System.Printing.PrintQueue.IsInError">
      <summary>Gets a value that indicates whether the printer or device is in an error condition. </summary>
      <returns>true if the device is in an error condition; otherwise, false.</returns>
    </member>
    <member name="P:System.Printing.PrintQueue.IsInitializing">
      <summary>Gets a value that indicates whether the printer is initializing itself. </summary>
      <returns>true if the printer is initializing; otherwise, false.</returns>
    </member>
    <member name="P:System.Printing.PrintQueue.IsIOActive">
      <summary>Gets a value that indicates whether the printer is receiving or sending data or signals. </summary>
      <returns>true if the printer is receiving or sending; otherwise, false.</returns>
    </member>
    <member name="P:System.Printing.PrintQueue.IsManualFeedRequired">
      <summary>Gets a value that indicates whether the printer needs to be manually fed paper for the current print job. </summary>
      <returns>true if the printer needs to be manually fed paper; otherwise, false.</returns>
    </member>
    <member name="P:System.Printing.PrintQueue.IsNotAvailable">
      <summary>Gets a value that indicates whether the printer is available. </summary>
      <returns>true if the printer is available; otherwise, false.</returns>
    </member>
    <member name="P:System.Printing.PrintQueue.IsOffline">
      <summary>Gets a value that indicates whether the printer is offline. </summary>
      <returns>true if the printer is offline; otherwise, false.</returns>
    </member>
    <member name="P:System.Printing.PrintQueue.IsOutOfMemory">
      <summary>Gets a value that indicates whether the printer is out of memory. </summary>
      <returns>true if the printer is out of memory; otherwise, false.</returns>
    </member>
    <member name="P:System.Printing.PrintQueue.IsOutOfPaper">
      <summary>Gets a value that indicates whether the printer needs to be reloaded with paper of the size required for the current job. </summary>
      <returns>true if the printer needs to be reloaded; otherwise, false.</returns>
    </member>
    <member name="P:System.Printing.PrintQueue.IsOutputBinFull">
      <summary>Gets a value that indicates whether the output area of the printer is in danger of overflowing. </summary>
      <returns>true if the output area of the printer is full; otherwise, false.</returns>
    </member>
    <member name="P:System.Printing.PrintQueue.IsPaperJammed">
      <summary>Gets a value that indicates whether the current sheet of paper is stuck in the printer. </summary>
      <returns>true if the paper is stuck; otherwise, false.</returns>
    </member>
    <member name="P:System.Printing.PrintQueue.IsPaused">
      <summary>Gets a value that indicates whether the print queue has been paused. </summary>
      <returns>true if the print queue has been paused; otherwise, false.</returns>
    </member>
    <member name="P:System.Printing.PrintQueue.IsPendingDeletion">
      <summary>Gets a value that indicates whether the printer is in the process of deleting a print job. </summary>
      <returns>true if the printer is deleting a job; otherwise, false.</returns>
    </member>
    <member name="P:System.Printing.PrintQueue.IsPowerSaveOn">
      <summary>Gets a value that indicates whether the printer is in power save mode. </summary>
      <returns>true if the printer is in power save mode; otherwise, false.</returns>
    </member>
    <member name="P:System.Printing.PrintQueue.IsPrinting">
      <summary>Gets a value that indicates whether a job is printing. </summary>
      <returns>true if a job is printing; otherwise, false.</returns>
    </member>
    <member name="P:System.Printing.PrintQueue.IsProcessing">
      <summary>Gets a value that indicates whether the printer is processing a print job. </summary>
      <returns>true if the printer is processing a print job; otherwise, false.</returns>
    </member>
    <member name="P:System.Printing.PrintQueue.IsPublished">
      <summary>Gets a value that indicates whether the printer is visible to other network users. </summary>
      <returns>true if the printer is visible to other network users; otherwise, false.</returns>
    </member>
    <member name="P:System.Printing.PrintQueue.IsQueued">
      <summary>Gets a value that indicates whether the printer can support a queue with more than one print job in it at a time. </summary>
      <returns>true if the printer can support the queuing of multiple print jobs; otherwise, false.</returns>
    </member>
    <member name="P:System.Printing.PrintQueue.IsRawOnlyEnabled">
      <summary>Gets a value that indicates whether the print queue can use EMF (Enhanced Meta File) that enables faster data flow from a printing application to the Windows spooler. </summary>
      <returns>true if the printer cannot use EMF printing; otherwise, false.</returns>
    </member>
    <member name="P:System.Printing.PrintQueue.IsServerUnknown">
      <summary>Gets a value that indicates whether the printer is in an error state. </summary>
      <returns>true if in the printer is in an error state; otherwise, false.</returns>
    </member>
    <member name="P:System.Printing.PrintQueue.IsShared">
      <summary>Gets a value that indicates whether the printer is available for use by other computers on the network. </summary>
      <returns>true if the printer is shared; otherwise, false.</returns>
    </member>
    <member name="P:System.Printing.PrintQueue.IsTonerLow">
      <summary>Gets a value that indicates whether the printer is running short of toner. </summary>
      <returns>true if the printer is running short of toner; otherwise, false.</returns>
    </member>
    <member name="P:System.Printing.PrintQueue.IsWaiting">
      <summary>Gets a value that indicates whether the queue is waiting for a job to be added. </summary>
      <returns>true if the queue is waiting for a job; otherwise, false.</returns>
    </member>
    <member name="P:System.Printing.PrintQueue.IsWarmingUp">
      <summary>Gets a value that indicates whether the printer is warming up. </summary>
      <returns>true if the printer is warming up; otherwise, false.</returns>
    </member>
    <member name="P:System.Printing.PrintQueue.IsXpsDevice">
      <summary>Gets a value that indicates whether the printer's driver is built on the Printing Overview so it uses XML Paper Specification (XPS) as its page description language. </summary>
      <returns>true if the printer uses the Printing Overview; otherwise, false.</returns>
    </member>
    <member name="P:System.Printing.PrintQueue.KeepPrintedJobs">
      <summary>Gets a value that indicates whether the queue is saving the printer language file instead of deleting it following printing. </summary>
      <returns>true if the queue is saving the printer language file; otherwise, false.</returns>
    </member>
    <member name="P:System.Printing.PrintQueue.Location">
      <summary>Gets or sets the printer's physical location. </summary>
      <returns>The printer's physical location.</returns>
    </member>
    <member name="P:System.Printing.PrintQueue.MaxPrintSchemaVersion">
      <summary>Gets the most recent possible version number of the Print Schema that the queue can use. </summary>
      <returns>The most recent version number of the Print Schema that the queue can use.</returns>
    </member>
    <member name="M:System.Printing.PrintQueue.MergeAndValidatePrintTicket(System.Printing.PrintTicket,System.Printing.PrintTicket)">
      <summary>Merges two <see cref="T:System.Printing.PrintTicket" />s and guarantees that the resulting <see cref="T:System.Printing.PrintTicket" /> is valid and does not ask for any printing functionality that the printer does not support. </summary>
      <returns>A <see cref="T:System.Printing.ValidationResult" /> that includes the merged <see cref="T:System.Printing.PrintTicket" /> and an indication of whether any of its settings had to be changed to guarantee viability.</returns>
      <param name="basePrintTicket">The first print ticket. </param>
      <param name="deltaPrintTicket">The second print ticket. This can be null. </param>
      <exception cref="T:System.ArgumentException">At least one of the input print tickets is not valid. </exception>
      <exception cref="T:System.ArgumentNullException">The <paramref name="basePrintTicket" /> is null.</exception>
      <exception cref="T:System.Printing.PrintQueueException">The validation, merger, and viability checking operation failed.</exception>
    </member>
    <member name="M:System.Printing.PrintQueue.MergeAndValidatePrintTicket(System.Printing.PrintTicket,System.Printing.PrintTicket,System.Printing.PrintTicketScope)">
      <summary>Merges two <see cref="T:System.Printing.PrintTicket" />s and guarantees that the resulting <see cref="T:System.Printing.PrintTicket" /> is valid, does not ask for any printing functionality that the printer does not support, and is limited to the specified scope. </summary>
      <returns>A <see cref="T:System.Printing.ValidationResult" /> that includes the merged <see cref="T:System.Printing.PrintTicket" /> and an indication of whether any of its settings had to be changed to guarantee viability.</returns>
      <param name="basePrintTicket">The first print ticket. </param>
      <param name="deltaPrintTicket">The second print ticket. This can be null. </param>
      <param name="scope">A value indicating whether the scope of <paramref name="deltaPrintTicket" />, and the scope of the print ticket returned in the <see cref="T:System.Printing.ValidationResult" />, is a page, a document, or the whole job. </param>
      <exception cref="T:System.ArgumentException">At least one of the input print tickets is not valid. </exception>
      <exception cref="T:System.ArgumentNullException">The <paramref name="basePrintTicket" /> is null.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">The <paramref name="scope" /> parameter does not have a valid <see cref="T:System.Printing.PrintTicketScope" /> value.</exception>
      <exception cref="T:System.Printing.PrintQueueException">The validation, merger, and viability checking operation failed.</exception>
    </member>
    <member name="P:System.Printing.PrintQueue.Name">
      <summary>Gets or sets the print queue's name. </summary>
      <returns>The name of the print queue.</returns>
    </member>
    <member name="P:System.Printing.PrintQueue.NeedUserIntervention">
      <summary>Gets a value that indicates whether the printer needs the attention of a human being. </summary>
      <returns>true if the printer needs human attention; otherwise, false.</returns>
    </member>
    <member name="P:System.Printing.PrintQueue.NumberOfJobs">
      <summary>Gets the total number of jobs lined up in the print queue. </summary>
      <returns>The number of jobs in the queue.</returns>
    </member>
    <member name="P:System.Printing.PrintQueue.PagePunt">
      <summary>Gets a value that indicates whether the printer is unable to print the current page. </summary>
      <returns>true if the printer is unable to print the current page; otherwise, false.</returns>
    </member>
    <member name="M:System.Printing.PrintQueue.Pause">
      <summary>Pauses the print queue. It remains paused until <see cref="M:System.Printing.PrintQueue.Resume" /> is executed. </summary>
      <exception cref="T:System.Printing.PrintSystemException">The printer cannot be paused. </exception>
    </member>
    <member name="P:System.Printing.PrintQueue.PrintingIsCancelled">
      <summary>Gets or sets a value that indicates whether the current print job is being cancelled. </summary>
      <returns>true if the print job is being cancelled; otherwise, false.</returns>
    </member>
    <member name="P:System.Printing.PrintQueue.Priority">
      <summary>Gets or sets the priority of the print queue relative to other print queues that are hosted by the same print server and that use the same physical printer. </summary>
      <returns>The priority for the print queue. Possible values are from 1 through 99. The default is 1.</returns>
    </member>
    <member name="M:System.Printing.PrintQueue.Purge">
      <summary>Removes all the jobs in the print queue. </summary>
      <exception cref="T:System.Printing.PrintSystemException">Some print jobs could not be removed from the queue. </exception>
    </member>
    <member name="P:System.Printing.PrintQueue.QueueAttributes">
      <summary>Gets the properties of the print queue. </summary>
      <returns>A bitwise combination of the <see cref="T:System.Printing.PrintQueueAttributes" /> enumeration values. </returns>
    </member>
    <member name="P:System.Printing.PrintQueue.QueueDriver">
      <summary>Gets or sets the printer driver for the queue. </summary>
      <returns>The <see cref="T:System.Printing.PrintDriver" /> that the queue uses.</returns>
    </member>
    <member name="P:System.Printing.PrintQueue.QueuePort">
      <summary>Gets or sets the port that the queue uses. </summary>
      <returns>The <see cref="T:System.Printing.PrintPort" /> that is assigned to the print queue.</returns>
    </member>
    <member name="P:System.Printing.PrintQueue.QueuePrintProcessor">
      <summary>Gets or sets the print processor that the queue uses. </summary>
      <returns>The <see cref="T:System.Printing.PrintProcessor" /> that the queue uses, such as WinPrint or ModiPrint. </returns>
    </member>
    <member name="P:System.Printing.PrintQueue.QueueStatus">
      <summary>Gets a value that represents the status of the printer. These include "warming up," "initializing," "printing," and others. </summary>
      <returns>The current <see cref="T:System.Printing.PrintQueueStatus" /> value.</returns>
    </member>
    <member name="M:System.Printing.PrintQueue.Refresh">
      <summary>Updates the properties of the <see cref="T:System.Printing.PrintQueue" /> object with values from the printer and the print queue utility that runs on the computer. </summary>
      <exception cref="T:System.Printing.PrintSystemException">Some of the properties could not be refreshed. </exception>
    </member>
    <member name="M:System.Printing.PrintQueue.Resume">
      <summary>Restarts a print queue that was paused. </summary>
      <exception cref="T:System.Printing.PrintSystemException">The printer cannot resume. </exception>
    </member>
    <member name="P:System.Printing.PrintQueue.ScheduleCompletedJobsFirst">
      <summary>Gets a value that indicates whether the printer prints jobs that have completed the spooling process before jobs that have not fully spooled even if the latter entered the queue first or have a higher priority. </summary>
      <returns>true if the printer prints jobs that have completed the spooling process before jobs that have not fully spooled; otherwise, false.</returns>
    </member>
    <member name="P:System.Printing.PrintQueue.SeparatorFile">
      <summary>Gets or sets the path and file name of a file that is inserted at the beginning of each print job. </summary>
      <returns>The path and file name of the separator file.</returns>
    </member>
    <member name="P:System.Printing.PrintQueue.ShareName">
      <summary>Gets or sets a name for the printer that is seen by users on the network when it is shared. </summary>
      <returns>The public name of a shared printer.</returns>
    </member>
    <member name="P:System.Printing.PrintQueue.StartTimeOfDay">
      <summary>Gets or sets the earliest time of day, expressed as the number of minutes after midnight Coordinated Universal Time (UTC) (also called Greenwich Mean Time [GMT]), that the printer will print a job. </summary>
      <returns>The time of day that the printer first becomes available, expressed as the number of minutes after midnight (UTC). The maximum value is 1439. When a printer is first installed by using the Microsoft Windows Add Printer Wizard, the printer defaults to being available all the time, and this property returns 0 in all time zones.</returns>
    </member>
    <member name="P:System.Printing.PrintQueue.UntilTimeOfDay">
      <summary>Gets or sets the latest time, expressed as the number of minutes after midnight Coordinated Universal Time (UTC) (also called Greenwich Mean Time [GMT]), that the printer will print a job. </summary>
      <returns>The time of day that the printer is no longer available, expressed as the number of minutes after midnight (UTC). The maximum value is 1439. When a printer is first installed by using the Microsoft Windows Add Printer Wizard, the printer defaults to being available all the time, and this property returns 0 in all time zones. </returns>
    </member>
    <member name="P:System.Printing.PrintQueue.UserPrintTicket">
      <summary>Gets or sets the current user's default <see cref="T:System.Printing.PrintTicket" /> object which contains detailed information about the print job. </summary>
      <returns>The <see cref="T:System.Printing.PrintTicket" /> for the current user, or null if a user <see cref="T:System.Printing.PrintTicket" /> has not been specified.</returns>
    </member>
    <member name="T:System.Printing.PrintQueueAttributes">
      <summary>Specifies the attributes of a print queue and its printer.</summary>
    </member>
    <member name="F:System.Printing.PrintQueueAttributes.Published">
      <summary>The print queue is visible to other network users.</summary>
    </member>
    <member name="F:System.Printing.PrintQueueAttributes.RawOnly">
      <summary>The print queue cannot use enhanced metafile (EMF) printing.</summary>
    </member>
    <member name="F:System.Printing.PrintQueueAttributes.EnableBidi">
      <summary>The printer's bidirectional communication is enabled.</summary>
    </member>
    <member name="F:System.Printing.PrintQueueAttributes.ScheduleCompletedJobsFirst">
      <summary>The queue prints a fully spooled job before it prints higher priority jobs that are still spooling.</summary>
    </member>
    <member name="F:System.Printing.PrintQueueAttributes.KeepPrintedJobs">
      <summary>The printer language file is not deleted after the file prints.</summary>
    </member>
    <member name="F:System.Printing.PrintQueueAttributes.EnableDevQuery">
      <summary>The queue holds its jobs when the document and printer configurations do not match.</summary>
    </member>
    <member name="F:System.Printing.PrintQueueAttributes.Hidden">
      <summary>The print queue is not visible in the application UI.</summary>
    </member>
    <member name="F:System.Printing.PrintQueueAttributes.Shared">
      <summary>The print queue is shared.</summary>
    </member>
    <member name="F:System.Printing.PrintQueueAttributes.Direct">
      <summary>The print queue sends print jobs immediately to the printer instead of spooling jobs first.</summary>
    </member>
    <member name="F:System.Printing.PrintQueueAttributes.Queued">
      <summary>The print queue can hold more than one print job at a time.</summary>
    </member>
    <member name="F:System.Printing.PrintQueueAttributes.None">
      <summary>No print queue attribute is specified.</summary>
    </member>
    <member name="T:System.Printing.PrintQueueCollection">
      <summary>Represents a collection of <see cref="T:System.Printing.PrintQueue" /> objects. </summary>
    </member>
    <member name="M:System.Printing.PrintQueueCollection.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Printing.PrintQueueCollection" /> class. </summary>
    </member>
    <member name="M:System.Printing.PrintQueueCollection.#ctor(System.Printing.PrintServer,System.String[])">
      <summary>Initializes a new instance of the <see cref="T:System.Printing.PrintQueueCollection" /> class for the specified <see cref="T:System.Printing.PrintServer" />. </summary>
      <param name="printServer">The print server that hosts the collection.</param>
      <param name="propertyFilter">The properties of the collection members that are initialized. </param>
    </member>
    <member name="M:System.Printing.PrintQueueCollection.#ctor(System.Printing.PrintServer,System.String[],System.Printing.EnumeratedPrintQueueTypes[])">
      <summary>Initializes a new instance of the <see cref="T:System.Printing.PrintQueueCollection" /> class for the specified <see cref="T:System.Printing.PrintServer" />, containing only the print server's queues of the specified <see cref="T:System.Printing.EnumeratedPrintQueueTypes" />. </summary>
      <param name="printServer">The print server that hosts the collection.</param>
      <param name="propertyFilter">The properties of the collection members that are initialized. </param>
      <param name="enumerationFlag">An array that specifies the types of print queues that are included in the collection. </param>
    </member>
    <member name="M:System.Printing.PrintQueueCollection.Add(System.Printing.PrintQueue)">
      <summary>Adds a <see cref="T:System.Printing.PrintQueue" /> to the collection.</summary>
      <param name="printObject">The print queue that is added.</param>
    </member>
    <member name="M:System.Printing.PrintQueueCollection.Dispose(System.Boolean)">
      <summary>Releases the unmanaged resources that are being used by the <see cref="T:System.Printing.PrintQueueCollection" />, and optionally releases the managed resources that are being used. </summary>
      <param name="disposing">true to release both the managed resources and the unmanaged resources; false to release only the unmanaged resources.</param>
    </member>
    <member name="M:System.Printing.PrintQueueCollection.GetEnumerator">
      <summary>Returns an object that implements the generic <see cref="T:System.Collections.IEnumerator" /> interface that has been closed with <see cref="T:System.Printing.PrintQueue" />. </summary>
      <returns>An object that implements the generic <see cref="T:System.Collections.IEnumerator" /> and that can iterate through the <see cref="T:System.Printing.PrintQueue" /> objects that the <see cref="T:System.Printing.PrintQueueCollection" /> contains.</returns>
    </member>
    <member name="M:System.Printing.PrintQueueCollection.GetNonGenericEnumerator">
      <summary>Gets an object that implements the non-generic <see cref="T:System.Collections.IEnumerator" /> interface. </summary>
      <returns>An object that implements the non-generic <see cref="T:System.Collections.IEnumerator" /> and that can iterate through the <see cref="T:System.Printing.PrintQueue" /> objects that the <see cref="T:System.Printing.PrintQueueCollection" /> contains.</returns>
    </member>
    <member name="P:System.Printing.PrintQueueCollection.SyncRoot">
      <summary>Gets an object that can be used to synchronize access to the <see cref="T:System.Printing.PrintQueueCollection" />.</summary>
      <returns>A <see cref="T:System.Object" /> that can be used to synchronize access to the collection.</returns>
    </member>
    <member name="T:System.Printing.PrintQueueIndexedProperty">
      <summary>Specifies the properties that are initialized when a <see cref="T:System.Printing.PrintQueue" /> object is constructed.</summary>
    </member>
    <member name="F:System.Printing.PrintQueueIndexedProperty.Description">
      <summary>The description of the queue.</summary>
    </member>
    <member name="F:System.Printing.PrintQueueIndexedProperty.Priority">
      <summary>The priority of the print queue relative to other print queues serving the same printer.</summary>
    </member>
    <member name="F:System.Printing.PrintQueueIndexedProperty.Location">
      <summary>The location of the physical printer.</summary>
    </member>
    <member name="F:System.Printing.PrintQueueIndexedProperty.DefaultPrintTicket">
      <summary>The default print ticket object.</summary>
    </member>
    <member name="F:System.Printing.PrintQueueIndexedProperty.UserPrintTicket">
      <summary>The print ticket for the user.</summary>
    </member>
    <member name="F:System.Printing.PrintQueueIndexedProperty.SeparatorFile">
      <summary>The path to the separator file.</summary>
    </member>
    <member name="F:System.Printing.PrintQueueIndexedProperty.QueueStatus">
      <summary>The current status of the queue.</summary>
    </member>
    <member name="F:System.Printing.PrintQueueIndexedProperty.HostingPrintServer">
      <summary>The host print server.</summary>
    </member>
    <member name="F:System.Printing.PrintQueueIndexedProperty.QueuePrintProcessor">
      <summary>The print processor for the print queue.</summary>
    </member>
    <member name="F:System.Printing.PrintQueueIndexedProperty.QueuePort">
      <summary>The printer port used by the print queue.</summary>
    </member>
    <member name="F:System.Printing.PrintQueueIndexedProperty.QueueDriver">
      <summary>The printer driver for the queue.</summary>
    </member>
    <member name="F:System.Printing.PrintQueueIndexedProperty.QueueAttributes">
      <summary>The attributes of the print queue.</summary>
    </member>
    <member name="F:System.Printing.PrintQueueIndexedProperty.NumberOfJobs">
      <summary>The number of jobs in the print queue.</summary>
    </member>
    <member name="F:System.Printing.PrintQueueIndexedProperty.AveragePagesPerMinute">
      <summary>The speed of the print queue.</summary>
    </member>
    <member name="F:System.Printing.PrintQueueIndexedProperty.UntilTimeOfDay">
      <summary>The time of day that the queue stops printing jobs.</summary>
    </member>
    <member name="F:System.Printing.PrintQueueIndexedProperty.StartTimeOfDay">
      <summary>The time of day that the queue begins printing its jobs.</summary>
    </member>
    <member name="F:System.Printing.PrintQueueIndexedProperty.DefaultPriority">
      <summary>The default priority. </summary>
    </member>
    <member name="F:System.Printing.PrintQueueIndexedProperty.Comment">
      <summary>A comment specific to the print queue.</summary>
    </member>
    <member name="F:System.Printing.PrintQueueIndexedProperty.ShareName">
      <summary>The share name of the queue.</summary>
    </member>
    <member name="F:System.Printing.PrintQueueIndexedProperty.Name">
      <summary>The name of the print queue.</summary>
    </member>
    <member name="T:System.Printing.PrintQueueStatus">
      <summary>Specifies the status of a print queue or its printer. </summary>
    </member>
    <member name="F:System.Printing.PrintQueueStatus.PowerSave">
      <summary>The printer is in power save mode.</summary>
    </member>
    <member name="F:System.Printing.PrintQueueStatus.ServerUnknown">
      <summary>The printer is in an error state.</summary>
    </member>
    <member name="F:System.Printing.PrintQueueStatus.DoorOpen">
      <summary>A door on the printer is open.</summary>
    </member>
    <member name="F:System.Printing.PrintQueueStatus.OutOfMemory">
      <summary>The printer has no available memory.</summary>
    </member>
    <member name="F:System.Printing.PrintQueueStatus.UserIntervention">
      <summary>The printer requires user action to correct an error condition.</summary>
    </member>
    <member name="F:System.Printing.PrintQueueStatus.PagePunt">
      <summary>The printer is unable to print the current page.</summary>
    </member>
    <member name="F:System.Printing.PrintQueueStatus.NoToner">
      <summary>The printer is out of toner.</summary>
    </member>
    <member name="F:System.Printing.PrintQueueStatus.TonerLow">
      <summary>Only a small amount of toner remains in the printer.</summary>
    </member>
    <member name="F:System.Printing.PrintQueueStatus.WarmingUp">
      <summary>The printer is warming up.</summary>
    </member>
    <member name="F:System.Printing.PrintQueueStatus.Initializing">
      <summary>The printer is initializing.</summary>
    </member>
    <member name="F:System.Printing.PrintQueueStatus.Processing">
      <summary>The device is doing some kind of work, which need not be printing if the device is a combination printer, fax machine, and scanner.</summary>
    </member>
    <member name="F:System.Printing.PrintQueueStatus.Waiting">
      <summary>The printer is waiting for a print job.</summary>
    </member>
    <member name="F:System.Printing.PrintQueueStatus.NotAvailable">
      <summary>Status information is unavailable.</summary>
    </member>
    <member name="F:System.Printing.PrintQueueStatus.OutputBinFull">
      <summary>The printer's output bin is full.</summary>
    </member>
    <member name="F:System.Printing.PrintQueueStatus.Busy">
      <summary>The printer is busy.</summary>
    </member>
    <member name="F:System.Printing.PrintQueueStatus.IOActive">
      <summary>The printer is exchanging data with the print server.</summary>
    </member>
    <member name="F:System.Printing.PrintQueueStatus.Offline">
      <summary>The printer is offline.</summary>
    </member>
    <member name="F:System.Printing.PrintQueueStatus.PaperProblem">
      <summary>The paper in the printer is causing an unspecified error condition.</summary>
    </member>
    <member name="F:System.Printing.PrintQueueStatus.ManualFeed">
      <summary>The printer is waiting for a user to place print media in the manual feed bin.</summary>
    </member>
    <member name="F:System.Printing.PrintQueueStatus.PaperOut">
      <summary>The printer does not have, or is out of, the type of paper needed for the current print job.</summary>
    </member>
    <member name="F:System.Printing.PrintQueueStatus.PaperJam">
      <summary>The paper in the printer is jammed.</summary>
    </member>
    <member name="F:System.Printing.PrintQueueStatus.PendingDeletion">
      <summary>The print queue is deleting a print job.</summary>
    </member>
    <member name="F:System.Printing.PrintQueueStatus.Paused">
      <summary>The print queue is paused.</summary>
    </member>
    <member name="F:System.Printing.PrintQueueStatus.None">
      <summary>Status is not specified.</summary>
    </member>
    <member name="F:System.Printing.PrintQueueStatus.Printing">
      <summary>The device is printing. </summary>
    </member>
    <member name="F:System.Printing.PrintQueueStatus.Error">
      <summary>The printer cannot print due to an error condition.</summary>
    </member>
    <member name="T:System.Printing.PrintQueueStream">
      <summary>A stream that represents a spooled print job in a print queue.</summary>
    </member>
    <member name="M:System.Printing.PrintQueueStream.#ctor(System.Printing.PrintQueue,System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.Printing.PrintQueueStream" /> class for the specified print job that is hosted in the specified <see cref="T:System.Printing.PrintQueue" />. </summary>
      <param name="printQueue">The <see cref="T:System.Printing.PrintQueue" /> that hosts the print job that provides the content of the stream.</param>
      <param name="printJobName">The name of the print job that provides the content of the stream.</param>
    </member>
    <member name="M:System.Printing.PrintQueueStream.#ctor(System.Printing.PrintQueue,System.String,System.Boolean)">
      <summary>Initializes a new instance of the <see cref="T:System.Printing.PrintQueueStream" /> class for the specified print job that is hosted in the specified <see cref="T:System.Printing.PrintQueue" />, with an indication of whether data in the <see cref="T:System.Printing.PrintQueueStream" /> should be committed when the stream is closed. </summary>
      <param name="printQueue">The <see cref="T:System.Printing.PrintQueue" /> that hosts the print job that provides the content of the stream.</param>
      <param name="printJobName">The name of the print job that provides the content of the stream.</param>
      <param name="commitDataOnClose">true to commit data in the <see cref="T:System.Printing.PrintQueueStream" /> when the <see cref="M:System.Printing.PrintQueueStream.Close" /> method is called; otherwise, false.</param>
    </member>
    <member name="M:System.Printing.PrintQueueStream.BeginWrite(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)">
      <summary>Begins an asynchronous write operation. </summary>
      <returns>An <see cref="T:System.IAsyncResult" /> that represents the asynchronous write, which might still be pending.</returns>
      <param name="buffer">The buffer from which to write data.</param>
      <param name="offset">The byte offset in the buffer from which to begin writing.</param>
      <param name="count">The maximum number of bytes to write.</param>
      <param name="callback">An asynchronous callback, which is called when the writing operation is complete.</param>
      <param name="state">A user-provided object that distinguishes this asynchronous writing request from other requests.</param>
    </member>
    <member name="P:System.Printing.PrintQueueStream.CanRead">
      <summary>Gets a value that indicates whether the stream supports reading.</summary>
      <returns>true if reading is supported; otherwise false.</returns>
    </member>
    <member name="P:System.Printing.PrintQueueStream.CanSeek">
      <summary>Gets a value that indicates whether the stream supports seeking, which is moving the read/write position to a new position in the stream.</summary>
      <returns>true if seeking is supported; otherwise false.</returns>
    </member>
    <member name="P:System.Printing.PrintQueueStream.CanWrite">
      <summary>Gets a value that indicates whether the stream supports writing.</summary>
      <returns>true if writing is supported; otherwise false.</returns>
    </member>
    <member name="M:System.Printing.PrintQueueStream.Close">
      <summary>Closes the stream and releases any resources, such as sockets and file handles, that are associated with it.</summary>
    </member>
    <member name="M:System.Printing.PrintQueueStream.Dispose(System.Boolean)">
      <summary>Releases the unmanaged resources that are used by the <see cref="T:System.Printing.PrintQueueStream" /> and optionally releases the managed resources.</summary>
      <param name="disposing">true to release both managed and unmanaged resources; false to release only unmanaged resources.</param>
    </member>
    <member name="M:System.Printing.PrintQueueStream.EndWrite(System.IAsyncResult)">
      <summary>Ends an asynchronous write operation.</summary>
      <param name="asyncResult">A reference to the pending asynchronous I/O request.</param>
    </member>
    <member name="M:System.Printing.PrintQueueStream.Finalize">
      <summary>Enables a <see cref="T:System.Printing.PrintQueueStream" /> to attempt to free resources and perform other cleanup operations before the <see cref="T:System.Printing.PrintQueueStream" /> is reclaimed by garbage collection.</summary>
    </member>
    <member name="M:System.Printing.PrintQueueStream.Flush">
      <summary>Clears all the buffers for this stream and writes any buffered data to the underlying device.</summary>
    </member>
    <member name="M:System.Printing.PrintQueueStream.HandlePackagingProgressEvent(System.Object,System.Windows.Xps.Packaging.PackagingProgressEventArgs)">
      <summary>Enables the <see cref="T:System.Printing.PrintQueueStream" /> to respond to the packaging progress by handling the <see cref="E:System.Windows.Xps.Serialization.XpsPackagingPolicy.PackagingProgressEvent" />. </summary>
      <param name="sender">The source of the event.</param>
      <param name="e">The event data.</param>
    </member>
    <member name="P:System.Printing.PrintQueueStream.JobIdentifier">
      <summary>Gets the ID number of the print job.</summary>
      <returns>An <see cref="T:System.Int32" /> that represents an ID number.</returns>
    </member>
    <member name="P:System.Printing.PrintQueueStream.Length">
      <summary>Gets the length of the stream in bytes.</summary>
      <returns>An <see cref="T:System.Int64" /> that represents the length of the stream in bytes.</returns>
    </member>
    <member name="P:System.Printing.PrintQueueStream.Position">
      <summary>Gets or sets the current read/write position in the stream.</summary>
      <returns>An <see cref="T:System.Int64" /> that represents the current position in the stream.</returns>
    </member>
    <member name="M:System.Printing.PrintQueueStream.Read(System.Byte[],System.Int32,System.Int32)">
      <summary>Reads a sequence of bytes from the stream and advances the read/write position in the stream by the number of bytes that were read.</summary>
      <returns>An <see cref="T:System.Int32" /> that holds the total number of bytes that are read into the buffer. </returns>
      <param name="buffer">An array of bytes. </param>
      <param name="offset">The zero-based byte offset in the buffer where you want to begin storing the data that is read from the stream.</param>
      <param name="count">The maximum number of bytes to be read from the stream.</param>
    </member>
    <member name="M:System.Printing.PrintQueueStream.Seek(System.Int64,System.IO.SeekOrigin)">
      <summary>Sets the read/write position within the stream.</summary>
      <returns>An <see cref="T:System.Int64" /> that represents the new read/write position.</returns>
      <param name="offset">A byte offset that is relative to the origin parameter.</param>
      <param name="origin">A value of type <see cref="T:System.IO.SeekOrigin" /> that indicates the reference point that is used to obtain the new position.</param>
    </member>
    <member name="M:System.Printing.PrintQueueStream.SetLength(System.Int64)">
      <summary>Sets the length of the stream.</summary>
      <param name="value">The needed length, in bytes, of the current stream.</param>
    </member>
    <member name="M:System.Printing.PrintQueueStream.Write(System.Byte[],System.Int32,System.Int32)">
      <summary>Writes a sequence of bytes to the stream and advances the read/write position in the stream by the number of bytes that are written.</summary>
      <param name="buffer">An array of bytes from which to copy to the stream.</param>
      <param name="offset">The zero-based byte offset in the <paramref name="buffer" /> where you want to begin copying bytes to the stream.</param>
      <param name="count">The number of bytes to write to the stream.</param>
    </member>
    <member name="T:System.Printing.PrintQueueStringProperty">
      <summary>Represents one, and only one, of three possible properties of a print queue: <see cref="P:System.Printing.PrintQueue.Location" />, <see cref="P:System.Printing.PrintQueue.Comment" />, or <see cref="P:System.Printing.PrintQueue.ShareName" />. </summary>
    </member>
    <member name="M:System.Printing.PrintQueueStringProperty.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Printing.PrintQueueStringProperty" /> class. </summary>
    </member>
    <member name="P:System.Printing.PrintQueueStringProperty.Name">
      <summary>Gets or sets the value of the print queue property that is represented. </summary>
      <returns>A <see cref="T:System.String" /> with the value of the property. </returns>
    </member>
    <member name="P:System.Printing.PrintQueueStringProperty.Type">
      <summary>Gets or sets a value that identifies which of the three possible properties of a print queue is being represented. </summary>
      <returns>A <see cref="T:System.Printing.PrintQueueStringPropertyType" /> that specifies the kind of print queue property that is being represented. </returns>
    </member>
    <member name="T:System.Printing.PrintQueueStringPropertyType">
      <summary>Specifies the intended meaning of a <see cref="T:System.Printing.PrintQueueStringProperty" />.</summary>
    </member>
    <member name="F:System.Printing.PrintQueueStringPropertyType.Location">
      <summary>The location of the physical printer.</summary>
    </member>
    <member name="F:System.Printing.PrintQueueStringPropertyType.ShareName">
      <summary>The share name of the print queue.</summary>
    </member>
    <member name="F:System.Printing.PrintQueueStringPropertyType.Comment">
      <summary>A comment about the print queue.</summary>
    </member>
    <member name="T:System.Printing.PrintServer">
      <summary>Manages the print queues on a print server, which is usually a computer, but can be a dedicated hardware print server appliance. </summary>
    </member>
    <member name="M:System.Printing.PrintServer.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Printing.PrintServer" /> class. </summary>
    </member>
    <member name="M:System.Printing.PrintServer.#ctor(System.Printing.PrintSystemDesiredAccess)">
      <summary>Initializes a new instance of the <see cref="T:System.Printing.PrintServer" /> class that represents the local print server and assigns it the specified <see cref="T:System.Printing.PrintSystemDesiredAccess" />. </summary>
      <param name="desiredAccess">A value that specifies the type of print server access that your program needs.</param>
      <exception cref="T:System.Printing.PrintServerException">
        <paramref name="desiredAccess" /> is a value that can be applied only to a <see cref="T:System.Printing.PrintQueue" /> object, not a <see cref="T:System.Printing.LocalPrintServer" /> object. For example, <see cref="F:System.Printing.PrintSystemDesiredAccess.UsePrinter" />.</exception>
    </member>
    <member name="M:System.Printing.PrintServer.#ctor(System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.Printing.PrintServer" /> class that has the specified path. </summary>
      <param name="path">The name and complete path of the print server.</param>
    </member>
    <member name="M:System.Printing.PrintServer.#ctor(System.String,System.Printing.PrintServerIndexedProperty[])">
      <summary>Initializes a new instance of the <see cref="T:System.Printing.PrintServer" /> class by using the specified <see cref="T:System.Printing.PrintServerIndexedProperty" /> array to determine which properties will be initialized. </summary>
      <param name="path">The complete path and name of the print server</param>
      <param name="propertiesFilter">The properties that the constructor initializes.</param>
    </member>
    <member name="M:System.Printing.PrintServer.#ctor(System.String,System.Printing.PrintServerIndexedProperty[],System.Printing.PrintSystemDesiredAccess)">
      <summary>Initializes a new instance of the <see cref="T:System.Printing.PrintServer" /> class and provides the specified path, the <see cref="T:System.Printing.PrintServerIndexedProperty" /> array, and the needed access. </summary>
      <param name="path">The complete path and name of the print server</param>
      <param name="propertiesFilter">The properties that the constructor initializes.</param>
      <param name="desiredAccess">A value that specifies the type of print server access that your program needs.</param>
      <exception cref="T:System.Printing.PrintServerException">
        <paramref name="desiredAccess" /> is a value that can be applied only to a <see cref="T:System.Printing.PrintQueue" /> object, not a <see cref="T:System.Printing.LocalPrintServer" /> object. For example, <see cref="F:System.Printing.PrintSystemDesiredAccess.UsePrinter" />.</exception>
    </member>
    <member name="M:System.Printing.PrintServer.#ctor(System.String,System.Printing.PrintSystemDesiredAccess)">
      <summary>Initializes a new instance of the <see cref="T:System.Printing.PrintServer" /> class that has the specified path and the needed access. </summary>
      <param name="path">The name and complete path of the print server.</param>
      <param name="desiredAccess">A value that specifies the type of print server access that your program needs.</param>
      <exception cref="T:System.Printing.PrintServerException">
        <paramref name="desiredAccess" /> is a value that can be applied only to a <see cref="T:System.Printing.PrintQueue" /> object, not a <see cref="T:System.Printing.LocalPrintServer" /> object. For example, <see cref="F:System.Printing.PrintSystemDesiredAccess.UsePrinter" />.</exception>
    </member>
    <member name="M:System.Printing.PrintServer.#ctor(System.String,System.String[])">
      <summary>Initializes a new instance of the <see cref="T:System.Printing.PrintServer" /> class that has the specified path and properties filter. </summary>
      <param name="path">The name and complete path of the print server.</param>
      <param name="propertiesFilter">An array of the names of properties that the constructor initializes.</param>
    </member>
    <member name="M:System.Printing.PrintServer.#ctor(System.String,System.String[],System.Printing.PrintSystemDesiredAccess)">
      <summary>Initializes a new instance of the <see cref="T:System.Printing.PrintServer" /> class that has the specified path, properties filter, and the needed access. </summary>
      <param name="path">The name and complete path of the print server.</param>
      <param name="propertiesFilter">An array of the names of properties that the constructor initializes.</param>
      <param name="desiredAccess">A value that specifies the type of print server access that your program needs.</param>
      <exception cref="T:System.Printing.PrintServerException">
        <paramref name="desiredAccess" /> is a value that can be applied only to a <see cref="T:System.Printing.PrintQueue" /> object, not a <see cref="T:System.Printing.LocalPrintServer" /> object. For example, <see cref="F:System.Printing.PrintSystemDesiredAccess.UsePrinter" />.</exception>
    </member>
    <member name="P:System.Printing.PrintServer.BeepEnabled">
      <summary>Gets or sets a value that indicates whether the print server beeps in response to an error condition in the printer. </summary>
      <returns>
        <see cref="T:System.Boolean" />true if the print server beeps in response to an error; otherwise, false.</returns>
    </member>
    <member name="M:System.Printing.PrintServer.Commit">
      <summary>Commits any changes that your program made to the properties of the print server object by writing them to the print server that the object represents. </summary>
      <exception cref="T:System.Printing.PrintSystemException">Some of the properties are not committed. </exception>
      <exception cref="T:System.Printing.PrintCommitAttributesException">Some of the properties could not be committed. - or -The <see cref="T:System.Printing.PrintServer" /> object was not created with sufficient rights. See Remarks.</exception>
    </member>
    <member name="P:System.Printing.PrintServer.DefaultPortThreadPriority">
      <summary>Do not use.</summary>
      <returns>The thread priority.</returns>
    </member>
    <member name="P:System.Printing.PrintServer.DefaultSchedulerPriority">
      <summary>Do not use.</summary>
      <returns>The default scheduler thread priority.</returns>
    </member>
    <member name="P:System.Printing.PrintServer.DefaultSpoolDirectory">
      <summary>Gets or sets the path where the print server's spool files are located. </summary>
      <returns>A <see cref="T:System.String" /> that identifies the complete path of the folder for the spool files.</returns>
    </member>
    <member name="M:System.Printing.PrintServer.DeletePrintQueue(System.Printing.PrintQueue)">
      <summary>Removes the specified <see cref="T:System.Printing.PrintQueue" /> from the print server. </summary>
      <returns>true if the queue is successfully deleted; otherwise, false.</returns>
      <param name="printQueue">The queue that is deleted.</param>
    </member>
    <member name="M:System.Printing.PrintServer.DeletePrintQueue(System.String)">
      <summary>Removes the print queue with the specified name from the print server. </summary>
      <returns>true if the queue is successfully deleted; otherwise, false.</returns>
      <param name="printQueueName">The name of the queue that is deleted.</param>
    </member>
    <member name="P:System.Printing.PrintServer.EventLog">
      <summary>Gets or sets the type of events that the print server logs. </summary>
      <returns>A value of <see cref="T:System.Printing.PrintServerEventLoggingTypes" /> that identifies the type of event logging that is provided by the print server. The default is <see cref="F:System.Printing.PrintServerEventLoggingTypes.LogPrintingErrorEvents" />.</returns>
    </member>
    <member name="M:System.Printing.PrintServer.GetPrintQueue(System.String)">
      <summary>Obtains a reference to the named print queue from the print server. </summary>
      <returns>A <see cref="T:System.Printing.PrintQueue" />.</returns>
      <param name="printQueueName">The name of the print queue.</param>
    </member>
    <member name="M:System.Printing.PrintServer.GetPrintQueue(System.String,System.String[])">
      <summary>Gets a specified print queue from the print server. </summary>
      <returns>A <see cref="T:System.Printing.PrintQueue" />.</returns>
      <param name="printQueueName">The name of the print queue.</param>
      <param name="propertiesFilter">The names of the properties that are initialized in the returned queue.</param>
    </member>
    <member name="M:System.Printing.PrintServer.GetPrintQueues">
      <summary>Gets the collection of print queues that the print server hosts. </summary>
      <returns>The <see cref="T:System.Printing.PrintQueueCollection" /> of print queues on the print server.</returns>
    </member>
    <member name="M:System.Printing.PrintServer.GetPrintQueues(System.Printing.EnumeratedPrintQueueTypes[])">
      <summary>Gets the collection of print queues of the specified types that are named in <see cref="T:System.Printing.EnumeratedPrintQueueTypes" /> and hosted by the print server. </summary>
      <returns>The <see cref="T:System.Printing.PrintQueueCollection" /> of print queues, of the specified types, on the print server.</returns>
      <param name="enumerationFlag">An array of values that represent the types of print queues that are in the collection.</param>
    </member>
    <member name="M:System.Printing.PrintServer.GetPrintQueues(System.Printing.PrintQueueIndexedProperty[])">
      <summary>Gets a collection of print queues that are hosted by the print server and initialized only in the properties that are specified in the <see cref="T:System.Printing.PrintQueueIndexedProperty" /> array. </summary>
      <returns>A <see cref="T:System.Printing.PrintQueueCollection" /> whose members are initialized only in the properties specified by <paramref name="propertiesFilter" />.</returns>
      <param name="propertiesFilter">The properties that the constructor initializes.</param>
    </member>
    <member name="M:System.Printing.PrintServer.GetPrintQueues(System.Printing.PrintQueueIndexedProperty[],System.Printing.EnumeratedPrintQueueTypes[])">
      <summary>Gets a collection of print queues of the specified types. These print queues are only initialized in the properties that are specified in the <see cref="T:System.Printing.PrintQueueIndexedProperty" /> array. </summary>
      <returns>The <see cref="T:System.Printing.PrintQueueCollection" /> of the print server.</returns>
      <param name="propertiesFilter">The properties that the constructor initializes.</param>
      <param name="enumerationFlag">An array of values that represent the types of print queues in the collection.</param>
    </member>
    <member name="M:System.Printing.PrintServer.GetPrintQueues(System.String[])">
      <summary>Gets a collection of print queues that are hosted by the print server and that are initialized only in the specified properties. </summary>
      <returns>The <see cref="T:System.Printing.PrintQueueCollection" /> of print queues on the print server; each print queue is initialized only in the properties that are specified in <paramref name="propertiesFilter" />.</returns>
      <param name="propertiesFilter">The names of the queue properties that are initialized.</param>
    </member>
    <member name="M:System.Printing.PrintServer.GetPrintQueues(System.String[],System.Printing.EnumeratedPrintQueueTypes[])">
      <summary>Gets the collection of print queues, which are of the specified <see cref="T:System.Printing.EnumeratedPrintQueueTypes" /> and are initialized only in the specified properties.  </summary>
      <returns>A <see cref="T:System.Printing.PrintQueueCollection" /> of print queues of the specified types; each print queue has only the specified properties initialized. </returns>
      <param name="propertiesFilter">The names of the queue properties that are initialized.</param>
      <param name="enumerationFlag">An array of values that represent the types of print queues that are returned in the collection.</param>
    </member>
    <member name="M:System.Printing.PrintServer.InstallPrintQueue(System.String,System.String,System.String[],System.String,System.Printing.IndexedProperties.PrintPropertyDictionary)">
      <summary>Installs a print queue, and associated printer driver, on the print server. </summary>
      <returns>The new <see cref="T:System.Printing.PrintQueue" />.</returns>
      <param name="printQueueName">The name of the new queue.</param>
      <param name="driverName">The path and name of the printer driver.</param>
      <param name="portNames">The IDs of the ports that the new queue uses.</param>
      <param name="printProcessorName">The name of the print processor.</param>
      <param name="initialParameters">The parameters that are initialized.</param>
    </member>
    <member name="M:System.Printing.PrintServer.InstallPrintQueue(System.String,System.String,System.String[],System.String,System.Printing.PrintQueueAttributes)">
      <summary>Installs a print queue, and associated printer driver, on the print server. </summary>
      <returns>The newly created <see cref="T:System.Printing.PrintQueue" />.</returns>
      <param name="printQueueName">The name of the new queue.</param>
      <param name="driverName">The path and name of the printer driver.</param>
      <param name="portNames">The IDs of the ports that the new queue uses.</param>
      <param name="printProcessorName">The name of the print processor.</param>
      <param name="printQueueAttributes">The attributes, as flags, of the new queue.</param>
    </member>
    <member name="M:System.Printing.PrintServer.InstallPrintQueue(System.String,System.String,System.String[],System.String,System.Printing.PrintQueueAttributes,System.Printing.PrintQueueStringProperty,System.Int32,System.Int32)">
      <summary>Installs a prioritized print queue, and associated printer driver, on the print server. </summary>
      <returns>The newly created <see cref="T:System.Printing.PrintQueue" />.</returns>
      <param name="printQueueName">The name of the new queue.</param>
      <param name="driverName">The path and name of the printer driver.</param>
      <param name="portNames">The IDs of the ports that the new queue uses.</param>
      <param name="printProcessorName">The name of the print processor.</param>
      <param name="printQueueAttributes">The attributes, as flags, of the new queue.</param>
      <param name="printQueueProperty">The comment, location, or share name of the new queue.</param>
      <param name="printQueuePriority">A value from 1 through 99 that specifies the priority of this print queue relative to other queues that are hosted by the print server.</param>
      <param name="printQueueDefaultPriority">A value from 1 to 99 that specifies the default priority of print jobs that are sent to the queue.</param>
    </member>
    <member name="M:System.Printing.PrintServer.InstallPrintQueue(System.String,System.String,System.String[],System.String,System.Printing.PrintQueueAttributes,System.String,System.String,System.String,System.String,System.Int32,System.Int32)">
      <summary>Installs a shared, prioritized print queue, and associated printer driver, on the print server. </summary>
      <returns>The newly created <see cref="T:System.Printing.PrintQueue" />.</returns>
      <param name="printQueueName">The name of the new queue.</param>
      <param name="driverName">The path and name of the printer driver.</param>
      <param name="portNames">The IDs of the ports that the new queue uses.</param>
      <param name="printProcessorName">The name of the print processor.</param>
      <param name="printQueueAttributes">The attributes, as flags, of the new queue.</param>
      <param name="printQueueShareName">The share name of the new queue.</param>
      <param name="printQueueComment">A comment about the queue that is visible to users in the Microsoft Windows UI.</param>
      <param name="printQueueLocation">The location of the new queue.</param>
      <param name="printQueueSeparatorFile">The path of a file that is inserted at the beginning of each print job.</param>
      <param name="printQueuePriority">A value from 1 through 99 that specifies the priority of the queue relative to other queues that are hosted by the print server.</param>
      <param name="printQueueDefaultPriority">A value from 1 through 99 that specifies the default priority of new print jobs that are sent to the queue.</param>
    </member>
    <member name="M:System.Printing.PrintServer.InternalDispose(System.Boolean)">
      <summary>Releases the unmanaged resources that are used by the <see cref="T:System.Printing.PrintServer" /> and optionally releases the managed resources. </summary>
      <param name="disposing">true to release both managed and unmanaged resources; false to release only unmanaged resources.</param>
    </member>
    <member name="P:System.Printing.PrintServer.IsDelayInitialized">
      <summary>Gets or sets a value that indicates whether initialization of the <see cref="T:System.Printing.PrintServer" /> properties has been postponed. </summary>
      <returns>true if initialization is postponed; otherwise, false. </returns>
    </member>
    <member name="P:System.Printing.PrintServer.MajorVersion">
      <summary>Gets the major version of the operating system. </summary>
      <returns>An <see cref="T:System.Int32" /> that identifies the major version of the operating system.</returns>
    </member>
    <member name="P:System.Printing.PrintServer.MinorVersion">
      <summary>Gets the minor version within the major version of the operating system. </summary>
      <returns>An <see cref="T:System.Int32" /> that identifies the minor version of the operating system.</returns>
    </member>
    <member name="P:System.Printing.PrintServer.Name">
      <summary>Gets the name of the print server. </summary>
      <returns>The name of the print server.</returns>
      <exception cref="T:System.Printing.PrintSystemException">The property is not initialized.</exception>
    </member>
    <member name="P:System.Printing.PrintServer.NetPopup">
      <summary>Gets or sets a value that indicates whether notifications that a print job has finished are sent to either the print server or the client computer. </summary>
      <returns>true if notifications are sent to the client computer; false if notifications are sent to the print server.</returns>
    </member>
    <member name="P:System.Printing.PrintServer.PortThreadPriority">
      <summary>Gets or sets the thread priority for the process that manages I/O through the printer ports. </summary>
      <returns>A <see cref="T:System.Threading.ThreadPriority" /> enumeration value that identifies the thread priority for the process that manages the printer ports. The default is <see cref="F:System.Threading.ThreadPriority.Normal" />.</returns>
    </member>
    <member name="M:System.Printing.PrintServer.Refresh">
      <summary>Updates the properties of the <see cref="T:System.Printing.PrintServer" /> object so that each property value matches the corresponding attribute value of the print server that the object represents. </summary>
      <exception cref="T:System.Printing.PrintSystemException">Some of the properties cannot be refreshed. </exception>
    </member>
    <member name="P:System.Printing.PrintServer.RestartJobOnPoolEnabled">
      <summary>Gets or sets a value that indicates whether users can restart jobs after an error occurs if printer pooling is enabled.</summary>
      <returns>true if jobs can be restarted when printer pooling is enabled; otherwise, false.</returns>
    </member>
    <member name="P:System.Printing.PrintServer.RestartJobOnPoolTimeout">
      <summary>Gets or sets a value that indicates the wait time before a job can be restarted, if an error occurs when printer pooling is also enabled.</summary>
      <returns>The wait time, in minutes, before a job restarts.  </returns>
    </member>
    <member name="P:System.Printing.PrintServer.SchedulerPriority">
      <summary>Gets or sets the thread priority for the process that routes print jobs from applications to print queues. </summary>
      <returns>A <see cref="T:System.Threading.ThreadPriority" /> enumeration value that identifies the thread priority for the print server scheduling process. The default is <see cref="F:System.Threading.ThreadPriority.Normal" />.</returns>
    </member>
    <member name="P:System.Printing.PrintServer.SubSystemVersion">
      <summary>Gets the version of the print spooler system. </summary>
      <returns>A <see cref="T:System.Byte" /> that identifies the version of the print spooler system.</returns>
    </member>
    <member name="T:System.Printing.PrintServerEventLoggingTypes">
      <summary>Specifies the types of events that can be logged by a <see cref="T:System.Printing.PrintServer" />.</summary>
    </member>
    <member name="F:System.Printing.PrintServerEventLoggingTypes.LogAllPrintingEvents">
      <summary>All printing events.</summary>
    </member>
    <member name="F:System.Printing.PrintServerEventLoggingTypes.LogPrintingInformationEvents">
      <summary>Information events for printing.</summary>
    </member>
    <member name="F:System.Printing.PrintServerEventLoggingTypes.LogPrintingWarningEvents">
      <summary>Warning events.</summary>
    </member>
    <member name="F:System.Printing.PrintServerEventLoggingTypes.LogPrintingErrorEvents">
      <summary>Error events for printing.</summary>
    </member>
    <member name="F:System.Printing.PrintServerEventLoggingTypes.LogPrintingSuccessEvents">
      <summary>Successful printing events.</summary>
    </member>
    <member name="F:System.Printing.PrintServerEventLoggingTypes.None">
      <summary>No events.</summary>
    </member>
    <member name="T:System.Printing.PrintServerIndexedProperty">
      <summary>Specifies the properties of a <see cref="T:System.Printing.PrintServer" /> object that are initialized when it is constructed.</summary>
    </member>
    <member name="F:System.Printing.PrintServerIndexedProperty.MinorVersion">
      <summary>The property that specifies the minor version of the operating system.</summary>
    </member>
    <member name="F:System.Printing.PrintServerIndexedProperty.MajorVersion">
      <summary>The property that specifies the major version of the operating system.</summary>
    </member>
    <member name="F:System.Printing.PrintServerIndexedProperty.EventLog">
      <summary>The property that specifies the kind of event logging that is provided by the print server.</summary>
    </member>
    <member name="F:System.Printing.PrintServerIndexedProperty.RestartJobOnPoolEnabled">
      <summary>The property that specifies whether users can restart print jobs when printer pooling is being used.</summary>
    </member>
    <member name="F:System.Printing.PrintServerIndexedProperty.RestartJobOnPoolTimeout">
      <summary>The property that specifies how long to wait before restarting a print job when printer pooling is being used.</summary>
    </member>
    <member name="F:System.Printing.PrintServerIndexedProperty.NetPopup">
      <summary>The property that specifies whether the client computer or the print server receives notifications that a job is finished.</summary>
    </member>
    <member name="F:System.Printing.PrintServerIndexedProperty.BeepEnabled">
      <summary>The property that specifies whether a printer error causes the print server to beep.</summary>
    </member>
    <member name="F:System.Printing.PrintServerIndexedProperty.DefaultSchedulerPriority">
      <summary>The property that specifies the default thread priority for the scheduling of print jobs.</summary>
    </member>
    <member name="F:System.Printing.PrintServerIndexedProperty.SchedulerPriority">
      <summary>The property that specifies the priority of the scheduler.</summary>
    </member>
    <member name="F:System.Printing.PrintServerIndexedProperty.DefaultPortThreadPriority">
      <summary>The property that specifies the default priority for the thread that manages port I/0.</summary>
    </member>
    <member name="F:System.Printing.PrintServerIndexedProperty.PortThreadPriority">
      <summary>The property that specifies the priority of the thread that manages port I/O.</summary>
    </member>
    <member name="F:System.Printing.PrintServerIndexedProperty.DefaultSpoolDirectory">
      <summary>The property that specifies the path to the folder where spool jobs are located as temporary files.</summary>
    </member>
    <member name="T:System.Printing.PrintSystemDesiredAccess">
      <summary>Specifies the different access rights (or levels of access) for printing objects.</summary>
    </member>
    <member name="F:System.Printing.PrintSystemDesiredAccess.AdministratePrinter">
      <summary>The right to perform all administrative tasks for the print queue, including the right to pause and resume any print job; and the right to delete all jobs from the queue. This access level also includes all rights under <see cref="F:System.Printing.PrintSystemDesiredAccess.UsePrinter" />.</summary>
    </member>
    <member name="F:System.Printing.PrintSystemDesiredAccess.UsePrinter">
      <summary>The right to add print jobs to the queue and to delete and enumerate one's own jobs.</summary>
    </member>
    <member name="F:System.Printing.PrintSystemDesiredAccess.EnumerateServer">
      <summary>The right to list the queues on the print server.</summary>
    </member>
    <member name="F:System.Printing.PrintSystemDesiredAccess.AdministrateServer">
      <summary>The right to perform all administrative tasks for the print server. This access level does not include <see cref="F:System.Printing.PrintSystemDesiredAccess.AdministratePrinter" /> rights for the print queues hosted by the server.</summary>
    </member>
    <member name="F:System.Printing.PrintSystemDesiredAccess.None">
      <summary>No access.</summary>
    </member>
    <member name="T:System.Printing.PrintSystemJobInfo">
      <summary>Defines a print job in detail.</summary>
    </member>
    <member name="M:System.Printing.PrintSystemJobInfo.Cancel">
      <summary>Cancels the print job. </summary>
    </member>
    <member name="M:System.Printing.PrintSystemJobInfo.Commit">
      <summary>Writes any changes to the properties of the <see cref="T:System.Printing.PrintSystemJobInfo" /> object to the actual print job that the object represents.</summary>
    </member>
    <member name="M:System.Printing.PrintSystemJobInfo.Get(System.Printing.PrintQueue,System.Int32)">
      <summary>Gets the <see cref="T:System.Printing.PrintSystemJobInfo" /> for the specified job in the specified <see cref="T:System.Printing.PrintQueue" />.</summary>
      <returns>The <see cref="T:System.Printing.PrintSystemJobInfo" /> that corresponds to the <paramref name="jobIdentifier" />.</returns>
      <param name="printQueue">The print queue hosting the print job.</param>
      <param name="jobIdentifier">A numerical ID for the print job.</param>
    </member>
    <member name="P:System.Printing.PrintSystemJobInfo.HostingPrintQueue">
      <summary>Gets the print queue that is hosting the print job.</summary>
      <returns>A <see cref="T:System.Printing.PrintQueue" /> value that represents the print queue that owns the print job.</returns>
    </member>
    <member name="P:System.Printing.PrintSystemJobInfo.HostingPrintServer">
      <summary>Gets the print server that is hosting the print queue for the print job.</summary>
      <returns>A <see cref="T:System.Printing.PrintServer" /> value that represents the hosting print server (usually a computer) for the <see cref="T:System.Printing.PrintQueue" /> that owns the print job. </returns>
    </member>
    <member name="M:System.Printing.PrintSystemJobInfo.InternalDispose(System.Boolean)">
      <summary>Releases the unmanaged resources that are used by the <see cref="T:System.Printing.PrintSystemJobInfo" /> and optionally, releases the managed resources.</summary>
      <param name="disposing">true to release both managed and unmanaged resources; false to release only unmanaged resources. </param>
    </member>
    <member name="P:System.Printing.PrintSystemJobInfo.IsBlocked">
      <summary>Gets a value that indicates whether the print job is blocked and therefore, not printing. </summary>
      <returns>true if the print job is blocked; otherwise, false.</returns>
    </member>
    <member name="P:System.Printing.PrintSystemJobInfo.IsCompleted">
      <summary>Gets a value that indicates whether the print job is finished.</summary>
      <returns>true if the print job is finished; otherwise, false.</returns>
    </member>
    <member name="P:System.Printing.PrintSystemJobInfo.IsDeleted">
      <summary>Gets a value that indicates whether the print job, which is represented by the <see cref="T:System.Printing.PrintSystemJobInfo" /> object, was deleted from the print queue. </summary>
      <returns>true if the print job was deleted; otherwise false.</returns>
    </member>
    <member name="P:System.Printing.PrintSystemJobInfo.IsDeleting">
      <summary>Gets a value that indicates whether the print job is being deleted from the print queue. </summary>
      <returns>true if the print job is being deleted; otherwise false.</returns>
    </member>
    <member name="P:System.Printing.PrintSystemJobInfo.IsInError">
      <summary>Gets a value that indicates whether an error condition is associated with the print job.</summary>
      <returns>true if an error condition is associated with the print job; otherwise false.</returns>
    </member>
    <member name="P:System.Printing.PrintSystemJobInfo.IsOffline">
      <summary>Gets a value that indicates whether the printer is offline. </summary>
      <returns>true if the printer is offline; otherwise false.</returns>
    </member>
    <member name="P:System.Printing.PrintSystemJobInfo.IsPaperOut">
      <summary>Gets a value that indicates whether the printer has run out of the paper size and type that the print job requires. </summary>
      <returns>true if the printer has run out of the required paper; otherwise, false.</returns>
    </member>
    <member name="P:System.Printing.PrintSystemJobInfo.IsPaused">
      <summary>Gets a value that indicates whether the print job is paused.</summary>
      <returns>true if the print job is paused; otherwise false.</returns>
    </member>
    <member name="P:System.Printing.PrintSystemJobInfo.IsPrinted">
      <summary>Gets a value that indicates whether the print job printed.</summary>
      <returns>true if the print job has printed; otherwise false.</returns>
    </member>
    <member name="P:System.Printing.PrintSystemJobInfo.IsPrinting">
      <summary>Gets a value that indicates whether the print job is being printed.</summary>
      <returns>true if the printer is printing; otherwise false.</returns>
    </member>
    <member name="P:System.Printing.PrintSystemJobInfo.IsRestarted">
      <summary>Gets a value that indicates whether the print job has been restarted. </summary>
      <returns>true if the printer is printing; otherwise false.</returns>
    </member>
    <member name="P:System.Printing.PrintSystemJobInfo.IsRetained">
      <summary>Gets a value that indicates whether the print job was saved in the queue after it printed. </summary>
      <returns>true if the print job was saved; otherwise false.</returns>
    </member>
    <member name="P:System.Printing.PrintSystemJobInfo.IsSpooling">
      <summary>Gets a value that indicates whether the print job is being spooled.</summary>
      <returns>true if the print job is being spooled; otherwise false.</returns>
    </member>
    <member name="P:System.Printing.PrintSystemJobInfo.IsUserInterventionRequired">
      <summary>Gets a value that indicates whether the printer needs user intervention.</summary>
      <returns>true if user intervention is needed; otherwise false.</returns>
    </member>
    <member name="P:System.Printing.PrintSystemJobInfo.JobIdentifier">
      <summary>Gets the identification number for the print job.</summary>
      <returns>An <see cref="T:System.Int32" /> that identifies the print job.</returns>
    </member>
    <member name="P:System.Printing.PrintSystemJobInfo.JobName">
      <summary>Gets or sets a name for the print job.</summary>
      <returns>A <see cref="T:System.String" /> name for the print job.</returns>
    </member>
    <member name="P:System.Printing.PrintSystemJobInfo.JobSize">
      <summary>Get the size, in bytes, of the print job.</summary>
      <returns>An <see cref="T:System.Int32" /> that states the size, in bytes, of the print job.</returns>
    </member>
    <member name="P:System.Printing.PrintSystemJobInfo.JobStatus">
      <summary>Gets the current status of the print job. </summary>
      <returns>A <see cref="T:System.Printing.PrintJobStatus" /> value.</returns>
    </member>
    <member name="P:System.Printing.PrintSystemJobInfo.JobStream">
      <summary>Gets a reference to the <see cref="T:System.IO.Stream" /> of the print job.</summary>
      <returns>A <see cref="T:System.IO.Stream" /> that contains the print job.</returns>
    </member>
    <member name="P:System.Printing.PrintSystemJobInfo.NumberOfPages">
      <summary>Gets the number of pages in the print job.</summary>
      <returns>An <see cref="T:System.Int32" /> that states the number of pages in the print job.</returns>
    </member>
    <member name="P:System.Printing.PrintSystemJobInfo.NumberOfPagesPrinted">
      <summary>Gets the number of pages that have already printed.</summary>
      <returns>An <see cref="T:System.Int32" /> that states the number of pages that have already printed.</returns>
    </member>
    <member name="M:System.Printing.PrintSystemJobInfo.Pause">
      <summary>Halts printing of the job until <see cref="M:System.Printing.PrintSystemJobInfo.Resume" /> runs. </summary>
    </member>
    <member name="P:System.Printing.PrintSystemJobInfo.PositionInPrintQueue">
      <summary>Gets the print job's place in the print queue. </summary>
      <returns>An <see cref="T:System.Int32" /> that states the print job's place in the queue.</returns>
    </member>
    <member name="P:System.Printing.PrintSystemJobInfo.Priority">
      <summary>Gets a non-numerical expression that represents the priority of the print job relative to other jobs in the print queue.</summary>
      <returns>A <see cref="T:System.Printing.PrintJobPriority" /> that represents the priority of the print job as <see cref="F:System.Printing.PrintJobPriority.Maximum" />, <see cref="F:System.Printing.PrintJobPriority.Minimum" />, <see cref="F:System.Printing.PrintJobPriority.Default" />, or <see cref="F:System.Printing.PrintJobPriority.None" />.</returns>
    </member>
    <member name="M:System.Printing.PrintSystemJobInfo.Refresh">
      <summary>Updates the properties of the <see cref="T:System.Printing.PrintSystemJobInfo" /> object so that their values match the values of the actual print job that the object represents.</summary>
    </member>
    <member name="M:System.Printing.PrintSystemJobInfo.Restart">
      <summary>Restarts a print job from the beginning. </summary>
    </member>
    <member name="M:System.Printing.PrintSystemJobInfo.Resume">
      <summary>Resumes the printing of a paused print job.</summary>
    </member>
    <member name="P:System.Printing.PrintSystemJobInfo.StartTimeOfDay">
      <summary>Gets the earliest time of day, expressed as the number of minutes after midnight Coordinated Universal Time (UTC) (also called Greenwich Mean Time [GMT]), that the print job can begin printing.</summary>
      <returns>An <see cref="T:System.Int32" /> specifying the earliest possible start time for the print job, expressed as the number of minutes after midnight (UTC). The maximum value is 1439.</returns>
    </member>
    <member name="P:System.Printing.PrintSystemJobInfo.Submitter">
      <summary>Gets the name of the user who submitted the print job.</summary>
      <returns>A <see cref="T:System.String" /> that identifies the user who submitted the print job.</returns>
    </member>
    <member name="P:System.Printing.PrintSystemJobInfo.TimeJobSubmitted">
      <summary>Gets the date and time that the print job is submitted.</summary>
      <returns>A <see cref="T:System.DateTime" /> object containing the date and time that the print job is submitted.</returns>
    </member>
    <member name="P:System.Printing.PrintSystemJobInfo.TimeSinceStartedPrinting">
      <summary>Gets the time, in milliseconds, since the print job started printing.</summary>
      <returns>An <see cref="T:System.Int32" /> that represents the time, in milliseconds, since the print job started.</returns>
    </member>
    <member name="P:System.Printing.PrintSystemJobInfo.UntilTimeOfDay">
      <summary>Gets the last time of day, expressed as the number of minutes after midnight Coordinated Universal Time (UTC) (also called Greenwich Mean Time [GMT]), that the print job can begin printing.</summary>
      <returns>An <see cref="T:System.Int32" /> that specifies the last time that the job can print, expressed as the number of minutes after midnight (UTC). The maximum value is 1439.</returns>
    </member>
    <member name="T:System.Printing.PrintSystemObject">
      <summary>Defines basic properties and methods that are common to the objects of the printing system. Classes that derive from this class represent such objects as print queues, print servers, and print jobs.</summary>
    </member>
    <member name="M:System.Printing.PrintSystemObject.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Printing.PrintSystemObject" /> class. </summary>
    </member>
    <member name="M:System.Printing.PrintSystemObject.#ctor(System.Printing.PrintSystemObjectLoadMode)">
      <summary>Initializes a new instance of the <see cref="T:System.Printing.PrintSystemObject" /> class by using the specified <see cref="T:System.Printing.PrintSystemObjectLoadMode" />.</summary>
      <param name="mode">A value that specifies whether the properties of the object should be initialized when the object is loaded.</param>
    </member>
    <member name="M:System.Printing.PrintSystemObject.BaseAttributeNames">
      <summary>Gets the names of the attributes of the derived class. </summary>
      <returns>An array of <see cref="T:System.String" /> values.</returns>
    </member>
    <member name="M:System.Printing.PrintSystemObject.Commit">
      <summary>When overridden in a derived class, writes any changes that your program has made to the object's properties to the actual software or hardware component that the object represents. </summary>
    </member>
    <member name="M:System.Printing.PrintSystemObject.Dispose">
      <summary>Releases all resources used by the <see cref="T:System.Printing.PrintSystemObject" />. </summary>
    </member>
    <member name="M:System.Printing.PrintSystemObject.Dispose(System.Boolean)">
      <summary>Releases the unmanaged resources used by the <see cref="T:System.Printing.PrintSystemObject" /> and optionally releases the managed resources. </summary>
      <param name="disposing">true to release both managed and unmanaged resources; false to release only unmanaged resources.</param>
    </member>
    <member name="M:System.Printing.PrintSystemObject.Finalize">
      <summary>Releases the resources that are being used by the <see cref="T:System.Printing.PrintSystemObject" />. </summary>
    </member>
    <member name="M:System.Printing.PrintSystemObject.Initialize">
      <summary>Initializes the properties of the <see cref="T:System.Printing.PrintSystemObject" />. </summary>
    </member>
    <member name="M:System.Printing.PrintSystemObject.InternalDispose(System.Boolean)">
      <summary>When overridden in a derived class, releases the unmanaged resources that are being used by the <see cref="T:System.Printing.PrintSystemObject" />, and optionally releases the managed resources that are being used. </summary>
      <param name="disposing">true to release both managed and unmanaged resources; false to release only unmanaged resources. </param>
    </member>
    <member name="P:System.Printing.PrintSystemObject.IsDisposed">
      <summary>Gets or sets a value that indicates whether the object has been disposed. </summary>
      <returns>true if the object has been disposed; otherwise false.</returns>
    </member>
    <member name="P:System.Printing.PrintSystemObject.Name">
      <summary>Gets the name of the object. </summary>
      <returns>A <see cref="T:System.String" /> that represents the name of the object.</returns>
    </member>
    <member name="P:System.Printing.PrintSystemObject.Parent">
      <summary>Gets the parent of the object. </summary>
      <returns>Another <see cref="T:System.Printing.PrintSystemObject" />.</returns>
    </member>
    <member name="P:System.Printing.PrintSystemObject.PropertiesCollection">
      <summary>Gets a collection of attribute and value pairs. </summary>
      <returns>A <see cref="T:System.Printing.IndexedProperties.PrintPropertyDictionary" /> that contains attribute and value pairs.</returns>
    </member>
    <member name="M:System.Printing.PrintSystemObject.Refresh">
      <summary>When overridden in a derived class, updates the properties of an object of the derived class so that its values match the values of the actual software or hardware component that the object represents. </summary>
    </member>
    <member name="T:System.Printing.PrintSystemObjectLoadMode">
      <summary>Specifies whether the properties of an object are initialized when the object loads.</summary>
    </member>
    <member name="F:System.Printing.PrintSystemObjectLoadMode.LoadInitialized">
      <summary>The properties are initialized during loading.</summary>
    </member>
    <member name="F:System.Printing.PrintSystemObjectLoadMode.LoadUninitialized">
      <summary>The properties are not initialized during loading.</summary>
    </member>
    <member name="F:System.Printing.PrintSystemObjectLoadMode.None">
      <summary>Not specified whether the properties are initialized. </summary>
    </member>
    <member name="T:System.Printing.PrintSystemObjectPropertiesChangedEventArgs">
      <summary>Provides data for a PropertiesChanged event, which you must create.</summary>
    </member>
    <member name="M:System.Printing.PrintSystemObjectPropertiesChangedEventArgs.#ctor(System.Collections.Specialized.StringCollection)">
      <summary>Initializes a new instance of the <see cref="T:System.Printing.PrintSystemObjectPropertiesChangedEventArgs" /> class.</summary>
      <param name="events">A collection of strings, each of which identifies a changed property.</param>
    </member>
    <member name="M:System.Printing.PrintSystemObjectPropertiesChangedEventArgs.Dispose">
      <summary>Releases all resources used by the <see cref="T:System.Printing.PrintSystemObjectPropertiesChangedEventArgs" /> object.</summary>
    </member>
    <member name="M:System.Printing.PrintSystemObjectPropertiesChangedEventArgs.Dispose(System.Boolean)">
      <summary>Releases the unmanaged resources that are used by the <see cref="T:System.Printing.PrintSystemObjectPropertiesChangedEventArgs" /> object and optionally releases the managed resources. </summary>
      <param name="disposing">true to release both managed and unmanaged resources; false to release only unmanaged resources.</param>
    </member>
    <member name="P:System.Printing.PrintSystemObjectPropertiesChangedEventArgs.PropertiesNames">
      <summary>Gets a collection of the names of the changed properties.</summary>
      <returns>A <see cref="T:System.Collections.Specialized.StringCollection" /> of property names.</returns>
    </member>
    <member name="T:System.Printing.PrintSystemObjectPropertyChangedEventArgs">
      <summary>Provides data for a PropertyChanged event, which you must create.</summary>
    </member>
    <member name="M:System.Printing.PrintSystemObjectPropertyChangedEventArgs.#ctor(System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.Printing.PrintSystemObjectPropertyChangedEventArgs" /> class.</summary>
      <param name="eventName">The name of the property that changed.</param>
    </member>
    <member name="M:System.Printing.PrintSystemObjectPropertyChangedEventArgs.Dispose">
      <summary>Releases all resources used by the <see cref="T:System.Printing.PrintSystemObjectPropertyChangedEventArgs" />.</summary>
    </member>
    <member name="M:System.Printing.PrintSystemObjectPropertyChangedEventArgs.Dispose(System.Boolean)">
      <summary>Releases the unmanaged resources that are used by the <see cref="T:System.Printing.PrintSystemObjectPropertyChangedEventArgs" /> and optionally releases the managed resources. </summary>
      <param name="disposing">true to release both managed and unmanaged resources; false to release only unmanaged resources. </param>
    </member>
    <member name="P:System.Printing.PrintSystemObjectPropertyChangedEventArgs.PropertyName">
      <summary>Gets the name of the property that changed.</summary>
      <returns>A <see cref="T:System.String" /> that holds the property name.</returns>
    </member>
    <member name="T:System.Printing.PrintSystemObjects">
      <summary>Represents a collection of print system objects. </summary>
    </member>
    <member name="M:System.Printing.PrintSystemObjects.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Printing.PrintSystemObjects" /> class.</summary>
    </member>
    <member name="M:System.Printing.PrintSystemObjects.Dispose">
      <summary>Releases all resources used by the <see cref="T:System.Printing.PrintSystemObjects" />.</summary>
    </member>
    <member name="M:System.Printing.PrintSystemObjects.Dispose(System.Boolean)">
      <summary>Releases the unmanaged resources that are used by the <see cref="T:System.Printing.PrintSystemObjects" /> and optionally releases the managed resources. </summary>
      <param name="disposing">true to release both managed and unmanaged resources; false to release only unmanaged resources.</param>
    </member>
    <member name="T:System.Printing.IndexedProperties.PrintBooleanProperty">
      <summary>Represents a <see cref="T:System.Boolean" /> property (and its value) of a printing system hardware or software component. </summary>
    </member>
    <member name="M:System.Printing.IndexedProperties.PrintBooleanProperty.#ctor(System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.Printing.IndexedProperties.PrintBooleanProperty" /> class for the specified attribute.</summary>
      <param name="attributeName">The name of the <see cref="T:System.Boolean" /> attribute that the <see cref="T:System.Printing.IndexedProperties.PrintBooleanProperty" /> represents.</param>
    </member>
    <member name="M:System.Printing.IndexedProperties.PrintBooleanProperty.#ctor(System.String,System.Object)">
      <summary>Initializes a new instance of the <see cref="T:System.Printing.IndexedProperties.PrintBooleanProperty" /> class for the specified property that is using the specified value.</summary>
      <param name="attributeName">The name of the <see cref="T:System.Boolean" /> property that the <see cref="T:System.Printing.IndexedProperties.PrintBooleanProperty" /> represents.</param>
      <param name="attributeValue">The value of the property that the <see cref="T:System.Printing.IndexedProperties.PrintBooleanProperty" /> represents.</param>
    </member>
    <member name="M:System.Printing.IndexedProperties.PrintBooleanProperty.op_Implicit(System.Printing.IndexedProperties.PrintBooleanProperty|System.Runtime.CompilerServices.IsImplicitlyDereferenced)~System.Boolean">
      <summary>Provides implicit conversion from a <see cref="T:System.Printing.IndexedProperties.PrintBooleanProperty" /> to a <see cref="T:System.Boolean" />.</summary>
      <returns>A <see cref="T:System.Boolean" />.</returns>
      <param name="attribRef">The <see cref="T:System.Printing.IndexedProperties.PrintBooleanProperty" />  that is converted.</param>
    </member>
    <member name="M:System.Printing.IndexedProperties.PrintBooleanProperty.op_Implicit(System.Printing.IndexedProperties.PrintBooleanProperty)~System.Boolean">
      <summary>Provides implicit conversion to a <see cref="T:System.Boolean" /> from a pointer to a <see cref="T:System.Printing.IndexedProperties.PrintBooleanProperty" />.</summary>
      <returns>A <see cref="T:System.Boolean" />.</returns>
      <param name="attribRef">A pointer to the <see cref="T:System.Printing.IndexedProperties.PrintBooleanProperty" />  that is converted.</param>
    </member>
    <member name="P:System.Printing.IndexedProperties.PrintBooleanProperty.Value">
      <summary>Gets or sets the value of the property that the <see cref="T:System.Printing.IndexedProperties.PrintBooleanProperty" /> represents.</summary>
      <returns>A boxed <see cref="T:System.Boolean" />.</returns>
    </member>
    <member name="T:System.Printing.IndexedProperties.PrintByteArrayProperty">
      <summary>Represents a property of a printing system hardware or software component whose value is an array of <see cref="T:System.Byte" /> values. </summary>
    </member>
    <member name="M:System.Printing.IndexedProperties.PrintByteArrayProperty.#ctor(System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.Printing.IndexedProperties.PrintByteArrayProperty" /> class for the specified attribute.</summary>
      <param name="attributeName">The name of the property, which is an array of type <see cref="T:System.Byte" />, that the <see cref="T:System.Printing.IndexedProperties.PrintByteArrayProperty" /> represents.</param>
    </member>
    <member name="M:System.Printing.IndexedProperties.PrintByteArrayProperty.#ctor(System.String,System.Object)">
      <summary>Initializes a new instance of the <see cref="T:System.Printing.IndexedProperties.PrintByteArrayProperty" /> class that has the specified value for the specified attribute.</summary>
      <param name="attributeName">The name of the property, which is an array of type <see cref="T:System.Byte" />, that the <see cref="T:System.Printing.IndexedProperties.PrintByteArrayProperty" /> represents.</param>
      <param name="attributeValue">The value of the property that the <see cref="T:System.Printing.IndexedProperties.PrintByteArrayProperty" /> represents.</param>
    </member>
    <member name="M:System.Printing.IndexedProperties.PrintByteArrayProperty.op_Implicit(System.Printing.IndexedProperties.PrintByteArrayProperty|System.Runtime.CompilerServices.IsImplicitlyDereferenced)~System.Byte[]">
      <summary>Provides implicit conversion from a <see cref="T:System.Printing.IndexedProperties.PrintByteArrayProperty" /> to an array of <see cref="T:System.Byte" /> values. </summary>
      <returns>An array of <see cref="T:System.Byte" /> values.</returns>
      <param name="attribRef">The <see cref="T:System.Printing.IndexedProperties.PrintByteArrayProperty" />  that is converted.</param>
    </member>
    <member name="M:System.Printing.IndexedProperties.PrintByteArrayProperty.op_Implicit(System.Printing.IndexedProperties.PrintByteArrayProperty)~System.Byte[]">
      <summary>Provides implicit conversion to an array of <see cref="T:System.Byte" /> values from a pointer to a <see cref="T:System.Printing.IndexedProperties.PrintByteArrayProperty" />.</summary>
      <returns>An array of <see cref="T:System.Byte" /> values.</returns>
      <param name="attribRef">A pointer to a <see cref="T:System.Printing.IndexedProperties.PrintByteArrayProperty" />  that is converted.</param>
    </member>
    <member name="P:System.Printing.IndexedProperties.PrintByteArrayProperty.Value">
      <summary>Gets or sets the value of the property that the <see cref="T:System.Printing.IndexedProperties.PrintByteArrayProperty" /> represents.</summary>
      <returns>A boxed array of <see cref="T:System.Byte" /> values.</returns>
    </member>
    <member name="T:System.Printing.IndexedProperties.PrintDateTimeProperty">
      <summary>Represents a <see cref="T:System.DateTime" /> property (and its value) of a printing system hardware or software component. </summary>
    </member>
    <member name="M:System.Printing.IndexedProperties.PrintDateTimeProperty.#ctor(System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.Printing.IndexedProperties.PrintDateTimeProperty" /> class for the specified property.</summary>
      <param name="attributeName">The name of the <see cref="T:System.DateTime" /> property that the <see cref="T:System.Printing.IndexedProperties.PrintDateTimeProperty" /> represents.</param>
    </member>
    <member name="M:System.Printing.IndexedProperties.PrintDateTimeProperty.#ctor(System.String,System.Object)">
      <summary>Initializes a new instance of the <see cref="T:System.Printing.IndexedProperties.PrintDateTimeProperty" /> class that has the specified value for the specified attribute.</summary>
      <param name="attributeName">The name of the <see cref="T:System.DateTime" /> property that the <see cref="T:System.Printing.IndexedProperties.PrintDateTimeProperty" /> represents.</param>
      <param name="attributeValue">The value of the property that the <see cref="T:System.Printing.IndexedProperties.PrintDateTimeProperty" /> represents.</param>
    </member>
    <member name="M:System.Printing.IndexedProperties.PrintDateTimeProperty.op_Implicit(System.Printing.IndexedProperties.PrintDateTimeProperty|System.Runtime.CompilerServices.IsImplicitlyDereferenced)~System.ValueType!System.DateTime!System.Runtime.CompilerServices.IsBoxed">
      <summary>Provides implicit conversion from a <see cref="T:System.Printing.IndexedProperties.PrintDateTimeProperty" /> to a <see cref="T:System.DateTime" />. </summary>
      <returns>A <see cref="T:System.DateTime" />. </returns>
      <param name="attribRef">The object that is converted.</param>
    </member>
    <member name="M:System.Printing.IndexedProperties.PrintDateTimeProperty.op_Implicit(System.Printing.IndexedProperties.PrintDateTimeProperty)~System.ValueType!System.DateTime!System.Runtime.CompilerServices.IsBoxed">
      <summary>Provides implicit conversion from a pointer to a <see cref="T:System.Printing.IndexedProperties.PrintDateTimeProperty" /> to a <see cref="T:System.DateTime" />. </summary>
      <returns>A <see cref="T:System.DateTime" />. </returns>
      <param name="attribRef">The object that is converted.</param>
    </member>
    <member name="P:System.Printing.IndexedProperties.PrintDateTimeProperty.Value">
      <summary>Gets or sets the value of the property that the <see cref="T:System.Printing.IndexedProperties.PrintDateTimeProperty" /> represents.</summary>
      <returns>A boxed <see cref="T:System.DateTime" />.</returns>
    </member>
    <member name="T:System.Printing.IndexedProperties.PrintDriverProperty">
      <summary>Represents a <see cref="T:System.Printing.PrintDriver" /> property (and its value) of a printing system hardware or software component. </summary>
    </member>
    <member name="M:System.Printing.IndexedProperties.PrintDriverProperty.#ctor(System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.Printing.IndexedProperties.PrintDriverProperty" /> class for the specified property.</summary>
      <param name="attributeName">The name of the <see cref="T:System.Printing.PrintDriver" /> property that the <see cref="T:System.Printing.IndexedProperties.PrintDriverProperty" /> represents.</param>
    </member>
    <member name="M:System.Printing.IndexedProperties.PrintDriverProperty.#ctor(System.String,System.Object)">
      <summary>Initializes a new instance of the <see cref="T:System.Printing.IndexedProperties.PrintDriverProperty" /> class that has the specified value for the specified attribute. </summary>
      <param name="attributeName">The name of the <see cref="T:System.Printing.PrintDriver" /> property that the <see cref="T:System.Printing.IndexedProperties.PrintDriverProperty" /> represents.</param>
      <param name="attributeValue">The value of the property that the <see cref="T:System.Printing.IndexedProperties.PrintDriverProperty" /> represents.</param>
    </member>
    <member name="M:System.Printing.IndexedProperties.PrintDriverProperty.op_Implicit(System.Printing.IndexedProperties.PrintDriverProperty|System.Runtime.CompilerServices.IsImplicitlyDereferenced)~System.Printing.PrintDriver">
      <summary>Provides implicit conversion from a <see cref="T:System.Printing.IndexedProperties.PrintDriverProperty" /> to a <see cref="T:System.Printing.PrintDriver" />. </summary>
      <returns>A <see cref="T:System.Printing.PrintDriver" />.</returns>
      <param name="attribRef">The <see cref="T:System.Printing.IndexedProperties.PrintDriverProperty" />  that is converted.</param>
    </member>
    <member name="M:System.Printing.IndexedProperties.PrintDriverProperty.op_Implicit(System.Printing.IndexedProperties.PrintDriverProperty)~System.Printing.PrintDriver">
      <summary>Provides implicit conversion to a <see cref="T:System.Printing.PrintDriver" /> from a pointer to a <see cref="T:System.Printing.IndexedProperties.PrintDriverProperty" />.</summary>
      <returns>A <see cref="T:System.Printing.PrintDriver" />.</returns>
      <param name="attribRef">The pointer to a <see cref="T:System.Printing.IndexedProperties.PrintDriverProperty" />  that is converted.</param>
    </member>
    <member name="P:System.Printing.IndexedProperties.PrintDriverProperty.Value">
      <summary>Gets or sets the value of the property that the <see cref="T:System.Printing.IndexedProperties.PrintDriverProperty" /> represents. </summary>
      <returns>An <see cref="T:System.Object" /> that can be cast to a <see cref="T:System.Printing.PrintDriver" />. </returns>
    </member>
    <member name="T:System.Printing.IndexedProperties.PrintInt32Property">
      <summary>Represents an <see cref="T:System.Int32" /> property (and the value of the property) of a printing system hardware or software component. </summary>
    </member>
    <member name="M:System.Printing.IndexedProperties.PrintInt32Property.#ctor(System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.Printing.IndexedProperties.PrintInt32Property" /> class for the specified property.</summary>
      <param name="attributeName">The name of the <see cref="T:System.Int32" /> property that the <see cref="T:System.Printing.IndexedProperties.PrintInt32Property" /> represents.</param>
    </member>
    <member name="M:System.Printing.IndexedProperties.PrintInt32Property.#ctor(System.String,System.Object)">
      <summary>Initializes a new instance of the <see cref="T:System.Printing.IndexedProperties.PrintInt32Property" /> class for the specified attribute and gives it the specified value.</summary>
      <param name="attributeName">The name of the <see cref="T:System.Int32" /> property that the <see cref="T:System.Printing.IndexedProperties.PrintInt32Property" /> represents.</param>
      <param name="attributeValue">The value of <see cref="T:System.Object" /> the property that the <see cref="T:System.Printing.IndexedProperties.PrintInt32Property" /> represents.</param>
    </member>
    <member name="M:System.Printing.IndexedProperties.PrintInt32Property.op_Implicit(System.Printing.IndexedProperties.PrintInt32Property|System.Runtime.CompilerServices.IsImplicitlyDereferenced)~System.Int32">
      <summary>Provides implicit conversion from a <see cref="T:System.Printing.IndexedProperties.PrintInt32Property" /> to an <see cref="T:System.Int32" />. </summary>
      <returns>An <see cref="T:System.Int32" />.</returns>
      <param name="attribRef">The <see cref="T:System.Printing.IndexedProperties.PrintInt32Property" />  that is converted.</param>
    </member>
    <member name="M:System.Printing.IndexedProperties.PrintInt32Property.op_Implicit(System.Printing.IndexedProperties.PrintInt32Property)~System.Int32">
      <summary>Provides implicit conversion to an <see cref="T:System.Int32" /> from a pointer to a <see cref="T:System.Printing.IndexedProperties.PrintInt32Property" />.</summary>
      <returns>An <see cref="T:System.Int32" />.</returns>
      <param name="attribRef">A pointer to the <see cref="T:System.Printing.IndexedProperties.PrintInt32Property" />  that is converted.</param>
    </member>
    <member name="P:System.Printing.IndexedProperties.PrintInt32Property.Value">
      <summary>Gets or sets the value of the property that the <see cref="T:System.Printing.IndexedProperties.PrintInt32Property" /> represents.</summary>
      <returns>A boxed <see cref="T:System.Int32" />.</returns>
      <exception cref="T:System.InvalidOperationException">The property cannot be set to the value that the calling code provides.</exception>
    </member>
    <member name="T:System.Printing.IndexedProperties.PrintJobPriorityProperty">
      <summary>Represents a <see cref="T:System.Printing.PrintJobPriority" /> property (and its value) of a printing system hardware or software component. </summary>
    </member>
    <member name="M:System.Printing.IndexedProperties.PrintJobPriorityProperty.#ctor(System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.Printing.IndexedProperties.PrintJobPriorityProperty" /> class for the specified property.</summary>
      <param name="attributeName">The name of the <see cref="T:System.Printing.PrintJobPriority" /> property that the <see cref="T:System.Printing.IndexedProperties.PrintJobPriorityProperty" /> represents.</param>
    </member>
    <member name="M:System.Printing.IndexedProperties.PrintJobPriorityProperty.#ctor(System.String,System.Object)">
      <summary>Initializes a new instance of the <see cref="T:System.Printing.IndexedProperties.PrintJobPriorityProperty" /> class that has the specified value for the specified attribute. </summary>
      <param name="attributeName">The name of the <see cref="T:System.Printing.PrintJobPriority" /> property that the <see cref="T:System.Printing.IndexedProperties.PrintJobPriorityProperty" /> represents.</param>
      <param name="attributeValue">The value of the property that the <see cref="T:System.Printing.IndexedProperties.PrintJobPriorityProperty" /> represents.</param>
    </member>
    <member name="M:System.Printing.IndexedProperties.PrintJobPriorityProperty.op_Implicit(System.Printing.IndexedProperties.PrintJobPriorityProperty|System.Runtime.CompilerServices.IsImplicitlyDereferenced)~System.Printing.PrintJobPriority">
      <summary>Provides implicit conversion from a <see cref="T:System.Printing.IndexedProperties.PrintJobPriorityProperty" /> to a <see cref="T:System.Printing.PrintJobPriority" />.</summary>
      <returns>A <see cref="T:System.Printing.PrintJobPriority" /> value.</returns>
      <param name="attribRef">The <see cref="T:System.Printing.IndexedProperties.PrintJobPriorityProperty" />  that is converted.</param>
    </member>
    <member name="M:System.Printing.IndexedProperties.PrintJobPriorityProperty.op_Implicit(System.Printing.IndexedProperties.PrintJobPriorityProperty)~System.Printing.PrintJobPriority">
      <summary>Provides implicit conversion to a <see cref="T:System.Printing.PrintJobPriority" /> from a pointer to a <see cref="T:System.Printing.IndexedProperties.PrintJobPriorityProperty" />.</summary>
      <returns>A <see cref="T:System.Printing.PrintJobPriority" /> value.</returns>
      <param name="attribRef">A pointer to the <see cref="T:System.Printing.IndexedProperties.PrintBooleanProperty" />  that is converted.</param>
    </member>
    <member name="P:System.Printing.IndexedProperties.PrintJobPriorityProperty.Value">
      <summary>Gets or sets the value of the property that the <see cref="T:System.Printing.IndexedProperties.PrintJobPriorityProperty" /> represents.</summary>
      <returns>A boxed <see cref="T:System.Printing.PrintJobPriority" /> value.</returns>
    </member>
    <member name="T:System.Printing.IndexedProperties.PrintJobStatusProperty">
      <summary>Represents a <see cref="T:System.Printing.PrintJobStatus" /> property (and its value) of a printing system hardware or software component. </summary>
    </member>
    <member name="M:System.Printing.IndexedProperties.PrintJobStatusProperty.#ctor(System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.Printing.IndexedProperties.PrintJobStatusProperty" /> class for the specified property.</summary>
      <param name="attributeName">The name of the <see cref="T:System.Printing.PrintJobStatus" /> property that the <see cref="T:System.Printing.IndexedProperties.PrintJobStatusProperty" /> represents.</param>
    </member>
    <member name="M:System.Printing.IndexedProperties.PrintJobStatusProperty.#ctor(System.String,System.Object)">
      <summary>Initializes a new instance of the <see cref="T:System.Printing.IndexedProperties.PrintJobStatusProperty" /> class that has the specified value for the specified property. </summary>
      <param name="attributeName">The name of the <see cref="T:System.Printing.PrintJobStatus" /> property that the <see cref="T:System.Printing.IndexedProperties.PrintJobStatusProperty" /> represents.</param>
      <param name="attributeValue">The value of the property that the <see cref="T:System.Printing.IndexedProperties.PrintJobStatusProperty" /> represents.</param>
    </member>
    <member name="M:System.Printing.IndexedProperties.PrintJobStatusProperty.op_Implicit(System.Printing.IndexedProperties.PrintJobStatusProperty|System.Runtime.CompilerServices.IsImplicitlyDereferenced)~System.Printing.PrintJobStatus">
      <summary>Provides implicit conversion from a <see cref="T:System.Printing.IndexedProperties.PrintJobStatusProperty" /> to a <see cref="T:System.Printing.PrintJobStatus" /> value.</summary>
      <returns>A <see cref="T:System.Printing.PrintJobStatus" />.</returns>
      <param name="attribRef">The <see cref="T:System.Printing.IndexedProperties.PrintJobStatusProperty" />  that is converted.</param>
    </member>
    <member name="M:System.Printing.IndexedProperties.PrintJobStatusProperty.op_Implicit(System.Printing.IndexedProperties.PrintJobStatusProperty)~System.Printing.PrintJobStatus">
      <summary>Provides implicit conversion to a <see cref="T:System.Printing.PrintJobStatus" /> value from a pointer to a <see cref="T:System.Printing.IndexedProperties.PrintJobStatusProperty" />.</summary>
      <returns>A <see cref="T:System.Printing.PrintJobStatus" />.</returns>
      <param name="attribRef">A pointer to the <see cref="T:System.Printing.IndexedProperties.PrintJobStatusProperty" />  that is converted.</param>
    </member>
    <member name="P:System.Printing.IndexedProperties.PrintJobStatusProperty.Value">
      <summary>Gets or sets the value of the property that the <see cref="T:System.Printing.IndexedProperties.PrintJobStatusProperty" /> represents.</summary>
      <returns>A boxed <see cref="T:System.Printing.PrintJobStatus" /> value.</returns>
    </member>
    <member name="T:System.Printing.IndexedProperties.PrintPortProperty">
      <summary>Represents a <see cref="T:System.Printing.PrintPort" /> property (and its value) of a printing system hardware or software component. </summary>
    </member>
    <member name="M:System.Printing.IndexedProperties.PrintPortProperty.#ctor(System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.Printing.IndexedProperties.PrintPortProperty" /> class for the specified property.</summary>
      <param name="attributeName">The name of the <see cref="T:System.Printing.PrintPort" /> property that the <see cref="T:System.Printing.IndexedProperties.PrintPortProperty" /> represents.</param>
    </member>
    <member name="M:System.Printing.IndexedProperties.PrintPortProperty.#ctor(System.String,System.Object)">
      <summary>Initializes a new instance of the <see cref="T:System.Printing.IndexedProperties.PrintPortProperty" /> class that has the specified value for the specified property. </summary>
      <param name="attributeName">The name of the <see cref="T:System.Printing.PrintPort" /> property that the <see cref="T:System.Printing.IndexedProperties.PrintPortProperty" /> represents.</param>
      <param name="attributeValue">The value of the property that the <see cref="T:System.Printing.IndexedProperties.PrintPortProperty" /> represents.</param>
    </member>
    <member name="M:System.Printing.IndexedProperties.PrintPortProperty.op_Implicit(System.Printing.IndexedProperties.PrintPortProperty|System.Runtime.CompilerServices.IsImplicitlyDereferenced)~System.Printing.PrintPort">
      <summary>Provides implicit conversion from a <see cref="T:System.Printing.IndexedProperties.PrintPortProperty" /> to a <see cref="T:System.Printing.PrintPort" /> value.</summary>
      <returns>A <see cref="T:System.Printing.PrintPort" />.</returns>
      <param name="attribRef">The <see cref="T:System.Printing.IndexedProperties.PrintPortProperty" />  that is converted.</param>
    </member>
    <member name="M:System.Printing.IndexedProperties.PrintPortProperty.op_Implicit(System.Printing.IndexedProperties.PrintPortProperty)~System.Printing.PrintPort">
      <summary>Provides implicit conversion to a <see cref="T:System.Printing.PrintPort" /> value from a pointer to a <see cref="T:System.Printing.IndexedProperties.PrintPortProperty" />.</summary>
      <returns>A <see cref="T:System.Printing.PrintPort" />.</returns>
      <param name="attribRef">A pointer to the <see cref="T:System.Printing.IndexedProperties.PrintPortProperty" />  that is converted.</param>
    </member>
    <member name="P:System.Printing.IndexedProperties.PrintPortProperty.Value">
      <summary>Gets or sets the value of the property that the <see cref="T:System.Printing.IndexedProperties.PrintPortProperty" /> represents.</summary>
      <returns>An <see cref="T:System.Object" /> that can be cast to a <see cref="T:System.Printing.IndexedProperties.PrintPortProperty" />.</returns>
    </member>
    <member name="T:System.Printing.IndexedProperties.PrintProcessorProperty">
      <summary>Represents a <see cref="T:System.Printing.PrintProcessor" /> property (and its value) of a printing system hardware or software component. </summary>
    </member>
    <member name="M:System.Printing.IndexedProperties.PrintProcessorProperty.#ctor(System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.Printing.IndexedProperties.PrintProcessorProperty" /> class for the specified property.</summary>
      <param name="attributeName">The <see cref="T:System.Printing.IndexedProperties.PrintProcessorProperty" />  that is converted.</param>
    </member>
    <member name="M:System.Printing.IndexedProperties.PrintProcessorProperty.#ctor(System.String,System.Object)">
      <summary>Initializes a new instance of the <see cref="T:System.Printing.IndexedProperties.PrintProcessorProperty" /> class that has the specified value for the specified property. </summary>
      <param name="attributeName">The name of the <see cref="T:System.Printing.PrintProcessor" /> property that the <see cref="T:System.Printing.IndexedProperties.PrintProcessorProperty" /> represents.</param>
      <param name="attributeValue">The value of the property that the <see cref="T:System.Printing.IndexedProperties.PrintProcessorProperty" /> represents.</param>
    </member>
    <member name="M:System.Printing.IndexedProperties.PrintProcessorProperty.op_Implicit(System.Printing.IndexedProperties.PrintProcessorProperty|System.Runtime.CompilerServices.IsImplicitlyDereferenced)~System.Printing.PrintProcessor">
      <summary>Provides implicit conversion from a <see cref="T:System.Printing.IndexedProperties.PrintProcessorProperty" /> to a <see cref="T:System.Printing.PrintProcessor" /> value.</summary>
      <returns>A <see cref="T:System.Printing.PrintProcessor" />.</returns>
      <param name="attribRef">The <see cref="T:System.Printing.IndexedProperties.PrintProcessorProperty" />  that is converted.</param>
    </member>
    <member name="M:System.Printing.IndexedProperties.PrintProcessorProperty.op_Implicit(System.Printing.IndexedProperties.PrintProcessorProperty)~System.Printing.PrintProcessor">
      <summary>Provides implicit conversion to a <see cref="T:System.Printing.PrintProcessor" /> value from a pointer to a <see cref="T:System.Printing.IndexedProperties.PrintProcessorProperty" />.</summary>
      <returns>A <see cref="T:System.Printing.PrintProcessor" />.</returns>
      <param name="attribRef">A pointer to the <see cref="T:System.Printing.IndexedProperties.PrintProcessorProperty" />  that is converted.</param>
    </member>
    <member name="P:System.Printing.IndexedProperties.PrintProcessorProperty.Value">
      <summary>Gets or sets the value of the property that the <see cref="T:System.Printing.IndexedProperties.PrintProcessorProperty" /> represents.</summary>
      <returns>An <see cref="T:System.Object" /> that can be cast to a <see cref="T:System.Printing.PrintProcessor" />.</returns>
    </member>
    <member name="T:System.Printing.IndexedProperties.PrintProperty">
      <summary>Represents a property (and the value of the property) of a printing system hardware or software component.</summary>
    </member>
    <member name="M:System.Printing.IndexedProperties.PrintProperty.#ctor(System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.Printing.IndexedProperties.PrintProperty" /> class. </summary>
      <param name="attributeName">The name of the property that this object represents.</param>
    </member>
    <member name="M:System.Printing.IndexedProperties.PrintProperty.Dispose">
      <summary>Releases all resources that are being used by the <see cref="T:System.Printing.IndexedProperties.PrintProperty" />. </summary>
    </member>
    <member name="M:System.Printing.IndexedProperties.PrintProperty.Dispose(System.Boolean)">
      <summary>Releases the unmanaged resources that are being used by the <see cref="T:System.Printing.IndexedProperties.PrintProperty" /> and optionally releases the managed resource. </summary>
      <param name="disposing">true to release both managed resources and unmanaged resources; false to release only unmanaged resources. </param>
    </member>
    <member name="M:System.Printing.IndexedProperties.PrintProperty.Finalize">
      <summary>Enables a <see cref="T:System.Printing.IndexedProperties.PrintProperty" /> to attempt to free resources and to perform other cleanup operations before the <see cref="T:System.Printing.IndexedProperties.PrintProperty" /> is reclaimed by garbage collection.</summary>
    </member>
    <member name="M:System.Printing.IndexedProperties.PrintProperty.InternalDispose(System.Boolean)">
      <summary>Releases the unmanaged resources that are being used by the <see cref="T:System.Printing.IndexedProperties.PrintProperty" /> and optionally releases the managed resources. </summary>
      <param name="disposing">true to release both the managed resources and the unmanaged resources; false to release only the unmanaged resources. </param>
    </member>
    <member name="P:System.Printing.IndexedProperties.PrintProperty.IsDisposed">
      <summary>Gets or sets a value that indicates whether the object has been disposed.</summary>
      <returns>true if the object has been disposed; otherwise, false. The default is false.</returns>
    </member>
    <member name="P:System.Printing.IndexedProperties.PrintProperty.IsInitialized">
      <summary>Gets or sets a value that indicates whether the object has been initialized.</summary>
      <returns>true if the object has been initialized; otherwise, false. The default is false.</returns>
    </member>
    <member name="P:System.Printing.IndexedProperties.PrintProperty.Name">
      <summary>When overridden in a derived class, gets the name of the property that the object represents.</summary>
      <returns>A <see cref="T:System.String" /> that represents the name of the property.</returns>
    </member>
    <member name="M:System.Printing.IndexedProperties.PrintProperty.OnDeserialization(System.Object)">
      <summary>When overridden in a derived class, implements the <see cref="T:System.Runtime.Serialization.ISerializable" /> interface and raises the deserialization event when the deserialization is complete.</summary>
      <param name="sender">The source of the event. </param>
    </member>
    <member name="P:System.Printing.IndexedProperties.PrintProperty.Value">
      <summary>When overridden in a derived class, gets or sets the value of the property that the object represents. </summary>
    </member>
    <member name="T:System.Printing.IndexedProperties.PrintPropertyDictionary">
      <summary>Represents a collection of properties and values that are associated with an object in the <see cref="N:System.Printing" /> namespace.</summary>
    </member>
    <member name="M:System.Printing.IndexedProperties.PrintPropertyDictionary.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Printing.IndexedProperties.PrintPropertyDictionary" /> class. </summary>
    </member>
    <member name="M:System.Printing.IndexedProperties.PrintPropertyDictionary.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Initializes a new instance of the <see cref="T:System.Printing.IndexedProperties.PrintPropertyDictionary" /> class and provides it with the specified <see cref="T:System.Runtime.Serialization.SerializationInfo" /> and <see cref="T:System.Runtime.Serialization.StreamingContext" />. </summary>
      <param name="info">The data that is required to serialize or deserialize an object.</param>
      <param name="context">The context of the serialized stream, including the source and the destination.</param>
    </member>
    <member name="M:System.Printing.IndexedProperties.PrintPropertyDictionary.Add(System.Printing.IndexedProperties.PrintProperty)">
      <summary>Adds the specified object (of a class that is derived from <see cref="T:System.Printing.IndexedProperties.PrintProperty" />) into the dictionary.</summary>
      <param name="attributeValue">An object (of a class that is derived from <see cref="T:System.Printing.IndexedProperties.PrintProperty" />) that represents a property of a printing system hardware or software component.</param>
    </member>
    <member name="M:System.Printing.IndexedProperties.PrintPropertyDictionary.Dispose">
      <summary>Releases all the resources that are being used by the <see cref="T:System.Printing.IndexedProperties.PrintPropertyDictionary" />. </summary>
    </member>
    <member name="M:System.Printing.IndexedProperties.PrintPropertyDictionary.Dispose(System.Boolean)">
      <summary>Releases the unmanaged resources that are being used by the <see cref="T:System.Printing.IndexedProperties.PrintPropertyDictionary" /> and optionally releases the managed resources. </summary>
      <param name="disposing">true to release both the managed resources and the unmanaged resources; false to release only the unmanaged resources. </param>
    </member>
    <member name="M:System.Printing.IndexedProperties.PrintPropertyDictionary.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Populates a <see cref="T:System.Runtime.Serialization.SerializationInfo" /> with the data that is needed to serialize the <see cref="T:System.Printing.IndexedProperties.PrintPropertyDictionary" />.</summary>
      <param name="info">Stores all the data that is used to serialize the object.</param>
      <param name="context">Describes the context of the serialized stream, including the source and the destination.</param>
    </member>
    <member name="M:System.Printing.IndexedProperties.PrintPropertyDictionary.GetProperty(System.String)">
      <summary>Gets the object (of a class that is derived from <see cref="T:System.Printing.IndexedProperties.PrintProperty" />) that represents the specified property.</summary>
      <returns>An object of a class that is derived from the <see cref="T:System.Printing.IndexedProperties.PrintProperty" />.</returns>
      <param name="attribName">The name of the property that is represented by the <see cref="T:System.Printing.IndexedProperties.PrintProperty" />.</param>
    </member>
    <member name="M:System.Printing.IndexedProperties.PrintPropertyDictionary.OnDeserialization(System.Object)">
      <summary>Implements the <see cref="T:System.Runtime.Serialization.ISerializable" /> interface and raises the deserialization event when the deserialization is complete.</summary>
      <param name="sender">The source of the event. </param>
    </member>
    <member name="M:System.Printing.IndexedProperties.PrintPropertyDictionary.SetProperty(System.String,System.Printing.IndexedProperties.PrintProperty)">
      <summary>Sets the value of the specified attribute to an object of a class that is derived from <see cref="T:System.Printing.IndexedProperties.PrintProperty" />.</summary>
      <param name="attribName">The name of the attribute.</param>
      <param name="attribValue">An object of a type that is derived from <see cref="T:System.Printing.IndexedProperties.PrintProperty" />.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="attribName" /> is already in the dictionary and it already has the value <paramref name="attribValue" />.</exception>
    </member>
    <member name="T:System.Printing.IndexedProperties.PrintQueueAttributeProperty">
      <summary>Represents a <see cref="T:System.Printing.PrintQueueAttributes" /> property (and its value) of a printing system hardware or software component. </summary>
    </member>
    <member name="M:System.Printing.IndexedProperties.PrintQueueAttributeProperty.#ctor(System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.Printing.IndexedProperties.PrintQueueAttributeProperty" /> class for the specified property.</summary>
      <param name="attributeName">The name of the <see cref="T:System.Printing.PrintQueueAttributes" /> property that the <see cref="T:System.Printing.IndexedProperties.PrintQueueAttributeProperty" /> represents.</param>
    </member>
    <member name="M:System.Printing.IndexedProperties.PrintQueueAttributeProperty.#ctor(System.String,System.Object)">
      <summary>Initializes a new instance of the <see cref="T:System.Printing.IndexedProperties.PrintQueueAttributeProperty" /> class that has the specified value for the specified property. </summary>
      <param name="attributeName">The name of the <see cref="T:System.Printing.PrintQueueAttributes" /> property that the <see cref="T:System.Printing.IndexedProperties.PrintQueueAttributeProperty" /> represents.</param>
      <param name="attributeValue">The value of <see cref="T:System.Object" /> the property that the <see cref="T:System.Printing.IndexedProperties.PrintQueueAttributeProperty" /> represents.</param>
    </member>
    <member name="M:System.Printing.IndexedProperties.PrintQueueAttributeProperty.op_Implicit(System.Printing.IndexedProperties.PrintQueueAttributeProperty|System.Runtime.CompilerServices.IsImplicitlyDereferenced)~System.Printing.PrintQueueAttributes">
      <summary>Provides implicit conversion from a <see cref="T:System.Printing.IndexedProperties.PrintQueueAttributeProperty" /> to a <see cref="T:System.Printing.PrintQueueAttributes" /> value.</summary>
      <returns>A <see cref="T:System.Printing.PrintQueueAttributes" /> value.</returns>
      <param name="attributeRef">The <see cref="T:System.Printing.IndexedProperties.PrintQueueAttributeProperty" />  that is converted.</param>
    </member>
    <member name="M:System.Printing.IndexedProperties.PrintQueueAttributeProperty.op_Implicit(System.Printing.IndexedProperties.PrintQueueAttributeProperty)~System.Printing.PrintQueueAttributes">
      <summary>Provides implicit conversion to a <see cref="T:System.Printing.PrintQueueAttributes" /> value from a pointer to a <see cref="T:System.Printing.IndexedProperties.PrintQueueAttributeProperty" />.</summary>
      <returns>A <see cref="T:System.Printing.PrintQueueAttributes" /> value.</returns>
      <param name="attributeRef">A pointer to the <see cref="T:System.Printing.IndexedProperties.PrintQueueAttributeProperty" />  that is converted.</param>
    </member>
    <member name="P:System.Printing.IndexedProperties.PrintQueueAttributeProperty.Value">
      <summary>Gets or sets the value of the property that the <see cref="T:System.Printing.IndexedProperties.PrintQueueAttributeProperty" /> represents.</summary>
      <returns>A boxed <see cref="T:System.Printing.PrintQueueAttributes" /> value.</returns>
      <exception cref="T:System.InvalidOperationException">The property cannot be set by using the value that is provided by the calling code.</exception>
    </member>
    <member name="T:System.Printing.IndexedProperties.PrintQueueProperty">
      <summary>Represents a <see cref="T:System.Printing.PrintQueue" /> property (and its value) of a printing system hardware or software component. </summary>
    </member>
    <member name="M:System.Printing.IndexedProperties.PrintQueueProperty.#ctor(System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.Printing.IndexedProperties.PrintQueueProperty" /> class for the specified property.</summary>
      <param name="attributeName">The name of the <see cref="T:System.Printing.PrintQueue" /> property that the <see cref="T:System.Printing.IndexedProperties.PrintQueueProperty" /> represents.</param>
    </member>
    <member name="M:System.Printing.IndexedProperties.PrintQueueProperty.#ctor(System.String,System.Object)">
      <summary>Initializes a new instance of the <see cref="T:System.Printing.IndexedProperties.PrintQueueProperty" /> class that has the specified value for the specified property. </summary>
      <param name="attributeName">The name of the <see cref="T:System.Printing.PrintQueue" /> property that the <see cref="T:System.Printing.IndexedProperties.PrintQueueProperty" /> represents.</param>
      <param name="attributeValue">The value of the property that the <see cref="T:System.Printing.IndexedProperties.PrintQueueProperty" /> represents.</param>
    </member>
    <member name="M:System.Printing.IndexedProperties.PrintQueueProperty.op_Implicit(System.Printing.IndexedProperties.PrintQueueProperty|System.Runtime.CompilerServices.IsImplicitlyDereferenced)~System.Printing.PrintQueue">
      <summary>Provides implicit conversion from a <see cref="T:System.Printing.IndexedProperties.PrintQueueProperty" /> to a <see cref="T:System.Printing.PrintQueue" /> value.</summary>
      <returns>A <see cref="T:System.Printing.PrintQueue" />.</returns>
      <param name="attribRef">The <see cref="T:System.Printing.IndexedProperties.PrintQueueProperty" />  that is converted.</param>
    </member>
    <member name="M:System.Printing.IndexedProperties.PrintQueueProperty.op_Implicit(System.Printing.IndexedProperties.PrintQueueProperty)~System.Printing.PrintQueue">
      <summary>Provides implicit conversion to a <see cref="T:System.Printing.PrintQueue" /> value from a pointer to a <see cref="T:System.Printing.IndexedProperties.PrintQueueProperty" />.</summary>
      <returns>A <see cref="T:System.Printing.PrintQueue" />.</returns>
      <param name="attribRef">A pointer to the <see cref="T:System.Printing.IndexedProperties.PrintQueueProperty" />  that is converted.</param>
    </member>
    <member name="P:System.Printing.IndexedProperties.PrintQueueProperty.Value">
      <summary>Gets or sets the value of the property that the <see cref="T:System.Printing.IndexedProperties.PrintQueueProperty" /> represents.</summary>
      <returns>An <see cref="T:System.Object" /> that can be cast to a <see cref="T:System.Printing.PrintQueue" />.</returns>
    </member>
    <member name="T:System.Printing.IndexedProperties.PrintQueueStatusProperty">
      <summary>Represents a <see cref="T:System.Printing.PrintQueueStatus" /> property (and its value) of a printing system hardware or software component. </summary>
    </member>
    <member name="M:System.Printing.IndexedProperties.PrintQueueStatusProperty.#ctor(System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.Printing.IndexedProperties.PrintQueueStatusProperty" /> class for the specified property.</summary>
      <param name="attributeName">The name of the <see cref="T:System.Printing.PrintQueueStatus" /> property that the <see cref="T:System.Printing.IndexedProperties.PrintQueueStatusProperty" /> represents.</param>
    </member>
    <member name="M:System.Printing.IndexedProperties.PrintQueueStatusProperty.#ctor(System.String,System.Object)">
      <summary>Initializes a new instance of the <see cref="T:System.Printing.IndexedProperties.PrintQueueStatusProperty" /> class that has the specified value for the specified property. </summary>
      <param name="attributeName">The name of the <see cref="T:System.Printing.PrintQueueStatus" /> property that the <see cref="T:System.Printing.IndexedProperties.PrintQueueStatusProperty" /> represents.</param>
      <param name="attributeValue">The value of the property that the <see cref="T:System.Printing.IndexedProperties.PrintQueueStatusProperty" /> represents.</param>
    </member>
    <member name="M:System.Printing.IndexedProperties.PrintQueueStatusProperty.op_Implicit(System.Printing.IndexedProperties.PrintQueueStatusProperty|System.Runtime.CompilerServices.IsImplicitlyDereferenced)~System.Printing.PrintQueueStatus">
      <summary>Provides implicit conversion from a <see cref="T:System.Printing.IndexedProperties.PrintQueueStatusProperty" /> to a <see cref="T:System.Printing.PrintQueueStatus" /> value.</summary>
      <returns>A <see cref="T:System.Printing.PrintQueueStatus" /> value.</returns>
      <param name="attributeRef">The <see cref="T:System.Printing.IndexedProperties.PrintQueueStatusProperty" />  that is converted.</param>
    </member>
    <member name="M:System.Printing.IndexedProperties.PrintQueueStatusProperty.op_Implicit(System.Printing.IndexedProperties.PrintQueueStatusProperty)~System.Printing.PrintQueueStatus">
      <summary>Provides implicit conversion to a <see cref="T:System.Printing.PrintQueueStatus" /> value from a pointer to a <see cref="T:System.Printing.IndexedProperties.PrintQueueStatusProperty" />.</summary>
      <returns>A <see cref="T:System.Printing.PrintQueueStatus" /> value.</returns>
      <param name="attributeRef">A pointer to the <see cref="T:System.Printing.IndexedProperties.PrintQueueStatusProperty" />  that is converted.</param>
    </member>
    <member name="P:System.Printing.IndexedProperties.PrintQueueStatusProperty.Value">
      <summary>Gets or sets the value of the property that the <see cref="T:System.Printing.IndexedProperties.PrintQueueStatusProperty" /> represents.</summary>
      <returns>A boxed <see cref="T:System.Printing.PrintQueueStatus" />. </returns>
      <exception cref="T:System.InvalidOperationException">The property cannot be set by using the value that is provided by the calling code.</exception>
    </member>
    <member name="T:System.Printing.IndexedProperties.PrintServerLoggingProperty">
      <summary>Represents a <see cref="T:System.Printing.PrintServerEventLoggingTypes" /> property (and its value) of a printing system hardware or software component. </summary>
    </member>
    <member name="M:System.Printing.IndexedProperties.PrintServerLoggingProperty.#ctor(System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.Printing.IndexedProperties.PrintServerLoggingProperty" /> class for the specified property.</summary>
      <param name="attributeName">The name of the <see cref="T:System.Printing.PrintServerEventLoggingTypes" /> property that the <see cref="T:System.Printing.IndexedProperties.PrintServerLoggingProperty" /> represents.</param>
    </member>
    <member name="M:System.Printing.IndexedProperties.PrintServerLoggingProperty.#ctor(System.String,System.Object)">
      <summary>Initializes a new instance of the <see cref="T:System.Printing.IndexedProperties.PrintServerLoggingProperty" /> class that has the specified value for the specified property. </summary>
      <param name="attributeName">The name of the <see cref="T:System.Printing.PrintServerEventLoggingTypes" /> property that the <see cref="T:System.Printing.IndexedProperties.PrintServerLoggingProperty" /> represents.</param>
      <param name="attributeValue">The value of the property that the <see cref="T:System.Printing.IndexedProperties.PrintServerLoggingProperty" /> represents.</param>
    </member>
    <member name="M:System.Printing.IndexedProperties.PrintServerLoggingProperty.op_Implicit(System.Printing.IndexedProperties.PrintServerLoggingProperty|System.Runtime.CompilerServices.IsImplicitlyDereferenced)~System.Printing.PrintServerEventLoggingTypes">
      <summary>Provides implicit conversion from a <see cref="T:System.Printing.IndexedProperties.PrintServerLoggingProperty" /> (or from a pointer to such a property) to a <see cref="T:System.Printing.PrintServerEventLoggingTypes" /> value.</summary>
      <returns>A <see cref="T:System.Printing.PrintServerEventLoggingTypes" /> value.</returns>
      <param name="attribRef">The <see cref="T:System.Printing.IndexedProperties.PrintServerLoggingProperty" />  that is converted.</param>
    </member>
    <member name="M:System.Printing.IndexedProperties.PrintServerLoggingProperty.op_Implicit(System.Printing.IndexedProperties.PrintServerLoggingProperty)~System.Printing.PrintServerEventLoggingTypes">
      <summary>Provides implicit conversion to a <see cref="T:System.Printing.PrintServerEventLoggingTypes" /> value from a pointer to a <see cref="T:System.Printing.IndexedProperties.PrintServerLoggingProperty" />.</summary>
      <returns>A <see cref="T:System.Printing.PrintServerEventLoggingTypes" /> value.</returns>
      <param name="attribRef">A pointer to the <see cref="T:System.Printing.IndexedProperties.PrintServerLoggingProperty" />  that is converted.</param>
    </member>
    <member name="P:System.Printing.IndexedProperties.PrintServerLoggingProperty.Value">
      <summary>Gets or sets the value of the property that the <see cref="T:System.Printing.IndexedProperties.PrintServerLoggingProperty" /> represents.</summary>
      <returns>A boxed <see cref="T:System.Printing.PrintServerEventLoggingTypes" /> value.</returns>
    </member>
    <member name="T:System.Printing.IndexedProperties.PrintServerProperty">
      <summary>Represents a <see cref="T:System.Printing.PrintServer" /> property (and its value) of a printing system hardware or software component. </summary>
    </member>
    <member name="M:System.Printing.IndexedProperties.PrintServerProperty.#ctor(System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.Printing.IndexedProperties.PrintServerProperty" /> class for the specified property.</summary>
      <param name="attributeName">The name of the <see cref="T:System.Printing.PrintServer" /> property that the <see cref="T:System.Printing.IndexedProperties.PrintServerProperty" /> represents.</param>
    </member>
    <member name="M:System.Printing.IndexedProperties.PrintServerProperty.#ctor(System.String,System.Object)">
      <summary>Initializes a new instance of the <see cref="T:System.Printing.IndexedProperties.PrintServerProperty" /> class that has the specified value for the specified property.</summary>
      <param name="attributeName">The name of the <see cref="T:System.Printing.PrintServer" /> property that the <see cref="T:System.Printing.IndexedProperties.PrintServerProperty" /> represents.</param>
      <param name="attributeValue">The value of the property that the <see cref="T:System.Printing.IndexedProperties.PrintServerProperty" /> represents.</param>
    </member>
    <member name="M:System.Printing.IndexedProperties.PrintServerProperty.op_Implicit(System.Printing.IndexedProperties.PrintServerProperty|System.Runtime.CompilerServices.IsImplicitlyDereferenced)~System.Printing.PrintServer">
      <summary>Provides implicit conversion from a <see cref="T:System.Printing.IndexedProperties.PrintServerProperty" /> to a <see cref="T:System.Printing.PrintServer" /> value.</summary>
      <returns>A <see cref="T:System.Printing.PrintServer" />.</returns>
      <param name="attribRef">The <see cref="T:System.Printing.IndexedProperties.PrintServerProperty" />  that is converted.</param>
    </member>
    <member name="M:System.Printing.IndexedProperties.PrintServerProperty.op_Implicit(System.Printing.IndexedProperties.PrintServerProperty)~System.Printing.PrintServer">
      <summary>Provides implicit conversion to a <see cref="T:System.Printing.PrintServer" /> value from a pointer to a <see cref="T:System.Printing.IndexedProperties.PrintServerProperty" />.</summary>
      <returns>A <see cref="T:System.Printing.PrintServer" />.</returns>
      <param name="attribRef">A pointer to the <see cref="T:System.Printing.IndexedProperties.PrintServerProperty" />  that is converted.</param>
    </member>
    <member name="P:System.Printing.IndexedProperties.PrintServerProperty.Value">
      <summary>Gets or sets the value of the property that the <see cref="T:System.Printing.IndexedProperties.PrintServerProperty" /> represents.</summary>
      <returns>A <see cref="T:System.Object" /> that can be cast as a <see cref="T:System.Printing.PrintServer" />.</returns>
      <exception cref="T:System.InvalidOperationException">The property is not internally initialized.</exception>
    </member>
    <member name="T:System.Printing.IndexedProperties.PrintStreamProperty">
      <summary>Represents a <see cref="T:System.IO.Stream" /> property (and its value) of a printing system hardware or software component. </summary>
    </member>
    <member name="M:System.Printing.IndexedProperties.PrintStreamProperty.#ctor(System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.Printing.IndexedProperties.PrintStreamProperty" /> class for the specified property.</summary>
      <param name="attributeName">The name of the <see cref="T:System.IO.Stream" /> property that the <see cref="T:System.Printing.IndexedProperties.PrintStreamProperty" /> represents.</param>
    </member>
    <member name="M:System.Printing.IndexedProperties.PrintStreamProperty.#ctor(System.String,System.Object)">
      <summary>Initializes a new instance of the <see cref="T:System.Printing.IndexedProperties.PrintStreamProperty" /> class that has the specified value for the specified property. </summary>
      <param name="attributeName">The name of the <see cref="T:System.IO.Stream" /> property that the <see cref="T:System.Printing.IndexedProperties.PrintStreamProperty" /> represents.</param>
      <param name="attributeValue">The value of the property that the <see cref="T:System.Printing.IndexedProperties.PrintStreamProperty" /> represents.</param>
    </member>
    <member name="M:System.Printing.IndexedProperties.PrintStreamProperty.op_Implicit(System.Printing.IndexedProperties.PrintStreamProperty|System.Runtime.CompilerServices.IsImplicitlyDereferenced)~System.IO.Stream">
      <summary>Provides implicit conversion from a <see cref="T:System.Printing.IndexedProperties.PrintStreamProperty" /> to a <see cref="T:System.IO.Stream" /> value.</summary>
      <returns>A <see cref="T:System.IO.Stream" />.</returns>
      <param name="attributeRef">The <see cref="T:System.Printing.IndexedProperties.PrintStreamProperty" />  that is converted.</param>
    </member>
    <member name="M:System.Printing.IndexedProperties.PrintStreamProperty.op_Implicit(System.Printing.IndexedProperties.PrintStreamProperty)~System.IO.Stream">
      <summary>Provides implicit conversion to a <see cref="T:System.IO.Stream" /> value from a pointer to a <see cref="T:System.Printing.IndexedProperties.PrintStreamProperty" />. </summary>
      <returns>A <see cref="T:System.IO.Stream" />.</returns>
      <param name="attributeRef">A pointer to the <see cref="T:System.Printing.IndexedProperties.PrintStreamProperty" />  that is converted.</param>
    </member>
    <member name="P:System.Printing.IndexedProperties.PrintStreamProperty.Value">
      <summary>Gets or sets the value of the property that the <see cref="T:System.Printing.IndexedProperties.PrintStreamProperty" /> represents.</summary>
      <returns>An <see cref="T:System.Object" /> that can be cast as a <see cref="T:System.IO.Stream" />.</returns>
    </member>
    <member name="T:System.Printing.IndexedProperties.PrintStringProperty">
      <summary>Represents a <see cref="T:System.String" /> property (and its value) of a printing system hardware or software component. </summary>
    </member>
    <member name="M:System.Printing.IndexedProperties.PrintStringProperty.#ctor(System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.Printing.IndexedProperties.PrintStringProperty" /> class for the specified property.</summary>
      <param name="attributeName">The name of the <see cref="T:System.String" /> property that the <see cref="T:System.Printing.IndexedProperties.PrintStringProperty" /> represents.</param>
    </member>
    <member name="M:System.Printing.IndexedProperties.PrintStringProperty.#ctor(System.String,System.Object)">
      <summary>Initializes a new instance of the <see cref="T:System.Printing.IndexedProperties.PrintStringProperty" /> class that has the specified value for the specified property.</summary>
      <param name="attributeName">The name of the <see cref="T:System.String" /> property that the <see cref="T:System.Printing.IndexedProperties.PrintStringProperty" /> represents.</param>
      <param name="attributeValue">The value of the property that the <see cref="T:System.Printing.IndexedProperties.PrintStringProperty" /> represents.</param>
    </member>
    <member name="M:System.Printing.IndexedProperties.PrintStringProperty.op_Implicit(System.Printing.IndexedProperties.PrintStringProperty|System.Runtime.CompilerServices.IsImplicitlyDereferenced)~System.String">
      <summary>Provides implicit conversion from a <see cref="T:System.Printing.IndexedProperties.PrintStringProperty" /> to a <see cref="T:System.String" /> value.</summary>
      <returns>A <see cref="T:System.String" />.</returns>
      <param name="attributeRef">The <see cref="T:System.Printing.IndexedProperties.PrintStringProperty" />  that is converted.</param>
    </member>
    <member name="M:System.Printing.IndexedProperties.PrintStringProperty.op_Implicit(System.Printing.IndexedProperties.PrintStringProperty)~System.String">
      <summary>Provides implicit conversion to a <see cref="T:System.String" /> value from a pointer to a <see cref="T:System.Printing.IndexedProperties.PrintStringProperty" />.</summary>
      <returns>A <see cref="T:System.String" />.</returns>
      <param name="attributeRef">A pointer to the <see cref="T:System.Printing.IndexedProperties.PrintStringProperty" />  that is converted.</param>
    </member>
    <member name="P:System.Printing.IndexedProperties.PrintStringProperty.Value">
      <summary>Gets or sets the value of the property that the <see cref="T:System.Printing.IndexedProperties.PrintStringProperty" /> represents.</summary>
      <returns>A boxed <see cref="T:System.String" />.</returns>
    </member>
    <member name="T:System.Printing.IndexedProperties.PrintSystemTypeProperty">
      <summary>Represents a <see cref="T:System.Type" /> property (and its value) of a printing system hardware or software component. </summary>
    </member>
    <member name="M:System.Printing.IndexedProperties.PrintSystemTypeProperty.#ctor(System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.Printing.IndexedProperties.PrintSystemTypeProperty" /> class that has the specified property name.</summary>
      <param name="attributeName">The name of the property that the <see cref="T:System.Printing.IndexedProperties.PrintSystemTypeProperty" /> represents.</param>
    </member>
    <member name="M:System.Printing.IndexedProperties.PrintSystemTypeProperty.#ctor(System.String,System.Object)">
      <summary>Initializes a new instance of the <see cref="T:System.Printing.IndexedProperties.PrintSystemTypeProperty" /> class that has the specified property name and value.</summary>
      <param name="attributeName">The name of the property that the <see cref="T:System.Printing.IndexedProperties.PrintSystemTypeProperty" /> represents.</param>
      <param name="attributeValue">The value of the property that the <see cref="T:System.Printing.IndexedProperties.PrintSystemTypeProperty" /> represents.</param>
    </member>
    <member name="M:System.Printing.IndexedProperties.PrintSystemTypeProperty.op_Implicit(System.Printing.IndexedProperties.PrintSystemTypeProperty|System.Runtime.CompilerServices.IsImplicitlyDereferenced)~System.Type">
      <summary>Provides implicit conversion from a <see cref="T:System.Printing.IndexedProperties.PrintSystemTypeProperty" /> to a <see cref="T:System.Type" /> value.</summary>
      <returns>A <see cref="T:System.Type" />.</returns>
      <param name="attribRef">The <see cref="T:System.Printing.IndexedProperties.PrintSystemTypeProperty" />  that is converted.</param>
    </member>
    <member name="M:System.Printing.IndexedProperties.PrintSystemTypeProperty.op_Implicit(System.Printing.IndexedProperties.PrintSystemTypeProperty)~System.Type">
      <summary>Provides implicit conversion to a <see cref="T:System.Type" /> value from a pointer to a <see cref="T:System.Printing.IndexedProperties.PrintSystemTypeProperty" />.</summary>
      <returns>A <see cref="T:System.Type" />.</returns>
      <param name="attribRef">A pointer to the <see cref="T:System.Printing.IndexedProperties.PrintSystemTypeProperty" />  that is converted.</param>
    </member>
    <member name="P:System.Printing.IndexedProperties.PrintSystemTypeProperty.Value">
      <summary>Gets or sets the value of the property that the <see cref="T:System.Printing.IndexedProperties.PrintSystemTypeProperty" /> represents.</summary>
      <returns>An <see cref="T:System.Object" />. </returns>
    </member>
    <member name="T:System.Printing.IndexedProperties.PrintThreadPriorityProperty">
      <summary>Represents a <see cref="T:System.Threading.ThreadPriority" /> property (and its value) of a printing system hardware or software component. </summary>
    </member>
    <member name="M:System.Printing.IndexedProperties.PrintThreadPriorityProperty.#ctor(System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.Printing.IndexedProperties.PrintThreadPriorityProperty" /> class for the specified property.</summary>
      <param name="attributeName">The name of the <see cref="T:System.Threading.ThreadPriority" /> property that the <see cref="T:System.Printing.IndexedProperties.PrintThreadPriorityProperty" /> represents.</param>
    </member>
    <member name="M:System.Printing.IndexedProperties.PrintThreadPriorityProperty.#ctor(System.String,System.Object)">
      <summary>Initializes a new instance of the <see cref="T:System.Printing.IndexedProperties.PrintThreadPriorityProperty" /> class that has the specified value for the specified property. </summary>
      <param name="attributeName">The name of the <see cref="T:System.Threading.ThreadPriority" /> property that the <see cref="T:System.Printing.IndexedProperties.PrintThreadPriorityProperty" /> represents.</param>
      <param name="attributeValue">The value of the property that the <see cref="T:System.Printing.IndexedProperties.PrintThreadPriorityProperty" /> represents.</param>
    </member>
    <member name="M:System.Printing.IndexedProperties.PrintThreadPriorityProperty.op_Implicit(System.Printing.IndexedProperties.PrintThreadPriorityProperty|System.Runtime.CompilerServices.IsImplicitlyDereferenced)~System.Threading.ThreadPriority">
      <summary>Provides implicit conversion from a <see cref="T:System.Printing.IndexedProperties.PrintThreadPriorityProperty" /> to a <see cref="T:System.Threading.ThreadPriority" /> value.</summary>
      <returns>A <see cref="T:System.Threading.ThreadPriority" /> value.</returns>
      <param name="attribRef">The <see cref="T:System.Printing.IndexedProperties.PrintThreadPriorityProperty" />  that is converted.</param>
    </member>
    <member name="M:System.Printing.IndexedProperties.PrintThreadPriorityProperty.op_Implicit(System.Printing.IndexedProperties.PrintThreadPriorityProperty)~System.Threading.ThreadPriority">
      <summary>Provides implicit conversion to a <see cref="T:System.Threading.ThreadPriority" /> value from a pointer to a <see cref="T:System.Printing.IndexedProperties.PrintThreadPriorityProperty" />.</summary>
      <returns>A <see cref="T:System.Threading.ThreadPriority" /> value.</returns>
      <param name="attribRef">A pointer to the <see cref="T:System.Printing.IndexedProperties.PrintThreadPriorityProperty" />  that is converted.</param>
    </member>
    <member name="P:System.Printing.IndexedProperties.PrintThreadPriorityProperty.Value">
      <summary>Gets or sets the value of the property that the <see cref="T:System.Printing.IndexedProperties.PrintThreadPriorityProperty" /> represents.</summary>
      <returns>A boxed <see cref="T:System.Threading.ThreadPriority" /> value.</returns>
    </member>
    <member name="T:System.Printing.IndexedProperties.PrintTicketProperty">
      <summary>Represents a <see cref="T:System.Printing.PrintTicket" /> property (and its value) of a printing system hardware or software component. </summary>
    </member>
    <member name="M:System.Printing.IndexedProperties.PrintTicketProperty.#ctor(System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.Printing.IndexedProperties.PrintTicketProperty" /> class for the specified property.</summary>
      <param name="attributeName">The name of the <see cref="T:System.Printing.PrintTicket" /> property that the <see cref="T:System.Printing.IndexedProperties.PrintTicketProperty" /> represents.</param>
    </member>
    <member name="M:System.Printing.IndexedProperties.PrintTicketProperty.#ctor(System.String,System.Object)">
      <summary>Initializes a new instance of the <see cref="T:System.Printing.IndexedProperties.PrintTicketProperty" /> class that has the specified value for the specified property. </summary>
      <param name="attributeName">The name of the <see cref="T:System.Printing.PrintTicket" /> property that the <see cref="T:System.Printing.IndexedProperties.PrintTicketProperty" /> represents.</param>
      <param name="attributeValue">The value of the property that the <see cref="T:System.Printing.IndexedProperties.PrintTicketProperty" /> represents.</param>
    </member>
    <member name="M:System.Printing.IndexedProperties.PrintTicketProperty.op_Implicit(System.Printing.IndexedProperties.PrintTicketProperty|System.Runtime.CompilerServices.IsImplicitlyDereferenced)~System.Printing.PrintTicket">
      <summary>Provides implicit conversion from a <see cref="T:System.Printing.IndexedProperties.PrintTicketProperty" /> to a <see cref="T:System.Printing.PrintTicket" /> value.</summary>
      <returns>A <see cref="T:System.Printing.PrintTicket" />.</returns>
      <param name="attribRef">The <see cref="T:System.Printing.IndexedProperties.PrintTicketProperty" />  that is converted.</param>
    </member>
    <member name="M:System.Printing.IndexedProperties.PrintTicketProperty.op_Implicit(System.Printing.IndexedProperties.PrintTicketProperty)~System.Printing.PrintTicket">
      <summary>Provides implicit conversion to a <see cref="T:System.Printing.PrintTicket" /> value from a pointer to a <see cref="T:System.Printing.IndexedProperties.PrintTicketProperty" />.</summary>
      <returns>A <see cref="T:System.Printing.PrintTicket" />.</returns>
      <param name="attribRef">A pointer to the <see cref="T:System.Printing.IndexedProperties.PrintTicketProperty" />  that is converted.</param>
    </member>
    <member name="P:System.Printing.IndexedProperties.PrintTicketProperty.Value">
      <summary>Gets or sets the value of the property that the <see cref="T:System.Printing.IndexedProperties.PrintTicketProperty" /> represents.</summary>
      <returns>An <see cref="T:System.Object" /> that can be cast to a <see cref="T:System.Printing.PrintTicket" />.</returns>
    </member>
    <member name="T:System.Windows.Xps.VisualsToXpsDocument">
      <summary>Provides methods for writing <see cref="T:System.Windows.Media.Visual" /> objects to XML Paper Specification (XPS) documents or to a print queue in batch mode. </summary>
    </member>
    <member name="M:System.Windows.Xps.VisualsToXpsDocument.BeginBatchWrite">
      <summary>Indicates that write operations can begin.</summary>
    </member>
    <member name="M:System.Windows.Xps.VisualsToXpsDocument.Cancel">
      <summary>Cancels a synchronous writing operation.</summary>
      <exception cref="T:System.Windows.Xps.XpsWriterException">The state of the <see cref="T:System.Windows.Xps.VisualsToXpsDocument" /> is not compatible with a <see cref="M:System.Windows.Xps.VisualsToXpsDocument.Cancel" /> operation.</exception>
    </member>
    <member name="M:System.Windows.Xps.VisualsToXpsDocument.CancelAsync">
      <summary>Cancels an asynchronous writing operation.</summary>
      <exception cref="T:System.Windows.Xps.XpsWriterException">The state of the <see cref="T:System.Windows.Xps.VisualsToXpsDocument" /> is not compatible with a <see cref="M:System.Windows.Xps.VisualsToXpsDocument.CancelAsync" /> operation.</exception>
    </member>
    <member name="M:System.Windows.Xps.VisualsToXpsDocument.EndBatchWrite">
      <summary>Indicates that write operations must end.</summary>
    </member>
    <member name="M:System.Windows.Xps.VisualsToXpsDocument.Write(System.Windows.Media.Visual)">
      <summary>Writes a <see cref="T:System.Windows.Media.Visual" /> synchronously to an <see cref="T:System.Windows.Xps.Packaging.XpsDocument" /> or a <see cref="T:System.Printing.PrintQueue" />.</summary>
      <param name="visual">The <see cref="T:System.Windows.Media.Visual" /> that is written.</param>
    </member>
    <member name="M:System.Windows.Xps.VisualsToXpsDocument.Write(System.Windows.Media.Visual,System.Printing.PrintTicket)">
      <summary>Writes a <see cref="T:System.Windows.Media.Visual" /> synchronously to an <see cref="T:System.Windows.Xps.Packaging.XpsDocument" /> or a <see cref="T:System.Printing.PrintQueue" /> and includes a <see cref="T:System.Printing.PrintTicket" />.</summary>
      <param name="visual">The <see cref="T:System.Windows.Media.Visual" /> that is written.</param>
      <param name="printTicket">A <see cref="T:System.Printing.PrintTicket" /> that represents the default printing preferences for the document.</param>
    </member>
    <member name="M:System.Windows.Xps.VisualsToXpsDocument.WriteAsync(System.Windows.Media.Visual)">
      <summary>Writes a <see cref="T:System.Windows.Media.Visual" /> asynchronously to an <see cref="T:System.Windows.Xps.Packaging.XpsDocument" /> or a <see cref="T:System.Printing.PrintQueue" />.</summary>
      <param name="visual">The <see cref="T:System.Windows.Media.Visual" /> that is written.</param>
    </member>
    <member name="M:System.Windows.Xps.VisualsToXpsDocument.WriteAsync(System.Windows.Media.Visual,System.Object)">
      <summary>Writes a <see cref="T:System.Windows.Media.Visual" /> asynchronously to an <see cref="T:System.Windows.Xps.Packaging.XpsDocument" /> or a <see cref="T:System.Printing.PrintQueue" /> and includes additional information that the caller wants to pass to an event handler. </summary>
      <param name="visual">The <see cref="T:System.Windows.Media.Visual" /> that is written.</param>
      <param name="userSuppliedState">An object that contains data that the caller wants to pass to the <see cref="E:System.Windows.Xps.XpsDocumentWriter.WritingCompleted" /> event handler. </param>
    </member>
    <member name="M:System.Windows.Xps.VisualsToXpsDocument.WriteAsync(System.Windows.Media.Visual,System.Printing.PrintTicket)">
      <summary>Writes a <see cref="T:System.Windows.Media.Visual" /> asynchronously to an <see cref="T:System.Windows.Xps.Packaging.XpsDocument" /> or a <see cref="T:System.Printing.PrintQueue" /> and includes a <see cref="T:System.Printing.PrintTicket" />.</summary>
      <param name="visual">The <see cref="T:System.Windows.Media.Visual" /> that is written.</param>
      <param name="printTicket">A <see cref="T:System.Printing.PrintTicket" /> that represents the default printing preferences for the document.</param>
    </member>
    <member name="M:System.Windows.Xps.VisualsToXpsDocument.WriteAsync(System.Windows.Media.Visual,System.Printing.PrintTicket,System.Object)">
      <summary>Writes a <see cref="T:System.Windows.Media.Visual" /> asynchronously to an <see cref="T:System.Windows.Xps.Packaging.XpsDocument" /> or a <see cref="T:System.Printing.PrintQueue" />; also includes a <see cref="T:System.Printing.PrintTicket" /> and any additional information that the caller wants to pass to an event handler.</summary>
      <param name="visual">The <see cref="T:System.Windows.Media.Visual" /> that is written.</param>
      <param name="printTicket">A <see cref="T:System.Printing.PrintTicket" /> that represents the default printing preferences for the document.</param>
      <param name="userSuppliedState">An object that contains the data that the caller wants to pass to the <see cref="E:System.Windows.Xps.XpsDocumentWriter.WritingCompleted" /> event handler. </param>
    </member>
    <member name="T:System.Windows.Xps.XpsDocumentNotificationLevel">
      <summary>Indicates whether a write operation to an XML Paper Specification (XPS) document or a print queue sends back page-by-page and document-by-document progress notifications.</summary>
    </member>
    <member name="F:System.Windows.Xps.XpsDocumentNotificationLevel.ReceiveNotificationEnabled">
      <summary>Progress notifications are enabled.</summary>
    </member>
    <member name="F:System.Windows.Xps.XpsDocumentNotificationLevel.None">
      <summary>The notification status is not indicated.</summary>
    </member>
    <member name="F:System.Windows.Xps.XpsDocumentNotificationLevel.ReceiveNotificationDisabled">
      <summary>Progress notifications are disabled.</summary>
    </member>
    <member name="T:System.Windows.Xps.XpsDocumentWriter">
      <summary>Provides methods to write to an XPS document or print queue.  </summary>
    </member>
    <member name="E:System.Windows.Xps.XpsDocumentWriter._WritingCancelled">
      <summary>Occurs when a <see cref="Overload:System.Windows.Xps.XpsDocumentWriter.Write" /> or <see cref="Overload:System.Windows.Xps.XpsDocumentWriter.WriteAsync" /> operation is canceled.</summary>
    </member>
    <member name="E:System.Windows.Xps.XpsDocumentWriter._WritingCompleted">
      <summary>Occurs when a write operation finishes.</summary>
    </member>
    <member name="E:System.Windows.Xps.XpsDocumentWriter._WritingProgressChanged">
      <summary>Occurs when the <see cref="T:System.Windows.Xps.XpsDocumentWriter" /> updates its progress.</summary>
    </member>
    <member name="M:System.Windows.Xps.XpsDocumentWriter.CancelAsync">
      <summary>Cancels the current <see cref="Overload:System.Windows.Xps.XpsDocumentWriter.WriteAsync" /> operation.</summary>
      <exception cref="T:System.Windows.Xps.XpsWriterException">No asynchronous write operation is in progress.</exception>
    </member>
    <member name="M:System.Windows.Xps.XpsDocumentWriter.CreateVisualsCollator">
      <summary>Returns a <see cref="T:System.Windows.Xps.VisualsToXpsDocument" /> that can write <see cref="T:System.Windows.Media.Visual" /> objects to a document or print queue.</summary>
      <returns>The new <see cref="T:System.Windows.Xps.VisualsToXpsDocument" />. </returns>
    </member>
    <member name="M:System.Windows.Xps.XpsDocumentWriter.CreateVisualsCollator(System.Printing.PrintTicket,System.Printing.PrintTicket)">
      <summary>Returns a <see cref="T:System.Windows.Xps.VisualsToXpsDocument" /> that can write <see cref="T:System.Windows.Media.Visual" /> objects with <see cref="T:System.Printing.PrintTicket" /> settings to an XPS document or print queue.</summary>
      <returns>The new <see cref="T:System.Windows.Xps.VisualsToXpsDocument" /> that writes <see cref="T:System.Windows.Media.Visual" /> elements with <see cref="T:System.Printing.PrintTicket" /> settings to the <see cref="T:System.Windows.Xps.Packaging.XpsDocument" />.</returns>
      <param name="documentSequencePrintTicket">A <see cref="T:System.Printing.PrintTicket" /> that specifies the default printing preferences for the document sequence.</param>
      <param name="documentPrintTicket">A <see cref="T:System.Printing.PrintTicket" /> that represents the default printing preferences for each document.</param>
    </member>
    <member name="M:System.Windows.Xps.XpsDocumentWriter.Write(System.String)">
      <summary>Writes synchronously a specified XPS document to the target <see cref="T:System.Windows.Xps.Packaging.XpsDocument" /> or <see cref="T:System.Printing.PrintQueue" />.</summary>
      <param name="documentPath">The path of the source document.</param>
    </member>
    <member name="M:System.Windows.Xps.XpsDocumentWriter.Write(System.String,System.Windows.Xps.XpsDocumentNotificationLevel)">
      <summary>Writes synchronously a specified XPS document to the target <see cref="T:System.Windows.Xps.Packaging.XpsDocument" /> or <see cref="T:System.Printing.PrintQueue" />.</summary>
      <param name="documentPath">The path of the source document.</param>
      <param name="notificationLevel">An indication of whether notification is enabled.</param>
    </member>
    <member name="M:System.Windows.Xps.XpsDocumentWriter.Write(System.Windows.Documents.DocumentPaginator)">
      <summary>Writes synchronously paginated content from a specified <see cref="T:System.Windows.Documents.DocumentPaginator" /> to the target <see cref="T:System.Windows.Xps.Packaging.XpsDocument" /> or <see cref="T:System.Printing.PrintQueue" />.</summary>
      <param name="documentPaginator">An object that contains a pointer to unpaginated source material and also contains methods for paginating the material.</param>
    </member>
    <member name="M:System.Windows.Xps.XpsDocumentWriter.Write(System.Windows.Documents.DocumentPaginator,System.Printing.PrintTicket)">
      <summary>Writes synchronously paginated content from a specified <see cref="T:System.Windows.Documents.DocumentPaginator" /> together with a <see cref="T:System.Printing.PrintTicket" /> to the target <see cref="T:System.Windows.Xps.Packaging.XpsDocument" /> or <see cref="T:System.Printing.PrintQueue" />.</summary>
      <param name="documentPaginator">An object that contains a pointer to unpaginated source material and also contains methods for paginating the material.</param>
      <param name="printTicket">A <see cref="T:System.Printing.PrintTicket" /> that represents the default printing preferences for material.</param>
    </member>
    <member name="M:System.Windows.Xps.XpsDocumentWriter.Write(System.Windows.Documents.FixedDocument)">
      <summary>Writes synchronously a specified <see cref="T:System.Windows.Documents.FixedDocument" /> to the target <see cref="T:System.Windows.Xps.Packaging.XpsDocument" /> or <see cref="T:System.Printing.PrintQueue" />.</summary>
      <param name="fixedDocument">A document that is written to the <see cref="T:System.Windows.Xps.Packaging.XpsDocument" />.</param>
    </member>
    <member name="M:System.Windows.Xps.XpsDocumentWriter.Write(System.Windows.Documents.FixedDocument,System.Printing.PrintTicket)">
      <summary>Writes synchronously a <see cref="T:System.Windows.Documents.FixedDocument" /> together with a <see cref="T:System.Printing.PrintTicket" /> to the target <see cref="T:System.Windows.Xps.Packaging.XpsDocument" /> or <see cref="T:System.Printing.PrintQueue" />.</summary>
      <param name="fixedDocument">The document that is written.</param>
      <param name="printTicket">A <see cref="T:System.Printing.PrintTicket" /> that represents the default printing preferences for the document.</param>
    </member>
    <member name="M:System.Windows.Xps.XpsDocumentWriter.Write(System.Windows.Documents.FixedDocumentSequence)">
      <summary>Writes synchronously a specified <see cref="T:System.Windows.Documents.FixedDocumentSequence" /> to the target <see cref="T:System.Windows.Xps.Packaging.XpsDocument" /> or <see cref="T:System.Printing.PrintQueue" />.</summary>
      <param name="fixedDocumentSequence">A set of documents that is written to the <see cref="T:System.Windows.Xps.Packaging.XpsDocument" />.</param>
    </member>
    <member name="M:System.Windows.Xps.XpsDocumentWriter.Write(System.Windows.Documents.FixedDocumentSequence,System.Printing.PrintTicket)">
      <summary>Writes synchronously a specified <see cref="T:System.Windows.Documents.FixedDocumentSequence" /> together with a <see cref="T:System.Printing.PrintTicket" /> to the target <see cref="T:System.Windows.Xps.Packaging.XpsDocument" /> or <see cref="T:System.Printing.PrintQueue" />.</summary>
      <param name="fixedDocumentSequence">The set of documents that are written.</param>
      <param name="printTicket">A <see cref="T:System.Printing.PrintTicket" /> that represents the default printing preferences for the set of documents.</param>
    </member>
    <member name="M:System.Windows.Xps.XpsDocumentWriter.Write(System.Windows.Documents.FixedPage)">
      <summary>Writes synchronously a specified <see cref="T:System.Windows.Documents.FixedPage" /> to the target <see cref="T:System.Windows.Xps.Packaging.XpsDocument" /> or <see cref="T:System.Printing.PrintQueue" />.</summary>
      <param name="fixedPage">A page that is written to the <see cref="T:System.Windows.Xps.Packaging.XpsDocument" />.</param>
    </member>
    <member name="M:System.Windows.Xps.XpsDocumentWriter.Write(System.Windows.Documents.FixedPage,System.Printing.PrintTicket)">
      <summary>Writes synchronously a specified <see cref="T:System.Windows.Documents.FixedPage" /> together with a <see cref="T:System.Printing.PrintTicket" /> to the target <see cref="T:System.Windows.Xps.Packaging.XpsDocument" /> or <see cref="T:System.Printing.PrintQueue" />.</summary>
      <param name="fixedPage">The page that is written.</param>
      <param name="printTicket">A <see cref="T:System.Printing.PrintTicket" /> that represents the default printing preferences for the page.</param>
    </member>
    <member name="M:System.Windows.Xps.XpsDocumentWriter.Write(System.Windows.Media.Visual)">
      <summary>Writes synchronously a specified <see cref="T:System.Windows.Media.Visual" /> to the target <see cref="T:System.Windows.Xps.Packaging.XpsDocument" /> or <see cref="T:System.Printing.PrintQueue" />.</summary>
      <param name="visual">The <see cref="T:System.Windows.Media.Visual" /> that is written.</param>
    </member>
    <member name="M:System.Windows.Xps.XpsDocumentWriter.Write(System.Windows.Media.Visual,System.Printing.PrintTicket)">
      <summary>Writes synchronously a specified <see cref="T:System.Windows.Media.Visual" /> together with a <see cref="T:System.Printing.PrintTicket" /> to the target <see cref="T:System.Windows.Xps.Packaging.XpsDocument" /> or <see cref="T:System.Printing.PrintQueue" />.</summary>
      <param name="visual">The <see cref="T:System.Windows.Media.Visual" /> that is written.</param>
      <param name="printTicket">A <see cref="T:System.Printing.PrintTicket" /> that represents the default printing preferences for the document.</param>
    </member>
    <member name="M:System.Windows.Xps.XpsDocumentWriter.WriteAsync(System.String)">
      <summary>Writes asynchronously a specified XPS document to the target <see cref="T:System.Windows.Xps.Packaging.XpsDocument" /> or <see cref="T:System.Printing.PrintQueue" />.</summary>
      <param name="documentPath">The path of the source document.</param>
    </member>
    <member name="M:System.Windows.Xps.XpsDocumentWriter.WriteAsync(System.String,System.Windows.Xps.XpsDocumentNotificationLevel)">
      <summary>Writes asynchronously a specified XPS document with notification option to the target <see cref="T:System.Windows.Xps.Packaging.XpsDocument" /> or <see cref="T:System.Printing.PrintQueue" />.</summary>
      <param name="documentPath">The path of the source document.</param>
      <param name="notificationLevel">An indication of whether notification is enabled.</param>
    </member>
    <member name="M:System.Windows.Xps.XpsDocumentWriter.WriteAsync(System.Windows.Documents.DocumentPaginator)">
      <summary>Writes asynchronously paginated content from a specified <see cref="T:System.Windows.Documents.DocumentPaginator" /> to the target <see cref="T:System.Windows.Xps.Packaging.XpsDocument" /> or <see cref="T:System.Printing.PrintQueue" />.</summary>
      <param name="documentPaginator">An object that contains a pointer to unpaginated source material and also contains methods for paginating the material.</param>
    </member>
    <member name="M:System.Windows.Xps.XpsDocumentWriter.WriteAsync(System.Windows.Documents.DocumentPaginator,System.Object)">
      <summary>Writes asynchronously paginated content from a specified <see cref="T:System.Windows.Documents.DocumentPaginator" /> to the target <see cref="T:System.Windows.Xps.Packaging.XpsDocument" /> or <see cref="T:System.Printing.PrintQueue" />.</summary>
      <param name="documentPaginator">An object that contains a pointer to unpaginated source material; also contains methods for paginating the material.</param>
      <param name="userSuppliedState">A user-specified object to identify and associate with the asynchronous operation.</param>
    </member>
    <member name="M:System.Windows.Xps.XpsDocumentWriter.WriteAsync(System.Windows.Documents.DocumentPaginator,System.Printing.PrintTicket)">
      <summary>Writes asynchronously paginated content from a specified <see cref="T:System.Windows.Documents.DocumentPaginator" /> together with a <see cref="T:System.Printing.PrintTicket" /> to the target <see cref="T:System.Windows.Xps.Packaging.XpsDocument" /> or <see cref="T:System.Printing.PrintQueue" />.</summary>
      <param name="documentPaginator">An object that contains a pointer to unpaginated source material and also contains methods for paginating the material.</param>
      <param name="printTicket">A <see cref="T:System.Printing.PrintTicket" /> that represents the default printing preferences for the material.</param>
    </member>
    <member name="M:System.Windows.Xps.XpsDocumentWriter.WriteAsync(System.Windows.Documents.DocumentPaginator,System.Printing.PrintTicket,System.Object)">
      <summary>Writes asynchronously paginated content from a specified <see cref="T:System.Windows.Documents.DocumentPaginator" /> together with a <see cref="T:System.Printing.PrintTicket" /> to the target <see cref="T:System.Windows.Xps.Packaging.XpsDocument" /> or <see cref="T:System.Printing.PrintQueue" />.</summary>
      <param name="documentPaginator">An object that contains a pointer to unpaginated source material; also contains methods for paginating the material.</param>
      <param name="printTicket">A <see cref="T:System.Printing.PrintTicket" /> that represents the default printing preferences for the material.</param>
      <param name="userSuppliedState">A user-specified object to identify and associate with the asynchronous operation.</param>
    </member>
    <member name="M:System.Windows.Xps.XpsDocumentWriter.WriteAsync(System.Windows.Documents.FixedDocument)">
      <summary>Writes asynchronously a specified <see cref="T:System.Windows.Documents.FixedDocument" /> to the target <see cref="T:System.Windows.Xps.Packaging.XpsDocument" /> or <see cref="T:System.Printing.PrintQueue" />.</summary>
      <param name="fixedDocument">The document that is written.</param>
    </member>
    <member name="M:System.Windows.Xps.XpsDocumentWriter.WriteAsync(System.Windows.Documents.FixedDocument,System.Object)">
      <summary>Writes asynchronously a specified <see cref="T:System.Windows.Documents.FixedDocument" /> to the target <see cref="T:System.Windows.Xps.Packaging.XpsDocument" /> or <see cref="T:System.Printing.PrintQueue" />.</summary>
      <param name="fixedDocument">The document that is written.</param>
      <param name="userSuppliedState">A user-specified object to identify and associate with the asynchronous operation.</param>
    </member>
    <member name="M:System.Windows.Xps.XpsDocumentWriter.WriteAsync(System.Windows.Documents.FixedDocument,System.Printing.PrintTicket)">
      <summary>Writes asynchronously a specified <see cref="T:System.Windows.Documents.FixedDocument" /> together with a <see cref="T:System.Printing.PrintTicket" /> to the target <see cref="T:System.Windows.Xps.Packaging.XpsDocument" /> or <see cref="T:System.Printing.PrintQueue" />.</summary>
      <param name="fixedDocument">The document that is written.</param>
      <param name="printTicket">A <see cref="T:System.Printing.PrintTicket" /> that represents the default printing preferences for the document.</param>
    </member>
    <member name="M:System.Windows.Xps.XpsDocumentWriter.WriteAsync(System.Windows.Documents.FixedDocument,System.Printing.PrintTicket,System.Object)">
      <summary>Writes asynchronously a specified <see cref="T:System.Windows.Documents.FixedDocument" /> together with a <see cref="T:System.Printing.PrintTicket" /> to the target <see cref="T:System.Windows.Xps.Packaging.XpsDocument" /> or <see cref="T:System.Printing.PrintQueue" />.</summary>
      <param name="fixedDocument">The document that is written.</param>
      <param name="printTicket">A <see cref="T:System.Printing.PrintTicket" /> that represents the default printing preferences for the document.</param>
      <param name="userSuppliedState">A user-specified object to identify and associate with the asynchronous operation.</param>
    </member>
    <member name="M:System.Windows.Xps.XpsDocumentWriter.WriteAsync(System.Windows.Documents.FixedDocumentSequence)">
      <summary>Writes asynchronously a specified <see cref="T:System.Windows.Documents.FixedDocumentSequence" /> to the target <see cref="T:System.Windows.Xps.Packaging.XpsDocument" /> or <see cref="T:System.Printing.PrintQueue" />.</summary>
      <param name="fixedDocumentSequence">The set of documents that is written.</param>
    </member>
    <member name="M:System.Windows.Xps.XpsDocumentWriter.WriteAsync(System.Windows.Documents.FixedDocumentSequence,System.Object)">
      <summary>Writes asynchronously a specified <see cref="T:System.Windows.Documents.FixedDocumentSequence" /> to the target <see cref="T:System.Windows.Xps.Packaging.XpsDocument" /> or <see cref="T:System.Printing.PrintQueue" />.</summary>
      <param name="fixedDocumentSequence">The set of documents that are written.</param>
      <param name="userSuppliedState">A user-specified object to identify and associate with the asynchronous operation.</param>
    </member>
    <member name="M:System.Windows.Xps.XpsDocumentWriter.WriteAsync(System.Windows.Documents.FixedDocumentSequence,System.Printing.PrintTicket)">
      <summary>Writes asynchronously a specified <see cref="T:System.Windows.Documents.FixedDocumentSequence" /> together with a <see cref="T:System.Printing.PrintTicket" /> to the target <see cref="T:System.Windows.Xps.Packaging.XpsDocument" /> or <see cref="T:System.Printing.PrintQueue" />.</summary>
      <param name="fixedDocumentSequence">The set of documents that are written.</param>
      <param name="printTicket">A <see cref="T:System.Printing.PrintTicket" /> that represents the default printing preferences for the set of documents.</param>
    </member>
    <member name="M:System.Windows.Xps.XpsDocumentWriter.WriteAsync(System.Windows.Documents.FixedDocumentSequence,System.Printing.PrintTicket,System.Object)">
      <summary>Writes asynchronously a specified <see cref="T:System.Windows.Documents.FixedDocumentSequence" /> together with a <see cref="T:System.Printing.PrintTicket" /> to the target <see cref="T:System.Windows.Xps.Packaging.XpsDocument" /> or <see cref="T:System.Printing.PrintQueue" />.</summary>
      <param name="fixedDocumentSequence">The set of documents to be written.</param>
      <param name="printTicket">A <see cref="T:System.Printing.PrintTicket" /> that represents the default printing preferences for the set of documents.</param>
      <param name="userSuppliedState">A user-specified object to identify and associate with the asynchronous operation.</param>
    </member>
    <member name="M:System.Windows.Xps.XpsDocumentWriter.WriteAsync(System.Windows.Documents.FixedPage)">
      <summary>Writes asynchronously a specified <see cref="T:System.Windows.Documents.FixedPage" /> to the target <see cref="T:System.Windows.Xps.Packaging.XpsDocument" /> or <see cref="T:System.Printing.PrintQueue" />.</summary>
      <param name="fixedPage">The page that is written.</param>
    </member>
    <member name="M:System.Windows.Xps.XpsDocumentWriter.WriteAsync(System.Windows.Documents.FixedPage,System.Object)">
      <summary>Writes asynchronously a specified <see cref="T:System.Windows.Documents.FixedPage" /> to the target <see cref="T:System.Windows.Xps.Packaging.XpsDocument" /> or <see cref="T:System.Printing.PrintQueue" />.</summary>
      <param name="fixedPage">The page that is written.</param>
      <param name="userSuppliedState">A user-specified object to identify and associate with the asynchronous operation.</param>
    </member>
    <member name="M:System.Windows.Xps.XpsDocumentWriter.WriteAsync(System.Windows.Documents.FixedPage,System.Printing.PrintTicket)">
      <summary>Writes asynchronously a specified <see cref="T:System.Windows.Documents.FixedPage" /> together with a <see cref="T:System.Printing.PrintTicket" /> to the target <see cref="T:System.Windows.Xps.Packaging.XpsDocument" /> or <see cref="T:System.Printing.PrintQueue" />.</summary>
      <param name="fixedPage">The page that is written.</param>
      <param name="printTicket">A <see cref="T:System.Printing.PrintTicket" /> that represents the default printing preferences for the page.</param>
    </member>
    <member name="M:System.Windows.Xps.XpsDocumentWriter.WriteAsync(System.Windows.Documents.FixedPage,System.Printing.PrintTicket,System.Object)">
      <summary>Writes asynchronously a specified <see cref="T:System.Windows.Documents.FixedPage" /> together with a <see cref="T:System.Printing.PrintTicket" /> to the target <see cref="T:System.Windows.Xps.Packaging.XpsDocument" /> or <see cref="T:System.Printing.PrintQueue" />.</summary>
      <param name="fixedPage">The page that is written.</param>
      <param name="printTicket">A <see cref="T:System.Printing.PrintTicket" /> that represents the default printing preferences for the page.</param>
      <param name="userSuppliedState">A user-specified object to identify and associate with the asynchronous operation.</param>
    </member>
    <member name="M:System.Windows.Xps.XpsDocumentWriter.WriteAsync(System.Windows.Media.Visual)">
      <summary>Writes asynchronously a specified <see cref="T:System.Windows.Media.Visual" /> to the target <see cref="T:System.Windows.Xps.Packaging.XpsDocument" /> or <see cref="T:System.Printing.PrintQueue" />.</summary>
      <param name="visual">The <see cref="T:System.Windows.Media.Visual" /> that is written.</param>
    </member>
    <member name="M:System.Windows.Xps.XpsDocumentWriter.WriteAsync(System.Windows.Media.Visual,System.Object)">
      <summary>Writes asynchronously a specified <see cref="T:System.Windows.Media.Visual" /> to the target <see cref="T:System.Windows.Xps.Packaging.XpsDocument" /> or <see cref="T:System.Printing.PrintQueue" />.</summary>
      <param name="visual">The <see cref="T:System.Windows.Media.Visual" /> that is written.</param>
      <param name="userSuppliedState">A user-specified object to identify and associate with the asynchronous operation.</param>
    </member>
    <member name="M:System.Windows.Xps.XpsDocumentWriter.WriteAsync(System.Windows.Media.Visual,System.Printing.PrintTicket)">
      <summary>Writes asynchronously a specified <see cref="T:System.Windows.Media.Visual" /> together with a <see cref="T:System.Printing.PrintTicket" /> to the target <see cref="T:System.Windows.Xps.Packaging.XpsDocument" /> or <see cref="T:System.Printing.PrintQueue" />.</summary>
      <param name="visual">The <see cref="T:System.Windows.Media.Visual" /> that is written.</param>
      <param name="printTicket">A <see cref="T:System.Printing.PrintTicket" /> that represents the default printing preferences for the document.</param>
    </member>
    <member name="M:System.Windows.Xps.XpsDocumentWriter.WriteAsync(System.Windows.Media.Visual,System.Printing.PrintTicket,System.Object)">
      <summary>Writes asynchronously a specified <see cref="T:System.Windows.Media.Visual" /> together with a <see cref="T:System.Printing.PrintTicket" /> to the target <see cref="T:System.Windows.Xps.Packaging.XpsDocument" /> or <see cref="T:System.Printing.PrintQueue" />.</summary>
      <param name="visual">The <see cref="T:System.Windows.Media.Visual" /> that is written.</param>
      <param name="printTicket">A <see cref="T:System.Printing.PrintTicket" /> that represents the default printing preferences for the document.</param>
      <param name="userSuppliedState">A user-specified object to identify and associate with the asynchronous operation.</param>
    </member>
    <member name="E:System.Windows.Xps.XpsDocumentWriter.WritingCancelled">
      <summary>Occurs when a <see cref="Overload:System.Windows.Xps.XpsDocumentWriter.Write" /> or <see cref="Overload:System.Windows.Xps.XpsDocumentWriter.WriteAsync" /> operation is canceled.</summary>
    </member>
    <member name="E:System.Windows.Xps.XpsDocumentWriter.WritingCompleted">
      <summary>Occurs when a write operation finishes.</summary>
    </member>
    <member name="E:System.Windows.Xps.XpsDocumentWriter.WritingPrintTicketRequired">
      <summary>Occurs just before a <see cref="Overload:System.Windows.Xps.XpsDocumentWriter.Write" /> or <see cref="Overload:System.Windows.Xps.XpsDocumentWriter.WriteAsync" /> method adds a <see cref="T:System.Printing.PrintTicket" /> to a document or print queue.</summary>
    </member>
    <member name="E:System.Windows.Xps.XpsDocumentWriter.WritingProgressChanged">
      <summary>Occurs when the <see cref="T:System.Windows.Xps.XpsDocumentWriter" /> updates its progress.</summary>
    </member>
    <member name="T:System.Windows.Xps.XpsWriterException">
      <summary>The exception that is thrown when a method of either an <see cref="T:System.Windows.Xps.XpsDocumentWriter" /> or a <see cref="T:System.Windows.Xps.VisualsToXpsDocument" /> object is called that is incompatible with the current state of the object. </summary>
    </member>
    <member name="M:System.Windows.Xps.XpsWriterException.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Xps.XpsWriterException" /> class. </summary>
    </member>
    <member name="M:System.Windows.Xps.XpsWriterException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Xps.XpsWriterException" /> class that provides specific <see cref="T:System.Runtime.Serialization.SerializationInfo" /> and <see cref="T:System.Runtime.Serialization.StreamingContext" />. This constructor is protected.</summary>
      <param name="info">The data that is required to serialize or deserialize an object.</param>
      <param name="context">The context, which includes source and destination, of the serialized stream.</param>
    </member>
    <member name="M:System.Windows.Xps.XpsWriterException.#ctor(System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Xps.XpsWriterException" /> class that provides a specific error condition.</summary>
      <param name="message">A <see cref="T:System.String" /> that describes the error condition.</param>
    </member>
    <member name="M:System.Windows.Xps.XpsWriterException.#ctor(System.String,System.Exception)">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Xps.XpsWriterException" /> class that provides a specific error condition and includes the cause of the exception. </summary>
      <param name="message">A <see cref="T:System.String" /> that describes the error condition.</param>
      <param name="innerException">The underlying error that caused the <see cref="T:System.Windows.Xps.XpsWriterException" />.</param>
    </member>
  </members>
</doc>
=== C:/Users/treeman/Desktop/windows nt source code\xbox\Xbox Live Source\XONLINE_MAIN\public\ext\sdk\CLR\netfx40rtm\Profile\Client\System.Runtime.Remoting.xml ===
﻿<?xml version="1.0" encoding="utf-8"?>
<doc>
  <assembly>
    <name>System.Runtime.Remoting</name>
  </assembly>
  <members>
    <member name="T:System.Runtime.Remoting.Channels.BinaryClientFormatterSink">
      <summary>Provides the implementation for a client formatter sink that uses the <see cref="T:System.Runtime.Serialization.Formatters.Binary.BinaryFormatter" />.</summary>
    </member>
    <member name="M:System.Runtime.Remoting.Channels.BinaryClientFormatterSink.#ctor(System.Runtime.Remoting.Channels.IClientChannelSink)">
      <summary>Initializes a new instance of the <see cref="T:System.Runtime.Remoting.Channels.BinaryClientFormatterSink" /> class.</summary>
      <param name="nextSink">The next <see cref="T:System.Runtime.Remoting.Channels.IClientChannelSink" /> in the sink chain. </param>
    </member>
    <member name="M:System.Runtime.Remoting.Channels.BinaryClientFormatterSink.AsyncProcessMessage(System.Runtime.Remoting.Messaging.IMessage,System.Runtime.Remoting.Messaging.IMessageSink)">
      <summary>Asynchronously processes the provided message.</summary>
      <returns>A <see cref="T:System.Runtime.Remoting.Messaging.IMessageCtrl" /> that provides a way to control the asynchronous message after it has been dispatched.</returns>
      <param name="msg">The message to process. </param>
      <param name="replySink">The sink that will receive the reply to the provided message. </param>
    </member>
    <member name="M:System.Runtime.Remoting.Channels.BinaryClientFormatterSink.AsyncProcessRequest(System.Runtime.Remoting.Channels.IClientChannelSinkStack,System.Runtime.Remoting.Messaging.IMessage,System.Runtime.Remoting.Channels.ITransportHeaders,System.IO.Stream)">
      <summary>Requests asynchronous processing of a method call on the current sink.</summary>
      <param name="sinkStack">A stack of channel sinks that called the current sink. </param>
      <param name="msg">The message to process. </param>
      <param name="headers">The headers to add to the outgoing message that is heading to the server. </param>
      <param name="stream">The stream that is headed toward the transport sink. </param>
    </member>
    <member name="M:System.Runtime.Remoting.Channels.BinaryClientFormatterSink.AsyncProcessResponse(System.Runtime.Remoting.Channels.IClientResponseChannelSinkStack,System.Object,System.Runtime.Remoting.Channels.ITransportHeaders,System.IO.Stream)">
      <summary>Requests asynchronous processing of a response to a method call on the current sink.</summary>
      <param name="sinkStack">A stack of sinks that called the current sink. </param>
      <param name="state">Information that is associated with the current sink, generated on the request side and needed on the response side. </param>
      <param name="headers">The headers that are retrieved from the server response stream. </param>
      <param name="stream">The stream that is coming back from the transport sink. </param>
    </member>
    <member name="M:System.Runtime.Remoting.Channels.BinaryClientFormatterSink.GetRequestStream(System.Runtime.Remoting.Messaging.IMessage,System.Runtime.Remoting.Channels.ITransportHeaders)">
      <summary>Returns the <see cref="T:System.IO.Stream" /> onto which the provided message is to be serialized.</summary>
      <returns>The <see cref="T:System.IO.Stream" /> onto which the provided message is to be serialized.</returns>
      <param name="msg">The <see cref="T:System.Runtime.Remoting.Messaging.IMethodCallMessage" /> that contains details about the method call. </param>
      <param name="headers">The headers to add to the outgoing message that is heading to the server. </param>
    </member>
    <member name="P:System.Runtime.Remoting.Channels.BinaryClientFormatterSink.NextChannelSink">
      <summary>Gets the next <see cref="T:System.Runtime.Remoting.Channels.IClientChannelSink" /> in the sink chain.</summary>
      <returns>The next <see cref="T:System.Runtime.Remoting.Channels.IClientChannelSink" /> in the sink chain.</returns>
    </member>
    <member name="P:System.Runtime.Remoting.Channels.BinaryClientFormatterSink.NextSink">
      <summary>Gets the next <see cref="T:System.Runtime.Remoting.Messaging.IMessageSink" /> in the sink chain.</summary>
      <returns>The next <see cref="T:System.Runtime.Remoting.Messaging.IMessageSink" /> in the sink chain.</returns>
    </member>
    <member name="M:System.Runtime.Remoting.Channels.BinaryClientFormatterSink.ProcessMessage(System.Runtime.Remoting.Messaging.IMessage,System.Runtime.Remoting.Channels.ITransportHeaders,System.IO.Stream,System.Runtime.Remoting.Channels.ITransportHeaders@,System.IO.Stream@)">
      <summary>Requests message processing from the current sink.</summary>
      <param name="msg">The message to process. </param>
      <param name="requestHeaders">The headers to add to the outgoing message that is heading to the server. </param>
      <param name="requestStream">The stream that is headed toward the transport sink. </param>
      <param name="responseHeaders">When this method returns, contains a <see cref="T:System.Runtime.Remoting.Channels.ITransportHeaders" /> interface that holds the headers that the server returned. This parameter is passed uninitialized. </param>
      <param name="responseStream">When this method returns, contains a <see cref="T:System.IO.Stream" /> that is coming back from the transport sink. This parameter is passed uninitialized. </param>
    </member>
    <member name="P:System.Runtime.Remoting.Channels.BinaryClientFormatterSink.Properties">
      <summary>Gets a <see cref="T:System.Collections.IDictionary" /> of properties for the current channel sink.</summary>
      <returns>A <see cref="T:System.Collections.IDictionary" /> of properties for the current channel sink.</returns>
    </member>
    <member name="M:System.Runtime.Remoting.Channels.BinaryClientFormatterSink.SyncProcessMessage(System.Runtime.Remoting.Messaging.IMessage)">
      <summary>Synchronously processes the provided message.</summary>
      <returns>The response to the processed message.</returns>
      <param name="msg">The message to process. </param>
    </member>
    <member name="T:System.Runtime.Remoting.Channels.BinaryClientFormatterSinkProvider">
      <summary>Provides the implementation for the binary client formatter sink provider.</summary>
    </member>
    <member name="M:System.Runtime.Remoting.Channels.BinaryClientFormatterSinkProvider.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Runtime.Remoting.Channels.BinaryClientFormatterSinkProvider" /> class with default values.</summary>
    </member>
    <member name="M:System.Runtime.Remoting.Channels.BinaryClientFormatterSinkProvider.#ctor(System.Collections.IDictionary,System.Collections.ICollection)">
      <summary>Initializes a new instance of the <see cref="T:System.Runtime.Remoting.Channels.BinaryClientFormatterSinkProvider" /> class with the given properties and provider data.</summary>
      <param name="properties">A <see cref="T:System.Collections.IDictionary" /> of configuration properties to use with the new instance of <see cref="T:System.Runtime.Remoting.Channels.BinaryClientFormatterSinkProvider" />. </param>
      <param name="providerData">A <see cref="T:System.Collections.ICollection" /> of <see cref="T:System.Runtime.Remoting.Channels.SinkProviderData" /> objects that contain provider data to use with the new instance of <see cref="T:System.Runtime.Remoting.Channels.BinaryClientFormatterSinkProvider" />. </param>
    </member>
    <member name="M:System.Runtime.Remoting.Channels.BinaryClientFormatterSinkProvider.CreateSink(System.Runtime.Remoting.Channels.IChannelSender,System.String,System.Object)">
      <summary>Creates a sink chain.</summary>
      <returns>The first sink of the newly formed channel sink chain, or null, which indicates that this provider will not or cannot provide a connection for this endpoint.</returns>
      <param name="channel">Channel for which this sink chain is being constructed. </param>
      <param name="url">URL of object to connect to or the channel URI for the target object. </param>
      <param name="remoteChannelData">A channel data object that describes a channel on the remote server. </param>
    </member>
    <member name="P:System.Runtime.Remoting.Channels.BinaryClientFormatterSinkProvider.Next">
      <summary>Gets or sets the next <see cref="T:System.Runtime.Remoting.Channels.IClientChannelSinkProvider" /> in the sink provider chain.</summary>
      <returns>The next <see cref="T:System.Runtime.Remoting.Channels.IClientChannelSinkProvider" /> in the sink provider chain.</returns>
    </member>
    <member name="T:System.Runtime.Remoting.Channels.BinaryServerFormatterSink">
      <summary>Provides the implementation for a server formatter sink that uses the <see cref="T:System.Runtime.Serialization.Formatters.Binary.BinaryFormatter" />.</summary>
    </member>
    <member name="M:System.Runtime.Remoting.Channels.BinaryServerFormatterSink.#ctor(System.Runtime.Remoting.Channels.BinaryServerFormatterSink.Protocol,System.Runtime.Remoting.Channels.IServerChannelSink,System.Runtime.Remoting.Channels.IChannelReceiver)">
      <summary>Initializes a new instance of the <see cref="T:System.Runtime.Remoting.Channels.BinaryServerFormatterSink" /> class.</summary>
      <param name="protocol">The <see cref="T:System.Runtime.Remoting.Channels.BinaryServerFormatterSink.Protocol" /> that will be used with the current instance of <see cref="T:System.Runtime.Remoting.Channels.BinaryServerFormatterSink" />. </param>
      <param name="nextSink">The next sink in the channel sink chain. </param>
      <param name="receiver">Indicates the channel that will receive the messages that are serialized by the new instance of <see cref="T:System.Runtime.Remoting.Channels.BinaryServerFormatterSink" />. </param>
    </member>
    <member name="M:System.Runtime.Remoting.Channels.BinaryServerFormatterSink.AsyncProcessResponse(System.Runtime.Remoting.Channels.IServerResponseChannelSinkStack,System.Object,System.Runtime.Remoting.Messaging.IMessage,System.Runtime.Remoting.Channels.ITransportHeaders,System.IO.Stream)">
      <summary>Requests processing of the response from a method call that is sent asynchronously.</summary>
      <param name="sinkStack">A stack of sinks that is leading back to the server transport sink. </param>
      <param name="state">Information that is associated with the current sink, generated on the request side, and needed on the response side. </param>
      <param name="msg">The response message. </param>
      <param name="headers">The headers to add to the return message that is heading to the client. </param>
      <param name="stream">The stream that is heading back to the transport sink. </param>
    </member>
    <member name="M:System.Runtime.Remoting.Channels.BinaryServerFormatterSink.GetResponseStream(System.Runtime.Remoting.Channels.IServerResponseChannelSinkStack,System.Object,System.Runtime.Remoting.Messaging.IMessage,System.Runtime.Remoting.Channels.ITransportHeaders)">
      <summary>Returns the <see cref="T:System.IO.Stream" /> onto which the provided response message is to be serialized.</summary>
      <returns>The <see cref="T:System.IO.Stream" /> onto which the provided response message is to be serialized.</returns>
      <param name="sinkStack">A stack of sinks that is leading back to the server transport sink. </param>
      <param name="state">Information that is associated with the current sink, generated on the request side, and needed on the response side. </param>
      <param name="msg">The response message to serialize. </param>
      <param name="headers">The headers to put in the response stream to the client. </param>
    </member>
    <member name="P:System.Runtime.Remoting.Channels.BinaryServerFormatterSink.NextChannelSink">
      <summary>Gets the next <see cref="T:System.Runtime.Remoting.Channels.IServerChannelSink" /> in the sink chain.</summary>
      <returns>The next <see cref="T:System.Runtime.Remoting.Channels.IServerChannelSink" /> in the sink chain.</returns>
    </member>
    <member name="M:System.Runtime.Remoting.Channels.BinaryServerFormatterSink.ProcessMessage(System.Runtime.Remoting.Channels.IServerChannelSinkStack,System.Runtime.Remoting.Messaging.IMessage,System.Runtime.Remoting.Channels.ITransportHeaders,System.IO.Stream,System.Runtime.Remoting.Messaging.IMessage@,System.Runtime.Remoting.Channels.ITransportHeaders@,System.IO.Stream@)">
      <summary>Requests message processing from the current sink.</summary>
      <returns>A <see cref="T:System.Runtime.Remoting.Channels.ServerProcessing" /> status value that provides information about how the message was processed.</returns>
      <param name="sinkStack">A stack of channel sinks that called the current sink. </param>
      <param name="requestMsg">The message that contains the request. </param>
      <param name="requestHeaders">Headers that are retrieved from the incoming message from the client. </param>
      <param name="requestStream">The stream that needs to be processed and passed on to the deserialization sink. </param>
      <param name="responseMsg">When this method returns, contains a <see cref="T:System.Runtime.Remoting.Messaging.IMessage" /> that holds the response message. This parameter is passed uninitialized. </param>
      <param name="responseHeaders">When this method returns, contains a <see cref="T:System.Runtime.Remoting.Channels.ITransportHeaders" /> that holds the headers to add to the return message that is heading to the client. This parameter is passed uninitialized. </param>
      <param name="responseStream">When this method returns, contains a <see cref="T:System.IO.Stream" /> that is heading to the transport sink. This parameter is passed uninitialized. </param>
    </member>
    <member name="P:System.Runtime.Remoting.Channels.BinaryServerFormatterSink.Properties">
      <summary>Gets a <see cref="T:System.Collections.IDictionary" /> of properties for the current channel sink.</summary>
      <returns>A <see cref="T:System.Collections.IDictionary" /> of properties for the current channel sink.</returns>
    </member>
    <member name="P:System.Runtime.Remoting.Channels.BinaryServerFormatterSink.TypeFilterLevel">
      <summary>Gets or sets the TypeFilterLevel value of automatic deserialization that the BinaryServerFormatterSink performs.</summary>
      <returns>The TypeFilterLevel that represents the current automatic deserialization level.</returns>
    </member>
    <member name="T:System.Runtime.Remoting.Channels.BinaryServerFormatterSink.Protocol">
      <summary>Specifies the protocol to use with the <see cref="T:System.Runtime.Remoting.Channels.BinaryServerFormatterSink" /> class.</summary>
    </member>
    <member name="F:System.Runtime.Remoting.Channels.BinaryServerFormatterSink.Protocol.Http">
      <summary>Indicates that the current formatter sink is using the HTTP protocol, and therefore requires special processing.</summary>
    </member>
    <member name="F:System.Runtime.Remoting.Channels.BinaryServerFormatterSink.Protocol.Other">
      <summary>Indicates that a protocol other than HTTP is used with the current formatter sink.</summary>
    </member>
    <member name="T:System.Runtime.Remoting.Channels.BinaryServerFormatterSinkProvider">
      <summary>Provides the implementation for the server formatter channel sink provider that uses the <see cref="T:System.Runtime.Serialization.Formatters.Binary.BinaryFormatter" />.</summary>
    </member>
    <member name="M:System.Runtime.Remoting.Channels.BinaryServerFormatterSinkProvider.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Runtime.Remoting.Channels.BinaryServerFormatterSinkProvider" /> class with default values.</summary>
    </member>
    <member name="M:System.Runtime.Remoting.Channels.BinaryServerFormatterSinkProvider.#ctor(System.Collections.IDictionary,System.Collections.ICollection)">
      <summary>Initializes a new instance of the <see cref="T:System.Runtime.Remoting.Channels.BinaryServerFormatterSinkProvider" /> class with the provided properties and provider data.</summary>
      <param name="properties">A <see cref="T:System.Collections.IDictionary" /> of configuration properties to use with the new instance of <see cref="T:System.Runtime.Remoting.Channels.BinaryServerFormatterSinkProvider" />. </param>
      <param name="providerData">A <see cref="T:System.Collections.ICollection" /> of <see cref="T:System.Runtime.Remoting.Channels.SinkProviderData" /> to use with the new instance of <see cref="T:System.Runtime.Remoting.Channels.BinaryServerFormatterSinkProvider" />. </param>
    </member>
    <member name="M:System.Runtime.Remoting.Channels.BinaryServerFormatterSinkProvider.CreateSink(System.Runtime.Remoting.Channels.IChannelReceiver)">
      <summary>Creates a sink chain.</summary>
      <returns>The first sink of the newly formed channel sink chain.</returns>
      <param name="channel">The channel for which to create the channel sink chain. </param>
    </member>
    <member name="M:System.Runtime.Remoting.Channels.BinaryServerFormatterSinkProvider.GetChannelData(System.Runtime.Remoting.Channels.IChannelDataStore)">
      <summary>Returns the channel data for the channel that the current sink is associated with.</summary>
      <param name="channelData">A <see cref="T:System.Runtime.Remoting.Channels.IChannelDataStore" /> object in which the channel data is to be returned. </param>
    </member>
    <member name="P:System.Runtime.Remoting.Channels.BinaryServerFormatterSinkProvider.Next">
      <summary>Gets or sets the next <see cref="T:System.Runtime.Remoting.Channels.IServerChannelSinkProvider" /> in the sink provider chain.</summary>
      <returns>The next <see cref="T:System.Runtime.Remoting.Channels.IServerChannelSinkProvider" /> in the sink provider chain.</returns>
    </member>
    <member name="P:System.Runtime.Remoting.Channels.BinaryServerFormatterSinkProvider.TypeFilterLevel">
      <summary>Gets or sets the TypeFilterLevel value of automatic deserialization the BinaryServerFormatterSink performs.</summary>
      <returns>The TypeFilterLevel that represents the current automatic deserialization level.</returns>
    </member>
    <member name="T:System.Runtime.Remoting.Channels.CommonTransportKeys">
      <summary>The transport keys associated with common values used by the channels.</summary>
    </member>
    <member name="M:System.Runtime.Remoting.Channels.CommonTransportKeys.#ctor">
      <summary>Creates an instance of <see cref="T:System.Runtime.Remoting.Channels.CommonTransportKeys" />.</summary>
    </member>
    <member name="F:System.Runtime.Remoting.Channels.CommonTransportKeys.ConnectionId">
      <summary>The transport key associated with a unique ID given to each incoming socket connection.</summary>
    </member>
    <member name="F:System.Runtime.Remoting.Channels.CommonTransportKeys.IPAddress">
      <summary>The transport key associated with the IP address from which an incoming request arrived.</summary>
    </member>
    <member name="F:System.Runtime.Remoting.Channels.CommonTransportKeys.RequestUri">
      <summary>The transport key associated with the URI that made the request.</summary>
    </member>
    <member name="T:System.Runtime.Remoting.Channels.IAuthorizeRemotingConnection">
      <summary>The <see cref="T:System.Runtime.Remoting.Channels.IAuthorizeRemotingConnection" /> interface provides methods that indicate whether a client is authorized to connect on the current channel, based on the client's network address and user identity.</summary>
    </member>
    <member name="M:System.Runtime.Remoting.Channels.IAuthorizeRemotingConnection.IsConnectingEndPointAuthorized(System.Net.EndPoint)">
      <summary>Gets a Boolean value that indicates whether the network address of the client is authorized to connect on the current channel.</summary>
      <returns>true if the network address of the client is authorized; otherwise, false.</returns>
      <param name="endPoint">The <see cref="T:System.Net.EndPoint" /> that identifies the network address of the client.</param>
    </member>
    <member name="M:System.Runtime.Remoting.Channels.IAuthorizeRemotingConnection.IsConnectingIdentityAuthorized(System.Security.Principal.IIdentity)">
      <summary>Gets a Boolean value that indicates whether the user identity of the client is authorized to connect on the current channel.</summary>
      <returns>true if the user identity of the client is authorized; otherwise, false.</returns>
      <param name="identity">The <see cref="T:System.Security.Principal.IIdentity" /> that represents the user identity of the client.</param>
    </member>
    <member name="T:System.Runtime.Remoting.Channels.SoapClientFormatterSink">
      <summary>Provides the implementation for a client formatter sink that uses the <see cref="T:System.Runtime.Serialization.Formatters.Soap.SoapFormatter" />.</summary>
    </member>
    <member name="M:System.Runtime.Remoting.Channels.SoapClientFormatterSink.#ctor(System.Runtime.Remoting.Channels.IClientChannelSink)">
      <summary>Initializes a new instance of the <see cref="T:System.Runtime.Remoting.Channels.SoapClientFormatterSink" /> class.</summary>
      <param name="nextSink">The next sink in the channel sink chain. </param>
    </member>
    <member name="M:System.Runtime.Remoting.Channels.SoapClientFormatterSink.AsyncProcessMessage(System.Runtime.Remoting.Messaging.IMessage,System.Runtime.Remoting.Messaging.IMessageSink)">
      <summary>Asynchronously processes the provided message.</summary>
      <returns>A <see cref="T:System.Runtime.Remoting.Messaging.IMessageCtrl" /> that provides a way to control the asynchronous message after it has been dispatched.</returns>
      <param name="msg">The message to process. </param>
      <param name="replySink">The sink that will receive the reply to the provided message. </param>
    </member>
    <member name="M:System.Runtime.Remoting.Channels.SoapClientFormatterSink.AsyncProcessRequest(System.Runtime.Remoting.Channels.IClientChannelSinkStack,System.Runtime.Remoting.Messaging.IMessage,System.Runtime.Remoting.Channels.ITransportHeaders,System.IO.Stream)">
      <summary>Requests asynchronous processing of a method call on the current sink.</summary>
      <param name="sinkStack">A stack of channel sinks that called the current sink. </param>
      <param name="msg">The message to process. </param>
      <param name="headers">The headers to add to the outgoing message heading to the server. </param>
      <param name="stream">The stream headed to the transport sink. </param>
    </member>
    <member name="M:System.Runtime.Remoting.Channels.SoapClientFormatterSink.AsyncProcessResponse(System.Runtime.Remoting.Channels.IClientResponseChannelSinkStack,System.Object,System.Runtime.Remoting.Channels.ITransportHeaders,System.IO.Stream)">
      <summary>Requests asynchronous processing of a response to a method call on the current sink.</summary>
      <param name="sinkStack">A stack of sinks that called the current sink. </param>
      <param name="state">The state associated with the current sink. </param>
      <param name="headers">The headers retrieved from the server response stream. </param>
      <param name="stream">The stream coming back from the transport sink. </param>
    </member>
    <member name="M:System.Runtime.Remoting.Channels.SoapClientFormatterSink.GetRequestStream(System.Runtime.Remoting.Messaging.IMessage,System.Runtime.Remoting.Channels.ITransportHeaders)">
      <summary>Returns the <see cref="T:System.IO.Stream" /> onto which the provided message is to be serialized.</summary>
      <returns>The <see cref="T:System.IO.Stream" /> onto which the provided message is to be serialized.</returns>
      <param name="msg">The <see cref="T:System.Runtime.Remoting.Messaging.IMethodCallMessage" /> containing details about the method call. </param>
      <param name="headers">The headers to add to the outgoing message heading to the server. </param>
    </member>
    <member name="P:System.Runtime.Remoting.Channels.SoapClientFormatterSink.NextChannelSink">
      <summary>Gets the next <see cref="T:System.Runtime.Remoting.Channels.IClientChannelSink" /> in the sink chain.</summary>
      <returns>The next <see cref="T:System.Runtime.Remoting.Channels.IClientChannelSink" /> in the sink chain.</returns>
    </member>
    <member name="P:System.Runtime.Remoting.Channels.SoapClientFormatterSink.NextSink">
      <summary>Gets the next <see cref="T:System.Runtime.Remoting.Messaging.IMessageSink" /> in the sink chain.</summary>
      <returns>The next <see cref="T:System.Runtime.Remoting.Messaging.IMessageSink" /> in the sink chain.</returns>
    </member>
    <member name="M:System.Runtime.Remoting.Channels.SoapClientFormatterSink.ProcessMessage(System.Runtime.Remoting.Messaging.IMessage,System.Runtime.Remoting.Channels.ITransportHeaders,System.IO.Stream,System.Runtime.Remoting.Channels.ITransportHeaders@,System.IO.Stream@)">
      <summary>Requests message processing from the current sink.</summary>
      <param name="msg">The message to process. </param>
      <param name="requestHeaders">The headers to add to the outgoing message heading to the server. </param>
      <param name="requestStream">The stream headed toward the transport sink. </param>
      <param name="responseHeaders">When this method returns, contains a <see cref="T:System.Runtime.Remoting.Channels.ITransportHeaders" /> interface that holds the headers that the server returned. This parameter is passed uninitialized. </param>
      <param name="responseStream">When this method returns, contains a <see cref="T:System.IO.Stream" /> coming back from the transport sink. This parameter is passed uninitialized. </param>
    </member>
    <member name="P:System.Runtime.Remoting.Channels.SoapClientFormatterSink.Properties">
      <summary>Gets a <see cref="T:System.Collections.IDictionary" /> of properties for the current channel sink.</summary>
      <returns>A <see cref="T:System.Collections.IDictionary" /> of properties for the current channel sink.</returns>
    </member>
    <member name="M:System.Runtime.Remoting.Channels.SoapClientFormatterSink.SyncProcessMessage(System.Runtime.Remoting.Messaging.IMessage)">
      <summary>Synchronously processes the provided message.</summary>
      <returns>The response to the processed message.</returns>
      <param name="msg">The message to process. </param>
    </member>
    <member name="T:System.Runtime.Remoting.Channels.SoapClientFormatterSinkProvider">
      <summary>Provides the implementation for a client formatter sink provider.</summary>
    </member>
    <member name="M:System.Runtime.Remoting.Channels.SoapClientFormatterSinkProvider.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Runtime.Remoting.Channels.SoapClientFormatterSinkProvider" /> class with default values.</summary>
    </member>
    <member name="M:System.Runtime.Remoting.Channels.SoapClientFormatterSinkProvider.#ctor(System.Collections.IDictionary,System.Collections.ICollection)">
      <summary>Initializes a new instance of the <see cref="T:System.Runtime.Remoting.Channels.SoapClientFormatterSinkProvider" /> class with the given properties and provider data.</summary>
      <param name="properties">A <see cref="T:System.Collections.IDictionary" /> of configuration properties to use with the new instance of <see cref="T:System.Runtime.Remoting.Channels.SoapClientFormatterSinkProvider" />. </param>
      <param name="providerData">A <see cref="T:System.Collections.ICollection" /> of provider data to use with the new instance of <see cref="T:System.Runtime.Remoting.Channels.SoapClientFormatterSinkProvider" />. </param>
    </member>
    <member name="M:System.Runtime.Remoting.Channels.SoapClientFormatterSinkProvider.CreateSink(System.Runtime.Remoting.Channels.IChannelSender,System.String,System.Object)">
      <summary>Creates a sink chain.</summary>
      <returns>The first sink of the newly formed channel sink chain, or null, which indicates that this provider will not or cannot provide a connection for this endpoint.</returns>
      <param name="channel">Channel for which this sink chain is being constructed. </param>
      <param name="url">URL of object to connect to or the channel URI for the target object. </param>
      <param name="remoteChannelData">A channel data object describing a channel on the remote server. </param>
    </member>
    <member name="P:System.Runtime.Remoting.Channels.SoapClientFormatterSinkProvider.Next">
      <summary>Gets or sets the next <see cref="T:System.Runtime.Remoting.Channels.IClientChannelSinkProvider" /> in the sink provider chain.</summary>
      <returns>The next <see cref="T:System.Runtime.Remoting.Channels.IClientChannelSinkProvider" /> in the sink provider chain.</returns>
    </member>
    <member name="T:System.Runtime.Remoting.Channels.SoapServerFormatterSink">
      <summary>Provides the implementation for a server formatter sink that uses the <see cref="T:System.Runtime.Serialization.Formatters.Soap.SoapFormatter" />.</summary>
    </member>
    <member name="M:System.Runtime.Remoting.Channels.SoapServerFormatterSink.#ctor(System.Runtime.Remoting.Channels.SoapServerFormatterSink.Protocol,System.Runtime.Remoting.Channels.IServerChannelSink,System.Runtime.Remoting.Channels.IChannelReceiver)">
      <summary>Initializes a new instance of the <see cref="T:System.Runtime.Remoting.Channels.SoapServerFormatterSink" /> class.</summary>
      <param name="protocol">The <see cref="T:System.Runtime.Remoting.Channels.SoapServerFormatterSink.Protocol" /> that will be used with the current instance of <see cref="T:System.Runtime.Remoting.Channels.SoapServerFormatterSink" />. </param>
      <param name="nextSink">The next sink in the channel sink chain. </param>
      <param name="receiver">Indicates the channel that will receive the messages serialized by the new instance of <see cref="T:System.Runtime.Remoting.Channels.SoapServerFormatterSink" />. </param>
    </member>
    <member name="M:System.Runtime.Remoting.Channels.SoapServerFormatterSink.AsyncProcessResponse(System.Runtime.Remoting.Channels.IServerResponseChannelSinkStack,System.Object,System.Runtime.Remoting.Messaging.IMessage,System.Runtime.Remoting.Channels.ITransportHeaders,System.IO.Stream)">
      <summary>Requests processing from the current sink of the response from a method call sent asynchronously.</summary>
      <param name="sinkStack">A stack of sinks leading back to the server transport sink. </param>
      <param name="state">Information associated with the current sink, generated on the request side, and needed on the response side. </param>
      <param name="msg">The response message. </param>
      <param name="headers">The headers to add to the return message heading to the client. </param>
      <param name="stream">The stream heading back to the transport sink. </param>
    </member>
    <member name="M:System.Runtime.Remoting.Channels.SoapServerFormatterSink.GetResponseStream(System.Runtime.Remoting.Channels.IServerResponseChannelSinkStack,System.Object,System.Runtime.Remoting.Messaging.IMessage,System.Runtime.Remoting.Channels.ITransportHeaders)">
      <summary>Returns the <see cref="T:System.IO.Stream" /> onto which the provided response message is to be serialized.</summary>
      <returns>The <see cref="T:System.IO.Stream" /> onto which the provided response message is to be serialized.</returns>
      <param name="sinkStack">A stack of sinks leading back to the server transport sink. </param>
      <param name="state">Information associated with the current sink, generated on the request side, and needed on the response side. </param>
      <param name="msg">The response message that is to be serialized. </param>
      <param name="headers">The headers to put in the response stream to the client. </param>
    </member>
    <member name="P:System.Runtime.Remoting.Channels.SoapServerFormatterSink.NextChannelSink">
      <summary>Gets the next <see cref="T:System.Runtime.Remoting.Channels.IServerChannelSink" /> in the sink chain.</summary>
      <returns>The next <see cref="T:System.Runtime.Remoting.Channels.IServerChannelSink" /> in the sink chain.</returns>
    </member>
    <member name="M:System.Runtime.Remoting.Channels.SoapServerFormatterSink.ProcessMessage(System.Runtime.Remoting.Channels.IServerChannelSinkStack,System.Runtime.Remoting.Messaging.IMessage,System.Runtime.Remoting.Channels.ITransportHeaders,System.IO.Stream,System.Runtime.Remoting.Messaging.IMessage@,System.Runtime.Remoting.Channels.ITransportHeaders@,System.IO.Stream@)">
      <summary>Requests message processing from the current sink.</summary>
      <returns>A <see cref="T:System.Runtime.Remoting.Channels.ServerProcessing" /> status value that provides information about how the message was processed.</returns>
      <param name="sinkStack">The stack of sinks that transports the message. </param>
      <param name="requestMsg">The message that contains the request. </param>
      <param name="requestHeaders">Headers retrieved from the incoming message from the client. </param>
      <param name="requestStream">The stream that needs to be processed and passed on to the deserialization sink. </param>
      <param name="responseMsg">When this method returns, contains a <see cref="T:System.Runtime.Remoting.Messaging.IMessage" /> that holds the response message. This parameter is passed uninitialized. </param>
      <param name="responseHeaders">When this method returns, contains a <see cref="T:System.Runtime.Remoting.Channels.ITransportHeaders" /> that holds the headers to add to the return message heading to the client. This parameter is passed uninitialized. </param>
      <param name="responseStream">When this method returns, contains a <see cref="T:System.IO.Stream" /> that is heading back to the transport sink. This parameter is passed uninitialized. </param>
    </member>
    <member name="P:System.Runtime.Remoting.Channels.SoapServerFormatterSink.Properties">
      <summary>Gets a <see cref="T:System.Collections.IDictionary" /> of properties for the current channel sink.</summary>
      <returns>A <see cref="T:System.Collections.IDictionary" /> of properties for the current channel sink. For more information, see Channel and Formatter Configuration Properties.</returns>
    </member>
    <member name="P:System.Runtime.Remoting.Channels.SoapServerFormatterSink.TypeFilterLevel">
      <summary>Gets or sets the TypeFilterLevel value of automatic deserialization the SoapServerFormatterSink performs.</summary>
      <returns>The TypeFilterLevel that represents the current automatic deserialization level.</returns>
    </member>
    <member name="T:System.Runtime.Remoting.Channels.SoapServerFormatterSink.Protocol">
      <summary>Specifies the protocol to use with the <see cref="T:System.Runtime.Remoting.Channels.SoapServerFormatterSink" /> class.</summary>
    </member>
    <member name="F:System.Runtime.Remoting.Channels.SoapServerFormatterSink.Protocol.Http">
      <summary>Indicates that the current formatter sink is using the HTTP protocol, and therefore requires special processing.</summary>
    </member>
    <member name="F:System.Runtime.Remoting.Channels.SoapServerFormatterSink.Protocol.Other">
      <summary>Indicates that a protocol other than HTTP is used with the current formatter sink.</summary>
    </member>
    <member name="T:System.Runtime.Remoting.Channels.SoapServerFormatterSinkProvider">
      <summary>Provides the implementation for a server formatter channel sink provider that uses the <see cref="T:System.Runtime.Serialization.Formatters.Soap.SoapFormatter" />.</summary>
    </member>
    <member name="M:System.Runtime.Remoting.Channels.SoapServerFormatterSinkProvider.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Runtime.Remoting.Channels.SoapServerFormatterSinkProvider" /> class with default values.</summary>
    </member>
    <member name="M:System.Runtime.Remoting.Channels.SoapServerFormatterSinkProvider.#ctor(System.Collections.IDictionary,System.Collections.ICollection)">
      <summary>Initializes a new instance of the <see cref="T:System.Runtime.Remoting.Channels.SoapServerFormatterSinkProvider" /> class with the provided properties and provider data.</summary>
      <param name="properties">A <see cref="T:System.Collections.IDictionary" /> of configuration properties to use with the new instance of <see cref="T:System.Runtime.Remoting.Channels.SoapClientFormatterSinkProvider" />. </param>
      <param name="providerData">A <see cref="T:System.Collections.ICollection" /> of provider data to use with the new instance of <see cref="T:System.Runtime.Remoting.Channels.SoapClientFormatterSinkProvider" />. </param>
    </member>
    <member name="M:System.Runtime.Remoting.Channels.SoapServerFormatterSinkProvider.CreateSink(System.Runtime.Remoting.Channels.IChannelReceiver)">
      <summary>Creates a sink chain.</summary>
      <returns>The first sink of the newly formed channel sink chain.</returns>
      <param name="channel">The channel for which to create the channel sink chain. </param>
    </member>
    <member name="M:System.Runtime.Remoting.Channels.SoapServerFormatterSinkProvider.GetChannelData(System.Runtime.Remoting.Channels.IChannelDataStore)">
      <summary>Returns the channel data for the channel that the current sink is associated with.</summary>
      <param name="channelData">A <see cref="T:System.Runtime.Remoting.Channels.IChannelDataStore" /> object in which the channel data is to be returned. </param>
    </member>
    <member name="P:System.Runtime.Remoting.Channels.SoapServerFormatterSinkProvider.Next">
      <summary>Gets or sets the next <see cref="T:System.Runtime.Remoting.Channels.IServerChannelSinkProvider" /> in the sink provider chain.</summary>
      <returns>The next <see cref="T:System.Runtime.Remoting.Channels.IServerChannelSinkProvider" /> in the sink provider chain.</returns>
    </member>
    <member name="P:System.Runtime.Remoting.Channels.SoapServerFormatterSinkProvider.TypeFilterLevel">
      <summary>Gets or sets the TypeFilterLevel value of automatic deserialization the SoapServerFormatterSink performs.</summary>
      <returns>The TypeFilterLevel that represents the current automatic deserialization level.</returns>
    </member>
    <member name="T:System.Runtime.Remoting.Channels.SocketCachePolicy">
      <summary>Specifies the policy for removing clients from the cache maintained by remoting clients.</summary>
    </member>
    <member name="F:System.Runtime.Remoting.Channels.SocketCachePolicy.Default">
      <summary>Remove a socket from the cache a fixed time after its last use.</summary>
    </member>
    <member name="F:System.Runtime.Remoting.Channels.SocketCachePolicy.AbsoluteTimeout">
      <summary>Remove a socket from the cache a fixed time after its creation.</summary>
    </member>
    <member name="T:System.Runtime.Remoting.Channels.Http.HttpChannel">
      <summary>Implements a client channel for remote calls that uses the HTTP protocol to transmit messages.</summary>
    </member>
    <member name="M:System.Runtime.Remoting.Channels.Http.HttpChannel.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Runtime.Remoting.Channels.Http.HttpChannel" /> class.</summary>
    </member>
    <member name="M:System.Runtime.Remoting.Channels.Http.HttpChannel.#ctor(System.Collections.IDictionary,System.Runtime.Remoting.Channels.IClientChannelSinkProvider,System.Runtime.Remoting.Channels.IServerChannelSinkProvider)">
      <summary>Initializes a new instance of the <see cref="T:System.Runtime.Remoting.Channels.Http.HttpChannel" /> class with the specified configuration properties and sinks.</summary>
      <param name="properties">A <see cref="T:System.Collections.IDictionary" /> collection that specifies values for configuration properties to be used by the client and server channels. </param>
      <param name="clientSinkProvider">The <see cref="T:System.Runtime.Remoting.Channels.IClientChannelSinkProvider" /> implementation to be used by the client channel. </param>
      <param name="serverSinkProvider">The <see cref="T:System.Runtime.Remoting.Channels.IServerChannelSinkProvider" /> implementation to be used by the server channel.</param>
      <exception cref="T:System.ArgumentException">A configuration property was incorrectly formatted. </exception>
    </member>
    <member name="M:System.Runtime.Remoting.Channels.Http.HttpChannel.#ctor(System.Int32)">
      <summary>Initializes a new instance of the <see cref="T:System.Runtime.Remoting.Channels.Http.HttpChannel" /> class with a server channel that listens on the specified port.</summary>
      <param name="port">The port on which the server channel listens.</param>
    </member>
    <member name="M:System.Runtime.Remoting.Channels.Http.HttpChannel.AddHookChannelUri(System.String)">
      <summary>Adds a URI on which the channel hook should listen.</summary>
      <param name="channelUri">Should always be a null reference (Nothing in Visual Basic) for <see cref="T:System.Runtime.Remoting.Channels.Http.HttpChannel" /></param>
    </member>
    <member name="P:System.Runtime.Remoting.Channels.Http.HttpChannel.ChannelData">
      <summary>Gets the channel-specific data.</summary>
      <returns>The channel data.</returns>
    </member>
    <member name="P:System.Runtime.Remoting.Channels.Http.HttpChannel.ChannelName">
      <summary>Gets the name of the current channel.</summary>
      <returns>A <see cref="T:System.String" /> that contains the name of the channel.</returns>
    </member>
    <member name="P:System.Runtime.Remoting.Channels.Http.HttpChannel.ChannelPriority">
      <summary>Gets the priority of the current channel.</summary>
      <returns>An integer that represents the priority assigned to the channel.</returns>
    </member>
    <member name="P:System.Runtime.Remoting.Channels.Http.HttpChannel.ChannelScheme">
      <summary>Gets the type of listener to hook into (for example, "http").</summary>
      <returns>The type of listener to hook into.</returns>
    </member>
    <member name="P:System.Runtime.Remoting.Channels.Http.HttpChannel.ChannelSinkChain">
      <summary>Gets the channel sink chain that the current channel is using.</summary>
      <returns>The channel sink chain that the current channel is using.</returns>
    </member>
    <member name="M:System.Runtime.Remoting.Channels.Http.HttpChannel.CreateMessageSink(System.String,System.Object,System.String@)">
      <summary>Returns a channel message sink that delivers messages to the specified URL or channel data object.</summary>
      <returns>A channel message sink that delivers messages to the specified URL or channel data object.</returns>
      <param name="url">The URL to which the new sink will deliver messages. Can be null. </param>
      <param name="remoteChannelData">The channel data object of the remote host to which the new sink will deliver messages. Can be null. </param>
      <param name="objectURI">When this method returns, contains a URI of the new channel message sink that delivers messages to the specified URL or channel data object. This parameter is passed uninitialized. </param>
    </member>
    <member name="M:System.Runtime.Remoting.Channels.Http.HttpChannel.GetUrlsForUri(System.String)">
      <summary>Returns an array of all the URLs for an object with the specified URI, hosted on the current <see cref="T:System.Runtime.Remoting.Channels.Http.HttpChannel" />.</summary>
      <returns>An array of the URLs for an object with the specified URI, hosted on the current <see cref="T:System.Runtime.Remoting.Channels.Http.HttpChannel" />.</returns>
      <param name="objectURI">The URI of the object for which URL's are required. </param>
    </member>
    <member name="P:System.Runtime.Remoting.Channels.Http.HttpChannel.IsSecured">
      <summary>Gets or sets a Boolean value that indicates whether the current channel is secure.</summary>
      <returns>A Boolean value that indicates whether the current instance is secure.</returns>
    </member>
    <member name="P:System.Runtime.Remoting.Channels.Http.HttpChannel.Item(System.Object)">
      <summary>Returns the specified channel property.</summary>
      <returns>A <see cref="T:System.Object" /> that represents the channel property specified by <paramref name="key" />.</returns>
      <param name="key">The key of the channel property to retrieve.</param>
    </member>
    <member name="P:System.Runtime.Remoting.Channels.Http.HttpChannel.Keys">
      <summary>Gets a <see cref="T:System.Collections.ICollection" /> of keys that the channel properties are associated with.</summary>
      <returns>A <see cref="T:System.Collections.ICollection" /> of keys that the channel properties are associated with.</returns>
    </member>
    <member name="M:System.Runtime.Remoting.Channels.Http.HttpChannel.Parse(System.String,System.String@)">
      <summary>Extracts the channel URI and the remote well-known object URI from the specified URL.</summary>
      <returns>The URI of the current channel, or null if the specified URL is not an HTTP URL.</returns>
      <param name="url">The URL from which to extract the URI of the remote well-known object. </param>
      <param name="objectURI">When this method returns, contains a <see cref="T:System.String" /> that holds the URI of the remote well-known object. This parameter is passed uninitialized. </param>
    </member>
    <member name="P:System.Runtime.Remoting.Channels.Http.HttpChannel.Properties">
      <summary>Gets a <see cref="T:System.Collections.IDictionary" /> of the channel properties associated with the current channel.</summary>
      <returns>A <see cref="T:System.Collections.IDictionary" /> of the channel properties associated with the current channel.</returns>
    </member>
    <member name="M:System.Runtime.Remoting.Channels.Http.HttpChannel.StartListening(System.Object)">
      <summary>Instructs the current channel to start listening for requests.</summary>
      <param name="data">Should always be a null reference (Nothing in Visual Basic) for <see cref="T:System.Runtime.Remoting.Channels.Http.HttpChannel" />. </param>
    </member>
    <member name="M:System.Runtime.Remoting.Channels.Http.HttpChannel.StopListening(System.Object)">
      <summary>Instructs the current channel to stop listening for requests.</summary>
      <param name="data">The channel URI on which the channel hook is listening.</param>
    </member>
    <member name="P:System.Runtime.Remoting.Channels.Http.HttpChannel.WantsToListen">
      <summary>Gets a Boolean value that indicates whether the current instance wants to be hooked into the outside listener service.</summary>
      <returns>A Boolean value that indicates whether <see cref="T:System.Runtime.Remoting.Channels.IChannelReceiverHook" /> wants to be hooked into the outside listener service.</returns>
    </member>
    <member name="T:System.Runtime.Remoting.Channels.Http.HttpClientChannel">
      <summary>Implements a client channel for remote calls that uses the HTTP protocol to transmit messages.</summary>
    </member>
    <member name="M:System.Runtime.Remoting.Channels.Http.HttpClientChannel.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Runtime.Remoting.Channels.Http.HttpClientChannel" /> class.</summary>
    </member>
    <member name="M:System.Runtime.Remoting.Channels.Http.HttpClientChannel.#ctor(System.Collections.IDictionary,System.Runtime.Remoting.Channels.IClientChannelSinkProvider)">
      <summary>Initializes a new instance of the <see cref="T:System.Runtime.Remoting.Channels.Http.HttpClientChannel" /> class with the specified configuration properties and sink.</summary>
      <param name="properties">A <see cref="T:System.Collections.IDictionary" /> collection that specifies values for configuration properties to be used by the channel. </param>
      <param name="sinkProvider">The <see cref="T:System.Runtime.Remoting.Channels.IClientChannelSinkProvider" /> implementation to be used by the channel. </param>
      <exception cref="T:System.ArgumentException">A configuration property was incorrectly formatted. </exception>
    </member>
    <member name="M:System.Runtime.Remoting.Channels.Http.HttpClientChannel.#ctor(System.String,System.Runtime.Remoting.Channels.IClientChannelSinkProvider)">
      <summary>Initializes a new instance of the <see cref="T:System.Runtime.Remoting.Channels.Http.HttpClientChannel" /> class with the specified name and sink.</summary>
      <param name="name">The name of the new instance of the <see cref="T:System.Runtime.Remoting.Channels.Http.HttpClientChannel" />. </param>
      <param name="sinkProvider">The <see cref="T:System.Runtime.Remoting.Channels.IClientChannelSinkProvider" /> to be used by the channel. </param>
    </member>
    <member name="P:System.Runtime.Remoting.Channels.Http.HttpClientChannel.ChannelName">
      <summary>Gets the name of the current channel.</summary>
      <returns>A <see cref="T:System.String" /> that contains the name of the channel.</returns>
    </member>
    <member name="P:System.Runtime.Remoting.Channels.Http.HttpClientChannel.ChannelPriority">
      <summary>Gets the priority of the current channel.</summary>
      <returns>An integer that represents the priority assigned to the channel.</returns>
    </member>
    <member name="M:System.Runtime.Remoting.Channels.Http.HttpClientChannel.CreateMessageSink(System.String,System.Object,System.String@)">
      <summary>Returns a channel message sink that delivers messages to the specified URL or channel data object.</summary>
      <returns>A channel message sink that delivers messages to the specified URL or channel data object.</returns>
      <param name="url">The URL to which the new sink will deliver messages. Can be null. </param>
      <param name="remoteChannelData">The channel data object of the remote host to which the new sink will deliver messages. Can be null. </param>
      <param name="objectURI">When this method returns, contains a URI of the new channel message sink that delivers messages to the specified URL or channel data object. This parameter is passed uninitialized. </param>
    </member>
    <member name="P:System.Runtime.Remoting.Channels.Http.HttpClientChannel.IsSecured">
      <summary>Gets or sets whether the client channel is secured.</summary>
      <returns>true is the client channel is secured otherwise false.</returns>
    </member>
    <member name="P:System.Runtime.Remoting.Channels.Http.HttpClientChannel.Item(System.Object)">
      <summary>Returns the specified channel property.</summary>
      <returns>A <see cref="T:System.Object" /> that represents the channel property specified by <paramref name="key" />.</returns>
      <param name="key">The key of the channel property to retrieve.</param>
    </member>
    <member name="P:System.Runtime.Remoting.Channels.Http.HttpClientChannel.Keys">
      <summary>Gets a <see cref="T:System.Collections.ICollection" /> of keys that the channel properties are associated with.</summary>
      <returns>A <see cref="T:System.Collections.ICollection" /> of keys that the channel properties are associated with.</returns>
    </member>
    <member name="M:System.Runtime.Remoting.Channels.Http.HttpClientChannel.Parse(System.String,System.String@)">
      <summary>Extracts the channel URI and the remote well-known object URI from the specified URL.</summary>
      <returns>The URI of the current channel, or null if the specified URL is not an HTTP URL.</returns>
      <param name="url">The URL from which to extract the URI of the remote well-known object. </param>
      <param name="objectURI">When this method returns, contains a <see cref="T:System.String" /> that holds the URI of the remote well-known object. This parameter is passed uninitialized. </param>
    </member>
    <member name="T:System.Runtime.Remoting.Channels.Http.HttpRemotingHandler">
      <summary>Implements an ASP.NET handler that forwards requests to the remoting HTTP channel.</summary>
    </member>
    <member name="M:System.Runtime.Remoting.Channels.Http.HttpRemotingHandler.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Runtime.Remoting.Channels.Http.HttpRemotingHandler" /> class with default values.</summary>
    </member>
    <member name="M:System.Runtime.Remoting.Channels.Http.HttpRemotingHandler.#ctor(System.Type,System.Object)">
      <summary>Initializes a new instance of the <see cref="T:System.Runtime.Remoting.Channels.Http.HttpRemotingHandler" /> class with default values. </summary>
      <param name="type">The constructor ignores the <paramref name="type" /> parameter.</param>
      <param name="srvID">The constructor ignores the <paramref name="srvID" /> parameter.</param>
    </member>
    <member name="P:System.Runtime.Remoting.Channels.Http.HttpRemotingHandler.IsReusable">
      <summary>Gets a Boolean value that indicates whether another request can use the <see cref="T:System.Runtime.Remoting.Channels.Http.HttpRemotingHandler" />.</summary>
      <returns>true for all instances of <see cref="T:System.Runtime.Remoting.Channels.Http.HttpRemotingHandler" />.</returns>
    </member>
    <member name="M:System.Runtime.Remoting.Channels.Http.HttpRemotingHandler.ProcessRequest(System.Web.HttpContext)">
      <summary>Enables processing of HTTP Web requests by the current instance.</summary>
      <param name="context">A <see cref="T:System.Web.HttpContext" /> that provides references to the intrinsic server objects (for example, Request, Response, Session, and Server) used to service HTTP requests. </param>
    </member>
    <member name="T:System.Runtime.Remoting.Channels.Http.HttpRemotingHandlerFactory">
      <summary>Initializes new instances of the <see cref="T:System.Runtime.Remoting.Channels.Http.HttpRemotingHandler" /> class.</summary>
    </member>
    <member name="M:System.Runtime.Remoting.Channels.Http.HttpRemotingHandlerFactory.#ctor">
      <summary>Creates an instance of <see cref="T:System.Runtime.Remoting.Channels.Http.HttpRemotingHandlerFactory" />.</summary>
    </member>
    <member name="M:System.Runtime.Remoting.Channels.Http.HttpRemotingHandlerFactory.GetHandler(System.Web.HttpContext,System.String,System.String,System.String)">
      <summary>Returns an instance of the <see cref="T:System.Runtime.Remoting.Channels.Http.HttpRemotingHandler" /> class.</summary>
      <returns>A new <see cref="T:System.Runtime.Remoting.Channels.Http.HttpRemotingHandler" /> that processes the request.</returns>
      <param name="context">An instance of the <see cref="T:System.Web.HttpContext" /> class that provides references to intrinsic server objects (for example, Request, Response, Session, and Server) used to service HTTP requests. </param>
      <param name="verb">The HTTP data transfer method (GET or POST) that the client uses. </param>
      <param name="url">The <see cref="P:System.Web.HttpRequest.RawUrl" /> of the requested resource. </param>
      <param name="filePath">The <see cref="P:System.Web.HttpRequest.PhysicalApplicationPath" /> to the requested resource. </param>
    </member>
    <member name="M:System.Runtime.Remoting.Channels.Http.HttpRemotingHandlerFactory.ReleaseHandler(System.Web.IHttpHandler)">
      <summary>Enables a factory to reuse the specified <see cref="T:System.Runtime.Remoting.Channels.Http.HttpRemotingHandler" />.</summary>
      <param name="handler">The <see cref="T:System.Web.IHttpHandler" /> to release. </param>
    </member>
    <member name="T:System.Runtime.Remoting.Channels.Http.HttpServerChannel">
      <summary>Implements a server channel for remote calls that uses the HTTP protocol to transmit messages.</summary>
    </member>
    <member name="M:System.Runtime.Remoting.Channels.Http.HttpServerChannel.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Runtime.Remoting.Channels.Http.HttpServerChannel" /> class.</summary>
    </member>
    <member name="M:System.Runtime.Remoting.Channels.Http.HttpServerChannel.#ctor(System.Collections.IDictionary,System.Runtime.Remoting.Channels.IServerChannelSinkProvider)">
      <summary>Initializes a new instance of the <see cref="T:System.Runtime.Remoting.Channels.Http.HttpServerChannel" /> class with the specified channel properties and sink.</summary>
      <param name="properties">A <see cref="T:System.Collections.IDictionary" /> of the channel properties that hold the configuration information for the current channel. </param>
      <param name="sinkProvider">The <see cref="T:System.Runtime.Remoting.Channels.IServerChannelSinkProvider" /> to use with the new instance of the <see cref="T:System.Runtime.Remoting.Channels.Http.HttpServerChannel" />. </param>
      <exception cref="T:System.ArgumentException">A configuration property was incorrectly formatted. </exception>
    </member>
    <member name="M:System.Runtime.Remoting.Channels.Http.HttpServerChannel.#ctor(System.Int32)">
      <summary>Initializes a new instance of the <see cref="T:System.Runtime.Remoting.Channels.Http.HttpServerChannel" /> class that listens on the specified port.</summary>
      <param name="port">The port on which the channel listens. </param>
    </member>
    <member name="M:System.Runtime.Remoting.Channels.Http.HttpServerChannel.#ctor(System.String,System.Int32)">
      <summary>Initializes a new instance of the <see cref="T:System.Runtime.Remoting.Channels.Http.HttpServerChannel" /> class with the given name and that listens on the specified port.</summary>
      <param name="name">The name of the channel. </param>
      <param name="port">The port on which the channel listens. </param>
    </member>
    <member name="M:System.Runtime.Remoting.Channels.Http.HttpServerChannel.#ctor(System.String,System.Int32,System.Runtime.Remoting.Channels.IServerChannelSinkProvider)">
      <summary>Initializes a new instance of the <see cref="T:System.Runtime.Remoting.Channels.Http.HttpServerChannel" /> class at the specified port with the given name, which listens on the specified port, and uses the specified sink.</summary>
      <param name="name">The name of the channel. </param>
      <param name="port">The port on which the channel listens. </param>
      <param name="sinkProvider">The <see cref="T:System.Runtime.Remoting.Channels.IServerChannelSinkProvider" /> to be used by the channel. </param>
    </member>
    <member name="M:System.Runtime.Remoting.Channels.Http.HttpServerChannel.AddHookChannelUri(System.String)">
      <summary>Adds a URI on which the channel hook must listen.</summary>
      <param name="channelUri">A URI on which the channel hook must listen. </param>
    </member>
    <member name="P:System.Runtime.Remoting.Channels.Http.HttpServerChannel.ChannelData">
      <summary>Gets channel-specific data.</summary>
      <returns>A <see cref="T:System.Runtime.Remoting.Channels.ChannelDataStore" /> instance that contains channel-specific data.</returns>
    </member>
    <member name="P:System.Runtime.Remoting.Channels.Http.HttpServerChannel.ChannelName">
      <summary>Gets the name of the current channel.</summary>
      <returns>A <see cref="T:System.String" /> object that contains the name of the channel.</returns>
    </member>
    <member name="P:System.Runtime.Remoting.Channels.Http.HttpServerChannel.ChannelPriority">
      <summary>Gets the priority of the current channel.</summary>
      <returns>An integer that represents the priority assigned to the channel.</returns>
    </member>
    <member name="P:System.Runtime.Remoting.Channels.Http.HttpServerChannel.ChannelScheme">
      <summary>Gets the type of listener to hook into (for example, "http").</summary>
      <returns>The type of listener to hook into.</returns>
    </member>
    <member name="P:System.Runtime.Remoting.Channels.Http.HttpServerChannel.ChannelSinkChain">
      <summary>Gets the channel sink chain that the current channel is using.</summary>
      <returns>The channel sink chain that the current channel is using.</returns>
    </member>
    <member name="M:System.Runtime.Remoting.Channels.Http.HttpServerChannel.GetChannelUri">
      <summary>Returns the URI of the current channel.</summary>
      <returns>The URI of the current channel.</returns>
    </member>
    <member name="M:System.Runtime.Remoting.Channels.Http.HttpServerChannel.GetUrlsForUri(System.String)">
      <summary>Returns an array of all the URLs for an object with the specified URI, hosted on the current <see cref="T:System.Runtime.Remoting.Channels.Http.HttpChannel" />.</summary>
      <returns>An array of the URLs for an object with the specified URI, hosted on the current <see cref="T:System.Runtime.Remoting.Channels.Http.HttpChannel" />.</returns>
      <param name="objectUri">The URI of the object for which URLs are required. </param>
    </member>
    <member name="P:System.Runtime.Remoting.Channels.Http.HttpServerChannel.Item(System.Object)">
      <summary>Returns the specified channel property.</summary>
      <returns>A <see cref="T:System.Object" /> that represents the channel property specified by <paramref name="key" />.</returns>
      <param name="key">The key of the channel property to retrieve.</param>
    </member>
    <member name="P:System.Runtime.Remoting.Channels.Http.HttpServerChannel.Keys">
      <summary>Gets a <see cref="T:System.Collections.ICollection" /> of keys the channel properties are associated with.</summary>
      <returns>A <see cref="T:System.Collections.ICollection" /> of keys the channel properties are associated with.</returns>
    </member>
    <member name="M:System.Runtime.Remoting.Channels.Http.HttpServerChannel.Parse(System.String,System.String@)">
      <summary>Extracts the channel URI and the remote well-known object URI from the specified URL.</summary>
      <returns>The channel URI.</returns>
      <param name="url">The URL from which to extract the URIs. </param>
      <param name="objectURI">When this method returns, contains a <see cref="T:System.String" /> that holds the URI of the remote well-known object. This parameter is passed uninitialized. </param>
    </member>
    <member name="M:System.Runtime.Remoting.Channels.Http.HttpServerChannel.StartListening(System.Object)">
      <summary>Instructs the current channel to start listening for requests.</summary>
      <param name="data">Should always be null for <see cref="T:System.Runtime.Remoting.Channels.Http.HttpChannel" />. </param>
    </member>
    <member name="M:System.Runtime.Remoting.Channels.Http.HttpServerChannel.StopListening(System.Object)">
      <summary>Instructs the current channel to stop listening for requests.</summary>
      <param name="data">Should always be null for <see cref="T:System.Runtime.Remoting.Channels.Http.HttpChannel" />. </param>
    </member>
    <member name="P:System.Runtime.Remoting.Channels.Http.HttpServerChannel.WantsToListen">
      <summary>Gets a Boolean value that indicates whether <see cref="T:System.Runtime.Remoting.Channels.IChannelReceiverHook" /> wants to be hooked into the outside listener service.</summary>
      <returns>A Boolean value that indicates whether <see cref="T:System.Runtime.Remoting.Channels.IChannelReceiverHook" /> wants to be hooked into the outside listener service.</returns>
    </member>
    <member name="T:System.Runtime.Remoting.Channels.Ipc.IpcChannel">
      <summary>Provides a channel implementation that uses the IPC protocol to transmit messages.</summary>
    </member>
    <member name="M:System.Runtime.Remoting.Channels.Ipc.IpcChannel.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Runtime.Remoting.Channels.Ipc.IpcChannel" /> class, activating only a client channel, and not a server channel.</summary>
    </member>
    <member name="M:System.Runtime.Remoting.Channels.Ipc.IpcChannel.#ctor(System.Collections.IDictionary,System.Runtime.Remoting.Channels.IClientChannelSinkProvider,System.Runtime.Remoting.Channels.IServerChannelSinkProvider)">
      <summary>Initializes a new instance of the <see cref="T:System.Runtime.Remoting.Channels.Ipc.IpcChannel" /> class with the specified configuration properties and sinks.</summary>
      <param name="properties">A <see cref="T:System.Collections.IDictionary" /> collection specifying values for configuration properties to be used by the client and server channels. </param>
      <param name="clientSinkProvider">The <see cref="T:System.Runtime.Remoting.Channels.IClientChannelSinkProvider" /> implementation to be used by the client channel. </param>
      <param name="serverSinkProvider">The <see cref="T:System.Runtime.Remoting.Channels.IServerChannelSinkProvider" /> implementation to be used by the server channel. </param>
    </member>
    <member name="M:System.Runtime.Remoting.Channels.Ipc.IpcChannel.#ctor(System.Collections.IDictionary,System.Runtime.Remoting.Channels.IClientChannelSinkProvider,System.Runtime.Remoting.Channels.IServerChannelSinkProvider,System.Security.AccessControl.CommonSecurityDescriptor)"></member>
    <member name="M:System.Runtime.Remoting.Channels.Ipc.IpcChannel.#ctor(System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.Runtime.Remoting.Channels.Ipc.IpcChannel" /> class with a server channel that listens on the specified IPC port.</summary>
      <param name="portName">The name of the IPC port.</param>
    </member>
    <member name="P:System.Runtime.Remoting.Channels.Ipc.IpcChannel.ChannelData">
      <summary>Gets the channel-specific data.</summary>
      <returns>A <see cref="T:System.Runtime.Remoting.Channels.ChannelDataStore" /> instance that contains channel-specific data.</returns>
    </member>
    <member name="P:System.Runtime.Remoting.Channels.Ipc.IpcChannel.ChannelName">
      <summary>Gets the name of the current channel.</summary>
      <returns>A <see cref="T:System.String" /> that contains the name of the channel.</returns>
    </member>
    <member name="P:System.Runtime.Remoting.Channels.Ipc.IpcChannel.ChannelPriority">
      <summary>Gets the priority of the current channel.</summary>
      <returns>An integer that represents the priority assigned to the channel.</returns>
    </member>
    <member name="M:System.Runtime.Remoting.Channels.Ipc.IpcChannel.CreateMessageSink(System.String,System.Object,System.String@)">
      <summary>Returns a channel message sink that delivers messages to the specified URL or channel data object.</summary>
      <returns>A channel message sink that delivers messages to the specified URL or channel data object.</returns>
      <param name="url">The URL to which the new sink should deliver messages. Can be null. </param>
      <param name="remoteChannelData">The channel data object of the remote host to which the new sink should deliver messages. Can be null. </param>
      <param name="objectURI">When this method returns, contains a URI of the new channel message sink that delivers messages to the specified URL or channel data object. This parameter is passed uninitialized. </param>
    </member>
    <member name="M:System.Runtime.Remoting.Channels.Ipc.IpcChannel.GetUrlsForUri(System.String)">
      <summary>Returns an array of all the URLs for an object with the specified URI, hosted on the current <see cref="T:System.Runtime.Remoting.Channels.Ipc.IpcChannel" />.</summary>
      <returns>An array of the URLs for an object with the specified URI, hosted on the current <see cref="T:System.Runtime.Remoting.Channels.Ipc.IpcChannel" />.</returns>
      <param name="objectURI">The URI of the object for which URLs are required. </param>
    </member>
    <member name="P:System.Runtime.Remoting.Channels.Ipc.IpcChannel.IsSecured">
      <summary>Gets or sets a Boolean value that indicates whether the current channel is secure.</summary>
      <returns>A Boolean value that indicates whether the current instance is secure.</returns>
    </member>
    <member name="M:System.Runtime.Remoting.Channels.Ipc.IpcChannel.Parse(System.String,System.String@)">
      <summary>Extracts the channel URI and the remote well-known object URI from the specified URL.</summary>
      <returns>The URI of the current channel.</returns>
      <param name="url">The URL from which to extract the URI of the remote well-known object. </param>
      <param name="objectURI">When this method returns, contains a <see cref="T:System.String" /> that holds the URI of the remote well-known object. This parameter is passed uninitialized. </param>
    </member>
    <member name="M:System.Runtime.Remoting.Channels.Ipc.IpcChannel.StartListening(System.Object)">
      <summary>Instructs the current channel to start listening for requests.</summary>
      <param name="data">Optional initialization information. </param>
    </member>
    <member name="M:System.Runtime.Remoting.Channels.Ipc.IpcChannel.StopListening(System.Object)">
      <summary>Instructs the current channel to stop listening for requests.</summary>
      <param name="data">Optional state information for the channel. </param>
    </member>
    <member name="T:System.Runtime.Remoting.Channels.Ipc.IpcClientChannel">
      <summary>Implements a client channel for remote calls that uses the IPC protocol to transmit messages.</summary>
    </member>
    <member name="M:System.Runtime.Remoting.Channels.Ipc.IpcClientChannel.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Runtime.Remoting.Channels.Ipc.IpcServerChannel" /> class.</summary>
    </member>
    <member name="M:System.Runtime.Remoting.Channels.Ipc.IpcClientChannel.#ctor(System.Collections.IDictionary,System.Runtime.Remoting.Channels.IClientChannelSinkProvider)">
      <summary>Initializes a new instance of the <see cref="T:System.Runtime.Remoting.Channels.Ipc.IpcClientChannel" /> class with the specified configuration properties and sink.</summary>
      <param name="properties">A <see cref="T:System.Collections.IDictionary" /> collection that specifies values for configuration properties to be used by the channel.</param>
      <param name="sinkProvider">The <see cref="T:System.Runtime.Remoting.Channels.IServerChannelSinkProvider" /> implementation to be used by the channel.</param>
    </member>
    <member name="M:System.Runtime.Remoting.Channels.Ipc.IpcClientChannel.#ctor(System.String,System.Runtime.Remoting.Channels.IClientChannelSinkProvider)">
      <summary>Initializes a new instance of the <see cref="T:System.Runtime.Remoting.Channels.Ipc.IpcClientChannel" /> class with the specified name and sink.</summary>
      <param name="name">The name of the channel.</param>
      <param name="sinkProvider">The <see cref="T:System.Runtime.Remoting.Channels.IClientChannelSinkProvider" /> implementation to be used by the channel.</param>
    </member>
    <member name="P:System.Runtime.Remoting.Channels.Ipc.IpcClientChannel.ChannelName">
      <summary>Gets the name of the current channel.</summary>
      <returns>A <see cref="T:System.String" /> instance that contains the name of the channel.</returns>
    </member>
    <member name="P:System.Runtime.Remoting.Channels.Ipc.IpcClientChannel.ChannelPriority">
      <summary>Gets the priority of the current channel.</summary>
      <returns>An integer that indicates the priority assigned to the channel.</returns>
    </member>
    <member name="M:System.Runtime.Remoting.Channels.Ipc.IpcClientChannel.CreateMessageSink(System.String,System.Object,System.String@)">
      <summary>Returns a channel message sink that delivers messages to the specified URL or channel data object.</summary>
      <returns>A channel message sink that delivers messages to the specified URL or channel data object.</returns>
      <param name="url">The URL to which the new sink delivers messages. This parameter can be null.</param>
      <param name="remoteChannelData">The channel data object of the remote host to which the new sink will deliver messages. This parameter can be null. </param>
      <param name="objectURI">When this method returns, contains the URI of the new channel message sink that delivers messages to the specified URL or channel data object. This parameter is passed uninitialized.</param>
      <exception cref="T:System.Runtime.Remoting.RemotingException">The provided sink does not implement <see cref="T:System.Runtime.Remoting.Messaging.IMessageSink" />.</exception>
    </member>
    <member name="P:System.Runtime.Remoting.Channels.Ipc.IpcClientChannel.IsSecured">
      <summary>Gets or sets a Boolean value that indicates whether the current channel is secure.</summary>
      <returns>A Boolean value that indicates whether the current instance is secure.</returns>
    </member>
    <member name="M:System.Runtime.Remoting.Channels.Ipc.IpcClientChannel.Parse(System.String,System.String@)">
      <summary>Extracts the channel URI and the remote well-known object URI from the specified URL.</summary>
      <returns>A <see cref="T:System.String" /> that contains the channel URI.</returns>
      <param name="url">The URL from which to extract the object URI.</param>
      <param name="objectURI">When this method returns, a <see cref="T:System.String" /> instance that holds the URI of the remote well-known object. This parameter is passed uninitialized.</param>
    </member>
    <member name="T:System.Runtime.Remoting.Channels.Ipc.IpcServerChannel">
      <summary>Implements a server channel for remote calls that uses the IPC system to transmit messages.</summary>
    </member>
    <member name="M:System.Runtime.Remoting.Channels.Ipc.IpcServerChannel.#ctor(System.Collections.IDictionary,System.Runtime.Remoting.Channels.IServerChannelSinkProvider)">
      <summary>Initializes a new instance of the <see cref="T:System.Runtime.Remoting.Channels.Ipc.IpcServerChannel" /> class with the specified channel properties and sink.</summary>
      <param name="properties">A <see cref="T:System.Collections.IDictionary" /> collection that specifies values for configuration properties to be used by the channel.</param>
      <param name="sinkProvider">The <see cref="T:System.Runtime.Remoting.Channels.IServerChannelSinkProvider" /> implementation to be used by the channel.</param>
    </member>
    <member name="M:System.Runtime.Remoting.Channels.Ipc.IpcServerChannel.#ctor(System.Collections.IDictionary,System.Runtime.Remoting.Channels.IServerChannelSinkProvider,System.Security.AccessControl.CommonSecurityDescriptor)">
      <summary>Initializes a new instance of the <see cref="T:System.Runtime.Remoting.Channels.Ipc.IpcServerChannel" /> class with the specified channel properties, sink, and security descriptor.</summary>
      <param name="properties">A <see cref="T:System.Collections.IDictionary" /> collection that specifies values for configuration properties to be used by the channel.</param>
      <param name="sinkProvider">The <see cref="T:System.Runtime.Remoting.Channels.IServerChannelSinkProvider" /> implementation to be used by the channel.</param>
      <param name="securityDescriptor">A <see cref="T:System.Security.AccessControl.CommonSecurityDescriptor" /> to be used by the channel.</param>
    </member>
    <member name="M:System.Runtime.Remoting.Channels.Ipc.IpcServerChannel.#ctor(System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.Runtime.Remoting.Channels.Ipc.IpcServerChannel" /> class with the specified IPC port name.</summary>
      <param name="portName">The name of the IPC port to be used by the channel.</param>
    </member>
    <member name="M:System.Runtime.Remoting.Channels.Ipc.IpcServerChannel.#ctor(System.String,System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.Runtime.Remoting.Channels.Ipc.IpcServerChannel" /> class with the specified channel name and IPC port name.</summary>
      <param name="name">The name of the channel.</param>
      <param name="portName">The name of the IPC port to be used by the channel.</param>
    </member>
    <member name="M:System.Runtime.Remoting.Channels.Ipc.IpcServerChannel.#ctor(System.String,System.String,System.Runtime.Remoting.Channels.IServerChannelSinkProvider)">
      <summary>Initializes a new instance of the <see cref="T:System.Runtime.Remoting.Channels.Ipc.IpcServerChannel" /> class with the specified channel name, IPC port name, and sink.</summary>
      <param name="name">The name of the channel.</param>
      <param name="portName">The name of the IPC port to be used by the channel.</param>
      <param name="sinkProvider">The <see cref="T:System.Runtime.Remoting.Channels.IServerChannelSinkProvider" /> implementation to be used by the channel.</param>
    </member>
    <member name="P:System.Runtime.Remoting.Channels.Ipc.IpcServerChannel.ChannelData">
      <summary>Gets channel-specific data.</summary>
      <returns>A <see cref="T:System.Runtime.Remoting.Channels.ChannelDataStore" /> instance that contains channel-specific data.</returns>
    </member>
    <member name="P:System.Runtime.Remoting.Channels.Ipc.IpcServerChannel.ChannelName">
      <summary>Gets the name of the current channel.</summary>
      <returns>A <see cref="T:System.String" /> instance that contains the name of the channel.</returns>
    </member>
    <member name="P:System.Runtime.Remoting.Channels.Ipc.IpcServerChannel.ChannelPriority">
      <summary>Gets the priority of the current channel.</summary>
      <returns>An integer that indicates the priority assigned to the channel.</returns>
    </member>
    <member name="M:System.Runtime.Remoting.Channels.Ipc.IpcServerChannel.GetChannelUri">
      <summary>Returns the URI of the current channel.</summary>
      <returns>A <see cref="T:System.String" /> that contains the URI of the channel.</returns>
    </member>
    <member name="M:System.Runtime.Remoting.Channels.Ipc.IpcServerChannel.GetUrlsForUri(System.String)">
      <summary>Returns an array of all the URLs for the object with the specified URI, hosted on the current <see cref="T:System.Runtime.Remoting.Channels.Ipc.IpcChannel" /> instance.</summary>
      <returns>An array of the URLs for an object with the specified URI, hosted on the current <see cref="T:System.Runtime.Remoting.Channels.Tcp.TcpChannel" /> instance.</returns>
      <param name="objectUri">The URI of the object for which URLs are required.</param>
    </member>
    <member name="P:System.Runtime.Remoting.Channels.Ipc.IpcServerChannel.IsSecured">
      <summary>Gets or sets a Boolean value that indicates whether the current channel is secure.</summary>
      <returns>A Boolean value that indicates whether the current instance is secure.</returns>
    </member>
    <member name="M:System.Runtime.Remoting.Channels.Ipc.IpcServerChannel.Parse(System.String,System.String@)">
      <summary>Extracts the channel URI and the remote well-known object URI from the specified URL.</summary>
      <returns>The URI of the current channel.</returns>
      <param name="url">The URL from which to extract the URI of the remote well-known object.</param>
      <param name="objectURI">When this method returns, contains a <see cref="T:System.String" /> instance that holds the URI of the remote well-known object. </param>
    </member>
    <member name="M:System.Runtime.Remoting.Channels.Ipc.IpcServerChannel.StartListening(System.Object)">
      <summary>Instructs the current channel to start listening for requests.</summary>
      <param name="data">An object that specifies an initialization state, or null, if you do not want to pass a specific state to the channel.</param>
      <exception cref="T:System.Exception">The specified listening port is not available.</exception>
    </member>
    <member name="M:System.Runtime.Remoting.Channels.Ipc.IpcServerChannel.StopListening(System.Object)">
      <summary>Instructs the current channel to stop listening for requests.</summary>
      <param name="data">An object that specifies an initialization state, or null, if you do not want to pass a specific state to the channel.</param>
    </member>
    <member name="T:System.Runtime.Remoting.Channels.Tcp.TcpChannel">
      <summary>Provides a channel implementation that uses the TCP protocol to transmit messages.</summary>
    </member>
    <member name="M:System.Runtime.Remoting.Channels.Tcp.TcpChannel.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Runtime.Remoting.Channels.Tcp.TcpChannel" /> class, activating only a client channel, and not a server channel.</summary>
    </member>
    <member name="M:System.Runtime.Remoting.Channels.Tcp.TcpChannel.#ctor(System.Collections.IDictionary,System.Runtime.Remoting.Channels.IClientChannelSinkProvider,System.Runtime.Remoting.Channels.IServerChannelSinkProvider)">
      <summary>Initializes a new instance of the <see cref="T:System.Runtime.Remoting.Channels.Tcp.TcpChannel" /> class with the specified configuration properties and sinks.</summary>
      <param name="properties">A <see cref="T:System.Collections.IDictionary" /> collection that specifies values for configuration properties to be used by the client and server channels. </param>
      <param name="clientSinkProvider">The <see cref="T:System.Runtime.Remoting.Channels.IClientChannelSinkProvider" /> implementation to be used by the client channel. </param>
      <param name="serverSinkProvider">The <see cref="T:System.Runtime.Remoting.Channels.IServerChannelSinkProvider" /> implementation to be used by the server channel. </param>
      <exception cref="T:System.ArgumentException">A provided channel property was improperly formatted. </exception>
    </member>
    <member name="M:System.Runtime.Remoting.Channels.Tcp.TcpChannel.#ctor(System.Int32)">
      <summary>Initializes a new instance of the <see cref="T:System.Runtime.Remoting.Channels.Tcp.TcpChannel" /> class with a server channel that listens on the specified port.</summary>
      <param name="port">The port on which the server channel listens. </param>
    </member>
    <member name="P:System.Runtime.Remoting.Channels.Tcp.TcpChannel.ChannelData">
      <summary>Gets the channel-specific data.</summary>
      <returns>A <see cref="T:System.Runtime.Remoting.Channels.ChannelDataStore" /> instance that contains channel-specific data.</returns>
    </member>
    <member name="P:System.Runtime.Remoting.Channels.Tcp.TcpChannel.ChannelName">
      <summary>Gets the name of the current channel.</summary>
      <returns>A <see cref="T:System.String" /> that contains the name of the channel.</returns>
    </member>
    <member name="P:System.Runtime.Remoting.Channels.Tcp.TcpChannel.ChannelPriority">
      <summary>Gets the priority of the current channel.</summary>
      <returns>An integer that represents the priority assigned to the channel.</returns>
    </member>
    <member name="M:System.Runtime.Remoting.Channels.Tcp.TcpChannel.CreateMessageSink(System.String,System.Object,System.String@)">
      <summary>Returns a channel message sink that delivers messages to the specified URL or channel data object.</summary>
      <returns>A channel message sink that delivers messages to the specified URL or channel data object.</returns>
      <param name="url">The URL to which the new sink should deliver messages. Can be null. </param>
      <param name="remoteChannelData">The channel data object of the remote host to which the new sink should deliver messages. Can be null. </param>
      <param name="objectURI">When this method returns, contains a URI of the new channel message sink that delivers messages to the specified URL or channel data object. This parameter is passed uninitialized. </param>
    </member>
    <member name="M:System.Runtime.Remoting.Channels.Tcp.TcpChannel.GetUrlsForUri(System.String)">
      <summary>Returns an array of all the URLs for an object with the specified URI, hosted on the current <see cref="T:System.Runtime.Remoting.Channels.Tcp.TcpChannel" />.</summary>
      <returns>An array of the URLs for an object with the specified URI, hosted on the current <see cref="T:System.Runtime.Remoting.Channels.Tcp.TcpChannel" />.</returns>
      <param name="objectURI">The URI of the object for which URLs are required. </param>
    </member>
    <member name="P:System.Runtime.Remoting.Channels.Tcp.TcpChannel.IsSecured">
      <summary>Gets or sets a Boolean value that indicates whether the current channel is secure.</summary>
      <returns>A Boolean value that indicates whether the current instance is secure.</returns>
    </member>
    <member name="M:System.Runtime.Remoting.Channels.Tcp.TcpChannel.Parse(System.String,System.String@)">
      <summary>Extracts the channel URI and the remote well-known object URI from the specified URL.</summary>
      <returns>The URI of the current channel.</returns>
      <param name="url">The URL from which to extract the URI of the remote well-known object. </param>
      <param name="objectURI">When this method returns, contains a <see cref="T:System.String" /> that holds the URI of the remote well-known object. This parameter is passed uninitialized. </param>
    </member>
    <member name="M:System.Runtime.Remoting.Channels.Tcp.TcpChannel.StartListening(System.Object)">
      <summary>Instructs the current channel to start listening for requests.</summary>
      <param name="data">Optional initialization information. </param>
    </member>
    <member name="M:System.Runtime.Remoting.Channels.Tcp.TcpChannel.StopListening(System.Object)">
      <summary>Instructs the current channel to stop listening for requests.</summary>
      <param name="data">Optional state information for the channel. </param>
    </member>
    <member name="T:System.Runtime.Remoting.Channels.Tcp.TcpClientChannel">
      <summary>For remote calls, implements a client channel that uses the TCP protocol to transmit messages.</summary>
    </member>
    <member name="M:System.Runtime.Remoting.Channels.Tcp.TcpClientChannel.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Runtime.Remoting.Channels.Tcp.TcpClientChannel" /> class.</summary>
    </member>
    <member name="M:System.Runtime.Remoting.Channels.Tcp.TcpClientChannel.#ctor(System.Collections.IDictionary,System.Runtime.Remoting.Channels.IClientChannelSinkProvider)">
      <summary>Initializes a new instance of the <see cref="T:System.Runtime.Remoting.Channels.Tcp.TcpClientChannel" /> class with the specified configuration properties and sink.</summary>
      <param name="properties">A <see cref="T:System.Collections.IDictionary" /> collection that specifies values for configuration properties to be used by the channel. </param>
      <param name="sinkProvider">The <see cref="T:System.Runtime.Remoting.Channels.IServerChannelSinkProvider" /> implementation to be used by the channel. </param>
      <exception cref="T:System.ArgumentException">A configuration property was incorrectly formatted. </exception>
    </member>
    <member name="M:System.Runtime.Remoting.Channels.Tcp.TcpClientChannel.#ctor(System.String,System.Runtime.Remoting.Channels.IClientChannelSinkProvider)">
      <summary>Initializes a new instance of the <see cref="T:System.Runtime.Remoting.Channels.Tcp.TcpClientChannel" /> class with the specified name and sink.</summary>
      <param name="name">The name of the channel. </param>
      <param name="sinkProvider">The <see cref="T:System.Runtime.Remoting.Channels.IClientChannelSinkProvider" /> implementation to be used by the channel. </param>
    </member>
    <member name="P:System.Runtime.Remoting.Channels.Tcp.TcpClientChannel.ChannelName">
      <summary>Gets the name of the current channel.</summary>
      <returns>A <see cref="T:System.String" /> instance that contains the name of the channel.</returns>
    </member>
    <member name="P:System.Runtime.Remoting.Channels.Tcp.TcpClientChannel.ChannelPriority">
      <summary>Gets the priority of the current channel.</summary>
      <returns>An integer that represents the priority assigned to the channel.</returns>
    </member>
    <member name="M:System.Runtime.Remoting.Channels.Tcp.TcpClientChannel.CreateMessageSink(System.String,System.Object,System.String@)">
      <summary>Returns a channel message sink that delivers messages to the specified URL or channel data object.</summary>
      <returns>A channel message sink that delivers messages to the specified URL or channel data object.</returns>
      <param name="url">The URL to which the new sink delivers messages. Can be null. </param>
      <param name="remoteChannelData">The channel data object of the remote host to which the new sink will deliver messages. Can be null. </param>
      <param name="objectURI">When this method returns, contains a URI of the new channel message sink that delivers messages to the specified URL or channel data object. This parameter is passed uninitialized. </param>
    </member>
    <member name="P:System.Runtime.Remoting.Channels.Tcp.TcpClientChannel.IsSecured">
      <summary>Gets or sets a Boolean value that indicates whether the current channel is secure</summary>
      <returns>A Boolean value that indicates whether the current instance is secure.</returns>
    </member>
    <member name="M:System.Runtime.Remoting.Channels.Tcp.TcpClientChannel.Parse(System.String,System.String@)">
      <summary>Extracts the channel URI and the remote well-known object URI from the specified URL.</summary>
      <returns>The channel URI.</returns>
      <param name="url">The URL from which to extract the URIs. </param>
      <param name="objectURI">When this method returns, contains a <see cref="T:System.String" /> instance that holds the URI of the remote well-known object. This parameter is passed uninitialized. </param>
    </member>
    <member name="T:System.Runtime.Remoting.Channels.Tcp.TcpServerChannel">
      <summary>Implements a server channel for remote calls that uses the TCP protocol to transmit messages.</summary>
    </member>
    <member name="M:System.Runtime.Remoting.Channels.Tcp.TcpServerChannel.#ctor(System.Collections.IDictionary,System.Runtime.Remoting.Channels.IServerChannelSinkProvider)">
      <summary>Initializes a new instance of the <see cref="T:System.Runtime.Remoting.Channels.Tcp.TcpServerChannel" /> class with the specified channel properties and sink.</summary>
      <param name="properties">A <see cref="T:System.Collections.IDictionary" /> collection specifying values for configuration properties to be used by the channel. </param>
      <param name="sinkProvider">The <see cref="T:System.Runtime.Remoting.Channels.IServerChannelSinkProvider" /> implementation to be used by the channel. </param>
      <exception cref="T:System.ArgumentException">A provided channel property was badly formatted. </exception>
    </member>
    <member name="M:System.Runtime.Remoting.Channels.Tcp.TcpServerChannel.#ctor(System.Collections.IDictionary,System.Runtime.Remoting.Channels.IServerChannelSinkProvider,System.Runtime.Remoting.Channels.IAuthorizeRemotingConnection)">
      <summary>Initializes a new instance of the <see cref="T:System.Runtime.Remoting.Channels.Tcp.TcpServerChannel" /> class with the specified channel properties, sink, and authorization provider.</summary>
      <param name="properties">A <see cref="T:System.Collections.IDictionary" /> collection that specifies values for configuration properties to be used by the channel. </param>
      <param name="sinkProvider">The <see cref="T:System.Runtime.Remoting.Channels.IServerChannelSinkProvider" /> implementation to be used by the channel. </param>
      <param name="authorizeCallback">The <see cref="T:System.Runtime.Remoting.Channels.IAuthorizeRemotingConnection" /> implementation to be used by the channel.</param>
      <exception cref="T:System.ArgumentException">A provided channel property was badly formatted. </exception>
    </member>
    <member name="M:System.Runtime.Remoting.Channels.Tcp.TcpServerChannel.#ctor(System.Int32)">
      <summary>Initializes a new instance of the <see cref="T:System.Runtime.Remoting.Channels.Tcp.TcpServerChannel" /> class that listens on the specified port.</summary>
      <param name="port">The port on which the channel listens. </param>
    </member>
    <member name="M:System.Runtime.Remoting.Channels.Tcp.TcpServerChannel.#ctor(System.String,System.Int32)">
      <summary>Initializes a new instance of the <see cref="T:System.Runtime.Remoting.Channels.Tcp.TcpServerChannel" /> class with the given name and that listens on the specified port.</summary>
      <param name="name">The name of the channel. </param>
      <param name="port">The port on which the channel listens. </param>
    </member>
    <member name="M:System.Runtime.Remoting.Channels.Tcp.TcpServerChannel.#ctor(System.String,System.Int32,System.Runtime.Remoting.Channels.IServerChannelSinkProvider)">
      <summary>Initializes a new instance of the <see cref="T:System.Runtime.Remoting.Channels.Tcp.TcpServerChannel" /> class with the given name, which listens on the specified port, and uses the specified sink.</summary>
      <param name="name">The name of the channel. </param>
      <param name="port">The port on which the channel listens. </param>
      <param name="sinkProvider">The <see cref="T:System.Runtime.Remoting.Channels.IServerChannelSinkProvider" /> implementation to be used by the channel. </param>
    </member>
    <member name="P:System.Runtime.Remoting.Channels.Tcp.TcpServerChannel.ChannelData">
      <summary>Gets channel-specific data.</summary>
      <returns>A <see cref="T:System.Runtime.Remoting.Channels.ChannelDataStore" /> instance containing channel-specific data.</returns>
    </member>
    <member name="P:System.Runtime.Remoting.Channels.Tcp.TcpServerChannel.ChannelName">
      <summary>Gets the name of the current channel.</summary>
      <returns>A <see cref="T:System.String" /> instance that contains the name of the channel.</returns>
    </member>
    <member name="P:System.Runtime.Remoting.Channels.Tcp.TcpServerChannel.ChannelPriority">
      <summary>Gets the priority of the current channel.</summary>
      <returns>An integer that represents the priority assigned to the channel.</returns>
    </member>
    <member name="M:System.Runtime.Remoting.Channels.Tcp.TcpServerChannel.GetChannelUri">
      <summary>Returns the URI of the current channel.</summary>
      <returns>The URI of the current channel.</returns>
    </member>
    <member name="M:System.Runtime.Remoting.Channels.Tcp.TcpServerChannel.GetUrlsForUri(System.String)">
      <summary>Returns an array of all the URLs for an object with the specified URI, hosted on the current <see cref="T:System.Runtime.Remoting.Channels.Tcp.TcpChannel" /> instance.</summary>
      <returns>An array of the URLs for an object with the specified URI, hosted on the current <see cref="T:System.Runtime.Remoting.Channels.Tcp.TcpChannel" /> instance.</returns>
      <param name="objectUri">The URI of the object for which URLs are required. </param>
    </member>
    <member name="P:System.Runtime.Remoting.Channels.Tcp.TcpServerChannel.IsSecured">
      <summary>Gets or sets a Boolean value that indicates whether the current channel is secure.</summary>
      <returns>A Boolean value that indicates whether the current instance is secure.</returns>
    </member>
    <member name="M:System.Runtime.Remoting.Channels.Tcp.TcpServerChannel.Parse(System.String,System.String@)">
      <summary>Extracts the channel URI and the remote well-known object URI from the specified URL.</summary>
      <returns>The URI of the current channel.</returns>
      <param name="url">The URL from which to extract the URI of the remote well-known object. </param>
      <param name="objectURI">When this method returns, contains a <see cref="T:System.String" /> instance that holds the URI of the remote well-known object. This parameter is passed uninitialized. </param>
    </member>
    <member name="M:System.Runtime.Remoting.Channels.Tcp.TcpServerChannel.StartListening(System.Object)">
      <summary>Instructs the current channel to start listening for requests.</summary>
      <param name="data">Optional initialization information. </param>
    </member>
    <member name="M:System.Runtime.Remoting.Channels.Tcp.TcpServerChannel.StopListening(System.Object)">
      <summary>Instructs the current channel to stop listening for requests.</summary>
      <param name="data">Optional state information for the channel. </param>
    </member>
    <member name="T:System.Runtime.Remoting.MetadataServices.MetaData">
      <summary>Provides methods that allow you to work with XML schema.</summary>
    </member>
    <member name="M:System.Runtime.Remoting.MetadataServices.MetaData.#ctor">
      <summary>Creates an instance of <see cref="T:System.Runtime.Remoting.MetadataServices.MetaData" />.</summary>
    </member>
    <member name="M:System.Runtime.Remoting.MetadataServices.MetaData.ConvertCodeSourceFileToAssemblyFile(System.String,System.String,System.String)">
      <summary>Compiles a specified code source file into a runtime assembly file.</summary>
      <param name="codePath">The path to the file that contains the source code. </param>
      <param name="assemblyPath">The location where the new run-time assembly is generated. </param>
      <param name="strongNameFilename">The strong name to compile into the new assembly. Can be <see cref="F:System.String.Empty" />. </param>
    </member>
    <member name="M:System.Runtime.Remoting.MetadataServices.MetaData.ConvertCodeSourceStreamToAssemblyFile(System.Collections.ArrayList,System.String,System.String)">
      <summary>Compiles specified code source streams into a run-time assembly file.</summary>
      <param name="outCodeStreamList">A <see cref="T:System.Collections.ArrayList" /> of streams with the source code. </param>
      <param name="assemblyPath">The location where the new run-time assembly is generated. </param>
      <param name="strongNameFilename">The strong name to compile into the new run-time assembly. Can be <see cref="F:System.String.Empty" />. </param>
    </member>
    <member name="M:System.Runtime.Remoting.MetadataServices.MetaData.ConvertSchemaStreamToCodeSourceStream(System.Boolean,System.String,System.IO.Stream,System.Collections.ArrayList)">
      <summary>Converts the specified schema definition into C# proxy source code.</summary>
      <param name="clientProxy">Indicates the type of proxy to generate. If true, generates a simple proxy (also known as wrapped proxy) that automatically loads the channels, exposes all the methods of the remote object, and provides access to the channel properties. If false, generates a transparent proxy that exposes all the methods of the remote object. </param>
      <param name="outputDirectory">The directory where the new C# source code files with the proxy are created. </param>
      <param name="inputStream">The input stream that contains the schema definition in Web Services Description Language (WSDL) format. </param>
      <param name="outCodeStreamList">The list of file names for the code streams that are generated. Note that the <see cref="M:System.Runtime.Remoting.MetadataServices.MetaData.ConvertSchemaStreamToCodeSourceStream(System.Boolean,System.String,System.IO.Stream,System.Collections.ArrayList,System.String,System.String)" /> method can create multiple source code streams. </param>
    </member>
    <member name="M:System.Runtime.Remoting.MetadataServices.MetaData.ConvertSchemaStreamToCodeSourceStream(System.Boolean,System.String,System.IO.Stream,System.Collections.ArrayList,System.String)">
      <summary>Converts the specified schema definition into C# proxy source code for a remote object that is located at the specified URL.</summary>
      <param name="clientProxy">Indicates the type of proxy to generate. If true, generates a simple proxy (also known as wrapped proxy) that automatically loads the channels, exposes all the methods of the remote object, and provides access to the channel properties. If false, generates a transparent proxy that exposes all the methods of the remote object. </param>
      <param name="outputDirectory">The directory where the new C# source code files with the proxy are created. </param>
      <param name="inputStream">The input stream that contains the schema definition in Web Services Description Language (WSDL) format. </param>
      <param name="outCodeStreamList">The list of file names for the code streams that are generated. Note that the <see cref="M:System.Runtime.Remoting.MetadataServices.MetaData.ConvertSchemaStreamToCodeSourceStream(System.Boolean,System.String,System.IO.Stream,System.Collections.ArrayList,System.String,System.String)" /> method can create multiple source code streams. </param>
      <param name="proxyUrl">The URL where the target remote object that is represented by the new proxy will be located. </param>
    </member>
    <member name="M:System.Runtime.Remoting.MetadataServices.MetaData.ConvertSchemaStreamToCodeSourceStream(System.Boolean,System.String,System.IO.Stream,System.Collections.ArrayList,System.String,System.String)">
      <summary>Converts the specified schema definition into C# proxy source code for a remote object that is located at the specified URL and in the provided class namespace.</summary>
      <param name="clientProxy">Indicates the type of proxy to generate. If true, generates a simple proxy (also known as wrapped proxy) that automatically loads the channels, exposes all the methods of the remote object, and provides access to the channel properties. If false, generates a transparent proxy that exposes all the methods of the remote object. </param>
      <param name="outputDirectory">The directory where the new C# source code files with the proxy are created. </param>
      <param name="inputStream">The input stream containing the schema definition in Web Services Description Language (WSDL) format. </param>
      <param name="outCodeStreamList">The list of file names for the code streams that are generated. Note that the <see cref="M:System.Runtime.Remoting.MetadataServices.MetaData.ConvertSchemaStreamToCodeSourceStream(System.Boolean,System.String,System.IO.Stream,System.Collections.ArrayList,System.String,System.String)" /> method can create multiple source code streams. </param>
      <param name="proxyUrl">The URL where the target remote object that is represented by the new proxy will be located. </param>
      <param name="proxyNamespace">The namespace of the newly created proxy. </param>
    </member>
    <member name="M:System.Runtime.Remoting.MetadataServices.MetaData.ConvertTypesToSchemaToFile(System.Runtime.Remoting.MetadataServices.ServiceType[],System.Runtime.Remoting.MetadataServices.SdlType,System.String)">
      <summary>Converts the specified service types to XML schema, and writes it to a file that is specified by name.</summary>
      <param name="types">The <see cref="T:System.Runtime.Remoting.MetadataServices.ServiceType" /> instances to convert to XML schema. </param>
      <param name="sdlType">The type of service description language to use for the XML schema. </param>
      <param name="path">The path of the XML file. </param>
    </member>
    <member name="M:System.Runtime.Remoting.MetadataServices.MetaData.ConvertTypesToSchemaToFile(System.Type[],System.Runtime.Remoting.MetadataServices.SdlType,System.String)">
      <summary>Converts the specified object types to XML schema, and writes it to a file that is specified by name.</summary>
      <param name="types">The object types to convert to XML schema. </param>
      <param name="sdlType">The type of service description language to use for the XML schema. </param>
      <param name="path">The path of the XML file. </param>
    </member>
    <member name="M:System.Runtime.Remoting.MetadataServices.MetaData.ConvertTypesToSchemaToStream(System.Runtime.Remoting.MetadataServices.ServiceType[],System.Runtime.Remoting.MetadataServices.SdlType,System.IO.Stream)">
      <summary>Converts the specified service types to XML schema, and writes it to a specified stream.</summary>
      <param name="serviceTypes">The <see cref="T:System.Runtime.Remoting.MetadataServices.ServiceType" /> instances to convert to XML schema. </param>
      <param name="sdlType">The type of service description language to use for the XML schema. </param>
      <param name="outputStream">The <see cref="T:System.IO.Stream" /> that the schema is written to. </param>
    </member>
    <member name="M:System.Runtime.Remoting.MetadataServices.MetaData.ConvertTypesToSchemaToStream(System.Type[],System.Runtime.Remoting.MetadataServices.SdlType,System.IO.Stream)">
      <summary>Converts the specified object types to XML schema, and writes it to a specified stream.</summary>
      <param name="types">The object types to convert to XML schema. </param>
      <param name="sdlType">The type of service description language to use for the XML schema. </param>
      <param name="outputStream">The <see cref="T:System.IO.Stream" /> that the schema is written to. </param>
    </member>
    <member name="M:System.Runtime.Remoting.MetadataServices.MetaData.RetrieveSchemaFromUrlToFile(System.String,System.String)">
      <summary>Downloads the XML schema from a URL, and writes it to the specified file.</summary>
      <param name="url">The URL where the XML schema is located. </param>
      <param name="path">The path of the file that the schema is written to. </param>
    </member>
    <member name="M:System.Runtime.Remoting.MetadataServices.MetaData.RetrieveSchemaFromUrlToStream(System.String,System.IO.Stream)">
      <summary>Downloads the XML schema from a URL, and writes it to the specified stream.</summary>
      <param name="url">The URL where the XML schema is located. </param>
      <param name="outputStream">The <see cref="T:System.IO.Stream" /> that the schema is written to. </param>
    </member>
    <member name="M:System.Runtime.Remoting.MetadataServices.MetaData.SaveStreamToFile(System.IO.Stream,System.String)">
      <summary>Saves the input stream to a file with the specified name.</summary>
      <param name="inputStream">The stream to write to the specified file. </param>
      <param name="path">The file that the input stream is written to. </param>
    </member>
    <member name="T:System.Runtime.Remoting.MetadataServices.SdlChannelSink">
      <summary>Provides the implementation for a server channel sink that generates Web Services Description Language (WSDL) dynamically on the server.</summary>
    </member>
    <member name="M:System.Runtime.Remoting.MetadataServices.SdlChannelSink.#ctor(System.Runtime.Remoting.Channels.IChannelReceiver,System.Runtime.Remoting.Channels.IServerChannelSink)">
      <summary>Initializes a new instance of the <see cref="T:System.Runtime.Remoting.MetadataServices.SdlChannelSink" /> class.</summary>
      <param name="receiver">Indicates the channel that will receive the messages serialized by the new instance of <see cref="T:System.Runtime.Remoting.MetadataServices.SdlChannelSink" />. </param>
      <param name="nextSink">The next sink in the sink chain. </param>
    </member>
    <member name="M:System.Runtime.Remoting.MetadataServices.SdlChannelSink.AsyncProcessResponse(System.Runtime.Remoting.Channels.IServerResponseChannelSinkStack,System.Object,System.Runtime.Remoting.Messaging.IMessage,System.Runtime.Remoting.Channels.ITransportHeaders,System.IO.Stream)">
      <summary>Requests processing from the current sink of the response from a method call that was sent asynchronously.</summary>
      <param name="sinkStack">A stack of sinks that lead back to the server transport sink. </param>
      <param name="state">Information associated with the current sink, generated on the request side, and needed on the response side. </param>
      <param name="msg">The response message. </param>
      <param name="headers">The headers to add to the return message heading to the client. </param>
      <param name="stream">The stream heading back to the transport sink. </param>
    </member>
    <member name="M:System.Runtime.Remoting.MetadataServices.SdlChannelSink.GetResponseStream(System.Runtime.Remoting.Channels.IServerResponseChannelSinkStack,System.Object,System.Runtime.Remoting.Messaging.IMessage,System.Runtime.Remoting.Channels.ITransportHeaders)">
      <summary>Returns the <see cref="T:System.IO.Stream" /> onto which the provided response message is to be serialized.</summary>
      <returns>The <see cref="T:System.IO.Stream" /> onto which the provided response message is to be serialized.</returns>
      <param name="sinkStack">A stack of sinks that lead back to the server transport sink. </param>
      <param name="state">Information associated with the current sink, generated on the request side, and needed on the response side. </param>
      <param name="msg">The response message to serialize. </param>
      <param name="headers">The headers to put in the response stream to the client. </param>
    </member>
    <member name="P:System.Runtime.Remoting.MetadataServices.SdlChannelSink.NextChannelSink">
      <summary>Gets the next <see cref="T:System.Runtime.Remoting.Channels.IServerChannelSink" /> in the sink chain.</summary>
      <returns>The next <see cref="T:System.Runtime.Remoting.Channels.IServerChannelSink" /> in the sink chain.</returns>
    </member>
    <member name="M:System.Runtime.Remoting.MetadataServices.SdlChannelSink.ProcessMessage(System.Runtime.Remoting.Channels.IServerChannelSinkStack,System.Runtime.Remoting.Messaging.IMessage,System.Runtime.Remoting.Channels.ITransportHeaders,System.IO.Stream,System.Runtime.Remoting.Messaging.IMessage@,System.Runtime.Remoting.Channels.ITransportHeaders@,System.IO.Stream@)">
      <summary>Requests message processing from the current sink.</summary>
      <returns>A <see cref="T:System.Runtime.Remoting.Channels.ServerProcessing" /> status value that provides information about how the message was processed.</returns>
      <param name="sinkStack">A stack of channel sinks that called the current sink. </param>
      <param name="requestMsg">The message that contains the request. </param>
      <param name="requestHeaders">The headers that are retrieved from the incoming message from the client. </param>
      <param name="requestStream">The stream that needs to be processed and passed on to the deserialization sink. </param>
      <param name="responseMsg">When this method returns, contains a <see cref="T:System.Runtime.Remoting.Messaging.IMessage" /> that holds the response message. This parameter is passed uninitialized. </param>
      <param name="responseHeaders">When this method returns, contains a <see cref="T:System.Runtime.Remoting.Channels.ITransportHeaders" /> that holds the headers to add to return message heading to the client. This parameter is passed uninitialized. </param>
      <param name="responseStream">When this method returns, contains a <see cref="T:System.IO.Stream" /> that is heading to the transport sink. This parameter is passed uninitialized. </param>
    </member>
    <member name="P:System.Runtime.Remoting.MetadataServices.SdlChannelSink.Properties">
      <summary>Gets a <see cref="T:System.Collections.IDictionary" /> of properties for the current channel sink.</summary>
      <returns>A <see cref="T:System.Collections.IDictionary" /> of properties for the current channel sink.</returns>
    </member>
    <member name="T:System.Runtime.Remoting.MetadataServices.SdlChannelSinkProvider">
      <summary>Provides the implementation for the server channel sink provider that creates <see cref="T:System.Runtime.Remoting.MetadataServices.SdlChannelSink" /> instances.</summary>
    </member>
    <member name="M:System.Runtime.Remoting.MetadataServices.SdlChannelSinkProvider.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Runtime.Remoting.MetadataServices.SdlChannelSinkProvider" /> class with default values.</summary>
    </member>
    <member name="M:System.Runtime.Remoting.MetadataServices.SdlChannelSinkProvider.#ctor(System.Collections.IDictionary,System.Collections.ICollection)">
      <summary>Initializes a new instance of the <see cref="T:System.Runtime.Remoting.MetadataServices.SdlChannelSinkProvider" /> class with specified properties and provider data.</summary>
      <param name="properties">A <see cref="T:System.Collections.IDictionary" /> of configuration properties to use with the new instance of <see cref="T:System.Runtime.Remoting.MetadataServices.SdlChannelSinkProvider" />. </param>
      <param name="providerData">A <see cref="T:System.Collections.ICollection" /> of <see cref="T:System.Runtime.Remoting.Channels.SinkProviderData" /> instances to use with the new instance of <see cref="T:System.Runtime.Remoting.Channels.BinaryServerFormatterSinkProvider" />. </param>
    </member>
    <member name="M:System.Runtime.Remoting.MetadataServices.SdlChannelSinkProvider.CreateSink(System.Runtime.Remoting.Channels.IChannelReceiver)">
      <summary>Creates a sink chain.</summary>
      <returns>The first sink of the newly formed channel sink chain.</returns>
      <param name="channel">The channel for which to create the channel sink chain. </param>
    </member>
    <member name="M:System.Runtime.Remoting.MetadataServices.SdlChannelSinkProvider.GetChannelData(System.Runtime.Remoting.Channels.IChannelDataStore)">
      <summary>Returns the channel data for the channel that the current sink is associated with.</summary>
      <param name="localChannelData">A <see cref="T:System.Runtime.Remoting.Channels.IChannelDataStore" /> object in which the channel data is to be returned. </param>
    </member>
    <member name="P:System.Runtime.Remoting.MetadataServices.SdlChannelSinkProvider.Next">
      <summary>Gets or sets the next <see cref="T:System.Runtime.Remoting.Channels.IServerChannelSinkProvider" /> in the sink provider chain.</summary>
      <returns>The next <see cref="T:System.Runtime.Remoting.Channels.IServerChannelSinkProvider" /> in the sink provider chain.</returns>
    </member>
    <member name="T:System.Runtime.Remoting.MetadataServices.SdlType">
      <summary>Specifies the schema type that is used to describe services that are provided by an application.</summary>
    </member>
    <member name="F:System.Runtime.Remoting.MetadataServices.SdlType.Sdl">
      <summary>Indicates that basic Services Description Language (SDL) is used to describe services that are provided by an application. This value is obsolete.</summary>
    </member>
    <member name="F:System.Runtime.Remoting.MetadataServices.SdlType.Wsdl">
      <summary>Indicates that the Web Services Description Language (WSDL) is used to describe services that are provided by an application.</summary>
    </member>
    <member name="T:System.Runtime.Remoting.MetadataServices.ServiceType">
      <summary>Associates a well-known object type that is passed to the Web Services Description Language (WSDL) generator with a remote endpoint that can process messages that are sent to a method on the type.</summary>
    </member>
    <member name="M:System.Runtime.Remoting.MetadataServices.ServiceType.#ctor(System.Type)">
      <summary>Initializes a new instance of the <see cref="T:System.Runtime.Remoting.MetadataServices.ServiceType" /> class with the object <see cref="T:System.Type" /> that is passed to the Web Services Description Language (WSDL) generator.</summary>
      <param name="type">The object <see cref="T:System.Type" /> that is passed to the WSDL generator. </param>
    </member>
    <member name="M:System.Runtime.Remoting.MetadataServices.ServiceType.#ctor(System.Type,System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.Runtime.Remoting.MetadataServices.ServiceType" /> class with the URL and <see cref="T:System.Type" /> of an object that is passed to the Web Services Description Language (WSDL) generator.</summary>
      <param name="type">The object <see cref="T:System.Type" /> that is passed to the WSDL generator. </param>
      <param name="url">The well-known endpoint that can process messages that are sent to a method on the object type that is specified in the <paramref name="type" /> parameter. </param>
    </member>
    <member name="P:System.Runtime.Remoting.MetadataServices.ServiceType.ObjectType">
      <summary>Gets the object <see cref="T:System.Type" /> that is passed to the Web Services Description Language (WSDL) generator.</summary>
      <returns>The object <see cref="T:System.Type" /> that the current <see cref="T:System.Runtime.Remoting.MetadataServices.ServiceType" /> was created for.</returns>
    </member>
    <member name="P:System.Runtime.Remoting.MetadataServices.ServiceType.Url">
      <summary>Gets the URL of an object <see cref="T:System.Type" /> that is passed to the Web Services Description Language (WSDL) generator.</summary>
      <returns>The URL of an object <see cref="T:System.Type" /> that the current <see cref="T:System.Runtime.Remoting.MetadataServices.ServiceType" /> was created for.</returns>
    </member>
    <member name="T:System.Runtime.Remoting.MetadataServices.SUDSGeneratorException">
      <summary>The exception that is thrown if an error occurs during the generation of Web Services Description Language (WSDL).</summary>
    </member>
    <member name="M:System.Runtime.Remoting.MetadataServices.SUDSGeneratorException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Initializes a new instance of the <see cref="T:System.Runtime.Remoting.MetadataServices.SUDSGeneratorException" /> class.</summary>
      <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
      <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
    </member>
    <member name="T:System.Runtime.Remoting.MetadataServices.SUDSParserException">
      <summary>The exception that is thrown if an error occurs during parsing of the Web Services Description Language (WSDL).</summary>
    </member>
    <member name="M:System.Runtime.Remoting.MetadataServices.SUDSParserException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Initializes a new instance of the <see cref="T:System.Runtime.Remoting.MetadataServices.SUDSParserException" /> class.</summary>
      <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
      <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
    </member>
    <member name="T:System.Runtime.Remoting.Services.RemotingClientProxy">
      <summary>The abstract base class for proxies to well-known objects that were generated by the Soapsuds tool.</summary>
    </member>
    <member name="M:System.Runtime.Remoting.Services.RemotingClientProxy.#ctor"></member>
    <member name="F:System.Runtime.Remoting.Services.RemotingClientProxy._tp">
      <summary>The transparent proxy inside the remoting client proxy object.</summary>
    </member>
    <member name="F:System.Runtime.Remoting.Services.RemotingClientProxy._type">
      <summary>Indicates the type of the object that the current proxy represents.</summary>
    </member>
    <member name="F:System.Runtime.Remoting.Services.RemotingClientProxy._url">
      <summary>Indicates the URL of the object that the current proxy represents.</summary>
    </member>
    <member name="P:System.Runtime.Remoting.Services.RemotingClientProxy.AllowAutoRedirect">
      <summary>Gets or sets a value that indicates whether the automatic handling of server redirects is enabled.</summary>
      <returns>A Boolean value that indicates whether the automatic handling of server redirects is enabled.</returns>
    </member>
    <member name="M:System.Runtime.Remoting.Services.RemotingClientProxy.ConfigureProxy(System.Type,System.String)">
      <summary>Internal. Automatically configures the proxy by loading the channels, if they are not already loaded and creating the proxy.</summary>
      <param name="type">The <see cref="T:System.Type" /> class type of the object that the current proxy represents. </param>
      <param name="url">The URL of the object that the current proxy represents. </param>
    </member>
    <member name="M:System.Runtime.Remoting.Services.RemotingClientProxy.ConnectProxy">
      <summary>Internal. Connects the proxy to the remoting channel that is specified by the <see cref="P:System.Runtime.Remoting.Services.RemotingClientProxy.Url" /> property.</summary>
    </member>
    <member name="P:System.Runtime.Remoting.Services.RemotingClientProxy.Cookies">
      <summary>This property is not currently implemented. The property returns null (Nothing in Visual Basic).</summary>
      <returns>The cookies for the current proxy.</returns>
    </member>
    <member name="P:System.Runtime.Remoting.Services.RemotingClientProxy.Domain">
      <summary>Gets or sets the domain name to be used for basic authentication and digest authentication.</summary>
      <returns>The name of the domain to use for basic authentication and digest authentication.</returns>
    </member>
    <member name="P:System.Runtime.Remoting.Services.RemotingClientProxy.EnableCookies">
      <summary>This property is not currently implemented. The property throws a <see cref="T:System.NotSupportedException" />.</summary>
      <returns>A Boolean value that indicates whether the handling of cookies received from the server is enabled.</returns>
    </member>
    <member name="P:System.Runtime.Remoting.Services.RemotingClientProxy.Password">
      <summary>Gets or sets the password to use for basic authentication and digest authentication.</summary>
      <returns>The password to use for basic authentication and digest authentication.</returns>
    </member>
    <member name="P:System.Runtime.Remoting.Services.RemotingClientProxy.Path">
      <summary>Gets or sets the base URL to the server to use for requests.</summary>
      <returns>The base URL to the server to use for requests.</returns>
    </member>
    <member name="P:System.Runtime.Remoting.Services.RemotingClientProxy.PreAuthenticate">
      <summary>Gets or sets a value that indicates whether preauthentication of requests is enabled.</summary>
      <returns>A Boolean value that indicates whether preauthentication of requests is enabled.</returns>
    </member>
    <member name="P:System.Runtime.Remoting.Services.RemotingClientProxy.ProxyName">
      <summary>Gets or sets the name of the proxy server to use for requests.</summary>
      <returns>The name of the proxy server to use for requests.</returns>
    </member>
    <member name="P:System.Runtime.Remoting.Services.RemotingClientProxy.ProxyPort">
      <summary>Gets or sets the port number of the proxy server to use for requests.</summary>
      <returns>The port number of the proxy server to use for requests.</returns>
    </member>
    <member name="P:System.Runtime.Remoting.Services.RemotingClientProxy.Timeout">
      <summary>Gets or sets the time-out in milliseconds to use for synchronous calls.</summary>
      <returns>The time-out in milliseconds to use for synchronous calls.</returns>
    </member>
    <member name="P:System.Runtime.Remoting.Services.RemotingClientProxy.Url">
      <summary>Gets or sets the base URL to the server to use for requests.</summary>
      <returns>The base URL to the server to use for requests.</returns>
    </member>
    <member name="P:System.Runtime.Remoting.Services.RemotingClientProxy.UserAgent">
      <summary>Gets or sets the user agent HTTP header for the request.</summary>
      <returns>The user agent HTTP header for the request.</returns>
    </member>
    <member name="P:System.Runtime.Remoting.Services.RemotingClientProxy.Username">
      <summary>Gets or sets the user name to send for basic authentication and digest authentication.</summary>
      <returns>The user name to send for basic authentication and digest authentication.</returns>
    </member>
    <member name="T:System.Runtime.Remoting.Services.RemotingService">
      <summary>Provides the base implementation for the remoting XML Web services.</summary>
    </member>
    <member name="M:System.Runtime.Remoting.Services.RemotingService.#ctor">
      <summary>Creates an instance of <see cref="T:System.Runtime.Remoting.Services.RemotingService" />.</summary>
    </member>
    <member name="P:System.Runtime.Remoting.Services.RemotingService.Application">
      <summary>Gets a reference to the application object for the current HTTP request.</summary>
      <returns>A reference to the application object for the current HTTP request.</returns>
    </member>
    <member name="P:System.Runtime.Remoting.Services.RemotingService.Context">
      <summary>Gets the current HTTP-specific context that is used by the HTTP server to process Web requests.</summary>
      <returns>The current HTTP-specific context that is used by the HTTP server to process Web requests.</returns>
    </member>
    <member name="P:System.Runtime.Remoting.Services.RemotingService.Server">
      <summary>Gets the <see cref="T:System.Web.HttpServerUtility" /> for the current request.</summary>
      <returns>The <see cref="T:System.Web.HttpServerUtility" /> for the current request.</returns>
    </member>
    <member name="P:System.Runtime.Remoting.Services.RemotingService.Session">
      <summary>Gets the <see cref="T:System.Web.SessionState.HttpSessionState" /> for the current request.</summary>
      <returns>The <see cref="T:System.Web.SessionState.HttpSessionState" /> for the current request.</returns>
    </member>
    <member name="P:System.Runtime.Remoting.Services.RemotingService.User">
      <summary>Gets the security context of the user on whose behalf the code is running, including that user's identity and any roles that the user belongs to.</summary>
      <returns>The security context of the user.</returns>
    </member>
  </members>
</doc>
=== C:/Users/treeman/Desktop/windows nt source code\xbox\Xbox Live Source\XONLINE_MAIN\public\ext\sdk\CLR\netfx40rtm\Profile\Client\System.ServiceModel.Activities.xml ===
﻿<?xml version="1.0" encoding="utf-8"?>
<doc>
  <assembly>
    <name>System.ServiceModel.Activities</name>
  </assembly>
  <members>
    <member name="T:System.ServiceModel.CorrelationActionMessageFilter">
      <summary>Provides a XAML-friendly implementation of a <see cref="T:System.ServiceModel.Dispatcher.MessageFilter" /> that filters on a single action.</summary>
    </member>
    <member name="M:System.ServiceModel.CorrelationActionMessageFilter.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.CorrelationActionMessageFilter" /> class.</summary>
    </member>
    <member name="P:System.ServiceModel.CorrelationActionMessageFilter.Action">
      <summary>Gets or sets the action for the <see cref="T:System.ServiceModel.CorrelationActionMessageFilter" />.</summary>
      <returns>The action for the <see cref="T:System.ServiceModel.CorrelationActionMessageFilter" />.</returns>
    </member>
    <member name="M:System.ServiceModel.CorrelationActionMessageFilter.Equals(System.Object)">
      <summary>Determines whether the current <see cref="T:System.ServiceModel.CorrelationActionMessageFilter" /> is equal to the specified <see cref="T:System.ServiceModel.CorrelationActionMessageFilter" />.</summary>
      <returns>true if the specified <see cref="T:System.ServiceModel.CorrelationActionMessageFilter" /> is equal to the current <see cref="T:System.ServiceModel.CorrelationActionMessageFilter" />; otherwise, false.</returns>
      <param name="other">The <see cref="T:System.ServiceModel.CorrelationActionMessageFilter" /> to compare with the current <see cref="T:System.ServiceModel.CorrelationActionMessageFilter" />.</param>
    </member>
    <member name="M:System.ServiceModel.CorrelationActionMessageFilter.GetHashCode">
      <summary>Returns the hash code for the <see cref="T:System.ServiceModel.CorrelationActionMessageFilter" /> instance.</summary>
      <returns>The hash code for the <see cref="T:System.ServiceModel.CorrelationActionMessageFilter" /> instance.</returns>
    </member>
    <member name="M:System.ServiceModel.CorrelationActionMessageFilter.Match(System.ServiceModel.Channels.Message)">
      <summary>Determines whether the specified message’s action matches the <see cref="P:System.ServiceModel.CorrelationActionMessageFilter.Action" /> of this <see cref="T:System.ServiceModel.CorrelationActionMessageFilter" />.</summary>
      <returns>true if the action matches; otherwise, false.</returns>
      <param name="message">The message to compare.</param>
    </member>
    <member name="M:System.ServiceModel.CorrelationActionMessageFilter.Match(System.ServiceModel.Channels.MessageBuffer)">
      <summary>Determines whether the action of the message contained by the specified message buffer matches the <see cref="P:System.ServiceModel.CorrelationActionMessageFilter.Action" /> of this <see cref="T:System.ServiceModel.CorrelationActionMessageFilter" />.</summary>
      <returns>true if the action matches; otherwise, false.</returns>
      <param name="messageBuffer">The message buffer that contains the message to compare.</param>
    </member>
    <member name="M:System.ServiceModel.CorrelationActionMessageFilter.ToString">
      <summary>Returns a <see cref="T:System.String" /> representation of the <see cref="T:System.ServiceModel.CorrelationActionMessageFilter" />.</summary>
      <returns>The current <see cref="T:System.ServiceModel.CorrelationActionMessageFilter" />.</returns>
    </member>
    <member name="T:System.ServiceModel.CorrelationQuery">
      <summary>Represents a <see cref="P:System.ServiceModel.CorrelationQuery.Where" /> clause and a <see cref="P:System.ServiceModel.CorrelationQuery.Select" /> clause that identify the unique characteristics of a message so that it can be routed to the correct instance.</summary>
    </member>
    <member name="M:System.ServiceModel.CorrelationQuery.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.CorrelationQuery" /> class.</summary>
    </member>
    <member name="M:System.ServiceModel.CorrelationQuery.Equals(System.Object)">
      <summary>Determines whether the current <see cref="T:System.ServiceModel.CorrelationQuery" /> is equal to the specified object.</summary>
      <returns>true if the current <see cref="T:System.ServiceModel.CorrelationQuery" /> is equal to the specified object; otherwise, false.</returns>
      <param name="other">The object to compare.</param>
    </member>
    <member name="M:System.ServiceModel.CorrelationQuery.GetHashCode">
      <summary>Returns the hash code for the current <see cref="T:System.ServiceModel.CorrelationQuery" />.</summary>
      <returns>The hash code for the current <see cref="T:System.ServiceModel.CorrelationQuery" />.</returns>
    </member>
    <member name="P:System.ServiceModel.CorrelationQuery.Select">
      <summary>Gets or sets the <see cref="T:System.ServiceModel.MessageQuerySet" /> that contains the elements in the message that compose the instance key that uniquely identifies the message.</summary>
      <returns>The <see cref="T:System.ServiceModel.MessageQuerySet" /> that contains the elements in the message that compose the instance key that uniquely identifies the message.</returns>
    </member>
    <member name="P:System.ServiceModel.CorrelationQuery.SelectAdditional">
      <summary>Gets a collection of clauses, each of which defines the set of elements in the message that make up an associated key.</summary>
      <returns>A collection of clauses, each of which defines the set of elements in the message that make up an associated key.</returns>
    </member>
    <member name="P:System.ServiceModel.CorrelationQuery.Where">
      <summary>Gets or sets the <see cref="T:System.ServiceModel.Dispatcher.MessageFilter" /> that defines the set of messages for which this query applies.</summary>
      <returns>The message filter that defines the set of messages for which this query applies.</returns>
    </member>
    <member name="T:System.ServiceModel.Endpoint">
      <summary>Represents an endpoint declared in XAML.</summary>
    </member>
    <member name="M:System.ServiceModel.Endpoint.#ctor">
      <summary>Creates a new instance of the <see cref="T:System.ServiceModel.Endpoint" /> class.</summary>
    </member>
    <member name="P:System.ServiceModel.Endpoint.AddressUri">
      <summary>Gets or sets the endpoint’s URI.</summary>
      <returns>The <see cref="T:System.Uri" /> for the endpoint..</returns>
    </member>
    <member name="P:System.ServiceModel.Endpoint.BehaviorConfigurationName">
      <summary>Gets or sets the behavior configuration name.</summary>
      <returns>The behavior configuration name.</returns>
    </member>
    <member name="P:System.ServiceModel.Endpoint.Binding">
      <summary>Gets or sets the binding for the endpoint.</summary>
      <returns>The <see cref="T:System.ServiceModel.Binding" /> for the endpoint.</returns>
    </member>
    <member name="M:System.ServiceModel.Endpoint.GetAddress">
      <summary>Gets the address of the endpoint.</summary>
      <returns>The <see cref="T:System.ServiceModel.EndpointAddress" /> of the endpoint.</returns>
    </member>
    <member name="M:System.ServiceModel.Endpoint.GetAddress(System.ServiceModel.ServiceHostBase)">
      <summary>Gets the address of the endpoint using the specified <see cref="T:System.ServiceModel.ServiceHostBase" /> instance.</summary>
      <returns>The <see cref="T:System.ServiceModel.EndpointAddress" /> of the endpoint.</returns>
      <param name="host">The <see cref="T:System.ServiceModel.ServiceHostBase" /> instance to use.</param>
    </member>
    <member name="P:System.ServiceModel.Endpoint.Headers">
      <summary>Gets the address headers collection for the endpoint.</summary>
      <returns>A collection of <see cref="T:System.ServiceModel.Channels.AddressHeader" /> derived instances. </returns>
    </member>
    <member name="P:System.ServiceModel.Endpoint.Identity">
      <summary>Gets or sets the endpoint identity for the endpoint.</summary>
      <returns>The <see cref="T:System.ServiceModel.EndpointIdentity" /> for the endpoint.</returns>
    </member>
    <member name="P:System.ServiceModel.Endpoint.ListenUri">
      <summary>Gets or sets the listen URI for the endpoint.</summary>
      <returns>A <see cref="T:System.Uri" /> containing the listen URI for the endpoint.</returns>
    </member>
    <member name="P:System.ServiceModel.Endpoint.Name">
      <summary>Gets or sets the endpoint name.</summary>
      <returns>A <see cref="T:System.String" /> containing the endpoint’s name.</returns>
    </member>
    <member name="P:System.ServiceModel.Endpoint.ServiceContractName">
      <summary>Gets or sets the service contract name.</summary>
      <returns>The service contract name.</returns>
    </member>
    <member name="T:System.ServiceModel.EndpointIdentityExtension">
      <summary>A markup extension for the <see cref="T:System.ServiceModel.EndpointIdentity" /> class.</summary>
    </member>
    <member name="M:System.ServiceModel.EndpointIdentityExtension.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.EndpointIdentityExtension" /> class.</summary>
    </member>
    <member name="M:System.ServiceModel.EndpointIdentityExtension.#ctor(System.ServiceModel.EndpointIdentity)">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.EndpointIdentityExtension" /> class with the specified <see cref="T:System.ServiceModel.EndpointIdentity" />.</summary>
      <param name="identity">The endpoint identity.</param>
    </member>
    <member name="P:System.ServiceModel.EndpointIdentityExtension.ClaimResource">
      <summary>Gets or sets the claim resource.</summary>
      <returns>An <see cref="T:System.Object" /> containing the claim resource.</returns>
    </member>
    <member name="P:System.ServiceModel.EndpointIdentityExtension.ClaimRight">
      <summary>Gets or sets the claim right.</summary>
      <returns>A <see cref="T:System.String" /> containing the claim right.</returns>
    </member>
    <member name="P:System.ServiceModel.EndpointIdentityExtension.ClaimType">
      <summary>Gets or sets the claim type.</summary>
      <returns>A <see cref="T:System.String" /> containing the claim type.</returns>
    </member>
    <member name="M:System.ServiceModel.EndpointIdentityExtension.ProvideValue(System.IServiceProvider)">
      <summary>Provides an <see cref="T:System.ServiceModel.EndpointIdentity" /> for the specified <see cref="T:System.IdentityModel.Claims.Claim" />.</summary>
      <returns>An <see cref="T:System.Object" /> containing the value.</returns>
      <param name="serviceProvider">This parameter is currently ignored.</param>
    </member>
    <member name="T:System.ServiceModel.MessageQuerySet">
      <summary>A set of <see cref="T:System.ServiceModel.MessageQuery" /> objects and an associated string parameter.  A correlation hash (<see cref="T:System.ServiceModel.InstanceKey" />) is computed from the results of the <see cref="T:System.ServiceModel.MessageQuery" /> objects as well as the associated strings.</summary>
    </member>
    <member name="M:System.ServiceModel.MessageQuerySet.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.MessageQuerySet" /> class.</summary>
    </member>
    <member name="M:System.ServiceModel.MessageQuerySet.#ctor(System.ServiceModel.Dispatcher.MessageQueryTable{System.String})">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.MessageQuerySet" /> class with the specified <see cref="T:System.ServiceModel.Dispatcher.MessageQueryTable`1" />.</summary>
      <param name="queryTable">The message query table.</param>
    </member>
    <member name="M:System.ServiceModel.MessageQuerySet.GetMessageQueryTable">
      <summary>Gets the message query table associated with the current <see cref="T:System.ServiceModel.MessageQuerySet" /> instance.</summary>
      <returns>The message query table.</returns>
    </member>
    <member name="P:System.ServiceModel.MessageQuerySet.Name">
      <summary>Gets or sets the name of the <see cref="T:System.ServiceModel.MessageQuerySet" /> instance.</summary>
      <returns>The name of the message query set.</returns>
    </member>
    <member name="T:System.ServiceModel.Activities.CallbackCorrelationInitializer">
      <summary>Initializes the associated <see cref="P:System.ServiceModel.Activities.CorrelationInitializer.CorrelationHandle" /> with a callback correlation.</summary>
    </member>
    <member name="M:System.ServiceModel.Activities.CallbackCorrelationInitializer.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.Activities.CallbackCorrelationInitializer" /> class.</summary>
    </member>
    <member name="T:System.ServiceModel.Activities.ChannelCacheSettings">
      <summary>Represents settings that define operational characteristics of a channel cache.</summary>
    </member>
    <member name="M:System.ServiceModel.Activities.ChannelCacheSettings.#ctor">
      <summary>Creates a new instance of the <see cref="T:System.ServiceModel.Activities.ChannelCacheSettings" /> class.</summary>
    </member>
    <member name="P:System.ServiceModel.Activities.ChannelCacheSettings.IdleTimeout">
      <summary>Gets the maximum interval of time for which the object can remain idle in the cache before being disposed.</summary>
      <returns>An interval of time.</returns>
    </member>
    <member name="P:System.ServiceModel.Activities.ChannelCacheSettings.LeaseTimeout">
      <summary>Gets the interval of time after which an object is removed from the cache.</summary>
      <returns>An interval of time.</returns>
    </member>
    <member name="P:System.ServiceModel.Activities.ChannelCacheSettings.MaxItemsInCache">
      <summary>Gets the maximum number of objects that can be in the cache.</summary>
      <returns>A maximum number of objects.</returns>
    </member>
    <member name="T:System.ServiceModel.Activities.ContextCorrelationInitializer">
      <summary>Initializes the associated <see cref="P:System.ServiceModel.Activities.CorrelationInitializer.CorrelationHandle" /> with a.NET Context Exchange-based correlation, subject to the <see cref="T:System.ServiceModel.Channels.ContextExchangeMechanism" /> specified.</summary>
    </member>
    <member name="M:System.ServiceModel.Activities.ContextCorrelationInitializer.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.Activities.ContextCorrelationInitializer" /> class.</summary>
    </member>
    <member name="T:System.ServiceModel.Activities.CorrelationHandle">
      <summary>Associates activities together in a correlation by representing a particular shared <see cref="T:System.ServiceModel.Channels.InstanceKey" /> or transient context in the workflow. </summary>
    </member>
    <member name="M:System.ServiceModel.Activities.CorrelationHandle.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.Activities.CorrelationHandle" /> class.</summary>
    </member>
    <member name="M:System.ServiceModel.Activities.CorrelationHandle.OnInitialize(System.Activities.HandleInitializationContext)">
      <summary>Registers the <see cref="T:System.ServiceModel.Activities.CorrelationHandle" /> with the workflow runtime.</summary>
      <param name="context">The initialization environment.</param>
    </member>
    <member name="M:System.ServiceModel.Activities.CorrelationHandle.OnUninitialize(System.Activities.HandleInitializationContext)">
      <summary>Unregisters the <see cref="T:System.ServiceModel.Activities.CorrelationHandle" /> with the workflow runtime.</summary>
      <param name="context">The initialization environment of the <see cref="T:System.ServiceModel.Activities.CorrelationHandle" />.</param>
    </member>
    <member name="T:System.ServiceModel.Activities.CorrelationInitializer">
      <summary>An abstract base class for correlation initializers that are used to tell the runtime what protocol is being used for the correlation.</summary>
    </member>
    <member name="P:System.ServiceModel.Activities.CorrelationInitializer.CorrelationHandle">
      <summary>Gets or sets the <see cref="T:System.ServiceModel.Activities.CorrelationHandle" /> argument for the correlation initializer.</summary>
      <returns>The correlation handle argument.</returns>
    </member>
    <member name="T:System.ServiceModel.Activities.CorrelationScope">
      <summary>Provides implicit <see cref="T:System.ServiceModel.Activities.CorrelationHandle" /> management for child messaging activities.</summary>
    </member>
    <member name="M:System.ServiceModel.Activities.CorrelationScope.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.Activities.CorrelationScope" /> class.</summary>
    </member>
    <member name="P:System.ServiceModel.Activities.CorrelationScope.Body">
      <summary>Gets or sets the activity’s execution logic.</summary>
      <returns>The activity’s execution logic.</returns>
    </member>
    <member name="M:System.ServiceModel.Activities.CorrelationScope.CacheMetadata(System.Activities.NativeActivityMetadata)">
      <summary>Builds and validates a description of the activity’s arguments, variables, child activities, and activity delegates.</summary>
      <param name="metadata">The activity’s metadata that encapsulates the activity’s arguments, variables, child activities, and activity delegates.</param>
    </member>
    <member name="P:System.ServiceModel.Activities.CorrelationScope.CorrelatesWith">
      <summary>Gets or sets the <see cref="T:System.ServiceModel.Activities.CorrelationHandle" /> used by the child messaging activities.</summary>
      <returns>The correlation handle used by the child messaging activities.</returns>
    </member>
    <member name="M:System.ServiceModel.Activities.CorrelationScope.Execute(System.Activities.NativeActivityContext)">
      <summary>Called by the workflow runtime to execute the <see cref="T:System.ServiceModel.Activities.CorrelationScope" /> activity.</summary>
      <param name="context">The current native activity execution context.</param>
    </member>
    <member name="M:System.ServiceModel.Activities.CorrelationScope.ShouldSerializeCorrelatesWith">
      <summary>Indicates whether the <see cref="P:System.ServiceModel.Activities.CorrelationScope.CorrelatesWith" /> property should be serialized. </summary>
      <returns>true if the <see cref="P:System.ServiceModel.Activities.CorrelationScope.CorrelatesWith" /> property value should be serialized; otherwise, false.</returns>
    </member>
    <member name="T:System.ServiceModel.Activities.DurableInstancingOptions">
      <summary>Used mainly to associate a concrete implementation of the <see cref="T:System.Runtime.Persistence.InstanceStore" /> such as <see cref="T:System.Activities.DurableInstancing.SqlWorkflowInstanceStore" /> with a workflow service host. This class is also used to add instance owner metadata.</summary>
    </member>
    <member name="M:System.ServiceModel.Activities.DurableInstancingOptions.AddInitialInstanceValues(System.Collections.Generic.IDictionary{System.Xml.Linq.XName,System.Object})">
      <summary>Adds write-only metadata for an instance to the host.</summary>
      <param name="writeOnlyValues">The write-only values. These values are optional when loading an instance.</param>
    </member>
    <member name="M:System.ServiceModel.Activities.DurableInstancingOptions.AddInstanceOwnerValues(System.Collections.Generic.IDictionary{System.Xml.Linq.XName,System.Object},System.Collections.Generic.IDictionary{System.Xml.Linq.XName,System.Object})">
      <summary>Adds metadata for an instance owner to the host. This method may   be called before the workflow host is opened.</summary>
      <param name="readWriteValues">The read-write metadata.</param>
      <param name="writeOnlyValues">The write-only values. These values are optional when loading an instance.</param>
    </member>
    <member name="P:System.ServiceModel.Activities.DurableInstancingOptions.InstanceStore">
      <summary>Refers to a concrete implementation of the <see cref="T:System.Runtime.Persistence.InstanceStore" /> class such as <see cref="T:System.Activities.DurableInstancing.SqlWorkflowInstanceStore" />.</summary>
      <returns>A concrete implementation of the <see cref="T:System.Runtime.Persistence.InstanceStore" /> class.</returns>
    </member>
    <member name="T:System.ServiceModel.Activities.InitializeCorrelation">
      <summary>Initializes correlation without sending or receiving a message.</summary>
    </member>
    <member name="M:System.ServiceModel.Activities.InitializeCorrelation.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.Activities.InitializeCorrelation" /> class.</summary>
    </member>
    <member name="P:System.ServiceModel.Activities.InitializeCorrelation.Correlation">
      <summary>Gets or sets the <see cref="T:System.ServiceModel.Activities.CorrelationHandle" /> that references the correlation.</summary>
      <returns>The correlation handle.</returns>
    </member>
    <member name="P:System.ServiceModel.Activities.InitializeCorrelation.CorrelationData">
      <summary>Gets or sets a dictionary of correlation data that relates messages to this workflow instance.</summary>
      <returns>A dictionary of correlation data.</returns>
    </member>
    <member name="T:System.ServiceModel.Activities.IReceiveMessageCallback">
      <summary>Implements a callback to be executed when a service message is received by the <see cref="T:System.ServiceModel.Activities.Receive" /> and <see cref="T:System.ServiceModel.Activities.ReceiveParameters" /> activities.</summary>
    </member>
    <member name="M:System.ServiceModel.Activities.IReceiveMessageCallback.OnReceiveMessage(System.ServiceModel.OperationContext,System.Activities.ExecutionProperties)">
      <summary>Executed when a service message is received.</summary>
      <param name="operationContext">The operation context under which the message received.</param>
      <param name="activityExecutionProperties">The set of execution properties available within the workflow. </param>
    </member>
    <member name="T:System.ServiceModel.Activities.ISendMessageCallback">
      <summary>Implements a callback that is called just before a message is sent on the wire by the <see cref="T:System.ServiceModel.Activities.Send" /> or <see cref="T:System.ServiceModel.Activities.SendParameters" /> activities. executed when a service message is sent.</summary>
    </member>
    <member name="M:System.ServiceModel.Activities.ISendMessageCallback.OnSendMessage(System.ServiceModel.OperationContext)">
      <summary>Executed when a service message is sent.</summary>
      <param name="operationContext">The operation’s context under which the message is being sent.</param>
    </member>
    <member name="T:System.ServiceModel.Activities.IWorkflowInstanceManagement">
      <summary>Represents a service contract that defines a set of operations that allow you to control workflow instances.</summary>
    </member>
    <member name="M:System.ServiceModel.Activities.IWorkflowInstanceManagement.Abandon(System.Guid,System.String)">
      <summary>Attempts to abandon the specified workflow instance.</summary>
      <param name="instanceId">The GUID identifier of the workflow instance to abandon.</param>
      <param name="reason">The reason for abandoning the workflow instance.</param>
    </member>
    <member name="M:System.ServiceModel.Activities.IWorkflowInstanceManagement.BeginAbandon(System.Guid,System.String,System.AsyncCallback,System.Object)">
      <summary>Begins an asynchronous operation to abandon the specified workflow instance.</summary>
      <returns>The <see cref="T:System.IAsyncResult" />.</returns>
      <param name="instanceId">The GUID identifier of the workflow instance to abandon.</param>
      <param name="reason">The reason for abandoning the workflow instance.</param>
      <param name="callback">The asynchronous callback delegate that receives the notification of the asynchronous operation completion.</param>
      <param name="state">An object, specified by the application, that contains state information associated with the asynchronous abandon operation.</param>
    </member>
    <member name="M:System.ServiceModel.Activities.IWorkflowInstanceManagement.BeginCancel(System.Guid,System.AsyncCallback,System.Object)">
      <summary>Begins an asynchronous operation to cancel the specified workflow instance.</summary>
      <returns>An <see cref="T:System.IasyncResult" />.</returns>
      <param name="instanceId">The GUID identifier of the workflow instance to cancel.</param>
      <param name="callback">The asynchronous callback delegate that receives the notification of the asynchronous operation completion.</param>
      <param name="state">An object, specified by the application, that contains state information associated with the asynchronous cancel operation.</param>
    </member>
    <member name="M:System.ServiceModel.Activities.IWorkflowInstanceManagement.BeginRun(System.Guid,System.AsyncCallback,System.Object)">
      <summary>Begins an asynchronous operation to run the specified workflow instance.</summary>
      <returns>An <see cref="T:System.IAsyncResult" />.</returns>
      <param name="instanceId">The GUID identifier of the workflow instance to run.</param>
      <param name="callback">The asynchronous callback delegate that receives the notification of the asynchronous operation completion.</param>
      <param name="state">An object, specified by the application, that contains state information associated with the asynchronous run operation.</param>
    </member>
    <member name="M:System.ServiceModel.Activities.IWorkflowInstanceManagement.BeginSuspend(System.Guid,System.String,System.AsyncCallback,System.Object)">
      <summary>Begins an asynchronous operation to suspend the specified workflow instance.</summary>
      <returns>The <see cref="T:System.IAsyncResult" />.</returns>
      <param name="instanceId">The GUID identifier of the workflow instance to suspend.</param>
      <param name="reason">The reason to suspend the workflow instance.</param>
      <param name="callback">The asynchronous callback delegate that receives the notification of the asynchronous operation completion.</param>
      <param name="state">An object, specified by the application, that contains state information associated with the asynchronous suspend operation.</param>
    </member>
    <member name="M:System.ServiceModel.Activities.IWorkflowInstanceManagement.BeginTerminate(System.Guid,System.String,System.AsyncCallback,System.Object)">
      <summary>Begins an asynchronous operation to terminate the specified workflow instance.</summary>
      <returns>The <see cref="T:System.IAsyncResult" />.</returns>
      <param name="instanceId">The GUID identifier of the workflow instance to terminate.</param>
      <param name="reason">The reason to terminate the workflow instance.</param>
      <param name="callback">The asynchronous callback delegate that receives the notification of the asynchronous operation completion.</param>
      <param name="state">An object, specified by the application, that contains state information associated with the asynchronous terminate operation.</param>
    </member>
    <member name="M:System.ServiceModel.Activities.IWorkflowInstanceManagement.BeginTransactedCancel(System.Guid,System.AsyncCallback,System.Object)">
      <summary>Begins an asynchronous cancel operation in a transaction.</summary>
      <returns>The <see cref="T:System.IAsyncResult" />.</returns>
      <param name="instanceId">The GUID identifier of the workflow instance to cancel.</param>
      <param name="callback">The asynchronous callback delegate that receives the notification of the asynchronous operation completion.</param>
      <param name="state">An object, specified by the application, that contains state information associated with the asynchronous cancel operation.</param>
    </member>
    <member name="M:System.ServiceModel.Activities.IWorkflowInstanceManagement.BeginTransactedRun(System.Guid,System.AsyncCallback,System.Object)">
      <summary>Begins an asynchronous operation that runs a workflow instance within a transaction.</summary>
      <returns>The <see cref="T:System.IAsyncResult" />.</returns>
      <param name="instanceId">The GUID identifier of the workflow instance to run.</param>
      <param name="callback">The asynchronous callback delegate that receives the notification of the asynchronous operation completion.</param>
      <param name="state">An object, specified by the application, that contains state information associated with the asynchronous run operation.</param>
    </member>
    <member name="M:System.ServiceModel.Activities.IWorkflowInstanceManagement.BeginTransactedSuspend(System.Guid,System.String,System.AsyncCallback,System.Object)">
      <summary>Begins an asynchronous operation that suspends the specified workflow instance.</summary>
      <returns>The <see cref="T:System.IAsyncResult" />.</returns>
      <param name="instanceId">The GUID identifier of the workflow instance to suspend.</param>
      <param name="reason">The reason to suspend the workflow instance.</param>
      <param name="callback">The asynchronous callback delegate that receives the notification of the asynchronous operation completion.</param>
      <param name="state">An object, specified by the application, that contains state information associated with the asynchronous suspend operation.</param>
    </member>
    <member name="M:System.ServiceModel.Activities.IWorkflowInstanceManagement.BeginTransactedTerminate(System.Guid,System.String,System.AsyncCallback,System.Object)">
      <summary>Begins an asynchronous operation that terminates a workflow instance within a transaction.</summary>
      <returns>The <see cref="T:System.IAsyncResult" />.</returns>
      <param name="instanceId">The GUID identifier of the workflow instance to terminate.</param>
      <param name="reason">The reason to terminate the workflow instance.</param>
      <param name="callback">The asynchronous callback delegate that receives the notification of the asynchronous operation completion.</param>
      <param name="state">An object, specified by the application, that contains state information associated with the asynchronous terminate operation.</param>
    </member>
    <member name="M:System.ServiceModel.Activities.IWorkflowInstanceManagement.BeginTransactedUnsuspend(System.Guid,System.AsyncCallback,System.Object)">
      <summary>Begins an asynchronous operation that resumes the specified workflow instance within a transaction.</summary>
      <returns>The <see cref="T:System.IAsyncResult" />.</returns>
      <param name="instanceId">The GUID identifier of the workflow instance to unsuspend.</param>
      <param name="callback">The asynchronous callback delegate that receives the notification of the asynchronous operation completion.</param>
      <param name="state">An object, specified by the application, that contains state information associated with the asynchronous unsuspend operation.</param>
    </member>
    <member name="M:System.ServiceModel.Activities.IWorkflowInstanceManagement.BeginUnsuspend(System.Guid,System.AsyncCallback,System.Object)">
      <summary>Begins an asynchronous operation that resumes the specified workflow instance.</summary>
      <returns>The <see cref="T:System.IAsyncResult" />.</returns>
      <param name="instanceId">The GUID identifier of the workflow instance to resume.</param>
      <param name="callback">The asynchronous callback delegate that receives the notification of the asynchronous operation completion.</param>
      <param name="state">An object, specified by the application, that contains state information associated with the asynchronous unsuspend operation.</param>
    </member>
    <member name="M:System.ServiceModel.Activities.IWorkflowInstanceManagement.Cancel(System.Guid)">
      <summary>Cancels the specified workflow instance.</summary>
      <param name="instanceId">The GUID identifier of the workflow instance to cancel.</param>
    </member>
    <member name="M:System.ServiceModel.Activities.IWorkflowInstanceManagement.EndAbandon(System.IAsyncResult)">
      <summary>Completes an asynchronous abandon operation.</summary>
      <param name="result">The <see cref="T:System.IAsyncResult" /> returned by a call to the <see cref="M:System.ServiceModel.Activities.IWorkflowInstanceManagement.BeginAbandon(System.Guid,System.String,System.AsyncCallback,System.Object)" /> method.</param>
    </member>
    <member name="M:System.ServiceModel.Activities.IWorkflowInstanceManagement.EndCancel(System.IAsyncResult)">
      <summary>Completes an asynchronous cancel operation.</summary>
      <param name="result">The <see cref="T:System.IAsyncResult" /> returned by a call to the <see cref="M:System.ServiceModel.Activities.IWorkflowInstanceManagement.BeginCancel(System.Guid,System.AsyncCallback,System.Object)" /> method.</param>
    </member>
    <member name="M:System.ServiceModel.Activities.IWorkflowInstanceManagement.EndRun(System.IAsyncResult)">
      <summary>Completes an asynchronous run operation.</summary>
      <param name="result">The <see cref="T:System.IAsyncResult" /> returned by a call to the <see cref="M:System.ServiceModel.Activities.IWorkflowInstanceManagement.BeginRun(System.Guid,System.AsyncCallback,System.Object)" /> method.</param>
    </member>
    <member name="M:System.ServiceModel.Activities.IWorkflowInstanceManagement.EndSuspend(System.IAsyncResult)">
      <summary>Completes an asynchronous suspend operation.</summary>
      <param name="result">The <see cref="T:System.IAsyncResult" /> returned by a call to the <see cref="M:System.ServiceModel.Activities.IWorkflowInstanceManagement.BeginSuspend(System.Guid,System.String,System.AsyncCallback,System.Object)" /> operation</param>
    </member>
    <member name="M:System.ServiceModel.Activities.IWorkflowInstanceManagement.EndTerminate(System.IAsyncResult)">
      <summary>Completes an asynchronous terminate operation.</summary>
      <param name="result">The <see cref="T:System.IAsyncResult" /> returned by a call to the <see cref="M:System.ServiceModel.Activities.IWorkflowInstanceManagement.BeginTerminate(System.Guid,System.String,System.AsyncCallback,System.Object)" /> method.</param>
    </member>
    <member name="M:System.ServiceModel.Activities.IWorkflowInstanceManagement.EndTransactedCancel(System.IAsyncResult)">
      <summary>Completes an asynchronous transacted cancel operation.</summary>
      <param name="result">The <see cref="T:System.IAsyncResult" /> returned by a call to the <see cref="M:System.ServiceModel.Activities.IWorkflowInstanceManagement.BeginTransactedCancel(System.Guid,System.AsyncCallback,System.Object)" /> method.</param>
    </member>
    <member name="M:System.ServiceModel.Activities.IWorkflowInstanceManagement.EndTransactedRun(System.IAsyncResult)">
      <summary>Completes an asynchronous transacted run operation.</summary>
      <param name="result">The <see cref="T:System.IAsyncResult" /> returned by a call to the <see cref="M:System.ServiceModel.Activities.IWorkflowInstanceManagement.BeginTransactedRun(System.Guid,System.AsyncCallback,System.Object)" /> method.</param>
    </member>
    <member name="M:System.ServiceModel.Activities.IWorkflowInstanceManagement.EndTransactedSuspend(System.IAsyncResult)">
      <summary>Completes an asynchronous transacted suspend operation.</summary>
      <param name="result">The <see cref="T:System.IAsyncResult" /> returned by a call to the <see cref="M:System.ServiceModel.Activities.IWorkflowInstanceManagement.BeginTransactedSuspend(System.Guid,System.String,System.AsyncCallback,System.Object)" /> method. </param>
    </member>
    <member name="M:System.ServiceModel.Activities.IWorkflowInstanceManagement.EndTransactedTerminate(System.IAsyncResult)">
      <summary>Completes an asynchronous transacted terminate operation. </summary>
      <param name="result">The <see cref="T:System.IAsyncResult" /> returned by a call to the <see cref="M:System.ServiceModel.Activities.IWorkflowInstanceManagement.BeginTransactedTerminate(System.Guid,System.String,System.AsyncCallback,System.Object)" /> method.</param>
    </member>
    <member name="M:System.ServiceModel.Activities.IWorkflowInstanceManagement.EndTransactedUnsuspend(System.IAsyncResult)">
      <summary>Completes an asynchronous transacted unsuspend operation.</summary>
      <param name="result">The <see cref="T:System.IAsyncResult" /> returned by a call to the <see cref="M:System.ServiceModel.Activities.IWorkflowInstanceManagement.BeginTransactedUnsuspend(System.Guid,System.AsyncCallback,System.Object)" /> method.</param>
    </member>
    <member name="M:System.ServiceModel.Activities.IWorkflowInstanceManagement.EndUnsuspend(System.IAsyncResult)">
      <summary>Completes an asynchronous unsuspend operation.</summary>
      <param name="result">The <see cref="T:System.IAsyncResult" /> returned by a call to the <see cref="M:System.ServiceModel.Activities.IWorkflowInstanceManagement.BeginUnsuspend(System.Guid,System.AsyncCallback,System.Object)" /> method. </param>
    </member>
    <member name="M:System.ServiceModel.Activities.IWorkflowInstanceManagement.Run(System.Guid)">
      <summary>Starts executing the specified workflow instance.</summary>
      <param name="instanceId">The GUID identifier of the workflow instance to run.</param>
    </member>
    <member name="M:System.ServiceModel.Activities.IWorkflowInstanceManagement.Suspend(System.Guid,System.String)">
      <summary>Suspends the specified workflow instance.</summary>
      <param name="instanceId">The workflow instance to suspend.</param>
      <param name="reason">The reason for suspending the workflow instance.</param>
    </member>
    <member name="M:System.ServiceModel.Activities.IWorkflowInstanceManagement.Terminate(System.Guid,System.String)">
      <summary>Terminates the specified workflow instance.</summary>
      <param name="instanceId">The GUID identifier of the workflow instance to terminate.</param>
      <param name="reason">The reason to terminate the workflow instance.</param>
    </member>
    <member name="M:System.ServiceModel.Activities.IWorkflowInstanceManagement.TransactedCancel(System.Guid)">
      <summary>Cancels the specified workflow instance within a transaction.</summary>
      <param name="instanceId">The GUID identifier of the workflow instance to cancel.</param>
    </member>
    <member name="M:System.ServiceModel.Activities.IWorkflowInstanceManagement.TransactedRun(System.Guid)">
      <summary>Runs the specified workflow instance within a transaction.</summary>
      <param name="instanceId">The GUID identifier of the workflow instance to run.</param>
    </member>
    <member name="M:System.ServiceModel.Activities.IWorkflowInstanceManagement.TransactedSuspend(System.Guid,System.String)">
      <summary>Suspends the specified workflow instance within a transaction.</summary>
      <param name="instanceId">The GUID identifier of the workflow instance to suspend.</param>
      <param name="reason">The reason the workflow instance is suspended.</param>
    </member>
    <member name="M:System.ServiceModel.Activities.IWorkflowInstanceManagement.TransactedTerminate(System.Guid,System.String)">
      <summary>Terminates the specified workflow instance within a transaction.</summary>
      <param name="instanceId">The GUID identifier of the workflow instance to terminate.</param>
      <param name="reason">The reason to terminate the workflow instance.</param>
    </member>
    <member name="M:System.ServiceModel.Activities.IWorkflowInstanceManagement.TransactedUnsuspend(System.Guid)">
      <summary>Resumes the specified workflow instance within a transaction.</summary>
      <param name="instanceId">The GUID identifier of the workflow instance to resume.</param>
    </member>
    <member name="M:System.ServiceModel.Activities.IWorkflowInstanceManagement.Unsuspend(System.Guid)">
      <summary>Resumes the specified workflow instance.</summary>
      <param name="instanceId">The GUID identifier of the workflow instance to resume.</param>
    </member>
    <member name="T:System.ServiceModel.Activities.QueryCorrelationInitializer">
      <summary>Initializes the associated <see cref="P:System.ServiceModel.Activities.CorrelationInitializer.CorrelationHandle" /> based on the results of the <see cref="P:System.ServiceModel.Activities.QueryCorrelationInitializer.MessageQuerySet" /> when the message is sent or received.</summary>
    </member>
    <member name="M:System.ServiceModel.Activities.QueryCorrelationInitializer.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.Activities.QueryCorrelationInitializer" /> class.</summary>
    </member>
    <member name="P:System.ServiceModel.Activities.QueryCorrelationInitializer.MessageQuerySet">
      <summary>Gets or sets the <see cref="T:System.ServiceModel.MessageQuerySet" /> that is used to perform the <see cref="T:System.ServiceModel.Channels.CorrelationKey" /> calculation.</summary>
      <returns>The <see cref="T:System.ServiceModel.MessageQuerySet" /> that is used to perform the <see cref="T:System.ServiceModel.Channels.CorrelationKey" /> calculation.</returns>
    </member>
    <member name="T:System.ServiceModel.Activities.Receive">
      <summary>An activity that receives a message.</summary>
    </member>
    <member name="M:System.ServiceModel.Activities.Receive.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.Activities.Receive" /> class.</summary>
    </member>
    <member name="P:System.ServiceModel.Activities.Receive.Action">
      <summary>Gets or sets the value of the action header of the message.</summary>
      <returns>The action URI of the message.</returns>
    </member>
    <member name="P:System.ServiceModel.Activities.Receive.CanCreateInstance">
      <summary>Gets or sets a value that indicates whether a new workflow instance is created to process the message if the message does not correlate to an existing workflow instance..</summary>
      <returns>true if a new workflow instance is created to process the message, otherwise false.</returns>
    </member>
    <member name="P:System.ServiceModel.Activities.Receive.Content">
      <summary>Gets or sets the data to receive. The content can be either a <see cref="T:System.ServiceModel.Activities.ReceiveMessageContent" /> or a <see cref="T:System.ServiceModel.Activities.ReceiveParametersContent" />.</summary>
      <returns>The data to receive.</returns>
    </member>
    <member name="P:System.ServiceModel.Activities.Receive.CorrelatesOn">
      <summary>Gets or sets the <see cref="T:System.ServiceModel.MessageQuerySet" /> used to query the message to extract correlation data.</summary>
      <returns>A set of message queries used to extract correlation data from the incoming message.</returns>
    </member>
    <member name="P:System.ServiceModel.Activities.Receive.CorrelatesWith">
      <summary>Gets or sets a correlation handle that is used to route the message to the appropriate workflow instance.</summary>
      <returns>The correlation handle.</returns>
    </member>
    <member name="P:System.ServiceModel.Activities.Receive.CorrelationInitializers">
      <summary>Gets a collection of correlation initializers that initialize query-based, context, callback context, or request-reply correlations with a <see cref="T:System.ServiceModel.Activities.Send" /> activity runs.</summary>
      <returns>A collection of correlation initializers.</returns>
    </member>
    <member name="P:System.ServiceModel.Activities.Receive.KnownTypes">
      <summary>Gets a collection of known types for the operation.</summary>
      <returns>A collection of known types.</returns>
    </member>
    <member name="P:System.ServiceModel.Activities.Receive.OperationName">
      <summary>Gets or sets the name of the operation implemented by the <see cref="T:System.ServiceModel.Activities.Receive" />.</summary>
      <returns>The name of the operation.</returns>
    </member>
    <member name="P:System.ServiceModel.Activities.Receive.ProtectionLevel">
      <summary>Gets or sets a value that indicates the protection level for the operation.</summary>
      <returns>The protection level for the operation.</returns>
    </member>
    <member name="P:System.ServiceModel.Activities.Receive.SerializerOption">
      <summary>Gets or sets a value that specifies the serializer to use for this operation.</summary>
      <returns>The serializer to use.</returns>
    </member>
    <member name="P:System.ServiceModel.Activities.Receive.ServiceContractName">
      <summary>Gets or sets the name of the service contract.</summary>
      <returns>The service contract name.</returns>
    </member>
    <member name="M:System.ServiceModel.Activities.Receive.ShouldSerializeCorrelatesOn">
      <summary>Returns a value that indicates whether the <see cref="P:System.ServiceModel.Activities.Receive.CorrelatesOn" /> property has changed from its default value and should be serialized.</summary>
      <returns>true if the <see cref="P:System.ServiceModel.Activities.Receive.CorrelatesOn" /> property value should be serialized; otherwise, false.</returns>
    </member>
    <member name="T:System.ServiceModel.Activities.ReceiveContent">
      <summary>An abstract base class for classes that represent the data received by a workflow service.</summary>
    </member>
    <member name="M:System.ServiceModel.Activities.ReceiveContent.Create(System.Activities.OutArgument)">
      <summary>Creates a new <see cref="T:System.ServiceModel.Activities.ReceiveMessageContent" /> instance with the specified message.</summary>
      <returns>A <see cref="T:System.ServiceModel.Activities.ReceiveMessageContent" />instance.</returns>
      <param name="message">The message.</param>
    </member>
    <member name="M:System.ServiceModel.Activities.ReceiveContent.Create(System.Activities.OutArgument,System.Type)">
      <summary>Creates a new <see cref="T:System.ServiceModel.Activities.ReceiveMessageContent" /> instance with the specified message and message type.</summary>
      <returns>A  <see cref="T:System.ServiceModel.Activities.ReceiveMessageContent" /> instance.</returns>
      <param name="message">The message.</param>
      <param name="declaredMessageType">The message type.</param>
    </member>
    <member name="M:System.ServiceModel.Activities.ReceiveContent.Create(System.Collections.Generic.IDictionary{System.String,System.Activities.OutArgument})">
      <summary>Creates a new <see cref="T:System.ServiceModel.Activities.ReceiveMessageContent" /> instance with the specified parameters.</summary>
      <returns>A <see cref="T:System.ServiceModel.Activities.ReceiveParametersContent" /> instance.</returns>
      <param name="parameters">The parameters.</param>
    </member>
    <member name="T:System.ServiceModel.Activities.ReceiveMessageContent">
      <summary>A class used to receive a <see cref="T:System.ServiceModel.Message" /> or a message contract type within a workflow service.</summary>
    </member>
    <member name="M:System.ServiceModel.Activities.ReceiveMessageContent.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.Activities.ReceiveMessageContent" /> class.</summary>
    </member>
    <member name="M:System.ServiceModel.Activities.ReceiveMessageContent.#ctor(System.Activities.OutArgument)">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.Activities.ReceiveMessageContent" /> class with the specified message.</summary>
      <param name="message">The message.</param>
    </member>
    <member name="M:System.ServiceModel.Activities.ReceiveMessageContent.#ctor(System.Activities.OutArgument,System.Type)">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.Activities.ReceiveMessageContent" /> class with the specified message and message type.</summary>
      <param name="message">The message.</param>
      <param name="declaredMessageType">The message type.</param>
    </member>
    <member name="P:System.ServiceModel.Activities.ReceiveMessageContent.DeclaredMessageType">
      <summary>Gets or sets the declared message type.</summary>
      <returns>The declared message type.</returns>
    </member>
    <member name="P:System.ServiceModel.Activities.ReceiveMessageContent.Message">
      <summary>Gets or sets the message received.</summary>
      <returns>The received message.</returns>
    </member>
    <member name="M:System.ServiceModel.Activities.ReceiveMessageContent.ShouldSerializeDeclaredMessageType">
      <summary>Gets a boolean value that determines if the message should be serialized as the declared message type.</summary>
      <returns>true if the message should be serialized as the declared message type; otherwise false.</returns>
    </member>
    <member name="T:System.ServiceModel.Activities.ReceiveParametersContent">
      <summary>Enables receiving data to or from a workflow service in the form of parameters.<see cref="T:System.ServiceModel.Activities.ReceiveParametersContent" /> is interoperable with regular WCF clients and services. The <see cref="P:System.ServiceModel.Activities.ReceiveParametersContent.Parameters" /> collection is similar to the argment declaration on a C# method signature.The <see cref="P:System.ServiceModel.Activities.ReceiveParametersContent.Parameters" /> collection cannot contain arguments marked with <see cref="T:System.ServiceModel.MessageContractAttribute" />, or of type <see cref="System.ServiceModel.Channels.Message" />. Please use <see cref="T:System.ServiceModel.Activities.ReceiveMessageContent" /> for these types of data.This is a sealed class.</summary>
    </member>
    <member name="M:System.ServiceModel.Activities.ReceiveParametersContent.#ctor">
      <summary>Creates a new instance of the <see cref="T:System.ServiceModel.Activities.ReceiveParametersContent" /> class.</summary>
    </member>
    <member name="M:System.ServiceModel.Activities.ReceiveParametersContent.#ctor(System.Collections.Generic.IDictionary{System.String,System.Activities.OutArgument})">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.Activities.ReceiveParametersContent" /> class with the specified parameters.</summary>
      <param name="parameters">A collection of key-value pairs with the keys containing the parameter names and the values containing the arguments.</param>
    </member>
    <member name="P:System.ServiceModel.Activities.ReceiveParametersContent.Parameters">
      <summary>Modifies the parameters collection.</summary>
      <returns>A collection of key-value pairs with the keys containing the parameter names and the values containing the arguments.</returns>
    </member>
    <member name="T:System.ServiceModel.Activities.ReceiveReply">
      <summary>An activity that receives a message as part of a request/reply message exchange pattern on the client side.</summary>
    </member>
    <member name="M:System.ServiceModel.Activities.ReceiveReply.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.Activities.ReceiveReply" /> class.</summary>
    </member>
    <member name="P:System.ServiceModel.Activities.ReceiveReply.Action">
      <summary>Gets or sets the value of the action header of the message.</summary>
      <returns>The action of the message.</returns>
    </member>
    <member name="P:System.ServiceModel.Activities.ReceiveReply.Content">
      <summary>Gets or sets the content received by the T:System.ServiceModel.Activities.ReceiveReply activity</summary>
      <returns>The content received.</returns>
    </member>
    <member name="P:System.ServiceModel.Activities.ReceiveReply.CorrelationInitializers">
      <summary>Gets a collection of correlation initializers.</summary>
      <returns>A collection of correlation initializers.</returns>
    </member>
    <member name="P:System.ServiceModel.Activities.ReceiveReply.Request">
      <summary>Gets or sets a reference to the <see cref="T:System.ServiceModel.Activities.Send" /> activity paired with this <see cref="T:System.ServiceModel.Activites.ReceiveReply" /> activity.</summary>
      <returns>The send activity.</returns>
    </member>
    <member name="T:System.ServiceModel.Activities.RequestReplyCorrelationInitializer">
      <summary>Initializes the associated <see cref="P:System.ServiceModel.Activities.CorrelationInitializer.CorrelationHandle" /> based on the <see cref="T:System.ServiceModel.Channels.RequestContext" /> that is created for the two-way operation.</summary>
    </member>
    <member name="M:System.ServiceModel.Activities.RequestReplyCorrelationInitializer.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.Activities.RequestReplyCorrelationInitializer" /> class.</summary>
    </member>
    <member name="T:System.ServiceModel.Activities.Send">
      <summary>An activity that sends a message to a service. </summary>
    </member>
    <member name="M:System.ServiceModel.Activities.Send.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.Activities.Send" /> class.</summary>
    </member>
    <member name="P:System.ServiceModel.Activities.Send.Action">
      <summary>Gets or sets the value of the action header of the message being sent. </summary>
      <returns>The action of the message.</returns>
    </member>
    <member name="P:System.ServiceModel.Activities.Send.Content">
      <summary>Gets or sets the content sent by the <see cref="T:System.ServiceModel.Activities.Send" /> activity.</summary>
      <returns>The content to send.</returns>
    </member>
    <member name="P:System.ServiceModel.Activities.Send.CorrelatesWith">
      <summary>Gets or sets a correlation handle that is used to route the message to the appropriate workflow instance.</summary>
      <returns>The correlation handle.</returns>
    </member>
    <member name="P:System.ServiceModel.Activities.Send.CorrelationInitializers">
      <summary>Gets a collection of correlation initializers.</summary>
      <returns>A collection of correlation initializers.</returns>
    </member>
    <member name="P:System.ServiceModel.Activities.Send.Endpoint">
      <summary>Gets or sets the endpoint to send messages to.</summary>
      <returns>The endpoint.</returns>
    </member>
    <member name="P:System.ServiceModel.Activities.Send.EndpointAddress">
      <summary>Gets or sets the address of the endpoint to send messages to.</summary>
      <returns>The endpoint address.</returns>
    </member>
    <member name="P:System.ServiceModel.Activities.Send.EndpointConfigurationName">
      <summary>Gets or sets the name of the endpoint configuration.</summary>
      <returns>The endpoint configuration name.</returns>
    </member>
    <member name="P:System.ServiceModel.Activities.Send.KnownTypes">
      <summary>Gets a collection of the known types for the service operation to be called.</summary>
      <returns>A collection of known types.</returns>
    </member>
    <member name="P:System.ServiceModel.Activities.Send.OperationName">
      <summary>Gets or sets the name of the service operation to be called.</summary>
      <returns>The name of the service operation.</returns>
    </member>
    <member name="P:System.ServiceModel.Activities.Send.ProtectionLevel">
      <summary>Gets or sets a value that indicates the protection level for the message.</summary>
      <returns>The protection level for the message.</returns>
    </member>
    <member name="P:System.ServiceModel.Activities.Send.SerializerOption">
      <summary>Gets or sets a value that specifies the serializer to use when sending a message.</summary>
      <returns>The serializer to use for this operation.</returns>
    </member>
    <member name="P:System.ServiceModel.Activities.Send.ServiceContractName">
      <summary>The name of the contract the service to be called implements.</summary>
      <returns>The name of the service contract.</returns>
    </member>
    <member name="P:System.ServiceModel.Activities.Send.TokenImpersonationLevel">
      <summary>Gets or sets a value that indicates the token impersonation level allowed for the receiver of the message.</summary>
      <returns>The token impersonation level.</returns>
    </member>
    <member name="T:System.ServiceModel.Activities.SendContent">
      <summary>An abstract base class for classes that represent the data sent to a workflow service.</summary>
    </member>
    <member name="M:System.ServiceModel.Activities.SendContent.Create(System.Activities.InArgument)">
      <summary>Creates a new <see cref="T:System.ServiceModel.Activities.SendMessageContent" /> instance with the specified message.</summary>
      <returns>A <see cref="T:System.ServiceModel.Activities.SendMessageContent" /> instance.</returns>
      <param name="message">The data to send.</param>
    </member>
    <member name="M:System.ServiceModel.Activities.SendContent.Create(System.Activities.InArgument,System.Type)">
      <summary>Creates a new <see cref="T:System.ServiceModel.Activities.SendMessageContent" /> instance with the specified message and message type.</summary>
      <returns>A <see cref="T:System.ServiceModel.Activities.SendMessageContent" /> instance.</returns>
      <param name="message">The data to send.</param>
      <param name="declaredMessageType">The data type that will appear in the service description and WSDL. It must be either the same as the argument type of the message or its base type.</param>
    </member>
    <member name="M:System.ServiceModel.Activities.SendContent.Create(System.Collections.Generic.IDictionary{System.String,System.Activities.InArgument})">
      <summary>Creates a new <see cref="T:System.ServiceModel.Activities.SendParametersContent" /> instance with the specified parameters.</summary>
      <returns>A <see cref="T:System.ServiceModel.Activities.SendParametersContent" /> instance.</returns>
      <param name="parameters">A collection of name/value pairs with the keys containing the parameter names and the values containing the arguments.</param>
    </member>
    <member name="T:System.ServiceModel.Activities.SendMessageChannelCache">
      <summary>Represents an extension that enables the customization of the cache sharing levels, the settings of the channel factory cache, and the settings of the channel cache for workflows that send messages to service endpoints using <see cref="T:System.ServiceModel.Activities.Send" /> messaging activities.</summary>
    </member>
    <member name="M:System.ServiceModel.Activities.SendMessageChannelCache.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.Activities.SendMessageChannelCache" /> class with default factory cache and channel cache settings.</summary>
    </member>
    <member name="M:System.ServiceModel.Activities.SendMessageChannelCache.#ctor(System.ServiceModel.Activities.ChannelCacheSettings,System.ServiceModel.Activities.ChannelCacheSettings)">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.Activities.SendMessageChannelCache" /> class with custom factory cache and channel cache settings.</summary>
      <param name="factorySettings">The cache settings for cached channel factories.</param>
      <param name="channelSettings">The cache settings for cached channels.</param>
    </member>
    <member name="M:System.ServiceModel.Activities.SendMessageChannelCache.#ctor(System.ServiceModel.Activities.ChannelCacheSettings,System.ServiceModel.Activities.ChannelCacheSettings,System.Boolean)">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.Activities.SendMessageChannelCache" /> class with custom factory cache settings, custom channel cache settings, and a value that indicates whether to turn caching on.</summary>
      <param name="factorySettings">The cache settings for cached channel factories.</param>
      <param name="channelSettings">The cache settings for cached channels.</param>
      <param name="allowUnsafeCaching">true to turn caching on; otherwise, false.</param>
    </member>
    <member name="P:System.ServiceModel.Activities.SendMessageChannelCache.AllowUnsafeCaching">
      <summary>Gets or sets a value that indicates whether to turn caching on.</summary>
      <returns>true to turn caching on; otherwise, false.</returns>
    </member>
    <member name="P:System.ServiceModel.Activities.SendMessageChannelCache.ChannelSettings">
      <summary>Gets or sets the settings of the channel cache.</summary>
      <returns>The settings of the channel cache.</returns>
    </member>
    <member name="M:System.ServiceModel.Activities.SendMessageChannelCache.Dispose">
      <summary>Releases all resources used by the current instance of the <see cref="T:System.ServiceModel.Activities.SendMessageChannelCache" /> class.</summary>
    </member>
    <member name="P:System.ServiceModel.Activities.SendMessageChannelCache.FactorySettings">
      <summary>Gets or sets the settings of the channel factory cache.</summary>
      <returns>The settings of the channel factory cache.</returns>
    </member>
    <member name="T:System.ServiceModel.Activities.SendMessageContent">
      <summary>A class used to send a single item (message) to or from a workflow service. The item can be a built-in type such as primitive types, <see cref="T:System.ServiceModel.Channels.Message" />, or <see cref="T:System.Xml.Linq.XElement" />; or an application-defined data contract, message contract, or XML serializable type.</summary>
    </member>
    <member name="M:System.ServiceModel.Activities.SendMessageContent.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.Activities.SendMessageContent" /> class.</summary>
    </member>
    <member name="M:System.ServiceModel.Activities.SendMessageContent.#ctor(System.Activities.InArgument)">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.Activities.SendMessageContent" /> class with the specified data to send.</summary>
      <param name="message">The data to send.</param>
    </member>
    <member name="M:System.ServiceModel.Activities.SendMessageContent.#ctor(System.Activities.InArgument,System.Type)">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.Activities.SendMessageContent" /> class with the specified message and message type.</summary>
      <param name="message">The data to send.</param>
      <param name="declaredMessageType">The data type that appears on the service description. It must be the same type as <paramref name="message" /> or any base type of <paramref name="message" />.</param>
    </member>
    <member name="P:System.ServiceModel.Activities.SendMessageContent.DeclaredMessageType">
      <summary>Gets or sets the declared message type.</summary>
      <returns>The declared message type.</returns>
    </member>
    <member name="P:System.ServiceModel.Activities.SendMessageContent.Message">
      <summary>Gets or sets the data to send.</summary>
      <returns>The data to send.</returns>
    </member>
    <member name="M:System.ServiceModel.Activities.SendMessageContent.ShouldSerializeDeclaredMessageType">
      <summary>Gets a value that indicates whether the <see cref="P:System.ServiceModel.Activities.SendMessageContent.DeclaredMessateType" /> property should be XAML-serialized.</summary>
      <returns>true if the property should be serialized; otherwise false.</returns>
    </member>
    <member name="T:System.ServiceModel.Activities.SendParametersContent">
      <summary>Enables sending data to or from a workflow service in the form of parameters.</summary>
    </member>
    <member name="M:System.ServiceModel.Activities.SendParametersContent.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.Activities.SendParametersContent" /> class.</summary>
    </member>
    <member name="M:System.ServiceModel.Activities.SendParametersContent.#ctor(System.Collections.Generic.IDictionary{System.String,System.Activities.InArgument})">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.Activities.SendParametersContent" /> class with the specified parameters.</summary>
      <param name="parameters">A collection of key-value pairs with the keys containing the parameter names and the values containing the arguments. </param>
    </member>
    <member name="P:System.ServiceModel.Activities.SendParametersContent.Parameters">
      <summary>Gets or sets the workflow service operation parameters.</summary>
      <returns>A collection of key-value pairs with the keys containing the parameter names and the values containing the arguments. </returns>
    </member>
    <member name="T:System.ServiceModel.Activities.SendReply">
      <summary>An activity that sends the reply message as part of a request/response message exchange pattern on the service side.</summary>
    </member>
    <member name="M:System.ServiceModel.Activities.SendReply.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.Activities.SendReply" /> class.</summary>
    </member>
    <member name="P:System.ServiceModel.Activities.SendReply.Action">
      <summary>Gets or sets the value of the action header of the message.</summary>
      <returns>The action URI of the message.</returns>
    </member>
    <member name="P:System.ServiceModel.Activities.SendReply.Content">
      <summary>Gets or sets the content sent by the <see cref="T:System.ServiceModel.Activities.SendReply" /> activity.</summary>
      <returns>The content to send.</returns>
    </member>
    <member name="P:System.ServiceModel.Activities.SendReply.CorrelationInitializers">
      <summary>Gets a collection of correlation initializers.</summary>
      <returns>A collection of correlation initializers.</returns>
    </member>
    <member name="P:System.ServiceModel.Activities.SendReply.PersistBeforeSend">
      <summary>Gets or sets a value that specifies whether the workflow service instance should be persisted before sending the message.</summary>
      <returns>true if the workflow service should be persisted before sending the message;otherwise false.</returns>
    </member>
    <member name="P:System.ServiceModel.Activities.SendReply.Request">
      <summary>Gets or sets a reference to the <see cref="T:System.ServiceModel.Activities.Receive" /> activity paired with this <see cref="T:System.ServiceModel.Activities.SendReply" /> activity. </summary>
      <returns>A receive activity.</returns>
    </member>
    <member name="T:System.ServiceModel.Activities.SerializerOption">
      <summary>A class that represents the types of serializers available.</summary>
    </member>
    <member name="F:System.ServiceModel.Activities.SerializerOption.DataContractSerializer">
      <summary>Specifies that the <see cref="T:System.Runtime.Serialization.DataContractSerializer" /> should be used when serializing.</summary>
    </member>
    <member name="F:System.ServiceModel.Activities.SerializerOption.XmlSerializer">
      <summary>Specifies that the <see cref="T:System.Runtime.Serialization.XMLSerializer" /> should be used when serializing.</summary>
    </member>
    <member name="T:System.ServiceModel.Activities.TransactedReceiveScope">
      <summary>An activity that enables you to flow a transaction into a workflow or dispatcher created server side transactions.</summary>
    </member>
    <member name="M:System.ServiceModel.Activities.TransactedReceiveScope.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.Activities.TransactedReceiveScope" /> class.</summary>
    </member>
    <member name="P:System.ServiceModel.Activities.TransactedReceiveScope.Body">
      <summary>Gets or sets the <see cref="T:System.Activities.Activity" /> that makes up the body of the <see cref="T:System.ServiceModel.Activities.TransactedReceiveScope" /> activity. </summary>
      <returns>The body of the transacted receive scope.</returns>
    </member>
    <member name="P:System.ServiceModel.Activities.TransactedReceiveScope.Request">
      <summary>Gets or sets the <see cref="T:System.ServiceModel.Activities.Receive" /> activity associated with this <see cref="T:System.ServiceModel.Activities.TransactedReceiveScope" /> activity.</summary>
      <returns>The receive activity associated with the transacted receive scope.</returns>
    </member>
    <member name="P:System.ServiceModel.Activities.TransactedReceiveScope.Variables">
      <summary>Gets the collection of <see cref="T:System.Activities.Variables" /> associated with this <see cref="T:System.ServiceModel.Activities.TransactedReceiveScope" />.</summary>
      <returns>The variables associated with the transacted receive scope.</returns>
    </member>
    <member name="T:System.ServiceModel.Activities.WorkflowControlClient">
      <summary>Allows a client to send control operations to a workflow service hosted with <see cref="T:System.ServiceModel.Activities.WorkflowServiceHost" />.</summary>
    </member>
    <member name="M:System.ServiceModel.Activities.WorkflowControlClient.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.Activities.WorkflowControlClient" /> class.</summary>
    </member>
    <member name="M:System.ServiceModel.Activities.WorkflowControlClient.#ctor(System.ServiceModel.Activities.WorkflowControlEndpoint)">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.Activities.WorkflowControlClient" /> class with the specified <see cref="T:System.ServiecModel.Activities.WorkflowControlEndpoint" />.</summary>
      <param name="workflowEndpoint">The workflow control endpoint.</param>
    </member>
    <member name="M:System.ServiceModel.Activities.WorkflowControlClient.#ctor(System.ServiceModel.Channels.Binding,System.ServiceModel.EndpointAddress)">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.Activities.WorkflowControlClient" /> class with the specified binding, and <see cref="T:System.ServiecModel.Activities.WorkflowControlEndpoint" />.</summary>
      <param name="binding">The binding.</param>
      <param name="remoteAddress">The workflow control endpoint.</param>
    </member>
    <member name="M:System.ServiceModel.Activities.WorkflowControlClient.#ctor(System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.Activities.WorkflowControlClient" /> class with the specified endpoint configuration.</summary>
      <param name="endpointConfigurationName">The configuration to use.</param>
    </member>
    <member name="M:System.ServiceModel.Activities.WorkflowControlClient.#ctor(System.String,System.ServiceModel.EndpointAddress)">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.Activities.WorkflowControlClient" /> class with the specified endpoint configuration and <see cref="T:System.ServiceModel.EndpointAddress" />.</summary>
      <param name="endpointConfigurationName">The endpoint configuration.</param>
      <param name="remoteAddress">The endpoint address.</param>
    </member>
    <member name="M:System.ServiceModel.Activities.WorkflowControlClient.#ctor(System.String,System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.Activities.WorkflowControlClient" /> class with the specified endpoint configuration and endpoint address.</summary>
      <param name="endpointConfigurationName">The endpoint configuration.</param>
      <param name="remoteAddress">The endpoint address.</param>
    </member>
    <member name="M:System.ServiceModel.Activities.WorkflowControlClient.Abandon(System.Guid)">
      <summary>Abandons the specified workflow instance.</summary>
      <param name="instanceId">The workflow instance to abandon.</param>
    </member>
    <member name="M:System.ServiceModel.Activities.WorkflowControlClient.Abandon(System.Guid,System.String)">
      <summary>Abandons the specified workflow instance.</summary>
      <param name="instanceId">The workflow instance to abandon.</param>
      <param name="reason">The reason to abandon the workflow instance.</param>
    </member>
    <member name="M:System.ServiceModel.Activities.WorkflowControlClient.AbandonAsync(System.Guid)">
      <summary>Begins an asynchronous operation that abandons the specified workflow instance.</summary>
      <param name="instanceId">The workflows instance to abandon.</param>
    </member>
    <member name="M:System.ServiceModel.Activities.WorkflowControlClient.AbandonAsync(System.Guid,System.Object)">
      <summary>Begins an asynchronous operation that abandons the specified workflow instance with the specified user-defined data.</summary>
      <param name="instanceId">The workflow instance to abandon.</param>
      <param name="userState">The user-defined state data.</param>
    </member>
    <member name="M:System.ServiceModel.Activities.WorkflowControlClient.AbandonAsync(System.Guid,System.String)">
      <summary>Begins an asynchronous operation that abandons the specified workflow instance with the specified reason.</summary>
      <param name="instanceId">The workflow instance to abandon.</param>
      <param name="reason">The reason to abandon the workflow instance.</param>
    </member>
    <member name="M:System.ServiceModel.Activities.WorkflowControlClient.AbandonAsync(System.Guid,System.String,System.Object)">
      <summary>Begins an asynchronous operation that abandons the specified workflow instance with the specified reason and user-defined data.</summary>
      <param name="instanceId">The workflow instance to abandon.</param>
      <param name="reason">The reason to abandon the workflow instance.</param>
      <param name="userState">The user-defined state data.</param>
    </member>
    <member name="E:System.ServiceModel.Activities.WorkflowControlClient.AbandonCompleted">
      <summary>Occurs when an asynchronous abandon operation completes.</summary>
    </member>
    <member name="M:System.ServiceModel.Activities.WorkflowControlClient.BeginAbandon(System.Guid,System.AsyncCallback,System.Object)">
      <summary>Begins an asynchronous operation that abandons the specified workflow instance.</summary>
      <returns>The asynchronous abandon operation.</returns>
      <param name="instanceId">The workflow instance to abandon.</param>
      <param name="callback">The asynchronous callback delegate that receives the notification of the asynchronous operation completion.</param>
      <param name="state">The user-defined state data.</param>
    </member>
    <member name="M:System.ServiceModel.Activities.WorkflowControlClient.BeginAbandon(System.Guid,System.String,System.AsyncCallback,System.Object)">
      <summary>Begins an asynchronous operation that abandons the specified workflow instance.</summary>
      <returns>The asynchronous abandon operation.</returns>
      <param name="instanceId">The workflow instance to abandon.</param>
      <param name="reason">The reason to abandon the workflow instance.</param>
      <param name="callback">The asynchronous callback delegate that receives the notification of the asynchronous operation completion.</param>
      <param name="state">The user-defined state data.</param>
    </member>
    <member name="M:System.ServiceModel.Activities.WorkflowControlClient.BeginCancel(System.Guid,System.AsyncCallback,System.Object)">
      <summary>Begins an asynchronous operation that cancels the specified workflow instance.</summary>
      <returns>The asynchronous cancel operation.</returns>
      <param name="instanceId">The workflow instance to cancel.</param>
      <param name="callback">The asynchronous callback delegate that receives the notification of the asynchronous operation completion.</param>
      <param name="state">The user-defined state data.</param>
    </member>
    <member name="M:System.ServiceModel.Activities.WorkflowControlClient.BeginRun(System.Guid,System.AsyncCallback,System.Object)">
      <summary>Begins an asynchronous operation that runs the specified workflow instance.</summary>
      <returns>The asynchronous run operation.</returns>
      <param name="instanceId">The workflow instance to run.</param>
      <param name="callback">The asynchronous callback delegate that receives the notification of the asynchronous operation completion.</param>
      <param name="state">The user-defined state data.</param>
    </member>
    <member name="M:System.ServiceModel.Activities.WorkflowControlClient.BeginSuspend(System.Guid,System.AsyncCallback,System.Object)">
      <summary>Begins an asynchronous operation that suspends the specified operation.</summary>
      <returns>The asynchronous suspend operation.</returns>
      <param name="instanceId">The workflow instance to suspend.</param>
      <param name="callback">The asynchronous callback delegate that receives the notification of the asynchronous operation completion.</param>
      <param name="state">The user-defined state data.</param>
    </member>
    <member name="M:System.ServiceModel.Activities.WorkflowControlClient.BeginSuspend(System.Guid,System.String,System.AsyncCallback,System.Object)">
      <summary>Begins an asynchronous operation that suspends the specified operation.</summary>
      <returns>The asynchronous suspend operation.</returns>
      <param name="instanceId">The workflow instance to suspend.</param>
      <param name="reason">The reason the workflow instance is suspended.</param>
      <param name="callback">The asynchronous callback delegate that receives the notification of the asynchronous operation completion.</param>
      <param name="state">The user-defined state data.</param>
    </member>
    <member name="M:System.ServiceModel.Activities.WorkflowControlClient.BeginTerminate(System.Guid,System.AsyncCallback,System.Object)">
      <summary>Begins an asynchronous operation that terminates a workflow instance.</summary>
      <returns>The asynchronous terminate operation.</returns>
      <param name="instanceId">The workflow instance to terminate.</param>
      <param name="callback">The asynchronous callback delegate that receives the notification of the asynchronous operation completion.</param>
      <param name="state">The user-defined state data.</param>
    </member>
    <member name="M:System.ServiceModel.Activities.WorkflowControlClient.BeginTerminate(System.Guid,System.String,System.AsyncCallback,System.Object)">
      <summary>Begins an asynchronous operation that terminates a workflow instance.</summary>
      <returns>The asynchronous terminate operation.</returns>
      <param name="instanceId">The workflow instance to terminate.</param>
      <param name="reason">The reason to terminate the workflow instance.</param>
      <param name="callback">The asynchronous callback delegate that receives the notification of the asynchronous operation completion.</param>
      <param name="state">The user-defined state data.</param>
    </member>
    <member name="M:System.ServiceModel.Activities.WorkflowControlClient.BeginUnsuspend(System.Guid,System.AsyncCallback,System.Object)">
      <summary>Begins an asynchronous operation that unsuspends a workflow instance.</summary>
      <returns>The asynchronous unsuspend operation.</returns>
      <param name="instanceId">The workflow instance to unsuspend.</param>
      <param name="callback">The asynchronous callback delegate that receives the notification of the asynchronous operation completion.</param>
      <param name="state">The user-defined state data.</param>
    </member>
    <member name="M:System.ServiceModel.Activities.WorkflowControlClient.Cancel(System.Guid)">
      <summary>Cancels the specified workflow instance.</summary>
      <param name="instanceId">The workflow instance to cancel.</param>
    </member>
    <member name="M:System.ServiceModel.Activities.WorkflowControlClient.CancelAsync(System.Guid)">
      <summary>Begins an asynchronous operation that cancels the specified workflow instance.</summary>
      <param name="instanceId">The workflow instance to cancel.</param>
    </member>
    <member name="M:System.ServiceModel.Activities.WorkflowControlClient.CancelAsync(System.Guid,System.Object)">
      <summary>Begins an asynchronous operation that cancels the specified workflow instance with the specified user-defined data.</summary>
      <param name="instanceId">The workflow instance to cancel.</param>
      <param name="userState">The user-defined data.</param>
    </member>
    <member name="E:System.ServiceModel.Activities.WorkflowControlClient.CancelCompleted">
      <summary>Occurs when an asynchronous cancel operation completes.</summary>
    </member>
    <member name="M:System.ServiceModel.Activities.WorkflowControlClient.EndAbandon(System.IAsyncResult)">
      <summary>Completes an asynchronous abandon operation.</summary>
      <param name="result">The asynchronous result returned by a call to the <see cref="Overload:System.ServiceModel.Activities.WorkflowControlClient.BeginAbandon" /> method.</param>
    </member>
    <member name="M:System.ServiceModel.Activities.WorkflowControlClient.EndCancel(System.IAsyncResult)">
      <summary>Completes an asynchronous cancel operation.</summary>
      <param name="result">The asynchronous result returned by a call to the <see cref="M:System.ServiceModel.Activities.WorkflowControlClient.BeginCancel(System.Guid,System.AsyncCallback,System.Object)" /> method.</param>
    </member>
    <member name="M:System.ServiceModel.Activities.WorkflowControlClient.EndRun(System.IAsyncResult)">
      <summary>Completes an asynchronous run operation.</summary>
      <param name="result">The asynchronous result returned by a call to the <see cref="M:System.ServiceModel.Activities.WorkflowControlClient.BeginRun(System.Guid,System.AsyncCallback,System.Object)" /> method.</param>
    </member>
    <member name="M:System.ServiceModel.Activities.WorkflowControlClient.EndSuspend(System.IAsyncResult)">
      <summary>Completes an asynchronous suspend operation.</summary>
      <param name="result">The asynchronous result returned by a call to the <see cref="Overload:System.ServiceModel.Activities.WorkflowControlClient.BeginSuspend" /> method.</param>
    </member>
    <member name="M:System.ServiceModel.Activities.WorkflowControlClient.EndTerminate(System.IAsyncResult)">
      <summary>Completes an asynchronous terminate operation.</summary>
      <param name="result">The asynchronous result returned by a call to the <see cref="Overload:System.ServiceModel.Activities.WorkflowControlClient.BeginTerminate" /> method.</param>
    </member>
    <member name="M:System.ServiceModel.Activities.WorkflowControlClient.EndUnsuspend(System.IAsyncResult)">
      <summary>Completes an asynchronous unsuspend operation.</summary>
      <param name="result">The asynchronous result returned by a call to the <see cref="M:System.ServiceModel.Activities.WorkflowControlClient.BeginUnsuspend(System.Guid,System.AsyncCallback,System.Object)" /> method.</param>
    </member>
    <member name="M:System.ServiceModel.Activities.WorkflowControlClient.Run(System.Guid)">
      <summary>Runs the specified workflow instance.</summary>
      <param name="instanceId">The workflow instance to run.</param>
    </member>
    <member name="M:System.ServiceModel.Activities.WorkflowControlClient.RunAsync(System.Guid)">
      <summary>Begins an asynchronous operation that runs the specified workflow instance.</summary>
      <param name="instanceId">The workflow instance to run.</param>
    </member>
    <member name="M:System.ServiceModel.Activities.WorkflowControlClient.RunAsync(System.Guid,System.Object)">
      <summary>Begins an asynchronous operation that runs the specified workflow instance with the user-defined state data.</summary>
      <param name="instanceId">The workflow instance to run.</param>
      <param name="userState">The user-defined state data.</param>
    </member>
    <member name="E:System.ServiceModel.Activities.WorkflowControlClient.RunCompleted">
      <summary>Occurs when an asynchronous run operation completes.</summary>
    </member>
    <member name="M:System.ServiceModel.Activities.WorkflowControlClient.Suspend(System.Guid)">
      <summary>Suspends the specified workflow instance.</summary>
      <param name="instanceId">The workflow instance to suspend.</param>
    </member>
    <member name="M:System.ServiceModel.Activities.WorkflowControlClient.Suspend(System.Guid,System.String)">
      <summary>Suspends the specified workflow instance.</summary>
      <param name="instanceId">The workflow instance to suspend.</param>
      <param name="reason">The reason to suspend the workflow instance.</param>
    </member>
    <member name="M:System.ServiceModel.Activities.WorkflowControlClient.SuspendAsync(System.Guid)">
      <summary>Begins an asynchronous suspend operation </summary>
      <param name="instanceId">The workflow instance to suspend.</param>
    </member>
    <member name="M:System.ServiceModel.Activities.WorkflowControlClient.SuspendAsync(System.Guid,System.Object)">
      <summary>Begins an asynchronous suspend operation with the specified workflow instance ID and user-defined state data.</summary>
      <param name="instanceId">The workflow instance to suspend.</param>
      <param name="userState">The user-defined state data.</param>
    </member>
    <member name="M:System.ServiceModel.Activities.WorkflowControlClient.SuspendAsync(System.Guid,System.String)">
      <summary>Begins an asynchronous suspend operation with the specified workflow instance ID and reason.</summary>
      <param name="instanceId">The workflow instance to suspend.</param>
      <param name="reason">The reason to suspend the workflow instance.</param>
    </member>
    <member name="M:System.ServiceModel.Activities.WorkflowControlClient.SuspendAsync(System.Guid,System.String,System.Object)">
      <summary>Begins an asynchronous suspend operation with the specified workflow instance ID, reason, and user-defined state data.</summary>
      <param name="instanceId">The workflow instance to suspend.</param>
      <param name="reason">The reason to suspend the workflow instance.</param>
      <param name="userState">The user-defined state data.</param>
    </member>
    <member name="E:System.ServiceModel.Activities.WorkflowControlClient.SuspendCompleted">
      <summary>Occurs when an asynchronous suspend operation completes.</summary>
    </member>
    <member name="M:System.ServiceModel.Activities.WorkflowControlClient.Terminate(System.Guid)">
      <summary>Terminates the specified workflow instance.</summary>
      <param name="instanceId">The workflow instance to terminate.</param>
    </member>
    <member name="M:System.ServiceModel.Activities.WorkflowControlClient.Terminate(System.Guid,System.String)">
      <summary>Terminates the specified workflow instance with the specified reason.</summary>
      <param name="instanceId">The workflow instance to terminate.</param>
      <param name="reason">The reason to terminate the workflow instance.</param>
    </member>
    <member name="M:System.ServiceModel.Activities.WorkflowControlClient.TerminateAsync(System.Guid)">
      <summary>Begins an asynchronous operation that terminates the specified workflow instance.</summary>
      <param name="instanceId">The workflow instance to terminate.</param>
    </member>
    <member name="M:System.ServiceModel.Activities.WorkflowControlClient.TerminateAsync(System.Guid,System.Object)">
      <summary>Begins an asynchronous operation that terminates the specified workflow instance with the specified user-defined data.</summary>
      <param name="instanceId">The workflow instance to terminate.</param>
      <param name="userState">The user-defined state data.</param>
    </member>
    <member name="M:System.ServiceModel.Activities.WorkflowControlClient.TerminateAsync(System.Guid,System.String)">
      <summary>Begins an asynchronous operation that terminates the specified workflow instance with the specified reason.</summary>
      <param name="instanceId">The workflow instance to terminate.</param>
      <param name="reason">The reason to terminate the workflow instance.</param>
    </member>
    <member name="M:System.ServiceModel.Activities.WorkflowControlClient.TerminateAsync(System.Guid,System.String,System.Object)">
      <summary>Begins an asynchronous operation that terminates the specified workflow instance with the specified reason and user-defined data.</summary>
      <param name="instanceId">The workflow instance to terminate.</param>
      <param name="reason">The reason to terminate the workflow instance.</param>
      <param name="userState">The user-defined state data.</param>
    </member>
    <member name="E:System.ServiceModel.Activities.WorkflowControlClient.TerminateCompleted">
      <summary>Occurs when an asynchronous terminate operation completes.</summary>
    </member>
    <member name="M:System.ServiceModel.Activities.WorkflowControlClient.Unsuspend(System.Guid)">
      <summary>Unsuspends the specified workflow instance.</summary>
      <param name="instanceId">The workflow instance to unsuspend.</param>
    </member>
    <member name="M:System.ServiceModel.Activities.WorkflowControlClient.UnsuspendAsync(System.Guid)">
      <summary>Begins an asynchronous unsuspend operation.</summary>
      <param name="instanceId">The workflow instance to unsuspend.</param>
    </member>
    <member name="M:System.ServiceModel.Activities.WorkflowControlClient.UnsuspendAsync(System.Guid,System.Object)">
      <summary>Begins an asynchronous unsuspend operation with the specified user-defined state data.</summary>
      <param name="instanceId">The workflow instance to unsuspend.</param>
      <param name="userState">The user-defined state data.</param>
    </member>
    <member name="E:System.ServiceModel.Activities.WorkflowControlClient.UnsuspendCompleted">
      <summary>Occurs when an asynchronous unsuspend operation completes.</summary>
    </member>
    <member name="T:System.ServiceModel.Activities.WorkflowControlEndpoint">
      <summary>A standard endpoint that enables you to call control operations on workflow instances. </summary>
    </member>
    <member name="M:System.ServiceModel.Activities.WorkflowControlEndpoint.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.Activities.WorkflowControlEndpoint" /> class.</summary>
    </member>
    <member name="M:System.ServiceModel.Activities.WorkflowControlEndpoint.#ctor(System.ServiceModel.Channels.Binding,System.ServiceModel.EndpointAddress)">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.Activities.WorkflowControlEndpoint" /> class with the specified binding and <see cref="T:System.ServiceModel.EndpointAddress" />.</summary>
      <param name="binding">The binding.</param>
      <param name="address">The endpoint address.</param>
    </member>
    <member name="T:System.ServiceModel.Activities.WorkflowCreationContext">
      <summary>Represents a context that is set up during workflow activation using the workflow hosting endpoint to handle arguments, and receive workflow completion notification.</summary>
    </member>
    <member name="M:System.ServiceModel.Activities.WorkflowCreationContext.#ctor">
      <summary>Initiates a new instance of the <see cref="T:System.ServiceModel.Activities.WorkflowCreationContext" /> class.</summary>
    </member>
    <member name="P:System.ServiceModel.Activities.WorkflowCreationContext.CreateOnly">
      <summary>Gets or sets a value that indicates if the workflow instance should be suspended or run after creation..</summary>
      <returns>true if the workflow instance is suspended after it is created ; false if the workflow is run after it is created.</returns>
    </member>
    <member name="P:System.ServiceModel.Activities.WorkflowCreationContext.IsCompletionTransactionRequired">
      <summary>Gets or sets a value that indicates whether the <see cref="M:System.ServiceModel.Activities.WorkflowCreationContext.OnBeginWorkflowCompleted(System.Activities.ActivityInstanceState,System.Collections.Generic.IDictionary{System.String,System.Object},System.Exception,System.TimeSpan,System.AsyncCallback,System.Object)" /> method is called in a transaction..</summary>
      <returns>true if a completion transaction is required; otherwise, false.</returns>
    </member>
    <member name="M:System.ServiceModel.Activities.WorkflowCreationContext.OnAbort">
      <summary>Aborts the <see cref="T:System.ServiceModel.Activities.WorkflowCreationContext" />.</summary>
    </member>
    <member name="M:System.ServiceModel.Activities.WorkflowCreationContext.OnBeginWorkflowCompleted(System.Activities.ActivityInstanceState,System.Collections.Generic.IDictionary{System.String,System.Object},System.Exception,System.TimeSpan,System.AsyncCallback,System.Object)">
      <summary>Begins an asynchronous operation to perform workflow instance completion notification. This method is called when the workflow instance associated with this <see cref="T:System.ServiceModel.Activities.WorkflowCreationContext" /> completes. Derived classes can override this operation to perform custom actions on workflow instance completion.
</summary>
      <returns>The status of the asynchronous operation.</returns>
      <param name="completionState">The state of the workflow instance.</param>
      <param name="workflowOutputs">A collection of key/value pairs that contain output generated by the workflow instance.</param>
      <param name="terminationException">If present, an error that caused the workflow to terminate.</param>
      <param name="timeout">The time interval during which the asynchronous operation must complete.</param>
      <param name="callback">The location in an application to which control returns when the asynchronous operation completes.</param>
      <param name="state">User-defined state.</param>
    </member>
    <member name="M:System.ServiceModel.Activities.WorkflowCreationContext.OnEndWorkflowCompleted(System.IAsyncResult)">
      <summary>Completes an asynchronous operation that notifies workflow instance completion associated with this <see cref="T:System.ServiceModel.Activities.WorkflowCreationContext" />.</summary>
      <param name="result">The status of the asynchronous operation.</param>
    </member>
    <member name="P:System.ServiceModel.Activities.WorkflowCreationContext.WorkflowArguments">
      <summary>Gets the arguments passed to the newly created workflow instance.</summary>
      <returns>A dictionary of key/value pair arguments to the workflow instance.</returns>
    </member>
    <member name="T:System.ServiceModel.Activities.WorkflowHostingEndpoint">
      <summary>An abstract implementation of <see cref="T:System.ServiceModel.ServiceEndpoint" />. Derive from this class to expose contracts that support workflow creation and bookmark resumption. </summary>
    </member>
    <member name="M:System.ServiceModel.Activities.WorkflowHostingEndpoint.#ctor(System.Type)">
      <summary>Creates a new instance of the <see cref="T:System.ServiceModel.Activities.WorkflowHostingEndpoint" /> class with the specified contract type.</summary>
      <param name="contractType">The type of the contract that defines the basic message exchange patterns for a workflow hosting operation.</param>
    </member>
    <member name="M:System.ServiceModel.Activities.WorkflowHostingEndpoint.#ctor(System.Type,System.ServiceModel.Channels.Binding,System.ServiceModel.EndpointAddress)">
      <summary>Creates a new instance of the <see cref="T:System.ServiceModel.Activities.WorkflowHostingEndpoint" /> class with the specified contract type, binding, and endpoint address.</summary>
      <param name="contractType">The service contract for the endpoint.</param>
      <param name="binding">The binding for the endpoint.</param>
      <param name="address">The address of the endpoint.</param>
    </member>
    <member name="P:System.ServiceModel.Activities.WorkflowHostingEndpoint.CorrelationQueries">
      <summary>Gets a collection of CorrelationQuery instances .</summary>
      <returns>A collection of correlation queries.</returns>
    </member>
    <member name="M:System.ServiceModel.Activities.WorkflowHostingEndpoint.OnGetCreationContext(System.Object[],System.ServiceModel.OperationContext,System.Guid,System.ServiceModel.Activities.WorkflowHostingResponseContext)">
      <summary> Override to create a new<see cref="T:System.ServiceModel.Activities.WorkflowCreationContext" /> instance.</summary>
      <returns>A workflow creation context object.</returns>
      <param name="inputs">The inputs to the service operation.</param>
      <param name="operationContext">Provides the execution context of the service operation invoked.</param>
      <param name="instanceId">The instance ID of the workflow instance being created.</param>
      <param name="responseContext">The <see cref="T:System.ServiceModel.Activities.WorkflowHostingEndpointResponseContext" /> object that can be used to send replies back to the message source for a request/reply contract.</param>
    </member>
    <member name="M:System.ServiceModel.Activities.WorkflowHostingEndpoint.OnGetInstanceId(System.Object[],System.ServiceModel.OperationContext)">
      <summary>Override to return the instance ID for the workflow instance being created.</summary>
      <returns>The instance ID for the newly created workflow instance.</returns>
      <param name="inputs">The inputs to the service operation.</param>
      <param name="operationContext">The operation context of the service operation.</param>
    </member>
    <member name="M:System.ServiceModel.Activities.WorkflowHostingEndpoint.OnResolveBookmark(System.Object[],System.ServiceModel.OperationContext,System.ServiceModel.Activities.WorkflowHostingResponseContext,System.Object@)">
      <summary>Override to return a bookmark to be resumed on the workflow instance. </summary>
      <returns>A bookmark.</returns>
      <param name="inputs">The inputs to the service operation.</param>
      <param name="operationContext">The execution context of the service operation being invoked.</param>
      <param name="responseContext">The <see cref="T:System.ServiceModel.Activities.WorkflowHostingEndpointResponseContext" /> object that can be used to send replies back to the message source for a request/reply contract.</param>
      <param name="value">A value to be passed back to the workflow instance when the bookmark is resumed </param>
    </member>
    <member name="T:System.ServiceModel.Activities.WorkflowHostingResponseContext">
      <summary>This class is used in conjunction with the <see cref="T:System.ServiceModel.Activities.WorkflowHostingEndpoint" /> class. It is used for sending the response for a request/reply contract supported by a <see cref="T:System.ServiceModel.Activities.WorkflowHostingEndpoint" /> implementation.c</summary>
    </member>
    <member name="M:System.ServiceModel.Activities.WorkflowHostingResponseContext.SendResponse(System.Object,System.Object[])">
      <summary>Sends response to a message sent to the <see cref="T:System.ServiceModel.Activities.WorkflowHostingEndpoint" />.</summary>
      <param name="returnValue">The return value of the operation.</param>
      <param name="outputs">The out arguments of the operation.</param>
    </member>
    <member name="T:System.ServiceModel.Activities.WorkflowService">
      <summary>Enables you to create, configure, and access the properties of a workflow service.</summary>
    </member>
    <member name="M:System.ServiceModel.Activities.WorkflowService.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.Activities.WorkflowService" /> class.</summary>
    </member>
    <member name="P:System.ServiceModel.Activities.WorkflowService.AllowBufferedReceive">
      <summary>Gets or sets a value that indicates whether the workflow service has buffered receive processing enabled for incoming messages.</summary>
      <returns>true if the workflow service has buffered receive processing enabled for incoming messages; otherwise, false.</returns>
    </member>
    <member name="P:System.ServiceModel.Activities.WorkflowService.Body">
      <summary>Gets or sets the activity tree for this workflow service.</summary>
      <returns>The activity tree for this workflow service.</returns>
    </member>
    <member name="P:System.ServiceModel.Activities.WorkflowService.ConfigurationName">
      <summary>Gets or sets the workflow service configuration name.</summary>
      <returns>The workflow service configuration name.</returns>
    </member>
    <member name="P:System.ServiceModel.Activities.WorkflowService.Endpoints">
      <summary>Gets the collection of endpoints of this workflow service.</summary>
      <returns>The collection of endpoints of this workflow service.</returns>
    </member>
    <member name="M:System.ServiceModel.Activities.WorkflowService.GetWorkflowRoot">
      <summary>Returns the root of the activity tree.</summary>
      <returns>The root of the activity tree.</returns>
    </member>
    <member name="P:System.ServiceModel.Activities.WorkflowService.Name">
      <summary>Gets or sets the name of the workflow service as an <see cref="T:System.Xml.Linq.XName" /> object.</summary>
      <returns>The name of the workflow service.</returns>
    </member>
    <member name="T:System.ServiceModel.Activities.WorkflowServiceHost">
      <summary>Provides a host for workflows. Supports features like messaging activities, multi-instancing, and configuration. </summary>
    </member>
    <member name="M:System.ServiceModel.Activities.WorkflowServiceHost.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.Activities.WorkflowServiceHost" /> class.</summary>
    </member>
    <member name="M:System.ServiceModel.Activities.WorkflowServiceHost.#ctor(System.Activities.Activity,System.Uri[])">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.Activities.WorkflowServiceHost" /> class using the specified activity and base addresses.</summary>
      <param name="activity">The root activity of the workflow service.</param>
      <param name="baseAddresses">An array of  base addresses for the workflow service.</param>
    </member>
    <member name="M:System.ServiceModel.Activities.WorkflowServiceHost.#ctor(System.Object,System.Uri[])">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.Activities.WorkflowServiceHost" /> class using the specified service object and base addresses.</summary>
      <param name="serviceImplementation">The root activity of the workflow service to be hosted.</param>
      <param name="baseAddresses">An array of base addresses for the workflow service.</param>
    </member>
    <member name="M:System.ServiceModel.Activities.WorkflowServiceHost.#ctor(System.ServiceModel.Activities.WorkflowService,System.Uri[])">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.Activities.WorkflowServiceHost" /> class using the specified service definition and collection of base addresses.</summary>
      <param name="serviceDefinition">The workflow service to host.</param>
      <param name="baseAddresses">An array of base addresses for the hosted workflow service.</param>
    </member>
    <member name="P:System.ServiceModel.Activities.WorkflowServiceHost.Activity">
      <summary>Gets the root activity of the hosted workflow service. </summary>
      <returns>The root activity of the hosted workflow service.</returns>
    </member>
    <member name="M:System.ServiceModel.Activities.WorkflowServiceHost.AddServiceEndpoint(System.ServiceModel.Description.ServiceEndpoint)">
      <summary>Adds a service endpoint to the workflow service host.</summary>
      <param name="endpoint">The service endpoint to add.</param>
    </member>
    <member name="M:System.ServiceModel.Activities.WorkflowServiceHost.AddServiceEndpoint(System.String,System.ServiceModel.Channels.Binding,System.String)">
      <summary>Adds a service endpoint to the workflow service host using the specified contract, binding, and address.</summary>
      <returns>A service endpoint.</returns>
      <param name="implementedContract">The service contract exposed by the endpoint.</param>
      <param name="binding">The binding for the endpoint.</param>
      <param name="address">The address of the endpoint..</param>
    </member>
    <member name="M:System.ServiceModel.Activities.WorkflowServiceHost.AddServiceEndpoint(System.String,System.ServiceModel.Channels.Binding,System.String,System.Uri)">
      <summary>Adds a service endpoint to the workflow service host using the specified contract, binding, endpoint address, and listen URI.</summary>
      <returns>A service endpoint.</returns>
      <param name="implementedContract">The service contract exposed by the endpoint.</param>
      <param name="binding">The binding for the endpoint.</param>
      <param name="address">The address of the endpoint.</param>
      <param name="listenUri">The address at which the service endpoint listens for incoming messages.</param>
    </member>
    <member name="M:System.ServiceModel.Activities.WorkflowServiceHost.AddServiceEndpoint(System.String,System.ServiceModel.Channels.Binding,System.Uri)">
      <summary>Adds a service endpoint to the workflow service host using the specified contract, binding, and address.</summary>
      <returns>A service endpoint.</returns>
      <param name="implementedContract">The service contract exposed by the endpoint.</param>
      <param name="binding">The binding for the endpoint.</param>
      <param name="address">The address of the endpoint.</param>
    </member>
    <member name="M:System.ServiceModel.Activities.WorkflowServiceHost.AddServiceEndpoint(System.String,System.ServiceModel.Channels.Binding,System.Uri,System.Uri)">
      <summary>Adds a service endpoint to the workflow service host using the specified contract, binding, endpoint address, and listen URI.</summary>
      <returns>A service endpoint.</returns>
      <param name="implementedContract">The contract exposed by the endpoint.</param>
      <param name="binding">The binding for the endpoint.</param>
      <param name="address">The address of the endpoint.l</param>
      <param name="listenUri">The address at which the service endpoint listens for incoming messages.</param>
    </member>
    <member name="M:System.ServiceModel.Activities.WorkflowServiceHost.AddServiceEndpoint(System.Xml.Linq.XName,System.ServiceModel.Channels.Binding,System.String,System.Uri,System.String)">
      <summary>Adds a service endpoint to the workflow service host using the specified contract, binding, endpoint address, listen URI, and behavior configuration name.</summary>
      <returns>A service endpoint.</returns>
      <param name="serviceContractName">The contract exposed by the endpoint</param>
      <param name="binding">The binding for the endpoint.</param>
      <param name="address">The address of the endpoint.</param>
      <param name="listenUri">The address at which the service endpoint listens for incoming messages.</param>
      <param name="behaviorConfigurationName">The endpoint behavior configuration name. </param>
    </member>
    <member name="M:System.ServiceModel.Activities.WorkflowServiceHost.AddServiceEndpoint(System.Xml.Linq.XName,System.ServiceModel.Channels.Binding,System.Uri,System.Uri,System.String)">
      <summary>Adds a service endpoint to the workflow service host using the specified implemented contract, binding, endpoint address, listen URI, and a behavior configuration name.</summary>
      <returns>A service endpoint.</returns>
      <param name="serviceContractName">The contract exposed by the endpoint.</param>
      <param name="binding">The binding for the endpoint.</param>
      <param name="address">The address of the endpoint.</param>
      <param name="listenUri">The address at which the service endpoint listens for incoming messages.</param>
      <param name="behaviorConfigurationName">The behavior configuration name.</param>
    </member>
    <member name="M:System.ServiceModel.Activities.WorkflowServiceHost.CreateDescription(System.Collections.Generic.IDictionary{System.String,System.ServiceModel.Description.ContractDescription}@)">
      <summary>Creates a service description of the hosted workflow service using the specified key/value pair collection of address, binding, contract and behavior service endpoint information.</summary>
      <returns>A service for the hosted workflow service.</returns>
      <param name="implementedContracts">A collection of key/value pairs that contains the contract description for the hosted workflow service.</param>
    </member>
    <member name="P:System.ServiceModel.Activities.WorkflowServiceHost.DurableInstancingOptions">
      <summary>Gets the <see cref="T:System.ServiceModel.Activities.DurableInstancingOptions" /> associated with the workflow service host. </summary>
      <returns>The durable instancing options.</returns>
    </member>
    <member name="M:System.ServiceModel.Activities.WorkflowServiceHost.InitializeRuntime">
      <summary>Initializes the runtime for the workflow service host.</summary>
    </member>
    <member name="M:System.ServiceModel.Activities.WorkflowServiceHost.OnAbort">
      <summary>Aborts the workflow service host.</summary>
    </member>
    <member name="M:System.ServiceModel.Activities.WorkflowServiceHost.OnBeginClose(System.TimeSpan,System.AsyncCallback,System.Object)">
      <summary>Begins an asynchronous operation invoked when the workflow service host is closed.</summary>
      <returns>A reference to the asynchronous close operation.</returns>
      <param name="timeout">The period of time the asynchronous close operation has to complete before timing out.</param>
      <param name="callback">The asynchronous callback delegate that receives notification of the completion of the asynchronous close operation. </param>
      <param name="state">User-define state data that is associated with the asynchronous close operation.</param>
    </member>
    <member name="M:System.ServiceModel.Activities.WorkflowServiceHost.OnBeginOpen(System.TimeSpan,System.AsyncCallback,System.Object)">
      <summary>Begins an asynchronous operation invoked when the workflow service host is opened.</summary>
      <returns>A reference to the asynchronous operation.</returns>
      <param name="timeout">The period of time the asynchronous open operation has to complete before timing out.</param>
      <param name="callback">The asynchronous callback delegate that receives notification of the completion of the asynchronous open operation.</param>
      <param name="state">User-define state data that is associated with the asynchronous open operation.</param>
    </member>
    <member name="M:System.ServiceModel.Activities.WorkflowServiceHost.OnClose(System.TimeSpan)">
      <summary>Closes down the hosted service, including the channel dispatchers and associated instance contexts and listeners.</summary>
      <param name="timeout">The period of time the close operation has to complete before timing out.</param>
    </member>
    <member name="M:System.ServiceModel.Activities.WorkflowServiceHost.OnEndClose(System.IAsyncResult)">
      <summary>Completes an asynchronous operation invoked when the workflow service host is closed.</summary>
      <param name="result">A reference to the asynchronous operation.</param>
    </member>
    <member name="M:System.ServiceModel.Activities.WorkflowServiceHost.OnEndOpen(System.IAsyncResult)">
      <summary>Completes an asynchronous operation invoked when the workflow service host is opened.</summary>
      <param name="result">A reference to the asynchronous operation.</param>
    </member>
    <member name="M:System.ServiceModel.Activities.WorkflowServiceHost.OnOpen(System.TimeSpan)">
      <summary>Opens the channel dispatchers.</summary>
      <param name="timeout">The period of time the open operation has to complete before timing out.</param>
    </member>
    <member name="P:System.ServiceModel.Activities.WorkflowServiceHost.WorkflowExtensions">
      <summary>Gets a <see cref="T:System.Activities.Hosting.WorkflowInstanceExtensionManager" /> object to add or remove extensions to the workflow service instance.</summary>
      <returns>workflow instance extension manager.</returns>
    </member>
    <member name="T:System.ServiceModel.Activities.Configuration.BufferedReceiveElement">
      <summary>Defines the configuration element that controls the buffering of data received from the client by the workflow service operation. This is a sealed class.</summary>
    </member>
    <member name="M:System.ServiceModel.Activities.Configuration.BufferedReceiveElement.#ctor">
      <summary>Creates a new instance of the <see cref="T:System.ServiceModel.Activities.Configuration.BufferedReceiveElement" /> class.</summary>
    </member>
    <member name="P:System.ServiceModel.Activities.Configuration.BufferedReceiveElement.BehaviorType">
      <summary>Gets the behavior type of the service element that controls the workflow runtime buffering of messages received from a client instance of workflow.</summary>
      <returns>A type object.</returns>
    </member>
    <member name="P:System.ServiceModel.Activities.Configuration.BufferedReceiveElement.MaxPendingMessagesPerChannel">
      <summary>Gets or sets the maximum number of messages which can be buffered for a communications channel during a workflow service operation.</summary>
      <returns>An integer.</returns>
    </member>
    <member name="T:System.ServiceModel.Activities.Configuration.ChannelSettingsElement">
      <summary>Enables assigning values to the settings of a channel listener configuration element in a workflow service application. This is a sealed class.</summary>
    </member>
    <member name="M:System.ServiceModel.Activities.Configuration.ChannelSettingsElement.#ctor">
      <summary>Creates a new instance of the <see cref="T:System.ServiceModel.Activities.Configuration.ChannelSettingsElement" /> class.</summary>
    </member>
    <member name="P:System.ServiceModel.Activities.Configuration.ChannelSettingsElement.IdleTimeout">
      <summary>Gets or sets the maximum interval of time for which the object can remain idle in the cache before being disposed..</summary>
      <returns>A timespan object.</returns>
    </member>
    <member name="P:System.ServiceModel.Activities.Configuration.ChannelSettingsElement.LeaseTimeout">
      <summary>Gets or sets the interval of time after which an object will be removed from the cache.</summary>
      <returns>A timespan object.</returns>
    </member>
    <member name="P:System.ServiceModel.Activities.Configuration.ChannelSettingsElement.MaxItemsInCache">
      <summary>Gets or sets the maximum number of objects that can be in the cache.</summary>
      <returns>An integer representing a maximum number.</returns>
    </member>
    <member name="T:System.ServiceModel.Activities.Configuration.EtwTrackingBehaviorElement">
      <summary>Creates and maintains the <see cref="T:System.ServiceModel.Activities.Description.EtwTrackingBehavior" /> sub-element in the service behaviors section of a Sql workflow configuration file.</summary>
    </member>
    <member name="M:System.ServiceModel.Activities.Configuration.EtwTrackingBehaviorElement.#ctor">
      <summary>Creates a new instance of the <see cref="T:System.ServiceModel.Activities.Configuration.EtwTrackingBehaviorElement" /> class.</summary>
    </member>
    <member name="P:System.ServiceModel.Activities.Configuration.EtwTrackingBehaviorElement.BehaviorType">
      <summary>Gets the type of the <see cref="T:System.ServiceModel.Activities.Configuration.EtwTrackingBehaviorElement" /> instance.</summary>
      <returns>The type of an event tracking behavior element.</returns>
    </member>
    <member name="M:System.ServiceModel.Activities.Configuration.EtwTrackingBehaviorElement.CreateBehavior">
      <summary>Returns a new instance of the <see cref="T:System.ServiceModel.Activities.Description.EtwTrackingBehavior" /> class.</summary>
      <returns>An instance of an event tracking behavior object.</returns>
    </member>
    <member name="P:System.ServiceModel.Activities.Configuration.EtwTrackingBehaviorElement.ProfileName">
      <summary>Gets the tracking profile name parameter for the event tracking behavior element.</summary>
      <returns>A string profile name.</returns>
    </member>
    <member name="P:System.ServiceModel.Activities.Configuration.EtwTrackingBehaviorElement.Properties">
      <summary>Gets the <see cref="T:System.Configuration.ConfigurationPropertyCollection" /> of the current event tracking behavior element.</summary>
      <returns>A collection of configuration properties.</returns>
    </member>
    <member name="T:System.ServiceModel.Activities.Configuration.FactorySettingsElement">
      <summary>Enables assigning values to the settings of a channel factory configuration element in a workflow service application. This is a sealed class.</summary>
    </member>
    <member name="M:System.ServiceModel.Activities.Configuration.FactorySettingsElement.#ctor">
      <summary>Creates a new instance of the <see cref="T:System.ServiceModel.Activities.Configuration.FactorySettingsElement" /> class.</summary>
    </member>
    <member name="P:System.ServiceModel.Activities.Configuration.FactorySettingsElement.IdleTimeout">
      <summary>Gets or sets the maximum interval of time for which the object can remain idle in a workflow cache before being disposed.</summary>
      <returns>A timespan object.</returns>
    </member>
    <member name="P:System.ServiceModel.Activities.Configuration.FactorySettingsElement.LeaseTimeout">
      <summary>Gets or sets the interval of time after which an object will be removed from a workflow cache.</summary>
      <returns>A timespan object.</returns>
    </member>
    <member name="P:System.ServiceModel.Activities.Configuration.FactorySettingsElement.MaxItemsInCache">
      <summary>Gets or sets the maximum number of objects that can be in a workflow cache.</summary>
      <returns>An integer representing a maximum number.</returns>
    </member>
    <member name="T:System.ServiceModel.Activities.Configuration.SendMessageChannelCacheElement">
      <summary>Creates and maintains the sub-element that configures use of the <see cref="T:System.ServiceModel.Activities.SendMessageChannelCache" />, in the service behaviors section of a Sql workflow configuration file. This is a sealed class.</summary>
    </member>
    <member name="M:System.ServiceModel.Activities.Configuration.SendMessageChannelCacheElement.#ctor">
      <summary>Creates a  new instance of the <see cref="T:System.ServiceModel.Activities.Configuration.SendMessageChannelCacheElement" /> class.</summary>
    </member>
    <member name="P:System.ServiceModel.Activities.Configuration.SendMessageChannelCacheElement.AllowUnsafeCaching">
      <summary>Gets a value indicating whether the cache associated with an instance of workflow is turned on or off. </summary>
      <returns>true if the workflow instance cache is turned on; otherwise, false.</returns>
    </member>
    <member name="P:System.ServiceModel.Activities.Configuration.SendMessageChannelCacheElement.BehaviorType">
      <summary>Gets or sets the type of the <see cref="T:System.ServiceModel.Activities.Configuration.SendMessageChannelCacheElement" />.</summary>
      <returns>A type object.</returns>
    </member>
    <member name="P:System.ServiceModel.Activities.Configuration.SendMessageChannelCacheElement.ChannelSettings">
      <summary>Gets or sets the settings to configure the channels that listen for incoming messages in a workflow service host.</summary>
      <returns>A workflow configuration element that handles listener channel settings. </returns>
    </member>
    <member name="P:System.ServiceModel.Activities.Configuration.SendMessageChannelCacheElement.FactorySettings">
      <summary>Gets or sets the settings to configure the channels that send messages in a workflow service host.</summary>
      <returns>A workflow configuration element that handles factory channel settings. </returns>
    </member>
    <member name="T:System.ServiceModel.Activities.Configuration.SqlWorkflowInstanceStoreElement">
      <summary>Creates and maintains the <see cref="T:System.Activities.DurableInstancing.SqlWorkflowInstanceStore" /> sub-element of the service behaviors section of a Sql workflow configuration file.</summary>
    </member>
    <member name="M:System.ServiceModel.Activities.Configuration.SqlWorkflowInstanceStoreElement.#ctor">
      <summary>Creates a new instance of the <see cref="T:System.ServiceModel.Activities.Configuration.SqlWorkflowInstanceStoreElement" /> class.</summary>
    </member>
    <member name="P:System.ServiceModel.Activities.Configuration.SqlWorkflowInstanceStoreElement.BehaviorType">
      <summary>Gets the type of a <see cref="T:System.ServiceModel.Activities.Description.SqlWorkflowInstanceStoreBehavior" /> object.</summary>
      <returns>A type object.</returns>
    </member>
    <member name="P:System.ServiceModel.Activities.Configuration.SqlWorkflowInstanceStoreElement.ConnectionString">
      <summary>Gets or sets the connection string to the database server.</summary>
      <returns>A string that contains information about the connection to the instance store database.</returns>
    </member>
    <member name="P:System.ServiceModel.Activities.Configuration.SqlWorkflowInstanceStoreElement.ConnectionStringName">
      <summary>Gets or sets a named connection string to the database server.</summary>
      <returns>A string name that represents a connection to a database server.</returns>
    </member>
    <member name="M:System.ServiceModel.Activities.Configuration.SqlWorkflowInstanceStoreElement.CreateBehavior">
      <summary>Returns a new object of type <see cref="T:System.ServiceModel.Activities.Description.SqlWorkflowInstanceStoreBehavior" /> that contains property settings for a <see cref="T:System.ServiceModel.Activities.Configuration.SqlWorkflowInstanceStoreElement" />.</summary>
      <returns>An generic object that contains workflow configuration element property settings.</returns>
    </member>
    <member name="P:System.ServiceModel.Activities.Configuration.SqlWorkflowInstanceStoreElement.HostLockRenewalPeriod">
      <summary>Gets or sets the time period in which the host must renew the lock on an instance.</summary>
      <returns>A timespan object that represents the lock renewal period.</returns>
    </member>
    <member name="P:System.ServiceModel.Activities.Configuration.SqlWorkflowInstanceStoreElement.InstanceCompletionAction">
      <summary>Gets or sets whether workflow instance data is kept in the persistence store after the workflow instance completes or if it is deleted at that point.</summary>
      <returns>An enumeration of the actions that can occur when an instance completes.</returns>
    </member>
    <member name="P:System.ServiceModel.Activities.Configuration.SqlWorkflowInstanceStoreElement.InstanceEncodingOption">
      <summary>Gets or sets the optional property that specifies how compression is used for instance data.</summary>
      <returns>An option that determines the manner in which data compression is performed, if at all.</returns>
    </member>
    <member name="P:System.ServiceModel.Activities.Configuration.SqlWorkflowInstanceStoreElement.InstanceLockedExceptionAction">
      <summary>Gets or sets the action that occurs in response to an exception that is thrown when a workflow instance is locked.</summary>
      <returns>An action response to an exception thrown.</returns>
    </member>
    <member name="P:System.ServiceModel.Activities.Configuration.SqlWorkflowInstanceStoreElement.RunnableInstancesDetectionPeriod">
      <summary>Gets or sets the <see cref="P:System.Activities.DurableInstancing.SqlWorkflowInstanceStore.RunnableInstancesDetectionPeriod" /> property. Specifies the time period after which the SQL Workflow Instance Store runs a detection task to detect any runnable or activatable workflow instances in the persistence database after the previous detection cycle. </summary>
      <returns>Returns the time interval.</returns>
    </member>
    <member name="T:System.ServiceModel.Activities.Configuration.WorkflowControlEndpointCollectionElement">
      <summary>Represents a collection of <see cref="T:System.ServiceModel.Activities.Configuration.WorkflowControlEndpointElement" /> objects in a workflow control configuration element.</summary>
    </member>
    <member name="M:System.ServiceModel.Activities.Configuration.WorkflowControlEndpointCollectionElement.#ctor">
      <summary>Creates a new instance of the <see cref="T:System.ServiceModel.Activities.Configuration.WorkflowControlEndpointCollectionElement" /> class.</summary>
    </member>
    <member name="T:System.ServiceModel.Activities.Configuration.WorkflowControlEndpointElement">
      <summary>Defines a workflow control endpoint element for a workflow configuration file.</summary>
    </member>
    <member name="M:System.ServiceModel.Activities.Configuration.WorkflowControlEndpointElement.#ctor">
      <summary>Creates a new instance of the <see cref="T:System.ServiceModel.Activities.Configuration.WorkflowControlEndpointElement" /> class.</summary>
    </member>
    <member name="P:System.ServiceModel.Activities.Configuration.WorkflowControlEndpointElement.Address">
      <summary>Gets or sets the URI address for the control endpoint.</summary>
      <returns>A string containing the URI address.</returns>
    </member>
    <member name="P:System.ServiceModel.Activities.Configuration.WorkflowControlEndpointElement.Binding">
      <summary>Gets or sets the binding for the control endpoint.</summary>
      <returns>A string containing the control endpoint binding.</returns>
    </member>
    <member name="P:System.ServiceModel.Activities.Configuration.WorkflowControlEndpointElement.BindingConfiguration">
      <summary>Gets or sets the binding configuration for the control endpoint.</summary>
      <returns>A string containing the binding configuration for the endpoint.</returns>
    </member>
    <member name="M:System.ServiceModel.Activities.Configuration.WorkflowControlEndpointElement.CreateServiceEndpoint(System.ServiceModel.Description.ContractDescription)">
      <summary>Returns a new <see cref="T:System.ServiceModel.Activities.WorkflowControlEndpoint" />.</summary>
      <returns>A workflow control service endpoint .</returns>
      <param name="contractDescription">Not used.</param>
    </member>
    <member name="P:System.ServiceModel.Activities.Configuration.WorkflowControlEndpointElement.EndpointType">
      <summary>When called or overridden by a derived class, gets the type of the workflow control endpoint.</summary>
      <returns>The type of endpoint.</returns>
    </member>
    <member name="M:System.ServiceModel.Activities.Configuration.WorkflowControlEndpointElement.OnApplyConfiguration(System.ServiceModel.Description.ServiceEndpoint,System.ServiceModel.Configuration.ChannelEndpointElement)">
      <summary>When called or overridden by a derived class, converts the specified <see cref="T:System.ServiceModel.Description.ServiceEndpoint" /> to a workflow control endpoint.</summary>
      <param name="endpoint">The service endpoint to which control configuration settings are applied.</param>
      <param name="channelEndpointElement">Not implemented.</param>
    </member>
    <member name="M:System.ServiceModel.Activities.Configuration.WorkflowControlEndpointElement.OnApplyConfiguration(System.ServiceModel.Description.ServiceEndpoint,System.ServiceModel.Configuration.ServiceEndpointElement)">
      <summary>When called or overridden by a derived class, converts the specified <see cref="T:System.ServiceModel.Description.ServiceEndpoint" /> to a workflow control endpoint.</summary>
      <param name="endpoint">The service endpoint to which control configuration settings are applied.</param>
      <param name="serviceEndpointElement">Not implemented.</param>
    </member>
    <member name="M:System.ServiceModel.Activities.Configuration.WorkflowControlEndpointElement.OnInitializeAndValidate(System.ServiceModel.Configuration.ChannelEndpointElement)">
      <summary>When called or overridden by a derived class, initializes and validates the specified channel endpoint element.</summary>
      <param name="channelEndpointElement">The channel endpoint element to initialize and validate.</param>
    </member>
    <member name="M:System.ServiceModel.Activities.Configuration.WorkflowControlEndpointElement.OnInitializeAndValidate(System.ServiceModel.Configuration.ServiceEndpointElement)">
      <summary>When called or overridden by a derived class, initializes and validates the specified service endpoint element.</summary>
      <param name="serviceEndpointElement">The service endpoint element to initialize and validate.</param>
    </member>
    <member name="P:System.ServiceModel.Activities.Configuration.WorkflowControlEndpointElement.Properties">
      <summary>Gets a collection of properties for the control endpoint element.</summary>
      <returns>A collection of configuration properties.</returns>
    </member>
    <member name="T:System.ServiceModel.Activities.Configuration.WorkflowIdleElement">
      <summary>Handles the properties of the workflow definition idle element. The idle element defines the process that is followed when the workflow instance goes into an idle state. This is a sealed class.</summary>
    </member>
    <member name="M:System.ServiceModel.Activities.Configuration.WorkflowIdleElement.#ctor">
      <summary>Creates a new instance of the <see cref="T:System.ServiceModel.Activities.Configuration.WorkflowIdleElement" /> class.</summary>
    </member>
    <member name="P:System.ServiceModel.Activities.Configuration.WorkflowIdleElement.BehaviorType">
      <summary>Gets whether the workflow instance only unloads from memory or is persisted when the workflow instance becomes idle.</summary>
      <returns>An object that represents a type of behavior.</returns>
    </member>
    <member name="P:System.ServiceModel.Activities.Configuration.WorkflowIdleElement.TimeToPersist">
      <summary>Gets or sets the period of time allotted for persisting the workflow instance.</summary>
      <returns>A timespan object.</returns>
    </member>
    <member name="P:System.ServiceModel.Activities.Configuration.WorkflowIdleElement.TimeToUnload">
      <summary>Gets or sets the period of time allotted for unloading the workflow instance.</summary>
      <returns>A timespan object.</returns>
    </member>
    <member name="T:System.ServiceModel.Activities.Configuration.WorkflowInstanceManagementElement">
      <summary>Adds the <see cref="T:System.ServiceModel.Activities.Description.WorkflowInstanceManagementBehavior" /> to the service host.</summary>
    </member>
    <member name="M:System.ServiceModel.Activities.Configuration.WorkflowInstanceManagementElement.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.Activities.Configuration.WorlkflowInstanceManagementElement" /> class.</summary>
    </member>
    <member name="P:System.ServiceModel.Activities.Configuration.WorkflowInstanceManagementElement.AuthorizedWindowsGroup">
      <summary>Gets or sets the Windows group of users authorized to use the workflow instance control endpoint.</summary>
      <returns>The Windows group of users authorized to use the workflow instance control endpoint.</returns>
    </member>
    <member name="P:System.ServiceModel.Activities.Configuration.WorkflowInstanceManagementElement.BehaviorType">
      <summary>Gets the type of the behavior associated with this configuration element.</summary>
      <returns>The type of behavior associated with this configuration element.</returns>
    </member>
    <member name="M:System.ServiceModel.Activities.Configuration.WorkflowInstanceManagementElement.CreateBehavior">
      <summary>Creates the <see cref="T:System.ServiceModel.Activities.Description.WorkflowInstanceManagementBehavior" /> behavior.</summary>
      <returns>The workflow instance management behavior..</returns>
    </member>
    <member name="P:System.ServiceModel.Activities.Configuration.WorkflowInstanceManagementElement.Properties">
      <summary>Gets the collection of properties associated with this configuration element.</summary>
      <returns>The properties associated with this configuration element.</returns>
    </member>
    <member name="T:System.ServiceModel.Activities.Configuration.WorkflowUnhandledExceptionElement">
      <summary>Handles the properties of an unhandled exception that occurs during a workflow service operation.  This is a sealed class.</summary>
    </member>
    <member name="M:System.ServiceModel.Activities.Configuration.WorkflowUnhandledExceptionElement.#ctor">
      <summary>Creates a new instance of the <see cref="T:System.ServiceModel.Activities.Configuration.WorkflowUnhandledExceptionElement" /> class.</summary>
    </member>
    <member name="P:System.ServiceModel.Activities.Configuration.WorkflowUnhandledExceptionElement.Action">
      <summary>Gets or sets the process that is invoked when the unhandled exception occurs.</summary>
      <returns>An action.</returns>
    </member>
    <member name="P:System.ServiceModel.Activities.Configuration.WorkflowUnhandledExceptionElement.BehaviorType">
      <summary>Gets the type of the unhandled exception behavior.</summary>
      <returns>A type object.</returns>
    </member>
    <member name="T:System.ServiceModel.Activities.Description.BufferedReceiveServiceBehavior">
      <summary>A service behavior that enables your service to use buffered receive processing. </summary>
    </member>
    <member name="M:System.ServiceModel.Activities.Description.BufferedReceiveServiceBehavior.#ctor">
      <summary>Creates a new instance of the <see cref="T:System.ServiceModel.Activities.Description.BufferedReceiveServiceBehavior" /> class.</summary>
    </member>
    <member name="M:System.ServiceModel.Activities.Description.BufferedReceiveServiceBehavior.AddBindingParameters(System.ServiceModel.Description.ServiceDescription,System.ServiceModel.ServiceHostBase,System.Collections.ObjectModel.Collection{System.ServiceModel.Description.ServiceEndpoint},System.ServiceModel.Channels.BindingParameterCollection)">
      <summary>Implements the <see cref="M:System.ServiceModel.Description.IServiceBehavior.AddBindingParameters(System.ServiceModel.Description.ServiceDescription,System.ServiceModel.ServiceHostBase,System.Collections.ObjectModel.Collection{System.ServiceModel.Description.ServiceEndpoint},System.ServiceModel.Channels.BindingParameterCollection)" /> method.</summary>
      <param name="serviceDescription">The service description.</param>
      <param name="serviceHostBase">The service host.</param>
      <param name="endpoints">The endpoints exposed by the service.</param>
      <param name="bindingParameters">The binding parameters required to implement the behavior.</param>
    </member>
    <member name="M:System.ServiceModel.Activities.Description.BufferedReceiveServiceBehavior.ApplyDispatchBehavior(System.ServiceModel.Description.ServiceDescription,System.ServiceModel.ServiceHostBase)">
      <summary>Implements the <see cref="M:System.ServiceModel.Description.IServiceBehavior.ApplyDispatchBehavior(System.ServiceModel.Description.ServiceDescription,System.ServiceModel.ServiceHostBase)" /> method.</summary>
      <param name="serviceDescription">The service description.</param>
      <param name="serviceHostBase">The service host.</param>
    </member>
    <member name="P:System.ServiceModel.Activities.Description.BufferedReceiveServiceBehavior.MaxPendingMessagesPerChannel">
      <summary>Gets or sets a value that specifies the maximum number of pending messages allowed for each channel.</summary>
      <returns>The maximum number of pending messages.</returns>
    </member>
    <member name="M:System.ServiceModel.Activities.Description.BufferedReceiveServiceBehavior.Validate(System.ServiceModel.Description.ServiceDescription,System.ServiceModel.ServiceHostBase)">
      <summary>Implements the <see cref="M:System.ServiceModel.Description.IServiceBehavior.Validate(System.ServiceModel.Description.ServiceDescription,System.ServiceModel.ServiceHostBase)" /> method.</summary>
      <param name="serviceDescription">The service description.</param>
      <param name="serviceHostBase">The service host.</param>
    </member>
    <member name="T:System.ServiceModel.Activities.Description.EtwTrackingBehavior">
      <summary>A service behavior that allows a service to utilize ETW tracking using an <see cref="T:System.Activities.Tracking.EtwTrackingParticipant" />.</summary>
    </member>
    <member name="M:System.ServiceModel.Activities.Description.EtwTrackingBehavior.#ctor">
      <summary>Creates a new instance of the <see cref="T:System.ServiceModel.Activities.Description.EtwTrackingBehavior" /> class.</summary>
    </member>
    <member name="M:System.ServiceModel.Activities.Description.EtwTrackingBehavior.AddBindingParameters(System.ServiceModel.Description.ServiceDescription,System.ServiceModel.ServiceHostBase,System.Collections.ObjectModel.Collection{System.ServiceModel.Description.ServiceEndpoint},System.ServiceModel.Channels.BindingParameterCollection)">
      <summary>An implementation of the <see cref="M:System.ServiceModel.Description.IServiceBehavior.AddBindingParameters(System.ServiceModel.Description.ServiceDescription,System.ServiceModel.ServiceHostBase,System.Collections.ObjectModel.Collection{System.ServiceModel.Description.ServiceEndpoint},System.ServiceModel.Channels.BindingParameterCollection)" /> method.</summary>
      <param name="serviceDescription">The service description.</param>
      <param name="serviceHostBase">The host of the service.</param>
      <param name="endpoints">The service endpoints.</param>
      <param name="bindingParameters">Custom objects required to implement the behavior.</param>
    </member>
    <member name="M:System.ServiceModel.Activities.Description.EtwTrackingBehavior.ApplyDispatchBehavior(System.ServiceModel.Description.ServiceDescription,System.ServiceModel.ServiceHostBase)">
      <summary>An implementation of the <see cref="M:System.ServiceModel.Description.IServiceBehavior.ApplyDispatchBehavior(System.ServiceModel.Description.ServiceDescription,System.ServiceModel.ServiceHostBase)" /></summary>
      <param name="serviceDescription">The service description.</param>
      <param name="serviceHostBase">The host of the service.</param>
    </member>
    <member name="P:System.ServiceModel.Activities.Description.EtwTrackingBehavior.ProfileName">
      <summary>Gets or sets the name of the <see cref="T:System.Activities.Tracking.TrackingProfile" /> associated with this behavior.</summary>
      <returns>The name of the <see cref="T:System.Activities.Tracking.TrackingProfile" />.</returns>
    </member>
    <member name="M:System.ServiceModel.Activities.Description.EtwTrackingBehavior.Validate(System.ServiceModel.Description.ServiceDescription,System.ServiceModel.ServiceHostBase)">
      <summary>An implementation of the <see cref="M:System.ServiceModel.Description.IServiceBehavior.Validate(System.ServiceModel.Description.ServiceDescription,System.ServiceModel.ServiceHostBase)" /> method.</summary>
      <param name="serviceDescription">The service description.</param>
      <param name="serviceHostBase">The host of the service.</param>
    </member>
    <member name="T:System.ServiceModel.Activities.Description.SqlWorkflowInstanceStoreBehavior">
      <summary>A service behavior that allows you to configure the <see cref="T:System.Activities.DurableInstancing.SqlWorkflowInstanceStore" /> feature, which supports persisting state information for workflow service instances into an SQL Server 2005 or SQL Server 2008 database.</summary>
    </member>
    <member name="M:System.ServiceModel.Activities.Description.SqlWorkflowInstanceStoreBehavior.#ctor">
      <summary>Initializes an instance of the <see cref="T:System.ServiceModel.Activities.Description.SqlWorkflowInstanceStoreBehavior" /> class.</summary>
    </member>
    <member name="M:System.ServiceModel.Activities.Description.SqlWorkflowInstanceStoreBehavior.#ctor(System.String)">
      <summary>Initializes an instance of the <see cref="T:System.ServiceModel.Activities.Description.SqlWorkflowInstanceStoreBehavior" /> class using the connection string passed as a parameter.</summary>
      <param name="connectionString">A connection string that refers to a SQL Server persistence database.</param>
    </member>
    <member name="M:System.ServiceModel.Activities.Description.SqlWorkflowInstanceStoreBehavior.AddBindingParameters(System.ServiceModel.Description.ServiceDescription,System.ServiceModel.ServiceHostBase,System.Collections.ObjectModel.Collection{System.ServiceModel.Description.ServiceEndpoint},System.ServiceModel.Channels.BindingParameterCollection)">
      <summary>An implementation of the AddBindingParameters method of the <see cref="T:System.ServiceModel.Description.IServiceBehavior" /> interface, which allows you to pass custom data to binding elements to support contract implementation.</summary>
      <param name="serviceDescription">The service description of the service.</param>
      <param name="serviceHostBase">The host of the service.</param>
      <param name="endpoints">The service endpoints.</param>
      <param name="bindingParameters">Custom objects to which binding elements have access.</param>
    </member>
    <member name="M:System.ServiceModel.Activities.Description.SqlWorkflowInstanceStoreBehavior.ApplyDispatchBehavior(System.ServiceModel.Description.ServiceDescription,System.ServiceModel.ServiceHostBase)">
      <summary>An implementation of the ApplyDispatchBehavior method of the <see cref="T:System.ServiceModel.Description.IServiceBehavior" /> interface that allows you to change run-time property values or insert custom extension objects such as error handlers, message or parameter inspectors, security extensions, and other custom extension objects.</summary>
      <param name="serviceDescription">Description of the service.</param>
      <param name="serviceHostBase">The host of the service.</param>
    </member>
    <member name="P:System.ServiceModel.Activities.Description.SqlWorkflowInstanceStoreBehavior.ConnectionString">
      <summary>Gets the connection string used to connect to persistence database.</summary>
      <returns>The connection string.</returns>
    </member>
    <member name="P:System.ServiceModel.Activities.Description.SqlWorkflowInstanceStoreBehavior.HostLockRenewalPeriod">
      <summary>Gets or sets the <see cref="P:System.Activities.DurableInstancing.SqlWorkflowInstanceStore.HostLockRenewalPeriod" />. This property specifies the interval within which a host must renew its lock on an instance before the lock expires. If the host does not renew the lock in the specified time period, the instance is unlocked and another host can obtain the lock on the instance.</summary>
      <returns>The specified time period before the instance is unlocked.</returns>
    </member>
    <member name="P:System.ServiceModel.Activities.Description.SqlWorkflowInstanceStoreBehavior.InstanceCompletionAction">
      <summary>Gets or sets the <see cref="P:System.Activities.DurableInstancing.SqlWorkflowInstanceStore.InstanceCompletionAction" /> property. This property specifies whether the instance state information is kept in the persistence database after the instance is completed.</summary>
      <returns>true if the instance state information is kept in the persistence database; otherwise false.</returns>
    </member>
    <member name="P:System.ServiceModel.Activities.Description.SqlWorkflowInstanceStoreBehavior.InstanceEncodingOption">
      <summary>Gets or sets the <see cref="P:System.Activities.DurableInstancing.SqlWorkflowInstanceStore.InstanceEncodingOption" /> property. This property specifies whether the instance state information is compressed using the GZip algorithm before the information is saved in the persistence store.</summary>
      <returns>true if the instance state information is compressed using the GZip algorithm; otherwise false.</returns>
    </member>
    <member name="P:System.ServiceModel.Activities.Description.SqlWorkflowInstanceStoreBehavior.InstanceLockedExceptionAction">
      <summary>Gets or sets the <see cref="P:System.Activities.DurableInstancing.SqlWorkflowInstanceStore.InstanceLockedExceptionAction" /> property. This property specifies what action a service host should take when it receives an <see cref="T:System.Runtime.Persistence.InstanceLockedException" /> when the host tries to lock an instance because the instance is currently locked by another host. </summary>
      <returns>The action a service host should take when receiving a <see cref="T:System.Runtime.Persistence.InstanceLockedException" />.</returns>
    </member>
    <member name="M:System.ServiceModel.Activities.Description.SqlWorkflowInstanceStoreBehavior.Promote(System.String,System.Collections.Generic.IEnumerable{System.Xml.Linq.XName},System.Collections.Generic.IEnumerable{System.Xml.Linq.XName})">
      <summary>Promotes properties that can be used in queries. The promoted properties are the properties that you can use in queries to retrieve instances. These property can be of simple type (int32, string, bool and so on), which is represented by a variant or binary.</summary>
      <param name="name">Name of the promotion. </param>
      <param name="promoteAsSqlVariant">The names of variables that must be promoted as variants. </param>
      <param name="promoteAsBinary">The names of variables that must be promoted as binary data. Binary data is typically used to store tracking information.</param>
    </member>
    <member name="P:System.ServiceModel.Activities.Description.SqlWorkflowInstanceStoreBehavior.RunnableInstancesDetectionPeriod">
      <summary>Gets or sets the <see cref="P:System.Activities.DurableInstancing.SqlWorkflowInstanceStore.RunnableInstancesDetectionPeriod" /> property. Specifies the time period after which the SQL Workflow Instance Store runs a detection task to detect any runnable or activatable workflow instances in the persistence database after the previous detection cycle. </summary>
      <returns>Returns the value of the time interval.</returns>
    </member>
    <member name="M:System.ServiceModel.Activities.Description.SqlWorkflowInstanceStoreBehavior.Validate(System.ServiceModel.Description.ServiceDescription,System.ServiceModel.ServiceHostBase)">
      <summary>Inspects the service host and the service description to confirm that the service can run successfully. </summary>
      <param name="serviceDescription">The description of the service.</param>
      <param name="serviceHostBase">The host for the service.</param>
    </member>
    <member name="T:System.ServiceModel.Activities.Description.WorkflowContractBehaviorAttribute">
      <summary>An attribute thatcan be applied to a service contract to enable workflow service model dispatch behavior. This attribute ensures that appropriate dispatch components are created..</summary>
    </member>
    <member name="M:System.ServiceModel.Activities.Description.WorkflowContractBehaviorAttribute.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.Activities.Description.WorkflowContractBehaviorAttribute" /> class. </summary>
    </member>
    <member name="M:System.ServiceModel.Activities.Description.WorkflowContractBehaviorAttribute.AddBindingParameters(System.ServiceModel.Description.ContractDescription,System.ServiceModel.Description.ServiceEndpoint,System.ServiceModel.Channels.BindingParameterCollection)">
      <summary>Configures binding elements to support the workflow contract behavior.</summary>
      <param name="contractDescription">The contract description.</param>
      <param name="endpoint">The endpoint.</param>
      <param name="bindingParameters">The objects that the binding elements require to support the workflow contract behavior.</param>
    </member>
    <member name="M:System.ServiceModel.Activities.Description.WorkflowContractBehaviorAttribute.ApplyClientBehavior(System.ServiceModel.Description.ContractDescription,System.ServiceModel.Description.ServiceEndpoint,System.ServiceModel.Dispatcher.ClientRuntime)">
      <summary>Implements a modification or extension of the client across a contract.</summary>
      <param name="contractDescription">The contract description for which the extension is intended.</param>
      <param name="endpoint">The endpoint.</param>
      <param name="clientRuntime">The client runtime.</param>
    </member>
    <member name="M:System.ServiceModel.Activities.Description.WorkflowContractBehaviorAttribute.ApplyDispatchBehavior(System.ServiceModel.Description.ContractDescription,System.ServiceModel.Description.ServiceEndpoint,System.ServiceModel.Dispatcher.DispatchRuntime)">
      <summary>Implements a modification or extension of the client across a contract.</summary>
      <param name="contractDescription">The contract description.</param>
      <param name="endpoint">The endpoint.</param>
      <param name="dispatchRuntime">The dispatch runtime that controls service execution.</param>
    </member>
    <member name="M:System.ServiceModel.Activities.Description.WorkflowContractBehaviorAttribute.Validate(System.ServiceModel.Description.ContractDescription,System.ServiceModel.Description.ServiceEndpoint)">
      <summary>Validates that the contract and endpoint are compatible with the behavior.</summary>
      <param name="contractDescription">The contract description.</param>
      <param name="endpoint">The endpoint.</param>
    </member>
    <member name="T:System.ServiceModel.Activities.Description.WorkflowIdleBehavior">
      <summary>A service behavior that controls when idle workflow instances are unloaded and persisted.</summary>
    </member>
    <member name="M:System.ServiceModel.Activities.Description.WorkflowIdleBehavior.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.Activities.Description.WorkflowIdleBehavior" />.</summary>
    </member>
    <member name="M:System.ServiceModel.Activities.Description.WorkflowIdleBehavior.AddBindingParameters(System.ServiceModel.Description.ServiceDescription,System.ServiceModel.ServiceHostBase,System.Collections.ObjectModel.Collection{System.ServiceModel.Description.ServiceEndpoint},System.ServiceModel.Channels.BindingParameterCollection)">
      <summary>Implements the <see cref="M:System.ServiceModel.Description.IServiceBehavior.AddBindingParameters(System.ServiceModel.Description.ServiceDescription,System.ServiceModel.ServiceHostBase,System.Collections.ObjectModel.Collection{System.ServiceModel.Description.ServiceEndpoint},System.ServiceModel.Channels.BindingParameterCollection)" /> method.</summary>
      <param name="serviceDescription">The service description.</param>
      <param name="serviceHostBase">The service host.</param>
      <param name="endpoints">The endpoints exposed by the service.</param>
      <param name="bindingParameters">The binding parameters required to implement the behavior.</param>
    </member>
    <member name="M:System.ServiceModel.Activities.Description.WorkflowIdleBehavior.ApplyDispatchBehavior(System.ServiceModel.Description.ServiceDescription,System.ServiceModel.ServiceHostBase)">
      <summary>Implements the <see cref="M:System.ServiceModel.Description.IServiceBehavior.ApplyDispatchBehavior(System.ServiceModel.Description.ServiceDescription,System.ServiceModel.ServiceHostBase)" /> method.</summary>
      <param name="serviceDescription">The service description.</param>
      <param name="serviceHostBase">The service host.</param>
    </member>
    <member name="P:System.ServiceModel.Activities.Description.WorkflowIdleBehavior.TimeToPersist">
      <summary>Gets or sets a value that specifies the <see cref="T:System.TimeSpan" /> that occurs between the time the workflow becomes idle and is persisted.</summary>
      <returns>The time span used to determine when a workflow is persisted.</returns>
    </member>
    <member name="P:System.ServiceModel.Activities.Description.WorkflowIdleBehavior.TimeToUnload">
      <summary>Gets or sets a value that specifies the <see cref="T:System.TimeSpan" /> that occurs between the time workflow becomes idle and is unloaded.</summary>
      <returns>The time span used to determine when a workflow is unloaded.</returns>
    </member>
    <member name="M:System.ServiceModel.Activities.Description.WorkflowIdleBehavior.Validate(System.ServiceModel.Description.ServiceDescription,System.ServiceModel.ServiceHostBase)">
      <summary>Implements the <see cref="M:System.ServiceModel.Description.IServiceBehavior.Validate(System.ServiceModel.Description.ServiceDescription,System.ServiceModel.ServiceHostBase)" /> method.</summary>
      <param name="serviceDescription">The service description.</param>
      <param name="serviceHostBase">The service host.</param>
    </member>
    <member name="T:System.ServiceModel.Activities.Description.WorkflowInstanceManagementBehavior">
      <summary>A behavior that adds a workflow control endpoint with a fixed configuration to the service host.</summary>
    </member>
    <member name="M:System.ServiceModel.Activities.Description.WorkflowInstanceManagementBehavior.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.Activities.Description.WorkflowInstanceManagementBehavior" /> class.</summary>
    </member>
    <member name="M:System.ServiceModel.Activities.Description.WorkflowInstanceManagementBehavior.AddBindingParameters(System.ServiceModel.Description.ServiceDescription,System.ServiceModel.ServiceHostBase,System.Collections.ObjectModel.Collection{System.ServiceModel.Description.ServiceEndpoint},System.ServiceModel.Channels.BindingParameterCollection)">
      <summary>An implementation of the <see cref="M:System.ServiceModel.Description.IServiceBehavior.AddBindingParameters(System.ServiceModel.Description.ServiceDescription,System.ServiceModel.ServiceHostBase,System.Collections.ObjectModel.Collection{System.ServiceModel.Description.ServiceEndpoint},System.ServiceModel.Channels.BindingParameterCollection)" /> method.</summary>
      <param name="serviceDescription">The service description.</param>
      <param name="serviceHostBase">The service host.</param>
      <param name="endpoints">The service endpoints.</param>
      <param name="bindingParameters">The binding parameters.</param>
    </member>
    <member name="M:System.ServiceModel.Activities.Description.WorkflowInstanceManagementBehavior.ApplyDispatchBehavior(System.ServiceModel.Description.ServiceDescription,System.ServiceModel.ServiceHostBase)">
      <summary>An implementation of the <see cref="M:System.ServiceModel.Description.IServiceBehavior.ApplyDispatchBehavior(System.ServiceModel.Description.ServiceDescription,System.ServiceModel.ServiceHostBase)" /> method.</summary>
      <param name="serviceDescription">The service description.</param>
      <param name="serviceHostBase">The service host.</param>
    </member>
    <member name="F:System.ServiceModel.Activities.Description.WorkflowInstanceManagementBehavior.ControlEndpointAddress">
      <summary>The fixed workflow control relative endpoint address. This address is appended to the base address of the service to create the control endpoint address.</summary>
    </member>
    <member name="P:System.ServiceModel.Activities.Description.WorkflowInstanceManagementBehavior.HttpControlEndpointBinding">
      <summary>Gets the binding for the workflow instance control endpoint when the HTTP protocol is used.</summary>
      <returns>The binding for the workflow instance control endpoint.</returns>
    </member>
    <member name="P:System.ServiceModel.Activities.Description.WorkflowInstanceManagementBehavior.NamedPipeControlEndpointBinding">
      <summary>Gets the binding for the workflow instance control endpoint when the net.pipe protocol is used.</summary>
      <returns>The binding for the workflow instance control endpoint.</returns>
    </member>
    <member name="M:System.ServiceModel.Activities.Description.WorkflowInstanceManagementBehavior.Validate(System.ServiceModel.Description.ServiceDescription,System.ServiceModel.ServiceHostBase)">
      <summary>An implementation of the <see cref="M:System.ServiceModel.Description.IServiceBehavior.Validate(System.ServiceModel.Description.ServiceDescription,System.ServiceModel.ServiceHostBase)method" />.</summary>
      <param name="serviceDescription">The service description.</param>
      <param name="serviceHostBase">The service host.</param>
    </member>
    <member name="P:System.ServiceModel.Activities.Description.WorkflowInstanceManagementBehavior.WindowsGroup">
      <summary>Gets or sets the Windows group of users authorized to use the workflow instance control endpoint.</summary>
      <returns>The Windows group of users authorized to use the workflow instance control endpoint.</returns>
    </member>
    <member name="T:System.ServiceModel.Activities.Description.WorkflowUnhandledExceptionAction">
      <summary>An enumeration that specifies the action to perform when an unhandled exception occurs within a workflow.</summary>
    </member>
    <member name="F:System.ServiceModel.Activities.Description.WorkflowUnhandledExceptionAction.Abandon">
      <summary>Abandons the workflow instance.</summary>
    </member>
    <member name="F:System.ServiceModel.Activities.Description.WorkflowUnhandledExceptionAction.Cancel">
      <summary>Cancels the workflow instance.</summary>
    </member>
    <member name="F:System.ServiceModel.Activities.Description.WorkflowUnhandledExceptionAction.Terminate">
      <summary>Terminates the workflow instance. The instance state is <see cref="T:System.Activities.Hosting.WorkflowInstanceState.Complete" />.</summary>
    </member>
    <member name="F:System.ServiceModel.Activities.Description.WorkflowUnhandledExceptionAction.AbandonAndSuspend">
      <summary>Abandons the workflow instance and marks the last persisted state as suspended. If there is no last persisted instance can be found, the workflow instance is aborted.</summary>
    </member>
    <member name="T:System.ServiceModel.Activities.Description.WorkflowUnhandledExceptionBehavior">
      <summary>A service behavior that enables you to specify the action to take when an unhandled exception occurs within a workflow service.</summary>
    </member>
    <member name="M:System.ServiceModel.Activities.Description.WorkflowUnhandledExceptionBehavior.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.Activities.Description.WorkflowUnhandledExceptionBehavior" /> class.</summary>
    </member>
    <member name="P:System.ServiceModel.Activities.Description.WorkflowUnhandledExceptionBehavior.Action">
      <summary>Specifies the action to take when an unhandled exception occurs.</summary>
      <returns>A <see cref="T:System.ServiceModel.Activities.Description.WorkflowUnhandledExceptionAction" />.</returns>
    </member>
    <member name="M:System.ServiceModel.Activities.Description.WorkflowUnhandledExceptionBehavior.AddBindingParameters(System.ServiceModel.Description.ServiceDescription,System.ServiceModel.ServiceHostBase,System.Collections.ObjectModel.Collection{System.ServiceModel.Description.ServiceEndpoint},System.ServiceModel.Channels.BindingParameterCollection)">
      <summary>Implements the <see cref="M:System.ServiceModel.Description.IServiceBehavior.AddBindingParameters(System.ServiceModel.Description.ServiceDescription,System.ServiceModel.ServiceHostBase,System.Collections.ObjectModel.Collection{System.ServiceModel.Description.ServiceEndpoint},System.ServiceModel.Channels.BindingParameterCollection)" /> method to support the behavior.</summary>
      <param name="serviceDescription">The service description.</param>
      <param name="serviceHostBase">The service host.</param>
      <param name="endpoints">The endpoints exposed by the service.</param>
      <param name="bindingParameters">The binding parameters required to implement the behavior.</param>
    </member>
    <member name="M:System.ServiceModel.Activities.Description.WorkflowUnhandledExceptionBehavior.ApplyDispatchBehavior(System.ServiceModel.Description.ServiceDescription,System.ServiceModel.ServiceHostBase)">
      <summary>Implements the <see cref="M:System.ServiceModel.Description.IServiceBehavior.ApplyDispatchBehavior(System.ServiceModel.Description.ServiceDescription,System.ServiceModel.ServiceHostBase)" /> method to support the behavior.</summary>
      <param name="serviceDescription">The service description.</param>
      <param name="serviceHostBase">The service host.</param>
    </member>
    <member name="M:System.ServiceModel.Activities.Description.WorkflowUnhandledExceptionBehavior.Validate(System.ServiceModel.Description.ServiceDescription,System.ServiceModel.ServiceHostBase)">
      <summary>Implements the <see cref="M:System.ServiceModel.Description.IServiceBehavior.Validate(System.ServiceModel.Description.ServiceDescription,System.ServiceModel.ServiceHostBase)" /> method to support the behavior.</summary>
      <param name="serviceDescription">The service description.</param>
      <param name="serviceHostBase">The service host.</param>
    </member>
    <member name="T:System.ServiceModel.Activities.Tracking.ReceiveMessageRecord">
      <summary>Contains the tracking record sent to a tracking participant by the run-time tracking infrastructure when a message is received by a workflow service instance.</summary>
    </member>
    <member name="M:System.ServiceModel.Activities.Tracking.ReceiveMessageRecord.#ctor(System.ServiceModel.Activities.Tracking.ReceiveMessageRecord)">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.Activities.Tracking.ReceiveMessageRecord" /> class using the specified <see cref="T:System.ServiceModel.Activities.Tracking.ReceiveMessageRecord" /> instance.</summary>
      <param name="record">The tracking information.</param>
    </member>
    <member name="M:System.ServiceModel.Activities.Tracking.ReceiveMessageRecord.#ctor(System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.Activities.Tracking.ReceiveMessageRecord" /> class using the specified name.</summary>
      <param name="name">The name of the tracking record.</param>
    </member>
    <member name="M:System.ServiceModel.Activities.Tracking.ReceiveMessageRecord.Clone">
      <summary>Creates a copy of the <see cref="T:System.ServiceModel.Activities.Tracking.ReceiveMessageRecord" />.</summary>
      <returns>A copy of <see cref="T:System.ServiceModel.Activities.Tracking.ReceiveMessageRecord" />.</returns>
    </member>
    <member name="P:System.ServiceModel.Activities.Tracking.ReceiveMessageRecord.E2EActivityId">
      <summary>Gets the receiving end-to-end activity ID associated with this record.</summary>
      <returns>The activity ID.</returns>
    </member>
    <member name="P:System.ServiceModel.Activities.Tracking.ReceiveMessageRecord.MessageId">
      <summary>Gets the message ID of the message associated with this record.</summary>
      <returns>The message ID.</returns>
    </member>
    <member name="T:System.ServiceModel.Activities.Tracking.SendMessageRecord">
      <summary>Contains the tracking record sent to a tracking participant by the run-time tracking infrastructure when a message is sent by a workflow service instance.</summary>
    </member>
    <member name="M:System.ServiceModel.Activities.Tracking.SendMessageRecord.#ctor(System.ServiceModel.Activities.Tracking.SendMessageRecord)">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.Activities.Tracking.SendMessageRecord" /> class using the specified <see cref="T:System.ServiceModel.Activities.Tracking.SendMessageRecord" /> instance.</summary>
      <param name="record">The tracking information.</param>
    </member>
    <member name="M:System.ServiceModel.Activities.Tracking.SendMessageRecord.#ctor(System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.Activities.Tracking.SendMessageRecord" /> class using the specified name.</summary>
      <param name="name">The name of the tracking record.</param>
    </member>
    <member name="M:System.ServiceModel.Activities.Tracking.SendMessageRecord.Clone">
      <summary>Creates a copy of the <see cref="T:System.ServiceModel.Activities.Tracking.SendMessageRecord" />.</summary>
      <returns>A copy of the <see cref="T:System.ServiceModel.Activities.Tracking.SendMessageRecord" /> instance.</returns>
    </member>
    <member name="P:System.ServiceModel.Activities.Tracking.SendMessageRecord.E2EActivityId">
      <summary>Gets the sending end-to-end activity ID associated with this record.</summary>
      <returns>The end-to-end activity ID.</returns>
    </member>
    <member name="T:System.ServiceModel.Activities.Tracking.Configuration.ActivityScheduledQueryElement">
      <summary>A configuration element that represents a <see cref="T:System.Activities.Tracking.ActivityScheduledQuery" />.</summary>
    </member>
    <member name="M:System.ServiceModel.Activities.Tracking.Configuration.ActivityScheduledQueryElement.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.Activities.Tracking.Configuration.ActivityScheduledQueryElement" /> class. </summary>
    </member>
    <member name="P:System.ServiceModel.Activities.Tracking.Configuration.ActivityScheduledQueryElement.ActivityName">
      <summary>Gets or sets the name of the activity to filter <see cref="T:System.Activities,Tracking.ActivityScheduledRecord" /> instances on. The default value is "*" (all).</summary>
      <returns>The name of the activity.</returns>
    </member>
    <member name="P:System.ServiceModel.Activities.Tracking.Configuration.ActivityScheduledQueryElement.ChildActivityName">
      <summary>Gets or sets the name of the child activity to filter <see cref="T:System.Activities,Tracking.ActivityScheduledRecord" /> instances on. The default value is "*" (all). </summary>
      <returns>The name of the child activity.</returns>
    </member>
    <member name="M:System.ServiceModel.Activities.Tracking.Configuration.ActivityScheduledQueryElement.NewTrackingQuery">
      <summary>Creates the <see cref="T:System.Activities.Tracking.ActivityScheduledQuery" />. </summary>
      <returns>The activity-scheduled query.</returns>
    </member>
    <member name="P:System.ServiceModel.Activities.Tracking.Configuration.ActivityScheduledQueryElement.Properties">
      <summary>Gets the properties contained in this configuration element.</summary>
      <returns>The properties contained in this configuration element.</returns>
    </member>
    <member name="T:System.ServiceModel.Activities.Tracking.Configuration.ActivityScheduledQueryElementCollection">
      <summary>A configuration element that contains <see cref="T:System.ServiceModel.Activities.Tracking.Configuration.ActivityScheduledQueryElement" /> elements.</summary>
    </member>
    <member name="M:System.ServiceModel.Activities.Tracking.Configuration.ActivityScheduledQueryElementCollection.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.Activities.Tracking.Configuration.ActivityScheduledQueryElementCollection" /> class.</summary>
    </member>
    <member name="P:System.ServiceModel.Activities.Tracking.Configuration.ActivityScheduledQueryElementCollection.ElementName">
      <summary>Gets the configuration element name.</summary>
      <returns>The configuration element name.</returns>
    </member>
    <member name="T:System.ServiceModel.Activities.Tracking.Configuration.ActivityStateQueryElement">
      <summary>A configuration element that represents a <see cref="T:System.Activities.Tracking.ActivityStateQuery" />.</summary>
    </member>
    <member name="M:System.ServiceModel.Activities.Tracking.Configuration.ActivityStateQueryElement.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.Activities.Tracking.Configuration.ActivityStateQueryElement" /> class.</summary>
    </member>
    <member name="P:System.ServiceModel.Activities.Tracking.Configuration.ActivityStateQueryElement.ActivityName">
      <summary>Gets or sets the name of the activity to filter <see cref="T:System.Activities.Tracking.ActivityStateRecord" /> instances on. </summary>
      <returns>The name of the activity.</returns>
    </member>
    <member name="P:System.ServiceModel.Activities.Tracking.Configuration.ActivityStateQueryElement.Arguments">
      <summary>Gets an <see cref="T:System.ServiceModel.Activities.Tracking.Configuration.ArgumentElementCollection" /> that contains the variables to filter <see cref="T:System.Activities.Tracking.ActivityStateRecord" /> on.</summary>
      <returns>The collection of arguments.</returns>
    </member>
    <member name="M:System.ServiceModel.Activities.Tracking.Configuration.ActivityStateQueryElement.NewTrackingQuery">
      <summary>Creates a new <see cref="T:System.Activities.Tracking.ActivityStateQuery" />.</summary>
      <returns>The activity state query.</returns>
    </member>
    <member name="P:System.ServiceModel.Activities.Tracking.Configuration.ActivityStateQueryElement.Properties">
      <summary>Gets a <see cref="T:System.Configuration.ConfigurationPropertyCollection" /> that contains the properties of the configuration element.</summary>
      <returns>The configuration element properties.</returns>
    </member>
    <member name="P:System.ServiceModel.Activities.Tracking.Configuration.ActivityStateQueryElement.States">
      <summary>Gets a <see cref="T:System.ServiceModel.Activities.Tracking.Configuration.StateElementCollection" /> that contains the states to filter <see cref="T:System.Activities.Tracking.ActivityStateRecord" /> on.</summary>
      <returns>The collection of states. </returns>
    </member>
    <member name="P:System.ServiceModel.Activities.Tracking.Configuration.ActivityStateQueryElement.Variables">
      <summary>Gets a <see cref="T:System.ServiceModel.Activities.Tracking.Configuration.VariableElementCollection" /> that contains the variables to filter <see cref="T:System.Activities.Tracking.ActivityStateRecord" /> on.</summary>
      <returns>The collection of variables.</returns>
    </member>
    <member name="T:System.ServiceModel.Activities.Tracking.Configuration.ActivityStateQueryElementCollection">
      <summary>A collection of <see cref="T:System.ServiceModel.Activities.Tracking.Configuration.TrackingConfigurationElement" /> elements that contains <see cref="T:System.ServiceModel.Activities.Tracking.Configuration.ActivityStateQueryElement" /> elements.</summary>
    </member>
    <member name="M:System.ServiceModel.Activities.Tracking.Configuration.ActivityStateQueryElementCollection.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.Activities.Tracking.Configuration.ActivityStateQueryElementCollection" /> class.</summary>
    </member>
    <member name="P:System.ServiceModel.Activities.Tracking.Configuration.ActivityStateQueryElementCollection.ElementName">
      <summary>Gets the configuration element name.</summary>
      <returns>The configuration element name.</returns>
    </member>
    <member name="T:System.ServiceModel.Activities.Tracking.Configuration.AnnotationElement">
      <summary>A configuration element that represents an annotation that is added to an emitted tracking record.</summary>
    </member>
    <member name="M:System.ServiceModel.Activities.Tracking.Configuration.AnnotationElement.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.Activities.Tracking.Configuration.AnnotationElement" /> class. </summary>
    </member>
    <member name="P:System.ServiceModel.Activities.Tracking.Configuration.AnnotationElement.ElementKey">
      <summary>Gets a key that uniquely identifies the annotation.</summary>
      <returns>The element key.</returns>
    </member>
    <member name="P:System.ServiceModel.Activities.Tracking.Configuration.AnnotationElement.Name">
      <summary>Gets or sets the name of the annotation.</summary>
      <returns>The name of the annotation.</returns>
    </member>
    <member name="P:System.ServiceModel.Activities.Tracking.Configuration.AnnotationElement.Properties">
      <summary>Gets a <see cref="T:System.Configuration.ConfigurationPropertyCollection" /> that contains the properties for the configuration element.</summary>
      <returns>The collection of properties.</returns>
    </member>
    <member name="P:System.ServiceModel.Activities.Tracking.Configuration.AnnotationElement.Value">
      <summary>Gets or sets the value of the annotation.</summary>
      <returns>The value of the annotation.</returns>
    </member>
    <member name="T:System.ServiceModel.Activities.Tracking.Configuration.AnnotationElementCollection">
      <summary>A collection of <see cref="T:System.ServiceModel.Activities.Tracking.Configuration.TrackingConfigurationElement" /> elements that contains <see cref="T:System.ServiceModel.Activities.Tracking.Configuration.AnnotationElement" /> elements.</summary>
    </member>
    <member name="M:System.ServiceModel.Activities.Tracking.Configuration.AnnotationElementCollection.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.Activities.Tracking.Configuration.AnnotationElementCollection" /> class.</summary>
    </member>
    <member name="P:System.ServiceModel.Activities.Tracking.Configuration.AnnotationElementCollection.ElementName">
      <summary>Gets the configuration element name.</summary>
      <returns>The configuration element name.</returns>
    </member>
    <member name="T:System.ServiceModel.Activities.Tracking.Configuration.ArgumentElement">
      <summary>A configuration element that represents an argument .</summary>
    </member>
    <member name="M:System.ServiceModel.Activities.Tracking.Configuration.ArgumentElement.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.Activities.Tracking.Configuration.ArgumentElement" /> class.</summary>
    </member>
    <member name="P:System.ServiceModel.Activities.Tracking.Configuration.ArgumentElement.ElementKey">
      <summary>Gets a key that uniquely identifies the argument.</summary>
      <returns>The element key.</returns>
    </member>
    <member name="P:System.ServiceModel.Activities.Tracking.Configuration.ArgumentElement.Name">
      <summary>Gets or sets the name of the argument.</summary>
      <returns>The argument name.</returns>
    </member>
    <member name="P:System.ServiceModel.Activities.Tracking.Configuration.ArgumentElement.Properties">
      <summary>Gets the collection of properties</summary>
      <returns>The <see cref="T:System.Configuration.ConfigurationPropertyCollection" /> of properties for the element.</returns>
    </member>
    <member name="T:System.ServiceModel.Activities.Tracking.Configuration.ArgumentElementCollection">
      <summary>A configuration element that contains a collection of <see cref="T:System.ServiceModel.Activities.Tracking.Configuration.ArgumentElement" /> elements.</summary>
    </member>
    <member name="M:System.ServiceModel.Activities.Tracking.Configuration.ArgumentElementCollection.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.Activities.Tracking.Configuration.ArgumentElementCollection" /> class.</summary>
    </member>
    <member name="P:System.ServiceModel.Activities.Tracking.Configuration.ArgumentElementCollection.ElementName">
      <summary>Gets the configuration element name.</summary>
      <returns>The configuration element name.</returns>
    </member>
    <member name="T:System.ServiceModel.Activities.Tracking.Configuration.BookmarkResumptionQueryElement">
      <summary>A configuration element that represents a <see cref="T:System.Activities.Tracking.BookmarkResumptionQuery" />.</summary>
    </member>
    <member name="M:System.ServiceModel.Activities.Tracking.Configuration.BookmarkResumptionQueryElement.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.Activities.Tracking.Configuration.BookmarkResumptionQueryElement" /> class.</summary>
    </member>
    <member name="P:System.ServiceModel.Activities.Tracking.Configuration.BookmarkResumptionQueryElement.Name">
      <summary>Gets or sets the name of the bookmark.</summary>
      <returns>The bookmark name.</returns>
    </member>
    <member name="M:System.ServiceModel.Activities.Tracking.Configuration.BookmarkResumptionQueryElement.NewTrackingQuery">
      <summary>Creates the <see cref="T:System.ServiceModel.Activities.Tracking.Configuration.BookmarkResumptionQuery" />. </summary>
      <returns>The bookmark resumption query.</returns>
    </member>
    <member name="P:System.ServiceModel.Activities.Tracking.Configuration.BookmarkResumptionQueryElement.Properties">
      <summary>Gets a <see cref="T:System.Configuration.ConfigurationPropertyCollection" /> that contains the properties associated with this element.</summary>
      <returns>A collection of properties.</returns>
    </member>
    <member name="T:System.ServiceModel.Activities.Tracking.Configuration.BookmarkResumptionQueryElementCollection">
      <summary>A configuration element that contains a collection of <see cref="T:System.ServiceModel.Activities.Tracking.Configuration.BookmarkResumptionQueryElement" /> elements.</summary>
    </member>
    <member name="M:System.ServiceModel.Activities.Tracking.Configuration.BookmarkResumptionQueryElementCollection.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.Activities.Tracking.Configuration.BookmarkResumptionQueryElementCollection" /> class.</summary>
    </member>
    <member name="P:System.ServiceModel.Activities.Tracking.Configuration.BookmarkResumptionQueryElementCollection.ElementName">
      <summary>Gets the configuration element name.</summary>
      <returns>The configuration element name.</returns>
    </member>
    <member name="T:System.ServiceModel.Activities.Tracking.Configuration.CancelRequestedQueryElement">
      <summary>A configuration element that represents a <see cref="T:System.Activities.TrackingCancelRequestedQuery" />.</summary>
    </member>
    <member name="M:System.ServiceModel.Activities.Tracking.Configuration.CancelRequestedQueryElement.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.Activities.Tracking.Configuration.CancelRequestedQueryElement" />.</summary>
    </member>
    <member name="P:System.ServiceModel.Activities.Tracking.Configuration.CancelRequestedQueryElement.ActivityName">
      <summary>Gets or sets the name of the activity to subscribe for the <see cref="T:System.Activities.Tracking.CancelRequestedRecord" /> from the specified activity that issued the cancel request.</summary>
      <returns>The activity name to subscribe for <see cref="T:System.Activities.Tracking.CancelRequestedRecord" /> on.</returns>
    </member>
    <member name="P:System.ServiceModel.Activities.Tracking.Configuration.CancelRequestedQueryElement.ChildActivityName">
      <summary>Gets or sets the name of the child activity to subscribe for the <see cref="T:System.Activities.Tracking.CancelRequestedRecord" /> activity name to be canceled.</summary>
      <returns>The name of the child activity to subscribe for <see cref="T:System.Activities.Tracking.CancelRequestedRecord" />.</returns>
    </member>
    <member name="M:System.ServiceModel.Activities.Tracking.Configuration.CancelRequestedQueryElement.NewTrackingQuery">
      <summary>Creates a new <see cref="T:System.Activities.Tracking.CancelRequestedQuery" />.</summary>
      <returns>A <see cref="T:System.Activities.Tracking.CancelRequestedQuery" /> instance.</returns>
    </member>
    <member name="P:System.ServiceModel.Activities.Tracking.Configuration.CancelRequestedQueryElement.Properties">
      <summary>Gets a <see cref="T:System.Configuration.ConfigurationPropertyCollection" /> that contains the properties associated with this element.</summary>
      <returns>A collection of properties.</returns>
    </member>
    <member name="T:System.ServiceModel.Activities.Tracking.Configuration.CancelRequestedQueryElementCollection">
      <summary>A configuration element that contains <see cref="T:System.ServiceModel.Activities.Tracking.Configuration.CancelRequestedQueryElement" /> elements.</summary>
    </member>
    <member name="M:System.ServiceModel.Activities.Tracking.Configuration.CancelRequestedQueryElementCollection.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.Activities.Tracking.Configuration.CancelRequestedQueryElementCollection" /> class.</summary>
    </member>
    <member name="P:System.ServiceModel.Activities.Tracking.Configuration.CancelRequestedQueryElementCollection.ElementName">
      <summary>Gets the configuration element name.</summary>
      <returns>The configuration element name.</returns>
    </member>
    <member name="T:System.ServiceModel.Activities.Tracking.Configuration.CustomTrackingQueryElement">
      <summary>A configuration element that represents a <see cref="T:System.Activities.Tracking.CustomTrackingQuery" />.</summary>
    </member>
    <member name="M:System.ServiceModel.Activities.Tracking.Configuration.CustomTrackingQueryElement.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.Activities.Tracking.Configuration.CustomTrackingQueryElement" /> class.</summary>
    </member>
    <member name="P:System.ServiceModel.Activities.Tracking.Configuration.CustomTrackingQueryElement.ActivityName">
      <summary>Gets or sets the name of the activity to filter <see cref="T:System.Activities.Tracking.CustomTrackingRecord" /> instances on. The default value is “*” (all).</summary>
      <returns>The name of the activity to filter on.</returns>
    </member>
    <member name="P:System.ServiceModel.Activities.Tracking.Configuration.CustomTrackingQueryElement.Name">
      <summary>Gets or sets the name of the activity for which to query for tracking records.</summary>
      <returns>The activity name.</returns>
    </member>
    <member name="M:System.ServiceModel.Activities.Tracking.Configuration.CustomTrackingQueryElement.NewTrackingQuery">
      <summary>Creates a new <see cref="T:System.Activities.Tracking.CustomTrackingQuery" />.</summary>
      <returns>A new <see cref="T:System.Activities.Tracking.CustomTrackingQuery" /> instance.</returns>
    </member>
    <member name="P:System.ServiceModel.Activities.Tracking.Configuration.CustomTrackingQueryElement.Properties">
      <summary>Gets a <see cref="T:System.Configuration.ConfigurationPropertyCollection" /> that contains the properties associated with this element.</summary>
      <returns>The property collection.</returns>
    </member>
    <member name="T:System.ServiceModel.Activities.Tracking.Configuration.CustomTrackingQueryElementCollection">
      <summary>A configuration element that contains <see cref="T:System.ServiceModel.Activities.Tracking.Configuration.CustomTrackingQueryElement" /> elements.</summary>
    </member>
    <member name="M:System.ServiceModel.Activities.Tracking.Configuration.CustomTrackingQueryElementCollection.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.Activities.Tracking.Configuration.CustomTrackingQueryElementCollection" /> class.</summary>
    </member>
    <member name="P:System.ServiceModel.Activities.Tracking.Configuration.CustomTrackingQueryElementCollection.ElementName">
      <summary>Gets the configuration element name.</summary>
      <returns>The configuration element name.</returns>
    </member>
    <member name="T:System.ServiceModel.Activities.Tracking.Configuration.FaultPropagationQueryElement">
      <summary>A configuration element that represents a <see cref="T:System.Activities.Tracking.FaultPropagationQuery" />.</summary>
    </member>
    <member name="M:System.ServiceModel.Activities.Tracking.Configuration.FaultPropagationQueryElement.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.Activities.Tracking.Configuration.FaultPropagationQueryElement" /> class.</summary>
    </member>
    <member name="P:System.ServiceModel.Activities.Tracking.Configuration.FaultPropagationQueryElement.FaultHandlerActivityName">
      <summary>Gets or sets the name of the activity that handles the fault that is used to subscribe for <see cref="T:System.Activities.Tracking.FaultPropagationRecord" /> instances. </summary>
      <returns>The activity name to filter on.</returns>
    </member>
    <member name="P:System.ServiceModel.Activities.Tracking.Configuration.FaultPropagationQueryElement.FaultSourceActivityName">
      <summary>Gets or sets the name of the activity that generates the fault that is used to subscribe for <see cref="T:System.Activities.Tracking.FaultPropagationRecord" /> instances. </summary>
      <returns>The activity name to filter on.</returns>
    </member>
    <member name="M:System.ServiceModel.Activities.Tracking.Configuration.FaultPropagationQueryElement.NewTrackingQuery">
      <summary>Creates a new <see cref="T:System.Activities.Tracking.FaultPropagationQuery" /> instance.</summary>
      <returns>The fault propagation query.</returns>
    </member>
    <member name="P:System.ServiceModel.Activities.Tracking.Configuration.FaultPropagationQueryElement.Properties">
      <summary>Gets the <see cref="T:System.Configuration.ConfigurationPropertyCollection" /> that contains the properties associated with this element.</summary>
      <returns>The property collection.</returns>
    </member>
    <member name="T:System.ServiceModel.Activities.Tracking.Configuration.FaultPropagationQueryElementCollection">
      <summary>A collection of <see cref="T:System.ServiceModel.Activities.Tracking.Configuration.TrackingConfigurationElement" /> elements that contains <see cref="T:System.ServiceModel.Activities.Tracking.Configuration.FaultPropagationQueryElement" /> elements.</summary>
    </member>
    <member name="M:System.ServiceModel.Activities.Tracking.Configuration.FaultPropagationQueryElementCollection.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.Activities.Tracking.Configuration.FaultPropagationQueryElementCollection" /> class.</summary>
    </member>
    <member name="P:System.ServiceModel.Activities.Tracking.Configuration.FaultPropagationQueryElementCollection.ElementName">
      <summary>Gets the configuration element name.</summary>
      <returns>The configuration element name.</returns>
    </member>
    <member name="T:System.ServiceModel.Activities.Tracking.Configuration.ProfileElement">
      <summary>A configuration element that represents a <see cref="T:System.Activities.Tracking.TrackingProfile" /> and is used for adding a profile through the behavior element.</summary>
    </member>
    <member name="M:System.ServiceModel.Activities.Tracking.Configuration.ProfileElement.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.Activities.Tracking.Configuration.ProfileElement" /> class.</summary>
    </member>
    <member name="P:System.ServiceModel.Activities.Tracking.Configuration.ProfileElement.ElementKey">
      <summary>Gets a key that uniquely identifies the profile.</summary>
      <returns>The element key.</returns>
    </member>
    <member name="P:System.ServiceModel.Activities.Tracking.Configuration.ProfileElement.ImplementationVisibility">
      <summary>Gets or sets the visibility mode of the tracking profile.</summary>
      <returns>The visibility mode of the tracking profile</returns>
    </member>
    <member name="P:System.ServiceModel.Activities.Tracking.Configuration.ProfileElement.Name">
      <summary>Gets or sets the name of the tracking profile.</summary>
      <returns>The name of the tracking profile. </returns>
    </member>
    <member name="P:System.ServiceModel.Activities.Tracking.Configuration.ProfileElement.Properties">
      <summary>Gets a <see cref="T:System.Configuration.ConfigurationPropertyCollection" /> that contains the properties associated with this element.</summary>
      <returns>The properties collection.</returns>
    </member>
    <member name="P:System.ServiceModel.Activities.Tracking.Configuration.ProfileElement.Workflows">
      <summary>Gets the collection of <see cref="T:System.ServiceModel.Activities.Tracking.Configuration.ProfileWorkflowElement" /> elements associated with this <see cref="T:System.ServiceModel.Activities.Tracking.Configuration.ProfileElement" />.</summary>
      <returns>A collection of profile workflow query elements.</returns>
    </member>
    <member name="T:System.ServiceModel.Activities.Tracking.Configuration.ProfileElementCollection">
      <summary>A configuration element that contains a collection of <see cref="T:System.ServiceModel.Activities.Tracking.Configuration.ProfileElement" /> elements.</summary>
    </member>
    <member name="P:System.ServiceModel.Activities.Tracking.Configuration.ProfileElementCollection.CollectionType">
      <summary>Gets a value that specifies the type of collection contained within this element.</summary>
      <returns>One of the <see cref="T:System.Configuration.ConfigurationElementCollectionType" /> enumeration values.</returns>
    </member>
    <member name="T:System.ServiceModel.Activities.Tracking.Configuration.ProfileWorkflowElement">
      <summary>A configuration element that contains all queries for a specific workflow identified by the <see cref="P:System.ServiceModel.Activities.Tracking.Configuration.ProfileWorkflowElement.ActivityDefinitionId" /> property.</summary>
    </member>
    <member name="M:System.ServiceModel.Activities.Tracking.Configuration.ProfileWorkflowElement.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.Activities.Tracking.Configuration.ProfileWorkflowElement" /> class.</summary>
    </member>
    <member name="P:System.ServiceModel.Activities.Tracking.Configuration.ProfileWorkflowElement.ActivityDefinitionId">
      <summary>Gets or sets the activity definition ID of the workflow being tracked.</summary>
      <returns>The activity definition ID</returns>
    </member>
    <member name="P:System.ServiceModel.Activities.Tracking.Configuration.ProfileWorkflowElement.ActivityScheduledQueries">
      <summary>Gets a collection of <see cref="T:System.ServiceModel.Activities.Tracking.Configuration.ActivityScheduledQueryElement" /> elements.</summary>
      <returns>A collection of <see cref="T:System.ServiceModel.Activities.Tracking.Configuration.ActivityScheduledQueryElement" /> elements.</returns>
    </member>
    <member name="P:System.ServiceModel.Activities.Tracking.Configuration.ProfileWorkflowElement.ActivityStateQueries">
      <summary>Gets a collection of <see cref="T:System.ServiceModel.Activities.Tracking.Configuration.ActivityStateQueryElement" /> elements.</summary>
      <returns>A <see cref="T:System.ServiceModel.Activities.Tracking.Configuration.ActivityStateQueryElementCollection" />.</returns>
    </member>
    <member name="P:System.ServiceModel.Activities.Tracking.Configuration.ProfileWorkflowElement.BookmarkResumptionQueries">
      <summary>Gets a collection of <see cref="T:System.ServiceModel.Activities.Tracking.Configuration.BookmarkResumptionQueryElement" /> elements.</summary>
      <returns>A collection of <see cref="T:System.ServiceModel.Activities.Tracking.Configuration.BookmarkResumptionQueryElement" /> elements.</returns>
    </member>
    <member name="P:System.ServiceModel.Activities.Tracking.Configuration.ProfileWorkflowElement.CancelRequestedQueries">
      <summary>Gets a collection of <see cref="T:System.ServiceModel.Activities.Tracking.Configuration.CancelRequestedQueryElement" /> elements.</summary>
      <returns>A collection of <see cref="T:System.ServiceModel.Activities.Tracking.Configuration.CancelRequestedQueryElement" /> elements.</returns>
    </member>
    <member name="P:System.ServiceModel.Activities.Tracking.Configuration.ProfileWorkflowElement.CustomTrackingQueries">
      <summary>Gets a collection of <see cref="T:System.ServiceModel.Activities.Tracking.Configuration.CustomTrackingQueryElement" /> elements.</summary>
      <returns>A <see cref="T:System.ServiceModel.Activities.Tracking.Configuration.CustomTrackingQueryElementCollection" />.</returns>
    </member>
    <member name="P:System.ServiceModel.Activities.Tracking.Configuration.ProfileWorkflowElement.ElementKey">
      <summary>Gets a key that uniquely identifies the workflow being tracked.</summary>
      <returns>The element key.</returns>
    </member>
    <member name="P:System.ServiceModel.Activities.Tracking.Configuration.ProfileWorkflowElement.FaultPropagationQueries">
      <summary>Gets a collection of <see cref="T:System.ServiceModel.Activities.Tracking.Configuration.FaultPropagationQueryElement" /> elements.</summary>
      <returns>A collection of <see cref="T:System.ServiceModel.Activities.Tracking.Configuration.FaultPropagationQueryElement" /> elements. </returns>
    </member>
    <member name="P:System.ServiceModel.Activities.Tracking.Configuration.ProfileWorkflowElement.Properties">
      <summary>Gets a collection of <see cref="T:System.Configuration.ConfigurationProperty" /> properties.</summary>
      <returns>A <see cref="T:System.Configuration.ConfigurationPropertyCollection" />.</returns>
    </member>
    <member name="P:System.ServiceModel.Activities.Tracking.Configuration.ProfileWorkflowElement.WorkflowInstanceQueries">
      <summary>Gets a collection of <see cref="T:System.ServiceModel.Activities.Tracking.Configuration.WorkflowInstanceQueryElement" /> elements.</summary>
      <returns>A <see cref="T:System.ServiceModel.Activities.Tracking.Configuration.WorkflowInstanceQueryElementCollection" />.</returns>
    </member>
    <member name="T:System.ServiceModel.Activities.Tracking.Configuration.ProfileWorkflowElementCollection">
      <summary>A collection of <see cref="T:System.ServiceModel.Activities.Tracking.Configuration.TrackingConfigurationElement" /> elements that contains a collection of <see cref="T:System.ServiceModel.Activities.Tracking.Configuration.ProfileWorkflowElement" /> elements.</summary>
    </member>
    <member name="M:System.ServiceModel.Activities.Tracking.Configuration.ProfileWorkflowElementCollection.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.Activities.Tracking.Configuration.ProfileWorkflowElementCollection" /> class.</summary>
    </member>
    <member name="P:System.ServiceModel.Activities.Tracking.Configuration.ProfileWorkflowElementCollection.ElementName">
      <summary>Gets the configuration element name.</summary>
      <returns>The configuration element name.</returns>
    </member>
    <member name="T:System.ServiceModel.Activities.Tracking.Configuration.StateElement">
      <summary>A configuration element that specifies workflow instance state or activity instance state the user subscribes tracking information for. </summary>
    </member>
    <member name="M:System.ServiceModel.Activities.Tracking.Configuration.StateElement.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.Activities.Tracking.Configuration.StateElement" /> class. </summary>
    </member>
    <member name="P:System.ServiceModel.Activities.Tracking.Configuration.StateElement.ElementKey">
      <summary>Gets a key that uniquely identifies the element query.</summary>
      <returns>The element key.</returns>
    </member>
    <member name="P:System.ServiceModel.Activities.Tracking.Configuration.StateElement.Name">
      <summary>Gets or sets the state name to filter on.</summary>
      <returns>The state name to filter on. The default value is “*” (all).</returns>
    </member>
    <member name="P:System.ServiceModel.Activities.Tracking.Configuration.StateElement.Properties">
      <summary>Gets a collection of <see cref="T:System.Configuration.ConfigurationProperty" /> properties.</summary>
      <returns>A collection of configuration properties.</returns>
    </member>
    <member name="T:System.ServiceModel.Activities.Tracking.Configuration.StateElementCollection">
      <summary>A configuration element that contains a collection of <see cref="T:System.ServiceModel.Activities.Tracking.Configuration.StateElement" /> elements.</summary>
    </member>
    <member name="M:System.ServiceModel.Activities.Tracking.Configuration.StateElementCollection.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.Activities.Tracking.Configuration.StateElementCollection" /> class.</summary>
    </member>
    <member name="T:System.ServiceModel.Activities.Tracking.Configuration.TrackingConfigurationCollection`1">
      <summary>The base class for all tracking configuration collections.</summary>
      <typeparam name="TConfigurationElement">The type of configuration element.</typeparam>
    </member>
    <member name="M:System.ServiceModel.Activities.Tracking.Configuration.TrackingConfigurationCollection`1.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.Activities.Tracking.Configuration.TrackingConfigurationCollection`1" /> class.</summary>
    </member>
    <member name="M:System.ServiceModel.Activities.Tracking.Configuration.TrackingConfigurationCollection`1.Add(`0)">
      <summary>Adds an element into the collection.</summary>
      <param name="element">The element to add.</param>
    </member>
    <member name="M:System.ServiceModel.Activities.Tracking.Configuration.TrackingConfigurationCollection`1.Clear">
      <summary>Clears the contents of the collection.</summary>
    </member>
    <member name="P:System.ServiceModel.Activities.Tracking.Configuration.TrackingConfigurationCollection`1.CollectionType">
      <summary>Gets or sets the collection type.</summary>
      <returns>One of the <see cref="T:System.Configuration.ConfigurationElementCollectionType" /> enumeration values.</returns>
    </member>
    <member name="M:System.ServiceModel.Activities.Tracking.Configuration.TrackingConfigurationCollection`1.CreateNewElement">
      <summary>Creates a new element.</summary>
      <returns>A new configuration element.</returns>
    </member>
    <member name="M:System.ServiceModel.Activities.Tracking.Configuration.TrackingConfigurationCollection`1.GetElementKey(System.Configuration.ConfigurationElement)">
      <summary>Gets the element key for the specified configuration element.</summary>
      <returns>The element key.</returns>
      <param name="element">The configuration element.</param>
    </member>
    <member name="M:System.ServiceModel.Activities.Tracking.Configuration.TrackingConfigurationCollection`1.IndexOf(`0)">
      <summary>Gets the index of the specified configuration element.</summary>
      <returns>The zero-based index of the configuration element.</returns>
      <param name="element">The configuration element.</param>
    </member>
    <member name="P:System.ServiceModel.Activities.Tracking.Configuration.TrackingConfigurationCollection`1.Item(System.Int32)">
      <summary>Gets the element as the specified index.</summary>
      <returns>The element at the specified index.</returns>
      <param name="index">The index of the element to retrieve.</param>
    </member>
    <member name="M:System.ServiceModel.Activities.Tracking.Configuration.TrackingConfigurationCollection`1.Remove(`0)">
      <summary>Removes the specified configuration element.</summary>
      <param name="element">The configuration element to remove.</param>
    </member>
    <member name="M:System.ServiceModel.Activities.Tracking.Configuration.TrackingConfigurationCollection`1.RemoveAt(System.Int32)">
      <summary>Removes the configuration element at the specified index.</summary>
      <param name="index">The index of the configuration element to remove.</param>
    </member>
    <member name="T:System.ServiceModel.Activities.Tracking.Configuration.TrackingConfigurationElement">
      <summary>The base class for tracking configuration elements.</summary>
    </member>
    <member name="M:System.ServiceModel.Activities.Tracking.Configuration.TrackingConfigurationElement.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.Activities.Tracking.Configuration.TrackingConfigurationElement" /> class.</summary>
    </member>
    <member name="P:System.ServiceModel.Activities.Tracking.Configuration.TrackingConfigurationElement.ElementKey">
      <summary>Gets a key that uniquely identifies the configuration element.</summary>
      <returns>The element key.</returns>
    </member>
    <member name="M:System.ServiceModel.Activities.Tracking.Configuration.TrackingConfigurationElement.GetStringPairKey(System.String,System.String)">
      <summary>Merges the two specified strings.</summary>
      <returns>A string that contains both strings.</returns>
      <param name="value1">The first string.</param>
      <param name="value2">The second string.</param>
    </member>
    <member name="T:System.ServiceModel.Activities.Tracking.Configuration.TrackingQueryElement">
      <summary>A configuration element that represents a <see cref="T:System.Activities.Tracking.TrackingQuery" /> instance when specifying a tracking profile.</summary>
    </member>
    <member name="M:System.ServiceModel.Activities.Tracking.Configuration.TrackingQueryElement.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.Activities.Tracking.Configuration.TrackingQueryElement" /> class.</summary>
    </member>
    <member name="P:System.ServiceModel.Activities.Tracking.Configuration.TrackingQueryElement.Annotations">
      <summary>Gets a collection of annotations associated with the <see cref="T:System.ServiceModel.Activities.Tracking.Configuration.TrackingQueryElement" />.</summary>
      <returns>A collection of annotations.</returns>
    </member>
    <member name="P:System.ServiceModel.Activities.Tracking.Configuration.TrackingQueryElement.ElementKey">
      <summary>A key that uniquely identifies the tracking query.</summary>
      <returns>The element key.</returns>
    </member>
    <member name="M:System.ServiceModel.Activities.Tracking.Configuration.TrackingQueryElement.NewTrackingQuery">
      <summary>Override this method to create a query instance and set properties not inherited by derived classes.</summary>
      <returns>A <see cref="T:System.Activities.Tracking.TrackingQuery" /> instance.</returns>
    </member>
    <member name="P:System.ServiceModel.Activities.Tracking.Configuration.TrackingQueryElement.Properties">
      <summary>Gets the collection of properties.</summary>
      <returns>The collection of properties for the element.</returns>
    </member>
    <member name="M:System.ServiceModel.Activities.Tracking.Configuration.TrackingQueryElement.UpdateTrackingQuery(System.Activities.Tracking.TrackingQuery)">
      <summary>Override this method to set the properties that a derived class may inherit. </summary>
      <param name="trackingQuery">The tracking query.</param>
    </member>
    <member name="T:System.ServiceModel.Activities.Tracking.Configuration.TrackingSection">
      <summary>A configuration section for specifying tracking settings.</summary>
    </member>
    <member name="M:System.ServiceModel.Activities.Tracking.Configuration.TrackingSection.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.Activities.Tracking.Configuration.TrackingSection" /> class.</summary>
    </member>
    <member name="P:System.ServiceModel.Activities.Tracking.Configuration.TrackingSection.Profiles">
      <summary>Gets a collection of <see cref="T:System.ServiceModel.Activities.Tracking.Configuration.ProfileElement" /> elements.</summary>
      <returns>A collection of elements.</returns>
    </member>
    <member name="P:System.ServiceModel.Activities.Tracking.Configuration.TrackingSection.Properties">
      <summary>Gets the collection of properties.</summary>
      <returns>The collection of properties for the element.</returns>
    </member>
    <member name="P:System.ServiceModel.Activities.Tracking.Configuration.TrackingSection.TrackingProfiles">
      <summary>Gets a collection of <see cref="T:System.Activities.Tracking.TrackingProfile" /> objects.</summary>
      <returns>A collection of <see cref="T:System.Activities.Tracking.TrackingProfile" /> objects.</returns>
    </member>
    <member name="T:System.ServiceModel.Activities.Tracking.Configuration.VariableElement">
      <summary>A configuration element that specifies the variables to be extracted from an activity. </summary>
    </member>
    <member name="M:System.ServiceModel.Activities.Tracking.Configuration.VariableElement.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.Activities.Tracking.Configuration.VariableElement" /> class.</summary>
    </member>
    <member name="P:System.ServiceModel.Activities.Tracking.Configuration.VariableElement.ElementKey">
      <summary>Gets a key that uniquely identifies the variable query.</summary>
      <returns>The element key.</returns>
    </member>
    <member name="P:System.ServiceModel.Activities.Tracking.Configuration.VariableElement.Name">
      <summary>Gets or sets the name of the variable to be extracted.</summary>
      <returns>The variable name.</returns>
    </member>
    <member name="P:System.ServiceModel.Activities.Tracking.Configuration.VariableElement.Properties">
      <summary>Gets the collection of properties.</summary>
      <returns>The collection of properties for the element.</returns>
    </member>
    <member name="T:System.ServiceModel.Activities.Tracking.Configuration.VariableElementCollection">
      <summary>A configuration element that contains a collection of <see cref="T:System.ServiceModel.Activities.Tracking.Configuration.VariableElement" /> elements.</summary>
    </member>
    <member name="M:System.ServiceModel.Activities.Tracking.Configuration.VariableElementCollection.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.Activities.Tracking.Configuration.VariableElementCollection" /> class.</summary>
    </member>
    <member name="P:System.ServiceModel.Activities.Tracking.Configuration.VariableElementCollection.ElementName">
      <summary>Gets the configuration element name.</summary>
      <returns>The configuration element name.</returns>
    </member>
    <member name="T:System.ServiceModel.Activities.Tracking.Configuration.WorkflowInstanceQueryElement">
      <summary>A configuration element that represents a <see cref="T:System.Activities.Tracking.WorkflowInstanceQuery" />. </summary>
    </member>
    <member name="M:System.ServiceModel.Activities.Tracking.Configuration.WorkflowInstanceQueryElement.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.Activities.Tracking.Configuration.WorkflowInstanceQueryElement" /> class.</summary>
    </member>
    <member name="M:System.ServiceModel.Activities.Tracking.Configuration.WorkflowInstanceQueryElement.NewTrackingQuery">
      <summary>Creates a new <see cref="T:System.Activities.Tracking.WorkflowInstanceQuery" /> instance.</summary>
      <returns>A new workflow instance query.</returns>
    </member>
    <member name="P:System.ServiceModel.Activities.Tracking.Configuration.WorkflowInstanceQueryElement.Properties">
      <summary>Gets the collection of properties.</summary>
      <returns>The collection of properties for the element.</returns>
    </member>
    <member name="P:System.ServiceModel.Activities.Tracking.Configuration.WorkflowInstanceQueryElement.States">
      <summary>The workflow states that the query filters on.</summary>
      <returns>The states to filter on.</returns>
    </member>
    <member name="T:System.ServiceModel.Activities.Tracking.Configuration.WorkflowInstanceQueryElementCollection">
      <summary>A collection of <see cref="T:System.ServiceModel.Activities.Tracking.Configuration.TrackingConfigurationElement" /> elements that contains <see cref="T:System.ServiceModel.Activities.Tracking.Configuration.WorkflowInstanceQueryElement" /> elements.</summary>
    </member>
    <member name="M:System.ServiceModel.Activities.Tracking.Configuration.WorkflowInstanceQueryElementCollection.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.Activities.Tracking.Configuration.WorkflowInstanceQueryElementCollection" /> class.</summary>
    </member>
    <member name="T:System.ServiceModel.XamlIntegration.EndpointIdentityConverter">
      <summary>Converts an <see cref="T:System.ServiceModel.EndpointIdentity" /> instance to the specified type.</summary>
    </member>
    <member name="M:System.ServiceModel.XamlIntegration.EndpointIdentityConverter.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.XamlIntegration.EndpointIdentityConverter" /> class.</summary>
    </member>
    <member name="M:System.ServiceModel.XamlIntegration.EndpointIdentityConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)">
      <summary>Gets a value that determines whether the converter can convert an <see cref="T:System.ServiceModel.EndpointIdentity" /> instance to the specified type.</summary>
      <returns>true if the converter can perform the conversion requested; otherwise false.</returns>
      <param name="context">A type descriptor context that provides a format context.</param>
      <param name="destinationType">The type you want to convert to.</param>
    </member>
    <member name="M:System.ServiceModel.XamlIntegration.EndpointIdentityConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
      <summary>Converts the given object to the specified type, using the specified context and culture information.</summary>
      <returns>The converted value.</returns>
      <param name="context">A <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> that provides a format context.</param>
      <param name="culture">The culture information. If null is passed, the current culture is assumed.</param>
      <param name="value">The object to convert.</param>
      <param name="destinationType">The type to convert the <paramref name="value" /> parameter to.</param>
    </member>
    <member name="T:System.ServiceModel.XamlIntegration.ServiceXNameTypeConverter">
      <summary>A WCF-specific implementation of a <see cref="T:System.Xml.Linq.XName" /> type converter that does not require <see cref="T:System.Xml.Linq.XName" /> instances to specify a namespace.</summary>
    </member>
    <member name="M:System.ServiceModel.XamlIntegration.ServiceXNameTypeConverter.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.XamlIntegration.ServiceXNameTypeConverter" /> class.</summary>
    </member>
    <member name="M:System.ServiceModel.XamlIntegration.ServiceXNameTypeConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)">
      <summary>Gets a value that indicates whether this converter can convert an object of one type to an <see cref="T:System.Xml.Linq.XName" />. </summary>
      <returns>true if the converter can perform the conversion; otherwise, false.</returns>
      <param name="context">The type descriptor context</param>
      <param name="sourceType">The type to convert from.</param>
    </member>
    <member name="M:System.ServiceModel.XamlIntegration.ServiceXNameTypeConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)">
      <summary>Gets a value that indicates whether this converter can convert an <see cref="T:System.Xml.Linq.XName" /> instance to an object of the specified type.</summary>
      <returns>true if the converter can perform the conversion; otherwise, false.</returns>
      <param name="context">The type descriptor context.</param>
      <param name="destinationType">The type to convert to.</param>
    </member>
    <member name="M:System.ServiceModel.XamlIntegration.ServiceXNameTypeConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
      <summary>Converts the specified value to a <see cref="T:System.Xml.Linq.XName" /> instance.</summary>
      <returns>The converted value.</returns>
      <param name="context">The type descriptor context.</param>
      <param name="culture">The current culture.</param>
      <param name="value">The object to convert.</param>
    </member>
    <member name="M:System.ServiceModel.XamlIntegration.ServiceXNameTypeConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
      <summary>Converts a <see cref="T:System.Xml.Linq.XName" /> instance to an object of the specified type.</summary>
      <returns>The converted value.</returns>
      <param name="context">The type descriptor context.</param>
      <param name="culture">The current culture.</param>
      <param name="value">The value to convert.</param>
      <param name="destinationType">The type to convert the value to.</param>
    </member>
    <member name="T:System.ServiceModel.XamlIntegration.SpnEndpointIdentityExtension">
      <summary>A XAML markup extension for the <see cref="T:System.ServiceModel.SpnEndpointIdentity" /> class.</summary>
    </member>
    <member name="M:System.ServiceModel.XamlIntegration.SpnEndpointIdentityExtension.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.SpnEndpointIdentityExtension" /> class.</summary>
    </member>
    <member name="M:System.ServiceModel.XamlIntegration.SpnEndpointIdentityExtension.#ctor(System.ServiceModel.SpnEndpointIdentity)">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.SpnEndpointIdentityExtension" /> class.</summary>
      <param name="identity">The service principal name (SPN) endpoint identity.</param>
    </member>
    <member name="M:System.ServiceModel.XamlIntegration.SpnEndpointIdentityExtension.ProvideValue(System.IServiceProvider)">
      <summary>Provides the object that the markup extension represents. </summary>
      <returns>The object that the markup extension represents.</returns>
      <param name="serviceProvider">The service provider.</param>
    </member>
    <member name="P:System.ServiceModel.XamlIntegration.SpnEndpointIdentityExtension.SpnName">
      <summary>Gets or sets the service principle name.</summary>
      <returns>The service principle name.</returns>
    </member>
    <member name="T:System.ServiceModel.XamlIntegration.UpnEndpointIdentityExtension">
      <summary>A XAML markup extension for the <see cref="T:System.ServiceModel.UpnEndpointIdentity" /> class.</summary>
    </member>
    <member name="M:System.ServiceModel.XamlIntegration.UpnEndpointIdentityExtension.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.XamlIntegration.UpnEndpointIdentityExtension" /> class.</summary>
    </member>
    <member name="M:System.ServiceModel.XamlIntegration.UpnEndpointIdentityExtension.#ctor(System.ServiceModel.UpnEndpointIdentity)">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.XamlIntegration.UpnEndpointIdentityExtension" /> class with the specified <see cref="T:System.ServiceModel.UpnEndpointIdentity" />.</summary>
      <param name="identity">The User Principal Name (UPN) endpoint identity.</param>
    </member>
    <member name="M:System.ServiceModel.XamlIntegration.UpnEndpointIdentityExtension.ProvideValue(System.IServiceProvider)">
      <summary>Provides the object that the markup extension represents.</summary>
      <returns>The object that the markup extension represents.</returns>
      <param name="serviceProvider">The service provider.</param>
    </member>
    <member name="P:System.ServiceModel.XamlIntegration.UpnEndpointIdentityExtension.UpnName">
      <summary>Gets or sets the user principle name.</summary>
      <returns>The user principle name.</returns>
    </member>
  </members>
</doc>
=== C:/Users/treeman/Desktop/windows nt source code\xbox\Xbox Live Source\XONLINE_MAIN\public\ext\sdk\CLR\netfx40rtm\Profile\Client\System.ServiceModel.WasHosting.xml ===
﻿<?xml version="1.0" encoding="utf-8"?>
<doc>
	<assembly>
		<name>System.ServiceModel.WasHosting</name>
	</assembly>
	<members />
</doc>
=== C:/Users/treeman/Desktop/windows nt source code\xbox\Xbox Live Source\XONLINE_MAIN\public\ext\sdk\CLR\netfx40rtm\Profile\Client\System.Runtime.xml ===
﻿<?xml version="1.0" encoding="utf-8"?>
<doc>
  <assembly>
    <name>System.Runtime</name>
  </assembly>
  <members>
    <member name="T:System.Runtime.Persistence.InstanceCollisionException">
      <summary>A persistence provider throws this exception when it expects an instance to be in an uninitialized state but the instance is not in that state. </summary>
    </member>
    <member name="M:System.Runtime.Persistence.InstanceCollisionException.#ctor">
      <summary>Initializes an instance of the <see cref="T:System.Runtime.Persistence.InstanceCollisionException" /> class.</summary>
    </member>
    <member name="M:System.Runtime.Persistence.InstanceCollisionException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Initializes a new instance of the <see cref="T:System.Runtime.Persistence.InstanceCollisionException" /> class with serialized data.</summary>
      <param name="info">The information about the current exception.</param>
      <param name="context">The contextual information about the source or destination.</param>
    </member>
    <member name="M:System.Runtime.Persistence.InstanceCollisionException.#ctor(System.String)">
      <summary>Initializes an instance of the <see cref="T:System.Runtime.Persistence.InstanceCollisionException" /> class using the error message.</summary>
      <param name="message">The reason for the exception.</param>
    </member>
    <member name="M:System.Runtime.Persistence.InstanceCollisionException.#ctor(System.String,System.Exception)">
      <summary>Initializes an instance of the <see cref="T:System.Runtime.Persistence.InstanceCollisionException" /> class using the error message and the inner exception information.</summary>
      <param name="message">The reason for the exception.</param>
      <param name="innerException">The exception that caused the current exception.</param>
    </member>
    <member name="M:System.Runtime.Persistence.InstanceCollisionException.#ctor(System.Xml.Linq.XName,System.Guid)">
      <summary>Initializes an instance of the <see cref="T:System.Runtime.Persistence.InstanceCollisionException" /> class using the XName (the combination of namespace and name) of the command and the ID of the target instance against which the command was executed passed as parameters.</summary>
      <param name="commandName">The XName (the combination of namespace and name) of the command.</param>
      <param name="instanceId">The ID of the target instance against which the command was executed.</param>
    </member>
    <member name="M:System.Runtime.Persistence.InstanceCollisionException.#ctor(System.Xml.Linq.XName,System.Guid,System.Exception)">
      <summary>Initializes an instance of the <see cref="T:System.Runtime.Persistence.InstanceCollisionException" /> class using the XName (the combination of namespace and name) of the command, the ID of the target instance against which the command was executed, and the inner exception information.</summary>
      <param name="commandName">The XName (the combination of namespace and name) of the command.</param>
      <param name="instanceId">The ID of the target instance against which the command was executed.</param>
      <param name="innerException">The exception that caused the current exception.</param>
    </member>
    <member name="M:System.Runtime.Persistence.InstanceCollisionException.#ctor(System.Xml.Linq.XName,System.Guid,System.String,System.Exception)">
      <summary>Initializes an instance of the <see cref="T:System.Runtime.Persistence.InstanceCollisionException" /> class using the XName (the combination of namespace and name) of the command, the ID of the target instance against which the command was executed, the error message that explains the reason for the current exception, and the inner exception information passed as parameters.</summary>
      <param name="commandName">The XName (the combination of namespace and name) of the command.</param>
      <param name="instanceId">The ID of the target instance against which the command was executed.</param>
      <param name="message">The reason for the exception.</param>
      <param name="innerException">The exception that caused the current exception.</param>
    </member>
    <member name="T:System.Runtime.Persistence.InstanceCompletedException">
      <summary>A persistence provider throws this exception when it expects to find an instance in the initialized state, but finds the instance is in the completed state.</summary>
    </member>
    <member name="M:System.Runtime.Persistence.InstanceCompletedException.#ctor">
      <summary>Initializes an instance of the <see cref="T:System.Runtime.Persistence.InstanceCompletedException" /> class.</summary>
    </member>
    <member name="M:System.Runtime.Persistence.InstanceCompletedException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Initializes an instance of the <see cref="T:System.Runtime.Persistence.InstanceCompletedException" /> class with serialized data.</summary>
      <param name="info">The information about the current exception.</param>
      <param name="context">The contextual information about the source or destination.</param>
    </member>
    <member name="M:System.Runtime.Persistence.InstanceCompletedException.#ctor(System.String)">
      <summary>Initializes an instance of the <see cref="T:System.Runtime.Persistence.InstanceCompletedException" /> class using the error message.</summary>
      <param name="message">The reason for the exception.</param>
    </member>
    <member name="M:System.Runtime.Persistence.InstanceCompletedException.#ctor(System.String,System.Exception)">
      <summary>Initializes an instance of the <see cref="T:System.Runtime.Persistence.InstanceCompletedException" /> class using the error message and the inner exception information.</summary>
      <param name="message">The reason for the exception.</param>
      <param name="innerException">The exception that causes the current exception.</param>
    </member>
    <member name="M:System.Runtime.Persistence.InstanceCompletedException.#ctor(System.Xml.Linq.XName,System.Guid)">
      <summary>Initializes an instance of the <see cref="T:System.Runtime.Persistence.InstanceCompletedException" /> class using the XName (the combination of namespace and name) of the command and the ID of the target instance against which the command was executed.</summary>
      <param name="commandName">The XName (the combination of namespace and name) of the command.</param>
      <param name="instanceId">The ID of the target instance against which the command was executed.</param>
    </member>
    <member name="M:System.Runtime.Persistence.InstanceCompletedException.#ctor(System.Xml.Linq.XName,System.Guid,System.Exception)">
      <su