ticationException">The authentication failed. You can use this object to retry the authentication.</exception>
      <exception cref="T:System.Security.Authentication.InvalidCredentialException">The authentication failed. You can use this object to retry the authentication.</exception>
      <exception cref="T:System.InvalidOperationException">There is no pending authentication to complete.</exception>
    </member>
    <member name="M:System.Net.Security.NegotiateStream.EndRead(System.IAsyncResult)">
      <summary>Ends an asynchronous read operation that was started with a call to <see cref="M:System.Net.Security.NegotiateStream.BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)" />.</summary>
      <returns>A <see cref="T:System.Int32" /> value that specifies the number of bytes read from the underlying stream.</returns>
      <param name="asyncResult">An <see cref="T:System.IAsyncResult" /> instance returned by a call to <see cref="M:System.Net.Security.NegotiateStream.BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)" /></param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="asyncResult" /> is null.</exception>
      <exception cref="T:System.ArgumentException">The asyncResult was not created by a call to <see cref="M:System.Net.Security.NegotiateStream.BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)" />.</exception>
      <exception cref="T:System.InvalidOperationException">There is no pending read operation to complete.</exception>
      <exception cref="T:System.IO.IOException">The read operation failed.</exception>
      <exception cref="T:System.InvalidOperationException">Authentication has not occurred.</exception>
    </member>
    <member name="M:System.Net.Security.NegotiateStream.EndWrite(System.IAsyncResult)">
      <summary>Ends an asynchronous write operation that was started with a call to <see cref="M:System.Net.Security.NegotiateStream.BeginWrite(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)" />.</summary>
      <param name="asyncResult">An <see cref="T:System.IAsyncResult" /> instance returned by a call to <see cref="M:System.Net.Security.NegotiateStream.BeginWrite(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)" /></param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="asyncResult" /> is null.</exception>
      <exception cref="T:System.ArgumentException">The asyncResult was not created by a call to <see cref="M:System.Net.Security.NegotiateStream.BeginWrite(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)" />.</exception>
      <exception cref="T:System.InvalidOperationException">There is no pending write operation to complete.</exception>
      <exception cref="T:System.IO.IOException">The write operation failed.</exception>
      <exception cref="T:System.InvalidOperationException">Authentication has not occurred.</exception>
    </member>
    <member name="M:System.Net.Security.NegotiateStream.Flush">
      <summary>Causes any buffered data to be written to the underlying device.</summary>
    </member>
    <member name="P:System.Net.Security.NegotiateStream.ImpersonationLevel">
      <summary>Gets a value that indicates how the server can use the client's credentials.</summary>
      <returns>One of the <see cref="T:System.Security.Principal.TokenImpersonationLevel" /> values.</returns>
      <exception cref="T:System.InvalidOperationException">Authentication failed or has not occurred.</exception>
    </member>
    <member name="P:System.Net.Security.NegotiateStream.IsAuthenticated">
      <summary>Gets a <see cref="T:System.Boolean" /> value that indicates whether authentication was successful.</summary>
      <returns>true if successful authentication occurred; otherwise, false. </returns>
    </member>
    <member name="P:System.Net.Security.NegotiateStream.IsEncrypted">
      <summary>Gets a <see cref="T:System.Boolean" /> value that indicates whether this <see cref="T:System.Net.Security.NegotiateStream" /> uses data encryption.</summary>
      <returns>true if data is encrypted before being transmitted over the network and decrypted when it reaches the remote endpoint; otherwise, false.</returns>
    </member>
    <member name="P:System.Net.Security.NegotiateStream.IsMutuallyAuthenticated">
      <summary>Gets a <see cref="T:System.Boolean" /> value that indicates whether both the server and the client have been authenticated.</summary>
      <returns>true if the server has been authenticated; otherwise, false.</returns>
    </member>
    <member name="P:System.Net.Security.NegotiateStream.IsServer">
      <summary>Gets a <see cref="T:System.Boolean" /> value that indicates whether the local side of the connection used by this <see cref="T:System.Net.Security.NegotiateStream" /> was authenticated as the server.</summary>
      <returns>true if the local endpoint was successfully authenticated as the server side of the authenticated connection; otherwise, false.</returns>
    </member>
    <member name="P:System.Net.Security.NegotiateStream.IsSigned">
      <summary>Gets a <see cref="T:System.Boolean" /> value that indicates whether the data sent using this stream is signed.</summary>
      <returns>true if the data is signed before being transmitted; otherwise, false.</returns>
    </member>
    <member name="P:System.Net.Security.NegotiateStream.Length">
      <summary>Gets the length of the underlying stream.</summary>
      <returns>A <see cref="T:System.Int64" /> that specifies the length of the underlying stream.</returns>
      <exception cref="T:System.NotSupportedException">Getting the value of this property is not supported when the underlying stream is a <see cref="T:System.Net.Sockets.NetworkStream" />.</exception>
    </member>
    <member name="P:System.Net.Security.NegotiateStream.Position">
      <summary>Gets or sets the current position in the underlying stream.</summary>
      <returns>A <see cref="T:System.Int64" /> that specifies the current position in the underlying stream.</returns>
      <exception cref="T:System.NotSupportedException">Setting this property is not supported.- or -Getting the value of this property is not supported when the underlying stream is a <see cref="T:System.Net.Sockets.NetworkStream" />.</exception>
    </member>
    <member name="M:System.Net.Security.NegotiateStream.Read(System.Byte[],System.Int32,System.Int32)">
      <summary>Reads data from this stream and stores it in the specified array.</summary>
      <returns>A <see cref="T:System.Int32" /> value that specifies the number of bytes read from the underlying stream. When there is no more data to be read, returns 0.</returns>
      <param name="buffer">A <see cref="T:System.Byte" /> array that receives the bytes read from the stream.</param>
      <param name="offset">A <see cref="T:System.Int32" /> containing the zero-based location in <paramref name="buffer" /> at which to begin storing the data read from this stream.</param>
      <param name="count">A <see cref="T:System.Int32" /> containing the maximum number of bytes to read from the stream.</param>
      <exception cref="T:System.IO.IOException">The read operation failed.</exception>
      <exception cref="T:System.InvalidOperationException">Authentication has not occurred.</exception>
      <exception cref="T:System.NotSupportedException">A <see cref="M:System.Net.Security.NegotiateStream.Read(System.Byte[],System.Int32,System.Int32)" /> operation is already in progress.</exception>
    </member>
    <member name="P:System.Net.Security.NegotiateStream.ReadTimeout">
      <summary>Gets or sets the amount of time a read operation blocks waiting for data.</summary>
      <returns>A <see cref="T:System.Int32" /> that specifies the amount of time that will elapse before a read operation fails. </returns>
    </member>
    <member name="P:System.Net.Security.NegotiateStream.RemoteIdentity">
      <summary>Gets information about the identity of the remote party sharing this authenticated stream.</summary>
      <returns>An <see cref="T:System.Security.Principal.IIdentity" /> object that describes the identity of the remote endpoint.</returns>
      <exception cref="T:System.InvalidOperationException">Authentication failed or has not occurred.</exception>
    </member>
    <member name="M:System.Net.Security.NegotiateStream.Seek(System.Int64,System.IO.SeekOrigin)">
      <summary>Throws <see cref="T:System.NotSupportedException" />.</summary>
      <returns>Always throws a <see cref="T:System.NotSupportedException" />.</returns>
      <param name="offset">This value is ignored.</param>
      <param name="origin">This value is ignored.</param>
      <exception cref="T:System.NotSupportedException">Seeking is not supported on <see cref="T:System.Net.Security.NegotiateStream" />.</exception>
    </member>
    <member name="M:System.Net.Security.NegotiateStream.SetLength(System.Int64)">
      <summary>Sets the length of the underlying stream.</summary>
      <param name="value">An <see cref="T:System.Int64" /> value that specifies the length of the stream.</param>
    </member>
    <member name="M:System.Net.Security.NegotiateStream.Write(System.Byte[],System.Int32,System.Int32)">
      <summary>Write the specified number of <see cref="T:System.Byte" />s to the underlying stream using the specified buffer and offset.</summary>
      <param name="buffer">A <see cref="T:System.Byte" /> array that supplies the bytes written to the stream.</param>
      <param name="offset">An <see cref="T:System.Int32" /> containing the zero-based location in<paramref name=" buffer" /> at which to begin reading bytes to be written to the stream.</param>
      <param name="count">A <see cref="T:System.Int32" /> containing the number of bytes to read from <paramref name="buffer" />.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="buffer" /> is null.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="offset is less than 0" />.- or -<paramref name="offset" /> is greater than the length of <paramref name="buffer" />.- or -<paramref name="offset" /> plus count is greater than the length of <paramref name="buffer" />.</exception>
      <exception cref="T:System.IO.IOException">The write operation failed.- or -Encryption is in use, but the data could not be encrypted.</exception>
      <exception cref="T:System.NotSupportedException">There is already a write operation in progress.</exception>
      <exception cref="T:System.ObjectDisposedException">This object has been closed.</exception>
      <exception cref="T:System.InvalidOperationException">Authentication has not occurred.</exception>
    </member>
    <member name="P:System.Net.Security.NegotiateStream.WriteTimeout">
      <summary>Gets or sets the amount of time a write operation blocks waiting for data.</summary>
      <returns>A <see cref="T:System.Int32" /> that specifies the amount of time that will elapse before a write operation fails. </returns>
    </member>
    <member name="T:System.Net.Security.ProtectionLevel">
      <summary>Indicates the security services requested for an authenticated stream.</summary>
    </member>
    <member name="F:System.Net.Security.ProtectionLevel.None">
      <summary>Authentication only.</summary>
    </member>
    <member name="F:System.Net.Security.ProtectionLevel.Sign">
      <summary>Sign data to help ensure the integrity of transmitted data.</summary>
    </member>
    <member name="F:System.Net.Security.ProtectionLevel.EncryptAndSign">
      <summary>Encrypt and sign data to help ensure the confidentiality and integrity of transmitted data.</summary>
    </member>
    <member name="T:System.Net.Security.RemoteCertificateValidationCallback">
      <summary>Verifies the remote Secure Sockets Layer (SSL) certificate used for authentication.</summary>
      <returns>A <see cref="T:System.Boolean" /> value that determines whether the specified certificate is accepted for authentication.</returns>
      <param name="sender">An object that contains state information for this validation.</param>
      <param name="certificate">The certificate used to authenticate the remote party.</param>
      <param name="chain">The chain of certificate authorities associated with the remote certificate.</param>
      <param name="sslPolicyErrors">One or more errors associated with the remote certificate.</param>
    </member>
    <member name="T:System.Net.Security.SslPolicyErrors">
      <summary>Enumerates Secure Socket Layer (SSL) policy errors.</summary>
    </member>
    <member name="F:System.Net.Security.SslPolicyErrors.None">
      <summary>No SSL policy errors.</summary>
    </member>
    <member name="F:System.Net.Security.SslPolicyErrors.RemoteCertificateNotAvailable">
      <summary>Certificate not available.</summary>
    </member>
    <member name="F:System.Net.Security.SslPolicyErrors.RemoteCertificateNameMismatch">
      <summary>Certificate name mismatch.</summary>
    </member>
    <member name="F:System.Net.Security.SslPolicyErrors.RemoteCertificateChainErrors">
      <summary>
        <see cref="P:System.Security.Cryptography.X509Certificates.X509Chain.ChainStatus" /> has returned a non empty array.</summary>
    </member>
    <member name="T:System.Net.Security.SslStream">
      <summary>Provides a stream used for client-server communication that uses the Secure Socket Layer (SSL) security protocol to authenticate the server and optionally the client.</summary>
    </member>
    <member name="M:System.Net.Security.SslStream.#ctor(System.IO.Stream)">
      <summary>Initializes a new instance of the <see cref="T:System.Net.Security.SslStream" /> class using the specified <see cref="T:System.IO.Stream" />.</summary>
      <param name="innerStream">A <see cref="T:System.IO.Stream" /> object used by the <see cref="T:System.Net.Security.SslStream" /> for sending and receiving data.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="innerStream" /> is not readable.-or-<paramref name="innerStream" /> is not writable.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="innerStream" /> is null.-or-<paramref name="innerStream" /> is equal to <see cref="F:System.IO.Stream.Null" />.</exception>
    </member>
    <member name="M:System.Net.Security.SslStream.#ctor(System.IO.Stream,System.Boolean)">
      <summary>Initializes a new instance of the <see cref="T:System.Net.Security.SslStream" /> class using the specified <see cref="T:System.IO.Stream" /> and stream closure behavior.</summary>
      <param name="innerStream">A <see cref="T:System.IO.Stream" /> object used by the <see cref="T:System.Net.Security.SslStream" /> for sending and receiving data.</param>
      <param name="leaveInnerStreamOpen">A Boolean value that indicates the closure behavior of the <see cref="T:System.IO.Stream" /> object used by the <see cref="T:System.Net.Security.SslStream" /> for sending and receiving data. This parameter indicates if the inner stream is left open.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="innerStream" /> is not readable.-or-<paramref name="innerStream" /> is not writable.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="innerStream" /> is null.-or-<paramref name="innerStream" /> is equal to <see cref="F:System.IO.Stream.Null" />.</exception>
    </member>
    <member name="M:System.Net.Security.SslStream.#ctor(System.IO.Stream,System.Boolean,System.Net.Security.RemoteCertificateValidationCallback)">
      <summary>Initializes a new instance of the <see cref="T:System.Net.Security.SslStream" /> class using the specified <see cref="T:System.IO.Stream" />, stream closure behavior and certificate validation delegate.</summary>
      <param name="innerStream">A <see cref="T:System.IO.Stream" /> object used by the <see cref="T:System.Net.Security.SslStream" /> for sending and receiving data.</param>
      <param name="leaveInnerStreamOpen">A Boolean value that indicates the closure behavior of the <see cref="T:System.IO.Stream" /> object used by the <see cref="T:System.Net.Security.SslStream" /> for sending and receiving data. This parameter indicates if the inner stream is left open.</param>
      <param name="userCertificateValidationCallback">A <see cref="T:System.Net.Security.RemoteCertificateValidationCallback" /> delegate responsible for validating the certificate supplied by the remote party.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="innerStream" /> is not readable.-or-<paramref name="innerStream" /> is not writable.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="innerStream" /> is null.-or-<paramref name="innerStream" /> is equal to <see cref="F:System.IO.Stream.Null" />.</exception>
    </member>
    <member name="M:System.Net.Security.SslStream.#ctor(System.IO.Stream,System.Boolean,System.Net.Security.RemoteCertificateValidationCallback,System.Net.Security.LocalCertificateSelectionCallback)">
      <summary>Initializes a new instance of the <see cref="T:System.Net.Security.SslStream" /> class using the specified <see cref="T:System.IO.Stream" />, stream closure behavior, certificate validation delegate and certificate selection delegate.</summary>
      <param name="innerStream">A <see cref="T:System.IO.Stream" /> object used by the <see cref="T:System.Net.Security.SslStream" /> for sending and receiving data.</param>
      <param name="leaveInnerStreamOpen">A Boolean value that indicates the closure behavior of the <see cref="T:System.IO.Stream" /> object used by the <see cref="T:System.Net.Security.SslStream" /> for sending and receiving data. This parameter indicates if the inner stream is left open.</param>
      <param name="userCertificateValidationCallback">A <see cref="T:System.Net.Security.RemoteCertificateValidationCallback" /> delegate responsible for validating the certificate supplied by the remote party.</param>
      <param name="userCertificateSelectionCallback">A <see cref="T:System.Net.Security.LocalCertificateSelectionCallback" /> delegate responsible for selecting the certificate used for authentication.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="innerStream" /> is not readable.-or-<paramref name="innerStream" /> is not writable.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="innerStream" /> is null.-or-<paramref name="innerStream" /> is equal to <see cref="F:System.IO.Stream.Null" />.</exception>
    </member>
    <member name="M:System.Net.Security.SslStream.#ctor(System.IO.Stream,System.Boolean,System.Net.Security.RemoteCertificateValidationCallback,System.Net.Security.LocalCertificateSelectionCallback,System.Net.Security.EncryptionPolicy)">
      <summary>Initializes a new instance of the <see cref="T:System.Net.Security.SslStream" /> class using the specified <see cref="T:System.IO.Stream" /></summary>
      <param name="innerStream">A <see cref="T:System.IO.Stream" /> object used by the <see cref="T:System.Net.Security.SslStream" /> for sending and receiving data.</param>
      <param name="leaveInnerStreamOpen">A Boolean value that indicates the closure behavior of the <see cref="T:System.IO.Stream" /> object used by the <see cref="T:System.Net.Security.SslStream" /> for sending and receiving data. This parameter indicates if the inner stream is left open.</param>
      <param name="userCertificateValidationCallback">A <see cref="T:System.Net.Security.RemoteCertificateValidationCallback" /> delegate responsible for validating the certificate supplied by the remote party.</param>
      <param name="userCertificateSelectionCallback">A <see cref="T:System.Net.Security.LocalCertificateSelectionCallback" /> delegate responsible for selecting the certificate used for authentication.</param>
      <param name="encryptionPolicy">The <see cref="T:System.Net.Security.EncryptionPolicy" /> to use.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="innerStream" /> is not readable.-or-<paramref name="innerStream" /> is not writable.-or-<paramref name="encryptionPolicy" /> is not valid.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="innerStream" /> is null.-or-<paramref name="innerStream" /> is equal to <see cref="F:System.IO.Stream.Null" />.</exception>
    </member>
    <member name="M:System.Net.Security.SslStream.AuthenticateAsClient(System.String)">
      <summary>Called by clients to authenticate the server and optionally the client in a client-server connection.</summary>
      <param name="targetHost">The name of the server that shares this <see cref="T:System.Net.Security.SslStream" />.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="targetHost" /> is null.</exception>
      <exception cref="T:System.Security.Authentication.AuthenticationException">The authentication failed and left this object in an unusable state.</exception>
      <exception cref="T:System.InvalidOperationException">Authentication has already occurred.-or-Server authentication using this <see cref="T:System.Net.Security.SslStream" /> was tried previously.-or- Authentication is already in progress.</exception>
      <exception cref="T:System.ObjectDisposedException">This object has been closed.</exception>
    </member>
    <member name="M:System.Net.Security.SslStream.AuthenticateAsClient(System.String,System.Security.Cryptography.X509Certificates.X509CertificateCollection,System.Security.Authentication.SslProtocols,System.Boolean)">
      <summary>Called by clients to authenticate the server and optionally the client in a client-server connection. The authentication process uses the specified certificate collection and SSL protocol.</summary>
      <param name="targetHost">The name of the server that will share this <see cref="T:System.Net.Security.SslStream" />.</param>
      <param name="clientCertificates">The <see cref="T:System.Security.Cryptography.X509Certificates.X509CertificateCollection" /> that contains client certificates.</param>
      <param name="enabledSslProtocols">The <see cref="T:System.Security.Authentication.SslProtocols" /> value that represents the protocol used for authentication.</param>
      <param name="checkCertificateRevocation">A <see cref="T:System.Boolean" /> value that specifies whether the certificate revocation list is checked during authentication.</param>
    </member>
    <member name="M:System.Net.Security.SslStream.AuthenticateAsServer(System.Security.Cryptography.X509Certificates.X509Certificate)">
      <summary>Called by servers to authenticate the server and optionally the client in a client-server connection using the specified certificate.</summary>
      <param name="serverCertificate">The certificate used to authenticate the server.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="serverCertificate" /> is null.</exception>
      <exception cref="T:System.Security.Authentication.AuthenticationException">The authentication failed and left this object in an unusable state.</exception>
      <exception cref="T:System.InvalidOperationException">Authentication has already occurred.-or-Client authentication using this <see cref="T:System.Net.Security.SslStream" /> was tried previously.-or- Authentication is already in progress.</exception>
      <exception cref="T:System.ObjectDisposedException">This object has been closed.</exception>
      <exception cref="T:System.PlatformNotSupportedException">The <see cref="Overload:System.Net.Security.SslStream.AuthenticateAsServer" /> method is not supported on Windows 95, Windows 98, or Windows Millennium.</exception>
    </member>
    <member name="M:System.Net.Security.SslStream.AuthenticateAsServer(System.Security.Cryptography.X509Certificates.X509Certificate,System.Boolean,System.Security.Authentication.SslProtocols,System.Boolean)">
      <summary>Called by servers to begin an asynchronous operation to authenticate the server and optionally the client using the specified certificates, requirements and security protocol.</summary>
      <param name="serverCertificate">The X509Certificate used to authenticate the server.</param>
      <param name="clientCertificateRequired">A <see cref="T:System.Boolean" /> value that specifies whether the client must supply a certificate for authentication.</param>
      <param name="enabledSslProtocols">The <see cref="T:System.Security.Authentication.SslProtocols" />  value that represents the protocol used for authentication.</param>
      <param name="checkCertificateRevocation">A <see cref="T:System.Boolean" /> value that specifies whether the certificate revocation list is checked during authentication.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="serverCertificate" /> is null.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="enabledSslProtocols" /> is not a valid <see cref="T:System.Security.Authentication.SslProtocols" /> value.</exception>
      <exception cref="T:System.Security.Authentication.AuthenticationException">The authentication failed and left this object in an unusable state.</exception>
      <exception cref="T:System.InvalidOperationException">Authentication has already occurred.-or-Client authentication using this <see cref="T:System.Net.Security.SslStream" /> was tried previously.-or- Authentication is already in progress.</exception>
      <exception cref="T:System.ObjectDisposedException">This object has been closed.</exception>
      <exception cref="T:System.PlatformNotSupportedException">The <see cref="Overload:System.Net.Security.SslStream.AuthenticateAsServer" /> method is not supported on Windows 95, Windows 98, or Windows Millennium.</exception>
    </member>
    <member name="M:System.Net.Security.SslStream.BeginAuthenticateAsClient(System.String,System.AsyncCallback,System.Object)">
      <summary>Called by clients to begin an asynchronous operation to authenticate the server and optionally the client.</summary>
      <returns>An <see cref="T:System.IAsyncResult" /> object that indicates the status of the asynchronous operation. </returns>
      <param name="targetHost">The name of the server that shares this <see cref="T:System.Net.Security.SslStream" />.</param>
      <param name="asyncCallback">An <see cref="T:System.AsyncCallback" /> delegate that references the method to invoke when the authentication is complete. </param>
      <param name="asyncState">A user-defined object that contains information about the operation. This object is passed to the <paramref name="asyncCallback" /> delegate when the operation completes.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="targetHost" /> is null.</exception>
      <exception cref="T:System.Security.Authentication.AuthenticationException">The authentication failed and left this object in an unusable state.</exception>
      <exception cref="T:System.InvalidOperationException">Authentication has already occurred.-or-Server authentication using this <see cref="T:System.Net.Security.SslStream" /> was tried previously.-or- Authentication is already in progress.</exception>
      <exception cref="T:System.ObjectDisposedException">This object has been closed.</exception>
    </member>
    <member name="M:System.Net.Security.SslStream.BeginAuthenticateAsClient(System.String,System.Security.Cryptography.X509Certificates.X509CertificateCollection,System.Security.Authentication.SslProtocols,System.Boolean,System.AsyncCallback,System.Object)">
      <summary>Called by clients to begin an asynchronous operation to authenticate the server and optionally the client using the specified certificates and security protocol.</summary>
      <returns>An <see cref="T:System.IAsyncResult" /> object that indicates the status of the asynchronous operation. </returns>
      <param name="targetHost">The name of the server that shares this <see cref="T:System.Net.Security.SslStream" />.</param>
      <param name="clientCertificates">The <see cref="T:System.Security.Cryptography.X509Certificates.X509CertificateCollection" /> containing client certificates.</param>
      <param name="enabledSslProtocols">The <see cref="T:System.Security.Authentication.SslProtocols" /> value that represents the protocol used for authentication.</param>
      <param name="checkCertificateRevocation">A <see cref="T:System.Boolean" /> value that specifies whether the certificate revocation list is checked during authentication.</param>
      <param name="asyncCallback">An <see cref="T:System.AsyncCallback" /> delegate that references the method to invoke when the authentication is complete. </param>
      <param name="asyncState">A user-defined object that contains information about the operation. This object is passed to the <paramref name="asyncCallback" /> delegate when the operation completes.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="targetHost" /> is null.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="enabledSslProtocols" /> is not a valid <see cref="T:System.Security.Authentication.SslProtocols" />  value.</exception>
      <exception cref="T:System.Security.Authentication.AuthenticationException">The authentication failed and left this object in an unusable state.</exception>
      <exception cref="T:System.InvalidOperationException">Authentication has already occurred.-or-Server authentication using this <see cref="T:System.Net.Security.SslStream" /> was tried previously.-or- Authentication is already in progress.</exception>
      <exception cref="T:System.ObjectDisposedException">This object has been closed.</exception>
    </member>
    <member name="M:System.Net.Security.SslStream.BeginAuthenticateAsServer(System.Security.Cryptography.X509Certificates.X509Certificate,System.AsyncCallback,System.Object)">
      <summary>Called by servers to begin an asynchronous operation to authenticate the client and optionally the server in a client-server connection.</summary>
      <returns>An <see cref="T:System.IAsyncResult" /> object indicating the status of the asynchronous operation. </returns>
      <param name="serverCertificate">The X509Certificate used to authenticate the server.</param>
      <param name="asyncCallback">An <see cref="T:System.AsyncCallback" /> delegate that references the method to invoke when the authentication is complete.</param>
      <param name="asyncState">A user-defined object that contains information about the operation. This object is passed to the <paramref name="asyncCallback" /> delegate when the operation completes.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="serverCertificate" /> is null.</exception>
      <exception cref="T:System.Security.Authentication.AuthenticationException">The authentication failed and left this object in an unusable state.</exception>
      <exception cref="T:System.InvalidOperationException">Authentication has already occurred.-or-Client authentication using this <see cref="T:System.Net.Security.SslStream" /> was tried previously.-or- Authentication is already in progress.</exception>
      <exception cref="T:System.ObjectDisposedException">This object has been closed.</exception>
      <exception cref="T:System.PlatformNotSupportedException">The <see cref="Overload:System.Net.Security.SslStream.BeginAuthenticateAsServer" /> method is not supported on Windows 95, Windows 98, or Windows Millennium.</exception>
    </member>
    <member name="M:System.Net.Security.SslStream.BeginAuthenticateAsServer(System.Security.Cryptography.X509Certificates.X509Certificate,System.Boolean,System.Security.Authentication.SslProtocols,System.Boolean,System.AsyncCallback,System.Object)">
      <summary>Called by servers to begin an asynchronous operation to authenticate the server and optionally the client using the specified certificates, requirements and security protocol.</summary>
      <returns>An <see cref="T:System.IAsyncResult" /> object that indicates the status of the asynchronous operation. </returns>
      <param name="serverCertificate">The X509Certificate used to authenticate the server.</param>
      <param name="clientCertificateRequired">A <see cref="T:System.Boolean" /> value that specifies whether the client must supply a certificate for authentication.</param>
      <param name="enabledSslProtocols">The <see cref="T:System.Security.Authentication.SslProtocols" />  value that represents the protocol used for authentication.</param>
      <param name="checkCertificateRevocation">A <see cref="T:System.Boolean" /> value that specifies whether the certificate revocation list is checked during authentication.</param>
      <param name="asyncCallback">An <see cref="T:System.AsyncCallback" /> delegate that references the method to invoke when the authentication is complete. </param>
      <param name="asyncState">A user-defined object that contains information about the operation. This object is passed to the <paramref name="asyncCallback" /> delegate when the operation completes.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="serverCertificate" /> is null.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="enabledSslProtocols" /> is not a valid <see cref="T:System.Security.Authentication.SslProtocols" /> value.</exception>
      <exception cref="T:System.Security.Authentication.AuthenticationException">The authentication failed and left this object in an unusable state.</exception>
      <exception cref="T:System.InvalidOperationException">Authentication has already occurred.-or-Server authentication using this <see cref="T:System.Net.Security.SslStream" /> was tried previously.-or- Authentication is already in progress.</exception>
      <exception cref="T:System.ObjectDisposedException">This object has been closed.</exception>
      <exception cref="T:System.PlatformNotSupportedException">The <see cref="Overload:System.Net.Security.SslStream.BeginAuthenticateAsServer" /> method is not supported on Windows 95, Windows 98, or Windows Millennium.</exception>
    </member>
    <member name="M:System.Net.Security.SslStream.BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)">
      <summary>Begins an asynchronous read operation that reads data from the stream and stores it in the specified array.</summary>
      <returns>An <see cref="T:System.IAsyncResult" /> object that indicates the status of the asynchronous operation. </returns>
      <param name="buffer">A <see cref="T:System.Byte" /> array that receives the bytes read from the stream.</param>
      <param name="offset">The zero-based location in <paramref name="buffer" /> at which to begin storing the data read from this stream.</param>
      <param name="count">The maximum number of bytes to read from the stream.</param>
      <param name="asyncCallback">An <see cref="T:System.AsyncCallback" /> delegate that references the method to invoke when the read operation is complete. </param>
      <param name="asyncState">A user-defined object that contains information about the read operation. This object is passed to the <paramref name="asyncCallback" /> delegate when the operation completes.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="buffer" /> is null.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="offset" />
        <paramref name="&lt;" />
        <paramref name="0" />.<paramref name="-or-" /><paramref name="offset" /> &gt; the length of <paramref name="buffer" />.-or-<paramref name="offset" /> + count &gt; the length of <paramref name="buffer" />.</exception>
      <exception cref="T:System.IO.IOException">The read operation failed.-or-Encryption is in use, but the data could not be decrypted.</exception>
      <exception cref="T:System.NotSupportedException">There is already a read operation in progress.</exception>
      <exception cref="T:System.ObjectDisposedException">This object has been closed.</exception>
      <exception cref="T:System.InvalidOperationException">Authentication has not occurred.</exception>
    </member>
    <member name="M:System.Net.Security.SslStream.BeginWrite(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)">
      <summary>Begins an asynchronous write operation that writes <see cref="T:System.Byte" />s from the specified buffer to the stream.</summary>
      <returns>An <see cref="T:System.IAsyncResult" /> object indicating the status of the asynchronous operation. </returns>
      <param name="buffer">A <see cref="T:System.Byte" /> array that supplies the bytes to be written to the stream.</param>
      <param name="offset">The zero-based location in <paramref name="buffer" /> at which to begin reading bytes to be written to the stream.</param>
      <param name="count">An <see cref="T:System.Int32" /> value that specifies the number of bytes to read from <paramref name="buffer" />.</param>
      <param name="asyncCallback">An <see cref="T:System.AsyncCallback" /> delegate that references the method to invoke when the write operation is complete. </param>
      <param name="asyncState">A user-defined object that contains information about the write operation. This object is passed to the <paramref name="asyncCallback" /> delegate when the operation completes.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="buffer" /> is null.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="offset" />
        <paramref name="&lt;" />
        <paramref name="0" />.<paramref name="-or-" /><paramref name="offset" /> &gt; the length of <paramref name="buffer" />.-or-<paramref name="offset" /> + count &gt; the length of <paramref name="buffer" />.</exception>
      <exception cref="T:System.IO.IOException">The write operation failed.</exception>
      <exception cref="T:System.NotSupportedException">There is already a write operation in progress.</exception>
      <exception cref="T:System.ObjectDisposedException">This object has been closed.</exception>
      <exception cref="T:System.InvalidOperationException">Authentication has not occurred.</exception>
    </member>
    <member name="P:System.Net.Security.SslStream.CanRead">
      <summary>Gets a <see cref="T:System.Boolean" /> value that indicates whether the underlying stream is readable.</summary>
      <returns>true if authentication has occurred and the underlying stream is readable; otherwise false.</returns>
    </member>
    <member name="P:System.Net.Security.SslStream.CanSeek">
      <summary>Gets a <see cref="T:System.Boolean" /> value that indicates whether the underlying stream is seekable.</summary>
      <returns>This property always returns false.</returns>
    </member>
    <member name="P:System.Net.Security.SslStream.CanTimeout">
      <summary>Gets a <see cref="T:System.Boolean" /> value that indicates whether the underlying stream supports time-outs.</summary>
      <returns>true if the underlying stream supports time-outs; otherwise, false.</returns>
    </member>
    <member name="P:System.Net.Security.SslStream.CanWrite">
      <summary>Gets a <see cref="T:System.Boolean" /> value that indicates whether the underlying stream is writable.</summary>
      <returns>true if authentication has occurred and the underlying stream is writable; otherwise false.</returns>
    </member>
    <member name="P:System.Net.Security.SslStream.CheckCertRevocationStatus">
      <summary>Gets a <see cref="T:System.Boolean" /> value that indicates whether the certificate revocation list is checked during the certificate validation process.</summary>
      <returns>true if the certificate revocation list is checked; otherwise, false.</returns>
    </member>
    <member name="P:System.Net.Security.SslStream.CipherAlgorithm">
      <summary>Gets a value that identifies the bulk encryption algorithm used by this <see cref="T:System.Net.Security.SslStream" />.</summary>
      <returns>A <see cref="T:System.Security.Authentication.CipherAlgorithmType" /> value.</returns>
      <exception cref="T:System.InvalidOperationException">The <see cref="P:System.Net.Security.SslStream.CipherAlgorithm" /> property was accessed before the completion of the authentication process or the authentication process failed.</exception>
    </member>
    <member name="P:System.Net.Security.SslStream.CipherStrength">
      <summary>Gets a value that identifies the strength of the cipher algorithm used by this <see cref="T:System.Net.Security.SslStream" />.</summary>
      <returns>An <see cref="T:System.Int32" /> value that specifies the strength of the algorithm, in bits.</returns>
    </member>
    <member name="M:System.Net.Security.SslStream.Dispose(System.Boolean)">
      <summary>Releases the unmanaged resources used by the <see cref="T:System.Net.Security.SslStream" /> and optionally releases the managed resources. </summary>
      <param name="disposing">true to release both managed and unmanaged resources; false to release only unmanaged resources. </param>
    </member>
    <member name="M:System.Net.Security.SslStream.EndAuthenticateAsClient(System.IAsyncResult)">
      <summary>Ends a pending asynchronous server authentication operation started with a previous call to <see cref="Overload:System.Net.Security.SslStream.BeginAuthenticateAsServer" />.</summary>
      <param name="asyncResult">An <see cref="T:System.IAsyncResult" /> instance returned by a call to <see cref="Overload:System.Net.Security.SslStream.BeginAuthenticateAsServer" />. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="asyncResult" /> is null.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="asyncResult" /> was not created by a call to <see cref="Overload:System.Net.Security.SslStream.BeginAuthenticateAsServer" />.</exception>
      <exception cref="T:System.Security.Authentication.AuthenticationException">The authentication failed and left this object in an unusable state.</exception>
      <exception cref="T:System.InvalidOperationException">There is no pending server authentication to complete.</exception>
    </member>
    <member name="M:System.Net.Security.SslStream.EndAuthenticateAsServer(System.IAsyncResult)">
      <summary>Ends a pending asynchronous client authentication operation started with a previous call to <see cref="Overload:System.Net.Security.SslStream.BeginAuthenticateAsClient" />.</summary>
      <param name="asyncResult">An <see cref="T:System.IAsyncResult" /> instance returned by a call to <see cref="Overload:System.Net.Security.SslStream.BeginAuthenticateAsClient" />. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="asyncResult" /> is null.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="asyncResult" /> was not created by a call to <see cref="Overload:System.Net.Security.SslStream.BeginAuthenticateAsClient" />.</exception>
      <exception cref="T:System.Security.Authentication.AuthenticationException">The authentication failed and left this object in an unusable state.</exception>
      <exception cref="T:System.InvalidOperationException">There is no pending client authentication to complete.</exception>
    </member>
    <member name="M:System.Net.Security.SslStream.EndRead(System.IAsyncResult)">
      <summary>Ends an asynchronous read operation started with a previous call to <see cref="M:System.Net.Security.SslStream.BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)" />.</summary>
      <returns>A <see cref="T:System.Int32" /> value that specifies the number of bytes read from the underlying stream.</returns>
      <param name="asyncResult">An <see cref="T:System.IAsyncResult" /> instance returned by a call to <see cref="M:System.Net.Security.SslStream.BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)" /></param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="asyncResult" /> is null.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="asyncResult" /> was not created by a call to <see cref="M:System.Net.Security.SslStream.BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)" />.</exception>
      <exception cref="T:System.InvalidOperationException">There is no pending read operation to complete.</exception>
      <exception cref="T:System.IO.IOException">The read operation failed.</exception>
      <exception cref="T:System.InvalidOperationException">Authentication has not occurred.</exception>
    </member>
    <member name="M:System.Net.Security.SslStream.EndWrite(System.IAsyncResult)">
      <summary>Ends an asynchronous write operation started with a previous call to <see cref="M:System.Net.Security.SslStream.BeginWrite(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)" />.</summary>
      <param name="asyncResult">An <see cref="T:System.IAsyncResult" /> instance returned by a call to <see cref="M:System.Net.Security.SslStream.BeginWrite(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)" /></param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="asyncResult" /> is null.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="asyncResult" /> was not created by a call to <see cref="M:System.Net.Security.SslStream.BeginWrite(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)" />.</exception>
      <exception cref="T:System.InvalidOperationException">There is no pending write operation to complete.</exception>
      <exception cref="T:System.IO.IOException">The write operation failed.</exception>
      <exception cref="T:System.InvalidOperationException">Authentication has not occurred.</exception>
    </member>
    <member name="M:System.Net.Security.SslStream.Flush">
      <summary>Causes any buffered data to be written to the underlying device.</summary>
    </member>
    <member name="P:System.Net.Security.SslStream.HashAlgorithm">
      <summary>Gets the algorithm used for generating message authentication codes (MACs).</summary>
      <returns>A <see cref="T:System.Security.Authentication.HashAlgorithmType" /> value.</returns>
      <exception cref="T:System.InvalidOperationException">The <see cref="P:System.Net.Security.SslStream.HashAlgorithm" /> property was accessed before the completion of the authentication process or the authentication process failed.</exception>
    </member>
    <member name="P:System.Net.Security.SslStream.HashStrength">
      <summary>Gets a value that identifies the strength of the hash algorithm used by this instance.</summary>
      <returns>An <see cref="T:System.Int32" /> value that specifies the strength of the <see cref="T:System.Security.Authentication.HashAlgorithmType" /> algorithm, in bits. Valid values are 128 or 160.</returns>
    </member>
    <member name="P:System.Net.Security.SslStream.IsAuthenticated">
      <summary>Gets a <see cref="T:System.Boolean" /> value that indicates whether authentication was successful.</summary>
      <returns>true if successful authentication occurred; otherwise, false.</returns>
    </member>
    <member name="P:System.Net.Security.SslStream.IsEncrypted">
      <summary>Gets a <see cref="T:System.Boolean" /> value that indicates whether this <see cref="T:System.Net.Security.SslStream" /> uses data encryption.</summary>
      <returns>true if data is encrypted before being transmitted over the network and decrypted when it reaches the remote endpoint; otherwise false.</returns>
    </member>
    <member name="P:System.Net.Security.SslStream.IsMutuallyAuthenticated">
      <summary>Gets a <see cref="T:System.Boolean" /> value that indicates whether both server and client have been authenticated.</summary>
      <returns>true if the server has been authenticated; otherwise false.</returns>
    </member>
    <member name="P:System.Net.Security.SslStream.IsServer">
      <summary>Gets a <see cref="T:System.Boolean" /> value that indicates whether the local side of the connection used by this <see cref="T:System.Net.Security.SslStream" /> was authenticated as the server.</summary>
      <returns>true if the local endpoint was successfully authenticated as the server side of the authenticated connection; otherwise false.</returns>
    </member>
    <member name="P:System.Net.Security.SslStream.IsSigned">
      <summary>Gets a <see cref="T:System.Boolean" /> value that indicates whether the data sent using this stream is signed.</summary>
      <returns>true if the data is signed before being transmitted; otherwise false.</returns>
    </member>
    <member name="P:System.Net.Security.SslStream.KeyExchangeAlgorithm">
      <summary>Gets the key exchange algorithm used by this <see cref="T:System.Net.Security.SslStream" />.</summary>
      <returns>An <see cref="T:System.Security.Authentication.ExchangeAlgorithmType" /> value.</returns>
    </member>
    <member name="P:System.Net.Security.SslStream.KeyExchangeStrength">
      <summary>Gets a value that identifies the strength of the key exchange algorithm used by this instance.</summary>
      <returns>An <see cref="T:System.Int32" /> value that specifies the strength of the <see cref="T:System.Security.Authentication.ExchangeAlgorithmType" /> algorithm, in bits.</returns>
    </member>
    <member name="P:System.Net.Security.SslStream.Length">
      <summary>Gets the length of the underlying stream.</summary>
      <returns>A <see cref="T:System.Int64" />.</returns>
      <exception cref="T:System.NotSupportedException">Getting the value of this property is not supported when the underlying stream is a <see cref="T:System.Net.Sockets.NetworkStream" />.</exception>
    </member>
    <member name="P:System.Net.Security.SslStream.LocalCertificate">
      <summary>Gets the certificate used to authenticate the local endpoint.</summary>
      <returns>An X509Certificate object that represents the certificate supplied for authentication or null if no certificate was supplied.</returns>
      <exception cref="T:System.InvalidOperationException">Authentication failed or has not occurred.</exception>
    </member>
    <member name="P:System.Net.Security.SslStream.Position">
      <summary>Gets or sets the current position in the underlying stream.</summary>
      <returns>A <see cref="T:System.Int64" />.</returns>
      <exception cref="T:System.NotSupportedException">Setting this property is not supported.-or-Getting the value of this property is not supported when the underlying stream is a <see cref="T:System.Net.Sockets.NetworkStream" />.</exception>
    </member>
    <member name="M:System.Net.Security.SslStream.Read(System.Byte[],System.Int32,System.Int32)">
      <summary>Reads data from this stream and stores it in the specified array.</summary>
      <returns>A <see cref="T:System.Int32" /> value that specifies the number of bytes read. When there is no more data to be read, returns 0.</returns>
      <param name="buffer">A <see cref="T:System.Byte" /> array that receives the bytes read from this stream.</param>
      <param name="offset">A <see cref="T:System.Int32" /> that contains the zero-based location in <paramref name="buffer" /> at which to begin storing the data read from this stream.</param>
      <param name="count">A <see cref="T:System.Int32" /> that contains the maximum number of bytes to read from this stream.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="buffer" /> is null.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="offset" />
        <paramref name="&lt;" />
        <paramref name="0" />.<paramref name="-or-" /><paramref name="offset" /> &gt; the length of <paramref name="buffer" />.-or-<paramref name="offset" /> + count &gt; the length of <paramref name="buffer" />.</exception>
      <exception cref="T:System.IO.IOException">The read operation failed. Check the inner exception, if present to determine the cause of the failure.</exception>
      <exception cref="T:System.NotSupportedException">There is already a read operation in progress.</exception>
      <exception cref="T:System.ObjectDisposedException">This object has been closed.</exception>
      <exception cref="T:System.InvalidOperationException">Authentication has not occurred.</exception>
    </member>
    <member name="P:System.Net.Security.SslStream.ReadTimeout">
      <summary>Gets or sets the amount of time a read operation blocks waiting for data.</summary>
      <returns>A <see cref="T:System.Int32" /> that specifies the amount of time that elapses before a synchronous read operation fails.</returns>
    </member>
    <member name="P:System.Net.Security.SslStream.RemoteCertificate">
      <summary>Gets the certificate used to authenticate the remote endpoint.</summary>
      <returns>An X509Certificate object that represents the certificate supplied for authentication or null if no certificate was supplied.</returns>
      <exception cref="T:System.InvalidOperationException">Authentication failed or has not occurred.</exception>
    </member>
    <member name="M:System.Net.Security.SslStream.Seek(System.Int64,System.IO.SeekOrigin)">
      <summary>Throws a <see cref="T:System.NotSupportedException" />.</summary>
      <returns>Always throws a <see cref="T:System.NotSupportedException" />.</returns>
      <param name="offset">This value is ignored.</param>
      <param name="origin">This value is ignored.</param>
      <exception cref="T:System.NotSupportedException">Seeking is not supported by <see cref="T:System.Net.Security.SslStream" /> objects.</exception>
    </member>
    <member name="M:System.Net.Security.SslStream.SetLength(System.Int64)">
      <summary>Sets the length of the underlying stream.</summary>
      <param name="value">An <see cref="T:System.Int64" /> value that specifies the length of the stream.</param>
    </member>
    <member name="P:System.Net.Security.SslStream.SslProtocol">
      <summary>Gets a value that indicates the security protocol used to authenticate this connection.</summary>
      <returns>The <see cref="T:System.Security.Authentication.SslProtocols" /> value that represents the protocol used for authentication.</returns>
    </member>
    <member name="P:System.Net.Security.SslStream.TransportContext">
      <summary>Gets the <see cref="T:System.Net.TransportContext" /> used for authentication using extended protection.</summary>
      <returns>The <see cref="T:System.Net.TransportContext" /> object that contains the channel binding token (CBT) used for extended protection.</returns>
    </member>
    <member name="M:System.Net.Security.SslStream.Write(System.Byte[])">
      <summary>Writes the specified data to this stream.</summary>
      <param name="buffer">A <see cref="T:System.Byte" /> array that supplies the bytes written to the stream.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="buffer" /> is null.</exception>
      <exception cref="T:System.IO.IOException">The write operation failed.</exception>
      <exception cref="T:System.NotSupportedException">There is already a write operation in progress.</exception>
      <exception cref="T:System.ObjectDisposedException">This object has been closed.</exception>
      <exception cref="T:System.InvalidOperationException">Authentication has not occurred.</exception>
    </member>
    <member name="M:System.Net.Security.SslStream.Write(System.Byte[],System.Int32,System.Int32)">
      <summary>Write the specified number of <see cref="T:System.Byte" />s to the underlying stream using the specified buffer and offset.</summary>
      <param name="buffer">A <see cref="T:System.Byte" /> array that supplies the bytes written to the stream.</param>
      <param name="offset">A <see cref="T:System.Int32" /> that contains the zero-based location in <paramref name="buffer" /> at which to begin reading bytes to be written to the stream.</param>
      <param name="count">A <see cref="T:System.Int32" /> that contains the number of bytes to read from <paramref name="buffer" />.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="buffer" /> is null.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="offset" />
        <paramref name="&lt;" />
        <paramref name="0" />.<paramref name="-or-" /><paramref name="offset" /> &gt; the length of <paramref name="buffer" />.-or-<paramref name="offset" /> + count &gt; the length of <paramref name="buffer" />.</exception>
      <exception cref="T:System.IO.IOException">The write operation failed.</exception>
      <exception cref="T:System.NotSupportedException">There is already a write operation in progress.</exception>
      <exception cref="T:System.ObjectDisposedException">This object has been closed.</exception>
      <exception cref="T:System.InvalidOperationException">Authentication has not occurred.</exception>
    </member>
    <member name="P:System.Net.Security.SslStream.WriteTimeout">
      <summary>Gets or sets the amount of time a write operation blocks waiting for data.</summary>
      <returns>A <see cref="T:System.Int32" /> that specifies the amount of time that elapses before a synchronous write operation fails. </returns>
    </member>
    <member name="T:System.Net.Sockets.AddressFamily">
      <summary>Specifies the addressing scheme that an instance of the <see cref="T:System.Net.Sockets.Socket" /> class can use.</summary>
    </member>
    <member name="F:System.Net.Sockets.AddressFamily.Unknown">
      <summary>Unknown address family.</summary>
    </member>
    <member name="F:System.Net.Sockets.AddressFamily.Unspecified">
      <summary>Unspecified address family.</summary>
    </member>
    <member name="F:System.Net.Sockets.AddressFamily.Unix">
      <summary>Unix local to host address.</summary>
    </member>
    <member name="F:System.Net.Sockets.AddressFamily.InterNetwork">
      <summary>Address for IP version 4.</summary>
    </member>
    <member name="F:System.Net.Sockets.AddressFamily.ImpLink">
      <summary>ARPANET IMP address.</summary>
    </member>
    <member name="F:System.Net.Sockets.AddressFamily.Pup">
      <summary>Address for PUP protocols.</summary>
    </member>
    <member name="F:System.Net.Sockets.AddressFamily.Chaos">
      <summary>Address for MIT CHAOS protocols.</summary>
    </member>
    <member name="F:System.Net.Sockets.AddressFamily.NS">
      <summary>Address for Xerox NS protocols.</summary>
    </member>
    <member name="F:System.Net.Sockets.AddressFamily.Ipx">
      <summary>IPX or SPX address.</summary>
    </member>
    <member name="F:System.Net.Sockets.AddressFamily.Iso">
      <summary>Address for ISO protocols.</summary>
    </member>
    <member name="F:System.Net.Sockets.AddressFamily.Osi">
      <summary>Address for OSI protocols.</summary>
    </member>
    <member name="F:System.Net.Sockets.AddressFamily.Ecma">
      <summary>European Computer Manufacturers Association (ECMA) address.</summary>
    </member>
    <member name="F:System.Net.Sockets.AddressFamily.DataKit">
      <summary>Address for Datakit protocols.</summary>
    </member>
    <member name="F:System.Net.Sockets.AddressFamily.Ccitt">
      <summary>Addresses for CCITT protocols, such as X.25.</summary>
    </member>
    <member name="F:System.Net.Sockets.AddressFamily.Sna">
      <summary>IBM SNA address.</summary>
    </member>
    <member name="F:System.Net.Sockets.AddressFamily.DecNet">
      <summary>DECnet address.</summary>
    </member>
    <member name="F:System.Net.Sockets.AddressFamily.DataLink">
      <summary>Direct data-link interface address.</summary>
    </member>
    <member name="F:System.Net.Sockets.AddressFamily.Lat">
      <summary>LAT address.</summary>
    </member>
    <member name="F:System.Net.Sockets.AddressFamily.HyperChannel">
      <summary>NSC Hyperchannel address.</summary>
    </member>
    <member name="F:System.Net.Sockets.AddressFamily.AppleTalk">
      <summary>AppleTalk address.</summary>
    </member>
    <member name="F:System.Net.Sockets.AddressFamily.NetBios">
      <summary>NetBios address.</summary>
    </member>
    <member name="F:System.Net.Sockets.AddressFamily.VoiceView">
      <summary>VoiceView address.</summary>
    </member>
    <member name="F:System.Net.Sockets.AddressFamily.FireFox">
      <summary>FireFox address.</summary>
    </member>
    <member name="F:System.Net.Sockets.AddressFamily.Banyan">
      <summary>Banyan address.</summary>
    </member>
    <member name="F:System.Net.Sockets.AddressFamily.Atm">
      <summary>Native ATM services address.</summary>
    </member>
    <member name="F:System.Net.Sockets.AddressFamily.InterNetworkV6">
      <summary>Address for IP version 6.</summary>
    </member>
    <member name="F:System.Net.Sockets.AddressFamily.Cluster">
      <summary>Address for Microsoft cluster products.</summary>
    </member>
    <member name="F:System.Net.Sockets.AddressFamily.Ieee12844">
      <summary>IEEE 1284.4 workgroup address.</summary>
    </member>
    <member name="F:System.Net.Sockets.AddressFamily.Irda">
      <summary>IrDA address.</summary>
    </member>
    <member name="F:System.Net.Sockets.AddressFamily.NetworkDesigners">
      <summary>Address for Network Designers OSI gateway-enabled protocols.</summary>
    </member>
    <member name="F:System.Net.Sockets.AddressFamily.Max">
      <summary>MAX address.</summary>
    </member>
    <member name="T:System.Net.Sockets.IOControlCode">
      <summary>Specifies the IO control codes supported by the <see cref="M:System.Net.Sockets.Socket.IOControl(System.Int32,System.Byte[],System.Byte[])" /> method.</summary>
    </member>
    <member name="F:System.Net.Sockets.IOControlCode.AsyncIO">
      <summary>Enable notification for when data is waiting to be received. This value is equal to the Winsock 2 FIOASYNC constant.</summary>
    </member>
    <member name="F:System.Net.Sockets.IOControlCode.NonBlockingIO">
      <summary>Control the blocking behavior of the socket. If the argument specified with this control code is zero, the socket is placed in blocking mode. If the argument is nonzero, the socket is placed in nonblocking mode. This value is equal to the Winsock 2 FIONBIO constant.</summary>
    </member>
    <member name="F:System.Net.Sockets.IOControlCode.DataToRead">
      <summary>Return the number of bytes available for reading. This value is equal to the Winsock 2 FIONREAD constant.</summary>
    </member>
    <member name="F:System.Net.Sockets.IOControlCode.OobDataRead">
      <summary>Return information about out-of-band data waiting to be received. When using this control code on stream sockets, the return value indicates the number of bytes available.</summary>
    </member>
    <member name="F:System.Net.Sockets.IOControlCode.AssociateHandle">
      <summary>Associate this socket with the specified handle of a companion interface. Refer to the appropriate  protocol-specific annex in the Winsock 2 reference or documentation for the particular companion interface for additional details. It is recommended that the Component Object Model (COM) be used instead of this IOCTL to discover and track other interfaces that might be supported by a socket. This control code is present for backward compatibility with systems where COM is not available or cannot be used for some other reason. This value is equal to the Winsock 2 SIO_ASSOCIATE_HANDLE constant. </summary>
    </member>
    <member name="F:System.Net.Sockets.IOControlCode.EnableCircularQueuing">
      <summary>Replace the oldest queued datagram with an incoming datagram when the incoming message queues are full. This value is equal to the Winsock 2 SIO_ENABLE_CIRCULAR_QUEUEING constant.</summary>
    </member>
    <member name="F:System.Net.Sockets.IOControlCode.Flush">
      <summary>Discard the contents of the sending queue. This value is equal to the Winsock 2 SIO_FLUSH constant.</summary>
    </member>
    <member name="F:System.Net.Sockets.IOControlCode.GetBroadcastAddress">
      <summary>Return a SOCKADDR structure that contains the broadcast address for the address family of the current socket. The returned address can be used with the <see cref="Overload:System.Net.Sockets.Socket.SendTo" /> method. This value is equal to the Winsock 2 SIO_GET_BROADCAST_ADDRESS constant. This value can be used on User Datagram Protocol (UDP) sockets only.</summary>
    </member>
    <member name="F:System.Net.Sockets.IOControlCode.GetExtensionFunctionPointer">
      <summary>Obtain provider-specific functions that are not part of the Winsock specification. Functions are specified using their provider-assigned GUID. This value is equal to the Winsock 2 SIO_GET_EXTENSION_FUNCTION_POINTER constant.</summary>
    </member>
    <member name="F:System.Net.Sockets.IOControlCode.GetQos">
      <summary>Retrieve the QOS structure associated with the socket. This control is only supported on platforms that provide a QOS capable transport (Windows Me, Windows 2000, and later.) This value is equal to the Winsock 2 SIO_GET_QOS constant.</summary>
    </member>
    <member name="F:System.Net.Sockets.IOControlCode.GetGroupQos">
      <summary>Return the Quality of Service (QOS) attributes for the socket group. This value is reserved for future use, and is equal to the Winsock 2 SIO_GET_GROUP_QOS constant. </summary>
    </member>
    <member name="F:System.Net.Sockets.IOControlCode.MultipointLoopback">
      <summary>Control whether multicast data sent by the socket appears as incoming data in the sockets receive queue. This value is equal to the Winsock 2 SIO_MULTIPOINT_LOOPBACK constant.</summary>
    </member>
    <member name="F:System.Net.Sockets.IOControlCode.MulticastScope">
      <summary>Control the number of times a multicast packet can be forwarded by a router, also known as the Time to Live (TTL), or hop count. This value is equal to the Winsock 2 SIO_MULTICAST_SCOPE constant.</summary>
    </member>
    <member name="F:System.Net.Sockets.IOControlCode.SetQos">
      <summary>Set the Quality of Service (QOS) attributes for the socket. QOS defines the bandwidth requirements for the socket. This control code is supported on Windows Me, Windows 2000, and later operating systems. This value is equal to the Winsock 2 SIO_SET_QOS constant.</summary>
    </member>
    <member name="F:System.Net.Sockets.IOControlCode.SetGroupQos">
      <summary>Set the Quality of Service (QOS) attributes for the socket group. This value is reserved for future use and is equal to the Winsock 2 SIO_SET_GROUP_QOS constant.</summary>
    </member>
    <member name="F:System.Net.Sockets.IOControlCode.TranslateHandle">
      <summary>Return a handle for the socket that is valid in the context of a companion interface. This value is equal to the Winsock 2 SIO_TRANSLATE_HANDLE constant.</summary>
    </member>
    <member name="F:System.Net.Sockets.IOControlCode.RoutingInterfaceQuery">
      <summary>Return the interface addresses that can be used to connect to the specified remote address. This value is equal to the Winsock 2 SIO_ROUTING_INTERFACE_QUERY constant.</summary>
    </member>
    <member name="F:System.Net.Sockets.IOControlCode.RoutingInterfaceChange">
      <summary>Enable receiving notification when the local interface used to access a remote endpoint changes. This value is equal to the Winsock 2 SIO_ROUTING_INTERFACE_CHANGE constant.</summary>
    </member>
    <member name="F:System.Net.Sockets.IOControlCode.AddressListQuery">
      <summary>Return the list of local interfaces that the socket can bind to. This control code is supported on Windows 2000 and later operating systems. This value is equal to the Winsock 2 SIO_ADDRESS_LIST_QUERY constant.</summary>
    </member>
    <member name="F:System.Net.Sockets.IOControlCode.AddressListChange">
      <summary>Enable receiving notification when the list of local interfaces for the socket's protocol family changes. This control code is supported on Windows 2000 and later operating systems. This value is equal to the Winsock 2 SIO_ADDRESS_LIST_CHANGE constant.</summary>
    </member>
    <member name="F:System.Net.Sockets.IOControlCode.QueryTargetPnpHandle">
      <summary>Retrieve the underlying provider's SOCKET handle. This handle can be used to receive plug-and-play event notification. This control code is supported on Windows 2000 and later operating systems. This value is equal to the Winsock 2 SIO_QUERY_TARGET_PNP_HANDLE constant.</summary>
    </member>
    <member name="F:System.Net.Sockets.IOControlCode.NamespaceChange">
      <summary>Control whether the socket receives notification when a namespace query becomes invalid. This control code is supported on Windows XP and later operating systems. This value is equal to the Winsock 2 SIO_NSP_NOTIFY_CHANGE constant.</summary>
    </member>
    <member name="F:System.Net.Sockets.IOControlCode.AddressListSort">
      <summary>Sort the structure returned by the <see cref="F:System.Net.Sockets.IOControlCode.AddressListQuery" /> field and add scope ID information for IPv6 addresses. This control code is supported on Windows XP and later operating systems. This value is equal to the Winsock 2 SIO_ADDRESS_LIST_SORT constant.</summary>
    </member>
    <member name="F:System.Net.Sockets.IOControlCode.ReceiveAll">
      <summary>Enable receiving all IPv4 packets on the network. The socket must have address family <see cref="F:System.Net.Sockets.AddressFamily.InterNetwork" />, the socket type must be <see cref="F:System.Net.Sockets.SocketType.Raw" />, and the protocol type must be <see cref="F:System.Net.Sockets.ProtocolType.IP" />. The current user must belong to the Administrators group on the local computer, and the socket must be bound to a specific port. This control code is supported on Windows 2000 and later operating systems. This value is equal to the Winsock 2 SIO_RCVALL constant.</summary>
    </member>
    <member name="F:System.Net.Sockets.IOControlCode.ReceiveAllMulticast">
      <summary>Enable receiving all multicast IPv4 packets on the network. These are packets with destination addresses in the range 224.0.0.0 through 239.255.255.255. The socket must have address family <see cref="F:System.Net.Sockets.AddressFamily.InterNetwork" />, the socket type must be <see cref="F:System.Net.Sockets.SocketType.Raw" />, and the protocol type must be <see cref="F:System.Net.Sockets.ProtocolType.Udp" />. The current user must belong to the Administrators group on the local computer, and the socket must be bound to a specific port. This control code is supported on Windows 2000 and later operating systems. This value is equal to the Winsock 2 SIO_RCVALL_MCAST constant.</summary>
    </member>
    <member name="F:System.Net.Sockets.IOControlCode.ReceiveAllIgmpMulticast">
      <summary>Enable receiving all Internet Group Management Protocol (IGMP) packets on the network. The socket must have address family <see cref="F:System.Net.Sockets.AddressFamily.InterNetwork" />, the socket type must be <see cref="F:System.Net.Sockets.SocketType.Raw" />, and the protocol type must be <see cref="F:System.Net.Sockets.ProtocolType.Igmp" />. The current user must belong to the Administrators group on the local computer, and the socket must be bound to a specific port. This control code is supported on Windows 2000 and later operating systems. This value is equal to the Winsock 2 SIO_RCVALL_IGMPMCAST constant.</summary>
    </member>
    <member name="F:System.Net.Sockets.IOControlCode.KeepAliveValues">
      <summary>Control sending TCP keep-alive packets and the interval at which they are sent. This control code is supported on Windows 2000 and later operating systems. For additional information, see RFC 1122 section 4.2.3.6. This value is equal to the Winsock 2 SIO_KEEPALIVE_VALS constant.</summary>
    </member>
    <member name="F:System.Net.Sockets.IOControlCode.AbsorbRouterAlert">
      <summary>This value is equal to the Winsock 2 SIO_ABSORB_RTRALERT constant.</summary>
    </member>
    <member name="F:System.Net.Sockets.IOControlCode.UnicastInterface">
      <summary>Set the interface used for outgoing unicast packets. This value is equal to the Winsock 2 SIO_UCAST_IF constant.</summary>
    </member>
    <member name="F:System.Net.Sockets.IOControlCode.LimitBroadcasts">
      <summary>This value is equal to the Winsock 2 SIO_LIMIT_BROADCASTS constant.</summary>
    </member>
    <member name="F:System.Net.Sockets.IOControlCode.BindToInterface">
      <summary>Bind the socket to a specified interface index. This control code is supported on Windows 2000 and later operating systems. This value is equal to the Winsock 2 SIO_INDEX_BIND constant.</summary>
    </member>
    <member name="F:System.Net.Sockets.IOControlCode.MulticastInterface">
      <summary>Set the interface used for outgoing multicast packets. The interface is identified by its index. This control code is supported on Windows 2000 and later operating systems.  This value is equal to the Winsock 2 SIO_INDEX_MCASTIF constant.</summary>
    </member>
    <member name="F:System.Net.Sockets.IOControlCode.AddMulticastGroupOnInterface">
      <summary>Join a multicast group using an interface identified by its index. This control code is supported on Windows 2000 and later operating systems. This value is equal to the Winsock 2 SIO_INDEX_ADD_MCAST constant.</summary>
    </member>
    <member name="F:System.Net.Sockets.IOControlCode.DeleteMulticastGroupFromInterface">
      <summary>Remove the socket from a multicast group. This control code is supported on Windows 2000 and later operating systems. This value is equal to the Winsock 2 SIO_INDEX_ADD_MCAST constant.</summary>
    </member>
    <member name="T:System.Net.Sockets.IPPacketInformation">
      <summary>Presents the packet information from a call to <see cref="M:System.Net.Sockets.Socket.ReceiveMessageFrom(System.Byte[],System.Int32,System.Int32,System.Net.Sockets.SocketFlags@,System.Net.EndPoint@,System.Net.Sockets.IPPacketInformation@)" /> or <see cref="M:System.Net.Sockets.Socket.EndReceiveMessageFrom(System.IAsyncResult,System.Net.Sockets.SocketFlags@,System.Net.EndPoint@,System.Net.Sockets.IPPacketInformation@)" />.</summary>
    </member>
    <member name="P:System.Net.Sockets.IPPacketInformation.Address">
      <summary>Gets the origin information of the packet that was received as a result of calling the <see cref="M:System.Net.Sockets.Socket.ReceiveMessageFrom(System.Byte[],System.Int32,System.Int32,System.Net.Sockets.SocketFlags@,System.Net.EndPoint@,System.Net.Sockets.IPPacketInformation@)" /> method or <see cref="M:System.Net.Sockets.Socket.EndReceiveMessageFrom(System.IAsyncResult,System.Net.Sockets.SocketFlags@,System.Net.EndPoint@,System.Net.Sockets.IPPacketInformation@)" /> method.</summary>
      <returns>An <see cref="T:System.Net.IPAddress" /> that indicates the origin information of the packet that was received as a result of calling the <see cref="M:System.Net.Sockets.Socket.ReceiveMessageFrom(System.Byte[],System.Int32,System.Int32,System.Net.Sockets.SocketFlags@,System.Net.EndPoint@,System.Net.Sockets.IPPacketInformation@)" /> method or <see cref="M:System.Net.Sockets.Socket.EndReceiveMessageFrom(System.IAsyncResult,System.Net.Sockets.SocketFlags@,System.Net.EndPoint@,System.Net.Sockets.IPPacketInformation@)" /> method. For packets that were sent from a unicast address, the <see cref="P:System.Net.Sockets.IPPacketInformation.Address" /> property will return the <see cref="T:System.Net.IPAddress" /> of the sender; for multicast or broadcast packets, the <see cref="P:System.Net.Sockets.IPPacketInformation.Address" /> property will return the multicast or broadcast <see cref="T:System.Net.IPAddress" />.</returns>
    </member>
    <member name="M:System.Net.Sockets.IPPacketInformation.Equals(System.Object)">
      <summary>Returns a value that indicates whether this instance is equal to a specified object.</summary>
      <returns>true if <paramref name="comparand" /> is an instance of <see cref="T:System.Net.Sockets.IPPacketInformation" /> and equals the value of the instance; otherwise, false.</returns>
      <param name="comparand">The object to compare with this instance.</param>
    </member>
    <member name="M:System.Net.Sockets.IPPacketInformation.GetHashCode">
      <summary>Returns the hash code for this instance.</summary>
      <returns>An Int32 hash code.</returns>
    </member>
    <member name="P:System.Net.Sockets.IPPacketInformation.Interface">
      <summary>Gets the network interface information that is associated with a call to <see cref="M:System.Net.Sockets.Socket.ReceiveMessageFrom(System.Byte[],System.Int32,System.Int32,System.Net.Sockets.SocketFlags@,System.Net.EndPoint@,System.Net.Sockets.IPPacketInformation@)" /> or <see cref="M:System.Net.Sockets.Socket.EndReceiveMessageFrom(System.IAsyncResult,System.Net.Sockets.SocketFlags@,System.Net.EndPoint@,System.Net.Sockets.IPPacketInformation@)" />.</summary>
      <returns>An <see cref="T:System.Int32" /> value, which represents the index of the network interface. You can use this index with <see cref="M:System.Net.NetworkInformation.NetworkInterface.GetAllNetworkInterfaces" /> to get more information about the relevant interface.</returns>
    </member>
    <member name="M:System.Net.Sockets.IPPacketInformation.op_Equality(System.Net.Sockets.IPPacketInformation,System.Net.Sockets.IPPacketInformation)">
      <summary>Tests whether two specified <see cref="T:System.Net.Sockets.IPPacketInformation" /> instances are equivalent.</summary>
      <returns>true if <paramref name="packetInformation1" /> and <paramref name="packetInformation2" /> are equal; otherwise, false.</returns>
      <param name="packetInformation1">The <see cref="T:System.Net.Sockets.IPPacketInformation" /> instance that is to the left of the equality operator.</param>
      <param name="packetInformation2">The <see cref="T:System.Net.Sockets.IPPacketInformation" /> instance that is to the right of the equality operator.</param>
    </member>
    <member name="M:System.Net.Sockets.IPPacketInformation.op_Inequality(System.Net.Sockets.IPPacketInformation,System.Net.Sockets.IPPacketInformation)">
      <summary>Tests whether two specified <see cref="T:System.Net.Sockets.IPPacketInformation" /> instances are not equal.</summary>
      <returns>true if <paramref name="packetInformation1" /> and <paramref name="packetInformation2" /> are unequal; otherwise, false.</returns>
      <param name="packetInformation1">The <see cref="T:System.Net.Sockets.IPPacketInformation" /> instance that is to the left of the inequality operator.</param>
      <param name="packetInformation2">The <see cref="T:System.Net.Sockets.IPPacketInformation" /> instance that is to the right of the inequality operator.</param>
    </member>
    <member name="T:System.Net.Sockets.IPProtectionLevel">
      <summary>A value that enables restriction of an IPv6 socket to a specified scope, such as addresses with the same link local or site local prefix. </summary>
    </member>
    <member name="F:System.Net.Sockets.IPProtectionLevel.Unspecified">
      <summary>The IP protection level is unspecified. On Windows 7 and Windows Server 2008 R2, the default value for the IP Protection level on a socket is unspecified.</summary>
    </member>
    <member name="F:System.Net.Sockets.IPProtectionLevel.Unrestricted">
      <summary>The IP protection level is unrestricted. This value would be used by applications designed to operate across the Internet, including applications taking advantage of IPv6 NAT traversal capabilities built into Windows (Teredo, for example). These applications may bypass IPv4 firewalls, so applications must be hardened against Internet attacks directed at the opened port. On Windows Server 2008 R2 and Windows Vista, the default value for the IP Protection level on a socket is unrestricted.</summary>
    </member>
    <member name="F:System.Net.Sockets.IPProtectionLevel.EdgeRestricted">
      <summary>The IP protection level is edge restricted. This value would be used by applications designed to operate across the Internet. This setting does not allow Network Address Translation (NAT) traversal using the Windows Teredo implementation. These applications may bypass IPv4 firewalls, so applications must be hardened against Internet attacks directed at the opened port. On Windows Server 2003 and Windows XP, the default value for the IP Protection level on a socket is edge restricted.</summary>
    </member>
    <member name="F:System.Net.Sockets.IPProtectionLevel.Restricted">
      <summary>The IP protection level is restricted. This value would be used by intranet applications that do not implement Internet scenarios. These applications are generally not tested or hardened against Internet-style attacks. This setting will limit the received traffic to link-local only. </summary>
    </member>
    <member name="T:System.Net.Sockets.IPv6MulticastOption">
      <summary>Contains option values for joining an IPv6 multicast group.</summary>
    </member>
    <member name="M:System.Net.Sockets.IPv6MulticastOption.#ctor(System.Net.IPAddress)">
      <summary>Initializes a new version of the <see cref="T:System.Net.Sockets.IPv6MulticastOption" /> class for the specified IP multicast group.</summary>
      <param name="group">The <see cref="T:System.Net.IPAddress" /> of the multicast group. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="group" /> is null. </exception>
    </member>
    <member name="M:System.Net.Sockets.IPv6MulticastOption.#ctor(System.Net.IPAddress,System.Int64)">
      <summary>Initializes a new instance of the <see cref="T:System.Net.Sockets.IPv6MulticastOption" /> class with the specified IP multicast group and the local interface address.</summary>
      <param name="group">The group <see cref="T:System.Net.IPAddress" />. </param>
      <param name="ifindex">The local interface address. </param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="ifindex" /> is less than 0.-or- <paramref name="ifindex" /> is greater than 0x00000000FFFFFFFF. </exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="group" /> is null. </exception>
    </member>
    <member name="P:System.Net.Sockets.IPv6MulticastOption.Group">
      <summary>Gets or sets the IP address of a multicast group.</summary>
      <returns>An <see cref="T:System.Net.IPAddress" /> that contains the Internet address of a multicast group.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="group" /> is null. </exception>
    </member>
    <member name="P:System.Net.Sockets.IPv6MulticastOption.InterfaceIndex">
      <summary>Gets or sets the interface index that is associated with a multicast group.</summary>
      <returns>A <see cref="T:System.UInt64" /> value that specifies the address of the interface.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">The value that is specified for a set operation is less than 0 or greater than 0x00000000FFFFFFFF. </exception>
    </member>
    <member name="T:System.Net.Sockets.LingerOption">
      <summary>Specifies whether a <see cref="T:System.Net.Sockets.Socket" /> will remain connected after a call to the <see cref="M:System.Net.Sockets.Socket.Close" /> or <see cref="M:System.Net.Sockets.TcpClient.Close" /> methods and the length of time it will remain connected, if data remains to be sent.</summary>
    </member>
    <member name="M:System.Net.Sockets.LingerOption.#ctor(System.Boolean,System.Int32)">
      <summary>Initializes a new instance of the <see cref="T:System.Net.Sockets.LingerOption" /> class.</summary>
      <param name="enable">true to remain connected after the <see cref="M:System.Net.Sockets.Socket.Close" /> method is called; otherwise, false. </param>
      <param name="seconds">The number of seconds to remain connected after the <see cref="M:System.Net.Sockets.Socket.Close" /> method is called. </param>
    </member>
    <member name="P:System.Net.Sockets.LingerOption.Enabled">
      <summary>Gets or sets a value that indicates whether to linger after the <see cref="T:System.Net.Sockets.Socket" /> is closed.</summary>
      <returns>true if the <see cref="T:System.Net.Sockets.Socket" /> should linger after <see cref="M:System.Net.Sockets.Socket.Close" /> is called; otherwise, false.</returns>
    </member>
    <member name="P:System.Net.Sockets.LingerOption.LingerTime">
      <summary>Gets or sets the amount of time to remain connected after calling the <see cref="M:System.Net.Sockets.Socket.Close" /> method if data remains to be sent.</summary>
      <returns>The amount of time, in seconds, to remain connected after calling <see cref="M:System.Net.Sockets.Socket.Close" />.</returns>
    </member>
    <member name="T:System.Net.Sockets.MulticastOption">
      <summary>Contains <see cref="T:System.Net.IPAddress" /> values used to join and drop multicast groups.</summary>
    </member>
    <member name="M:System.Net.Sockets.MulticastOption.#ctor(System.Net.IPAddress)">
      <summary>Initializes a new version of the <see cref="T:System.Net.Sockets.MulticastOption" /> class for the specified IP multicast group.</summary>
      <param name="group">The <see cref="T:System.Net.IPAddress" /> of the multicast group. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="group" /> is null. </exception>
    </member>
    <member name="M:System.Net.Sockets.MulticastOption.#ctor(System.Net.IPAddress,System.Int32)">
      <summary>Initializes a new instance of the <see cref="T:System.Net.Sockets.MulticastOption" /> class with the specified IP multicast group address and interface index.</summary>
      <param name="group">The <see cref="T:System.Net.IPAddress" /> of the multicast group.</param>
      <param name="interfaceIndex">The index of the interface that is used to send and receive multicast packets.</param>
    </member>
    <member name="M:System.Net.Sockets.MulticastOption.#ctor(System.Net.IPAddress,System.Net.IPAddress)">
      <summary>Initializes a new instance of the <see cref="T:System.Net.Sockets.MulticastOption" /> class with the specified IP multicast group address and local IP address associated with a network interface.</summary>
      <param name="group">The group <see cref="T:System.Net.IPAddress" />. </param>
      <param name="mcint">The local <see cref="T:System.Net.IPAddress" />. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="group" /> is null.-or- <paramref name="mcint" /> is null. </exception>
    </member>
    <member name="P:System.Net.Sockets.MulticastOption.Group">
      <summary>Gets or sets the IP address of a multicast group.</summary>
      <returns>An <see cref="T:System.Net.IPAddress" /> that contains the Internet address of a multicast group.</returns>
    </member>
    <member name="P:System.Net.Sockets.MulticastOption.InterfaceIndex">
      <summary>Gets or sets the index of the interface that is used to send and receive multicast packets. </summary>
      <returns>An integer that represents the index of a <see cref="T:System.Net.NetworkInformation.NetworkInterface" /> array element.</returns>
    </member>
    <member name="P:System.Net.Sockets.MulticastOption.LocalAddress">
      <summary>Gets or sets the local address associated with a multicast group.</summary>
      <returns>An <see cref="T:System.Net.IPAddress" /> that contains the local address associated with a multicast group.</returns>
    </member>
    <member name="T:System.Net.Sockets.NetworkStream">
      <summary>Provides the underlying stream of data for network access.</summary>
    </member>
    <member name="M:System.Net.Sockets.NetworkStream.#ctor(System.Net.Sockets.Socket)">
      <summary>Creates a new instance of the <see cref="T:System.Net.Sockets.NetworkStream" /> class for the specified <see cref="T:System.Net.Sockets.Socket" />.</summary>
      <param name="socket">The <see cref="T:System.Net.Sockets.Socket" /> that the <see cref="T:System.Net.Sockets.NetworkStream" /> will use to send and receive data. </param>
      <exception cref="T:System.ArgumentNullException">The <paramref name="socket" /> parameter is null. </exception>
      <exception cref="T:System.IO.IOException">The <paramref name="socket" /> parameter is not connected.-or- The <see cref="P:System.Net.Sockets.Socket.SocketType" /> property of the <paramref name="socket" /> parameter is not <see cref="F:System.Net.Sockets.SocketType.Stream" />.-or- The <paramref name="socket" /> parameter is in a nonblocking state. </exception>
    </member>
    <member name="M:System.Net.Sockets.NetworkStream.#ctor(System.Net.Sockets.Socket,System.Boolean)">
      <summary>Initializes a new instance of the <see cref="T:System.Net.Sockets.NetworkStream" /> class for the specified <see cref="T:System.Net.Sockets.Socket" /> with the specified <see cref="T:System.Net.Sockets.Socket" /> ownership.</summary>
      <param name="socket">The <see cref="T:System.Net.Sockets.Socket" /> that the <see cref="T:System.Net.Sockets.NetworkStream" /> will use to send and receive data. </param>
      <param name="ownsSocket">Set to true to indicate that the <see cref="T:System.Net.Sockets.NetworkStream" /> will take ownership of the <see cref="T:System.Net.Sockets.Socket" />; otherwise, false. </param>
      <exception cref="T:System.ArgumentNullException">The <paramref name="socket" /> parameter is null. </exception>
      <exception cref="T:System.IO.IOException">The <paramref name="socket" /> parameter is not connected.-or- the value of the <see cref="P:System.Net.Sockets.Socket.SocketType" /> property of the <paramref name="socket" /> parameter is not <see cref="F:System.Net.Sockets.SocketType.Stream" />.-or- the <paramref name="socket" /> parameter is in a nonblocking state. </exception>
    </member>
    <member name="M:System.Net.Sockets.NetworkStream.#ctor(System.Net.Sockets.Socket,System.IO.FileAccess)">
      <summary>Creates a new instance of the <see cref="T:System.Net.Sockets.NetworkStream" /> class for the specified <see cref="T:System.Net.Sockets.Socket" /> with the specified access rights.</summary>
      <param name="socket">The <see cref="T:System.Net.Sockets.Socket" /> that the <see cref="T:System.Net.Sockets.NetworkStream" /> will use to send and receive data. </param>
      <param name="access">A bitwise combination of the <see cref="T:System.IO.FileAccess" /> values that specify the type of access given to the <see cref="T:System.Net.Sockets.NetworkStream" /> over the provided <see cref="T:System.Net.Sockets.Socket" />. </param>
      <exception cref="T:System.ArgumentNullException">The <paramref name="socket" /> parameter is null. </exception>
      <exception cref="T:System.IO.IOException">The <paramref name="socket" /> parameter is not connected.-or- the <see cref="P:System.Net.Sockets.Socket.SocketType" /> property of the <paramref name="socket" /> parameter is not <see cref="F:System.Net.Sockets.SocketType.Stream" />.-or- the <paramref name="socket" /> parameter is in a nonblocking state. </exception>
    </member>
    <member name="M:System.Net.Sockets.NetworkStream.#ctor(System.Net.Sockets.Socket,System.IO.FileAccess,System.Boolean)">
      <summary>Creates a new instance of the <see cref="T:System.Net.Sockets.NetworkStream" /> class for the specified <see cref="T:System.Net.Sockets.Socket" /> with the specified access rights and the specified <see cref="T:System.Net.Sockets.Socket" /> ownership.</summary>
      <param name="socket">The <see cref="T:System.Net.Sockets.Socket" /> that the <see cref="T:System.Net.Sockets.NetworkStream" /> will use to send and receive data. </param>
      <param name="access">A bitwise combination of the <see cref="T:System.IO.FileAccess" /> values that specifies the type of access given to the <see cref="T:System.Net.Sockets.NetworkStream" /> over the provided <see cref="T:System.Net.Sockets.Socket" />. </param>
      <param name="ownsSocket">Set to true to indicate that the <see cref="T:System.Net.Sockets.NetworkStream" /> will take ownership of the <see cref="T:System.Net.Sockets.Socket" />; otherwise, false. </param>
      <exception cref="T:System.ArgumentNullException">The <paramref name="socket" /> parameter is null. </exception>
      <exception cref="T:System.IO.IOException">The <paramref name="socket" /> parameter is not connected.-or- The <see cref="P:System.Net.Sockets.Socket.SocketType" /> property of the <paramref name="socket" /> parameter is not <see cref="F:System.Net.Sockets.SocketType.Stream" />.-or- The <paramref name="socket" /> parameter is in a nonblocking state. </exception>
    </member>
    <member name="M:System.Net.Sockets.NetworkStream.BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)">
      <summary>Begins an asynchronous read from the <see cref="T:System.Net.Sockets.NetworkStream" />.</summary>
      <returns>An <see cref="T:System.IAsyncResult" /> that represents the asynchronous call.</returns>
      <param name="buffer">An array of type <see cref="T:System.Byte" /> that is the location in memory to store data read from the <see cref="T:System.Net.Sockets.NetworkStream" />. </param>
      <param name="offset">The location in <paramref name="buffer" /> to begin storing the data. </param>
      <param name="size">The number of bytes to read from the <see cref="T:System.Net.Sockets.NetworkStream" />. </param>
      <param name="callback">The <see cref="T:System.AsyncCallback" /> delegate that is executed when <see cref="M:System.Net.Sockets.NetworkStream.BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)" /> completes. </param>
      <param name="state">An object that contains any additional user-defined data. </param>
      <exception cref="T:System.ArgumentNullException">The <paramref name="buffer" /> parameter is null. </exception>
      <exception cref="T:System.ArgumentOutOfRangeException">The <paramref name="offset" /> parameter is less than 0.-or- The <paramref name="offset" /> parameter is greater than the length of the <paramref name="buffer" /> paramater.-or- The <paramref name="size" /> is less than 0.-or- The <paramref name="size" /> is greater than the length of <paramref name="buffer" /> minus the value of the <paramref name="offset" /> parameter.</exception>
      <exception cref="T:System.IO.IOException">The underlying <see cref="T:System.Net.Sockets.Socket" /> is closed.-or- There was a failure while reading from the network. -or-An error occurred when accessing the socket. See the Remarks section for more information.</exception>
      <exception cref="T:System.ObjectDisposedException">The <see cref="T:System.Net.Sockets.NetworkStream" /> is closed. </exception>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
      </PermissionSet>
    </member>
    <member name="M:System.Net.Sockets.NetworkStream.BeginWrite(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)">
      <summary>Begins an asynchronous write to a stream.</summary>
      <returns>An <see cref="T:System.IAsyncResult" /> that represents the asynchronous call.</returns>
      <param name="buffer">An array of type <see cref="T:System.Byte" /> that contains the data to write to the <see cref="T:System.Net.Sockets.NetworkStream" />. </param>
      <param name="offset">The location in <paramref name="buffer" /> to begin sending the data. </param>
      <param name="size">The number of bytes to write to the <see cref="T:System.Net.Sockets.NetworkStream" />. </param>
      <param name="callback">The <see cref="T:System.AsyncCallback" /> delegate that is executed when <see cref="M:System.Net.Sockets.NetworkStream.BeginWrite(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)" /> completes. </param>
      <param name="state">An object that contains any additional user-defined data. </param>
      <exception cref="T:System.ArgumentNullException">The <paramref name="buffer" /> parameter is null. </exception>
      <exception cref="T:System.ArgumentOutOfRangeException">The <paramref name="offset" /> parameter is less than 0.-or- The <paramref name="offset" /> parameter is greater than the length of <paramref name="buffer" />.-or- The <paramref name="size" /> parameter is less than 0.-or- The <paramref name="size" /> parameter is greater than the length of <paramref name="buffer" /> minus the value of the <paramref name="offset" /> parameter. </exception>
      <exception cref="T:System.IO.IOException">The underlying <see cref="T:System.Net.Sockets.Socket" /> is closed.-or- There was a failure while writing to the network. -or-An error occurred when accessing the socket. See the Remarks section for more information.</exception>
      <exception cref="T:System.ObjectDisposedException">The <see cref="T:System.Net.Sockets.NetworkStream" /> is closed. </exception>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
      </PermissionSet>
    </member>
    <member name="P:System.Net.Sockets.NetworkStream.CanRead">
      <summary>Gets a value that indicates whether the <see cref="T:System.Net.Sockets.NetworkStream" /> supports reading.</summary>
      <returns>true if data can be read from the stream; otherwise, false. The default value is true.</returns>
    </member>
    <member name="P:System.Net.Sockets.NetworkStream.CanSeek">
      <summary>Gets a value that indicates whether the stream supports seeking. This property is not currently supported.This property always returns false.</summary>
      <returns>false in all cases to indicate that <see cref="T:System.Net.Sockets.NetworkStream" /> cannot seek a specific location in the stream.</returns>
    </member>
    <member name="P:System.Net.Sockets.NetworkStream.CanTimeout">
      <summary>Indicates whether timeout properties are usable for <see cref="T:System.Net.Sockets.NetworkStream" />.</summary>
      <returns>true in all cases.</returns>
    </member>
    <member name="P:System.Net.Sockets.NetworkStream.CanWrite">
      <summary>Gets a value that indicates whether the <see cref="T:System.Net.Sockets.NetworkStream" /> supports writing.</summary>
      <returns>true if data can be written to the <see cref="T:System.Net.Sockets.NetworkStream" />; otherwise, false. The default value is true.</returns>
    </member>
    <member name="M:System.Net.Sockets.NetworkStream.Close(System.Int32)">
      <summary>Closes the <see cref="T:System.Net.Sockets.NetworkStream" /> after waiting the specified time to allow data to be sent.</summary>
      <param name="timeout">A 32-bit signed integer that specifies the number of milliseconds to wait to send any remaining data before closing.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">The <paramref name="timeout" /> parameter is less than -1.</exception>
    </member>
    <member name="P:System.Net.Sockets.NetworkStream.DataAvailable">
      <summary>Gets a value that indicates whether data is available on the <see cref="T:System.Net.Sockets.NetworkStream" /> to be read.</summary>
      <returns>true if data is available on the stream to be read; otherwise, false.</returns>
      <exception cref="T:System.ObjectDisposedException">The <see cref="T:System.Net.Sockets.NetworkStream" /> is closed. </exception>
      <exception cref="T:System.IO.IOException">The underlying <see cref="T:System.Net.Sockets.Socket" /> is closed. </exception>
      <exception cref="T:System.Net.Sockets.SocketException">Use the <see cref="P:System.Net.Sockets.SocketException.ErrorCode" /> property to obtain the specific error code, and refer to the Windows Sockets version 2 API error code documentation in MSDN for a detailed description of the error. </exception>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
      </PermissionSet>
    </member>
    <member name="M:System.Net.Sockets.NetworkStream.Dispose(System.Boolean)">
      <summary>Releases the unmanaged resources used by the <see cref="T:System.Net.Sockets.NetworkStream" /> and optionally releases the managed resources.</summary>
      <param name="disposing">true to release both managed and unmanaged resources; false to release only unmanaged resources. </param>
    </member>
    <member name="M:System.Net.Sockets.NetworkStream.EndRead(System.IAsyncResult)">
      <summary>Handles the end of an asynchronous read.</summary>
      <returns>The number of bytes read from the <see cref="T:System.Net.Sockets.NetworkStream" />.</returns>
      <param name="asyncResult">An <see cref="T:System.IAsyncResult" /> that represents an asynchronous call. </param>
      <exception cref="T:System.ArgumentException">The <paramref name="asyncResult" /> parameter is null. </exception>
      <exception cref="T:System.IO.IOException">The underlying <see cref="T:System.Net.Sockets.Socket" /> is closed.-or- An error occurred when accessing the socket. See the Remarks section for more information.</exception>
      <exception cref="T:System.ObjectDisposedException">The <see cref="T:System.Net.Sockets.NetworkStream" /> is closed. </exception>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
        <IPermission class="System.Diagnostics.PerformanceCounterPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:System.Net.Sockets.NetworkStream.EndWrite(System.IAsyncResult)">
      <summary>Handles the end of an asynchronous write.</summary>
      <param name="asyncResult">The <see cref="T:System.IAsyncResult" /> that represents the asynchronous call. </param>
      <exception cref="T:System.ArgumentNullException">The <paramref name="asyncResult" /> parameter is null. </exception>
      <exception cref="T:System.IO.IOException">The underlying <see cref="T:System.Net.Sockets.Socket" /> is closed.-or- An error occurred while writing to the network. -or-An error occurred when accessing the socket. See the Remarks section for more information.</exception>
      <exception cref="T:System.ObjectDisposedException">The <see cref="T:System.Net.Sockets.NetworkStream" /> is closed. </exception>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
        <IPermission class="System.Diagnostics.PerformanceCounterPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:System.Net.Sockets.NetworkStream.Finalize">
      <summary>Releases all resources used by the <see cref="T:System.Net.Sockets.NetworkStream" />.</summary>
    </member>
    <member name="M:System.Net.Sockets.NetworkStream.Flush">
      <summary>Flushes data from the stream. This method is reserved for future use.</summary>
    </member>
    <member name="P:System.Net.Sockets.NetworkStream.Length">
      <summary>Gets the length of the data available on the stream. This property is not currently supported and always throws a <see cref="T:System.NotSupportedException" />.</summary>
      <returns>The length of the data available on the stream.</returns>
      <exception cref="T:System.NotSupportedException">Any use of this property. </exception>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
      </PermissionSet>
    </member>
    <member name="P:System.Net.Sockets.NetworkStream.Position">
      <summary>Gets or sets the current position in the stream. This property is not currently supported and always throws a <see cref="T:System.NotSupportedException" />.</summary>
      <returns>The current position in the stream.</returns>
      <exception cref="T:System.NotSupportedException">Any use of this property. </exception>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
      </PermissionSet>
    </member>
    <member name="M:System.Net.Sockets.NetworkStream.Read(System.Byte[],System.Int32,System.Int32)">
      <summary>Reads data from the <see cref="T:System.Net.Sockets.NetworkStream" />.</summary>
      <returns>The number of bytes read from the <see cref="T:System.Net.Sockets.NetworkStream" />.</returns>
      <param name="buffer">An array of type <see cref="T:System.Byte" /> that is the location in memory to store data read from the <see cref="T:System.Net.Sockets.NetworkStream" />. </param>
      <param name="offset">The location in <paramref name="buffer" /> to begin storing the data to. </param>
      <param name="size">The number of bytes to read from the <see cref="T:System.Net.Sockets.NetworkStream" />. </param>
      <exception cref="T:System.ArgumentNullException">The <paramref name="buffer" /> parameter is null. </exception>
      <exception cref="T:System.ArgumentOutOfRangeException">The <paramref name="offset" /> parameter is less than 0.-or- The <paramref name="offset" /> parameter is greater than the length of <paramref name="buffer" />.-or- The <paramref name="size" /> parameter is less than 0.-or- The <paramref name="size" /> parameter is greater than the length of <paramref name="buffer" /> minus the value of the <paramref name="offset" /> parameter. -or-An error occurred when accessing the socket. See the Remarks section for more information.</exception>
      <exception cref="T:System.IO.IOException">The underlying <see cref="T:System.Net.Sockets.Socket" /> is closed. </exception>
      <exception cref="T:System.ObjectDisposedException">The <see cref="T:System.Net.Sockets.NetworkStream" /> is closed.-or- There is a failure reading from the network. </exception>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
        <IPermission class="System.Diagnostics.PerformanceCounterPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="P:System.Net.Sockets.NetworkStream.Readable">
      <summary>Gets or sets a value that indicates whether the <see cref="T:System.Net.Sockets.NetworkStream" /> can be read.</summary>
      <returns>true to indicate that the <see cref="T:System.Net.Sockets.NetworkStream" /> can be read; otherwise, false. The default value is true.</returns>
    </member>
    <member name="P:System.Net.Sockets.NetworkStream.ReadTimeout">
      <summary>Gets or sets the amount of time that a read operation blocks waiting for data. </summary>
      <returns>A <see cref="T:System.Int32" /> that specifies the amount of time, in milliseconds, that will elapse before a read operation fails. The default value, <see cref="F:System.Threading.Timeout.Infinite" />, specifies that the read operation does not time out.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">The value specified is less than or equal to zero and is not <see cref="F:System.Threading.Timeout.Infinite" />. </exception>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
      </PermissionSet>
    </member>
    <member name="M:System.Net.Sockets.NetworkStream.Seek(System.Int64,System.IO.SeekOrigin)">
      <summary>Sets the current position of the stream to the given value. This method is not currently supported and always throws a <see cref="T:System.NotSupportedException" />.</summary>
      <returns>The position in the stream.</returns>
      <param name="offset">This parameter is not used. </param>
      <param name="origin">This parameter is not used. </param>
      <exception cref="T:System.NotSupportedException">Any use of this property. </exception>
    </member>
    <member name="M:System.Net.Sockets.NetworkStream.SetLength(System.Int64)">
      <summary>Sets the length of the stream. This method always throws a <see cref="T:System.NotSupportedException" />.</summary>
      <param name="value">This parameter is not used. </param>
      <exception cref="T:System.NotSupportedException">Any use of this property. </exception>
    </member>
    <member name="P:System.Net.Sockets.NetworkStream.Socket">
      <summary>Gets the underlying <see cref="T:System.Net.Sockets.Socket" />.</summary>
      <returns>A <see cref="T:System.Net.Sockets.Socket" /> that represents the underlying network connection.</returns>
    </member>
    <member name="M:System.Net.Sockets.NetworkStream.Write(System.Byte[],System.Int32,System.Int32)">
      <summary>Writes data to the <see cref="T:System.Net.Sockets.NetworkStream" />.</summary>
      <param name="buffer">An array of type <see cref="T:System.Byte" /> that contains the data to write to the <see cref="T:System.Net.Sockets.NetworkStream" />. </param>
      <param name="offset">The location in <paramref name="buffer" /> from which to start writing data. </param>
      <param name="size">The number of bytes to write to the <see cref="T:System.Net.Sockets.NetworkStream" />. </param>
      <exception cref="T:System.ArgumentNullException">The <paramref name="buffer" /> parameter is null. </exception>
      <exception cref="T:System.ArgumentOutOfRangeException">The <paramref name="offset" /> parameter is less than 0.-or- The <paramref name="offset" /> parameter is greater than the length of <paramref name="buffer" />.-or- The <paramref name="size" /> parameter is less than 0.-or- The <paramref name="size" /> parameter is greater than the length of <paramref name="buffer" /> minus the value of the <paramref name="offset" /> parameter. </exception>
      <exception cref="T:System.IO.IOException">There was a failure while writing to the network. -or-An error occurred when accessing the socket. See the Remarks section for more information.</exception>
      <exception cref="T:System.ObjectDisposedException">The <see cref="T:System.Net.Sockets.NetworkStream" /> is closed.-or- There was a failure reading from the network. </exception>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
        <IPermission class="System.Diagnostics.PerformanceCounterPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="P:System.Net.Sockets.NetworkStream.Writeable">
      <summary>Gets a value that indicates whether the <see cref="T:System.Net.Sockets.NetworkStream" /> is writable.</summary>
      <returns>true if data can be written to the stream; otherwise, false. The default value is true.</returns>
    </member>
    <member name="P:System.Net.Sockets.NetworkStream.WriteTimeout">
      <summary>Gets or sets the amount of time that a write operation blocks waiting for data. </summary>
      <returns>A <see cref="T:System.Int32" /> that specifies the amount of time, in milliseconds, that will elapse before a write operation fails. The default value, <see cref="F:System.Threading.Timeout.Infinite" />, specifies that the write operation does not time out.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">The value specified is less than or equal to zero and is not <see cref="F:System.Threading.Timeout.Infinite" />. </exception>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
      </PermissionSet>
    </member>
    <member name="T:System.Net.Sockets.ProtocolFamily">
      <summary>Specifies the type of protocol that an instance of the <see cref="T:System.Net.Sockets.Socket" /> class can use.</summary>
    </member>
    <member name="F:System.Net.Sockets.ProtocolFamily.Unknown">
      <summary>Unknown protocol.</summary>
    </member>
    <member name="F:System.Net.Sockets.ProtocolFamily.Unspecified">
      <summary>Unspecified protocol.</summary>
    </member>
    <member name="F:System.Net.Sockets.ProtocolFamily.Unix">
      <summary>Unix local to host protocol.</summary>
    </member>
    <member name="F:System.Net.Sockets.ProtocolFamily.InterNetwork">
      <summary>IP version 4 protocol.</summary>
    </member>
    <member name="F:System.Net.Sockets.ProtocolFamily.ImpLink">
      <summary>ARPANET IMP protocol.</summary>
    </member>
    <member name="F:System.Net.Sockets.ProtocolFamily.Pup">
      <summary>PUP protocol.</summary>
    </member>
    <member name="F:System.Net.Sockets.ProtocolFamily.Chaos">
      <summary>MIT CHAOS protocol.</summary>
    </member>
    <member name="F:System.Net.Sockets.ProtocolFamily.NS">
      <summary>Xerox NS protocol.</summary>
    </member>
    <member name="F:System.Net.Sockets.ProtocolFamily.Ipx">
      <summary>IPX or SPX protocol.</summary>
    </member>
    <member name="F:System.Net.Sockets.ProtocolFamily.Iso">
      <summary>ISO protocol.</summary>
    </member>
    <member name="F:System.Net.Sockets.ProtocolFamily.Osi">
      <summary>OSI protocol.</summary>
    </member>
    <member name="F:System.Net.Sockets.ProtocolFamily.Ecma">
      <summary>European Computer Manufacturers Association (ECMA) protocol.</summary>
    </member>
    <member name="F:System.Net.Sockets.ProtocolFamily.DataKit">
      <summary>DataKit protocol.</summary>
    </member>
    <member name="F:System.Net.Sockets.ProtocolFamily.Ccitt">
      <summary>CCITT protocol, such as X.25.</summary>
    </member>
    <member name="F:System.Net.Sockets.ProtocolFamily.Sna">
      <summary>IBM SNA protocol.</summary>
    </member>
    <member name="F:System.Net.Sockets.ProtocolFamily.DecNet">
      <summary>DECNet protocol.</summary>
    </member>
    <member name="F:System.Net.Sockets.ProtocolFamily.DataLink">
      <summary>Direct data link protocol.</summary>
    </member>
    <member name="F:System.Net.Sockets.ProtocolFamily.Lat">
      <summary>LAT protocol.</summary>
    </member>
    <member name="F:System.Net.Sockets.ProtocolFamily.HyperChannel">
      <summary>NSC HyperChannel protocol.</summary>
    </member>
    <member name="F:System.Net.Sockets.ProtocolFamily.AppleTalk">
      <summary>AppleTalk protocol.</summary>
    </member>
    <member name="F:System.Net.Sockets.ProtocolFamily.NetBios">
      <summary>NetBIOS protocol.</summary>
    </member>
    <member name="F:System.Net.Sockets.ProtocolFamily.VoiceView">
      <summary>VoiceView protocol.</summary>
    </member>
    <member name="F:System.Net.Sockets.ProtocolFamily.FireFox">
      <summary>FireFox protocol.</summary>
    </member>
    <member name="F:System.Net.Sockets.ProtocolFamily.Banyan">
      <summary>Banyan protocol.</summary>
    </member>
    <member name="F:System.Net.Sockets.ProtocolFamily.Atm">
      <summary>Native ATM services protocol.</summary>
    </member>
    <member name="F:System.Net.Sockets.ProtocolFamily.InterNetworkV6">
      <summary>IP version 6 protocol.</summary>
    </member>
    <member name="F:System.Net.Sockets.ProtocolFamily.Cluster">
      <summary>Microsoft Cluster products protocol.</summary>
    </member>
    <member name="F:System.Net.Sockets.ProtocolFamily.Ieee12844">
      <summary>IEEE 1284.4 workgroup protocol.</summary>
    </member>
    <member name="F:System.Net.Sockets.ProtocolFamily.Irda">
      <summary>IrDA protocol.</summary>
    </member>
    <member name="F:System.Net.Sockets.ProtocolFamily.NetworkDesigners">
      <summary>Network Designers OSI gateway enabled protocol.</summary>
    </member>
    <member name="F:System.Net.Sockets.ProtocolFamily.Max">
      <summary>MAX protocol.</summary>
    </member>
    <member name="T:System.Net.Sockets.ProtocolType">
      <summary>Specifies the protocols that the <see cref="T:System.Net.Sockets.Socket" /> class supports.</summary>
    </member>
    <member name="F:System.Net.Sockets.ProtocolType.IP">
      <summary>Internet Protocol.</summary>
    </member>
    <member name="F:System.Net.Sockets.ProtocolType.IPv6HopByHopOptions">
      <summary>IPv6 Hop by Hop Options header.</summary>
    </member>
    <member name="F:System.Net.Sockets.ProtocolType.Icmp">
      <summary>Internet Control Message Protocol.</summary>
    </member>
    <member name="F:System.Net.Sockets.ProtocolType.Igmp">
      <summary>Internet Group Management Protocol.</summary>
    </member>
    <member name="F:System.Net.Sockets.ProtocolType.Ggp">
      <summary>Gateway To Gateway Protocol.</summary>
    </member>
    <member name="F:System.Net.Sockets.ProtocolType.IPv4">
      <summary>Internet Protocol version 4.</summary>
    </member>
    <member name="F:System.Net.Sockets.ProtocolType.Tcp">
      <summary>Transmission Control Protocol.</summary>
    </member>
    <member name="F:System.Net.Sockets.ProtocolType.Pup">
      <summary>PARC Universal Packet Protocol.</summary>
    </member>
    <member name="F:System.Net.Sockets.ProtocolType.Udp">
      <summary>User Datagram Protocol.</summary>
    </member>
    <member name="F:System.Net.Sockets.ProtocolType.Idp">
      <summary>Internet Datagram Protocol.</summary>
    </member>
    <member name="F:System.Net.Sockets.ProtocolType.IPv6">
      <summary>Internet Protocol version 6 (IPv6). </summary>
    </member>
    <member name="F:System.Net.Sockets.ProtocolType.IPv6RoutingHeader">
      <summary>IPv6 Routing header.</summary>
    </member>
    <member name="F:System.Net.Sockets.ProtocolType.IPv6FragmentHeader">
      <summary>IPv6 Fragment header.</summary>
    </member>
    <member name="F:System.Net.Sockets.ProtocolType.IPSecEncapsulatingSecurityPayload">
      <summary>IPv6 Encapsulating Security Payload header.</summary>
    </member>
    <member name="F:System.Net.Sockets.ProtocolType.IPSecAuthenticationHeader">
      <summary>IPv6 Authentication header. For details, see RFC 2292 section 2.2.1, available at http://www.ietf.org.</summary>
    </member>
    <member name="F:System.Net.Sockets.ProtocolType.IcmpV6">
      <summary>Internet Control Message Protocol for IPv6.</summary>
    </member>
    <member name="F:System.Net.Sockets.ProtocolType.IPv6NoNextHeader">
      <summary>IPv6 No next header.</summary>
    </member>
    <member name="F:System.Net.Sockets.ProtocolType.IPv6DestinationOptions">
      <summary>IPv6 Destination Options header.</summary>
    </member>
    <member name="F:System.Net.Sockets.ProtocolType.ND">
      <summary>Net Disk Protocol (unofficial).</summary>
    </member>
    <member name="F:System.Net.Sockets.ProtocolType.Raw">
      <summary>Raw IP packet protocol.</summary>
    </member>
    <member name="F:System.Net.Sockets.ProtocolType.Unspecified">
      <summary>Unspecified protocol.</summary>
    </member>
    <member name="F:System.Net.Sockets.ProtocolType.Ipx">
      <summary>Internet Packet Exchange Protocol.</summary>
    </member>
    <member name="F:System.Net.Sockets.ProtocolType.Spx">
      <summary>Sequenced Packet Exchange protocol.</summary>
    </member>
    <member name="F:System.Net.Sockets.ProtocolType.SpxII">
      <summary>Sequenced Packet Exchange version 2 protocol.</summary>
    </member>
    <member name="F:System.Net.Sockets.ProtocolType.Unknown">
      <summary>Unknown protocol.</summary>
    </member>
    <member name="T:System.Net.Sockets.SelectMode">
      <summary>Defines the polling modes for the <see cref="M:System.Net.Sockets.Socket.Poll(System.Int32,System.Net.Sockets.SelectMode)" /> method.</summary>
    </member>
    <member name="F:System.Net.Sockets.SelectMode.SelectRead">
      <summary>Read status mode.</summary>
    </member>
    <member name="F:System.Net.Sockets.SelectMode.SelectWrite">
      <summary>Write status mode.</summary>
    </member>
    <member name="F:System.Net.Sockets.SelectMode.SelectError">
      <summary>Error status mode.</summary>
    </member>
    <member name="T:System.Net.Sockets.SendPacketsElement">
      <summary>Represents an element in a <see cref="T:System.Net.Sockets.SendPacketsElement" /> array.</summary>
    </member>
    <member name="M:System.Net.Sockets.SendPacketsElement.#ctor(System.Byte[])">
      <summary>Initializes a new instance of the <see cref="T:System.Net.Sockets.SendPacketsElement" /> class using the specified buffer.</summary>
      <param name="buffer">A byte array of data to send using the <see cref="M:System.Net.Sockets.Socket.SendPacketsAsync(System.Net.Sockets.SocketAsyncEventArgs)" /> method.</param>
      <exception cref="T:System.ArgumentNullException">The <paramref name="buffer" /> parameter cannot be null</exception>
    </member>
    <member name="M:System.Net.Sockets.SendPacketsElement.#ctor(System.Byte[],System.Int32,System.Int32)">
      <summary>Initializes a new instance of the <see cref="T:System.Net.Sockets.SendPacketsElement" /> class using the specified buffer, buffer offset, and count.</summary>
      <param name="buffer">A byte array of data to send using the <see cref="M:System.Net.Sockets.Socket.SendPacketsAsync(System.Net.Sockets.SocketAsyncEventArgs)" /> method.</param>
      <param name="offset">The offset, in bytes, from the beginning of the <paramref name="buffer" /> to the location in the <paramref name="buffer" /> to start sending the data specified in the <paramref name="buffer" /> parameter.</param>
      <param name="count">The number of bytes to send starting from the <paramref name="offset" /> parameter. If <paramref name="count" /> is zero, no bytes are sent.</param>
      <exception cref="T:System.ArgumentNullException">The <paramref name="buffer" /> parameter cannot be null</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">The <paramref name="offset" /> and <paramref name="count" /> parameters must be greater than or equal to zero. The <paramref name="offset" /> and <paramref name="count" /> must be less than the size of the buffer</exception>
    </member>
    <member name="M:System.Net.Sockets.SendPacketsElement.#ctor(System.Byte[],System.Int32,System.Int32,System.Boolean)">
      <summary>Initializes a new instance of the <see cref="T:System.Net.Sockets.SendPacketsElement" /> class using the specified buffer, buffer offset, and count with an option to combine this element with the next element in a single send request from the sockets layer to the transport. </summary>
      <param name="buffer">A byte array of data to send using the <see cref="M:System.Net.Sockets.Socket.SendPacketsAsync(System.Net.Sockets.SocketAsyncEventArgs)" /> method.</param>
      <param name="offset">The offset, in bytes, from the beginning of the <paramref name="buffer" /> to the location in the <paramref name="buffer" /> to start sending the data specified in the <paramref name="buffer" /> parameter.</param>
      <param name="count">The number bytes to send starting from the <paramref name="offset" /> parameter. If <paramref name="count" /> is zero, no bytes are sent.</param>
      <param name="endOfPacket">A Boolean value that specifies that this element should not be combined with the next element in a single send request from the sockets layer to the transport. This flag is used for granular control of the content of each message on a datagram or message-oriented socket. </param>
      <exception cref="T:System.ArgumentNullException">The <paramref name="buffer" /> parameter cannot be null</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">The <paramref name="offset" /> and <paramref name="count" /> parameters must be greater than or equal to zero. The <paramref name="offset" /> and <paramref name="count" /> must be less than the size of the buffer</exception>
    </member>
    <member name="M:System.Net.Sockets.SendPacketsElement.#ctor(System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.Net.Sockets.SendPacketsElement" /> class using the specified file.</summary>
      <param name="filepath">The filename of the file to be transmitted using the <see cref="M:System.Net.Sockets.Socket.SendPacketsAsync(System.Net.Sockets.SocketAsyncEventArgs)" /> method.</param>
      <exception cref="T:System.ArgumentNullException">The <paramref name="filepath" /> parameter cannot be null</exception>
    </member>
    <member name="M:System.Net.Sockets.SendPacketsElement.#ctor(System.String,System.Int32,System.Int32)">
      <summary>Initializes a new instance of the <see cref="T:System.Net.Sockets.SendPacketsElement" /> class using the specified filename path, offset, and count.</summary>
      <param name="filepath">The filename of the file to be transmitted using the <see cref="M:System.Net.Sockets.Socket.SendPacketsAsync(System.Net.Sockets.SocketAsyncEventArgs)" /> method.</param>
      <param name="offset">The offset, in bytes, from the beginning of the file to the location in the file to start sending the file specified in the <paramref name="filepath" /> parameter.</param>
      <param name="count">The number of bytes to send starting from the <paramref name="offset" /> parameter. If <paramref name="count" /> is zero, the entire file is sent. </param>
      <exception cref="T:System.ArgumentNullException">The <paramref name="filepath" /> parameter cannot be null</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">The <paramref name="offset" /> and <paramref name="count" /> parameters must be greater than or equal to zero. The <paramref name="offset" /> and <paramref name="count" /> must be less than the size of the file indicated by the <paramref name="filepath" /> parameter.</exception>
    </member>
    <member name="M:System.Net.Sockets.SendPacketsElement.#ctor(System.String,System.Int32,System.Int32,System.Boolean)">
      <summary>Initializes a new instance of the <see cref="T:System.Net.Sockets.SendPacketsElement" /> class using the specified filename path, buffer offset, and count with an option to combine this element with the next element in a single send request from the sockets layer to the transport. </summary>
      <param name="filepath">The filename of the file to be transmitted using the <see cref="M:System.Net.Sockets.Socket.SendPacketsAsync(System.Net.Sockets.SocketAsyncEventArgs)" /> method.</param>
      <param name="offset">The offset, in bytes, from the beginning of the file to the location in the file to start sending the file specified in the <paramref name="filepath" /> parameter.</param>
      <param name="count">The number of bytes to send starting from the <paramref name="offset" /> parameter. If <paramref name="count" /> is zero, the entire file is sent.</param>
      <param name="endOfPacket">A Boolean value that specifies that this element should not be combined with the next element in a single send request from the sockets layer to the transport. This flag is used for granular control of the content of each message on a datagram or message-oriented socket.</param>
      <exception cref="T:System.ArgumentNullException">The <paramref name="filepath" /> parameter cannot be null</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">The <paramref name="offset" /> and <paramref name="count" /> parameters must be greater than or equal to zero. The <paramref name="offset" /> and <paramref name="count" /> must be less than the size of the file indicated by the <paramref name="filepath" /> parameter.</exception>
    </member>
    <member name="P:System.Net.Sockets.SendPacketsElement.Buffer">
      <summary>Gets the buffer to be sent if the <see cref="T:System.Net.Sockets.SendPacketsElement" /> class was initialized with a <paramref name="buffer" /> parameter.</summary>
      <returns>The byte buffer to send if the <see cref="T:System.Net.Sockets.SendPacketsElement" /> class was initialized with a <paramref name="buffer" /> parameter.</returns>
    </member>
    <member name="P:System.Net.Sockets.SendPacketsElement.Count">
      <summary>Gets the count of bytes to be sent. </summary>
      <returns>The count of bytes to send if the <see cref="T:System.Net.Sockets.SendPacketsElement" /> class was initialized with a <paramref name="count" /> parameter.</returns>
    </member>
    <member name="P:System.Net.Sockets.SendPacketsElement.EndOfPacket">
      <summary>Gets a Boolean value that indicates if this element should not be combined with the next element in a single send request from the sockets layer to the transport.</summary>
      <returns>A Boolean value that indicates if this element should not be combined with the next element in a single send request.</returns>
    </member>
    <member name="P:System.Net.Sockets.SendPacketsElement.FilePath">
      <summary>Gets the filename of the file to send if the <see cref="T:System.Net.Sockets.SendPacketsElement" /> class was initialized with a <paramref name="filepath" /> parameter.</summary>
      <returns>The filename of the file to send if the <see cref="T:System.Net.Sockets.SendPacketsElement" /> class was initialized with a <paramref name="filepath" /> parameter.</returns>
    </member>
    <member name="P:System.Net.Sockets.SendPacketsElement.Offset">
      <summary>Gets the offset, in bytes, from the beginning of the data buffer or file to the location in the buffer or file to start sending the data. </summary>
      <returns>The offset, in bytes, from the beginning of the data buffer or file to the location in the buffer or file to start sending the data.</returns>
    </member>
    <member name="T:System.Net.Sockets.Socket">
      <summary>Implements the Berkeley sockets interface.</summary>
    </member>
    <member name="M:System.Net.Sockets.Socket.#ctor(System.Net.Sockets.AddressFamily,System.Net.Sockets.SocketType,System.Net.Sockets.ProtocolType)">
      <summary>Initializes a new instance of the <see cref="T:System.Net.Sockets.Socket" /> class using the specified address family, socket type and protocol.</summary>
      <param name="addressFamily">One of the <see cref="T:System.Net.Sockets.AddressFamily" /> values. </param>
      <param name="socketType">One of the <see cref="T:System.Net.Sockets.SocketType" /> values. </param>
      <param name="protocolType">One of the <see cref="T:System.Net.Sockets.ProtocolType" /> values. </param>
      <exception cref="T:System.Net.Sockets.SocketException">The combination of <paramref name="addressFamily" />, <paramref name="socketType" />, and <paramref name="protocolType" /> results in an invalid socket. </exception>
    </member>
    <member name="M:System.Net.Sockets.Socket.#ctor(System.Net.Sockets.SocketInformation)">
      <summary>Initializes a new instance of the <see cref="T:System.Net.Sockets.Socket" /> class using the specified value returned from <see cref="M:System.Net.Sockets.Socket.DuplicateAndClose(System.Int32)" />.</summary>
      <param name="socketInformation">The socket information returned by <see cref="M:System.Net.Sockets.Socket.DuplicateAndClose(System.Int32)" />.</param>
    </member>
    <member name="M:System.Net.Sockets.Socket.Accept">
      <summary>Creates a new <see cref="T:System.Net.Sockets.Socket" /> for a newly created connection.</summary>
      <returns>A <see cref="T:System.Net.Sockets.Socket" /> for a newly created connection.</returns>
      <exception cref="T:System.Net.Sockets.SocketException">An error occurred when attempting to access the socket. See the Remarks section for more information. </exception>
      <exception cref="T:System.ObjectDisposedException">The <see cref="T:System.Net.Sockets.Socket" /> has been closed. </exception>
      <exception cref="T:System.InvalidOperationException">The accepting socket is not listening for connections. You must call <see cref="M:System.Net.Sockets.Socket.Bind(System.Net.EndPoint)" /> and <see cref="M:System.Net.Sockets.Socket.Listen(System.Int32)" /> before calling <see cref="M:System.Net.Sockets.Socket.Accept" />. </exception>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
        <IPermission class="System.Diagnostics.PerformanceCounterPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:System.Net.Sockets.Socket.AcceptAsync(System.Net.Sockets.SocketAsyncEventArgs)">
      <summary>Begins an asynchronous operation to accept an incoming connection attempt.</summary>
      <returns>Returns true if the I/O operation is pending. The <see cref="E:System.Net.Sockets.SocketAsyncEventArgs.Completed" /> event on the <paramref name="e" /> parameter will be raised upon completion of the operation.Returns false if the I/O operation completed synchronously. The <see cref="E:System.Net.Sockets.SocketAsyncEventArgs.Completed" /> event on the <paramref name="e" /> parameter will not be raised and the <paramref name="e" /> object passed as a parameter may be examined immediately after the method call returns to retrieve the result of the operation.</returns>
      <param name="e">The <see cref="T:System.Net.Sockets.SocketAsyncEventArgs" /> object to use for this asynchronous socket operation.</param>
      <exception cref="T:System.ArgumentException">An argument is not valid. This exception occurs if the buffer provided is not large enough. The buffer must be at least 2 * (sizeof(SOCKADDR_STORAGE + 16) bytes. This exception also occurs if multiple buffers are specified, the <see cref="P:System.Net.Sockets.SocketAsyncEventArgs.BufferList" /> property is not null.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">An argument is out of range. The exception occurs if the <see cref="P:System.Net.Sockets.SocketAsyncEventArgs.Count" /> is less than 0.</exception>
      <exception cref="T:System.InvalidOperationException">An invalid operation was requested. This exception occurs if the accepting <see cref="T:System.Net.Sockets.Socket" /> is not listening for connections or the accepted socket is bound. You must call the <see cref="M:System.Net.Sockets.Socket.Bind(System.Net.EndPoint)" /> and <see cref="M:System.Net.Sockets.Socket.Listen(System.Int32)" /> method before calling the <see cref="M:System.Net.Sockets.Socket.AcceptAsync(System.Net.Sockets.SocketAsyncEventArgs)" /> method.This exception also occurs if the socket is already connected or a socket operation was already in progress using the specified <paramref name="e" /> parameter. </exception>
      <exception cref="T:System.Net.Sockets.SocketException">An error occurred when attempting to access the socket. See the Remarks section for more information. </exception>
      <exception cref="T:System.NotSupportedException">Windows XP or later is required for this method.</exception>
      <exception cref="T:System.ObjectDisposedException">The <see cref="T:System.Net.Sockets.Socket" /> has been closed. </exception>
    </member>
    <member name="P:System.Net.Sockets.Socket.AddressFamily">
      <summary>Gets the address family of the <see cref="T:System.Net.Sockets.Socket" />.</summary>
      <returns>One of the <see cref="T:System.Net.Sockets.AddressFamily" /> values.</returns>
    </member>
    <member name="P:System.Net.Sockets.Socket.Available">
      <summary>Gets the amount of data that has been received from the network and is available to be read.</summary>
      <returns>The number of bytes of data received from the network and available to be read.</returns>
      <exception cref="T:System.Net.Sockets.SocketException">An error occurred when attempting to access the socket. See the Remarks section for more information. </exception>
      <exception cref="T:System.ObjectDisposedException">The <see cref="T:System.Net.Sockets.Socket" /> has been closed. </exception>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
      </PermissionSet>
    </member>
    <member name="M:System.Net.Sockets.Socket.BeginAccept(System.AsyncCallback,System.Object)">
      <summary>Begins an asynchronous operation to accept an incoming connection attempt.</summary>
      <returns>An <see cref="T:System.IAsyncResult" /> that references the asynchronous <see cref="T:System.Net.Sockets.Socket" /> creation.</returns>
      <param name="callback">The <see cref="T:System.AsyncCallback" /> delegate. </param>
      <param name="state">An object that contains state information for this request. </param>
      <exception cref="T:System.ObjectDisposedException">The <see cref="T:System.Net.Sockets.Socket" /> object has been closed. </exception>
      <exception cref="T:System.NotSupportedException">Windows NT is required for this method. </exception>
      <exception cref="T:System.InvalidOperationException">The accepting socket is not listening for connections. You must call <see cref="M:System.Net.Sockets.Socket.Bind(System.Net.EndPoint)" /> and <see cref="M:System.Net.Sockets.Socket.Listen(System.Int32)" /> before calling <see cref="M:System.Net.Sockets.Socket.BeginAccept(System.AsyncCallback,System.Object)" />.-or- The accepted socket is bound. </exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="receiveSize" /> is less than 0. </exception>
      <exception cref="T:System.Net.Sockets.SocketException">An error occurred when attempting to access the socket. See the Remarks section for more information. </exception>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
      </PermissionSet>
    </member>
    <member name="M:System.Net.Sockets.Socket.BeginAccept(System.Int32,System.AsyncCallback,System.Object)">
      <summary>Begins an asynchronous operation to accept an incoming connection attempt and receives the first block of data sent by the client application.</summary>
      <returns>An <see cref="T:System.IAsyncResult" /> that references the asynchronous <see cref="T:System.Net.Sockets.Socket" /> creation.</returns>
      <param name="receiveSize">The number of bytes to accept from the sender. </param>
      <param name="callback">The <see cref="T:System.AsyncCallback" /> delegate. </param>
      <param name="state">An object that contains state information for this request. </param>
      <exception cref="T:System.ObjectDisposedException">The <see cref="T:System.Net.Sockets.Socket" /> object has been closed. </exception>
      <exception cref="T:System.NotSupportedException">Windows NT is required for this method. </exception>
      <exception cref="T:System.InvalidOperationException">The accepting socket is not listening for connections. You must call <see cref="M:System.Net.Sockets.Socket.Bind(System.Net.EndPoint)" /> and <see cref="M:System.Net.Sockets.Socket.Listen(System.Int32)" /> before calling <see cref="M:System.Net.Sockets.Socket.BeginAccept(System.AsyncCallback,System.Object)" />.-or- The accepted socket is bound. </exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="receiveSize" /> is less than 0. </exception>
      <exception cref="T:System.Net.Sockets.SocketException">An error occurred when attempting to access the socket. See the Remarks section for more information. </exception>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
      </PermissionSet>
    </member>
    <member name="M:System.Net.Sockets.Socket.BeginAccept(System.Net.Sockets.Socket,System.Int32,System.AsyncCallback,System.Object)">
      <summary>Begins an asynchronous operation to accept an incoming connection attempt from a specified socket and receives the first block of data sent by the client application.</summary>
      <returns>An <see cref="T:System.IAsyncResult" /> object that references the asynchronous <see cref="T:System.Net.Sockets.Socket" /> object creation.</returns>
      <param name="acceptSocket">The accepted <see cref="T:System.Net.Sockets.Socket" /> object. This value may be null. </param>
      <param name="receiveSize">The maximum number of bytes to receive. </param>
      <param name="callback">The <see cref="T:System.AsyncCallback" /> delegate. </param>
      <param name="state">An object that contains state information for this request. </param>
      <exception cref="T:System.ObjectDisposedException">The <see cref="T:System.Net.Sockets.Socket" /> object has been closed. </exception>
      <exception cref="T:System.NotSupportedException">Windows NT is required for this method. </exception>
      <exception cref="T:System.InvalidOperationException">The accepting socket is not listening for connections. You must call <see cref="M:System.Net.Sockets.Socket.Bind(System.Net.EndPoint)" /> and <see cref="M:System.Net.Sockets.Socket.Listen(System.Int32)" /> before calling <see cref="M:System.Net.Sockets.Socket.BeginAccept(System.AsyncCallback,System.Object)" />.-or- The accepted socket is bound. </exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="receiveSize" /> is less than 0. </exception>
      <exception cref="T:System.Net.Sockets.SocketException">An error occurred when attempting to access the socket. See the Remarks section for more information. </exception>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
      </PermissionSet>
    </member>
    <member name="M:System.Net.Sockets.Socket.BeginConnect(System.Net.EndPoint,System.AsyncCallback,System.Object)">
      <summary>Begins an asynchronous request for a remote host connection.</summary>
      <returns>An <see cref="T:System.IAsyncResult" /> that references the asynchronous connection.</returns>
      <param name="remoteEP">An <see cref="T:System.Net.EndPoint" /> that represents the remote host. </param>
      <param name="callback">The <see cref="T:System.AsyncCallback" /> delegate. </param>
      <param name="state">An object that contains state information for this request. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="remoteEP" /> is null. </exception>
      <exception cref="T:System.Net.Sockets.SocketException">An error occurred when attempting to access the socket. See the Remarks section for more information. </exception>
      <exception cref="T:System.ObjectDisposedException">The <see cref="T:System.Net.Sockets.Socket" /> has been closed. </exception>
      <exception cref="T:System.Security.SecurityException">A caller higher in the call stack does not have permission for the requested operation. </exception>
      <exception cref="T:System.InvalidOperationException">The <see cref="T:System.Net.Sockets.Socket" /> is <see cref="M:System.Net.Sockets.Socket.Listen(System.Int32)" />ing.</exception>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Diagnostics.PerformanceCounterPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Net.SocketPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:System.Net.Sockets.Socket.BeginConnect(System.Net.IPAddress,System.Int32,System.AsyncCallback,System.Object)">
      <summary>Begins an asynchronous request for a remote host connection. The host is specified by an <see cref="T:System.Net.IPAddress" /> and a port number.</summary>
      <returns>An <see cref="T:System.IAsyncResult" /> that references the asynchronous connection.</returns>
      <param name="address">The <see cref="T:System.Net.IPAddress" /> of the remote host.</param>
      <param name="port">The port number of the remote host.</param>
      <param name="requestCallback">An <see cref="T:System.AsyncCallback" /> delegate that references the method to invoke when the connect operation is complete. </param>
      <param name="state">A user-defined object that contains information about the connect operation. This object is passed to the <paramref name="requestCallback" /> delegate when the operation is complete.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="address" /> is null. </exception>
      <exception cref="T:System.Net.Sockets.SocketException">An error occurred when attempting to access the socket. See the Remarks section for more information. </exception>
      <exception cref="T:System.ObjectDisposedException">The <see cref="T:System.Net.Sockets.Socket" /> has been closed. </exception>
      <exception cref="T:System.NotSupportedException">The <see cref="T:System.Net.Sockets.Socket" /> is not in the socket family.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">The port number is not valid.</exception>
      <exception cref="T:System.ArgumentException">The length of <paramref name="address" /> is zero.</exception>
      <exception cref="T:System.InvalidOperationException">The <see cref="T:System.Net.Sockets.Socket" /> is <see cref="M:System.Net.Sockets.Socket.Listen(System.Int32)" />ing.</exception>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Diagnostics.PerformanceCounterPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Net.SocketPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:System.Net.Sockets.Socket.BeginConnect(System.Net.IPAddress[],System.Int32,System.AsyncCallback,System.Object)">
      <summary>Begins an asynchronous request for a remote host connection. The host is specified by an <see cref="T:System.Net.IPAddress" /> array and a port number.</summary>
      <returns>An <see cref="T:System.IAsyncResult" /> that references the asynchronous connections.</returns>
      <param name="addresses">At least one <see cref="T:System.Net.IPAddress" />, designating the remote host.</param>
      <param name="port">The port number of the remote host.</param>
      <param name="requestCallback">An <see cref="T:System.AsyncCallback" /> delegate that references the method to invoke when the connect operation is complete. </param>
      <param name="state">A user-defined object that contains information about the connect operation. This object is passed to the <paramref name="requestCallback" /> delegate when the operation is complete.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="addresses" /> is null. </exception>
      <exception cref="T:System.Net.Sockets.SocketException">An error occurred when attempting to access the socket. See the Remarks section for more information. </exception>
      <exception cref="T:System.ObjectDisposedException">The <see cref="T:System.Net.Sockets.Socket" /> has been closed. </exception>
      <exception cref="T:System.NotSupportedException">This method is valid for sockets that use <see cref="F:System.Net.Sockets.AddressFamily.InterNetwork" /> or <see cref="F:System.Net.Sockets.AddressFamily.InterNetworkV6" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">The port number is not valid.</exception>
      <exception cref="T:System.ArgumentException">The length of <paramref name="address" /> is zero.</exception>
      <exception cref="T:System.InvalidOperationException">The <see cref="T:System.Net.Sockets.Socket" /> is <see cref="M:System.Net.Sockets.Socket.Listen(System.Int32)" />ing.</exception>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Diagnostics.PerformanceCounterPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Net.SocketPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:System.Net.Sockets.Socket.BeginConnect(System.String,System.Int32,System.AsyncCallback,System.Object)">
      <summary>Begins an asynchronous request for a remote host connection. The host is specified by a host name and a port number.</summary>
      <returns>An <see cref="T:System.IAsyncResult" /> that references the asynchronous connection.</returns>
      <param name="host">The name of the remote host.</param>
      <param name="port">The port number of the remote host.</param>
      <param name="requestCallback">An <see cref="T:System.AsyncCallback" /> delegate that references the method to invoke when the connect operation is complete. </param>
      <param name="state">A user-defined object that contains information about the connect operation. This object is passed to the <paramref name="requestCallback" /> delegate when the operation is complete.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="host" /> is null. </exception>
      <exception cref="T:System.ObjectDisposedException">The <see cref="T:System.Net.Sockets.Socket" /> has been closed. </exception>
      <exception cref="T:System.NotSupportedException">This method is valid for sockets in the <see cref="F:System.Net.Sockets.AddressFamily.InterNetwork" /> or <see cref="F:System.Net.Sockets.AddressFamily.InterNetworkV6" /> families.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">The port number is not valid.</exception>
      <exception cref="T:System.InvalidOperationException">The <see cref="T:System.Net.Sockets.Socket" /> is <see cref="M:System.Net.Sockets.Socket.Listen(System.Int32)" />ing.</exception>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Diagnostics.PerformanceCounterPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Net.SocketPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:System.Net.Sockets.Socket.BeginDisconnect(System.Boolean,System.AsyncCallback,System.Object)">
      <summary>Begins an asynchronous request to disconnect from a remote endpoint.</summary>
      <returns>An <see cref="T:System.IAsyncResult" /> object that references the asynchronous operation.</returns>
      <param name="reuseSocket">true if this socket can be reused after the connection is closed; otherwise, false. </param>
      <param name="callback">The <see cref="T:System.AsyncCallback" /> delegate. </param>
      <param name="state">An object that contains state information for this request. </param>
      <exception cref="T:System.NotSupportedException">The operating system is Windows 2000 or earlier, and this method requires Windows XP. </exception>
      <exception cref="T:System.ObjectDisposedException">The <see cref="T:System.Net.Sockets.Socket" /> object has been closed. </exception>
      <exception cref="T:System.Net.Sockets.SocketException">An error occurred when attempting to access the socket. See the Remarks section for more information. </exception>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:System.Net.Sockets.Socket.BeginReceive(System.Byte[],System.Int32,System.Int32,System.Net.Sockets.SocketFlags,System.AsyncCallback,System.Object)">
      <summary>Begins to asynchronously receive data from a connected <see cref="T:System.Net.Sockets.Socket" />.</summary>
      <returns>An <see cref="T:System.IAsyncResult" /> that references the asynchronous read.</returns>
      <param name="buffer">An array of type <see cref="T:System.Byte" /> that is the storage location for the received data. </param>
      <param name="offset">The zero-based position in the <paramref name="buffer" /> parameter at which to store the received data. </param>
      <param name="size">The number of bytes to receive. </param>
      <param name="socketFlags">A bitwise combination of the <see cref="T:System.Net.Sockets.SocketFlags" /> values. </param>
      <param name="callback">An <see cref="T:System.AsyncCallback" /> delegate that references the method to invoke when the operation is complete. </param>
      <param name="state">A user-defined object that contains information about the receive operation. This object is passed to the <see cref="M:System.Net.Sockets.Socket.EndReceive(System.IAsyncResult)" /> delegate when the operation is complete.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="buffer" /> is null. </exception>
      <exception cref="T:System.Net.Sockets.SocketException">An error occurred when attempting to access the socket. See the Remarks section for more information. </exception>
      <exception cref="T:System.ObjectDisposedException">
        <see cref="T:System.Net.Sockets.Socket" /> has been closed. </exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="offset" /> is less than 0.-or- <paramref name="offset" /> is greater than the length of <paramref name="buffer" />.-or- <paramref name="size" /> is less than 0.-or- <paramref name="size" /> is greater than the length of <paramref name="buffer" /> minus the value of the <paramref name="offset" /> parameter. </exception>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
      </PermissionSet>
    </member>
    <member name="M:System.Net.Sockets.Socket.BeginReceive(System.Byte[],System.Int32,System.Int32,System.Net.Sockets.SocketFlags,System.Net.Sockets.SocketError@,System.AsyncCallback,System.Object)">
      <summary>Begins to asynchronously receive data from a connected <see cref="T:System.Net.Sockets.Socket" />.</summary>
      <returns>An <see cref="T:System.IAsyncResult" /> that references the asynchronous read.</returns>
      <param name="buffer">An array of type <see cref="T:System.Byte" /> that is the storage location for the received data.</param>
      <param name="offset">The location in <paramref name="buffer" /> to store the received data. </param>
      <param name="size">The number of bytes to receive. </param>
      <param name="socketFlags">A bitwise combination of the <see cref="T:System.Net.Sockets.SocketFlags" /> values.</param>
      <param name="errorCode">A <see cref="T:System.Net.Sockets.SocketError" /> object that stores the socket error.</param>
      <param name="callback">An <see cref="T:System.AsyncCallback" /> delegate that references the method to invoke when the operation is complete.</param>
      <param name="state">A user-defined object that contains information about the receive operation. This object is passed to the <see cref="M:System.Net.Sockets.Socket.EndReceive(System.IAsyncResult)" /> delegate when the operation is complete.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="buffer" /> is null. </exception>
      <exception cref="T:System.Net.Sockets.SocketException">An error occurred when attempting to access the socket. See the Remarks section for more information. </exception>
      <exception cref="T:System.ObjectDisposedException">
        <see cref="T:System.Net.Sockets.Socket" /> has been closed. </exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="offset" /> is less than 0.-or- <paramref name="offset" /> is greater than the length of <paramref name="buffer" />.-or- <paramref name="size" /> is less than 0.-or- <paramref name="size" /> is greater than the length of <paramref name="buffer" /> minus the value of the <paramref name="offset" /> parameter. </exception>
    </member>
    <member name="M:System.Net.Sockets.Socket.BeginReceive(System.Collections.Generic.IList{System.ArraySegment{System.Byte}},System.Net.Sockets.SocketFlags,System.AsyncCallback,System.Object)">
      <summary>Begins to asynchronously receive data from a connected <see cref="T:System.Net.Sockets.Socket" />.</summary>
      <returns>An <see cref="T:System.IAsyncResult" /> that references the asynchronous read.</returns>
      <param name="buffers">An array of type <see cref="T:System.Byte" /> that is the storage location for the received data.</param>
      <param name="socketFlags">A bitwise combination of the <see cref="T:System.Net.Sockets.SocketFlags" /> values.</param>
      <param name="callback">An <see cref="T:System.AsyncCallback" /> delegate that references the method to invoke when the operation is complete.</param>
      <param name="state">A user-defined object that contains information about the receive operation. This object is passed to the <see cref="M:System.Net.Sockets.Socket.EndReceive(System.IAsyncResult)" /> delegate when the operation is complete.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="buffer" /> is null. </exception>
      <exception cref="T:System.Net.Sockets.SocketException">An error occurred when attempting to access the socket. See the Remarks section for more information. </exception>
      <exception cref="T:System.ObjectDisposedException">
        <see cref="T:System.Net.Sockets.Socket" /> has been closed. </exception>
    </member>
    <member name="M:System.Net.Sockets.Socket.BeginReceive(System.Collections.Generic.IList{System.ArraySegment{System.Byte}},System.Net.Sockets.SocketFlags,System.Net.Sockets.SocketError@,System.AsyncCallback,System.Object)">
      <summary>Begins to asynchronously receive data from a connected <see cref="T:System.Net.Sockets.Socket" />.</summary>
      <returns>An <see cref="T:System.IAsyncResult" /> that references the asynchronous read.</returns>
      <param name="buffers">An array of type <see cref="T:System.Byte" /> that is the storage location for the received data.</param>
      <param name="socketFlags">A bitwise combination of the <see cref="T:System.Net.Sockets.SocketFlags" /> values. </param>
      <param name="errorCode">A <see cref="T:System.Net.Sockets.SocketError" /> object that stores the socket error.</param>
      <param name="callback">An <see cref="T:System.AsyncCallback" /> delegate that references the method to invoke when the operation is complete.</param>
      <param name="state">A user-defined object that contains information about the receive operation. This object is passed to the <see cref="M:System.Net.Sockets.Socket.EndReceive(System.IAsyncResult)" /> delegate when the operation is complete.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="buffer" /> is null. </exception>
      <exception cref="T:System.Net.Sockets.SocketException">An error occurred when attempting to access the socket. See the Remarks section for more information. </exception>
      <exception cref="T:System.ObjectDisposedException">
        <see cref="T:System.Net.Sockets.Socket" /> has been closed. </exception>
    </member>
    <member name="M:System.Net.Sockets.Socket.BeginReceiveFrom(System.Byte[],System.Int32,System.Int32,System.Net.Sockets.SocketFlags,System.Net.EndPoint@,System.AsyncCallback,System.Object)">
      <summary>Begins to asynchronously receive data from a specified network device.</summary>
      <returns>An <see cref="T:System.IAsyncResult" /> that references the asynchronous read.</returns>
      <param name="buffer">An array of type <see cref="T:System.Byte" /> that is the storage location for the received data. </param>
      <param name="offset">The zero-based position in the <paramref name="buffer" /> parameter at which to store the data. </param>
      <param name="size">The number of bytes to receive. </param>
      <param name="socketFlags">A bitwise combination of the <see cref="T:System.Net.Sockets.SocketFlags" /> values. </param>
      <param name="remoteEP">An <see cref="T:System.Net.EndPoint" /> that represents the source of the data. </param>
      <param name="callback">The <see cref="T:System.AsyncCallback" /> delegate. </param>
      <param name="state">An object that contains state information for this request. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="buffer" /> is null.-or- <paramref name="remoteEP" /> is null. </exception>
      <exception cref="T:System.Net.Sockets.SocketException">An error occurred when attempting to access the socket. See the Remarks section for more information. </exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="offset" /> is less than 0.-or- <paramref name="offset" /> is greater than the length of <paramref name="buffer" />.-or- <paramref name="size" /> is less than 0.-or- <paramref name="size" /> is greater than the length of <paramref name="buffer" /> minus the value of the <paramref name="offset" /> parameter. </exception>
      <exception cref="T:System.ObjectDisposedException">The <see cref="T:System.Net.Sockets.Socket" /> has been closed. </exception>
      <exception cref="T:System.Security.SecurityException">A caller higher in the call stack does not have permission for the requested operation. </exception>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Net.SocketPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:System.Net.Sockets.Socket.BeginReceiveMessageFrom(System.Byte[],System.Int32,System.Int32,System.Net.Sockets.SocketFlags,System.Net.EndPoint@,System.AsyncCallback,System.Object)">
      <summary>Begins to asynchronously receive the specified number of bytes of data into the specified location of the data buffer, using the specified <see cref="T:System.Net.Sockets.SocketFlags" />, and stores the endpoint and packet information..</summary>
      <returns>An <see cref="T:System.IAsyncResult" /> that references the asynchronous read.</returns>
      <param name="buffer">An array of type <see cref="T:System.Byte" /> that is the storage location for the received data. </param>
      <param name="offset">The zero-based position in the <paramref name="buffer" /> parameter at which to store the data.</param>
      <param name="size">The number of bytes to receive. </param>
      <param name="socketFlags">A bitwise combination of the <see cref="T:System.Net.Sockets.SocketFlags" /> values.</param>
      <param name="remoteEP">An <see cref="T:System.Net.EndPoint" /> that represents the source of the data.</param>
      <param name="callback">The <see cref="T:System.AsyncCallback" /> delegate.</param>
      <param name="state">An object that contains state information for this request.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="buffer" /> is null.-or- <paramref name="remoteEP" /> is null. </exception>
      <exception cref="T:System.Net.Sockets.SocketException">An error occurred when attempting to access the socket. See the Remarks section for more information. </exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="offset" /> is less than 0.-or- <paramref name="offset" /> is greater than the length of <paramref name="buffer" />.-or- <paramref name="size" /> is less than 0.-or- <paramref name="size" /> is greater than the length of <paramref name="buffer" /> minus the value of the <paramref name="offset" /> parameter. </exception>
      <exception cref="T:System.ObjectDisposedException">The <see cref="T:System.Net.Sockets.Socket" /> has been closed. </exception>
      <exception cref="T:System.NotSupportedException">The operating system is Windows 2000 or earlier, and this method requires Windows XP.</exception>
    </member>
    <member name="M:System.Net.Sockets.Socket.BeginSend(System.Byte[],System.Int32,System.Int32,System.Net.Sockets.SocketFlags,System.AsyncCallback,System.Object)">
      <summary>Sends data asynchronously to a connected <see cref="T:System.Net.Sockets.Socket" />.</summary>
      <returns>An <see cref="T:System.IAsyncResult" /> that references the asynchronous send.</returns>
      <param name="buffer">An array of type <see cref="T:System.Byte" /> that contains the data to send. </param>
      <param name="offset">The zero-based position in the <paramref name="buffer" /> parameter at which to begin sending data. </param>
      <param name="size">The number of bytes to send. </param>
      <param name="socketFlags">A bitwise combination of the <see cref="T:System.Net.Sockets.SocketFlags" /> values. </param>
      <param name="callback">The <see cref="T:System.AsyncCallback" /> delegate. </param>
      <param name="state">An object that contains state information for this request. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="buffer" /> is null. </exception>
      <exception cref="T:System.Net.Sockets.SocketException">An error occurred when attempting to access the socket. See remarks section below. </exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="offset" /> is less than 0.-or- <paramref name="offset" /> is less than the length of <paramref name="buffer" />.-or- <paramref name="size" /> is less than 0.-or- <paramref name="size" /> is greater than the length of <paramref name="buffer" /> minus the value of the <paramref name="offset" /> parameter. </exception>
      <exception cref="T:System.ObjectDisposedException">The <see cref="T:System.Net.Sockets.Socket" /> has been closed. </exception>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
      </PermissionSet>
    </member>
    <member name="M:System.Net.Sockets.Socket.BeginSend(System.Byte[],System.Int32,System.Int32,System.Net.Sockets.SocketFlags,System.Net.Sockets.SocketError@,System.AsyncCallback,System.Object)">
      <summary>Sends data asynchronously to a connected <see cref="T:System.Net.Sockets.Socket" />.</summary>
      <returns>An <see cref="T:System.IAsyncResult" /> that references the asynchronous send.</returns>
      <param name="buffer">An array of type <see cref="T:System.Byte" /> that contains the data to send. </param>
      <param name="offset">The zero-based position in the <paramref name="buffer" /> parameter at which to begin sending data. </param>
      <param name="size">The number of bytes to send. </param>
      <param name="socketFlags">A bitwise combination of the <see cref="T:System.Net.Sockets.SocketFlags" /> values. </param>
      <param name="errorCode">A <see cref="T:System.Net.Sockets.SocketError" /> object that stores the socket error.</param>
      <param name="callback">The <see cref="T:System.AsyncCallback" /> delegate. </param>
      <param name="state">An object that contains state information for this request. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="buffer" /> is null. </exception>
      <exception cref="T:System.Net.Sockets.SocketException">An error occurred when attempting to access the socket. See remarks section below. </exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="offset" /> is less than 0.-or- <paramref name="offset" /> is less than the length of <paramref name="buffer" />.-or- <paramref name="size" /> is less than 0.-or- <paramref name="size" /> is greater than the length of <paramref name="buffer" /> minus the value of the <paramref name="offset" /> parameter. </exception>
      <exception cref="T:System.ObjectDisposedException">The <see cref="T:System.Net.Sockets.Socket" /> has been closed. </exception>
    </member>
    <member name="M:System.Net.Sockets.Socket.BeginSend(System.Collections.Generic.IList{System.ArraySegment{System.Byte}},System.Net.Sockets.SocketFlags,System.AsyncCallback,System.Object)">
      <summary>Sends data asynchronously to a connected <see cref="T:System.Net.Sockets.Socket" />.</summary>
      <returns>An <see cref="T:System.IAsyncResult" /> that references the asynchronous send.</returns>
      <param name="buffers">An array of type <see cref="T:System.Byte" /> that contains the data to send. </param>
      <param name="socketFlags">A bitwise combination of the <see cref="T:System.Net.Sockets.SocketFlags" /> values. </param>
      <param name="callback">The <see cref="T:System.AsyncCallback" /> delegate. </param>
      <param name="state">An object that contains state information for this request. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="buffers" /> is null. </exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="buffers" /> is empty.</exception>
      <exception cref="T:System.Net.Sockets.SocketException">An error occurred when attempting to access the socket. See remarks section below. </exception>
      <exception cref="T:System.ObjectDisposedException">The <see cref="T:System.Net.Sockets.Socket" /> has been closed. </exception>
    </member>
    <member name="M:System.Net.Sockets.Socket.BeginSend(System.Collections.Generic.IList{System.ArraySegment{System.Byte}},System.Net.Sockets.SocketFlags,System.Net.Sockets.SocketError@,System.AsyncCallback,System.Object)">
      <summary>Sends data asynchronously to a connected <see cref="T:System.Net.Sockets.Socket" />.</summary>
      <returns>An <see cref="T:System.IAsyncResult" /> that references the asynchronous send.</returns>
      <param name="buffers">An array of type <see cref="T:System.Byte" /> that contains the data to send. </param>
      <param name="socketFlags">A bitwise combination of the <see cref="T:System.Net.Sockets.SocketFlags" /> values.</param>
      <param name="errorCode">A <see cref="T:System.Net.Sockets.SocketError" /> object that stores the socket error.</param>
      <param name="callback">The <see cref="T:System.AsyncCallback" /> delegate. </param>
      <param name="state">An object that contains state information for this request. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="buffers" /> is null. </exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="buffers" /> is empty.</exception>
      <exception cref="T:System.Net.Sockets.SocketException">An error occurred when attempting to access the socket. See remarks section below. </exception>
      <exception cref="T:System.ObjectDisposedException">The <see cref="T:System.Net.Sockets.Socket" /> has been closed. </exception>
    </member>
    <member name="M:System.Net.Sockets.Socket.BeginSendFile(System.String,System.AsyncCallback,System.Object)">
      <summary>Sends the file <paramref name="fileName" /> to a connected <see cref="T:System.Net.Sockets.Socket" /> object using the <see cref="F:System.Net.Sockets.TransmitFileOptions.UseDefaultWorkerThread" /> flag.</summary>
      <returns>An <see cref="T:System.IAsyncResult" /> object that represents the asynchronous send.</returns>
      <param name="fileName">A string that contains the path and name of the file to send. This parameter can be null. </param>
      <param name="callback">The <see cref="T:System.AsyncCallback" /> delegate. </param>
      <param name="state">An object that contains state information for this request. </param>
      <exception cref="T:System.ObjectDisposedException">The <see cref="T:System.Net.Sockets.Socket" /> object has been closed. </exception>
      <exception cref="T:System.NotSupportedException">The socket is not connected to a remote host. </exception>
      <exception cref="T:System.IO.FileNotFoundException">The file <paramref name="fileName" /> was not found. </exception>
      <exception cref="T:System.Net.Sockets.SocketException">An error occurred when attempting to access the socket. See remarks section below. </exception>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:System.Net.Sockets.Socket.BeginSendFile(System.String,System.Byte[],System.Byte[],System.Net.Sockets.TransmitFileOptions,System.AsyncCallback,System.Object)">
      <summary>Sends a file and buffers of data asynchronously to a connected <see cref="T:System.Net.Sockets.Socket" /> object.</summary>
      <returns>An <see cref="T:System.IAsyncResult" /> object that represents the asynchronous operation.</returns>
      <param name="fileName">A string that contains the path and name of the file to be sent. This parameter can be null. </param>
      <param name="preBuffer">A <see cref="T:System.Byte" /> array that contains data to be sent before the file is sent. This parameter can be null. </param>
      <param name="postBuffer">A <see cref="T:System.Byte" /> array that contains data to be sent after the file is sent. This parameter can be null. </param>
      <param name="flags">A bitwise combination of <see cref="T:System.Net.Sockets.TransmitFileOptions" /> values. </param>
      <param name="callback">An <see cref="T:System.AsyncCallback" /> delegate to be invoked when this operation completes. This parameter can be null. </param>
      <param name="state">A user-defined object that contains state information for this request. This parameter can be null. </param>
      <exception cref="T:System.ObjectDisposedException">The <see cref="T:System.Net.Sockets.Socket" /> object has been closed. </exception>
      <exception cref="T:System.Net.Sockets.SocketException">An error occurred when attempting to access the socket. See remarks section below. </exception>
      <exception cref="T:System.NotSupportedException">The operating system is not Windows NT or later.- or - The socket is not connected to a remote host. </exception>
      <exception cref="T:System.IO.FileNotFoundException">The file <paramref name="fileName" /> was not found. </exception>
    </member>
    <member name="M:System.Net.Sockets.Socket.BeginSendTo(System.Byte[],System.Int32,System.Int32,System.Net.Sockets.SocketFlags,System.Net.EndPoint,System.AsyncCallback,System.Object)">
      <summary>Sends data asynchronously to a specific remote host.</summary>
      <returns>An <see cref="T:System.IAsyncResult" /> that references the asynchronous send.</returns>
      <param name="buffer">An array of type <see cref="T:System.Byte" /> that contains the data to send. </param>
      <param name="offset">The zero-based position in <paramref name="buffer" /> at which to begin sending data. </param>
      <param name="size">The number of bytes to send. </param>
      <param name="socketFlags">A bitwise combination of the <see cref="T:System.Net.Sockets.SocketFlags" /> values. </param>
      <param name="remoteEP">An <see cref="T:System.Net.EndPoint" /> that represents the remote device. </param>
      <param name="callback">The <see cref="T:System.AsyncCallback" /> delegate. </param>
      <param name="state">An object that contains state information for this request. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="buffer" /> is null.-or- <paramref name="remoteEP" /> is null. </exception>
      <exception cref="T:System.Net.Sockets.SocketException">An error occurred when attempting to access the socket. See the Remarks section for more information. </exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="offset" /> is less than 0.-or- <paramref name="offset" /> is greater than the length of <paramref name="buffer" />.-or- <paramref name="size" /> is less than 0.-or- <paramref name="size" /> is greater than the length of <paramref name="buffer" /> minus the value of the <paramref name="offset" /> parameter. </exception>
      <exception cref="T:System.ObjectDisposedException">The <see cref="T:System.Net.Sockets.Socket" /> has been closed. </exception>
      <exception cref="T:System.Security.SecurityException">A caller higher in the call stack does not have permission for the requested operation. </exception>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Net.SocketPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:System.Net.Sockets.Socket.Bind(System.Net.EndPoint)">
      <summary>Associates a <see cref="T:System.Net.Sockets.Socket" /> with a local endpoint.</summary>
      <param name="localEP">The local <see cref="T:System.Net.EndPoint" /> to associate with the <see cref="T:System.Net.Sockets.Socket" />. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="localEP" /> is null. </exception>
      <exception cref="T:System.Net.Sockets.SocketException">An error occurred when attempting to access the socket. See the Remarks section for more information. </exception>
      <exception cref="T:System.ObjectDisposedException">The <see cref="T:System.Net.Sockets.Socket" /> has been closed. </exception>
      <exception cref="T:System.Security.SecurityException">A caller higher in the call stack does not have permission for the requested operation. </exception>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Net.SocketPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="P:System.Net.Sockets.Socket.Blocking">
      <summary>Gets or sets a value that indicates whether the <see cref="T:System.Net.Sockets.Socket" /> is in blocking mode.</summary>
      <returns>true if the <see cref="T:System.Net.Sockets.Socket" /> will block; otherwise, false. The default is true.</returns>
      <exception cref="T:System.Net.Sockets.SocketException">An error occurred when attempting to access the socket. See the Remarks section for more information. </exception>
      <exception cref="T:System.ObjectDisposedException">The <see cref="T:System.Net.Sockets.Socket" /> has been closed. </exception>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
      </PermissionSet>
    </member>
    <member name="M:System.Net.Sockets.Socket.CancelConnectAsync(System.Net.Sockets.SocketAsyncEventArgs)">
      <summary>Cancels an asynchronous request for a remote host connection.</summary>
      <param name="e">The <see cref="T:System.Net.Sockets.SocketAsyncEventArgs" /> object used to request the connection to the remote host by calling one of the <see cref="M:System.Net.Sockets.Socket.ConnectAsync(System.Net.Sockets.SocketType,System.Net.Sockets.ProtocolType,System.Net.Sockets.SocketAsyncEventArgs)" /> methods.</param>
      <exception cref="T:System.ArgumentNullException">The <paramref name="e" /> parameter cannot be null and the <see cref="P:System.Net.Sockets.SocketAsyncEventArgs.RemoteEndPoint" /> cannot be null.</exception>
      <exception cref="T:System.Net.Sockets.SocketException">An error occurred when attempting to access the socket. </exception>
      <exception cref="T:System.ObjectDisposedException">The <see cref="T:System.Net.Sockets.Socket" /> has been closed. </exception>
      <exception cref="T:System.Security.SecurityException">A caller higher in the call stack does not have permission for the requested operation.</exception>
    </member>
    <member name="M:System.Net.Sockets.Socket.Close">
      <summary>Closes the <see cref="T:System.Net.Sockets.Socket" /> connection and releases all associated resources.</summary>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
      </PermissionSet>
    </member>
    <member name="M:System.Net.Sockets.Socket.Close(System.Int32)">
      <summary>Closes the <see cref="T:System.Net.Sockets.Socket" /> connection and releases all associated resources.</summary>
      <param name="timeout">Wait up to <paramref name="timeout" /> seconds to send any remaining data, then close the socket.</param>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
      </PermissionSet>
    </member>
    <member name="M:System.Net.Sockets.Socket.Connect(System.Net.EndPoint)">
      <summary>Establishes a connection to a remote host.</summary>
      <param name="remoteEP">An <see cref="T:System.Net.EndPoint" /> that represents the remote device. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="remoteEP" /> is null. </exception>
      <exception cref="T:System.Net.Sockets.SocketException">An error occurred when attempting to access the socket. See the Remarks section for more information. </exception>
      <exception cref="T:System.ObjectDisposedException">The <see cref="T:System.Net.Sockets.Socket" /> has been closed. </exception>
      <exception cref="T:System.Security.SecurityException">A caller higher in the call stack does not have permission for the requested operation. </exception>
      <exception cref="T:System.InvalidOperationException">The <see cref="T:System.Net.Sockets.Socket" /> is <see cref="M:System.Net.Sockets.Socket.Listen(System.Int32)" />ing.</exception>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Diagnostics.PerformanceCounterPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Net.SocketPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:System.Net.Sockets.Socket.Connect(System.Net.IPAddress,System.Int32)">
      <summary>Establishes a connection to a remote host. The host is specified by an IP address and a port number.</summary>
      <param name="address">The IP address of the remote host.</param>
      <param name="port">The port number of the remote host.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="address" /> is null. </exception>
      <exception cref="T:System.ArgumentOutOfRangeException">The port number is not valid.</exception>
      <exception cref="T:System.Net.Sockets.SocketException">An error occurred when attempting to access the socket. See the Remarks section for more information. </exception>
      <exception cref="T:System.ObjectDisposedException">The <see cref="T:System.Net.Sockets.Socket" /> has been closed. </exception>
      <exception cref="T:System.NotSupportedException">This method is valid for sockets in the <see cref="F:System.Net.Sockets.AddressFamily.InterNetwork" /> or <see cref="F:System.Net.Sockets.AddressFamily.InterNetworkV6" /> families.</exception>
      <exception cref="T:System.ArgumentException">The length of <paramref name="address" /> is zero.</exception>
      <exception cref="T:System.InvalidOperationException">The <see cref="T:System.Net.Sockets.Socket" /> is <see cref="M:System.Net.Sockets.Socket.Listen(System.Int32)" />ing.</exception>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Diagnostics.PerformanceCounterPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Net.SocketPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:System.Net.Sockets.Socket.Connect(System.Net.IPAddress[],System.Int32)">
      <summary>Establishes a connection to a remote host. The host is specified by an array of IP addresses and a port number.</summary>
      <param name="addresses">The IP addresses of the remote host.</param>
      <param name="port">The port number of the remote host.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="addresses" /> is null. </exception>
      <exception cref="T:System.ArgumentOutOfRangeException">The port number is not valid.</exception>
      <exception cref="T:System.Net.Sockets.SocketException">An error occurred when attempting to access the socket. See the Remarks section for more information. </exception>
      <exception cref="T:System.ObjectDisposedException">The <see cref="T:System.Net.Sockets.Socket" /> has been closed. </exception>
      <exception cref="T:System.NotSupportedException">This method is valid for sockets in the <see cref="F:System.Net.Sockets.AddressFamily.InterNetwork" /> or <see cref="F:System.Net.Sockets.AddressFamily.InterNetworkV6" /> families.</exception>
      <exception cref="T:System.ArgumentException">The length of <paramref name="address" /> is zero.</exception>
      <exception cref="T:System.InvalidOperationException">The <see cref="T:System.Net.Sockets.Socket" /> is <see cref="M:System.Net.Sockets.Socket.Listen(System.Int32)" />ing.</exception>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Diagnostics.PerformanceCounterPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Net.SocketPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:System.Net.Sockets.Socket.Connect(System.String,System.Int32)">
      <summary>Establishes a connection to a remote host. The host is specified by a host name and a port number.</summary>
      <param name="host">The name of the remote host.</param>
      <param name="port">The port number of the remote host.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="host" /> is null. </exception>
      <exception cref="T:System.ArgumentOutOfRangeException">The port number is not valid.</exception>
      <exception cref="T:System.Net.Sockets.SocketException">An error occurred when attempting to access the socket. See the Remarks section for more information. </exception>
      <exception cref="T:System.ObjectDisposedException">The <see cref="T:System.Net.Sockets.Socket" /> has been closed. </exception>
      <exception cref="T:System.NotSupportedException">This method is valid for sockets in the <see cref="F:System.Net.Sockets.AddressFamily.InterNetwork" /> or <see cref="F:System.Net.Sockets.AddressFamily.InterNetworkV6" /> families.</exception>
      <exception cref="T:System.InvalidOperationException">The <see cref="T:System.Net.Sockets.Socket" /> is <see cref="M:System.Net.Sockets.Socket.Listen(System.Int32)" />ing.</exception>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Diagnostics.PerformanceCounterPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Net.SocketPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:System.Net.Sockets.Socket.ConnectAsync(System.Net.Sockets.SocketAsyncEventArgs)">
      <summary>Begins an asynchronous request for a remote host connection.</summary>
      <returns>Returns true if the I/O operation is pending. The <see cref="E:System.Net.Sockets.SocketAsyncEventArgs.Completed" /> event on the <paramref name="e" /> parameter will be raised upon completion of the operation. Returns false if the I/O operation completed synchronously. In this case, The <see cref="E:System.Net.Sockets.SocketAsyncEventArgs.Completed" /> event on the <paramref name="e" /> parameter will not be raised and the <paramref name="e" /> object passed as a parameter may be examined immediately after the method call returns to retrieve the result of the operation. </returns>
      <param name="e">The <see cref="T:System.Net.Sockets.SocketAsyncEventArgs" /> object to use for this asynchronous socket operation.</param>
      <exception cref="T:System.ArgumentException">An argument is not valid. This exception occurs if multiple buffers are specified, the <see cref="P:System.Net.Sockets.SocketAsyncEventArgs.BufferList" /> property is not null. </exception>
      <exception cref="T:System.ArgumentNullException">The <paramref name="e" /> parameter cannot be null and the <see cref="P:System.Net.Sockets.SocketAsyncEventArgs.RemoteEndPoint" /> cannot be null.</exception>
      <exception cref="T:System.InvalidOperationException">The <see cref="T:System.Net.Sockets.Socket" /> is listening or a socket operation was already in progress using the <see cref="T:System.Net.Sockets.SocketAsyncEventArgs" /> object specified in the <paramref name="e" /> parameter.</exception>
      <exception cref="T:System.Net.Sockets.SocketException">An error occurred when attempting to access the socket. See the Remarks section for more information.</exception>
      <exception cref="T:System.NotSupportedException">Windows XP or later is required for this method. This exception also occurs if the local endpoint and the <see cref="P:System.Net.Sockets.SocketAsyncEventArgs.RemoteEndPoint" /> are not the same address family.</exception>
      <exception cref="T:System.ObjectDisposedException">The <see cref="T:System.Net.Sockets.Socket" /> has been closed. </exception>
      <exception cref="T:System.Security.SecurityException">A caller higher in the call stack does not have permission for the requested operation.</exception>
    </member>
    <member name="M:System.Net.Sockets.Socket.ConnectAsync(System.Net.Sockets.SocketType,System.Net.Sockets.ProtocolType,System.Net.Sockets.SocketAsyncEventArgs)">
      <summary>Begins an asynchronous request for a remote host connection.</summary>
      <returns>Returns true if the I/O operation is pending. The <see cref="E:System.Net.Sockets.SocketAsyncEventArgs.Completed" /> event on the <paramref name="e" /> parameter will be raised upon completion of the operation. Returns false if the I/O operation completed synchronously. In this case, The <see cref="E:System.Net.Sockets.SocketAsyncEventArgs.Completed" /> event on the <paramref name="e" /> parameter will not be raised and the <paramref name="e" /> object passed as a parameter may be examined immediately after the method call returns to retrieve the result of the operation. </returns>
      <param name="socketType">One of the <see cref="T:System.Net.Sockets.SocketType" /> values.</param>
      <param name="protocolType">One of the <see cref="T:System.Net.Sockets.ProtocolType" /> values.</param>
      <param name="e">The <see cref="T:System.Net.Sockets.SocketAsyncEventArgs" /> object to use for this asynchronous socket operation.</param>
      <exception cref="T:System.ArgumentException">An argument is not valid. This exception occurs if multiple buffers are specified, the <see cref="P:System.Net.Sockets.SocketAsyncEventArgs.BufferList" /> property is not null. </exception>
      <exception cref="T:System.ArgumentNullException">The <paramref name="e" /> parameter cannot be null and the <see cref="P:System.Net.Sockets.SocketAsyncEventArgs.RemoteEndPoint" /> cannot be null.</exception>
      <exception cref="T:System.InvalidOperationException">The <see cref="T:System.Net.Sockets.Socket" /> is listening or a socket operation was already in progress using the <see cref="T:System.Net.Sockets.SocketAsyncEventArgs" /> object specified in the <paramref name="e" /> parameter.</exception>
      <exception cref="T:System.Net.Sockets.SocketException">An error occurred when attempting to access the socket. See the Remarks section for more information.</exception>
      <exception cref="T:System.NotSupportedException">Windows XP or later is required for this method. This exception also occurs if the local endpoint and the <see cref="P:System.Net.Sockets.SocketAsyncEventArgs.RemoteEndPoint" /> are not the same address family.</exception>
      <exception cref="T:System.ObjectDisposedException">The <see cref="T:System.Net.Sockets.Socket" /> has been closed. </exception>
      <exception cref="T:System.Security.SecurityException">A caller higher in the call stack does not have permission for the requested operation.</exception>
    </member>
    <member name="P:System.Net.Sockets.Socket.Connected">
      <summary>Gets a value that indicates whether a <see cref="T:System.Net.Sockets.Socket" /> is connected to a remote host as of the last <see cref="Overload:System.Net.Sockets.Socket.Send" /> or <see cref="Overload:System.Net.Sockets.Socket.Receive" /> operation.</summary>
      <returns>true if the <see cref="T:System.Net.Sockets.Socket" /> was connected to a remote resource as of the most recent operation; otherwise, false.</returns>
    </member>
    <member name="M:System.Net.Sockets.Socket.Disconnect(System.Boolean)">
      <summary>Closes the socket connection and allows reuse of the socket.</summary>
      <param name="reuseSocket">true if this socket can be reused after the current connection is closed; otherwise, false. </param>
      <exception cref="T:System.PlatformNotSupportedException">This method requires Windows 2000 or earlier, or the exception will be thrown.</exception>
      <exception cref="T:System.ObjectDisposedException">The <see cref="T:System.Net.Sockets.Socket" /> object has been closed. </exception>
      <exception cref="T:System.Net.Sockets.SocketException">An error occurred when attempting to access the socket. See the Remarks section for more information. </exception>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:System.Net.Sockets.Socket.DisconnectAsync(System.Net.Sockets.SocketAsyncEventArgs)">
      <summary>Begins an asynchronous request to disconnect from a remote endpoint.</summary>
      <returns>Returns true if the I/O operation is pending. The <see cref="E:System.Net.Sockets.SocketAsyncEventArgs.Completed" /> event on the <paramref name="e" /> parameter will be raised upon completion of the operation. Returns false if the I/O operation completed synchronously. In this case, The <see cref="E:System.Net.Sockets.SocketAsyncEventArgs.Completed" /> event on the <paramref name="e" /> parameter will not be raised and the <paramref name="e" /> object passed as a parameter may be examined immediately after the method call returns to retrieve the result of the operation.</returns>
      <param name="e">The <see cref="T:System.Net.Sockets.SocketAsyncEventArgs" /> object to use for this asynchronous socket operation.</param>
      <exception cref="T:System.ArgumentNullException">The <paramref name="e" /> parameter cannot be null.</exception>
      <exception cref="T:System.InvalidOperationException">A socket operation was already in progress using the <see cref="T:System.Net.Sockets.SocketAsyncEventArgs" /> object specified in the <paramref name="e" /> parameter.</exception>
      <exception cref="T:System.NotSupportedException">Windows XP or later is required for this method.</exception>
      <exception cref="T:System.ObjectDisposedException">The <see cref="T:System.Net.Sockets.Socket" /> has been closed. </exception>
      <exception cref="T:System.Net.Sockets.SocketException">An error occurred when attempting to access the socket. </exception>
    </member>
    <member name="M:System.Net.Sockets.Socket.Dispose">
      <summary>Releases all resources used by the current instance of the <see cref="T:System.Net.Sockets.Socket" /> class.</summary>
    </member>
    <member name="M:System.Net.Sockets.Socket.Dispose(System.Boolean)">
      <summary>Releases the unmanaged resources used by the <see cref="T:System.Net.Sockets.Socket" />, and optionally disposes of the managed resources.</summary>
      <param name="disposing">true to release both managed and unmanaged resources; false to releases only unmanaged resources. </param>
    </member>
    <member name="P:System.Net.Sockets.Socket.DontFragment">
      <summary>Gets or sets a <see cref="T:System.Boolean" /> value that specifies whether the <see cref="T:System.Net.Sockets.Socket" /> allows Internet Protocol (IP) datagrams to be fragmented.</summary>
      <returns>true if the <see cref="T:System.Net.Sockets.Socket" /> allows datagram fragmentation; otherwise, false. The default is true.</returns>
      <exception cref="T:System.NotSupportedException">This property can be set only for sockets in the <see cref="F:System.Net.Sockets.AddressFamily.InterNetwork" /> or <see cref="F:System.Net.Sockets.AddressFamily.InterNetworkV6" /> families. </exception>
      <exception cref="T:System.Net.Sockets.SocketException">An error occurred when attempting to access the socket. See the Remarks section for more information. </exception>
      <exception cref="T:System.ObjectDisposedException">The <see cref="T:System.Net.Sockets.Socket" /> has been closed. </exception>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:System.Net.Sockets.Socket.DuplicateAndClose(System.Int32)">
      <summary>Duplicates the socket reference for the target process, and closes the socket for this process.</summary>
      <returns>The socket reference to be passed to the target process.</returns>
      <param name="targetProcessId">The ID of the target process where a duplicate of the socket reference is created.</param>
      <exception cref="T:System.Net.Sockets.SocketException">
        <paramref name="targetProcessID" /> is not a valid process id.-or- Duplication of the socket reference failed. </exception>
    </member>
    <member name="P:System.Net.Sockets.Socket.EnableBroadcast">
      <summary>Gets or sets a <see cref="T:System.Boolean" /> value that specifies whether the <see cref="T:System.Net.Sockets.Socket" /> can send or receive broadcast packets.</summary>
      <returns>true if the <see cref="T:System.Net.Sockets.Socket" /> allows broadcast packets; otherwise, false. The default is false.</returns>
      <exception cref="T:System.Net.Sockets.SocketException">This option is valid for a datagram socket only. </exception>
      <exception cref="T:System.ObjectDisposedException">The <see cref="T:System.Net.Sockets.Socket" /> has been closed. </exception>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:System.Net.Sockets.Socket.EndAccept(System.Byte[]@,System.IAsyncResult)">
      <summary>Asynchronously accepts an incoming connection attempt and creates a new <see cref="T:System.Net.Sockets.Socket" /> object to handle remote host communication. This method returns a buffer that contains the initial data transferred.</summary>
      <returns>A <see cref="T:System.Net.Sockets.Socket" /> object to handle communication with the remote host.</returns>
      <param name="buffer">An array of type <see cref="T:System.Byte" /> that contains the bytes transferred. </param>
      <param name="asyncResult">An <see cref="T:System.IAsyncResult" /> object that stores state information for this asynchronous operation as well as any user defined data. </param>
      <exception cref="T:System.NotSupportedException">Windows NT is required for this method. </exception>
      <exception cref="T:System.ObjectDisposedException">The <see cref="T:System.Net.Sockets.Socket" /> object has been closed. </exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="asyncResult" /> is empty. </exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="asyncResult" /> was not created by a call to <see cref="M:System.Net.Sockets.Socket.BeginAccept(System.AsyncCallback,System.Object)" />. </exception>
      <exception cref="T:System.InvalidOperationException">
        <see cref="M:System.Net.Sockets.Socket.EndAccept(System.IAsyncResult)" /> method was previously called. </exception>
      <exception cref="T:System.Net.Sockets.SocketException">An error occurred when attempting to access the <see cref="T:System.Net.Sockets.Socket" /> See the Remarks section for more information. </exception>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
        <IPermission class="System.Diagnostics.PerformanceCounterPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:System.Net.Sockets.Socket.EndAccept(System.Byte[]@,System.Int32@,System.IAsyncResult)">
      <summary>Asynchronously accepts an incoming connection attempt and creates a new <see cref="T:System.Net.Sockets.Socket" /> object to handle remote host communication. This method returns a buffer that contains the initial data and the number of bytes transferred.</summary>
      <returns>A <see cref="T:System.Net.Sockets.Socket" /> object to handle communication with the remote host.</returns>
      <param name="buffer">An array of type <see cref="T:System.Byte" /> that contains the bytes transferred. </param>
      <param name="bytesTransferred">The number of bytes transferred. </param>
      <param name="asyncResult">An <see cref="T:System.IAsyncResult" /> object that stores state information for this asynchronous operation as well as any user defined data. </param>
      <exception cref="T:System.NotSupportedException">Windows NT is required for this method. </exception>
      <exception cref="T:System.ObjectDisposedException">The <see cref="T:System.Net.Sockets.Socket" /> object has been closed. </exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="asyncResult" /> is empty. </exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="asyncResult" /> was not created by a call to <see cref="M:System.Net.Sockets.Socket.BeginAccept(System.AsyncCallback,System.Object)" />. </exception>
      <exception cref="T:System.InvalidOperationException">
        <see cref="M:System.Net.Sockets.Socket.EndAccept(System.IAsyncResult)" /> method was previously called. </exception>
      <exception cref="T:System.Net.Sockets.SocketException">An error occurred when attempting to access the <see cref="T:System.Net.Sockets.Socket" />. See the Remarks section for more information. </exception>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
        <IPermission class="System.Diagnostics.PerformanceCounterPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:System.Net.Sockets.Socket.EndAccept(System.IAsyncResult)">
      <summary>Asynchronously accepts an incoming connection attempt and creates a new <see cref="T:System.Net.Sockets.Socket" /> to handle remote host communication.</summary>
      <returns>A <see cref="T:System.Net.Sockets.Socket" /> to handle communication with the remote host.</returns>
      <param name="asyncResult">An <see cref="T:System.IAsyncResult" /> that stores state information for this asynchronous operation as well as any user defined data. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="asyncResult" /> is null. </exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="asyncResult" /> was not created by a call to <see cref="M:System.Net.Sockets.Socket.BeginAccept(System.AsyncCallback,System.Object)" />. </exception>
      <exception cref="T:System.Net.Sockets.SocketException">An error occurred when attempting to access the socket. See the Remarks section for more information. </exception>
      <exception cref="T:System.ObjectDisposedException">The <see cref="T:System.Net.Sockets.Socket" /> has been closed. </exception>
      <exception cref="T:System.InvalidOperationException">
        <see cref="M:System.Net.Sockets.Socket.EndAccept(System.IAsyncResult)" /> method was previously called. </exception>
      <exception cref="T:System.NotSupportedException">Windows NT is required for this method. </exception>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
        <IPermission class="System.Diagnostics.PerformanceCounterPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:System.Net.Sockets.Socket.EndConnect(System.IAsyncResult)">
      <summary>Ends a pending asynchronous connection request.</summary>
      <param name="asyncResult">An <see cref="T:System.IAsyncResult" /> that stores state information and any user defined data for this asynchronous operation. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="asyncResult" /> is null. </exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="asyncResult" /> was not returned by a call to the <see cref="M:System.Net.Sockets.Socket.BeginConnect(System.Net.EndPoint,System.AsyncCallback,System.Object)" /> method. </exception>
      <exception cref="T:System.InvalidOperationException">
        <see cref="M:System.Net.Sockets.Socket.EndConnect(System.IAsyncResult)" /> was previously called for the asynchronous connection. </exception>
      <exception cref="T:System.Net.Sockets.SocketException">An error occurred when attempting to access the socket. See the Remarks section for more information. </exception>
      <exception cref="T:System.ObjectDisposedException">The <see cref="T:System.Net.Sockets.Socket" /> has been closed. </exception>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
      </PermissionSet>
    </member>
    <member name="M:System.Net.Sockets.Socket.EndDisconnect(System.IAsyncResult)">
      <summary>Ends a pending asynchronous disconnect request.</summary>
      <param name="asyncResult">An <see cref="T:System.IAsyncResult" /> object that stores state information and any user-defined data for this asynchronous operation. </param>
      <exception cref="T:System.NotSupportedException">The operating system is Windows 2000 or earlier, and this method requires Windows XP. </exception>
      <exception cref="T:System.ObjectDisposedException">The <see cref="T:System.Net.Sockets.Socket" /> object has been closed. </exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="asyncResult" /> is null. </exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="asyncResult" /> was not returned by a call to the <see cref="M:System.Net.Sockets.Socket.BeginDisconnect(System.Boolean,System.AsyncCallback,System.Object)" /> method. </exception>
      <exception cref="T:System.InvalidOperationException">
        <see cref="M:System.Net.Sockets.Socket.EndDisconnect(System.IAsyncResult)" /> was previously called for the asynchronous connection. </exception>
      <exception cref="T:System.Net.Sockets.SocketException">An error occurred when attempting to access the socket. See the Remarks section for more information. </exception>
      <exception cref="T:System.Net.WebException">The disconnect request has timed out. </exception>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
      </PermissionSet>
    </member>
    <member name="M:System.Net.Sockets.Socket.EndReceive(System.IAsyncResult)">
      <summary>Ends a pending asynchronous read.</summary>
      <returns>The number of bytes received.</returns>
      <param name="asyncResult">An <see cref="T:System.IAsyncResult" /> that stores state information and any user defined data for this asynchronous operation. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="asyncResult" /> is null. </exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="asyncResult" /> was not returned by a call to the <see cref="M:System.Net.Sockets.Socket.BeginReceive(System.Byte[],System.Int32,System.Int32,System.Net.Sockets.SocketFlags,System.AsyncCallback,System.Object)" /> method. </exception>
      <exception cref="T:System.InvalidOperationException">
        <see cref="M:System.Net.Sockets.Socket.EndReceive(System.IAsyncResult)" /> was previously called for the asynchronous read. </exception>
      <exception cref="T:System.Net.Sockets.SocketException">An error occurred when attempting to access the socket. See the Remarks section for more information. </exception>
      <exception cref="T:System.ObjectDisposedException">The <see cref="T:System.Net.Sockets.Socket" /> has been closed. </exception>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
        <IPermission class="System.Diagnostics.PerformanceCounterPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:System.Net.Sockets.Socket.EndReceive(System.IAsyncResult,System.Net.Sockets.SocketError@)">
      <summary>Ends a pending asynchronous read.</summary>
      <returns>The number of bytes received.</returns>
      <param name="asyncResult">An <see cref="T:System.IAsyncResult" /> that stores state information and any user defined data for this asynchronous operation.</param>
      <param name="errorCode">A <see cref="T:System.Net.Sockets.SocketError" /> object that stores the socket error.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="asyncResult" /> is null. </exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="asyncResult" /> was not returned by a call to the <see cref="M:System.Net.Sockets.Socket.BeginReceive(System.Byte[],System.Int32,System.Int32,System.Net.Sockets.SocketFlags,System.AsyncCallback,System.Object)" /> method. </exception>
      <exception cref="T:System.InvalidOperationException">
        <see cref="M:System.Net.Sockets.Socket.EndReceive(System.IAsyncResult)" /> was previously called for the asynchronous read. </exception>
      <exception cref="T:System.Net.Sockets.SocketException">An error occurred when attempting to access the socket. See the Remarks section for more information. </exception>
      <exception cref="T:System.ObjectDisposedException">The <see cref="T:System.Net.Sockets.Socket" /> has been closed. </exception>
    </member>
    <member name="M:System.Net.Sockets.Socket.EndReceiveFrom(System.IAsyncResult,System.Net.EndPoint@)">
      <summary>Ends a pending asynchronous read from a specific endpoint.</summary>
      <returns>If successful, the number of bytes received. If unsuccessful, returns 0.</returns>
      <param name="asyncResult">An <see cref="T:System.IAsyncResult" /> that stores state information and any user defined data for this asynchronous operation. </param>
      <param name="endPoint">The source <see cref="T:System.Net.EndPoint" />. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="asyncResult" /> is null. </exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="asyncResult" /> was not returned by a call to the <see cref="M:System.Net.Sockets.Socket.BeginReceiveFrom(System.Byte[],System.Int32,System.Int32,System.Net.Sockets.SocketFlags,System.Net.EndPoint@,System.AsyncCallback,System.Object)" /> method. </exception>
      <exception cref="T:System.InvalidOperationException">
        <see cref="M:System.Net.Sockets.Socket.EndReceiveFrom(System.IAsyncResult,System.Net.EndPoint@)" /> was previously called for the asynchronous read. </exception>
      <exception cref="T:System.Net.Sockets.SocketException">An error occurred when attempting to access the socket. See the Remarks section for more information. </exception>
      <exception cref="T:System.ObjectDisposedException">The <see cref="T:System.Net.Sockets.Socket" /> has been closed. </exception>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
        <IPermission class="System.Diagnostics.PerformanceCounterPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:System.Net.Sockets.Socket.EndReceiveMessageFrom(System.IAsyncResult,System.Net.Sockets.SocketFlags@,System.Net.EndPoint@,System.Net.Sockets.IPPacketInformation@)">
      <summary>Ends a pending asynchronous read from a specific endpoint. This method also reveals more information about the packet than <see cref="M:System.Net.Sockets.Socket.EndReceiveFrom(System.IAsyncResult,System.Net.EndPoint@)" />.</summary>
      <returns>If successful, the number of bytes received. If unsuccessful, returns 0.</returns>
      <param name="asyncResult">An <see cref="T:System.IAsyncResult" /> that stores state information and any user defined data for this asynchronous operation.</param>
      <param name="socketFlags">A bitwise combination of the <see cref="T:System.Net.Sockets.SocketFlags" /> values for the received packet.</param>
      <param name="endPoint">The source <see cref="T:System.Net.EndPoint" />.</param>
      <param name="ipPacketInformation">The <see cref="T:System.Net.IPAddress" /> and interface of the received packet.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="asyncResult" /> is null-or- <paramref name="endPoint" /> is null. </exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="asyncResult" /> was not returned by a call to the <see cref="M:System.Net.Sockets.Socket.BeginReceiveMessageFrom(System.Byte[],System.Int32,System.Int32,System.Net.Sockets.SocketFlags,System.Net.EndPoint@,System.AsyncCallback,System.Object)" /> method. </exception>
      <exception cref="T:System.InvalidOperationException">
        <see cref="M:System.Net.Sockets.Socket.EndReceiveMessageFrom(System.IAsyncResult,System.Net.Sockets.SocketFlags@,System.Net.EndPoint@,System.Net.Sockets.IPPacketInformation@)" /> was previously called for the asynchronous read. </exception>
      <exception cref="T:System.Net.Sockets.SocketException">An error occurred when attempting to access the socket. See the Remarks section for more information. </exception>
      <exception cref="T:System.ObjectDisposedException">The <see cref="T:System.Net.Sockets.Socket" /> has been closed. </exception>
    </member>
    <member name="M:System.Net.Sockets.Socket.EndSend(System.IAsyncResult)">
      <summary>Ends a pending asynchronous send.</summary>
      <returns>If successful, the number of bytes sent to the <see cref="T:System.Net.Sockets.Socket" />; otherwise, an invalid <see cref="T:System.Net.Sockets.Socket" /> error.</returns>
      <param name="asyncResult">An <see cref="T:System.IAsyncResult" /> that stores state information for this asynchronous operation. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="asyncResult" /> is null. </exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="asyncResult" /> was not returned by a call to the <see cref="M:System.Net.Sockets.Socket.BeginSend(System.Byte[],System.Int32,System.Int32,System.Net.Sockets.SocketFlags,System.AsyncCallback,System.Object)" /> method. </exception>
      <exception cref="T:System.InvalidOperationException">
        <see cref="M:System.Net.Sockets.Socket.EndSend(System.IAsyncResult)" /> was previously called for the asynchronous send. </exception>
      <exception cref="T:System.Net.Sockets.SocketException">An error occurred when attempting to access the socket. See the Remarks section for more information. </exception>
      <exception cref="T:System.ObjectDisposedException">The <see cref="T:System.Net.Sockets.Socket" /> has been closed. </exception>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
        <IPermission class="System.Diagnostics.PerformanceCounterPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:System.Net.Sockets.Socket.EndSend(System.IAsyncResult,System.Net.Sockets.SocketError@)">
      <summary>Ends a pending asynchronous send.</summary>
      <returns>If successful, the number of bytes sent to the <see cref="T:System.Net.Sockets.Socket" />; otherwise, an invalid <see cref="T:System.Net.Sockets.Socket" /> error.</returns>
      <param name="asyncResult">An <see cref="T:System.IAsyncResult" /> that stores state information for this asynchronous operation.</param>
      <param name="errorCode">A <see cref="T:System.Net.Sockets.SocketError" /> object that stores the socket error.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="asyncResult" /> is null. </exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="asyncResult" /> was not returned by a call to the <see cref="M:System.Net.Sockets.Socket.BeginSend(System.Byte[],System.Int32,System.Int32,System.Net.Sockets.SocketFlags,System.AsyncCallback,System.Object)" /> method. </exception>
      <exception cref="T:System.InvalidOperationException">
        <see cref="M:System.Net.Sockets.Socket.EndSend(System.IAsyncResult)" /> was previously called for the asynchronous send. </exception>
      <exception cref="T:System.Net.Sockets.SocketException">An error occurred when attempting to access the socket. See the Remarks section for more information. </exception>
      <exception cref="T:System.ObjectDisposedException">The <see cref="T:System.Net.Sockets.Socket" /> has been closed. </exception>
    </member>
    <member name="M:System.Net.Sockets.Socket.EndSendFile(System.IAsyncResult)">
      <summary>Ends a pending asynchronous send of a file.</summary>
      <param name="asyncResult">An <see cref="T:System.IAsyncResult" /> object that stores state information for this asynchronous operation. </param>
      <exception cref="T:System.NotSupportedException">Windows NT is required for this method. </exception>
      <exception cref="T:System.ObjectDisposedException">The <see cref="T:System.Net.Sockets.Socket" /> object has been closed. </exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="asyncResult" /> is empty. </exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="asyncResult" /> was not returned by a call to the <see cref="M:System.Net.Sockets.Socket.BeginSendFile(System.String,System.AsyncCallback,System.Object)" /> method. </exception>
      <exception cref="T:System.InvalidOperationException">
        <see cref="M:System.Net.Sockets.Socket.EndSendFile(System.IAsyncResult)" /> was previously called for the asynchronous <see cref="M:System.Net.Sockets.Socket.BeginSendFile(System.String,System.AsyncCallback,System.Object)" />. </exception>
      <exception cref="T:System.Net.Sockets.SocketException">An error occurred when attempting to access the socket. See remarks section below. </exception>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
      </PermissionSet>
    </member>
    <member name="M:System.Net.Sockets.Socket.EndSendTo(System.IAsyncResult)">
      <summary>Ends a pending asynchronous send to a specific location.</summary>
      <returns>If successful, the number of bytes sent; otherwise, an invalid <see cref="T:System.Net.Sockets.Socket" /> error.</returns>
      <param name="asyncResult">An <see cref="T:System.IAsyncResult" /> that stores state information and any user defined data for this asynchronous operation. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="asyncResult" /> is null. </exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="asyncResult" /> was not returned by a call to the <see cref="M:System.Net.Sockets.Socket.BeginSendTo(System.Byte[],System.Int32,System.Int32,System.Net.Sockets.SocketFlags,System.Net.EndPoint,System.AsyncCallback,System.Object)" /> method. </exception>
      <exception cref="T:System.InvalidOperationException">
        <see cref="M:System.Net.Sockets.Socket.EndSendTo(System.IAsyncResult)" /> was previously called for the asynchronous send. </exception>
      <exception cref="T:System.Net.Sockets.SocketException">An error occurred when attempting to access the socket. See the Remarks section for more information. </exception>
      <exception cref="T:System.ObjectDisposedException">The <see cref="T:System.Net.Sockets.Socket" /> has been closed. </exception>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
        <IPermission class="System.Diagnostics.PerformanceCounterPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="P:System.Net.Sockets.Socket.ExclusiveAddressUse">
      <summary>Gets or sets a <see cref="T:System.Boolean" /> value that specifies whether the <see cref="T:System.Net.Sockets.Socket" /> allows only one process to bind to a port.</summary>
      <returns>true if the <see cref="T:System.Net.Sockets.Socket" /> allows only one socket to bind to a specific port; otherwise, false. The default is true for Windows Server 2003 and Windows XP Service Pack 2, and false for all other versions.</returns>
      <exception cref="T:System.Net.Sockets.SocketException">An error occurred when attempting to access the socket.</exception>
      <exception cref="T:System.ObjectDisposedException">The <see cref="T:System.Net.Sockets.Socket" /> has been closed. </exception>
      <exception cref="T:System.InvalidOperationException">
        <see cref="M:System.Net.Sockets.Socket.Bind(System.Net.EndPoint)" /> has been called for this <see cref="T:System.Net.Sockets.Socket" />.</exception>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:System.Net.Sockets.Socket.Finalize">
      <summary>Frees resources used by the <see cref="T:System.Net.Sockets.Socket" /> class.</summary>
    </member>
    <member name="M:System.Net.Sockets.Socket.GetSocketOption(System.Net.Sockets.SocketOptionLevel,System.Net.Sockets.SocketOptionName)">
      <summary>Returns the value of a specified <see cref="T:System.Net.Sockets.Socket" /> option, represented as an object.</summary>
      <returns>An object that represents the value of the option. When the <paramref name="optionName" /> parameter is set to <see cref="F:System.Net.Sockets.SocketOptionName.Linger" /> the return value is an instance of the <see cref="T:System.Net.Sockets.LingerOption" /> class. When <paramref name="optionName" /> is set to <see cref="F:System.Net.Sockets.SocketOptionName.AddMembership" /> or <see cref="F:System.Net.Sockets.SocketOptionName.DropMembership" />, the return value is an instance of the <see cref="T:System.Net.Sockets.MulticastOption" /> class. When <paramref name="optionName" /> is any other value, the return value is an integer.</returns>
      <param name="optionLevel">One of the <see cref="T:System.Net.Sockets.SocketOptionLevel" /> values. </param>
      <param name="optionName">One of the <see cref="T:System.Net.Sockets.SocketOptionName" /> values. </param>
      <exception cref="T:System.Net.Sockets.SocketException">An error occurred when attempting to access the socket. See the Remarks section for more information.-or-<paramref name="optionName" /> was set to the unsupported value <see cref="F:System.Net.Sockets.SocketOptionName.MaxConnections" />.</exception>
      <exception cref="T:System.ObjectDisposedException">The <see cref="T:System.Net.Sockets.Socket" /> has been closed. </exception>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
      </PermissionSet>
    </member>
    <member name="M:System.Net.Sockets.Socket.GetSocketOption(System.Net.Sockets.SocketOptionLevel,System.Net.Sockets.SocketOptionName,System.Byte[])">
      <summary>Returns the specified <see cref="T:System.Net.Sockets.Socket" /> option setting, represented as a byte array.</summary>
      <param name="optionLevel">One of the <see cref="T:System.Net.Sockets.SocketOptionLevel" /> values. </param>
      <param name="optionName">One of the <see cref="T:System.Net.Sockets.SocketOptionName" /> values. </param>
      <param name="optionValue">An array of type <see cref="T:System.Byte" /> that is to receive the option setting. </param>
      <exception cref="T:System.Net.Sockets.SocketException">An error occurred when attempting to access the socket. See the Remarks section for more information. - or -In .NET Compact Framework applications, the Windows CE default buffer space is set to 32768 bytes. You can change the per socket buffer space by calling <see cref="Overload:System.Net.Sockets.Socket.SetSocketOption" />.</exception>
      <exception cref="T:System.ObjectDisposedException">The <see cref="T:System.Net.Sockets.Socket" /> has been closed. </exception>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
      </PermissionSet>
    </member>
    <member name="M:System.Net.Sockets.Socket.GetSocketOption(System.Net.Sockets.SocketOptionLevel,System.Net.Sockets.SocketOptionName,System.Int32)">
      <summary>Returns the value of the specified <see cref="T:System.Net.Sockets.Socket" /> option in an array.</summary>
      <returns>An array of type <see cref="T:System.Byte" /> that contains the value of the socket option.</returns>
      <param name="optionLevel">One of the <see cref="T:System.Net.Sockets.SocketOptionLevel" /> values. </param>
      <param name="optionName">One of the <see cref="T:System.Net.Sockets.SocketOptionName" /> values. </param>
      <param name="optionLength">The length, in bytes, of the expected return value. </param>
      <exception cref="T:System.Net.Sockets.SocketException">An error occurred when attempting to access the socket. See the Remarks section for more information. - or -In .NET Compact Framework applications, the Windows CE default buffer space is set to 32768 bytes. You can change the per socket buffer space by calling <see cref="Overload:System.Net.Sockets.Socket.SetSocketOption" />.</exception>
      <exception cref="T:System.ObjectDisposedException">The <see cref="T:System.Net.Sockets.Socket" /> has been closed. </exception>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
      </PermissionSet>
    </member>
    <member name="P:System.Net.Sockets.Socket.Handle">
      <summary>Gets the operating system handle for the <see cref="T:System.Net.Sockets.Socket" />.</summary>
      <returns>An <see cref="T:System.IntPtr" /> that represents the operating system handle for the <see cref="T:System.Net.Sockets.Socket" />.</returns>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:System.Net.Sockets.Socket.IOControl(System.Int32,System.Byte[],System.Byte[])">
      <summary>Sets low-level operating modes for the <see cref="T:System.Net.Sockets.Socket" /> using numerical control codes.</summary>
      <returns>The number of bytes in the <paramref name="optionOutValue" /> parameter.</returns>
      <param name="ioControlCode">An <see cref="T:System.Int32" /> value that specifies the control code of the operation to perform. </param>
      <param name="optionInValue">A <see cref="T:System.Byte" /> array that contains the input data required by the operation. </param>
      <param name="optionOutValue">A <see cref="T:System.Byte" /> array that contains the output data returned by the operation. </param>
      <exception cref="T:System.Net.Sockets.SocketException">An error occurred when attempting to access the socket. See the Remarks section for more information. </exception>
      <exception cref="T:System.ObjectDisposedException">The <see cref="T:System.Net.Sockets.Socket" /> has been closed. </exception>
      <exception cref="T:System.InvalidOperationException">An attempt was made to change the blocking mode without using the <see cref="P:System.Net.Sockets.Socket.Blocking" /> property. </exception>
      <exception cref="T:System.Security.SecurityException">A caller in the call stack does not have the required permissions. </exception>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:System.Net.Sockets.Socket.IOControl(System.Net.Sockets.IOControlCode,System.Byte[],System.Byte[])">
      <summary>Sets low-level operating modes for the <see cref="T:System.Net.Sockets.Socket" /> using the <see cref="T:System.Net.Sockets.IOControlCode" /> enumeration to specify control codes.</summary>
      <returns>The number of bytes in the <paramref name="optionOutValue" /> parameter.</returns>
      <param name="ioControlCode">A <see cref="T:System.Net.Sockets.IOControlCode" /> value that specifies the control code of the operation to perform. </param>
      <param name="optionInValue">An array of type <see cref="T:System.Byte" /> that contains the input data required by the operation. </param>
      <param name="optionOutValue">An array of type <see cref="T:System.Byte" /> that contains the output data returned by the operation. </param>
      <exception cref="T:System.Net.Sockets.SocketException">An error occurred when attempting to access the socket. See the Remarks section for more information. </exception>
      <exception cref="T:System.ObjectDisposedException">The <see cref="T:System.Net.Sockets.Socket" /> has been closed. </exception>
      <exception cref="T:System.InvalidOperationException">An attempt was made to change the blocking mode without using the <see cref="P:System.Net.Sockets.Socket.Blocking" /> property. </exception>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="P:System.Net.Sockets.Socket.IsBound">
      <summary>Gets a value that indicates whether the <see cref="T:System.Net.Sockets.Socket" /> is bound to a specific local port.</summary>
      <returns>true if the <see cref="T:System.Net.Sockets.Socket" /> is bound to a local port; otherwise, false.</returns>
    </member>
    <member name="P:System.Net.Sockets.Socket.LingerState">
      <summary>Gets or sets a value that specifies whether the <see cref="T:System.Net.Sockets.Socket" /> will delay closing a socket in an attempt to send all pending data.</summary>
      <returns>A <see cref="T:System.Net.Sockets.LingerOption" /> that specifies how to linger while closing a socket.</returns>
      <exception cref="T:System.Net.Sockets.SocketException">An error occurred when attempting to access the socket.</exception>
      <exception cref="T:System.ObjectDisposedException">The <see cref="T:System.Net.Sockets.Socket" /> has been closed. </exception>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:System.Net.Sockets.Socket.Listen(System.Int32)">
      <summary>Places a <see cref="T:System.Net.Sockets.Socket" /> in a listening state.</summary>
      <param name="backlog">The maximum length of the pending connections queue. </param>
      <exception cref="T:System.Net.Sockets.SocketException">An error occurred when attempting to access the socket. See the Remarks section for more information. </exception>
      <exception cref="T:System.ObjectDisposedException">The <see cref="T:System.Net.Sockets.Socket" /> has been closed. </exception>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
      </PermissionSet>
    </member>
    <member name="P:System.Net.Sockets.Socket.LocalEndPoint">
      <summary>Gets the local endpoint.</summary>
      <returns>The <see cref="T:System.Net.EndPoint" /> that the <see cref="T:System.Net.Sockets.Socket" /> is using for communications.</returns>
      <exception cref="T:System.Net.Sockets.SocketException">An error occurred when attempting to access the socket. See the Remarks section for more information. </exception>
      <exception cref="T:System.ObjectDisposedException">The <see cref="T:System.Net.Sockets.Socket" /> has been closed. </exception>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
      </PermissionSet>
    </member>
    <member name="P:System.Net.Sockets.Socket.MulticastLoopback">
      <summary>Gets or sets a value that specifies whether outgoing multicast packets are delivered to the sending application.</summary>
      <returns>true if the <see cref="T:System.Net.Sockets.Socket" /> receives outgoing multicast packets; otherwise, false.</returns>
      <exception cref="T:System.Net.Sockets.SocketException">An error occurred when attempting to access the socket.</exception>
      <exception cref="T:System.ObjectDisposedException">The <see cref="T:System.Net.Sockets.Socket" /> has been closed. </exception>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="P:System.Net.Sockets.Socket.NoDelay">
      <summary>Gets or sets a <see cref="T:System.Boolean" /> value that specifies whether the stream <see cref="T:System.Net.Sockets.Socket" /> is using the Nagle algorithm.</summary>
      <returns>false if the <see cref="T:System.Net.Sockets.Socket" /> uses the Nagle algorithm; otherwise, true. The default is false.</returns>
      <exception cref="T:System.Net.Sockets.SocketException">An error occurred when attempting to access the <see cref="T:System.Net.Sockets.Socket" />. See the Remarks section for more information. </exception>
      <exception cref="T:System.ObjectDisposedException">The <see cref="T:System.Net.Sockets.Socket" /> has been closed. </exception>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="P:System.Net.Sockets.Socket.OSSupportsIPv4">
      <summary>Indicates whether the underlying operating system and network adaptors support Internet Protocol version 4 (IPv4).</summary>
      <returns>true if the operating system and network adaptors support the IPv4 protocol; otherwise, false.</returns>
    </member>
    <member name="P:System.Net.Sockets.Socket.OSSupportsIPv6">
      <summary>Indicates whether the underlying operating system and network adaptors support Internet Protocol version 6 (IPv6).</summary>
      <returns>true if the operating system and network adaptors support the IPv6 protocol; otherwise, false.</returns>
    </member>
    <member name="M:System.Net.Sockets.Socket.Poll(System.Int32,System.Net.Sockets.SelectMode)">
      <summary>Determines the status of the <see cref="T:System.Net.Sockets.Socket" />.</summary>
      <returns>The status of the <see cref="T:System.Net.Sockets.Socket" /> based on the polling mode value passed in the <paramref name="mode" /> parameter.Mode Return Value <see cref="F:System.Net.Sockets.SelectMode.SelectRead" />true if <see cref="M:System.Net.Sockets.Socket.Listen(System.Int32)" /> has been called and a connection is pending; -or- true if data is available for reading; -or- true if the connection has been closed, reset, or terminated; otherwise, returns false. <see cref="F:System.Net.Sockets.SelectMode.SelectWrite" />true, if processing a <see cref="M:System.Net.Sockets.Socket.Connect(System.Net.EndPoint)" />, and the connection has succeeded; -or- true if data can be sent; otherwise, returns false. <see cref="F:System.Net.Sockets.SelectMode.SelectError" />true if processing a <see cref="M:System.Net.Sockets.Socket.Connect(System.Net.EndPoint)" /> that does not block, and the connection has failed; -or- true if <see cref="F:System.Net.Sockets.SocketOptionName.OutOfBandInline" /> is not set and out-of-band data is available; otherwise, returns false. </returns>
      <param name="microSeconds">The time to wait for a response, in microseconds. </param>
      <param name="mode">One of the <see cref="T:System.Net.Sockets.SelectMode" /> values. </param>
      <exception cref="T:System.NotSupportedException">The <paramref name="mode" /> parameter is not one of the <see cref="T:System.Net.Sockets.SelectMode" /> values. </exception>
      <exception cref="T:System.Net.Sockets.SocketException">An error occurred when attempting to access the socket. See remarks below. </exception>
      <exception cref="T:System.ObjectDisposedException">The <see cref="T:System.Net.Sockets.Socket" /> has been closed. </exception>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
      </PermissionSet>
    </member>
    <member name="P:System.Net.Sockets.Socket.ProtocolType">
      <summary>Gets the protocol type of the <see cref="T:System.Net.Sockets.Socket" />.</summary>
      <returns>One of the <see cref="T:System.Net.Sockets.ProtocolType" /> values.</returns>
    </member>
    <member name="M:System.Net.Sockets.Socket.Receive(System.Byte[])">
      <summary>Receives data from a bound <see cref="T:System.Net.Sockets.Socket" /> into a receive buffer.</summary>
      <returns>The number of bytes received.</returns>
      <param name="buffer">An array of type <see cref="T:System.Byte" /> that is the storage location for the received data. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="buffer" /> is null. </exception>
      <exception cref="T:System.Net.Sockets.SocketException">An error occurred when attempting to access the socket. See the Remarks section for more information. </exception>
      <exception cref="T:System.ObjectDisposedException">The <see cref="T:System.Net.Sockets.Socket" /> has been closed. </exception>
      <exception cref="T:System.Security.SecurityException">A caller in the call stack does not have the required permissions. </exception>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
        <IPermission class="System.Diagnostics.PerformanceCounterPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:System.Net.Sockets.Socket.Receive(System.Byte[],System.Int32,System.Int32,System.Net.Sockets.SocketFlags)">
      <summary>Receives the specified number of bytes from a bound <see cref="T:System.Net.Sockets.Socket" /> into the specified offset position of the receive buffer, using the specified <see cref="T:System.Net.Sockets.SocketFlags" />.</summary>
      <returns>The number of bytes received.</returns>
      <param name="buffer">An array of type <see cref="T:System.Byte" /> that is the storage location for received data. </param>
      <param name="offset">The location in <paramref name="buffer" /> to store the received data. </param>
      <param name="size">The number of bytes to receive. </param>
      <param name="socketFlags">A bitwise combination of the <see cref="T:System.Net.Sockets.SocketFlags" /> values. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="buffer" /> is null. </exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="offset" /> is less than 0.-or- <paramref name="offset" /> is greater than the length of <paramref name="buffer" />.-or- <paramref name="size" /> is less than 0.-or- <paramref name="size" /> is greater than the length of <paramref name="buffer" /> minus the value of the <paramref name="offset" /> parameter. </exception>
      <exception cref="T:System.Net.Sockets.SocketException">
        <paramref name="socketFlags" /> is not a valid combination of values.-or- The <see cref="P:System.Net.Sockets.Socket.LocalEndPoint" /> property was not set.-or- An operating system error occurs while accessing the <see cref="T:System.Net.Sockets.Socket" />. </exception>
      <exception cref="T:System.ObjectDisposedException">The <see cref="T:System.Net.Sockets.Socket" /> has been closed. </exception>
      <exception cref="T:System.Security.SecurityException">A caller in the call stack does not have the required permissions. </exception>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
        <IPermission class="System.Diagnostics.PerformanceCounterPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:System.Net.Sockets.Socket.Receive(System.Byte[],System.Int32,System.Int32,System.Net.Sockets.SocketFlags,System.Net.Sockets.SocketError@)">
      <summary>Receives data from a bound <see cref="T:System.Net.Sockets.Socket" /> into a receive buffer, using the specified <see cref="T:System.Net.Sockets.SocketFlags" />.</summary>
      <returns>The number of bytes received.</returns>
      <param name="buffer">An array of type <see cref="T:System.Byte" /> that is the storage location for the received data.</param>
      <param name="offset">The position in the <paramref name="buffer" /> parameter to store the received data. </param>
      <param name="size">The number of bytes to receive. </param>
      <param name="socketFlags">A bitwise combination of the <see cref="T:System.Net.Sockets.SocketFlags" /> values.</param>
      <param name="errorCode">A <see cref="T:System.Net.Sockets.SocketError" /> object that stores the socket error.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="buffer" /> is null. </exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="offset" /> is less than 0.-or- <paramref name="offset" /> is greater than the length of <paramref name="buffer" />.-or- <paramref name="size" /> is less than 0.-or- <paramref name="size" /> is greater than the length of <paramref name="buffer" /> minus the value of the <paramref name="offset" /> parameter. </exception>
      <exception cref="T:System.Net.Sockets.SocketException">
        <paramref name="socketFlags" /> is not a valid combination of values.-or- The <see cref="P:System.Net.Sockets.Socket.LocalEndPoint" /> property is not set.-or- An operating system error occurs while accessing the <see cref="T:System.Net.Sockets.Socket" />. </exception>
      <exception cref="T:System.ObjectDisposedException">The <see cref="T:System.Net.Sockets.Socket" /> has been closed. </exception>
      <exception cref="T:System.Security.SecurityException">A caller in the call stack does not have the required permissions. </exception>
    </member>
    <member name="M:System.Net.Sockets.Socket.Receive(System.Byte[],System.Int32,System.Net.Sockets.SocketFlags)">
      <summary>Receives the specified number of bytes of data from a bound <see cref="T:System.Net.Sockets.Socket" /> into a receive buffer, using the specified <see cref="T:System.Net.Sockets.SocketFlags" />.</summary>
      <returns>The number of bytes received.</returns>
      <param name="buffer">An array of type <see cref="T:System.Byte" /> that is the storage location for the received data. </param>
      <param name="size">The number of bytes to receive. </param>
      <param name="socketFlags">A bitwise combination of the <see cref="T:System.Net.Sockets.SocketFlags" /> values. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="buffer" /> is null. </exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="size" /> exceeds the size of <paramref name="buffer" />. </exception>
      <exception cref="T:System.Net.Sockets.SocketException">An error occurred when attempting to access the socket. See the Remarks section for more information. </exception>
      <exception cref="T:System.ObjectDisposedException">The <see cref="T:System.Net.Sockets.Socket" /> has been closed. </exception>
      <exception cref="T:System.Security.SecurityException">A caller in the call stack does not have the required permissions. </exception>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
        <IPermission class="System.Diagnostics.PerformanceCounterPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:System.Net.Sockets.Socket.Receive(System.Byte[],System.Net.Sockets.SocketFlags)">
      <summary>Receives data from a bound <see cref="T:System.Net.Sockets.Socket" /> into a receive buffer, using the specified <see cref="T:System.Net.Sockets.SocketFlags" />.</summary>
      <returns>The number of bytes received.</returns>
      <param name="buffer">An array of type <see cref="T:System.Byte" /> that is the storage location for the received data. </param>
      <param name="socketFlags">A bitwise combination of the <see cref="T:System.Net.Sockets.SocketFlags" /> values. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="buffer" /> is null. </exception>
      <exception cref="T:System.Net.Sockets.SocketException">An error occurred when attempting to access the socket. See the Remarks section for more information. </exception>
      <exception cref="T:System.ObjectDisposedException">The <see cref="T:System.Net.Sockets.Socket" /> has been closed. </exception>
      <exception cref="T:System.Security.SecurityException">A caller in the call stack does not have the required permissions. </exception>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
        <IPermission class="System.Diagnostics.PerformanceCounterPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:System.Net.Sockets.Socket.Receive(System.Collections.Generic.IList{System.ArraySegment{System.Byte}})">
      <summary>Receives data from a bound <see cref="T:System.Net.Sockets.Socket" /> into the list of receive buffers.</summary>
      <returns>The number of bytes received.</returns>
      <param name="buffers">A list of <see cref="T:System.ArraySegment`1" />s of type <see cref="T:System.Byte" /> that contains the received data.</param>
      <exception cref="T:System.ArgumentNullException">The <paramref name="buffer" /> parameter is null. </exception>
      <exception cref="T:System.Net.Sockets.SocketException">An error occurred while attempting to access the socket. See the Remarks section for more information. </exception>
      <exception cref="T:System.ObjectDisposedException">The <see cref="T:System.Net.Sockets.Socket" /> has been closed. </exception>
    </member>
    <member name="M:System.Net.Sockets.Socket.Receive(System.Collections.Generic.IList{System.ArraySegment{System.Byte}},System.Net.Sockets.SocketFlags)">
      <summary>Receives data from a bound <see cref="T:System.Net.Sockets.Socket" /> into the list of receive buffers, using the specified <see cref="T:System.Net.Sockets.SocketFlags" />.</summary>
      <returns>The number of bytes received.</returns>
      <param name="buffers">A list of <see cref="T:System.ArraySegment`1" />s of type <see cref="T:System.Byte" /> that contains the received data.</param>
      <param name="socketFlags">A bitwise combination of the <see cref="T:System.Net.Sockets.SocketFlags" /> values.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="buffers" /> is null.-or-<paramref name="buffers" />.Count is zero.</exception>
      <exception cref="T:System.Net.Sockets.SocketException">An error occurred while attempting to access the socket. See the Remarks section for more information. </exception>
      <exception cref="T:System.ObjectDisposedException">The <see cref="T:System.Net.Sockets.Socket" /> has been closed. </exception>
    </member>
    <member name="M:System.Net.Sockets.Socket.Receive(System.Collections.Generic.IList{System.ArraySegment{System.Byte}},System.Net.Sockets.SocketFlags,System.Net.Sockets.SocketError@)">
      <summary>Receives data from a bound <see cref="T:System.Net.Sockets.Socket" /> into the list of receive buffers, using the specified <see cref="T:System.Net.Sockets.SocketFlags" />.</summary>
      <returns>The number of bytes received.</returns>
      <param name="buffers">A list of <see cref="T:System.ArraySegment`1" />s of type <see cref="T:System.Byte" /> that contains the received data.</param>
      <param name="socketFlags">A bitwise combination of the <see cref="T:System.Net.Sockets.SocketFlags" /> values.</param>
      <param name="errorCode">A <see cref="T:System.Net.Sockets.SocketError" /> object that stores the socket error.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="buffers" /> is null.-or-<paramref name="buffers" />.Count is zero.</exception>
      <exception cref="T:System.Net.Sockets.SocketException">An error occurred while attempting to access the socket. See the Remarks section for more information. </exception>
      <exception cref="T:System.ObjectDisposedException">The <see cref="T:System.Net.Sockets.Socket" /> has been closed. </exception>
    </member>
    <member name="M:System.Net.Sockets.Socket.ReceiveAsync(System.Net.Sockets.SocketAsyncEventArgs)">
      <summary>Begins an asynchronous request to receive data from a connected <see cref="T:System.Net.Sockets.Socket" /> object.</summary>
      <returns>Returns true if the I/O operation is pending. The <see cref="E:System.Net.Sockets.SocketAsyncEventArgs.Completed" /> event on the <paramref name="e" /> parameter will be raised upon completion of the operation. Returns false if the I/O operation completed synchronously. In this case, The <see cref="E:System.Net.Sockets.SocketAsyncEventArgs.Completed" /> event on the <paramref name="e" /> parameter will not be raised and the <paramref name="e" /> object passed as a parameter may be examined immediately after the method call returns to retrieve the result of the operation.</returns>
      <param name="e">The <see cref="T:System.Net.Sockets.SocketAsyncEventArgs" /> object to use for this asynchronous socket operation.</param>
      <exception cref="T:System.ArgumentException">An argument was invalid. The <see cref="P:System.Net.Sockets.SocketAsyncEventArgs.Buffer" /> or <see cref="P:System.Net.Sockets.SocketAsyncEventArgs.BufferList" /> properties on the <paramref name="e" /> parameter must reference valid buffers. One or the other of these properties may be set, but not both at the same time.</exception>
      <exception cref="T:System.InvalidOperationException">A socket operation was already in progress using the <see cref="T:System.Net.Sockets.SocketAsyncEventArgs" /> object specified in the <paramref name="e" /> parameter.</exception>
      <exception cref="T:System.NotSupportedException">Windows XP or later is required for this method.</exception>
      <exception cref="T:System.ObjectDisposedException">The <see cref="T:System.Net.Sockets.Socket" /> has been closed. </exception>
      <exception cref="T:System.Net.Sockets.SocketException">An error occurred when attempting to access the socket. See the Remarks section for more information. </exception>
    </member>
    <member name="P:System.Net.Sockets.Socket.ReceiveBufferSize">
      <summary>Gets or sets a value that specifies the size of the receive buffer of the <see cref="T:System.Net.Sockets.Socket" />.</summary>
      <returns>An <see cref="T:System.Int32" /> that contains the size, in bytes, of the receive buffer. The default is 8192.</returns>
      <exception cref="T:System.Net.Sockets.SocketException">An error occurred when attempting to access the socket.</exception>
      <exception cref="T:System.ObjectDisposedException">The <see cref="T:System.Net.Sockets.Socket" /> has been closed. </exception>
      <exception cref="T:System.ArgumentOutOfRangeException">The value specified for a set operation is less than 0.</exception>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:System.Net.Sockets.Socket.ReceiveFrom(System.Byte[],System.Int32,System.Int32,System.Net.Sockets.SocketFlags,System.Net.EndPoint@)">
      <summary>Receives the specified number of bytes of data into the specified location of the data buffer, using the specified <see cref="T:System.Net.Sockets.SocketFlags" />, and stores the endpoint.</summary>
      <returns>The number of bytes received.</returns>
      <param name="buffer">An array of type <see cref="T:System.Byte" /> that is the storage location for received data. </param>
      <param name="offset">The position in the <paramref name="buffer" /> parameter to store the received data. </param>
      <param name="size">The number of bytes to receive. </param>
      <param name="socketFlags">A bitwise combination of the <see cref="T:System.Net.Sockets.SocketFlags" /> values. </param>
      <param name="remoteEP">An <see cref="T:System.Net.EndPoint" />, passed by reference, that represents the remote server. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="buffer" /> is null.-or- <paramref name="remoteEP" /> is null. </exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="offset" /> is less than 0.-or- <paramref name="offset" /> is greater than the length of <paramref name="buffer" />.-or- <paramref name="size" /> is less than 0.-or- <paramref name="size" /> is greater than the length of the <paramref name="buffer" /> minus the value of the offset parameter. </exception>
      <exception cref="T:System.Net.Sockets.SocketException">
        <paramref name="socketFlags" /> is not a valid combination of values.-or- The <see cref="P:System.Net.Sockets.Socket.LocalEndPoint" /> property was not set.-or- An error occurred when attempting to access the socket. See the Remarks section for more information. </exception>
      <exception cref="T:System.ObjectDisposedException">The <see cref="T:System.Net.Sockets.Socket" /> has been closed. </exception>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Diagnostics.PerformanceCounterPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Net.SocketPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:System.Net.Sockets.Socket.ReceiveFrom(System.Byte[],System.Int32,System.Net.Sockets.SocketFlags,System.Net.EndPoint@)">
      <summary>Receives the specified number of bytes into the data buffer, using the specified <see cref="T:System.Net.Sockets.SocketFlags" />, and stores the endpoint.</summary>
      <returns>The number of bytes received.</returns>
      <param name="buffer">An array of type <see cref="T:System.Byte" /> that is the storage location for received data. </param>
      <param name="size">The number of bytes to receive. </param>
      <param name="socketFlags">A bitwise combination of the <see cref="T:System.Net.Sockets.SocketFlags" /> values. </param>
      <param name="remoteEP">An <see cref="T:System.Net.EndPoint" />, passed by reference, that represents the remote server. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="buffer" /> is null.-or- <paramref name="remoteEP" /> is null. </exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="size" /> is less than 0.-or- <paramref name="size" /> is greater than the length of <paramref name="buffer" />. </exception>
      <exception cref="T:System.Net.Sockets.SocketException">
        <paramref name="socketFlags" /> is not a valid combination of values.-or- The <see cref="P:System.Net.Sockets.Socket.LocalEndPoint" /> property was not set.-or- An operating system error occurs while accessing the <see cref="T:System.Net.Sockets.Socket" />. </exception>
      <exception cref="T:System.ObjectDisposedException">The <see cref="T:System.Net.Sockets.Socket" /> has been closed. </exception>
      <exception cref="T:System.Security.SecurityException">A caller in the call stack does not have the required permissions. </exception>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Diagnostics.PerformanceCounterPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Net.SocketPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:System.Net.Sockets.Socket.ReceiveFrom(System.Byte[],System.Net.EndPoint@)">
      <summary>Receives a datagram into the data buffer and stores the endpoint.</summary>
      <returns>The number of bytes received.</returns>
      <param name="buffer">An array of type <see cref="T:System.Byte" /> that is the storage location for received data. </param>
      <param name="remoteEP">An <see cref="T:System.Net.EndPoint" />, passed by reference, that represents the remote server. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="buffer" /> is null.-or- <paramref name="remoteEP" /> is null. </exception>
      <exception cref="T:System.Net.Sockets.SocketException">An error occurred when attempting to access the socket. See the Remarks section for more information. </exception>
      <exception cref="T:System.ObjectDisposedException">The <see cref="T:System.Net.Sockets.Socket" /> has been closed. </exception>
      <exception cref="T:System.Security.SecurityException">A caller in the call stack does not have the required permissions. </exception>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Diagnostics.PerformanceCounterPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Net.SocketPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:System.Net.Sockets.Socket.ReceiveFrom(System.Byte[],System.Net.Sockets.SocketFlags,System.Net.EndPoint@)">
      <summary>Receives a datagram into the data buffer, using the specified <see cref="T:System.Net.Sockets.SocketFlags" />, and stores the endpoint.</summary>
      <returns>The number of bytes received.</returns>
      <param name="buffer">An array of type <see cref="T:System.Byte" /> that is the storage location for the received data. </param>
      <param name="socketFlags">A bitwise combination of the <see cref="T:System.Net.Sockets.SocketFlags" /> values. </param>
      <param name="remoteEP">An <see cref="T:System.Net.EndPoint" />, passed by reference, that represents the remote server. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="buffer" /> is null.-or- <paramref name="remoteEP" /> is null. </exception>
      <exception cref="T:System.Net.Sockets.SocketException">An error occurred when attempting to access the socket. See the Remarks section for more information. </exception>
      <exception cref="T:System.ObjectDisposedException">The <see cref="T:System.Net.Sockets.Socket" /> has been closed. </exception>
      <exception cref="T:System.Security.SecurityException">A caller in the call stack does not have the required permissions. </exception>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Diagnostics.PerformanceCounterPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Net.SocketPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:System.Net.Sockets.Socket.ReceiveFromAsync(System.Net.Sockets.SocketAsyncEventArgs)">
      <summary>Begins to asynchronously receive data from a specified network device.</summary>
      <returns>Returns true if the I/O operation is pending. The <see cref="E:System.Net.Sockets.SocketAsyncEventArgs.Completed" /> event on the <paramref name="e" /> parameter will be raised upon completion of the operation. Returns false if the I/O operation completed synchronously. In this case, The <see cref="E:System.Net.Sockets.SocketAsyncEventArgs.Completed" /> event on the <paramref name="e" /> parameter will not be raised and the <paramref name="e" /> object passed as a parameter may be examined immediately after the method call returns to retrieve the result of the operation.</returns>
      <param name="e">The <see cref="T:System.Net.Sockets.SocketAsyncEventArgs" /> object to use for this asynchronous socket operation.</param>
      <exception cref="T:System.ArgumentNullException">The <see cref="P:System.Net.Sockets.SocketAsyncEventArgs.RemoteEndPoint" /> cannot be null.</exception>
      <exception cref="T:System.InvalidOperationException">A socket operation was already in progress using the <see cref="T:System.Net.Sockets.SocketAsyncEventArgs" /> object specified in the <paramref name="e" /> parameter.</exception>
      <exception cref="T:System.NotSupportedException">Windows XP or later is required for this method.</exception>
      <exception cref="T:System.ObjectDisposedException">The <see cref="T:System.Net.Sockets.Socket" /> has been closed. </exception>
      <exception cref="T:System.Net.Sockets.SocketException">An error occurred when attempting to access the socket. </exception>
    </member>
    <member name="M:System.Net.Sockets.Socket.ReceiveMessageFrom(System.Byte[],System.Int32,System.Int32,System.Net.Sockets.SocketFlags@,System.Net.EndPoint@,System.Net.Sockets.IPPacketInformation@)">
      <summary>Receives the specified number of bytes of data into the specified location of the data buffer, using the specified <see cref="T:System.Net.Sockets.SocketFlags" />, and stores the endpoint and packet information.</summary>
      <returns>The number of bytes received.</returns>
      <param name="buffer">An array of type <see cref="T:System.Byte" /> that is the storage location for received data.</param>
      <param name="offset">The position in the <paramref name="buffer" /> parameter to store the received data.</param>
      <param name="size">The number of bytes to receive.</param>
      <param name="socketFlags">A bitwise combination of the <see cref="T:System.Net.Sockets.SocketFlags" /> values.</param>
      <param name="remoteEP">An <see cref="T:System.Net.EndPoint" />, passed by reference, that represents the remote server.</param>
      <param name="ipPacketInformation">An <see cref="T:System.Net.Sockets.IPPacketInformation" /> holding address and interface information.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="buffer" /> is null.- or- <paramref name="remoteEP" /> is null. </exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="offset" /> is less than 0.-or- <paramref name="offset" /> is greater than the length of <paramref name="buffer" />.-or- <paramref name="size" /> is less than 0.-or- <paramref name="size" /> is greater than the length of the <paramref name="buffer" /> minus the value of the offset parameter. </exception>
      <exception cref="T:System.Net.Sockets.SocketException">
        <paramref name="socketFlags" /> is not a valid combination of values.-or- The <see cref="P:System.Net.Sockets.Socket.LocalEndPoint" /> property was not set.-or- The .NET Framework is running on an AMD 64-bit processor.-or- An error occurred when attempting to access the socket. See the Remarks section for more information. </exception>
      <exception cref="T:System.ObjectDisposedException">The <see cref="T:System.Net.Sockets.Socket" /> has been closed. </exception>
      <exception cref="T:System.NotSupportedException">The operating system is Windows 2000 or earlier, and this method requires Windows XP.</exception>
    </member>
    <member name="M:System.Net.Sockets.Socket.ReceiveMessageFromAsync(System.Net.Sockets.SocketAsyncEventArgs)">
      <summary>Begins to asynchronously receive the specified number of bytes of data into the specified location in the data buffer, using the specified <see cref="P:System.Net.Sockets.SocketAsyncEventArgs.SocketFlags" />, and stores the endpoint and packet information.</summary>
      <returns>Returns true if the I/O operation is pending. The <see cref="E:System.Net.Sockets.SocketAsyncEventArgs.Completed" /> event on the <paramref name="e" /> parameter will be raised upon completion of the operation. Returns false if the I/O operation completed synchronously. In this case, The <see cref="E:System.Net.Sockets.SocketAsyncEventArgs.Completed" /> event on the <paramref name="e" /> parameter will not be raised and the <paramref name="e" /> object passed as a parameter may be examined immediately after the method call returns to retrieve the result of the operation.</returns>
      <param name="e">The <see cref="T:System.Net.Sockets.SocketAsyncEventArgs" /> object to use for this asynchronous socket operation.</param>
      <exception cref="T:System.ArgumentNullException">The <see cref="P:System.Net.Sockets.SocketAsyncEventArgs.RemoteEndPoint" /> cannot be null.</exception>
      <exception cref="T:System.NotSupportedException">Windows XP or later is required for this method.</exception>
      <exception cref="T:System.ObjectDisposedException">The <see cref="T:System.Net.Sockets.Socket" /> has been closed. </exception>
      <exception cref="T:System.Net.Sockets.SocketException">An error occurred when attempting to access the socket. </exception>
    </member>
    <member name="P:System.Net.Sockets.Socket.ReceiveTimeout">
      <summary>Gets or sets a value that specifies the amount of time after which a synchronous <see cref="Overload:System.Net.Sockets.Socket.Receive" /> call will time out.</summary>
      <returns>The time-out value, in milliseconds. The default value is 0, which indicates an infinite time-out period. Specifying -1 also indicates an infinite time-out period.</returns>
      <exception cref="T:System.Net.Sockets.SocketException">An error occurred when attempting to access the socket.</exception>
      <exception cref="T:System.ObjectDisposedException">The <see cref="T:System.Net.Sockets.Socket" /> has been closed. </exception>
      <exception cref="T:System.ArgumentOutOfRangeException">The value specified for a set operation is less than -1.</exception>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="P:System.Net.Sockets.Socket.RemoteEndPoint">
      <summary>Gets the remote endpoint.</summary>
      <returns>The <see cref="T:System.Net.EndPoint" /> with which the <see cref="T:System.Net.Sockets.Socket" /> is communicating.</returns>
      <exception cref="T:System.Net.Sockets.SocketException">An error occurred when attempting to access the socket. See the Remarks section for more information. </exception>
      <exception cref="T:System.ObjectDisposedException">The <see cref="T:System.Net.Sockets.Socket" /> has been closed. </exception>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
      </PermissionSet>
    </member>
    <member name="M:System.Net.Sockets.Socket.Select(System.Collections.IList,System.Collections.IList,System.Collections.IList,System.Int32)">
      <summary>Determines the status of one or more sockets.</summary>
      <param name="checkRead">An <see cref="T:System.Collections.IList" /> of <see cref="T:System.Net.Sockets.Socket" /> instances to check for readability. </param>
      <param name="checkWrite">An <see cref="T:System.Collections.IList" /> of <see cref="T:System.Net.Sockets.Socket" /> instances to check for writability. </param>
      <param name="checkError">An <see cref="T:System.Collections.IList" /> of <see cref="T:System.Net.Sockets.Socket" /> instances to check for errors. </param>
      <param name="microSeconds">The time-out value, in microseconds. A -1 value indicates an infinite time-out.</param>
      <exception cref="T:System.ArgumentNullException">The <paramref name="checkRead" /> parameter is null or empty.-and- The <paramref name="checkWrite" /> parameter is null or empty -and- The <paramref name="checkError" /> parameter is null or empty. </exception>
      <exception cref="T:System.Net.Sockets.SocketException">An error occurred when attempting to access the socket. See the Remarks section for more information. </exception>
    </member>
    <member name="M:System.Net.Sockets.Socket.Send(System.Byte[])">
      <summary>Sends data to a connected <see cref="T:System.Net.Sockets.Socket" />.</summary>
      <returns>The number of bytes sent to the <see cref="T:System.Net.Sockets.Socket" />.</returns>
      <param name="buffer">An array of type <see cref="T:System.Byte" /> that contains the data to be sent. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="buffer" /> is null. </exception>
      <exception cref="T:System.Net.Sockets.SocketException">An error occurred when attempting to access the socket. See the Remarks section for more information. </exception>
      <exception cref="T:System.ObjectDisposedException">The <see cref="T:System.Net.Sockets.Socket" /> has been closed. </exception>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
        <IPermission class="System.Diagnostics.PerformanceCounterPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:System.Net.Sockets.Socket.Send(System.Byte[],System.Int32,System.Int32,System.Net.Sockets.SocketFlags)">
      <summary>Sends the specified number of bytes of data to a connected <see cref="T:System.Net.Sockets.Socket" />, starting at the specified offset, and using the specified <see cref="T:System.Net.Sockets.SocketFlags" />.</summary>
      <returns>The number of bytes sent to the <see cref="T:System.Net.Sockets.Socket" />.</returns>
      <param name="buffer">An array of type <see cref="T:System.Byte" /> that contains the data to be sent. </param>
      <param name="offset">The position in the data buffer at which to begin sending data. </param>
      <param name="size">The number of bytes to send. </param>
      <param name="socketFlags">A bitwise combination of the <see cref="T:System.Net.Sockets.SocketFlags" /> values. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="buffer" /> is null. </exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="offset" /> is less than 0.-or- <paramref name="offset" /> is greater than the length of <paramref name="buffer" />.-or- <paramref name="size" /> is less than 0.-or- <paramref name="size" /> is greater than the length of <paramref name="buffer" /> minus the value of the <paramref name="offset" /> parameter. </exception>
      <exception cref="T:System.Net.Sockets.SocketException">
        <paramref name="socketFlags" /> is not a valid combination of values.-or- An operating system error occurs while accessing the <see cref="T:System.Net.Sockets.Socket" />. See the Remarks section for more information. </exception>
      <exception cref="T:System.ObjectDisposedException">The <see cref="T:System.Net.Sockets.Socket" /> has been closed. </exception>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
        <IPermission class="System.Diagnostics.PerformanceCounterPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:System.Net.Sockets.Socket.Send(System.Byte[],System.Int32,System.Int32,System.Net.Sockets.SocketFlags,System.Net.Sockets.SocketError@)">
      <summary>Sends the specified number of bytes of data to a connected <see cref="T:System.Net.Sockets.Socket" />, starting at the specified offset, and using the specified <see cref="T:System.Net.Sockets.SocketFlags" /></summary>
      <returns>The number of bytes sent to the <see cref="T:System.Net.Sockets.Socket" />.</returns>
      <param name="buffer">An array of type <see cref="T:System.Byte" /> that contains the data to be sent. </param>
      <param name="offset">The position in the data buffer at which to begin sending data. </param>
      <param name="size">The number of bytes to send. </param>
      <param name="socketFlags">A bitwise combination of the <see cref="T:System.Net.Sockets.SocketFlags" /> values. </param>
      <param name="errorCode">A <see cref="T:System.Net.Sockets.SocketError" /> object that stores the socket error.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="buffer" /> is null. </exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="offset" /> is less than 0.-or- <paramref name="offset" /> is greater than the length of <paramref name="buffer" />.-or- <paramref name="size" /> is less than 0.-or- <paramref name="size" /> is greater than the length of <paramref name="buffer" /> minus the value of the <paramref name="offset" /> parameter. </exception>
      <exception cref="T:System.Net.Sockets.SocketException">
        <paramref name="socketFlags" /> is not a valid combination of values.-or- An operating system error occurs while accessing the <see cref="T:System.Net.Sockets.Socket" />. See the Remarks section for more information. </exception>
      <exception cref="T:System.ObjectDisposedException">The <see cref="T:System.Net.Sockets.Socket" /> has been closed. </exception>
    </member>
    <member name="M:System.Net.Sockets.Socket.Send(System.Byte[],System.Int32,System.Net.Sockets.SocketFlags)">
      <summary>Sends the specified number of bytes of data to a connected <see cref="T:System.Net.Sockets.Socket" />, using the specified <see cref="T:System.Net.Sockets.SocketFlags" />.</summary>
      <returns>The number of bytes sent to the <see cref="T:System.Net.Sockets.Socket" />.</returns>
      <param name="buffer">An array of type <see cref="T:System.Byte" /> that contains the data to be sent. </param>
      <param name="size">The number of bytes to send. </param>
      <param name="socketFlags">A bitwise combination of the <see cref="T:System.Net.Sockets.SocketFlags" /> values. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="buffer" /> is null. </exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="size" /> is less than 0 or exceeds the size of the buffer. </exception>
      <exception cref="T:System.Net.Sockets.SocketException">
        <paramref name="socketFlags" /> is not a valid combination of values.-or- An operating system error occurs while accessing the socket. See the Remarks section for more information. </exception>
      <exception cref="T:System.ObjectDisposedException">The <see cref="T:System.Net.Sockets.Socket" /> has been closed. </exception>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
        <IPermission class="System.Diagnostics.PerformanceCounterPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:System.Net.Sockets.Socket.Send(System.Byte[],System.Net.Sockets.SocketFlags)">
      <summary>Sends data to a connected <see cref="T:System.Net.Sockets.Socket" /> using the specified <see cref="T:System.Net.Sockets.SocketFlags" />.</summary>
      <returns>The number of bytes sent to the <see cref="T:System.Net.Sockets.Socket" />.</returns>
      <param name="buffer">An array of type <see cref="T:System.Byte" /> that contains the data to be sent. </param>
      <param name="socketFlags">A bitwise combination of the <see cref="T:System.Net.Sockets.SocketFlags" /> values. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="buffer" /> is null. </exception>
      <exception cref="T:System.Net.Sockets.SocketException">An error occurred when attempting to access the socket. See the Remarks section for more information. </exception>
      <exception cref="T:System.ObjectDisposedException">The <see cref="T:System.Net.Sockets.Socket" /> has been closed. </exception>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
        <IPermission class="System.Diagnostics.PerformanceCounterPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:System.Net.Sockets.Socket.Send(System.Collections.Generic.IList{System.ArraySegment{System.Byte}})">
      <summary>Sends the set of buffers in the list to a connected <see cref="T:System.Net.Sockets.Socket" />.</summary>
      <returns>The number of bytes sent to the <see cref="T:System.Net.Sockets.Socket" />.</returns>
      <param name="buffers">A list of <see cref="T:System.ArraySegment`1" />s of type <see cref="T:System.Byte" /> that contains the data to be sent. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="buffers" /> is null. </exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="buffers" /> is empty.</exception>
      <exception cref="T:System.Net.Sockets.SocketException">An error occurred when attempting to access the socket. See remarks section below. </exception>
      <exception cref="T:System.ObjectDisposedException">The <see cref="T:System.Net.Sockets.Socket" /> has been closed. </exception>
    </member>
    <member name="M:System.Net.Sockets.Socket.Send(System.Collections.Generic.IList{System.ArraySegment{System.Byte}},System.Net.Sockets.SocketFlags)">
      <summary>Sends the set of buffers in the list to a connected <see cref="T:System.Net.Sockets.Socket" />, using the specified <see cref="T:System.Net.Sockets.SocketFlags" />.</summary>
      <returns>The number of bytes sent to the <see cref="T:System.Net.Sockets.Socket" />.</returns>
      <param name="buffers">A list of <see cref="T:System.ArraySegment`1" />s of type <see cref="T:System.Byte" /> that contains the data to be sent.</param>
      <param name="socketFlags">A bitwise combination of the <see cref="T:System.Net.Sockets.SocketFlags" /> values.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="buffers" /> is null.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="buffers" /> is empty.</exception>
      <exception cref="T:System.Net.Sockets.SocketException">An error occurred when attempting to access the socket. See the Remarks section for more information. </exception>
      <exception cref="T:System.ObjectDisposedException">The <see cref="T:System.Net.Sockets.Socket" /> has been closed. </exception>
    </member>
    <member name="M:System.Net.Sockets.Socket.Send(System.Collections.Generic.IList{System.ArraySegment{System.Byte}},System.Net.Sockets.SocketFlags,System.Net.Sockets.SocketError@)">
      <summary>Sends the set of buffers in the list to a connected <see cref="T:System.Net.Sockets.Socket" />, using the specified <see cref="T:System.Net.Sockets.SocketFlags" />.</summary>
      <returns>The number of bytes sent to the <see cref="T:System.Net.Sockets.Socket" />.</returns>
      <param name="buffers">A list of <see cref="T:System.ArraySegment`1" />s of type <see cref="T:System.Byte" /> that contains the data to be sent.</param>
      <param name="socketFlags">A bitwise combination of the <see cref="T:System.Net.Sockets.SocketFlags" /> values.</param>
      <param name="errorCode">A <see cref="T:System.Net.Sockets.SocketError" /> object that stores the socket error.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="buffers" /> is null.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="buffers" /> is empty.</exception>
      <exception cref="T:System.Net.Sockets.SocketException">An error occurred when attempting to access the socket. See the Remarks section for more information. </exception>
      <exception cref="T:System.ObjectDisposedException">The <see cref="T:System.Net.Sockets.Socket" /> has been closed. </exception>
    </member>
    <member name="M:System.Net.Sockets.Socket.SendAsync(System.Net.Sockets.SocketAsyncEventArgs)">
      <summary>Sends data asynchronously to a connected <see cref="T:System.Net.Sockets.Socket" /> object.</summary>
      <returns>Returns true if the I/O operation is pending. The <see cref="E:System.Net.Sockets.SocketAsyncEventArgs.Completed" /> event on the <paramref name="e" /> parameter will be raised upon completion of the operation. Returns false if the I/O operation completed synchronously. In this case, The <see cref="E:System.Net.Sockets.SocketAsyncEventArgs.Completed" /> event on the <paramref name="e" /> parameter will not be raised and the <paramref name="e" /> object passed as a parameter may be examined immediately after the method call returns to retrieve the result of the operation.</returns>
      <param name="e">The <see cref="T:System.Net.Sockets.SocketAsyncEventArgs" /> object to use for this asynchronous socket operation.</param>
      <exception cref="T:System.ArgumentException">The <see cref="P:System.Net.Sockets.SocketAsyncEventArgs.Buffer" /> or <see cref="P:System.Net.Sockets.SocketAsyncEventArgs.BufferList" /> properties on the <paramref name="e" /> parameter must reference valid buffers. One or the other of these properties may be set, but not both at the same time.</exception>
      <exception cref="T:System.InvalidOperationException">A socket operation was already in progress using the <see cref="T:System.Net.Sockets.SocketAsyncEventArgs" /> object specified in the <paramref name="e" /> parameter.</exception>
      <exception cref="T:System.NotSupportedException">Windows XP or later is required for this method.</exception>
      <exception cref="T:System.ObjectDisposedException">The <see cref="T:System.Net.Sockets.Socket" /> has been closed. </exception>
      <exception cref="T:System.Net.Sockets.SocketException">The <see cref="T:System.Net.Sockets.Socket" /> is not yet connected or was not obtained via an <see cref="M:System.Net.Sockets.Socket.Accept" />, <see cref="M:System.Net.Sockets.Socket.AcceptAsync(System.Net.Sockets.SocketAsyncEventArgs)" />,or <see cref="Overload:System.Net.Sockets.Socket.BeginAccept" />, method.</exception>
    </member>
    <member name="P:System.Net.Sockets.Socket.SendBufferSize">
      <summary>Gets or sets a value that specifies the size of the send buffer of the <see cref="T:System.Net.Sockets.Socket" />.</summary>
      <returns>An <see cref="T:System.Int32" /> that contains the size, in bytes, of the send buffer. The default is 8192.</returns>
      <exception cref="T:System.Net.Sockets.SocketException">An error occurred when attempting to access the socket.</exception>
      <exception cref="T:System.ObjectDisposedException">The <see cref="T:System.Net.Sockets.Socket" /> has been closed. </exception>
      <exception cref="T:System.ArgumentOutOfRangeException">The value specified for a set operation is less than 0.</exception>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:System.Net.Sockets.Socket.SendFile(System.String)">
      <summary>Sends the file <paramref name="fileName" /> to a connected <see cref="T:System.Net.Sockets.Socket" /> object with the <see cref="F:System.Net.Sockets.TransmitFileOptions.UseDefaultWorkerThread" /> transmit flag.</summary>
      <param name="fileName">A <see cref="T:System.String" /> that contains the path and name of the file to be sent. This parameter can be null. </param>
      <exception cref="T:System.NotSupportedException">The socket is not connected to a remote host. </exception>
      <exception cref="T:System.ObjectDisposedException">The <see cref="T:System.Net.Sockets.Socket" /> object has been closed. </exception>
      <exception cref="T:System.InvalidOperationException">The <see cref="T:System.Net.Sockets.Socket" /> object is not in blocking mode and cannot accept this synchronous call. </exception>
      <exception cref="T:System.IO.FileNotFoundException">The file <paramref name="fileName" /> was not found. </exception>
      <exception cref="T:System.Net.Sockets.SocketException">An error occurred when attempting to access the socket. See the Remarks section for more information. </exception>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:System.Net.Sockets.Socket.SendFile(System.String,System.Byte[],System.Byte[],System.Net.Sockets.TransmitFileOptions)">
      <summary>Sends the file <paramref name="fileName" /> and buffers of data to a connected <see cref="T:System.Net.Sockets.Socket" /> object using the specified <see cref="T:System.Net.Sockets.TransmitFileOptions" /> value.</summary>
      <param name="fileName">A <see cref="T:System.String" /> that contains the path and name of the file to be sent. This parameter can be null. </param>
      <param name="preBuffer">A <see cref="T:System.Byte" /> array that contains data to be sent before the file is sent. This parameter can be null. </param>
      <param name="postBuffer">A <see cref="T:System.Byte" /> array that contains data to be sent after the file is sent. This parameter can be null. </param>
      <param name="flags">One or more of <see cref="T:System.Net.Sockets.TransmitFileOptions" /> values. </param>
      <exception cref="T:System.NotSupportedException">The operating system is not Windows NT or later.- or - The socket is not connected to a remote host. </exception>
      <exception cref="T:System.ObjectDisposedException">The <see cref="T:System.Net.Sockets.Socket" /> object has been closed. </exception>
      <exception cref="T:System.InvalidOperationException">The <see cref="T:System.Net.Sockets.Socket" /> object is not in blocking mode and cannot accept this synchronous call. </exception>
      <exception cref="T:System.IO.FileNotFoundException">The file <paramref name="fileName" /> was not found. </exception>
      <exception cref="T:System.Net.Sockets.SocketException">An error occurred when attempting to access the socket. See the Remarks section for more information. </exception>
    </member>
    <member name="M:System.Net.Sockets.Socket.SendPacketsAsync(System.Net.Sockets.SocketAsyncEventArgs)">
      <summary>Sends a collection of files or in memory data buffers asynchronously to a connected <see cref="T:System.Net.Sockets.Socket" /> object.</summary>
      <returns>Returns true if the I/O operation is pending. The <see cref="E:System.Net.Sockets.SocketAsyncEventArgs.Completed" /> event on the <paramref name="e" /> parameter will be raised upon completion of the operation. Returns false if the I/O operation completed synchronously. In this case, The <see cref="E:System.Net.Sockets.SocketAsyncEventArgs.Completed" /> event on the <paramref name="e" /> parameter will not be raised and the <paramref name="e" /> object passed as a parameter may be examined immediately after the method call returns to retrieve the result of the operation.</returns>
      <param name="e">The <see cref="T:System.Net.Sockets.SocketAsyncEventArgs" /> object to use for this asynchronous socket operation.</param>
      <exception cref="T:System.IO.FileNotFoundException">The file specified in the <see cref="P:System.Net.Sockets.SendPacketsElement.FilePath" /> property was not found. </exception>
      <exception cref="T:System.InvalidOperationException">A socket operation was already in progress using the <see cref="T:System.Net.Sockets.SocketAsyncEventArgs" /> object specified in the <paramref name="e" /> parameter.</exception>
      <exception cref="T:System.NotSupportedException">Windows XP or later is required for this method. This exception also occurs if the <see cref="T:System.Net.Sockets.Socket" /> is not connected to a remote host. </exception>
      <exception cref="T:System.ObjectDisposedException">The <see cref="T:System.Net.Sockets.Socket" /> has been closed. </exception>
      <exception cref="T:System.Net.Sockets.SocketException">A connectionless <see cref="T:System.Net.Sockets.Socket" /> is being used and the file being sent exceeds the maximum packet size of the underlying transport.</exception>
    </member>
    <member name="P:System.Net.Sockets.Socket.SendTimeout">
      <summary>Gets or sets a value that specifies the amount of time after which a synchronous <see cref="Overload:System.Net.Sockets.Socket.Send" /> call will time out.</summary>
      <returns>The time-out value, in milliseconds. If you set the property with a value between 1 and 499, the value will be changed to 500. The default value is 0, which indicates an infinite time-out period. Specifying -1 also indicates an infinite time-out period.</returns>
      <exception cref="T:System.Net.Sockets.SocketException">An error occurred when attempting to access the socket.</exception>
      <exception cref="T:System.ObjectDisposedException">The <see cref="T:System.Net.Sockets.Socket" /> has been closed. </exception>
      <exception cref="T:System.ArgumentOutOfRangeException">The value specified for a set operation is less than -1.</exception>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:System.Net.Sockets.Socket.SendTo(System.Byte[],System.Int32,System.Int32,System.Net.Sockets.SocketFlags,System.Net.EndPoint)">
      <summary>Sends the specified number of bytes of data to the specified endpoint, starting at the specified location in the buffer, and using the specified <see cref="T:System.Net.Sockets.SocketFlags" />.</summary>
      <returns>The number of bytes sent.</returns>
      <param name="buffer">An array of type <see cref="T:System.Byte" /> that contains the data to be sent. </param>
      <param name="offset">The position in the data buffer at which to begin sending data. </param>
      <param name="size">The number of bytes to send. </param>
      <param name="socketFlags">A bitwise combination of the <see cref="T:System.Net.Sockets.SocketFlags" /> values. </param>
      <param name="remoteEP">The <see cref="T:System.Net.EndPoint" /> that represents the destination location for the data. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="buffer" /> is null.-or- <paramref name="remoteEP" /> is null. </exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="offset" /> is less than 0.-or- <paramref name="offset" /> is greater than the length of <paramref name="buffer" />.-or- <paramref name="size" /> is less than 0.-or- <paramref name="size" /> is greater than the length of <paramref name="buffer" /> minus the value of the <paramref name="offset" /> parameter. </exception>
      <exception cref="T:System.Net.Sockets.SocketException">
        <paramref name="socketFlags" /> is not a valid combination of values.-or- An operating system error occurs while accessing the <see cref="T:System.Net.Sockets.Socket" />. See the Remarks section for more information. </exception>
      <exception cref="T:System.ObjectDisposedException">The <see cref="T:System.Net.Sockets.Socket" /> has been closed. </exception>
      <exception cref="T:System.Security.SecurityException">A caller in the call stack does not have the required permissions. </exception>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Diagnostics.PerformanceCounterPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Net.SocketPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:System.Net.Sockets.Socket.SendTo(System.Byte[],System.Int32,System.Net.Sockets.SocketFlags,System.Net.EndPoint)">
      <summary>Sends the specified number of bytes of data to the specified endpoint using the specified <see cref="T:System.Net.Sockets.SocketFlags" />.</summary>
      <returns>The number of bytes sent.</returns>
      <param name="buffer">An array of type <see cref="T:System.Byte" /> that contains the data to be sent. </param>
      <param name="size">The number of bytes to send. </param>
      <param name="socketFlags">A bitwise combination of the <see cref="T:System.Net.Sockets.SocketFlags" /> values. </param>
      <param name="remoteEP">The <see cref="T:System.Net.EndPoint" /> that represents the destination location for the data. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="buffer" /> is null.-or- <paramref name="remoteEP" /> is null. </exception>
      <exception cref="T:System.ArgumentOutOfRangeException">The specified <paramref name="size" /> exceeds the size of <paramref name="buffer" />. </exception>
      <exception cref="T:System.Net.Sockets.SocketException">An error occurred when attempting to access the socket. See the Remarks section for more information. </exception>
      <exception cref="T:System.ObjectDisposedException">The <see cref="T:System.Net.Sockets.Socket" /> has been closed. </exception>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Diagnostics.PerformanceCounterPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Net.SocketPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:System.Net.Sockets.Socket.SendTo(System.Byte[],System.Net.EndPoint)">
      <summary>Sends data to the specified endpoint.</summary>
      <returns>The number of bytes sent.</returns>
      <param name="buffer">An array of type <see cref="T:System.Byte" /> that contains the data to be sent. </param>
      <param name="remoteEP">The <see cref="T:System.Net.EndPoint" /> that represents the destination for the data. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="buffer" /> is null.-or- <paramref name="remoteEP" /> is null. </exception>
      <exception cref="T:System.Net.Sockets.SocketException">An error occurred when attempting to access the socket. See the Remarks section for more information. </exception>
      <exception cref="T:System.ObjectDisposedException">The <see cref="T:System.Net.Sockets.Socket" /> has been closed. </exception>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Diagnostics.PerformanceCounterPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Net.SocketPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:System.Net.Sockets.Socket.SendTo(System.Byte[],System.Net.Sockets.SocketFlags,System.Net.EndPoint)">
      <summary>Sends data to a specific endpoint using the specified <see cref="T:System.Net.Sockets.SocketFlags" />.</summary>
      <returns>The number of bytes sent.</returns>
      <param name="buffer">An array of type <see cref="T:System.Byte" /> that contains the data to be sent. </param>
      <param name="socketFlags">A bitwise combination of the <see cref="T:System.Net.Sockets.SocketFlags" /> values. </param>
      <param name="remoteEP">The <see cref="T:System.Net.EndPoint" /> that represents the destination location for the data. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="buffer" /> is null.-or- <paramref name="remoteEP" /> is null. </exception>
      <exception cref="T:System.Net.Sockets.SocketException">An error occurred when attempting to access the socket. See the Remarks section for more information. </exception>
      <exception cref="T:System.ObjectDisposedException">The <see cref="T:System.Net.Sockets.Socket" /> has been closed. </exception>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Diagnostics.PerformanceCounterPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Net.SocketPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:System.Net.Sockets.Socket.SendToAsync(System.Net.Sockets.SocketAsyncEventArgs)">
      <summary>Sends data asynchronously to a specific remote host.</summary>
      <returns>Returns true if the I/O operation is pending. The <see cref="E:System.Net.Sockets.SocketAsyncEventArgs.Completed" /> event on the <paramref name="e" /> parameter will be raised upon completion of the operation. Returns false if the I/O operation completed synchronously. In this case, The <see cref="E:System.Net.Sockets.SocketAsyncEventArgs.Completed" /> event on the <paramref name="e" /> parameter will not be raised and the <paramref name="e" /> object passed as a parameter may be examined immediately after the method call returns to retrieve the result of the operation.</returns>
      <param name="e">The <see cref="T:System.Net.Sockets.SocketAsyncEventArgs" /> object to use for this asynchronous socket operation.</param>
      <exception cref="T:System.ArgumentNullException">The <see cref="P:System.Net.Sockets.SocketAsyncEventArgs.RemoteEndPoint" /> cannot be null.</exception>
      <exception cref="T:System.InvalidOperationException">A socket operation was already in progress using the <see cref="T:System.Net.Sockets.SocketAsyncEventArgs" /> object specified in the <paramref name="e" /> parameter.</exception>
      <exception cref="T:System.NotSupportedException">Windows XP or later is required for this method.</exception>
      <exception cref="T:System.ObjectDisposedException">The <see cref="T:System.Net.Sockets.Socket" /> has been closed. </exception>
      <exception cref="T:System.Net.Sockets.SocketException">The protocol specified is connection-oriented, but the <see cref="T:System.Net.Sockets.Socket" /> is not yet connected.</exception>
    </member>
    <member name="M:System.Net.Sockets.Socket.SetIPProtectionLevel(System.Net.Sockets.IPProtectionLevel)">
      <summary>Set the IP protection level on a socket.</summary>
      <param name="level">The IP protection level to set on this socket. </param>
      <exception cref="T:System.ArgumentException">The <paramref name="level" /> parameter cannot be <see cref="F:System.Net.Sockets.IPProtectionLevel.Unspecified" />. The IP protection level cannot be set to unspecified.</exception>
      <exception cref="T:System.NotSupportedException">The <see cref="T:System.Net.Sockets.AddressFamily" /> of the socket must be either <see cref="F:System.Net.Sockets.AddressFamily.InterNetworkV6" /> or <see cref="F:System.Net.Sockets.AddressFamily.InterNetwork" />.</exception>
    </member>
    <member name="M:System.Net.Sockets.Socket.SetSocketOption(System.Net.Sockets.SocketOptionLevel,System.Net.Sockets.SocketOptionName,System.Boolean)">
      <summary>Sets the specified <see cref="T:System.Net.Sockets.Socket" /> option to the specified <see cref="T:System.Boolean" /> value.</summary>
      <param name="optionLevel">One of the <see cref="T:System.Net.Sockets.SocketOptionLevel" /> values. </param>
      <param name="optionName">One of the <see cref="T:System.Net.Sockets.SocketOptionName" /> values. </param>
      <param name="optionValue">The value of the option, represented as a <see cref="T:System.Boolean" />. </param>
      <exception cref="T:System.ObjectDisposedException">The <see cref="T:System.Net.Sockets.Socket" /> object has been closed. </exception>
      <exception cref="T:System.Net.Sockets.SocketException">An error occurred when attempting to access the socket. See the Remarks section for more information. </exception>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:System.Net.Sockets.Socket.SetSocketOption(System.Net.Sockets.SocketOptionLevel,System.Net.Sockets.SocketOptionName,System.Byte[])">
      <summary>Sets the specified <see cref="T:System.Net.Sockets.Socket" /> option to the specified value, represented as a byte array.</summary>
      <param name="optionLevel">One of the <see cref="T:System.Net.Sockets.SocketOptionLevel" /> values. </param>
      <param name="optionName">One of the <see cref="T:System.Net.Sockets.SocketOptionName" /> values. </param>
      <param name="optionValue">An array of type <see cref="T:System.Byte" /> that represents the value of the option. </param>
      <exception cref="T:System.Net.Sockets.SocketException">An error occurred when attempting to access the socket. See the Remarks section for more information. </exception>
      <exception cref="T:System.ObjectDisposedException">The <see cref="T:System.Net.Sockets.Socket" /> has been closed. </exception>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:System.Net.Sockets.Socket.SetSocketOption(System.Net.Sockets.SocketOptionLevel,System.Net.Sockets.SocketOptionName,System.Int32)">
      <summary>Sets the specified <see cref="T:System.Net.Sockets.Socket" /> option to the specified integer value.</summary>
      <param name="optionLevel">One of the <see cref="T:System.Net.Sockets.SocketOptionLevel" /> values. </param>
      <param name="optionName">One of the <see cref="T:System.Net.Sockets.SocketOptionName" /> values. </param>
      <param name="optionValue">A value of the option. </param>
      <exception cref="T:System.Net.Sockets.SocketException">An error occurred when attempting to access the socket. See the Remarks section for more information. </exception>
      <exception cref="T:System.ObjectDisposedException">The <see cref="T:System.Net.Sockets.Socket" /> has been closed. </exception>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:System.Net.Sockets.Socket.SetSocketOption(System.Net.Sockets.SocketOptionLevel,System.Net.Sockets.SocketOptionName,System.Object)">
      <summary>Sets the specified <see cref="T:System.Net.Sockets.Socket" /> option to the specified value, represented as an object.</summary>
      <param name="optionLevel">One of the <see cref="T:System.Net.Sockets.SocketOptionLevel" /> values. </param>
      <param name="optionName">One of the <see cref="T:System.Net.Sockets.SocketOptionName" /> values. </param>
      <param name="optionValue">A <see cref="T:System.Net.Sockets.LingerOption" /> or <see cref="T:System.Net.Sockets.MulticastOption" /> that contains the value of the option. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="optionValue" /> is null. </exception>
      <exception cref="T:System.Net.Sockets.SocketException">An error occurred when attempting to access the socket. See the Remarks section for more information. </exception>
      <exception cref="T:System.ObjectDisposedException">The <see cref="T:System.Net.Sockets.Socket" /> has been closed. </exception>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:System.Net.Sockets.Socket.Shutdown(System.Net.Sockets.SocketShutdown)">
      <summary>Disables sends and receives on a <see cref="T:System.Net.Sockets.Socket" />.</summary>
      <param name="how">One of the <see cref="T:System.Net.Sockets.SocketShutdown" /> values that specifies the operation that will no longer be allowed. </param>
      <exception cref="T:System.Net.Sockets.SocketException">An error occurred when attempting to access the socket. See the Remarks section for more information. </exception>
      <exception cref="T:System.ObjectDisposedException">The <see cref="T:System.Net.Sockets.Socket" /> has been closed. </exception>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
      </PermissionSet>
    </member>
    <member name="P:System.Net.Sockets.Socket.SocketType">
      <summary>Gets the type of the <see cref="T:System.Net.Sockets.Socket" />.</summary>
      <returns>One of the <see cref="T:System.Net.Sockets.SocketType" /> values.</returns>
    </member>
    <member name="P:System.Net.Sockets.Socket.SupportsIPv4">
      <summary>Gets a value indicating whether IPv4 support is available and enabled on the current host.</summary>
      <returns>true if the current host supports the IPv4 protocol; otherwise, false.</returns>
    </member>
    <member name="P:System.Net.Sockets.Socket.SupportsIPv6">
      <summary>Gets a value that indicates whether the Framework supports IPv6 for certain obsolete <see cref="T:System.Net.Dns" /> members.</summary>
      <returns>true if the Framework supports IPv6 for certain obsolete <see cref="T:System.Net.Dns" /> methods; otherwise, false.</returns>
    </member>
    <member name="P:System.Net.Sockets.Socket.Ttl">
      <summary>Gets or sets a value that specifies the Time To Live (TTL) value of Internet Protocol (IP) packets sent by the <see cref="T:System.Net.Sockets.Socket" />.</summary>
      <returns>The TTL value.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">The TTL value can't be set to a negative number.</exception>
      <exception cref="T:System.NotSupportedException">This property can be set only for sockets in the <see cref="F:System.Net.Sockets.AddressFamily.InterNetwork" /> or <see cref="F:System.Net.Sockets.AddressFamily.InterNetworkV6" /> families.</exception>
      <exception cref="T:System.Net.Sockets.SocketException">An error occurred when attempting to access the socket. This error is also returned when an attempt was made to set TTL to a value higher than 255.</exception>
      <exception cref="T:System.ObjectDisposedException">The <see cref="T:System.Net.Sockets.Socket" /> has been closed. </exception>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="P:System.Net.Sockets.Socket.UseOnlyOverlappedIO">
      <summary>Specifies whether the socket should only use Overlapped I/O mode.</summary>
      <returns>true if the <see cref="T:System.Net.Sockets.Socket" /> uses only overlapped I/O; otherwise, false. The default is false.</returns>
      <exception cref="T:System.InvalidOperationException">The socket has been bound to a completion port.</exception>
    </member>
    <member name="T:System.Net.Sockets.SocketAsyncEventArgs">
      <summary>Represents an asynchronous socket operation.</summary>
    </member>
    <member name="M:System.Net.Sockets.SocketAsyncEventArgs.#ctor">
      <summary>Creates an empty <see cref="T:System.Net.Sockets.SocketAsyncEventArgs" /> instance.</summary>
      <exception cref="T:System.NotSupportedException">The platform is not supported. </exception>
    </member>
    <member name="P:System.Net.Sockets.SocketAsyncEventArgs.AcceptSocket">
      <summary>Gets or sets the socket to use or the socket created for accepting a connection with an asynchronous socket method.</summary>
      <returns>The <see cref="T:System.Net.Sockets.Socket" /> to use or the socket created for accepting a connection with an asynchronous socket method.</returns>
    </member>
    <member name="P:System.Net.Sockets.SocketAsyncEventArgs.Buffer">
      <summary>Gets the data buffer to use with an asynchronous socket method.</summary>
      <returns>A <see cref="T:System.Byte" /> array that represents the data buffer to use with an asynchronous socket method.</returns>
    </member>
    <member name="P:System.Net.Sockets.SocketAsyncEventArgs.BufferList">
      <summary>Gets or sets an array of data buffers to use with an asynchronous socket method.</summary>
      <returns>An <see cref="T:System.Collections.IList" /> that represents an array of data buffers to use with an asynchronous socket method.</returns>
      <exception cref="T:System.ArgumentException">There are ambiguous buffers specified on a set operation. This exception occurs if the <see cref="P:System.Net.Sockets.SocketAsyncEventArgs.Buffer" /> property has been set to a non-null value and an attempt was made to set the <see cref="P:System.Net.Sockets.SocketAsyncEventArgs.BufferList" /> property to a non-null value.</exception>
    </member>
    <member name="P:System.Net.Sockets.SocketAsyncEventArgs.BytesTransferred">
      <summary>Gets the number of bytes transferred in the socket operation.</summary>
      <returns>An <see cref="T:System.Int32" /> that contains the number of bytes transferred in the socket operation.</returns>
    </member>
    <member name="E:System.Net.Sockets.SocketAsyncEventArgs.Completed">
      <summary>The event used to complete an asynchronous operation.</summary>
    </member>
    <member name="P:System.Net.Sockets.SocketAsyncEventArgs.ConnectByNameError">
      <summary>Gets the exception in the case of a connection failure when a <see cref="T:System.Net.DnsEndPoint" /> was used.</summary>
      <returns>An <see cref="T:System.Exception" /> that indicates the cause of the connection error when a <see cref="T:System.Net.DnsEndPoint" /> was specified for the <see cref="P:System.Net.Sockets.SocketAsyncEventArgs.RemoteEndPoint" /> property.</returns>
    </member>
    <member name="P:System.Net.Sockets.SocketAsyncEventArgs.ConnectSocket">
      <summary>The created and connected <see cref="T:System.Net.Sockets.Socket" /> object after successful completion of the <see cref="Overload:System.Net.Sockets.Socket.ConnectAsync" /> method.</summary>
      <returns>The connected <see cref="T:System.Net.Sockets.Socket" /> object.</returns>
    </member>
    <member name="P:System.Net.Sockets.SocketAsyncEventArgs.Count">
      <summary>Gets the maximum amount of data, in bytes, to send or receive in an asynchronous operation.</summary>
      <returns>An <see cref="T:System.Int32" /> that contains the maximum amount of data, in bytes, to send or receive.</returns>
    </member>
    <member name="P:System.Net.Sockets.SocketAsyncEventArgs.DisconnectReuseSocket">
      <summary>Gets or sets a value that specifies if socket can be reused after a disconnect operation.</summary>
      <returns>A <see cref="T:System.Boolean" /> that specifies if socket can be reused after a disconnect operation.</returns>
    </member>
    <member name="M:System.Net.Sockets.SocketAsyncEventArgs.Dispose">
      <summary>Releases the unmanaged resources used by the <see cref="T:System.Net.Sockets.SocketAsyncEventArgs" /> instance and optionally disposes of the managed resources.</summary>
    </member>
    <member name="M:System.Net.Sockets.SocketAsyncEventArgs.Finalize">
      <summary>Frees resources used by the <see cref="T:System.Net.Sockets.SocketAsyncEventArgs" /> class.</summary>
    </member>
    <member name="P:System.Net.Sockets.SocketAsyncEventArgs.LastOperation">
      <summary>Gets the type of socket operation most recently performed with this context object.</summary>
      <returns>A <see cref="T:System.Net.Sockets.SocketAsyncOperation" /> instance that indicates the type of socket operation most recently performed with this context object.</returns>
    </member>
    <member name="P:System.Net.Sockets.SocketAsyncEventArgs.Offset">
      <summary>Gets the offset, in bytes, into the data buffer referenced by the <see cref="P:System.Net.Sockets.SocketAsyncEventArgs.Buffer" /> property.</summary>
      <returns>An <see cref="T:System.Int32" /> that contains the offset, in bytes, into the data buffer referenced by the <see cref="P:System.Net.Sockets.SocketAsyncEventArgs.Buffer" /> property.</returns>
    </member>
    <member name="M:System.Net.Sockets.SocketAsyncEventArgs.OnCompleted(System.Net.Sockets.SocketAsyncEventArgs)">
      <summary>Represents a method that is called when an asynchronous operation completes.</summary>
      <param name="e">The event that is signaled.</param>
    </member>
    <member name="P:System.Net.Sockets.SocketAsyncEventArgs.ReceiveMessageFromPacketInfo">
      <summary>Gets the IP address and interface of a received packet.</summary>
      <returns>An <see cref="T:System.Net.Sockets.IPPacketInformation" /> instance that contains the destination IP address and interface of a received packet.</returns>
    </member>
    <member name="P:System.Net.Sockets.SocketAsyncEventArgs.RemoteEndPoint">
      <summary>Gets or sets the remote IP endpoint for an asynchronous operation.</summary>
      <returns>An <see cref="T:System.Net.EndPoint" /> that represents the remote IP endpoint for an asynchronous operation.</returns>
    </member>
    <member name="P:System.Net.Sockets.SocketAsyncEventArgs.SendPacketsElements">
      <summary>Gets or sets an array of buffers to be sent for an asynchronous operation used by the <see cref="M:System.Net.Sockets.Socket.SendPacketsAsync(System.Net.Sockets.SocketAsyncEventArgs)" /> method.</summary>
      <returns>An array of <see cref="T:System.Net.Sockets.SendPacketsElement" /> objects that represent an array of buffers to be sent.</returns>
    </member>
    <member name="P:System.Net.Sockets.SocketAsyncEventArgs.SendPacketsFlags">
      <summary>Gets or sets a bitwise combination of <see cref="T:System.Net.Sockets.TransmitFileOptions" /> values for an asynchronous operation used by the <see cref="M:System.Net.Sockets.Socket.SendPacketsAsync(System.Net.Sockets.SocketAsyncEventArgs)" /> method.</summary>
      <returns>A <see cref="T:System.Net.Sockets.TransmitFileOptions" /> that contains a bitwise combination of values that are used with an asynchronous operation.</returns>
    </member>
    <member name="P:System.Net.Sockets.SocketAsyncEventArgs.SendPacketsSendSize">
      <summary>Gets or sets the size, in bytes, of the data block used in the send operation.</summary>
      <returns>An <see cref="T:System.Int32" /> that contains the size, in bytes, of the data block used in the send operation.</returns>
    </member>
    <member name="M:System.Net.Sockets.SocketAsyncEventArgs.SetBuffer(System.Byte[],System.Int32,System.Int32)">
      <summary>Sets the data buffer to use with an asynchronous socket method.</summary>
      <param name="buffer">The data buffer to use with an asynchronous socket method.</param>
      <param name="offset">The offset, in bytes, in the data buffer where the operation starts.</param>
      <param name="count">The maximum amount of data, in bytes, to send or receive in the buffer.</param>
      <exception cref="T:System.ArgumentException">There are ambiguous buffers specified. This exception occurs if the <see cref="P:System.Net.Sockets.SocketAsyncEventArgs.Buffer" /> property is also not null and the <see cref="P:System.Net.Sockets.SocketAsyncEventArgs.BufferList" /> property is also not null.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">An argument was out of range. This exception occurs if the <paramref name="offset" /> parameter is less than zero or greater than the length of the array in the <see cref="P:System.Net.Sockets.SocketAsyncEventArgs.Buffer" /> property. This exception also occurs if the <paramref name="count" /> parameter is less than zero or greater than the length of the array in the <see cref="P:System.Net.Sockets.SocketAsyncEventArgs.Buffer" /> property minus the <paramref name="offset" /> parameter.</exception>
    </member>
    <member name="M:System.Net.Sockets.SocketAsyncEventArgs.SetBuffer(System.Int32,System.Int32)">
      <summary>Sets the data buffer to use with an asynchronous socket method.</summary>
      <param name="offset">The offset, in bytes, in the data buffer where the operation starts.</param>
      <param name="count">The maximum amount of data, in bytes, to send or receive in the buffer.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">An argument was out of range. This exception occurs if the <paramref name="offset" /> parameter is less than zero or greater than the length of the array in the <see cref="P:System.Net.Sockets.SocketAsyncEventArgs.Buffer" /> property. This exception also occurs if the <paramref name="count" /> parameter is less than zero or greater than the length of the array in the <see cref="P:System.Net.Sockets.SocketAsyncEventArgs.Buffer" /> property minus the <paramref name="offset" /> parameter.</exception>
    </member>
    <member name="P:System.Net.Sockets.SocketAsyncEventArgs.SocketError">
      <summary>Gets or sets the result of the asynchronous socket operation.</summary>
      <returns>A <see cref="T:System.Net.Sockets.SocketError" /> that represents the result of the asynchronous socket operation.</returns>
    </member>
    <member name="P:System.Net.Sockets.SocketAsyncEventArgs.SocketFlags">
      <summary>Gets the results of an asynchronous socket operation or sets the behavior of an asynchronous operation.</summary>
      <returns>A <see cref="T:System.Net.Sockets.SocketFlags" /> that represents the results of an asynchronous socket operation.</returns>
    </member>
    <member name="P:System.Net.Sockets.SocketAsyncEventArgs.UserToken">
      <summary>Gets or sets a user or application object associated with this asynchronous socket operation.</summary>
      <returns>An object that represents the user or application object associated with this asynchronous socket operation.</returns>
    </member>
    <member name="T:System.Net.Sockets.SocketAsyncOperation">
      <summary>The type of asynchronous socket operation most recently performed with this context object.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketAsyncOperation.None">
      <summary>None of the socket operations.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketAsyncOperation.Accept">
      <summary>A socket Accept operation. </summary>
    </member>
    <member name="F:System.Net.Sockets.SocketAsyncOperation.Connect">
      <summary>A socket Connect operation.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketAsyncOperation.Disconnect">
      <summary>A socket Disconnect operation.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketAsyncOperation.Receive">
      <summary>A socket Receive operation.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketAsyncOperation.ReceiveFrom">
      <summary>A socket ReceiveFrom operation.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketAsyncOperation.ReceiveMessageFrom">
      <summary>A socket ReceiveMessageFrom operation.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketAsyncOperation.Send">
      <summary>A socket Send operation.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketAsyncOperation.SendPackets">
      <summary>A socket SendPackets operation.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketAsyncOperation.SendTo">
      <summary>A socket SendTo operation.</summary>
    </member>
    <member name="T:System.Net.Sockets.SocketError">
      <summary>Defines error codes for the <see cref="T:System.Net.Sockets.Socket" /> class.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketError.Success">
      <summary>The <see cref="T:System.Net.Sockets.Socket" /> operation succeeded.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketError.SocketError">
      <summary>An unspecified <see cref="T:System.Net.Sockets.Socket" /> error has occurred.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketError.Interrupted">
      <summary>A blocking <see cref="T:System.Net.Sockets.Socket" /> call was canceled.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketError.AccessDenied">
      <summary>An attempt was made to access a <see cref="T:System.Net.Sockets.Socket" /> in a way that is forbidden by its access permissions.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketError.Fault">
      <summary>An invalid pointer address was detected by the underlying socket provider.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketError.InvalidArgument">
      <summary>An invalid argument was supplied to a <see cref="T:System.Net.Sockets.Socket" /> member.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketError.TooManyOpenSockets">
      <summary>There are too many open sockets in the underlying socket provider.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketError.WouldBlock">
      <summary>An operation on a nonblocking socket cannot be completed immediately.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketError.InProgress">
      <summary>A blocking operation is in progress.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketError.AlreadyInProgress">
      <summary>The nonblocking <see cref="T:System.Net.Sockets.Socket" /> already has an operation in progress.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketError.NotSocket">
      <summary>A <see cref="T:System.Net.Sockets.Socket" /> operation was attempted on a non-socket.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketError.DestinationAddressRequired">
      <summary>A required address was omitted from an operation on a <see cref="T:System.Net.Sockets.Socket" />.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketError.MessageSize">
      <summary>The datagram is too long.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketError.ProtocolType">
      <summary>The protocol type is incorrect for this <see cref="T:System.Net.Sockets.Socket" />.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketError.ProtocolOption">
      <summary>An unknown, invalid, or unsupported option or level was used with a <see cref="T:System.Net.Sockets.Socket" />.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketError.ProtocolNotSupported">
      <summary>The protocol is not implemented or has not been configured.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketError.SocketNotSupported">
      <summary>The support for the specified socket type does not exist in this address family.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketError.OperationNotSupported">
      <summary>The address family is not supported by the protocol family.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketError.ProtocolFamilyNotSupported">
      <summary>The protocol family is not implemented or has not been configured.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketError.AddressFamilyNotSupported">
      <summary>The address family specified is not supported. This error is returned if the IPv6 address family was specified and the IPv6 stack is not installed on the local machine. This error is returned if the IPv4 address family was specified and the IPv4 stack is not installed on the local machine.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketError.AddressAlreadyInUse">
      <summary>Only one use of an address is normally permitted.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketError.AddressNotAvailable">
      <summary>The selected IP address is not valid in this context.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketError.NetworkDown">
      <summary>The network is not available.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketError.NetworkUnreachable">
      <summary>No route to the remote host exists.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketError.NetworkReset">
      <summary>The application tried to set <see cref="F:System.Net.Sockets.SocketOptionName.KeepAlive" /> on a connection that has already timed out.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketError.ConnectionAborted">
      <summary>The connection was aborted by the .NET Framework or the underlying socket provider.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketError.ConnectionReset">
      <summary>The connection was reset by the remote peer.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketError.NoBufferSpaceAvailable">
      <summary>No free buffer space is available for a <see cref="T:System.Net.Sockets.Socket" /> operation.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketError.IsConnected">
      <summary>The <see cref="T:System.Net.Sockets.Socket" /> is already connected.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketError.NotConnected">
      <summary>The application tried to send or receive data, and the <see cref="T:System.Net.Sockets.Socket" /> is not connected.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketError.Shutdown">
      <summary>A request to send or receive data was disallowed because the <see cref="T:System.Net.Sockets.Socket" /> has already been closed.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketError.TimedOut">
      <summary>The connection attempt timed out, or the connected host has failed to respond.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketError.ConnectionRefused">
      <summary>The remote host is actively refusing a connection.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketError.HostDown">
      <summary>The operation failed because the remote host is down.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketError.HostUnreachable">
      <summary>There is no network route to the specified host.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketError.ProcessLimit">
      <summary>Too many processes are using the underlying socket provider.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketError.SystemNotReady">
      <summary>The network subsystem is unavailable.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketError.VersionNotSupported">
      <summary>The version of the underlying socket provider is out of range.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketError.NotInitialized">
      <summary>The underlying socket provider has not been initialized.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketError.Disconnecting">
      <summary>A graceful shutdown is in progress.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketError.TypeNotFound">
      <summary>The specified class was not found.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketError.HostNotFound">
      <summary>No such host is known. The name is not an official host name or alias.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketError.TryAgain">
      <summary>The name of the host could not be resolved. Try again later.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketError.NoRecovery">
      <summary>The error is unrecoverable or the requested database cannot be located.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketError.NoData">
      <summary>The requested name or IP address was not found on the name server.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketError.IOPending">
      <summary>The application has initiated an overlapped operation that cannot be completed immediately.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketError.OperationAborted">
      <summary>The overlapped operation was aborted due to the closure of the <see cref="T:System.Net.Sockets.Socket" />.</summary>
    </member>
    <member name="T:System.Net.Sockets.SocketException">
      <summary>The exception that is thrown when a socket error occurs.</summary>
    </member>
    <member name="M:System.Net.Sockets.SocketException.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Net.Sockets.SocketException" /> class with the last operating system error code.</summary>
    </member>
    <member name="M:System.Net.Sockets.SocketException.#ctor(System.Int32)">
      <summary>Initializes a new instance of the <see cref="T:System.Net.Sockets.SocketException" /> class with the specified error code.</summary>
      <param name="errorCode">The error code that indicates the error that occurred. </param>
    </member>
    <member name="M:System.Net.Sockets.SocketException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Initializes a new instance of the <see cref="T:System.Net.Sockets.SocketException" /> class from the specified instances of the <see cref="T:System.Runtime.Serialization.SerializationInfo" /> and <see cref="T:System.Runtime.Serialization.StreamingContext" /> classes.</summary>
      <param name="serializationInfo">A <see cref="T:System.Runtime.Serialization.SerializationInfo" /> instance that contains the information that is required to serialize the new <see cref="T:System.Net.Sockets.SocketException" /> instance. </param>
      <param name="streamingContext">A <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains the source of the serialized stream that is associated with the new <see cref="T:System.Net.Sockets.SocketException" /> instance. </param>
    </member>
    <member name="P:System.Net.Sockets.SocketException.ErrorCode">
      <summary>Gets the error code that is associated with this exception.</summary>
      <returns>An integer error code that is associated with this exception.</returns>
    </member>
    <member name="P:System.Net.Sockets.SocketException.Message">
      <summary>Gets the error message that is associated with this exception.</summary>
      <returns>A string that contains the error message. </returns>
    </member>
    <member name="P:System.Net.Sockets.SocketException.SocketErrorCode">
      <summary>Gets the error code that is associated with this exception.</summary>
      <returns>An integer error code that is associated with this exception.</returns>
    </member>
    <member name="T:System.Net.Sockets.SocketFlags">
      <summary>Specifies socket send and receive behaviors.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketFlags.None">
      <summary>Use no flags for this call.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketFlags.OutOfBand">
      <summary>Process out-of-band data.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketFlags.Peek">
      <summary>Peek at the incoming message.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketFlags.DontRoute">
      <summary>Send without using routing tables.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketFlags.MaxIOVectorLength">
      <summary>Provides a standard value for the number of WSABUF structures that are used to send and receive data.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketFlags.Truncated">
      <summary>The message was too large to fit into the specified buffer and was truncated.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketFlags.ControlDataTruncated">
      <summary>Indicates that the control data did not fit into an internal 64-KB buffer and was truncated.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketFlags.Broadcast">
      <summary>Indicates a broadcast packet.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketFlags.Multicast">
      <summary>Indicates a multicast packet.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketFlags.Partial">
      <summary>Partial send or receive for message.</summary>
    </member>
    <member name="T:System.Net.Sockets.SocketInformation">
      <summary>Encapsulates the information that is necessary to duplicate a <see cref="T:System.Net.Sockets.Socket" />.</summary>
    </member>
    <member name="P:System.Net.Sockets.SocketInformation.Options">
      <summary>Gets or sets the options for a <see cref="T:System.Net.Sockets.Socket" />.</summary>
      <returns>A <see cref="T:System.Net.Sockets.SocketInformationOptions" /> instance.</returns>
    </member>
    <member name="P:System.Net.Sockets.SocketInformation.ProtocolInformation">
      <summary>Gets or sets the protocol information for a <see cref="T:System.Net.Sockets.Socket" />.</summary>
      <returns>An array of type <see cref="T:System.Byte" />.</returns>
    </member>
    <member name="T:System.Net.Sockets.SocketInformationOptions">
      <summary>Describes states for a <see cref="T:System.Net.Sockets.Socket" />.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketInformationOptions.NonBlocking">
      <summary>The <see cref="T:System.Net.Sockets.Socket" /> is nonblocking.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketInformationOptions.Connected">
      <summary>The <see cref="T:System.Net.Sockets.Socket" /> is connected.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketInformationOptions.Listening">
      <summary>The <see cref="T:System.Net.Sockets.Socket" /> is listening for new connections.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketInformationOptions.UseOnlyOverlappedIO">
      <summary>The <see cref="T:System.Net.Sockets.Socket" /> uses overlapped I/O.</summary>
    </member>
    <member name="T:System.Net.Sockets.SocketOptionLevel">
      <summary>Defines socket option levels for the <see cref="M:System.Net.Sockets.Socket.SetSocketOption(System.Net.Sockets.SocketOptionLevel,System.Net.Sockets.SocketOptionName,System.Int32)" /> and <see cref="M:System.Net.Sockets.Socket.GetSocketOption(System.Net.Sockets.SocketOptionLevel,System.Net.Sockets.SocketOptionName)" /> methods.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketOptionLevel.Socket">
      <summary>
        <see cref="T:System.Net.Sockets.Socket" /> options apply to all sockets.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketOptionLevel.IP">
      <summary>
        <see cref="T:System.Net.Sockets.Socket" /> options apply only to IP sockets.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketOptionLevel.IPv6">
      <summary>
        <see cref="T:System.Net.Sockets.Socket" /> options apply only to IPv6 sockets.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketOptionLevel.Tcp">
      <summary>
        <see cref="T:System.Net.Sockets.Socket" /> options apply only to TCP sockets.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketOptionLevel.Udp">
      <summary>
        <see cref="T:System.Net.Sockets.Socket" /> options apply only to UDP sockets.</summary>
    </member>
    <member name="T:System.Net.Sockets.SocketOptionName">
      <summary>Defines configuration option names.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketOptionName.Debug">
      <summary>Record debugging information.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketOptionName.AcceptConnection">
      <summary>The socket is listening.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketOptionName.ReuseAddress">
      <summary>Allows the socket to be bound to an address that is already in use.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketOptionName.KeepAlive">
      <summary>Use keep-alives.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketOptionName.DontRoute">
      <summary>Do not route; send the packet directly to the interface addresses.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketOptionName.Broadcast">
      <summary>Permit sending broadcast messages on the socket.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketOptionName.UseLoopback">
      <summary>Bypass hardware when possible.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketOptionName.Linger">
      <summary>Linger on close if unsent data is present.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketOptionName.OutOfBandInline">
      <summary>Receives out-of-band data in the normal data stream.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketOptionName.DontLinger">
      <summary>Close the socket gracefully without lingering.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketOptionName.ExclusiveAddressUse">
      <summary>Enables a socket to be bound for exclusive access.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketOptionName.SendBuffer">
      <summary>Specifies the total per-socket buffer space reserved for sends. This is unrelated to the maximum message size or the size of a TCP window.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketOptionName.ReceiveBuffer">
      <summary>Specifies the total per-socket buffer space reserved for receives. This is unrelated to the maximum message size or the size of a TCP window.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketOptionName.SendLowWater">
      <summary>Specifies the low water mark for <see cref="Overload:System.Net.Sockets.Socket.Send" /> operations.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketOptionName.ReceiveLowWater">
      <summary>Specifies the low water mark for <see cref="Overload:System.Net.Sockets.Socket.Receive" /> operations.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketOptionName.SendTimeout">
      <summary>Send a time-out. This option applies only to synchronous methods; it has no effect on asynchronous methods such as the <see cref="M:System.Net.Sockets.Socket.BeginSend(System.Byte[],System.Int32,System.Int32,System.Net.Sockets.SocketFlags,System.AsyncCallback,System.Object)" /> method.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketOptionName.ReceiveTimeout">
      <summary>Receive a time-out. This option applies only to synchronous methods; it has no effect on asynchronous methods such as the <see cref="M:System.Net.Sockets.Socket.BeginSend(System.Byte[],System.Int32,System.Int32,System.Net.Sockets.SocketFlags,System.AsyncCallback,System.Object)" /> method.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketOptionName.Error">
      <summary>Get the error status and clear.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketOptionName.Type">
      <summary>Get the socket type.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketOptionName.MaxConnections">
      <summary>Not supported; will throw a <see cref="T:System.Net.Sockets.SocketException" /> if used.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketOptionName.IPOptions">
      <summary>Specifies the IP options to be inserted into outgoing datagrams.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketOptionName.HeaderIncluded">
      <summary>Indicates that the application provides the IP header for outgoing datagrams.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketOptionName.TypeOfService">
      <summary>Change the IP header type of the service field.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketOptionName.IpTimeToLive">
      <summary>Set the IP header Time-to-Live field.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketOptionName.MulticastInterface">
      <summary>Set the interface for outgoing multicast packets.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketOptionName.MulticastTimeToLive">
      <summary>An IP multicast Time to Live.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketOptionName.MulticastLoopback">
      <summary>An IP multicast loopback.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketOptionName.AddMembership">
      <summary>Add an IP group membership.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketOptionName.DropMembership">
      <summary>Drop an IP group membership.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketOptionName.DontFragment">
      <summary>Do not fragment IP datagrams.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketOptionName.AddSourceMembership">
      <summary>Join a source group.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketOptionName.DropSourceMembership">
      <summary>Drop a source group.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketOptionName.BlockSource">
      <summary>Block data from a source.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketOptionName.UnblockSource">
      <summary>Unblock a previously blocked source.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketOptionName.PacketInformation">
      <summary>Return information about received packets.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketOptionName.HopLimit">
      <summary>Specifies the maximum number of router hops for an Internet Protocol version 6 (IPv6) packet. This is similar to Time to Live (TTL) for Internet Protocol version 4.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketOptionName.IPProtectionLevel">
      <summary>Enables restriction of a IPv6 socket to a specified scope, such as addresses with the same link local or site local prefix.This socket option enables applications to place access restrictions on IPv6 sockets. Such restrictions enable an application running on a private LAN to simply and robustly harden itself against external attacks. This socket option widens or narrows the scope of a listening socket, enabling unrestricted access from public and private users when appropriate, or restricting access only to the same site, as required. This socket option has defined protection levels specified in the <see cref="T:System.Net.Sockets.IPProtectionLevel" /> enumeration.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketOptionName.IPv6Only">
      <summary>Indicates if a socket created for the AF_INET6 address family is restricted to IPv6 communications only. Sockets created for the AF_INET6 address family may be used for both IPv6 and IPv4 communications. Some applications may want to restrict their use of a socket created for the AF_INET6 address family to IPv6 communications only. When this value is non-zero (the default on Windows), a socket created for the AF_INET6 address family can be used to send and receive IPv6 packets only. When this value is zero, a socket created for the AF_INET6 address family can be used to send and receive packets to and from an IPv6 address or an IPv4 address. Note that the ability to interact with an IPv4 address requires the use of IPv4 mapped addresses. This socket option is supported on Windows Vista or later.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketOptionName.NoDelay">
      <summary>Disables the Nagle algorithm for send coalescing.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketOptionName.BsdUrgent">
      <summary>Use urgent data as defined in RFC-1222. This option can be set only once; after it is set, it cannot be turned off.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketOptionName.Expedited">
      <summary>Use expedited data as defined in RFC-1222. This option can be set only once; after it is set, it cannot be turned off.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketOptionName.NoChecksum">
      <summary>Send UDP datagrams with checksum set to zero.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketOptionName.ChecksumCoverage">
      <summary>Set or get the UDP checksum coverage.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketOptionName.UpdateAcceptContext">
      <summary>Updates an accepted socket's properties by using those of an existing socket. This is equivalent to using the Winsock2 SO_UPDATE_ACCEPT_CONTEXT socket option and is supported only on connection-oriented sockets.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketOptionName.UpdateConnectContext">
      <summary>Updates a connected socket's properties by using those of an existing socket. This is equivalent to using the Winsock2 SO_UPDATE_CONNECT_CONTEXT socket option and is supported only on connection-oriented sockets.</summary>
    </member>
    <member name="T:System.Net.Sockets.SocketShutdown">
      <summary>Defines constants that are used by the <see cref="M:System.Net.Sockets.Socket.Shutdown(System.Net.Sockets.SocketShutdown)" /> method.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketShutdown.Receive">
      <summary>Disables a <see cref="T:System.Net.Sockets.Socket" /> for receiving. This field is constant.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketShutdown.Send">
      <summary>Disables a <see cref="T:System.Net.Sockets.Socket" /> for sending. This field is constant.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketShutdown.Both">
      <summary>Disables a <see cref="T:System.Net.Sockets.Socket" /> for both sending and receiving. This field is constant.</summary>
    </member>
    <member name="T:System.Net.Sockets.SocketType">
      <summary>Specifies the type of socket that an instance of the <see cref="T:System.Net.Sockets.Socket" /> class represents.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketType.Stream">
      <summary>Supports reliable, two-way, connection-based byte streams without the duplication of data and without preservation of boundaries. A Socket of this type communicates with a single peer and requires a remote host connection before communication can begin. <see cref="F:System.Net.Sockets.SocketType.Stream" /> uses the Transmission Control Protocol (<see cref="F:System.Net.Sockets.ProtocolType.Tcp" />) <see cref="T:System.Net.Sockets.ProtocolType" /> and the InterNetwork<see cref="T:System.Net.Sockets.AddressFamily" />.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketType.Dgram">
      <summary>Supports datagrams, which are connectionless, unreliable messages of a fixed (typically small) maximum length. Messages might be lost or duplicated and might arrive out of order. A <see cref="T:System.Net.Sockets.Socket" /> of type <see cref="F:System.Net.Sockets.SocketType.Dgram" /> requires no connection prior to sending and receiving data, and can communicate with multiple peers. <see cref="F:System.Net.Sockets.SocketType.Dgram" /> uses the Datagram Protocol (<see cref="F:System.Net.Sockets.ProtocolType.Udp" />) and the <see cref="F:System.Net.Sockets.AddressFamily.InterNetwork" /><see cref="T:System.Net.Sockets.AddressFamily" />.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketType.Raw">
      <summary>Supports access to the underlying transport protocol. Using the <see cref="T:System.Net.Sockets.SocketType" /><see cref="F:System.Net.Sockets.SocketType.Raw" />, you can communicate using protocols like Internet Control Message Protocol (<see cref="F:System.Net.Sockets.ProtocolType.Icmp" />) and Internet Group Management Protocol (<see cref="F:System.Net.Sockets.ProtocolType.Igmp" />). Your application must provide a complete IP header when sending. Received datagrams return with the IP header and options intact.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketType.Rdm">
      <summary>Supports connectionless, message-oriented, reliably delivered messages, and preserves message boundaries in data. Rdm (Reliably Delivered Messages) messages arrive unduplicated and in order. Furthermore, the sender is notified if messages are lost. If you initialize a Socket using <see cref="F:System.Net.Sockets.SocketType.Rdm" />, you do not require a remote host connection before sending and receiving data. With <see cref="F:System.Net.Sockets.SocketType.Rdm" />, you can communicate with multiple peers.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketType.Seqpacket">
      <summary>Provides connection-oriented and reliable two-way transfer of ordered byte streams across a network. <see cref="F:System.Net.Sockets.SocketType.Seqpacket" /> does not duplicate data, and it preserves boundaries within the data stream. A Socket of type <see cref="F:System.Net.Sockets.SocketType.Seqpacket" /> communicates with a single peer and requires a remote host connection before communication can begin.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketType.Unknown">
      <summary>Specifies an unknown Socket type.</summary>
    </member>
    <member name="T:System.Net.Sockets.TcpClient">
      <summary>Provides client connections for TCP network services.</summary>
    </member>
    <member name="M:System.Net.Sockets.TcpClient.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Net.Sockets.TcpClient" /> class.</summary>
    </member>
    <member name="M:System.Net.Sockets.TcpClient.#ctor(System.Net.IPEndPoint)">
      <summary>Initializes a new instance of the <see cref="T:System.Net.Sockets.TcpClient" /> class and binds it to the specified local endpoint.</summary>
      <param name="localEP">The <see cref="T:System.Net.IPEndPoint" /> to which you bind the TCP <see cref="T:System.Net.Sockets.Socket" />. </param>
      <exception cref="T:System.ArgumentNullException">The  <paramref name="localEP" /> parameter is null. </exception>
    </member>
    <member name="M:System.Net.Sockets.TcpClient.#ctor(System.Net.Sockets.AddressFamily)">
      <summary>Initializes a new instance of the <see cref="T:System.Net.Sockets.TcpClient" /> class with the specified family.</summary>
      <param name="family">The <see cref="P:System.Net.IPAddress.AddressFamily" /> of the IP protocol. </param>
      <exception cref="T:System.ArgumentException">The <paramref name="family" /> parameter is not equal to AddressFamily.InterNetwork -or- The <paramref name="family" /> parameter is not equal to AddressFamily.InterNetworkV6 </exception>
    </member>
    <member name="M:System.Net.Sockets.TcpClient.#ctor(System.String,System.Int32)">
      <summary>Initializes a new instance of the <see cref="T:System.Net.Sockets.TcpClient" /> class and connects to the specified port on the specified host.</summary>
      <param name="hostname">The DNS name of the remote host to which you intend to connect. </param>
      <param name="port">The port number of the remote host to which you intend to connect. </param>
      <exception cref="T:System.ArgumentNullException">The <paramref name="hostname" /> parameter is null. </exception>
      <exception cref="T:System.ArgumentOutOfRangeException">The <paramref name="port" /> parameter is not between <see cref="F:System.Net.IPEndPoint.MinPort" /> and <see cref="F:System.Net.IPEndPoint.MaxPort" />. </exception>
      <exception cref="T:System.Net.Sockets.SocketException">An error occurred when accessing the socket. See the Remarks section for more information. </exception>
    </member>
    <member name="P:System.Net.Sockets.TcpClient.Active">
      <summary>Gets or set a value that indicates whether a connection has been made.</summary>
      <returns>true if the connection has been made; otherwise, false.</returns>
    </member>
    <member name="P:System.Net.Sockets.TcpClient.Available">
      <summary>Gets the amount of data that has been received from the network and is available to be read.</summary>
      <returns>The number of bytes of data received from the network and available to be read.</returns>
      <exception cref="T:System.Net.Sockets.SocketException">An error occurred when attempting to access the socket. See the Remarks section for more information. </exception>
      <exception cref="T:System.ObjectDisposedException">The <see cref="T:System.Net.Sockets.Socket" /> has been closed. </exception>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
      </PermissionSet>
    </member>
    <member name="M:System.Net.Sockets.TcpClient.BeginConnect(System.Net.IPAddress,System.Int32,System.AsyncCallback,System.Object)">
      <summary>Begins an asynchronous request for a remote host connection. The remote host is specified by an <see cref="T:System.Net.IPAddress" /> and a port number (<see cref="T:System.Int32" />).</summary>
      <returns>An <see cref="T:System.IAsyncResult" /> object that references the asynchronous connection.</returns>
      <param name="address">The <see cref="T:System.Net.IPAddress" /> of the remote host.</param>
      <param name="port">The port number of the remote host.</param>
      <param name="requestCallback">An <see cref="T:System.AsyncCallback" /> delegate that references the method to invoke when the operation is complete. </param>
      <param name="state">A user-defined object that contains information about the connect operation. This object is passed to the <paramref name="requestCallback" /> delegate when the operation is complete.</param>
      <exception cref="T:System.ArgumentNullException">The <paramref name="address" /> parameter is null. </exception>
      <exception cref="T:System.Net.Sockets.SocketException">An error occurred when attempting to access the socket. See the Remarks section for more information. </exception>
      <exception cref="T:System.ObjectDisposedException">The <see cref="T:System.Net.Sockets.Socket" /> has been closed. </exception>
      <exception cref="T:System.Security.SecurityException">A caller higher in the call stack does not have permission for the requested operation. </exception>
      <exception cref="T:System.ArgumentOutOfRangeException">The port number is not valid.</exception>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Diagnostics.PerformanceCounterPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Net.SocketPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:System.Net.Sockets.TcpClient.BeginConnect(System.Net.IPAddress[],System.Int32,System.AsyncCallback,System.Object)">
      <summary>Begins an asynchronous request for a remote host connection. The remote host is specified by an <see cref="T:System.Net.IPAddress" /> array and a port number (<see cref="T:System.Int32" />).</summary>
      <returns>An <see cref="T:System.IAsyncResult" /> object that references the asynchronous connection.</returns>
      <param name="addresses">At least one <see cref="T:System.Net.IPAddress" /> that designates the remote hosts.</param>
      <param name="port">The port number of the remote hosts.</param>
      <param name="requestCallback">An <see cref="T:System.AsyncCallback" /> delegate that references the method to invoke when the operation is complete.</param>
      <param name="state">A user-defined object that contains information about the connect operation. This object is passed to the <paramref name="requestCallback" /> delegate when the operation is complete.</param>
      <exception cref="T:System.ArgumentNullException">The <paramref name="addresses" /> parameter is null. </exception>
      <exception cref="T:System.Net.Sockets.SocketException">An error occurred when attempting to access the socket. See the Remarks section for more information. </exception>
      <exception cref="T:System.ObjectDisposedException">The <see cref="T:System.Net.Sockets.Socket" /> has been closed. </exception>
      <exception cref="T:System.Security.SecurityException">A caller higher in the call stack does not have permission for the requested operation. </exception>
      <exception cref="T:System.ArgumentOutOfRangeException">The port number is not valid.</exception>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Diagnostics.PerformanceCounterPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Net.SocketPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:System.Net.Sockets.TcpClient.BeginConnect(System.String,System.Int32,System.AsyncCallback,System.Object)">
      <summary>Begins an asynchronous request for a remote host connection. The remote host is specified by a host name (<see cref="T:System.String" />) and a port number (<see cref="T:System.Int32" />).</summary>
      <returns>An <see cref="T:System.IAsyncResult" /> object that references the asynchronous connection.</returns>
      <param name="host">The name of the remote host.</param>
      <param name="port">The port number of the remote host.</param>
      <param name="requestCallback">An <see cref="T:System.AsyncCallback" /> delegate that references the method to invoke when the operation is complete.</param>
      <param name="state">A user-defined object that contains information about the connect operation. This object is passed to the <paramref name="requestCallback" /> delegate when the operation is complete.</param>
      <exception cref="T:System.ArgumentNullException">The <paramref name="host" /> parameter is null. </exception>
      <exception cref="T:System.Net.Sockets.SocketException">An error occurred when attempting to access the socket. See the Remarks section for more information. </exception>
      <exception cref="T:System.ObjectDisposedException">The <see cref="T:System.Net.Sockets.Socket" /> has been closed. </exception>
      <exception cref="T:System.Security.SecurityException">A caller higher in the call stack does not have permission for the requested operation. </exception>
      <exception cref="T:System.ArgumentOutOfRangeException">The port number is not valid.</exception>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Diagnostics.PerformanceCounterPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Net.SocketPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="P:System.Net.Sockets.TcpClient.Client">
      <summary>Gets or sets the underlying <see cref="T:System.Net.Sockets.Socket" />.</summary>
      <returns>The underlying network <see cref="T:System.Net.Sockets.Socket" />.</returns>
    </member>
    <member name="M:System.Net.Sockets.TcpClient.Close">
      <summary>Disposes this <see cref="T:System.Net.Sockets.TcpClient" /> instance and requests that the underlying TCP connection be closed.</summary>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
      </PermissionSet>
    </member>
    <member name="M:System.Net.Sockets.TcpClient.Connect(System.Net.IPAddress,System.Int32)">
      <summary>Connects the client to a remote TCP host using the specified IP address and port number.</summary>
      <param name="address">The <see cref="T:System.Net.IPAddress" /> of the host to which you intend to connect. </param>
      <param name="port">The port number to which you intend to connect. </param>
      <exception cref="T:System.ArgumentNullException">The <paramref name="address" /> parameter is null. </exception>
      <exception cref="T:System.ArgumentOutOfRangeException">The <paramref name="port" /> is not between <see cref="F:System.Net.IPEndPoint.MinPort" /> and <see cref="F:System.Net.IPEndPoint.MaxPort" />. </exception>
      <exception cref="T:System.Net.Sockets.SocketException">An error occurred when accessing the socket. See the Remarks section for more information. </exception>
      <exception cref="T:System.ObjectDisposedException">
        <see cref="T:System.Net.Sockets.TcpClient" /> is closed. </exception>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Diagnostics.PerformanceCounterPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Net.SocketPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:System.Net.Sockets.TcpClient.Connect(System.Net.IPAddress[],System.Int32)">
      <summary>Connects the client to a remote TCP host using the specified IP addresses and port number.</summary>
      <param name="ipAddresses">The <see cref="T:System.Net.IPAddress" /> array of the host to which you intend to connect.</param>
      <param name="port">The port number to which you intend to connect.</param>
      <exception cref="T:System.ArgumentNullException">The <paramref name="ipAddresses" /> parameter is null. </exception>
      <exception cref="T:System.ArgumentOutOfRangeException">The port number is not valid.</exception>
      <exception cref="T:System.Net.Sockets.SocketException">An error occurred when attempting to access the socket. See the Remarks section for more information. </exception>
      <exception cref="T:System.ObjectDisposedException">The <see cref="T:System.Net.Sockets.Socket" /> has been closed. </exception>
      <exception cref="T:System.Security.SecurityException">A caller higher in the call stack does not have permission for the requested operation. </exception>
      <exception cref="T:System.NotSupportedException">This method is valid for sockets that use the <see cref="F:System.Net.Sockets.AddressFamily.InterNetwork" /> flag or the <see cref="F:System.Net.Sockets.AddressFamily.InterNetworkV6" /> flag.</exception>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Diagnostics.PerformanceCounterPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Net.SocketPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:System.Net.Sockets.TcpClient.Connect(System.Net.IPEndPoint)">
      <summary>Connects the client to a remote TCP host using the specified remote network endpoint.</summary>
      <param name="remoteEP">The <see cref="T:System.Net.IPEndPoint" /> to which you intend to connect. </param>
      <exception cref="T:System.ArgumentNullException">The <paramref name="remoteEp" /> parameter is null. </exception>
      <exception cref="T:System.Net.Sockets.SocketException">An error occurred when accessing the socket. See the Remarks section for more information. </exception>
      <exception cref="T:System.ObjectDisposedException">The <see cref="T:System.Net.Sockets.TcpClient" /> is closed. </exception>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Diagnostics.PerformanceCounterPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Net.SocketPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:System.Net.Sockets.TcpClient.Connect(System.String,System.Int32)">
      <summary>Connects the client to the specified port on the specified host.</summary>
      <param name="hostname">The DNS name of the remote host to which you intend to connect. </param>
      <param name="port">The port number of the remote host to which you intend to connect. </param>
      <exception cref="T:System.ArgumentNullException">The <paramref name="hostname" /> parameter is null. </exception>
      <exception cref="T:System.ArgumentOutOfRangeException">The <paramref name="port" /> parameter is not between <see cref="F:System.Net.IPEndPoint.MinPort" /> and <see cref="F:System.Net.IPEndPoint.MaxPort" />. </exception>
      <exception cref="T:System.Net.Sockets.SocketException">An error occurred when accessing the socket. See the Remarks section for more information. </exception>
      <exception cref="T:System.ObjectDisposedException">
        <see cref="T:System.Net.Sockets.TcpClient" /> is closed. </exception>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Diagnostics.PerformanceCounterPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Net.SocketPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="P:System.Net.Sockets.TcpClient.Connected">
      <summary>Gets a value indicating whether the underlying <see cref="T:System.Net.Sockets.Socket" /> for a <see cref="T:System.Net.Sockets.TcpClient" /> is connected to a remote host.</summary>
      <returns>true if the <see cref="P:System.Net.Sockets.TcpClient.Client" /> socket was connected to a remote resource as of the most recent operation; otherwise, false.</returns>
    </member>
    <member name="M:System.Net.Sockets.TcpClient.Dispose(System.Boolean)">
      <summary>Releases the unmanaged resources used by the <see cref="T:System.Net.Sockets.TcpClient" /> and optionally releases the managed resources.</summary>
      <param name="disposing">Set to true to release both managed and unmanaged resources; false to release only unmanaged resources. </param>
    </member>
    <member name="M:System.Net.Sockets.TcpClient.EndConnect(System.IAsyncResult)">
      <summary>Asynchronously accepts an incoming connection attempt.</summary>
      <param name="asyncResult">An <see cref="T:System.IAsyncResult" /> object returned by a call to <see cref="Overload:System.Net.Sockets.TcpClient.BeginConnect" />.</param>
      <exception cref="T:System.ArgumentNullException">The <paramref name="asyncResult" /> parameter is null. </exception>
      <exception cref="T:System.ArgumentException">The <paramref name="asyncResult" /> parameter was not returned by a call to a <see cref="Overload:System.Net.Sockets.TcpClient.BeginConnect" /> method. </exception>
      <exception cref="T:System.InvalidOperationException">The <see cref="M:System.Net.Sockets.TcpClient.EndConnect(System.IAsyncResult)" /> method was previously called for the asynchronous connection. </exception>
      <exception cref="T:System.Net.Sockets.SocketException">An error occurred when attempting to access the <see cref="T:System.Net.Sockets.Socket" />. See the Remarks section for more information. </exception>
      <exception cref="T:System.ObjectDisposedException">The underlying <see cref="T:System.Net.Sockets.Socket" /> has been closed. </exception>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
      </PermissionSet>
    </member>
    <member name="P:System.Net.Sockets.TcpClient.ExclusiveAddressUse">
      <summary>Gets or sets a <see cref="T:System.Boolean" /> value that specifies whether the <see cref="T:System.Net.Sockets.TcpClient" /> allows only one client to use a port.</summary>
      <returns>true if the <see cref="T:System.Net.Sockets.TcpClient" /> allows only one client to use a specific port; otherwise, false. The default is true for Windows Server 2003 and Windows XP Service Pack 2 and later, and false for all other versions.</returns>
      <exception cref="T:System.Net.Sockets.SocketException">An error occurred when attempting to access the underlying socket.</exception>
      <exception cref="T:System.ObjectDisposedException">The underlying <see cref="T:System.Net.Sockets.Socket" /> has been closed. </exception>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:System.Net.Sockets.TcpClient.Finalize">
      <summary>Frees resources used by the <see cref="T:System.Net.Sockets.TcpClient" /> class.</summary>
    </member>
    <member name="M:System.Net.Sockets.TcpClient.GetStream">
      <summary>Returns the <see cref="T:System.Net.Sockets.NetworkStream" /> used to send and receive data.</summary>
      <returns>The underlying <see cref="T:System.Net.Sockets.NetworkStream" />.</returns>
      <exception cref="T:System.InvalidOperationException">The <see cref="T:System.Net.Sockets.TcpClient" /> is not connected to a remote host. </exception>
      <exception cref="T:System.ObjectDisposedException">The <see cref="T:System.Net.Sockets.TcpClient" /> has been closed. </exception>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
      </PermissionSet>
    </member>
    <member name="P:System.Net.Sockets.TcpClient.LingerState">
      <summary>Gets or sets information about the linger state of the associated socket.</summary>
      <returns>A <see cref="T:System.Net.Sockets.LingerOption" />. By default, lingering is disabled.</returns>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="P:System.Net.Sockets.TcpClient.NoDelay">
      <summary>Gets or sets a value that disables a delay when send or receive buffers are not full.</summary>
      <returns>true if the delay is disabled, otherwise false. The default value is false.</returns>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="P:System.Net.Sockets.TcpClient.ReceiveBufferSize">
      <summary>Gets or sets the size of the receive buffer.</summary>
      <returns>The size of the receive buffer, in bytes. The default value is 8192 bytes.</returns>
      <exception cref="T:System.Net.Sockets.SocketException">An error occurred when setting the buffer size.-or-In .NET Compact Framework applications, you cannot set this property. For a workaround, see the Platform Note in Remarks.</exception>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="P:System.Net.Sockets.TcpClient.ReceiveTimeout">
      <summary>Gets or sets the amount of time a <see cref="T:System.Net.Sockets.TcpClient" /> will wait to receive data once a read operation is initiated.</summary>
      <returns>The time-out value of the connection in milliseconds. The default value is 0.</returns>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="P:System.Net.Sockets.TcpClient.SendBufferSize">
      <summary>Gets or sets the size of the send buffer.</summary>
      <returns>The size of the send buffer, in bytes. The default value is 8192 bytes.</returns>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="P:System.Net.Sockets.TcpClient.SendTimeout">
      <summary>Gets or sets the amount of time a <see cref="T:System.Net.Sockets.TcpClient" /> will wait for a send operation to complete successfully.</summary>
      <returns>The send time-out value, in milliseconds. The default is 0.</returns>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:System.Net.Sockets.TcpClient.System#IDisposable#Dispose">
      <summary>Releases all resources used by the <see cref="T:System.Net.Sockets.TcpClient" />. </summary>
    </member>
    <member name="T:System.Net.Sockets.TcpListener">
      <summary>Listens for connections from TCP network clients.</summary>
    </member>
    <member name="M:System.Net.Sockets.TcpListener.#ctor(System.Int32)">
      <summary>Initializes a new instance of the <see cref="T:System.Net.Sockets.TcpListener" /> class that listens on the specified port.</summary>
      <param name="port">The port on which to listen for incoming connection attempts. </param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="port" /> is not between <see cref="F:System.Net.IPEndPoint.MinPort" /> and <see cref="F:System.Net.IPEndPoint.MaxPort" />. </exception>
    </member>
    <member name="M:System.Net.Sockets.TcpListener.#ctor(System.Net.IPAddress,System.Int32)">
      <summary>Initializes a new instance of the <see cref="T:System.Net.Sockets.TcpListener" /> class that listens for incoming connection attempts on the specified local IP address and port number.</summary>
      <param name="localaddr">An <see cref="T:System.Net.IPAddress" /> that represents the local IP address. </param>
      <param name="port">The port on which to listen for incoming connection attempts. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="localaddr" /> is null. </exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="port" /> is not between <see cref="F:System.Net.IPEndPoint.MinPort" /> and <see cref="F:System.Net.IPEndPoint.MaxPort" />. </exception>
    </member>
    <member name="M:System.Net.Sockets.TcpListener.#ctor(System.Net.IPEndPoint)">
      <summary>Initializes a new instance of the <see cref="T:System.Net.Sockets.TcpListener" /> class with the specified local endpoint.</summary>
      <param name="localEP">An <see cref="T:System.Net.IPEndPoint" /> that represents the local endpoint to which to bind the listener <see cref="T:System.Net.Sockets.Socket" />. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="localEP" /> is null. </exception>
    </member>
    <member name="M:System.Net.Sockets.TcpListener.AcceptSocket">
      <summary>Accepts a pending connection request.</summary>
      <returns>A <see cref="T:System.Net.Sockets.Socket" /> used to send and receive data.</returns>
      <exception cref="T:System.InvalidOperationException">The listener has not been started with a call to <see cref="M:System.Net.Sockets.TcpListener.Start" />. </exception>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
        <IPermission class="System.Diagnostics.PerformanceCounterPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:System.Net.Sockets.TcpListener.AcceptTcpClient">
      <summary>Accepts a pending connection request </summary>
      <returns>A <see cref="T:System.Net.Sockets.TcpClient" /> used to send and receive data.</returns>
      <exception cref="T:System.InvalidOperationException">The listener has not been started with a call to <see cref="M:System.Net.Sockets.TcpListener.Start" />. </exception>
      <exception cref="T:System.Net.Sockets.SocketException">Use the <see cref="P:System.Net.Sockets.SocketException.ErrorCode" /> property to obtain the specific error code. When you have obtained this code, you can refer to the Windows Sockets version 2 API error code documentation in MSDN for a detailed description of the error. </exception>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
        <IPermission class="System.Diagnostics.PerformanceCounterPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="P:System.Net.Sockets.TcpListener.Active">
      <summary>Gets a value that indicates whether <see cref="T:System.Net.Sockets.TcpListener" /> is actively listening for client connections.</summary>
      <returns>true if <see cref="T:System.Net.Sockets.TcpListener" /> is actively listening; otherwise, false.</returns>
    </member>
    <member name="M:System.Net.Sockets.TcpListener.AllowNatTraversal(System.Boolean)">
      <summary>Enables or disables Network Address Translation (NAT) traversal on a <see cref="T:System.Net.Sockets.TcpListener" /> instance.</summary>
      <param name="allowed">A Boolean value that specifies whether to enable or disable NAT traversal.</param>
      <exception cref="T:System.InvalidOperationException">The <see cref="M:System.Net.Sockets.TcpListener.AllowNatTraversal(System.Boolean)" /> method was called after calling the <see cref="M:System.Net.Sockets.TcpListener.Start" /> method</exception>
    </member>
    <member name="M:System.Net.Sockets.TcpListener.BeginAcceptSocket(System.AsyncCallback,System.Object)">
      <summary>Begins an asynchronous operation to accept an incoming connection attempt.</summary>
      <returns>An <see cref="T:System.IAsyncResult" /> that references the asynchronous creation of the <see cref="T:System.Net.Sockets.Socket" />.</returns>
      <param name="callback">An <see cref="T:System.AsyncCallback" /> delegate that references the method to invoke when the operation is complete.</param>
      <param name="state">A user-defined object containing information about the accept operation. This object is passed to the <paramref name="callback" /> delegate when the operation is complete.</param>
      <exception cref="T:System.Net.Sockets.SocketException">An error occurred while attempting to access the socket. See the Remarks section for more information. </exception>
      <exception cref="T:System.ObjectDisposedException">The <see cref="T:System.Net.Sockets.Socket" /> has been closed. </exception>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
        <IPermission class="System.Diagnostics.PerformanceCounterPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:System.Net.Sockets.TcpListener.BeginAcceptTcpClient(System.AsyncCallback,System.Object)">
      <summary>Begins an asynchronous operation to accept an incoming connection attempt.</summary>
      <returns>An <see cref="T:System.IAsyncResult" /> that references the asynchronous creation of the <see cref="T:System.Net.Sockets.TcpClient" />.</returns>
      <param name="callback">An <see cref="T:System.AsyncCallback" /> delegate that references the method to invoke when the operation is complete.</param>
      <param name="state">A user-defined object containing information about the accept operation. This object is passed to the <paramref name="callback" /> delegate when the operation is complete.</param>
      <exception cref="T:System.Net.Sockets.SocketException">An error occurred while attempting to access the socket. See the Remarks section for more information. </exception>
      <exception cref="T:System.ObjectDisposedException">The <see cref="T:System.Net.Sockets.Socket" /> has been closed. </exception>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
        <IPermission class="System.Diagnostics.PerformanceCounterPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:System.Net.Sockets.TcpListener.EndAcceptSocket(System.IAsyncResult)">
      <summary>Asynchronously accepts an incoming connection attempt and creates a new <see cref="T:System.Net.Sockets.Socket" /> to handle remote host communication.</summary>
      <returns>A <see cref="T:System.Net.Sockets.Socket" />.</returns>
      <param name="asyncResult">An <see cref="T:System.IAsyncResult" /> returned by a call to the <see cref="M:System.Net.Sockets.TcpListener.BeginAcceptSocket(System.AsyncCallback,System.Object)" />  method.</param>
      <exception cref="T:System.ObjectDisposedException">The underlying <see cref="T:System.Net.Sockets.Socket" /> has been closed. </exception>
      <exception cref="T:System.ArgumentNullException">The <paramref name="asyncResult" /> parameter is null. </exception>
      <exception cref="T:System.ArgumentException">The <paramref name="asyncResult" /> parameter was not created by a call to the <see cref="M:System.Net.Sockets.TcpListener.BeginAcceptSocket(System.AsyncCallback,System.Object)" /> method. </exception>
      <exception cref="T:System.InvalidOperationException">The <see cref="M:System.Net.Sockets.TcpListener.EndAcceptSocket(System.IAsyncResult)" /> method was previously called. </exception>
      <exception cref="T:System.Net.Sockets.SocketException">An error occurred while attempting to access the <see cref="T:System.Net.Sockets.Socket" />. See the Remarks section for more information. </exception>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
        <IPermission class="System.Diagnostics.PerformanceCounterPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:System.Net.Sockets.TcpListener.EndAcceptTcpClient(System.IAsyncResult)">
      <summary>Asynchronously accepts an incoming connection attempt and creates a new <see cref="T:System.Net.Sockets.TcpClient" /> to handle remote host communication.</summary>
      <returns>A <see cref="T:System.Net.Sockets.TcpClient" />.</returns>
      <param name="asyncResult">An <see cref="T:System.IAsyncResult" /> returned by a call to the <see cref="M:System.Net.Sockets.TcpListener.BeginAcceptTcpClient(System.AsyncCallback,System.Object)" /> method.</param>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
        <IPermission class="System.Diagnostics.PerformanceCounterPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="P:System.Net.Sockets.TcpListener.ExclusiveAddressUse">
      <summary>Gets or sets a <see cref="T:System.Boolean" /> value that specifies whether the <see cref="T:System.Net.Sockets.TcpListener" /> allows only one underlying socket to listen to a specific port.</summary>
      <returns>true if the <see cref="T:System.Net.Sockets.TcpListener" /> allows only one <see cref="T:System.Net.Sockets.TcpListener" /> to listen to a specific port; otherwise, false. . The default is true for Windows Server 2003 and Windows XP Service Pack 2 and later, and false for all other versions.</returns>
      <exception cref="T:System.InvalidOperationException">The <see cref="T:System.Net.Sockets.TcpListener" /> has been started. Call the <see cref="M:System.Net.Sockets.TcpListener.Stop" /> method and then set the <see cref="P:System.Net.Sockets.Socket.ExclusiveAddressUse" /> property.</exception>
      <exception cref="T:System.Net.Sockets.SocketException">An error occurred when attempting to access the underlying socket.</exception>
      <exception cref="T:System.ObjectDisposedException">The underlying <see cref="T:System.Net.Sockets.Socket" /> has been closed. </exception>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="P:System.Net.Sockets.TcpListener.LocalEndpoint">
      <summary>Gets the underlying <see cref="T:System.Net.EndPoint" /> of the current <see cref="T:System.Net.Sockets.TcpListener" />.</summary>
      <returns>The <see cref="T:System.Net.EndPoint" /> to which the <see cref="T:System.Net.Sockets.Socket" /> is bound.</returns>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
      </PermissionSet>
    </member>
    <member name="M:System.Net.Sockets.TcpListener.Pending">
      <summary>Determines if there are pending connection requests.</summary>
      <returns>true if connections are pending; otherwise, false.</returns>
      <exception cref="T:System.InvalidOperationException">The listener has not been started with a call to <see cref="M:System.Net.Sockets.TcpListener.Start" />. </exception>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
      </PermissionSet>
    </member>
    <member name="P:System.Net.Sockets.TcpListener.Server">
      <summary>Gets the underlying network <see cref="T:System.Net.Sockets.Socket" />.</summary>
      <returns>The underlying <see cref="T:System.Net.Sockets.Socket" />.</returns>
    </member>
    <member name="M:System.Net.Sockets.TcpListener.Start">
      <summary>Starts listening for incoming connection requests.</summary>
      <exception cref="T:System.Net.Sockets.SocketException">Use the <see cref="P:System.Net.Sockets.SocketException.ErrorCode" /> property to obtain the specific error code. When you have obtained this code, you can refer to the Windows Sockets version 2 API error code documentation in MSDN for a detailed description of the error. </exception>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Net.SocketPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:System.Net.Sockets.TcpListener.Start(System.Int32)">
      <summary>Starts listening for incoming connection requests with a maximum number of pending connection.</summary>
      <param name="backlog">The maximum length of the pending connections queue.</param>
      <exception cref="T:System.Net.Sockets.SocketException">An error occurred while accessing the socket. See the Remarks section for more information. </exception>
      <exception cref="T:System.ArgumentOutOfRangeException">The<paramref name=" backlog" /> parameter is less than zero or exceeds the maximum number of permitted connections.</exception>
      <exception cref="T:System.InvalidOperationException">The underlying <see cref="T:System.Net.Sockets.Socket" /> is null.</exception>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Net.SocketPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:System.Net.Sockets.TcpListener.Stop">
      <summary>Closes the listener.</summary>
      <exception cref="T:System.Net.Sockets.SocketException">Use the <see cref="P:System.Net.Sockets.SocketException.ErrorCode" /> property to obtain the specific error code. When you have obtained this code, you can refer to the Windows Sockets version 2 API error code documentation in MSDN for a detailed description of the error. </exception>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="T:System.Net.Sockets.TransmitFileOptions">
      <summary>The <see cref="T:System.Net.Sockets.TransmitFileOptions" /> enumeration defines values used in file transfer requests.</summary>
    </member>
    <member name="F:System.Net.Sockets.TransmitFileOptions.UseDefaultWorkerThread">
      <summary>Use the default thread to process long file transfer requests.</summary>
    </member>
    <member name="F:System.Net.Sockets.TransmitFileOptions.Disconnect">
      <summary>Start a transport-level disconnect after all the file data has been queued for transmission. When used with <see cref="F:System.Net.Sockets.TransmitFileOptions.ReuseSocket" />, these flags return the socket to a disconnected, reusable state after the file has been transmitted.</summary>
    </member>
    <member name="F:System.Net.Sockets.TransmitFileOptions.ReuseSocket">
      <summary>The socket handle may be reused when the request completes. This flag is valid only if <see cref="F:System.Net.Sockets.TransmitFileOptions.Disconnect" /> is also specified. When used with <see cref="F:System.Net.Sockets.TransmitFileOptions.Disconnect" />, these flags return the socket to a disconnected, reusable state after the file has been transmitted.</summary>
    </member>
    <member name="F:System.Net.Sockets.TransmitFileOptions.WriteBehind">
      <summary>Complete the file transfer request immediately, without pending. If this flag is specified and the file transfer succeeds, the data has been accepted by the system but not necessarily acknowledged by the remote end. Do not use this flag with the <see cref="F:System.Net.Sockets.TransmitFileOptions.Disconnect" /> and <see cref="F:System.Net.Sockets.TransmitFileOptions.ReuseSocket" /> flags.</summary>
    </member>
    <member name="F:System.Net.Sockets.TransmitFileOptions.UseSystemThread">
      <summary>Use system threads to process long file transfer requests.</summary>
    </member>
    <member name="F:System.Net.Sockets.TransmitFileOptions.UseKernelApc">
      <summary>Use kernel asynchronous procedure calls (APCs) instead of worker threads to process long file transfer requests. Long requests are defined as requests that require more than a single read from the file or a cache; the request therefore depends on the size of the file and the specified length of the send packet.</summary>
    </member>
    <member name="T:System.Net.Sockets.UdpClient">
      <summary>Provides User Datagram Protocol (UDP) network services.</summary>
    </member>
    <member name="M:System.Net.Sockets.UdpClient.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Net.Sockets.UdpClient" /> class.</summary>
      <exception cref="T:System.Net.Sockets.SocketException">An error occurred when accessing the socket. See the Remarks section for more information. </exception>
    </member>
    <member name="M:System.Net.Sockets.UdpClient.#ctor(System.Int32)">
      <summary>Initializes a new instance of the <see cref="T:System.Net.Sockets.UdpClient" /> class and binds it to the local port number provided.</summary>
      <param name="port">The local port number from which you intend to communicate. </param>
      <exception cref="T:System.ArgumentOutOfRangeException">The <paramref name="port" /> parameter is greater than <see cref="F:System.Net.IPEndPoint.MaxPort" /> or less than <see cref="F:System.Net.IPEndPoint.MinPort" />. </exception>
      <exception cref="T:System.Net.Sockets.SocketException">An error occurred when accessing the socket. See the Remarks section for more information. </exception>
    </member>
    <member name="M:System.Net.Sockets.UdpClient.#ctor(System.Int32,System.Net.Sockets.AddressFamily)">
      <summary>Initializes a new instance of the <see cref="T:System.Net.Sockets.UdpClient" /> class and binds it to the local port number provided.</summary>
      <param name="port">The port on which to listen for incoming connection attempts. </param>
      <param name="family">One of the <see cref="T:System.Net.Sockets.AddressFamily" /> values that specifies the addressing scheme of the socket. </param>
      <exception cref="T:System.ArgumentException">
        <paramref name="family" /> is not <see cref="F:System.Net.Sockets.AddressFamily.InterNetwork" /> or <see cref="F:System.Net.Sockets.AddressFamily.InterNetworkV6" />. </exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="port" /> is greater than <see cref="F:System.Net.IPEndPoint.MaxPort" /> or less than <see cref="F:System.Net.IPEndPoint.MinPort" />. </exception>
      <exception cref="T:System.Net.Sockets.SocketException">An error occurred when accessing the socket. See the Remarks section for more information. </exception>
    </member>
    <member name="M:System.Net.Sockets.UdpClient.#ctor(System.Net.IPEndPoint)">
      <summary>Initializes a new instance of the <see cref="T:System.Net.Sockets.UdpClient" /> class and binds it to the specified local endpoint.</summary>
      <param name="localEP">An <see cref="T:System.Net.IPEndPoint" /> that respresents the local endpoint to which you bind the UDP connection. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="localEP" /> is null. </exception>
      <exception cref="T:System.Net.Sockets.SocketException">An error occurred when accessing the socket. See the Remarks section for more information. </exception>
    </member>
    <member name="M:System.Net.Sockets.UdpClient.#ctor(System.Net.Sockets.AddressFamily)">
      <summary>Initializes a new instance of the <see cref="T:System.Net.Sockets.UdpClient" /> class.</summary>
      <param name="family">One of the <see cref="T:System.Net.Sockets.AddressFamily" /> values that specifies the addressing scheme of the socket. </param>
      <exception cref="T:System.ArgumentException">
        <paramref name="family" /> is not <see cref="F:System.Net.Sockets.AddressFamily.InterNetwork" /> or <see cref="F:System.Net.Sockets.AddressFamily.InterNetworkV6" />. </exception>
      <exception cref="T:System.Net.Sockets.SocketException">An error occurred when accessing the socket. See the Remarks section for more information. </exception>
    </member>
    <member name="M:System.Net.Sockets.UdpClient.#ctor(System.String,System.Int32)">
      <summary>Initializes a new instance of the <see cref="T:System.Net.Sockets.UdpClient" /> class and establishes a default remote host.</summary>
      <param name="hostname">The name of the remote DNS host to which you intend to connect. </param>
      <param name="port">The remote port number to which you intend to connect. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="hostname" /> is null. </exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="port" /> is not between <see cref="F:System.Net.IPEndPoint.MinPort" /> and <see cref="F:System.Net.IPEndPoint.MaxPort" />. </exception>
      <exception cref="T:System.Net.Sockets.SocketException">An error occurred when accessing the socket. See the Remarks section for more information. </exception>
    </member>
    <member name="P:System.Net.Sockets.UdpClient.Active">
      <summary>Gets or sets a value indicating whether a default remote host has been established.</summary>
      <returns>true if a connection is active; otherwise, false.</returns>
    </member>
    <member name="M:System.Net.Sockets.UdpClient.AllowNatTraversal(System.Boolean)">
      <summary>Enables or disables Network Address Translation (NAT) traversal on a <see cref="T:System.Net.Sockets.UdpClient" /> instance.</summary>
      <param name="allowed">A Boolean value that specifies whether to enable or disable NAT traversal.</param>
    </member>
    <member name="P:System.Net.Sockets.UdpClient.Available">
      <summary>Gets the amount of data received from the network that is available to read.</summary>
      <returns>The number of bytes of data received from the network.</returns>
      <exception cref="T:System.Net.Sockets.SocketException">An error occurred while attempting to access the socket. See the Remarks section for more information. </exception>
      <exception cref="T:System.ObjectDisposedException">The <see cref="T:System.Net.Sockets.Socket" /> has been closed. </exception>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
      </PermissionSet>
    </member>
    <member name="M:System.Net.Sockets.UdpClient.BeginReceive(System.AsyncCallback,System.Object)">
      <summary>Receives a datagram from a remote host asynchronously.</summary>
      <returns>An <see cref="T:System.IAsyncResult" /> object that references the asynchronous receive.</returns>
      <param name="requestCallback">An <see cref="T:System.AsyncCallback" /> delegate that references the method to invoke when the operation is complete. </param>
      <param name="state">A user-defined object that contains information about the receive operation. This object is passed to the <paramref name="requestCallback" /> delegate when the operation is complete.</param>
    </member>
    <member name="M:System.Net.Sockets.UdpClient.BeginSend(System.Byte[],System.Int32,System.AsyncCallback,System.Object)">
      <summary>Sends a datagram to a remote host asynchronously. The destination was specified previously by a call to <see cref="Overload:System.Net.Sockets.UdpClient.Connect" />.</summary>
      <returns>An <see cref="T:System.IAsyncResult" /> object that references the asynchronous send.</returns>
      <param name="datagram">A <see cref="T:System.Byte" /> array that contains the data to be sent.</param>
      <param name="bytes">The number of bytes to send.</param>
      <param name="requestCallback">An <see cref="T:System.AsyncCallback" /> delegate that references the method to invoke when the operation is complete.</param>
      <param name="state">A user-defined object that contains information about the send operation. This object is passed to the <paramref name="requestCallback" /> delegate when the operation is complete.</param>
    </member>
    <member name="M:System.Net.Sockets.UdpClient.BeginSend(System.Byte[],System.Int32,System.Net.IPEndPoint,System.AsyncCallback,System.Object)">
      <summary>Sends a datagram to a destination asynchronously. The destination is specified by a <see cref="T:System.Net.EndPoint" />.</summary>
      <returns>An <see cref="T:System.IAsyncResult" /> object that references the asynchronous send.</returns>
      <param name="datagram">A <see cref="T:System.Byte" /> array that contains the data to be sent.</param>
      <param name="bytes">The number of bytes to send.</param>
      <param name="endPoint">The <see cref="T:System.Net.EndPoint" /> that represents the destination for the data.</param>
      <param name="requestCallback">An <see cref="T:System.AsyncCallback" /> delegate that references the method to invoke when the operation is complete. </param>
      <param name="state">A user-defined object that contains information about the send operation. This object is passed to the <paramref name="requestCallback" /> delegate when the operation is complete.</param>
    </member>
    <member name="M:System.Net.Sockets.UdpClient.BeginSend(System.Byte[],System.Int32,System.String,System.Int32,System.AsyncCallback,System.Object)">
      <summary>Sends a datagram to a destination asynchronously. The destination is specified by the host name and port number.</summary>
      <returns>An <see cref="T:System.IAsyncResult" /> object that references the asynchronous send.</returns>
      <param name="datagram">A <see cref="T:System.Byte" /> array that contains the data to be sent.</param>
      <param name="bytes">The number of bytes to send.</param>
      <param name="hostname">The destination host.</param>
      <param name="port">The destination port number.</param>
      <param name="requestCallback">An <see cref="T:System.AsyncCallback" /> delegate that references the method to invoke when the operation is complete. </param>
      <param name="state">A user-defined object that contains information about the send operation. This object is passed to the <paramref name="requestCallback" /> delegate when the operation is complete.</param>
    </member>
    <member name="P:System.Net.Sockets.UdpClient.Client">
      <summary>Gets or sets the underlying network <see cref="T:System.Net.Sockets.Socket" />.</summary>
      <returns>The underlying Network <see cref="T:System.Net.Sockets.Socket" />.</returns>
    </member>
    <member name="M:System.Net.Sockets.UdpClient.Close">
      <summary>Closes the UDP connection.</summary>
      <exception cref="T:System.Net.Sockets.SocketException">An error occurred when accessing the socket. See the Remarks section for more information. </exception>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
      </PermissionSet>
    </member>
    <member name="M:System.Net.Sockets.UdpClient.Connect(System.Net.IPAddress,System.Int32)">
      <summary>Establishes a default remote host using the specified IP address and port number.</summary>
      <param name="addr">The <see cref="T:System.Net.IPAddress" /> of the remote host to which you intend to send data. </param>
      <param name="port">The port number to which you intend send data. </param>
      <exception cref="T:System.ObjectDisposedException">
        <see cref="T:System.Net.Sockets.UdpClient" /> is closed. </exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="addr" /> is null. </exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="port" /> is not between <see cref="F:System.Net.IPEndPoint.MinPort" /> and <see cref="F:System.Net.IPEndPoint.MaxPort" />. </exception>
      <exception cref="T:System.Net.Sockets.SocketException">An error occurred when accessing the socket. See the Remarks section for more information. </exception>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Diagnostics.PerformanceCounterPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Net.SocketPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:System.Net.Sockets.UdpClient.Connect(System.Net.IPEndPoint)">
      <summary>Establishes a default remote host using the specified network endpoint.</summary>
      <param name="endPoint">An <see cref="T:System.Net.IPEndPoint" /> that specifies the network endpoint to which you intend to send data. </param>
      <exception cref="T:System.Net.Sockets.SocketException">An error occurred when accessing the socket. See the Remarks section for more information. </exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="endPoint" /> is null. </exception>
      <exception cref="T:System.ObjectDisposedException">The <see cref="T:System.Net.Sockets.UdpClient" /> is closed. </exception>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Diagnostics.PerformanceCounterPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Net.SocketPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:System.Net.Sockets.UdpClient.Connect(System.String,System.Int32)">
      <summary>Establishes a default remote host using the specified host name and port number.</summary>
      <param name="hostname">The DNS name of the remote host to which you intend send data. </param>
      <param name="port">The port number on the remote host to which you intend to send data. </param>
      <exception cref="T:System.ObjectDisposedException">The <see cref="T:System.Net.Sockets.UdpClient" /> is closed. </exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="port" /> is not between <see cref="F:System.Net.IPEndPoint.MinPort" /> and <see cref="F:System.Net.IPEndPoint.MaxPort" />. </exception>
      <exception cref="T:System.Net.Sockets.SocketException">An error occurred when accessing the socket. See the Remarks section for more information. </exception>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Diagnostics.PerformanceCounterPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Net.SocketPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:System.Net.Sockets.UdpClient.Dispose(System.Boolean)">
      <summary>Releases the unmanaged resources used by the <see cref="T:System.Net.Sockets.UdpClient" /> and optionally releases the managed resources. </summary>
      <param name="disposing">true to release both managed and unmanaged resources; false to release only unmanaged resources. </param>
    </member>
    <member name="P:System.Net.Sockets.UdpClient.DontFragment">
      <summary>Gets or sets a <see cref="T:System.Boolean" /> value that specifies whether the <see cref="T:System.Net.Sockets.UdpClient" /> allows Internet Protocol (IP) datagrams to be fragmented.</summary>
      <returns>true if the <see cref="T:System.Net.Sockets.UdpClient" /> allows datagram fragmentation; otherwise, false. The default is true.</returns>
      <exception cref="T:System.NotSupportedException">This property can be set only for sockets that use the <see cref="F:System.Net.Sockets.AddressFamily.InterNetwork" /> flag or the <see cref="F:System.Net.Sockets.AddressFamily.InterNetworkV6" /> flag. </exception>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:System.Net.Sockets.UdpClient.DropMulticastGroup(System.Net.IPAddress)">
      <summary>Leaves a multicast group.</summary>
      <param name="multicastAddr">The <see cref="T:System.Net.IPAddress" /> of the multicast group to leave. </param>
      <exception cref="T:System.ObjectDisposedException">The underlying <see cref="T:System.Net.Sockets.Socket" /> has been closed. </exception>
      <exception cref="T:System.Net.Sockets.SocketException">An error occurred when accessing the socket. See the Remarks section for more information. </exception>
      <exception cref="T:System.ArgumentException">The IP address is not compatible with the <see cref="T:System.Net.Sockets.AddressFamily" /> value that defines the addressing scheme of the socket. </exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="multicastAddr" /> is null.</exception>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:System.Net.Sockets.UdpClient.DropMulticastGroup(System.Net.IPAddress,System.Int32)">
      <summary>Leaves a multicast group.</summary>
      <param name="multicastAddr">The <see cref="T:System.Net.IPAddress" /> of the multicast group to leave. </param>
      <param name="ifindex">The local address of the multicast group to leave.</param>
      <exception cref="T:System.ObjectDisposedException">The underlying <see cref="T:System.Net.Sockets.Socket" /> has been closed. </exception>
      <exception cref="T:System.Net.Sockets.SocketException">An error occurred when accessing the socket. See the Remarks section for more information. </exception>
      <exception cref="T:System.ArgumentException">The IP address is not compatible with the <see cref="T:System.Net.Sockets.AddressFamily" /> value that defines the addressing scheme of the socket. </exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="multicastAddr" /> is null.</exception>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="P:System.Net.Sockets.UdpClient.EnableBroadcast">
      <summary>Gets or sets a <see cref="T:System.Boolean" /> value that specifies whether the <see cref="T:System.Net.Sockets.UdpClient" /> may send or receive broadcast packets.</summary>
      <returns>true if the <see cref="T:System.Net.Sockets.UdpClient" /> allows broadcast packets; otherwise, false. The default is false.</returns>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:System.Net.Sockets.UdpClient.EndReceive(System.IAsyncResult,System.Net.IPEndPoint@)">
      <summary>Ends a pending asynchronous receive.</summary>
      <returns>If successful, the number of bytes received. If unsuccessful, this method returns 0.</returns>
      <param name="asyncResult">An <see cref="T:System.IAsyncResult" /> object returned by a call to <see cref="M:System.Net.Sockets.UdpClient.BeginReceive(System.AsyncCallback,System.Object)" />.</param>
      <param name="remoteEP">The specified remote endpoint.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="asyncResult" /> is null. </exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="asyncResult" /> was not returned by a call to the <see cref="M:System.Net.Sockets.UdpClient.BeginReceive(System.AsyncCallback,System.Object)" /> method. </exception>
      <exception cref="T:System.InvalidOperationException">
        <see cref="M:System.Net.Sockets.UdpClient.EndReceive(System.IAsyncResult,System.Net.IPEndPoint@)" /> was previously called for the asynchronous read. </exception>
      <exception cref="T:System.Net.Sockets.SocketException">An error occurred when attempting to access the underlying <see cref="T:System.Net.Sockets.Socket" />. See the Remarks section for more information. </exception>
      <exception cref="T:System.ObjectDisposedException">The underlying <see cref="T:System.Net.Sockets.Socket" /> has been closed. </exception>
    </member>
    <member name="M:System.Net.Sockets.UdpClient.EndSend(System.IAsyncResult)">
      <summary>Ends a pending asynchronous send.</summary>
      <returns>If successful, the number of bytes sent to the <see cref="T:System.Net.Sockets.UdpClient" />.</returns>
      <param name="asyncResult">An <see cref="T:System.IAsyncResult" /> object returned by a call to <see cref="Overload:System.Net.Sockets.UdpClient.BeginSend" />.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="asyncResult" /> is null. </exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="asyncResult" /> was not returned by a call to the <see cref="M:System.Net.Sockets.Socket.BeginSend(System.Byte[],System.Int32,System.Int32,System.Net.Sockets.SocketFlags,System.AsyncCallback,System.Object)" /> method. </exception>
      <exception cref="T:System.InvalidOperationException">
        <see cref="M:System.Net.Sockets.Socket.EndSend(System.IAsyncResult)" /> was previously called for the asynchronous read. </exception>
      <exception cref="T:System.Net.Sockets.SocketException">An error occurred when attempting to access the underlying socket. See the Remarks section for more information. </exception>
      <exception cref="T:System.ObjectDisposedException">The underlying <see cref="T:System.Net.Sockets.Socket" /> has been closed. </exception>
    </member>
    <member name="P:System.Net.Sockets.UdpClient.ExclusiveAddressUse">
      <summary>Gets or sets a <see cref="T:System.Boolean" /> value that specifies whether the <see cref="T:System.Net.Sockets.UdpClient" /> allows only one client to use a port.</summary>
      <returns>true if the <see cref="T:System.Net.Sockets.UdpClient" /> allows only one client to use a specific port; otherwise, false. The default is true for Windows Server 2003 and Windows XP Service Pack 2 and later, and false for all other versions.</returns>
      <exception cref="T:System.Net.Sockets.SocketException">An error occurred when attempting to access the underlying socket.</exception>
      <exception cref="T:System.ObjectDisposedException">The underlying <see cref="T:System.Net.Sockets.Socket" /> has been closed. </exception>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:System.Net.Sockets.UdpClient.JoinMulticastGroup(System.Int32,System.Net.IPAddress)">
      <summary>Adds a <see cref="T:System.Net.Sockets.UdpClient" /> to a multicast group.</summary>
      <param name="ifindex">The local address. </param>
      <param name="multicastAddr">The multicast <see cref="T:System.Net.IPAddress" /> of the group you want to join. </param>
      <exception cref="T:System.ObjectDisposedException">The underlying <see cref="T:System.Net.Sockets.Socket" /> has been closed. </exception>
      <exception cref="T:System.Net.Sockets.SocketException">An error occurred when accessing the socket. See the Remarks section for more information. </exception>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:System.Net.Sockets.UdpClient.JoinMulticastGroup(System.Net.IPAddress)">
      <summary>Adds a <see cref="T:System.Net.Sockets.UdpClient" /> to a multicast group.</summary>
      <param name="multicastAddr">The multicast <see cref="T:System.Net.IPAddress" /> of the group you want to join. </param>
      <exception cref="T:System.ObjectDisposedException">The underlying <see cref="T:System.Net.Sockets.Socket" /> has been closed. </exception>
      <exception cref="T:System.Net.Sockets.SocketException">An error occurred when accessing the socket. See the Remarks section for more information. </exception>
      <exception cref="T:System.ArgumentException">The IP address is not compatible with the <see cref="T:System.Net.Sockets.AddressFamily" /> value that defines the addressing scheme of the socket. </exception>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:System.Net.Sockets.UdpClient.JoinMulticastGroup(System.Net.IPAddress,System.Int32)">
      <summary>Adds a <see cref="T:System.Net.Sockets.UdpClient" /> to a multicast group with the specified Time to Live (TTL).</summary>
      <param name="multicastAddr">The <see cref="T:System.Net.IPAddress" /> of the multicast group to join. </param>
      <param name="timeToLive">The Time to Live (TTL), measured in router hops. </param>
      <exception cref="T:System.ArgumentOutOfRangeException">The TTL provided is not between 0 and 255 </exception>
      <exception cref="T:System.ObjectDisposedException">The underlying <see cref="T:System.Net.Sockets.Socket" /> has been closed. </exception>
      <exception cref="T:System.Net.Sockets.SocketException">An error occurred when accessing the socket. See the Remarks section for more information. </exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="multicastAddr" /> is null.</exception>
      <exception cref="T:System.ArgumentException">The IP address is not compatible with the <see cref="T:System.Net.Sockets.AddressFamily" /> value that defines the addressing scheme of the socket. </exception>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:System.Net.Sockets.UdpClient.JoinMulticastGroup(System.Net.IPAddress,System.Net.IPAddress)">
      <summary>Adds a <see cref="T:System.Net.Sockets.UdpClient" /> to a multicast group.</summary>
      <param name="multicastAddr">The multicast <see cref="T:System.Net.IPAddress" /> of the group you want to join.</param>
      <param name="localAddress">The local <see cref="T:System.Net.IPAddress" />.</param>
      <exception cref="T:System.ObjectDisposedException">The underlying <see cref="T:System.Net.Sockets.Socket" /> has been closed. </exception>
      <exception cref="T:System.Net.Sockets.SocketException">An error occurred when accessing the socket. See the Remarks section for more information. </exception>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="P:System.Net.Sockets.UdpClient.MulticastLoopback">
      <summary>Gets or sets a <see cref="T:System.Boolean" /> value that specifies whether outgoing multicast packets are delivered to the sending application.</summary>
      <returns>true if the <see cref="T:System.Net.Sockets.UdpClient" /> receives outgoing multicast packets; otherwise, false.</returns>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:System.Net.Sockets.UdpClient.Receive(System.Net.IPEndPoint@)">
      <summary>Returns a UDP datagram that was sent by a remote host.</summary>
      <returns>An array of type <see cref="T:System.Byte" /> that contains datagram data.</returns>
      <param name="remoteEP">An <see cref="T:System.Net.IPEndPoint" /> that represents the remote host from which the data was sent. </param>
      <exception cref="T:System.ObjectDisposedException">The underlying <see cref="T:System.Net.Sockets.Socket" /> has been closed. </exception>
      <exception cref="T:System.Net.Sockets.SocketException">An error occurred when accessing the socket. See the Remarks section for more information. </exception>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Diagnostics.PerformanceCounterPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Net.SocketPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:System.Net.Sockets.UdpClient.Send(System.Byte[],System.Int32)">
      <summary>Sends a UDP datagram to a remote host.</summary>
      <returns>The number of bytes sent.</returns>
      <param name="dgram">An array of type <see cref="T:System.Byte" /> that specifies the UDP datagram that you intend to send represented as an array of bytes. </param>
      <param name="bytes">The number of bytes in the datagram. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="dgram" /> is null. </exception>
      <exception cref="T:System.InvalidOperationException">The <see cref="T:System.Net.Sockets.UdpClient" /> has already established a default remote host. </exception>
      <exception cref="T:System.ObjectDisposedException">The <see cref="T:System.Net.Sockets.UdpClient" /> is closed. </exception>
      <exception cref="T:System.Net.Sockets.SocketException">An error occurred when accessing the socket. See the Remarks section for more information. </exception>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
        <IPermission class="System.Diagnostics.PerformanceCounterPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:System.Net.Sockets.UdpClient.Send(System.Byte[],System.Int32,System.Net.IPEndPoint)">
      <summary>Sends a UDP datagram to the host at the specified remote endpoint.</summary>
      <returns>The number of bytes sent.</returns>
      <param name="dgram">An array of type <see cref="T:System.Byte" /> that specifies the UDP datagram that you intend to send, represented as an array of bytes. </param>
      <param name="bytes">The number of bytes in the datagram. </param>
      <param name="endPoint">An <see cref="T:System.Net.IPEndPoint" /> that represents the host and port to which to send the datagram. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="dgram" /> is null. </exception>
      <exception cref="T:System.InvalidOperationException">
        <see cref="T:System.Net.Sockets.UdpClient" /> has already established a default remote host. </exception>
      <exception cref="T:System.ObjectDisposedException">
        <see cref="T:System.Net.Sockets.UdpClient" /> is closed. </exception>
      <exception cref="T:System.Net.Sockets.SocketException">An error occurred when accessing the socket. See the Remarks section for more information. </exception>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
        <IPermission class="System.Diagnostics.PerformanceCounterPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:System.Net.Sockets.UdpClient.Send(System.Byte[],System.Int32,System.String,System.Int32)">
      <summary>Sends a UDP datagram to a specified port on a specified remote host.</summary>
      <returns>The number of bytes sent.</returns>
      <param name="dgram">An array of type <see cref="T:System.Byte" /> that specifies the UDP datagram that you intend to send represented as an array of bytes. </param>
      <param name="bytes">The number of bytes in the datagram. </param>
      <param name="hostname">The name of the remote host to which you intend to send the datagram. </param>
      <param name="port">The remote port number with which you intend to communicate. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="dgram" /> is null. </exception>
      <exception cref="T:System.InvalidOperationException">The <see cref="T:System.Net.Sockets.UdpClient" /> has already established a default remote host. </exception>
      <exception cref="T:System.ObjectDisposedException">The <see cref="T:System.Net.Sockets.UdpClient" /> is closed. </exception>
      <exception cref="T:System.Net.Sockets.SocketException">An error occurred when accessing the socket. See the Remarks section for more information. </exception>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
        <IPermission class="System.Diagnostics.PerformanceCounterPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:System.Net.Sockets.UdpClient.System#IDisposable#Dispose">
      <summary>Releases all resources used by the <see cref="T:System.Net.Sockets.UdpClient" />.</summary>
    </member>
    <member name="P:System.Net.Sockets.UdpClient.Ttl">
      <summary>Gets or sets a value that specifies the Time to Live (TTL) value of Internet Protocol (IP) packets sent by the <see cref="T:System.Net.Sockets.UdpClient" />.</summary>
      <returns>The TTL value.</returns>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="T:System.Runtime.InteropServices.DefaultParameterValueAttribute">
      <summary>Sets the default value of a parameter when called from a language that supports default parameters. This class cannot be inherited. </summary>
    </member>
    <member name="M:System.Runtime.InteropServices.DefaultParameterValueAttribute.#ctor(System.Object)">
      <summary>Initializes a new instance of the <see cref="T:System.Runtime.InteropServices.DefaultParameterValueAttribute" /> class with the default value of a parameter.</summary>
      <param name="value">An object that represents the default value of a parameter.</param>
    </member>
    <member name="P:System.Runtime.InteropServices.DefaultParameterValueAttribute.Value">
      <summary>Gets the default value of a parameter.</summary>
      <returns>An object that represents the default value of a parameter.</returns>
    </member>
    <member name="T:System.Runtime.InteropServices.HandleCollector">
      <summary>Tracks outstanding handles and forces a garbage collection when the specified threshold is reached.</summary>
    </member>
    <member name="M:System.Runtime.InteropServices.HandleCollector.#ctor(System.String,System.Int32)">
      <summary>Initializes a new instance of the <see cref="T:System.Runtime.InteropServices.HandleCollector" /> class using a name and a threshold at which to begin handle collection. </summary>
      <param name="name">A name for the collector. This parameter allows you to name collectors that track handle types separately.</param>
      <param name="initialThreshold">A value that specifies the point at which collections should begin.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">The <paramref name="initialThreshold" /> parameter is less than 0.</exception>
    </member>
    <member name="M:System.Runtime.InteropServices.HandleCollector.#ctor(System.String,System.Int32,System.Int32)">
      <summary>Initializes a new instance of the <see cref="T:System.Runtime.InteropServices.HandleCollector" /> class using a name, a threshold at which to begin handle collection, and a threshold at which handle collection must occur. </summary>
      <param name="name">A name for the collector.  This parameter allows you to name collectors that track handle types separately.</param>
      <param name="initialThreshold">A value that specifies the point at which collections should begin.</param>
      <param name="maximumThreshold">A value that specifies the point at which collections must occur. This should be set to the maximum number of available handles.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">The <paramref name="initialThreshold" /> parameter is less than 0.-or-The <paramref name="maximumThreshold" /> parameter is less than 0.</exception>
      <exception cref="T:System.ArgumentException">The <paramref name="maximumThreshold" /> parameter is less than the <paramref name="initialThreshold" /> parameter.</exception>
    </member>
    <member name="M:System.Runtime.InteropServices.HandleCollector.Add">
      <summary>Increments the current handle count.</summary>
      <exception cref="T:System.InvalidOperationException">The <see cref="P:System.Runtime.InteropServices.HandleCollector.Count" /> property is less than 0.</exception>
    </member>
    <member name="P:System.Runtime.InteropServices.HandleCollector.Count">
      <summary>Gets the number of handles collected.</summary>
      <returns>The number of handles collected.</returns>
    </member>
    <member name="P:System.Runtime.InteropServices.HandleCollector.InitialThreshold">
      <summary>Gets a value that specifies the point at which collections should begin.</summary>
      <returns>A value that specifies the point at which collections should begin.</returns>
    </member>
    <member name="P:System.Runtime.InteropServices.HandleCollector.MaximumThreshold">
      <summary>Gets a value that specifies the point at which collections must occur.</summary>
      <returns>A value that specifies the point at which collections must occur.</returns>
    </member>
    <member name="P:System.Runtime.InteropServices.HandleCollector.Name">
      <summary>Gets the name of a <see cref="T:System.Runtime.InteropServices.HandleCollector" /> object.</summary>
      <returns>This <see cref="P:System.Runtime.InteropServices.HandleCollector.Name" /> property allows you to name collectors that track handle types separately.</returns>
    </member>
    <member name="M:System.Runtime.InteropServices.HandleCollector.Remove">
      <summary>Decrements the current handle count.</summary>
      <exception cref="T:System.InvalidOperationException">The <see cref="P:System.Runtime.InteropServices.HandleCollector.Count" /> property is less than 0.</exception>
    </member>
    <member name="T:System.Runtime.InteropServices.StandardOleMarshalObject">
      <summary>Replaces the standard common language runtime (CLR) free-threaded marshaler with the standard OLE STA marshaler.</summary>
    </member>
    <member name="M:System.Runtime.InteropServices.StandardOleMarshalObject.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Runtime.InteropServices.StandardOleMarshalObject" /> class. </summary>
    </member>
    <member name="T:System.Runtime.InteropServices.ComTypes.ADVF">
      <summary>Specifies the requested behavior when setting up an advise sink or a caching connection with an object.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.ADVF.ADVF_NODATA">
      <summary>For data advisory connections (<see cref="M:System.Runtime.InteropServices.ComTypes.IDataObject.DAdvise(System.Runtime.InteropServices.ComTypes.FORMATETC@,System.Runtime.InteropServices.ComTypes.ADVF,System.Runtime.InteropServices.ComTypes.IAdviseSink,System.Int32@)" /> or <see cref="M:System.Runtime.InteropServices.ComTypes.IConnectionPoint.Advise(System.Object,System.Int32@)" />), this flag requests the data object not to send data when it calls <see cref="M:System.Runtime.InteropServices.ComTypes.IAdviseSink.OnDataChange(System.Runtime.InteropServices.ComTypes.FORMATETC@,System.Runtime.InteropServices.ComTypes.STGMEDIUM@)" />. </summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.ADVF.ADVF_PRIMEFIRST">
      <summary>Requests that the object not wait for the data or view to change before making an initial call to <see cref="M:System.Runtime.InteropServices.ComTypes.IAdviseSink.OnDataChange(System.Runtime.InteropServices.ComTypes.FORMATETC@,System.Runtime.InteropServices.ComTypes.STGMEDIUM@)" /> (for data or view advisory connections) or updating the cache (for cache connections).</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.ADVF.ADVF_ONLYONCE">
      <summary>Requests that the object make only one change notification or cache update before deleting the connection.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.ADVF.ADVF_DATAONSTOP">
      <summary>For data advisory connections, assures accessibility to data. </summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.ADVF.ADVFCACHE_NOHANDLER">
      <summary>Synonym for <see cref="F:System.Runtime.InteropServices.ComTypes.ADVF.ADVFCACHE_FORCEBUILTIN" />, which is used more often.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.ADVF.ADVFCACHE_FORCEBUILTIN">
      <summary>This value is used by DLL object applications and object handlers that perform the drawing of their objects.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.ADVF.ADVFCACHE_ONSAVE">
      <summary>For cache connections, this flag updates the cached representation only when the object containing the cache is saved.</summary>
    </member>
    <member name="T:System.Runtime.InteropServices.ComTypes.DATADIR">
      <summary>Specifies the direction of the data flow in the <paramref name="dwDirection" /> parameter of the <see cref="M:System.Runtime.InteropServices.ComTypes.IDataObject.EnumFormatEtc(System.Runtime.InteropServices.ComTypes.DATADIR)" /> method. This determines the formats that the resulting enumerator can enumerate.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.DATADIR.DATADIR_GET">
      <summary>Requests that <see cref="M:System.Runtime.InteropServices.ComTypes.IDataObject.EnumFormatEtc(System.Runtime.InteropServices.ComTypes.DATADIR)" /> supply an enumerator for the formats that can be specified in <see cref="M:System.Runtime.InteropServices.ComTypes.IDataObject.GetData(System.Runtime.InteropServices.ComTypes.FORMATETC@,System.Runtime.InteropServices.ComTypes.STGMEDIUM@)" />.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.DATADIR.DATADIR_SET">
      <summary>Requests that <see cref="M:System.Runtime.InteropServices.ComTypes.IDataObject.EnumFormatEtc(System.Runtime.InteropServices.ComTypes.DATADIR)" /> supply an enumerator for the formats that can be specified in <see cref="M:System.Runtime.InteropServices.ComTypes.IDataObject.SetData(System.Runtime.InteropServices.ComTypes.FORMATETC@,System.Runtime.InteropServices.ComTypes.STGMEDIUM@,System.Boolean)" />.</summary>
    </member>
    <member name="T:System.Runtime.InteropServices.ComTypes.DVASPECT">
      <summary>Specifies the desired data or view aspect of the object when drawing or getting data.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.DVASPECT.DVASPECT_CONTENT">
      <summary>A representation of an object that lets that object be displayed as an embedded object inside a container. This value is typically specified for compound document objects. The presentation can be provided for the screen or printer.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.DVASPECT.DVASPECT_THUMBNAIL">
      <summary>A thumbnail representation of an object that lets that object be displayed in a browsing tool. The thumbnail is approximately a 120 by 120 pixel, 16-color (recommended), device-independent bitmap potentially wrapped in a metafile.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.DVASPECT.DVASPECT_ICON">
      <summary>An iconic representation of an object.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.DVASPECT.DVASPECT_DOCPRINT">
      <summary>A representation of an object on the screen as though it were printed to a printer using the Print command from the File menu. The described data may represent a sequence of pages.</summary>
    </member>
    <member name="T:System.Runtime.InteropServices.ComTypes.FORMATETC">
      <summary>Represents a generalized Clipboard format. </summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.FORMATETC.cfFormat">
      <summary>Specifies the particular clipboard format of interest.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.FORMATETC.dwAspect">
      <summary>Specifies one of the <see cref="T:System.Runtime.InteropServices.ComTypes.DVASPECT" /> enumeration constants that indicates how much detail should be contained in the rendering.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.FORMATETC.lindex">
      <summary>Specifies part of the aspect when the data must be split across page boundaries. </summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.FORMATETC.ptd">
      <summary>Specifies a pointer to a DVTARGETDEVICE structure containing information about the target device that the data is being composed for. </summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.FORMATETC.tymed">
      <summary>Specifies one of the <see cref="T:System.Runtime.InteropServices.ComTypes.TYMED" /> enumeration constants, which indicates the type of storage medium used to transfer the object's data. </summary>
    </member>
    <member name="T:System.Runtime.InteropServices.ComTypes.IAdviseSink">
      <summary>Provides a managed definition of the IAdviseSink interface.</summary>
    </member>
    <member name="M:System.Runtime.InteropServices.ComTypes.IAdviseSink.OnClose">
      <summary>Notifies all registered advisory sinks that the object has changed from the running state to the loaded state.  This method is called by a server.</summary>
    </member>
    <member name="M:System.Runtime.InteropServices.ComTypes.IAdviseSink.OnDataChange(System.Runtime.InteropServices.ComTypes.FORMATETC@,System.Runtime.InteropServices.ComTypes.STGMEDIUM@)">
      <summary>Notifies all data objects currently registered advisory sinks that data in the object has changed.</summary>
      <param name="format">A <see cref="T:System.Runtime.InteropServices.ComTypes.FORMATETC" />, passed by reference, which describes the format, target device, rendering, and storage information of the calling data object.</param>
      <param name="stgmedium">A <see cref="T:System.Runtime.InteropServices.ComTypes.STGMEDIUM" />, passed by reference, which defines the storage medium (global memory, disk file, storage object, stream object, Graphics Device Interface (GDI) object, or undefined) and ownership of that medium for the calling data object.</param>
    </member>
    <member name="M:System.Runtime.InteropServices.ComTypes.IAdviseSink.OnRename(System.Runtime.InteropServices.ComTypes.IMoniker)">
      <summary>Notifies all registered advisory sinks that the object has been renamed. This method is called by a server.</summary>
      <param name="moniker">A pointer to the IMoniker interface on the new full moniker of the object.</param>
    </member>
    <member name="M:System.Runtime.InteropServices.ComTypes.IAdviseSink.OnSave">
      <summary>Notifies all registered advisory sinks that the object has been saved. This method is called by a server.</summary>
    </member>
    <member name="M:System.Runtime.InteropServices.ComTypes.IAdviseSink.OnViewChange(System.Int32,System.Int32)">
      <summary>Notifies an object's registered advisory sinks that its view has changed. This method is called by a server.</summary>
      <param name="aspect">The aspect, or view, of the object. Contains a value taken from the <see cref="T:System.Runtime.InteropServices.ComTypes.DVASPECT" /> enumeration.</param>
      <param name="index">The portion of the view that has changed. Currently, only -1 is valid.</param>
    </member>
    <member name="T:System.Runtime.InteropServices.ComTypes.IDataObject">
      <summary>Provides the managed definition of the IDataObject interface.</summary>
    </member>
    <member name="M:System.Runtime.InteropServices.ComTypes.IDataObject.DAdvise(System.Runtime.InteropServices.ComTypes.FORMATETC@,System.Runtime.InteropServices.ComTypes.ADVF,System.Runtime.InteropServices.ComTypes.IAdviseSink,System.Int32@)">
      <summary>Creates a connection between a data object and an advisory sink. This method is called by an object that supports an advisory sink and enables the advisory sink to be notified of changes in the object's data.</summary>
      <returns>This method supports the standard return values E_INVALIDARG, E_UNEXPECTED, and E_OUTOFMEMORY, as well as the following: ValueDescriptionS_OKThe advisory connection was created.E_NOTIMPLThis method is not implemented on the data object.DV_E_LINDEXThere is an invalid value for <see cref="F:System.Runtime.InteropServices.ComTypes.FORMATETC.lindex" />; currently, only -1 is supported.DV_E_FORMATETCThere is an invalid value for the <paramref name="pFormatetc" /> parameter.OLE_E_ADVISENOTSUPPORTEDThe data object does not support change notification.</returns>
      <param name="pFormatetc"> A <see cref="T:System.Runtime.InteropServices.ComTypes.FORMATETC" /> structure, passed by reference, that defines the format, target device, aspect, and medium that will be used for future notifications.</param>
      <param name="advf">One of the <see cref="T:System.Runtime.InteropServices.ComTypes.ADVF" /> values that specifies a group of flags for controlling the advisory connection.</param>
      <param name="adviseSink">A pointer to the <see cref="T:System.Runtime.InteropServices.ComTypes.IAdviseSink" /> interface on the advisory sink that will receive the change notification.</param>
      <param name="connection">When this method returns, contains a pointer to a DWORD token that identifies this connection. You can use this token later to delete the advisory connection by passing it to <see cref="M:System.Runtime.InteropServices.ComTypes.IDataObject.DUnadvise(System.Int32)" />. If this value is zero, the connection was not established. This parameter is passed uninitialized.</param>
    </member>
    <member name="M:System.Runtime.InteropServices.ComTypes.IDataObject.DUnadvise(System.Int32)">
      <summary>Destroys a notification connection that had been previously established.</summary>
      <param name="connection">A DWORD token that specifies the connection to remove. Use the value returned by <see cref="M:System.Runtime.InteropServices.ComTypes.IDataObject.DAdvise(System.Runtime.InteropServices.ComTypes.FORMATETC@,System.Runtime.InteropServices.ComTypes.ADVF,System.Runtime.InteropServices.ComTypes.IAdviseSink,System.Int32@)" /> when the connection was originally established.</param>
    </member>
    <member name="M:System.Runtime.InteropServices.ComTypes.IDataObject.EnumDAdvise(System.Runtime.InteropServices.ComTypes.IEnumSTATDATA@)">
      <summary>Creates an object that can be used to enumerate the current advisory connections.</summary>
      <returns>This method supports the standard return value E_OUTOFMEMORY, as well as the following:ValueDescriptionS_OKThe enumerator object is successfully instantiated or there are no connections.OLE_E_ADVISENOTSUPPORTEDThis object does not support advisory notifications.</returns>
      <param name="enumAdvise">When this method returns, contains an <see cref="T:System.Runtime.InteropServices.ComTypes.IEnumSTATDATA" /> that receives the interface pointer to the new enumerator object. If the implementation sets <paramref name="enumAdvise" /> to null, there are no connections to advisory sinks at this time. This parameter is passed uninitialized.</param>
    </member>
    <member name="M:System.Runtime.InteropServices.ComTypes.IDataObject.EnumFormatEtc(System.Runtime.InteropServices.ComTypes.DATADIR)">
      <summary>Creates an object for enumerating the <see cref="T:System.Runtime.InteropServices.ComTypes.FORMATETC" /> structures for a data object. These structures are used in calls to <see cref="M:System.Runtime.InteropServices.ComTypes.IDataObject.GetData(System.Runtime.InteropServices.ComTypes.FORMATETC@,System.Runtime.InteropServices.ComTypes.STGMEDIUM@)" /> or <see cref="M:System.Runtime.InteropServices.ComTypes.IDataObject.SetData(System.Runtime.InteropServices.ComTypes.FORMATETC@,System.Runtime.InteropServices.ComTypes.STGMEDIUM@,System.Boolean)" />. </summary>
      <returns>This method supports the standard return values E_INVALIDARG and E_OUTOFMEMORY, as well as the following:ValueDescriptionS_OKThe enumerator object was successfully created.E_NOTIMPLThe direction specified by the <paramref name="direction" /> parameter is not supported.OLE_S_USEREGRequests that OLE enumerate the formats from the registry.</returns>
      <param name="direction">One of the <see cref="T:System.Runtime.InteropServices.ComTypes.DATADIR" /> values that specifies the direction of the data.</param>
    </member>
    <member name="M:System.Runtime.InteropServices.ComTypes.IDataObject.GetCanonicalFormatEtc(System.Runtime.InteropServices.ComTypes.FORMATETC@,System.Runtime.InteropServices.ComTypes.FORMATETC@)">
      <summary>Provides a standard <see cref="T:System.Runtime.InteropServices.ComTypes.FORMATETC" /> structure that is logically equivalent to a more complex structure. Use this method to determine whether two different <see cref="T:System.Runtime.InteropServices.ComTypes.FORMATETC" /> structures would return the same data, removing the need for duplicate rendering.</summary>
      <returns>This method supports the standard return values E_INVALIDARG, E_UNEXPECTED, and E_OUTOFMEMORY, as well as the following: ValueDescriptionS_OKThe returned <see cref="T:System.Runtime.InteropServices.ComTypes.FORMATETC" /> structure is different from the one that was passed.DATA_S_SAMEFORMATETCThe <see cref="T:System.Runtime.InteropServices.ComTypes.FORMATETC" /> structures are the same and null is returned in the <paramref name="formatOut" /> parameter.DV_E_LINDEXThere is an invalid value for <see cref="F:System.Runtime.InteropServices.ComTypes.FORMATETC.lindex" />; currently, only -1 is supported.DV_E_FORMATETCThere is an invalid value for the <paramref name="pFormatetc" /> parameter.OLE_E_NOTRUNNINGThe application is not running.</returns>
      <param name="formatIn">A pointer to a <see cref="T:System.Runtime.InteropServices.ComTypes.FORMATETC" /> structure, passed by reference, that defines the format, medium, and target device that the caller would like to use to retrieve data in a subsequent call such as <see cref="M:System.Runtime.InteropServices.ComTypes.IDataObject.GetData(System.Runtime.InteropServices.ComTypes.FORMATETC@,System.Runtime.InteropServices.ComTypes.STGMEDIUM@)" />. The <see cref="T:System.Runtime.InteropServices.ComTypes.TYMED" /> member is not significant in this case and should be ignored.</param>
      <param name="formatOut">When this method returns, contains a pointer to a <see cref="T:System.Runtime.InteropServices.ComTypes.FORMATETC" /> structure that contains the most general information possible for a specific rendering, making it canonically equivalent to <paramref name="formatetIn" />. The caller must allocate this structure and the <see cref="M:System.Runtime.InteropServices.ComTypes.IDataObject.GetCanonicalFormatEtc(System.Runtime.InteropServices.ComTypes.FORMATETC@,System.Runtime.InteropServices.ComTypes.FORMATETC@)" /> method must fill in the data. To retrieve data in a subsequent call such as <see cref="M:System.Runtime.InteropServices.ComTypes.IDataObject.GetData(System.Runtime.InteropServices.ComTypes.FORMATETC@,System.Runtime.InteropServices.ComTypes.STGMEDIUM@)" />, the caller uses the supplied value of <paramref name="formatOut" />, unless the value supplied is null. This value is null if the method returns DATA_S_SAMEFORMATETC. The <see cref="T:System.Runtime.InteropServices.ComTypes.TYMED" /> member is not significant in this case and should be ignored. This parameter is passed uninitialized.</param>
    </member>
    <member name="M:System.Runtime.InteropServices.ComTypes.IDataObject.GetData(System.Runtime.InteropServices.ComTypes.FORMATETC@,System.Runtime.InteropServices.ComTypes.STGMEDIUM@)">
      <summary>Obtains data from a source data object. The <see cref="M:System.Runtime.InteropServices.ComTypes.IDataObject.GetData(System.Runtime.InteropServices.ComTypes.FORMATETC@,System.Runtime.InteropServices.ComTypes.STGMEDIUM@)" /> method, which is called by a data consumer, renders the data described in the specified <see cref="T:System.Runtime.InteropServices.ComTypes.FORMATETC" /> structure and transfers it through the specified <see cref="T:System.Runtime.InteropServices.ComTypes.STGMEDIUM" /> structure. The caller then assumes responsibility for releasing the <see cref="T:System.Runtime.InteropServices.ComTypes.STGMEDIUM" /> structure.</summary>
      <param name="format">A pointer to a <see cref="T:System.Runtime.InteropServices.ComTypes.FORMATETC" /> structure, passed by reference, that defines the format, medium, and target device to use when passing the data. It is possible to specify more than one medium by using the Boolean OR operator, allowing the method to choose the best medium among those specified.</param>
      <param name="medium">When this method returns, contains a pointer to the <see cref="T:System.Runtime.InteropServices.ComTypes.STGMEDIUM" /> structure that indicates the storage medium containing the returned data through its <see cref="F:System.Runtime.InteropServices.ComTypes.STGMEDIUM.tymed" /> member, and the responsibility for releasing the medium through the value of its <see cref="F:System.Runtime.InteropServices.ComTypes.STGMEDIUM.pUnkForRelease" /> member. If <see cref="F:System.Runtime.InteropServices.ComTypes.STGMEDIUM.pUnkForRelease" /> is null, the receiver of the medium is responsible for releasing it; otherwise, <see cref="F:System.Runtime.InteropServices.ComTypes.STGMEDIUM.pUnkForRelease" /> points to the IUnknown interface on the appropriate object so its Release method can be called. The medium must be allocated and filled in by <see cref="M:System.Runtime.InteropServices.ComTypes.IDataObject.GetData(System.Runtime.InteropServices.ComTypes.FORMATETC@,System.Runtime.InteropServices.ComTypes.STGMEDIUM@)" />. This parameter is passed uninitialized.</param>
    </member>
    <member name="M:System.Runtime.InteropServices.ComTypes.IDataObject.GetDataHere(System.Runtime.InteropServices.ComTypes.FORMATETC@,System.Runtime.InteropServices.ComTypes.STGMEDIUM@)">
      <summary>Obtains data from a source data object. This method, which is called by a data consumer, differs from the <see cref="M:System.Runtime.InteropServices.ComTypes.IDataObject.GetData(System.Runtime.InteropServices.ComTypes.FORMATETC@,System.Runtime.InteropServices.ComTypes.STGMEDIUM@)" /> method in that the caller must allocate and free the specified storage medium.</summary>
      <param name="format">A pointer to a <see cref="T:System.Runtime.InteropServices.ComTypes.FORMATETC" /> structure, passed by reference, that defines the format, medium, and target device to use when passing the data. Only one medium can be specified in <see cref="T:System.Runtime.InteropServices.ComTypes.TYMED" />, and only the following <see cref="T:System.Runtime.InteropServices.ComTypes.TYMED" /> values are valid: <see cref="F:System.Runtime.InteropServices.ComTypes.TYMED.TYMED_ISTORAGE" />, <see cref="F:System.Runtime.InteropServices.ComTypes.TYMED.TYMED_ISTREAM" />, <see cref="F:System.Runtime.InteropServices.ComTypes.TYMED.TYMED_HGLOBAL" />, or <see cref="F:System.Runtime.InteropServices.ComTypes.TYMED.TYMED_FILE" />.</param>
      <param name="medium">A <see cref="T:System.Runtime.InteropServices.ComTypes.STGMEDIUM" />, passed by reference, that defines the storage medium containing the data being transferred. The medium must be allocated by the caller and filled in by <see cref="M:System.Runtime.InteropServices.ComTypes.IDataObject.GetDataHere(System.Runtime.InteropServices.ComTypes.FORMATETC@,System.Runtime.InteropServices.ComTypes.STGMEDIUM@)" />. The caller must also free the medium. The implementation of this method must always supply a value of null for the <see cref="F:System.Runtime.InteropServices.ComTypes.STGMEDIUM.pUnkForRelease" /> member of the <see cref="T:System.Runtime.InteropServices.ComTypes.STGMEDIUM" /> structure that this parameter points to.</param>
    </member>
    <member name="M:System.Runtime.InteropServices.ComTypes.IDataObject.QueryGetData(System.Runtime.InteropServices.ComTypes.FORMATETC@)">
      <summary>Determines whether the data object is capable of rendering the data described in the <see cref="T:System.Runtime.InteropServices.ComTypes.FORMATETC" /> structure. Objects attempting a paste or drop operation can call this method before calling <see cref="M:System.Runtime.InteropServices.ComTypes.IDataObject.GetData(System.Runtime.InteropServices.ComTypes.FORMATETC@,System.Runtime.InteropServices.ComTypes.STGMEDIUM@)" /> to get an indication of whether the operation may be successful.</summary>
      <returns>This method supports the standard return values E_INVALIDARG, E_UNEXPECTED, and E_OUTOFMEMORY, as well as the following: ValueDescriptionS_OKA subsequent call to <see cref="M:System.Runtime.InteropServices.ComTypes.IDataObject.GetData(System.Runtime.InteropServices.ComTypes.FORMATETC@,System.Runtime.InteropServices.ComTypes.STGMEDIUM@)" /> would probably be successful.DV_E_LINDEXAn invalid value for <see cref="F:System.Runtime.InteropServices.ComTypes.FORMATETC.lindex" />; currently, only -1 is supported.DV_E_FORMATETCAn invalid value for the <paramref name="pFormatetc" /> parameter.DV_E_TYMEDAn invalid <see cref="F:System.Runtime.InteropServices.ComTypes.FORMATETC.tymed" /> value.DV_E_DVASPECTAn invalid <see cref="F:System.Runtime.InteropServices.ComTypes.FORMATETC.dwAspect" /> value.OLE_E_NOTRUNNINGThe application is not running.</returns>
      <param name="format">A pointer to a <see cref="T:System.Runtime.InteropServices.ComTypes.FORMATETC" /> structure, passed by reference, that defines the format, medium, and target device to use for the query.</param>
    </member>
    <member name="M:System.Runtime.InteropServices.ComTypes.IDataObject.SetData(System.Runtime.InteropServices.ComTypes.FORMATETC@,System.Runtime.InteropServices.ComTypes.STGMEDIUM@,System.Boolean)">
      <summary>Transfers data to the object that implements this method. This method is called by an object that contains a data source.</summary>
      <param name="formatIn">A <see cref="T:System.Runtime.InteropServices.ComTypes.FORMATETC" /> structure, passed by reference, that defines the format used by the data object when interpreting the data contained in the storage medium.</param>
      <param name="medium">A <see cref="T:System.Runtime.InteropServices.ComTypes.STGMEDIUM" /> structure, passed by reference, that defines the storage medium in which the data is being passed.</param>
      <param name="release">true to specify that the data object called, which implements <see cref="M:System.Runtime.InteropServices.ComTypes.IDataObject.SetData(System.Runtime.InteropServices.ComTypes.FORMATETC@,System.Runtime.InteropServices.ComTypes.STGMEDIUM@,System.Boolean)" />, owns the storage medium after the call returns. This means that the data object must free the medium after it has been used by calling the ReleaseStgMedium function. false to specify that the caller retains ownership of the storage medium, and the data object called uses the storage medium for the duration of the call only.</param>
    </member>
    <member name="T:System.Runtime.InteropServices.ComTypes.IEnumFORMATETC">
      <summary>Provides the managed definition of the IEnumFORMATETC interface.</summary>
    </member>
    <member name="M:System.Runtime.InteropServices.ComTypes.IEnumFORMATETC.Clone(System.Runtime.InteropServices.ComTypes.IEnumFORMATETC@)">
      <summary>Creates a new enumerator that contains the same enumeration state as the current enumerator.</summary>
      <param name="newEnum">When this method returns, contains a reference to the newly created enumerator. This parameter is passed uninitialized.</param>
    </member>
    <member name="M:System.Runtime.InteropServices.ComTypes.IEnumFORMATETC.Next(System.Int32,System.Runtime.InteropServices.ComTypes.FORMATETC[],System.Int32[])">
      <summary>Retrieves a specified number of items in the enumeration sequence.</summary>
      <returns>S_OK if the <paramref name="pceltFetched" /> parameter equals the <paramref name="celt" /> parameter; otherwise, S_FALSE.</returns>
      <param name="celt">The number of <see cref="T:System.Runtime.InteropServices.ComTypes.FORMATETC" /> references to return in <paramref name="rgelt" />.</param>
      <param name="rgelt">When this method returns, contains a reference to the enumerated <see cref="T:System.Runtime.InteropServices.ComTypes.FORMATETC" /> references. This parameter is passed uninitialized.</param>
      <param name="pceltFetched">When this method returns, contains a reference to the actual number of references enumerated in <paramref name="rgelt" />. This parameter is passed uninitialized.</param>
    </member>
    <member name="M:System.Runtime.InteropServices.ComTypes.IEnumFORMATETC.Reset">
      <summary>Resets the enumeration sequence to the beginning.</summary>
      <returns>An HRESULT with the value S_OK.</returns>
    </member>
    <member name="M:System.Runtime.InteropServices.ComTypes.IEnumFORMATETC.Skip(System.Int32)">
      <summary>Skips a specified number of items in the enumeration sequence.</summary>
      <returns>S_OK if the number of elements skipped equals the <paramref name="celt" /> parameter; otherwise, S_FALSE.</returns>
      <param name="celt">The number of elements to skip in the enumeration.</param>
    </member>
    <member name="T:System.Runtime.InteropServices.ComTypes.IEnumSTATDATA">
      <summary>Provides the managed definition of the IEnumSTATDATA interface.</summary>
    </member>
    <member name="M:System.Runtime.InteropServices.ComTypes.IEnumSTATDATA.Clone(System.Runtime.InteropServices.ComTypes.IEnumSTATDATA@)">
      <summary>Creates a new enumerator that contains the same enumeration state as the current enumerator.</summary>
      <param name="newEnum">When this method returns, contains a reference to the newly created enumerator. This parameter is passed uninitialized.</param>
    </member>
    <member name="M:System.Runtime.InteropServices.ComTypes.IEnumSTATDATA.Next(System.Int32,System.Runtime.InteropServices.ComTypes.STATDATA[],System.Int32[])">
      <summary>Retrieves a specified number of items in the enumeration sequence.</summary>
      <returns>S_OK if the <paramref name="pceltFetched" /> parameter equals the <paramref name="celt" /> parameter; otherwise, S_FALSE.</returns>
      <param name="celt">The number of <see cref="T:System.Runtime.InteropServices.ComTypes.STATDATA" /> references to return in <paramref name="rgelt" />.</param>
      <param name="rgelt">When this method returns, contains a reference to the enumerated <see cref="T:System.Runtime.InteropServices.ComTypes.STATDATA" /> references. This parameter is passed uninitialized.</param>
      <param name="pceltFetched">When this parameter returns, contains a reference to the actual number of references enumerated in <paramref name="rgelt" />. This parameter is passed uninitialized.</param>
    </member>
    <member name="M:System.Runtime.InteropServices.ComTypes.IEnumSTATDATA.Reset">
      <summary>Resets the enumeration sequence to the beginning.</summary>
      <returns>An HRESULT with the value S_OK.</returns>
    </member>
    <member name="M:System.Runtime.InteropServices.ComTypes.IEnumSTATDATA.Skip(System.Int32)">
      <summary>Skips a specified number of items in the enumeration sequence.</summary>
      <returns>S_OK if the number of elements skipped equals the <paramref name="celt" /> parameter; otherwise, S_FALSE.</returns>
      <param name="celt">The number of elements to skip in the enumeration.</param>
    </member>
    <member name="T:System.Runtime.InteropServices.ComTypes.STATDATA">
      <summary>Provides the managed definition of the STATDATA structure.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.STATDATA.advf">
      <summary>Represents the <see cref="T:System.Runtime.InteropServices.ComTypes.ADVF" /> enumeration value that determines when the advisory sink is notified of changes in the data.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.STATDATA.advSink">
      <summary>Represents the <see cref="T:System.Runtime.InteropServices.ComTypes.IAdviseSink" /> interface that will receive change notifications.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.STATDATA.connection">
      <summary>Represents the token that uniquely identifies the advisory connection. This token is returned by the method that sets up the advisory connection.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.STATDATA.formatetc">
      <summary>Represents the <see cref="T:System.Runtime.InteropServices.ComTypes.FORMATETC" /> structure for the data of interest to the advise sink. The advise sink receives notification of changes to the data specified by this <see cref="T:System.Runtime.InteropServices.ComTypes.FORMATETC" /> structure.</summary>
    </member>
    <member name="T:System.Runtime.InteropServices.ComTypes.STGMEDIUM">
      <summary>Provides the managed definition of the STGMEDIUM structure.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.STGMEDIUM.pUnkForRelease">
      <summary>Represents a pointer to an interface instance that allows the sending process to control the way the storage is released when the receiving process calls the ReleaseStgMedium function. If <see cref="F:System.Runtime.InteropServices.ComTypes.STGMEDIUM.pUnkForRelease" /> is null, ReleaseStgMedium uses default procedures to release the storage; otherwise, ReleaseStgMedium uses the specified IUnknown interface.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.STGMEDIUM.tymed">
      <summary>Specifies the type of storage medium. The marshaling and unmarshaling routines use this value to determine which union member was used. This value must be one of the elements of the <see cref="T:System.Runtime.InteropServices.ComTypes.TYMED" /> enumeration.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.STGMEDIUM.unionmember">
      <summary>Represents a handle, string, or interface pointer that the receiving process can use to access the data being transferred.</summary>
    </member>
    <member name="T:System.Runtime.InteropServices.ComTypes.TYMED">
      <summary>Provides the managed definition of the TYMED structure.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.TYMED.TYMED_HGLOBAL">
      <summary>The storage medium is a global memory handle (HGLOBAL). Allocate the global handle with the GMEM_SHARE flag. If the <see cref="T:System.Runtime.InteropServices.ComTypes.STGMEDIUM" /><see cref="F:System.Runtime.InteropServices.ComTypes.STGMEDIUM.pUnkForRelease" /> member is null, the destination process should use GlobalFree to release the memory.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.TYMED.TYMED_FILE">
      <summary>The storage medium is a disk file identified by a path. If the STGMEDIUM<see cref="F:System.Runtime.InteropServices.ComTypes.STGMEDIUM.pUnkForRelease" /> member is null, the destination process should use OpenFile to delete the file.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.TYMED.TYMED_ISTREAM">
      <summary>The storage medium is a stream object identified by an IStream pointer. Use ISequentialStream::Read to read the data. If the <see cref="T:System.Runtime.InteropServices.ComTypes.STGMEDIUM" /><see cref="F:System.Runtime.InteropServices.ComTypes.STGMEDIUM.pUnkForRelease" /> member is not null, the destination process should use IStream::Release to release the stream component.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.TYMED.TYMED_ISTORAGE">
      <summary>The storage medium is a storage component identified by an IStorage pointer. The data is in the streams and storages contained by this IStorage instance. If the <see cref="T:System.Runtime.InteropServices.ComTypes.STGMEDIUM" /><see cref="F:System.Runtime.InteropServices.ComTypes.STGMEDIUM.pUnkForRelease" /> member is not null, the destination process should use IStorage::Release to release the storage component.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.TYMED.TYMED_GDI">
      <summary>The storage medium is a Graphics Device Interface (GDI) component (HBITMAP). If the <see cref="T:System.Runtime.InteropServices.ComTypes.STGMEDIUM" /><see cref="F:System.Runtime.InteropServices.ComTypes.STGMEDIUM.pUnkForRelease" /> member is null, the destination process should use DeleteObject to delete the bitmap.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.TYMED.TYMED_MFPICT">
      <summary>The storage medium is a metafile (HMETAFILE). Use the Windows or WIN32 functions to access the metafile's data. If the <see cref="T:System.Runtime.InteropServices.ComTypes.STGMEDIUM" /><see cref="F:System.Runtime.InteropServices.ComTypes.STGMEDIUM.pUnkForRelease" /> member is null, the destination process should use DeleteMetaFile to delete the bitmap.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.TYMED.TYMED_ENHMF">
      <summary>The storage medium is an enhanced metafile. If the <see cref="T:System.Runtime.InteropServices.ComTypes.STGMEDIUM" /><see cref="F:System.Runtime.InteropServices.ComTypes.STGMEDIUM.pUnkForRelease" /> member is null, the destination process should use DeleteEnhMetaFile to delete the bitmap.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.ComTypes.TYMED.TYMED_NULL">
      <summary>No data is being passed.</summary>
    </member>
    <member name="T:System.Runtime.Versioning.FrameworkName">
      <summary>Represents the name of a version of the .NET Framework.</summary>
    </member>
    <member name="M:System.Runtime.Versioning.FrameworkName.#ctor(System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.Runtime.Versioning.FrameworkName" /> class from a string that contains information about a version of the .NET Framework.</summary>
      <param name="frameworkName">A string that contains .NET Framework version information.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="frameworkName" /> is <see cref="F:System.String.Empty" />.-or-<paramref name="frameworkName" /> has fewer than two components or more than three components.-or-<paramref name="frameworkName" /> does not include a major and minor version number.-or-<paramref name="frameworkName " />does not include a valid version number.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="frameworkName" /> is null.</exception>
    </member>
    <member name="M:System.Runtime.Versioning.FrameworkName.#ctor(System.String,System.Version)">
      <summary>Initializes a new instance of the <see cref="T:System.Runtime.Versioning.FrameworkName" /> class from a string and a <see cref="T:System.Version" /> object that identify a .NET Framework version.</summary>
      <param name="identifier">A string that identifies a .NET Framework version. </param>
      <param name="version">An object that contains .NET Framework version information.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="identifier" /> is <see cref="F:System.String.Empty" />.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="identifier" /> is null.-or-<paramref name="version" /> is null.</exception>
    </member>
    <member name="M:System.Runtime.Versioning.FrameworkName.#ctor(System.String,System.Version,System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.Runtime.Versioning.FrameworkName" /> class from a string, a <see cref="T:System.Version" /> object that identifies a .NET Framework version, and a profile name.</summary>
      <param name="identifier">A string that identifies a .NET Framework version.</param>
      <param name="version">An object that contains .NET Framework version information.</param>
      <param name="profile">A profile name.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="identifier" /> is <see cref="F:System.String.Empty" />.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="identifier" /> is null.-or-<paramref name="version" /> is null.</exception>
    </member>
    <member name="M:System.Runtime.Versioning.FrameworkName.Equals(System.Object)">
      <summary>Returns a value that indicates whether this <see cref="T:System.Runtime.Versioning.FrameworkName" /> instance represents the same .NET Framework version as a specified object.</summary>
      <returns>true if every component of the current <see cref="T:System.Runtime.Versioning.FrameworkName" /> object matches the corresponding component of <paramref name="obj" />; otherwise, false.</returns>
      <param name="obj">The object to compare to the current instance.</param>
    </member>
    <member name="M:System.Runtime.Versioning.FrameworkName.Equals(System.Runtime.Versioning.FrameworkName)">
      <summary>Returns a value that indicates whether this <see cref="T:System.Runtime.Versioning.FrameworkName" /> instance represents the same .NET Framework version as a specified <see cref="T:System.Runtime.Versioning.FrameworkName" /> instance.</summary>
      <returns>true if every component of the current <see cref="T:System.Runtime.Versioning.FrameworkName" /> object matches the corresponding component of <paramref name="other" />; otherwise, false.</returns>
      <param name="other">The object to compare to the current instance.</param>
    </member>
    <member name="P:System.Runtime.Versioning.FrameworkName.FullName">
      <summary>Gets the full name of this <see cref="T:System.Runtime.Versioning.FrameworkName" /> object.</summary>
      <returns>The full name of this <see cref="T:System.Runtime.Versioning.FrameworkName" /> object.</returns>
    </member>
    <member name="M:System.Runtime.Versioning.FrameworkName.GetHashCode">
      <summary>Returns the hash code for the <see cref="T:System.Runtime.Versioning.FrameworkName" /> object.</summary>
      <returns>A 32-bit signed integer that represents the hash code of this instance.</returns>
    </member>
    <member name="P:System.Runtime.Versioning.FrameworkName.Identifier">
      <summary>Gets the identifier of this <see cref="T:System.Runtime.Versioning.FrameworkName" /> object.</summary>
      <returns>The identifier of this <see cref="T:System.Runtime.Versioning.FrameworkName" /> object.</returns>
    </member>
    <member name="M:System.Runtime.Versioning.FrameworkName.op_Equality(System.Runtime.Versioning.FrameworkName,System.Runtime.Versioning.FrameworkName)">
      <summary>Returns a value that indicates whether two <see cref="T:System.Runtime.Versioning.FrameworkName" /> objects represent the same .NET Framework version.</summary>
      <returns>true if the <paramref name="left" /> and <paramref name="right" /> parameters represent the same .NET Framework version; otherwise, false.</returns>
      <param name="left">The first object to compare.</param>
      <param name="right">The second object to compare.</param>
    </member>
    <member name="M:System.Runtime.Versioning.FrameworkName.op_Inequality(System.Runtime.Versioning.FrameworkName,System.Runtime.Versioning.FrameworkName)">
      <summary>Returns a value that indicates whether two <see cref="T:System.Runtime.Versioning.FrameworkName" /> objects represent different .NET Framework versions.</summary>
      <returns>true if the <paramref name="left" /> and <paramref name="right" /> parameters represent different .NET Framework versions; otherwise, false.</returns>
      <param name="left">The first object to compare.</param>
      <param name="right">The second object to compare.</param>
    </member>
    <member name="P:System.Runtime.Versioning.FrameworkName.Profile">
      <summary>Gets the profile name of this <see cref="T:System.Runtime.Versioning.FrameworkName" /> object.</summary>
      <returns>The profile name of this <see cref="T:System.Runtime.Versioning.FrameworkName" /> object.</returns>
    </member>
    <member name="M:System.Runtime.Versioning.FrameworkName.ToString">
      <summary>Returns the string representation of this <see cref="T:System.Runtime.Versioning.FrameworkName" /> object.</summary>
      <returns>A string that represents this <see cref="T:System.Runtime.Versioning.FrameworkName" /> object.</returns>
    </member>
    <member name="P:System.Runtime.Versioning.FrameworkName.Version">
      <summary>Gets the version of this <see cref="T:System.Runtime.Versioning.FrameworkName" /> object.</summary>
      <returns>An object that contains version information about this <see cref="T:System.Runtime.Versioning.FrameworkName" /> object.</returns>
    </member>
    <member name="T:System.Security.AccessControl.SemaphoreAccessRule">
      <summary>Represents a set of access rights allowed or denied for a user or group. This class cannot be inherited.</summary>
    </member>
    <member name="M:System.Security.AccessControl.SemaphoreAccessRule.#ctor(System.Security.Principal.IdentityReference,System.Security.AccessControl.SemaphoreRights,System.Security.AccessControl.AccessControlType)">
      <summary>Initializes a new instance of the <see cref="T:System.Security.AccessControl.SemaphoreAccessRule" /> class, specifying the user or group the rule applies to, the access rights, and whether the specified access rights are allowed or denied.</summary>
      <param name="identity">The user or group the rule applies to. Must be of type <see cref="T:System.Security.Principal.SecurityIdentifier" /> or a type such as <see cref="T:System.Security.Principal.NTAccount" /> that can be converted to type <see cref="T:System.Security.Principal.SecurityIdentifier" />.</param>
      <param name="eventRights">A bitwise combination of <see cref="T:System.Security.AccessControl.SemaphoreRights" /> values specifying the rights allowed or denied.</param>
      <param name="type">One of the <see cref="T:System.Security.AccessControl.AccessControlType" /> values specifying whether the rights are allowed or denied.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="eventRights" /> specifies an invalid value.-or-<paramref name="type" /> specifies an invalid value.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="identity" /> is null. -or-<paramref name="eventRights" /> is zero.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="identity" /> is neither of type <see cref="T:System.Security.Principal.SecurityIdentifier" /> nor of a type such as <see cref="T:System.Security.Principal.NTAccount" /> that can be converted to type <see cref="T:System.Security.Principal.SecurityIdentifier" />.</exception>
    </member>
    <member name="M:System.Security.AccessControl.SemaphoreAccessRule.#ctor(System.String,System.Security.AccessControl.SemaphoreRights,System.Security.AccessControl.AccessControlType)">
      <summary>Initializes a new instance of the <see cref="T:System.Security.AccessControl.SemaphoreAccessRule" /> class, specifying the name of the user or group the rule applies to, the access rights, and whether the specified access rights are allowed or denied.</summary>
      <param name="identity">The name of the user or group the rule applies to.</param>
      <param name="eventRights">A bitwise combination of <see cref="T:System.Security.AccessControl.SemaphoreRights" /> values specifying the rights allowed or denied.</param>
      <param name="type">One of the <see cref="T:System.Security.AccessControl.AccessControlType" /> values specifying whether the rights are allowed or denied.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="eventRights" /> specifies an invalid value.-or-<paramref name="type" /> specifies an invalid value.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="eventRights" /> is zero.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="identity" /> is null.-or-<paramref name="identity" /> is a zero-length string.-or-<paramref name="identity" /> is longer than 512 characters.</exception>
    </member>
    <member name="P:System.Security.AccessControl.SemaphoreAccessRule.SemaphoreRights">
      <summary>Gets the rights allowed or denied by the access rule.</summary>
      <returns>A bitwise combination of <see cref="T:System.Security.AccessControl.SemaphoreRights" /> values indicating the rights allowed or denied by the access rule.</returns>
    </member>
    <member name="T:System.Security.AccessControl.SemaphoreAuditRule">
      <summary>Represents a set of access rights to be audited for a user or group. This class cannot be inherited.</summary>
    </member>
    <member name="M:System.Security.AccessControl.SemaphoreAuditRule.#ctor(System.Security.Principal.IdentityReference,System.Security.AccessControl.SemaphoreRights,System.Security.AccessControl.AuditFlags)">
      <summary>Initializes a new instance of the <see cref="T:System.Security.AccessControl.SemaphoreAuditRule" /> class, specifying the user or group to audit, the rights to audit, and whether to audit success, failure, or both.</summary>
      <param name="identity">The user or group the rule applies to. Must be of type <see cref="T:System.Security.Principal.SecurityIdentifier" /> or a type such as <see cref="T:System.Security.Principal.NTAccount" /> that can be converted to type <see cref="T:System.Security.Principal.SecurityIdentifier" />.</param>
      <param name="eventRights">A bitwise combination of <see cref="T:System.Security.AccessControl.SemaphoreRights" /> values specifying the kinds of access to audit.</param>
      <param name="flags">A bitwise combination of <see cref="T:System.Security.AccessControl.AuditFlags" /> values specifying whether to audit success, failure, or both.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="eventRights" /> specifies an invalid value.-or-<paramref name="flags" /> specifies an invalid value.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="identity" /> is null. -or-<paramref name="eventRights" /> is zero.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="identity" /> is neither of type <see cref="T:System.Security.Principal.SecurityIdentifier" /> nor of a type such as <see cref="T:System.Security.Principal.NTAccount" /> that can be converted to type <see cref="T:System.Security.Principal.SecurityIdentifier" />.</exception>
    </member>
    <member name="P:System.Security.AccessControl.SemaphoreAuditRule.SemaphoreRights">
      <summary>Gets the access rights affected by the audit rule.</summary>
      <returns>A bitwise combination of <see cref="T:System.Security.AccessControl.SemaphoreRights" /> values that indicates the rights affected by the audit rule.</returns>
    </member>
    <member name="T:System.Security.AccessControl.SemaphoreRights">
      <summary>Specifies the access control rights that can be applied to named system semaphore objects.</summary>
    </member>
    <member name="F:System.Security.AccessControl.SemaphoreRights.Modify">
      <summary>The right to release a named semaphore.</summary>
    </member>
    <member name="F:System.Security.AccessControl.SemaphoreRights.Delete">
      <summary>The right to delete a named semaphore.</summary>
    </member>
    <member name="F:System.Security.AccessControl.SemaphoreRights.ReadPermissions">
      <summary>The right to open and copy the access rules and audit rules for a named semaphore.</summary>
    </member>
    <member name="F:System.Security.AccessControl.SemaphoreRights.ChangePermissions">
      <summary>The right to change the security and audit rules associated with a named semaphore.</summary>
    </member>
    <member name="F:System.Security.AccessControl.SemaphoreRights.TakeOwnership">
      <summary>The right to change the owner of a named semaphore.</summary>
    </member>
    <member name="F:System.Security.AccessControl.SemaphoreRights.Synchronize">
      <summary>The right to wait on a named semaphore.</summary>
    </member>
    <member name="F:System.Security.AccessControl.SemaphoreRights.FullControl">
      <summary>The right to exert full control over a named semaphore, and to modify its access rules and audit rules.</summary>
    </member>
    <member name="T:System.Security.AccessControl.SemaphoreSecurity">
      <summary>Represents the Windows access control security for a named semaphore. This class cannot be inherited.</summary>
    </member>
    <member name="M:System.Security.AccessControl.SemaphoreSecurity.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Security.AccessControl.SemaphoreSecurity" /> class with default values.</summary>
      <exception cref="T:System.NotSupportedException">This class is not supported on Windows 98 or Windows Millennium Edition.</exception>
    </member>
    <member name="M:System.Security.AccessControl.SemaphoreSecurity.#ctor(System.String,System.Security.AccessControl.AccessControlSections)">
      <summary>Initializes a new instance of the <see cref="T:System.Security.AccessControl.SemaphoreSecurity" /> class with the specified sections of the access control security rules from the system semaphore with the specified name.</summary>
      <param name="name">The name of the system semaphore whose access control security rules are to be retrieved.</param>
      <param name="includeSections">A combination of <see cref="T:System.Security.AccessControl.AccessControlSections" /> flags specifying the sections to retrieve.</param>
      <exception cref="T:System.NotSupportedException">This class is not supported on Windows 98 or Windows Millennium Edition.</exception>
    </member>
    <member name="P:System.Security.AccessControl.SemaphoreSecurity.AccessRightType">
      <summary>Gets the enumeration that the <see cref="T:System.Security.AccessControl.SemaphoreSecurity" /> class uses to represent access rights.</summary>
      <returns>A <see cref="T:System.Type" /> object representing the <see cref="T:System.Security.AccessControl.SemaphoreRights" /> enumeration.</returns>
    </member>
    <member name="M:System.Security.AccessControl.SemaphoreSecurity.AccessRuleFactory(System.Security.Principal.IdentityReference,System.Int32,System.Boolean,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AccessControlType)">
      <summary>Creates a new access control rule for the specified user, with the specified access rights, access control, and flags.</summary>
      <returns>A <see cref="T:System.Security.AccessControl.SemaphoreAccessRule" /> object representing the specified rights for the specified user.</returns>
      <param name="identityReference">An <see cref="T:System.Security.Principal.IdentityReference" /> that identifies the user or group the rule applies to.</param>
      <param name="accessMask">A bitwise combination of <see cref="T:System.Security.AccessControl.SemaphoreRights" /> values specifying the access rights to allow or deny, cast to an integer.</param>
      <param name="isInherited">Meaningless for named semaphores, because they have no hierarchy.</param>
      <param name="inheritanceFlags">Meaningless for named semaphores, because they have no hierarchy.</param>
      <param name="propagationFlags">Meaningless for named semaphores, because they have no hierarchy.</param>
      <param name="type">One of the <see cref="T:System.Security.AccessControl.AccessControlType" /> values specifying whether the rights are allowed or denied.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="accessMask" />, <paramref name="inheritanceFlags" />, <paramref name="propagationFlags" />, or <paramref name="type" /> specifies an invalid value.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="identityReference" /> is null. -or-<paramref name="accessMask" /> is zero.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="identityReference" /> is neither of type <see cref="T:System.Security.Principal.SecurityIdentifier" />, nor of a type such as <see cref="T:System.Security.Principal.NTAccount" /> that can be converted to type <see cref="T:System.Security.Principal.SecurityIdentifier" />.</exception>
    </member>
    <member name="P:System.Security.AccessControl.SemaphoreSecurity.AccessRuleType">
      <summary>Gets the type that the <see cref="T:System.Security.AccessControl.SemaphoreSecurity" /> class uses to represent access rules.</summary>
      <returns>A <see cref="T:System.Type" /> object representing the <see cref="T:System.Security.AccessControl.SemaphoreAccessRule" /> class.</returns>
    </member>
    <member name="M:System.Security.AccessControl.SemaphoreSecurity.AddAccessRule(System.Security.AccessControl.SemaphoreAccessRule)">
      <summary>Searches for a matching rule with which the new rule can be merged. If none are found, adds the new rule.</summary>
      <param name="rule">The access control rule to add.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="rule" /> is null.</exception>
    </member>
    <member name="M:System.Security.AccessControl.SemaphoreSecurity.AddAuditRule(System.Security.AccessControl.SemaphoreAuditRule)">
      <summary>Searches for an audit rule with which the new rule can be merged. If none are found, adds the new rule.</summary>
      <param name="rule">The audit rule to add. The user specified by this rule determines the search.</param>
    </member>
    <member name="M:System.Security.AccessControl.SemaphoreSecurity.AuditRuleFactory(System.Security.Principal.IdentityReference,System.Int32,System.Boolean,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AuditFlags)">
      <summary>Creates a new audit rule, specifying the user the rule applies to, the access rights to audit, and the outcome that triggers the audit rule.</summary>
      <returns>A <see cref="T:System.Security.AccessControl.SemaphoreAuditRule" /> object representing the specified audit rule for the specified user. The return type of the method is the base class, <see cref="T:System.Security.AccessControl.AuditRule" />, but the return value can be cast safely to the derived class.</returns>
      <param name="identityReference">An <see cref="T:System.Security.Principal.IdentityReference" /> that identifies the user or group the rule applies to.</param>
      <param name="accessMask">A bitwise combination of <see cref="T:System.Security.AccessControl.SemaphoreRights" /> values specifying the access rights to audit, cast to an integer.</param>
      <param name="isInherited">Meaningless for named wait handles, because they have no hierarchy.</param>
      <param name="inheritanceFlags">Meaningless for named wait handles, because they have no hierarchy.</param>
      <param name="propagationFlags">Meaningless for named wait handles, because they have no hierarchy.</param>
      <param name="flags">A bitwise combination of <see cref="T:System.Security.AccessControl.AuditFlags" /> values that specify whether to audit successful access, failed access, or both.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="accessMask" />, <paramref name="inheritanceFlags" />, <paramref name="propagationFlags" />, or <paramref name="flags" /> specifies an invalid value.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="identityReference" /> is null. -or-<paramref name="accessMask" /> is zero.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="identityReference" /> is neither of type <see cref="T:System.Security.Principal.SecurityIdentifier" />, nor of a type such as <see cref="T:System.Security.Principal.NTAccount" /> that can be converted to type <see cref="T:System.Security.Principal.SecurityIdentifier" />.</exception>
    </member>
    <member name="P:System.Security.AccessControl.SemaphoreSecurity.AuditRuleType">
      <summary>Gets the type that the <see cref="T:System.Security.AccessControl.SemaphoreSecurity" /> class uses to represent audit rules.</summary>
      <returns>A <see cref="T:System.Type" /> object representing the <see cref="T:System.Security.AccessControl.SemaphoreAuditRule" /> class.</returns>
    </member>
    <member name="M:System.Security.AccessControl.SemaphoreSecurity.RemoveAccessRule(System.Security.AccessControl.SemaphoreAccessRule)">
      <summary>Searches for an access control rule with the same user and <see cref="T:System.Security.AccessControl.AccessControlType" /> (allow or deny) as the specified rule, and with compatible inheritance and propagation flags; if such a rule is found, the rights contained in the specified access rule are removed from it.</summary>
      <returns>true if a compatible rule is found; otherwise false.</returns>
      <param name="rule">A <see cref="T:System.Security.AccessControl.SemaphoreAccessRule" /> that specifies the user and <see cref="T:System.Security.AccessControl.AccessControlType" /> to search for, and a set of inheritance and propagation flags that a matching rule, if found, must be compatible with. Specifies the rights to remove from the compatible rule, if found.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="rule" /> is null.</exception>
    </member>
    <member name="M:System.Security.AccessControl.SemaphoreSecurity.RemoveAccessRuleAll(System.Security.AccessControl.SemaphoreAccessRule)">
      <summary>Searches for all access control rules with the same user and <see cref="T:System.Security.AccessControl.AccessControlType" /> (allow or deny) as the specified rule and, if found, removes them.</summary>
      <param name="rule">A <see cref="T:System.Security.AccessControl.SemaphoreAccessRule" /> that specifies the user and <see cref="T:System.Security.AccessControl.AccessControlType" /> to search for. Any rights specified by this rule are ignored.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="rule" /> is null.</exception>
    </member>
    <member name="M:System.Security.AccessControl.SemaphoreSecurity.RemoveAccessRuleSpecific(System.Security.AccessControl.SemaphoreAccessRule)">
      <summary>Searches for an access control rule that exactly matches the specified rule and, if found, removes it.</summary>
      <param name="rule">The <see cref="T:System.Security.AccessControl.SemaphoreAccessRule" /> to remove.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="rule" /> is null.</exception>
    </member>
    <member name="M:System.Security.AccessControl.SemaphoreSecurity.RemoveAuditRule(System.Security.AccessControl.SemaphoreAuditRule)">
      <summary>Searches for an audit control rule with the same user as the specified rule, and with compatible inheritance and propagation flags; if a compatible rule is found, the rights contained in the specified rule are removed from it.</summary>
      <returns>true if a compatible rule is found; otherwise, false.</returns>
      <param name="rule">A <see cref="T:System.Security.AccessControl.SemaphoreAuditRule" /> that specifies the user to search for, and a set of inheritance and propagation flags that a matching rule, if found, must be compatible with. Specifies the rights to remove from the compatible rule, if found.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="rule" /> is null.</exception>
    </member>
    <member name="M:System.Security.AccessControl.SemaphoreSecurity.RemoveAuditRuleAll(System.Security.AccessControl.SemaphoreAuditRule)">
      <summary>Searches for all audit rules with the same user as the specified rule and, if found, removes them.</summary>
      <param name="rule">A <see cref="T:System.Security.AccessControl.SemaphoreAuditRule" /> that specifies the user to search for. Any rights specified by this rule are ignored.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="rule" /> is null.</exception>
    </member>
    <member name="M:System.Security.AccessControl.SemaphoreSecurity.RemoveAuditRuleSpecific(System.Security.AccessControl.SemaphoreAuditRule)">
      <summary>Searches for an audit rule that exactly matches the specified rule and, if found, removes it.</summary>
      <param name="rule">The <see cref="T:System.Security.AccessControl.SemaphoreAuditRule" /> to remove.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="rule" /> is null.</exception>
    </member>
    <member name="M:System.Security.AccessControl.SemaphoreSecurity.ResetAccessRule(System.Security.AccessControl.SemaphoreAccessRule)">
      <summary>Removes all access control rules with the same user as the specified rule, regardless of <see cref="T:System.Security.AccessControl.AccessControlType" />, and then adds the specified rule.</summary>
      <param name="rule">The <see cref="T:System.Security.AccessControl.SemaphoreAccessRule" /> to add. The user specified by this rule determines the rules to remove before this rule is added.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="rule" /> is null.</exception>
    </member>
    <member name="M:System.Security.AccessControl.SemaphoreSecurity.SetAccessRule(System.Security.AccessControl.SemaphoreAccessRule)">
      <summary>Removes all access control rules with the same user and <see cref="T:System.Security.AccessControl.AccessControlType" /> (allow or deny) as the specified rule, and then adds the specified rule.</summary>
      <param name="rule">The <see cref="T:System.Security.AccessControl.SemaphoreAccessRule" /> to add. The user and <see cref="T:System.Security.AccessControl.AccessControlType" /> of this rule determine the rules to remove before this rule is added.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="rule" /> is null.</exception>
    </member>
    <member name="M:System.Security.AccessControl.SemaphoreSecurity.SetAuditRule(System.Security.AccessControl.SemaphoreAuditRule)">
      <summary>Removes all audit rules with the same user as the specified rule, regardless of the <see cref="T:System.Security.AccessControl.AuditFlags" /> value, and then adds the specified rule.</summary>
      <param name="rule">The <see cref="T:System.Security.AccessControl.SemaphoreAuditRule" /> to add. The user specified by this rule determines the rules to remove before this rule is added.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="rule" /> is null.</exception>
    </member>
    <member name="T:System.Security.Authentication.AuthenticationException">
      <summary>The exception that is thrown when authentication fails for an authentication stream.</summary>
    </member>
    <member name="M:System.Security.Authentication.AuthenticationException.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Security.Authentication.AuthenticationException" /> class with no message.</summary>
    </member>
    <member name="M:System.Security.Authentication.AuthenticationException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Initializes a new instance of the <see cref="T:System.Security.Authentication.AuthenticationException" /> class from the specified instances of the <see cref="T:System.Runtime.Serialization.SerializationInfo" /> and <see cref="T:System.Runtime.Serialization.StreamingContext" /> classes.</summary>
      <param name="serializationInfo">A <see cref="T:System.Runtime.Serialization.SerializationInfo" /> instance that contains the information required to deserialize the new <see cref="T:System.Security.Authentication.AuthenticationException" /> instance. </param>
      <param name="streamingContext">A <see cref="T:System.Runtime.Serialization.StreamingContext" /> instance. </param>
    </member>
    <member name="M:System.Security.Authentication.AuthenticationException.#ctor(System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.Security.Authentication.AuthenticationException" /> class with the specified message.</summary>
      <param name="message">A <see cref="T:System.String" /> that describes the authentication failure.</param>
    </member>
    <member name="M:System.Security.Authentication.AuthenticationException.#ctor(System.String,System.Exception)">
      <summary>Initializes a new instance of the <see cref="T:System.Security.Authentication.AuthenticationException" /> class with the specified message and inner exception.</summary>
      <param name="message">A <see cref="T:System.String" /> that describes the authentication failure.</param>
      <param name="innerException">The <see cref="T:System.Exception" /> that is the cause of the current exception.</param>
    </member>
    <member name="T:System.Security.Authentication.CipherAlgorithmType">
      <summary>Defines the possible cipher algorithms for the <see cref="T:System.Net.Security.SslStream" /> class.</summary>
    </member>
    <member name="F:System.Security.Authentication.CipherAlgorithmType.None">
      <summary>No encryption algorithm is used.</summary>
    </member>
    <member name="F:System.Security.Authentication.CipherAlgorithmType.Rc2">
      <summary>Rivest's Code 2 (RC2) algorithm.</summary>
    </member>
    <member name="F:System.Security.Authentication.CipherAlgorithmType.Rc4">
      <summary>Rivest's Code 4 (RC4) algorithm.</summary>
    </member>
    <member name="F:System.Security.Authentication.CipherAlgorithmType.Des">
      <summary>The Data Encryption Standard (DES) algorithm.</summary>
    </member>
    <member name="F:System.Security.Authentication.CipherAlgorithmType.TripleDes">
      <summary>The Triple Data Encryption Standard (3DES) algorithm.</summary>
    </member>
    <member name="F:System.Security.Authentication.CipherAlgorithmType.Aes">
      <summary>The Advanced Encryption Standard (AES) algorithm.</summary>
    </member>
    <member name="F:System.Security.Authentication.CipherAlgorithmType.Aes128">
      <summary>The Advanced Encryption Standard (AES) algorithm with a 128 bit key.</summary>
    </member>
    <member name="F:System.Security.Authentication.CipherAlgorithmType.Aes192">
      <summary>The Advanced Encryption Standard (AES) algorithm with a 192 bit key.</summary>
    </member>
    <member name="F:System.Security.Authentication.CipherAlgorithmType.Aes256">
      <summary>The Advanced Encryption Standard (AES) algorithm with a 256 bit key.</summary>
    </member>
    <member name="F:System.Security.Authentication.CipherAlgorithmType.Null">
      <summary />
    </member>
    <member name="T:System.Security.Authentication.ExchangeAlgorithmType">
      <summary>Specifies the algorithm used to create keys shared by the client and server.</summary>
    </member>
    <member name="F:System.Security.Authentication.ExchangeAlgorithmType.None">
      <summary>No key exchange algorithm is used.</summary>
    </member>
    <member name="F:System.Security.Authentication.ExchangeAlgorithmType.RsaSign">
      <summary>The RSA public-key signature algorithm.</summary>
    </member>
    <member name="F:System.Security.Authentication.ExchangeAlgorithmType.RsaKeyX">
      <summary>The RSA public-key exchange algorithm.</summary>
    </member>
    <member name="F:System.Security.Authentication.ExchangeAlgorithmType.DiffieHellman">
      <summary>The Diffie Hellman ephemeral key exchange algorithm.</summary>
    </member>
    <member name="T:System.Security.Authentication.HashAlgorithmType">
      <summary>Specifies the algorithm used for generating message authentication codes (MACs).</summary>
    </member>
    <member name="F:System.Security.Authentication.HashAlgorithmType.None">
      <summary>No hashing algorithm is used.</summary>
    </member>
    <member name="F:System.Security.Authentication.HashAlgorithmType.Md5">
      <summary>The Message Digest 5 (MD5) hashing algorithm.</summary>
    </member>
    <member name="F:System.Security.Authentication.HashAlgorithmType.Sha1">
      <summary>The Secure Hashing Algorithm (SHA1).</summary>
    </member>
    <member name="T:System.Security.Authentication.InvalidCredentialException">
      <summary>The exception that is thrown when authentication fails for an authentication stream and cannot be retried.</summary>
    </member>
    <member name="M:System.Security.Authentication.InvalidCredentialException.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Security.Authentication.InvalidCredentialException" /> class with no message. </summary>
    </member>
    <member name="M:System.Security.Authentication.InvalidCredentialException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Initializes a new instance of the <see cref="T:System.Security.Authentication.InvalidCredentialException" /> class from the specified instances of the <see cref="T:System.Runtime.Serialization.SerializationInfo" /> and <see cref="T:System.Runtime.Serialization.StreamingContext" /> classes.</summary>
      <param name="serializationInfo">A <see cref="T:System.Runtime.Serialization.SerializationInfo" /> instance that contains the information required to deserialize the new <see cref="T:System.Security.Authentication.InvalidCredentialException" /> instance. </param>
      <param name="streamingContext">A <see cref="T:System.Runtime.Serialization.StreamingContext" /> instance. </param>
    </member>
    <member name="M:System.Security.Authentication.InvalidCredentialException.#ctor(System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.Security.Authentication.InvalidCredentialException" /> class with the specified message.</summary>
      <param name="message">A <see cref="T:System.String" /> that describes the authentication failure.</param>
    </member>
    <member name="M:System.Security.Authentication.InvalidCredentialException.#ctor(System.String,System.Exception)">
      <summary>Initializes a new instance of the <see cref="T:System.Security.Authentication.InvalidCredentialException" /> class with the specified message and inner exception.</summary>
      <param name="message">A <see cref="T:System.String" /> that describes the authentication failure.</param>
      <param name="innerException">The <see cref="T:System.Exception" /> that is the cause of the current exception.</param>
    </member>
    <member name="T:System.Security.Authentication.SslProtocols">
      <summary>Defines the possible versions of <see cref="T:System.Security.Authentication.SslProtocols" />.</summary>
    </member>
    <member name="F:System.Security.Authentication.SslProtocols.None">
      <summary>No SSL protocol is specified.</summary>
    </member>
    <member name="F:System.Security.Authentication.SslProtocols.Ssl2">
      <summary>Specifies the SSL 2.0 protocol. SSL 2.0 has been superseded by the TLS protocol and is provided for backward compatibility only.</summary>
    </member>
    <member name="F:System.Security.Authentication.SslProtocols.Ssl3">
      <summary>Specifies the SSL 3.0 protocol. SSL 3.0 has been superseded by the TLS protocol and is provided for backward compatibility only.</summary>
    </member>
    <member name="F:System.Security.Authentication.SslProtocols.Tls">
      <summary>Specifies the TLS 1.0 security protocol. The TLS protocol is defined in IETF RFC 2246.</summary>
    </member>
    <member name="F:System.Security.Authentication.SslProtocols.Default">
      <summary>Specifies that either Secure Sockets Layer (SSL) 3.0 or Transport Layer Security (TLS) 1.0 are acceptable for secure communications</summary>
    </member>
    <member name="T:System.Security.Authentication.ExtendedProtection.ChannelBinding">
      <summary>The <see cref="T:System.Security.Authentication.ExtendedProtection.ChannelBinding" /> class encapsulates a pointer to the opaque data used to bind an authenticated transaction to a secure channel.</summary>
    </member>
    <member name="M:System.Security.Authentication.ExtendedProtection.ChannelBinding.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Security.Authentication.ExtendedProtection.ChannelBinding" /> class.</summary>
    </member>
    <member name="M:System.Security.Authentication.ExtendedProtection.ChannelBinding.#ctor(System.Boolean)">
      <summary>Initializes a new instance of the <see cref="T:System.Security.Authentication.ExtendedProtection.ChannelBinding" /> class.</summary>
      <param name="ownsHandle">A Boolean value that indicates if the application owns the safe handle to a native memory region containing the byte data that would be passed to native calls that provide extended protection for integrated windows authentication.</param>
    </member>
    <member name="P:System.Security.Authentication.ExtendedProtection.ChannelBinding.Size">
      <summary>The <see cref="P:System.Security.Authentication.ExtendedProtection.ChannelBinding.Size" /> property gets the size, in bytes, of the channel binding token associated with the <see cref="T:System.Security.Authentication.ExtendedProtection.ChannelBinding" /> instance.</summary>
      <returns>The size, in bytes, of the channel binding token in the <see cref="T:System.Security.Authentication.ExtendedProtection.ChannelBinding" /> instance.</returns>
    </member>
    <member name="T:System.Security.Authentication.ExtendedProtection.ChannelBindingKind">
      <summary>The <see cref="T:System.Security.Authentication.ExtendedProtection.ChannelBindingKind" /> enumeration represents the kinds of channel bindings that can be queried from secure channels.</summary>
    </member>
    <member name="F:System.Security.Authentication.ExtendedProtection.ChannelBindingKind.Unknown">
      <summary>An unknown channel binding type.</summary>
    </member>
    <member name="F:System.Security.Authentication.ExtendedProtection.ChannelBindingKind.Unique">
      <summary>A channel binding completely unique to a given channel (a TLS session key, for example).</summary>
    </member>
    <member name="F:System.Security.Authentication.ExtendedProtection.ChannelBindingKind.Endpoint">
      <summary>A channel binding unique to a given endpoint (a TLS server certificate, for example).</summary>
    </member>
    <member name="T:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy">
      <summary>The <see cref="T:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy" /> class represents the extended protection policy used by the server to validate incoming client connections. </summary>
    </member>
    <member name="M:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Initializes a new instance of the <see cref="T:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy" /> class from a <see cref="T:System.Runtime.Serialization.SerializationInfo" /> object that contains the required data to populate the <see cref="T:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy" />.</summary>
      <param name="info">A <see cref="T:System.Runtime.Serialization.SerializationInfo" /> instance that contains the information that is required to serialize the new <see cref="T:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy" /> instance.</param>
      <param name="context">A <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains the source of the serialized stream that is associated with the new <see cref="T:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy" /> instance.</param>
    </member>
    <member name="M:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy.#ctor(System.Security.Authentication.ExtendedProtection.PolicyEnforcement)">
      <summary>Initializes a new instance of the <see cref="T:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy" /> class that specifies when the extended protection policy should be enforced.</summary>
      <param name="policyEnforcement">A <see cref="T:System.Security.Authentication.ExtendedProtection.PolicyEnforcement" /> value that indicates when the extended protection policy should be enforced.</param>
    </member>
    <member name="M:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy.#ctor(System.Security.Authentication.ExtendedProtection.PolicyEnforcement,System.Security.Authentication.ExtendedProtection.ChannelBinding)">
      <summary>Initializes a new instance of the <see cref="T:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy" /> class that specifies when the extended protection policy should be enforced and the channel binding token (CBT) to be used.</summary>
      <param name="policyEnforcement">A <see cref="T:System.Security.Authentication.ExtendedProtection.PolicyEnforcement" /> value that indicates when the extended protection policy should be enforced.</param>
      <param name="customChannelBinding">A <see cref="T:System.Security.Authentication.ExtendedProtection.ChannelBinding" /> that contains a custom channel binding to use for validation.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="policyEnforcement" /> is specified as <see cref="F:System.Security.Authentication.ExtendedProtection.PolicyEnforcement.Never" />.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="customChannelBinding " />is null. </exception>
    </member>
    <member name="M:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy.#ctor(System.Security.Authentication.ExtendedProtection.PolicyEnforcement,System.Security.Authentication.ExtendedProtection.ProtectionScenario,System.Collections.ICollection)">
      <summary>Initializes a new instance of the <see cref="T:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy" /> class that specifies when the extended protection policy should be enforced, the kind of protection enforced by the policy, and a custom Service Provider Name (SPN) list that is used to match against a client's SPN.</summary>
      <param name="policyEnforcement">A <see cref="T:System.Security.Authentication.ExtendedProtection.PolicyEnforcement" /> value that indicates when the extended protection policy should be enforced.</param>
      <param name="protectionScenario">A <see cref="T:System.Security.Authentication.ExtendedProtection.ProtectionScenario" /> value that indicates the kind of protection enforced by the policy.</param>
      <param name="customServiceNames">A <see cref="T:System.Collections.ICollection" /> that contains the custom SPN list that is used to match against a client's SPN.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="policyEnforcement" /> is specified as <see cref="F:System.Security.Authentication.ExtendedProtection.PolicyEnforcement.Never" />.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="customServiceNames " />is nullor an empty list. </exception>
    </member>
    <member name="M:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy.#ctor(System.Security.Authentication.ExtendedProtection.PolicyEnforcement,System.Security.Authentication.ExtendedProtection.ProtectionScenario,System.Security.Authentication.ExtendedProtection.ServiceNameCollection)">
      <summary>Initializes a new instance of the <see cref="T:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy" /> class that specifies when the extended protection policy should be enforced, the kind of protection enforced by the policy, and a custom Service Provider Name (SPN) list that is used to match against a client's SPN.</summary>
      <param name="policyEnforcement">A <see cref="T:System.Security.Authentication.ExtendedProtection.PolicyEnforcement" /> value that indicates when the extended protection policy should be enforced.</param>
      <param name="protectionScenario">A <see cref="T:System.Security.Authentication.ExtendedProtection.ProtectionScenario" /> value that indicates the kind of protection enforced by the policy.</param>
      <param name="customServiceNames">A <see cref="T:System.Security.Authentication.ExtendedProtection.ServiceNameCollection" /> that contains the custom SPN list that is used to match against a client's SPN.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="policyEnforcement" /> is specified as <see cref="F:System.Security.Authentication.ExtendedProtection.PolicyEnforcement.Never" />.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="customServiceNames " />is nullor an empty list. </exception>
    </member>
    <member name="P:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy.CustomChannelBinding">
      <summary>Gets a custom channel binding token (CBT) to use for validation.</summary>
      <returns>A <see cref="T:System.Security.Authentication.ExtendedProtection.ChannelBinding" /> that contains a custom channel binding to use for validation.</returns>
    </member>
    <member name="P:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy.CustomServiceNames">
      <summary>Gets the custom Service Provider Name (SPN) list used to match against a client's SPN.</summary>
      <returns>A <see cref="T:System.Security.Authentication.ExtendedProtection.ServiceNameCollection" /> that contains the custom SPN list that is used to match against a client's SPN.</returns>
    </member>
    <member name="P:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy.OSSupportsExtendedProtection">
      <summary>Indicates whether the operating system supports integrated windows authentication with extended protection.</summary>
      <returns>true if the operating system supports integrated windows authentication with extended protection, otherwise false.</returns>
    </member>
    <member name="P:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy.PolicyEnforcement">
      <summary>Gets when the extended protection policy should be enforced.</summary>
      <returns>A <see cref="T:System.Security.Authentication.ExtendedProtection.PolicyEnforcement" /> value that indicates when the extended protection policy should be enforced. </returns>
    </member>
    <member name="P:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy.ProtectionScenario">
      <summary>Gets the kind of protection enforced by the extended protection policy.</summary>
      <returns>A <see cref="T:System.Security.Authentication.ExtendedProtection.ProtectionScenario" /> value that indicates the kind of protection enforced by the policy. </returns>
    </member>
    <member name="M:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Populates a <see cref="T:System.Runtime.Serialization.SerializationInfo" /> object with the required data to serialize an <see cref="T:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy" /> object.</summary>
      <param name="info">A <see cref="T:System.Runtime.Serialization.SerializationInfo" /> object that holds the serialized data for an <see cref="T:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy" /> object.</param>
      <param name="context">A <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains the destination of the serialized stream that is associated with the new <see cref="T:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy" />.</param>
    </member>
    <member name="M:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy.ToString">
      <summary>Gets a string representation for the extended protection policy instance.</summary>
      <returns>A <see cref="T:System.String" /> instance that contains the representation of the <see cref="T:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy" /> instance.</returns>
    </member>
    <member name="T:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicyTypeConverter">
      <summary>The <see cref="T:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicyTypeConverter" /> class represents the type converter for extended protection policy used by the server to validate incoming client connections. </summary>
    </member>
    <member name="M:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicyTypeConverter.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicyTypeConverter" /> class.</summary>
    </member>
    <member name="M:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicyTypeConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)">
      <summary>Returns whether this converter can convert the object to the specified type.</summary>
      <returns>true if this converter can perform the conversion; otherwise false.</returns>
      <param name="context">The object to convert.</param>
      <param name="destinationType">A <see cref="T:System.Type" /> that represents the type you want to convert to.</param>
    </member>
    <member name="M:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicyTypeConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
      <returns>An <see cref="T:System.Object" /> that represents the converted <paramref name="value" /> parameter.</returns>
      <param name="context">An <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> that provides a format context.</param>
      <param name="culture">A <see cref="T:System.Globalization.CultureInfo" /> object. If null is passed, the current culture is assumed.</param>
      <param name="value">The <see cref="T:System.Object" /> to convert. This should be an <see cref="T:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy" /> object.</param>
      <param name="destinationType">The <see cref="T:System.Type" /> to convert the value parameter to.</param>
      <exception cref="T:System.ArgumentNullException">The <paramref name="destinationType" /> parameter is null.</exception>
      <exception cref="T:System.NotSupportedException">The conversion could not be performed.</exception>
    </member>
    <member name="T:System.Security.Authentication.ExtendedProtection.PolicyEnforcement">
      <summary>The <see cref="T:System.Security.Authentication.ExtendedProtection.PolicyEnforcement" /> enumeration specifies when the <see cref="T:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy" /> should be enforced.</summary>
    </member>
    <member name="F:System.Security.Authentication.ExtendedProtection.PolicyEnforcement.Never">
      <summary>The <see cref="T:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy" /> is never enforced and extended protection is disabled.</summary>
    </member>
    <member name="F:System.Security.Authentication.ExtendedProtection.PolicyEnforcement.WhenSupported">
      <summary>The <see cref="T:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy" /> is enforced only if the client and server supports extended protection.</summary>
    </member>
    <member name="F:System.Security.Authentication.ExtendedProtection.PolicyEnforcement.Always">
      <summary>The <see cref="T:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy" /> is always enforced. Clients that don’t support extended protection will fail to authenticate.</summary>
    </member>
    <member name="T:System.Security.Authentication.ExtendedProtection.ProtectionScenario">
      <summary>The <see cref="T:System.Security.Authentication.ExtendedProtection.ProtectionScenario" /> enumeration specifies the protection scenario enforced by the policy.</summary>
    </member>
    <member name="F:System.Security.Authentication.ExtendedProtection.ProtectionScenario.TransportSelected">
      <summary>The transport will select between a secure and standard protection scenario depending on the type of channel used. For secure protection, integrated Windows authentication is wrapped in a secure channel and has an exactly matching channel binding token with no Service Provider Name (SPN) validation. For standard protection, integrated Windows authentication is optionally wrapped in a secure channel with an optional channel binding token and SPN validation is required. So if the request comes through a secure channel, the channel binding token (CBT) is checked, otherwise the SPN is checked.</summary>
    </member>
    <member name="F:System.Security.Authentication.ExtendedProtection.ProtectionScenario.TrustedProxy">
      <summary>Integrated Windows authentication is wrapped in a secure channel terminated by a trusted proxy and has a channel binding token with SPN validation required. This requires the presence of a CBT, but the CBT is not checked while the SPN is checked.</summary>
    </member>
    <member name="T:System.Security.Authentication.ExtendedProtection.ServiceNameCollection">
      <summary>The <see cref="T:System.Security.Authentication.ExtendedProtection.ServiceNameCollection" /> class is a read-only collection of service principal names. </summary>
    </member>
    <member name="M:System.Security.Authentication.ExtendedProtection.ServiceNameCollection.#ctor(System.Collections.ICollection)">
      <summary>Initializes a new read-only instance of the <see cref="T:System.Security.Authentication.ExtendedProtection.ServiceNameCollection" /> class based on an existing <see cref="T:System.Collections.ICollection" />. </summary>
      <param name="items">An instance of the <see cref="T:System.Collections.ICollection" /> class that contains the specified values of service names to be used to initialize the class.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="item " />is null. </exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="item" /> is empty.</exception>
    </member>
    <member name="M:System.Security.Authentication.ExtendedProtection.ServiceNameCollection.Merge(System.Collections.IEnumerable)">
      <summary>Merges the current <see cref="T:System.Security.Authentication.ExtendedProtection.ServiceNameCollection" /> with the specified values to create a new <see cref="T:System.Security.Authentication.ExtendedProtection.ServiceNameCollection" /> containing the union.</summary>
      <returns>A new <see cref="T:System.Security.Authentication.ExtendedProtection.ServiceNameCollection" /> instance that contains the union of the existing <see cref="T:System.Security.Authentication.ExtendedProtection.ServiceNameCollection" /> instance merged with the specified values.</returns>
      <param name="serviceNames">An instance of the <see cref="T:System.Collections.IEnumerable" /> class that contains the specified values of service names to be merged.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="serviceNames " />is null. </exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="serviceNames" /> is empty.</exception>
    </member>
    <member name="M:System.Security.Authentication.ExtendedProtection.ServiceNameCollection.Merge(System.String)">
      <summary>Merges the current <see cref="T:System.Security.Authentication.ExtendedProtection.ServiceNameCollection" /> with the specified values to create a new <see cref="T:System.Security.Authentication.ExtendedProtection.ServiceNameCollection" /> containing the union.</summary>
      <returns>A new <see cref="T:System.Security.Authentication.ExtendedProtection.ServiceNameCollection" /> instance that contains the union of the existing <see cref="T:System.Security.Authentication.ExtendedProtection.ServiceNameCollection" /> instance merged with the specified values.</returns>
      <param name="serviceName">A string that contains the specified values of service names to be used to initialize the class.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="serviceNames " />is null. </exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="serviceNames" /> is empty.</exception>
    </member>
    <member name="T:System.Security.Authentication.ExtendedProtection.Configuration.ExtendedProtectionPolicyElement">
      <summary>The <see cref="T:System.Security.Authentication.ExtendedProtection.Configuration.ExtendedProtectionPolicyElement" /> class represents a configuration element for an <see cref="T:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy" />.</summary>
    </member>
    <member name="M:System.Security.Authentication.ExtendedProtection.Configuration.ExtendedProtectionPolicyElement.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Security.Authentication.ExtendedProtection.Configuration.ExtendedProtectionPolicyElement" /> class.</summary>
    </member>
    <member name="M:System.Security.Authentication.ExtendedProtection.Configuration.ExtendedProtectionPolicyElement.BuildPolicy">
      <summary>The <see cref="M:System.Security.Authentication.ExtendedProtection.Configuration.ExtendedProtectionPolicyElement.BuildPolicy" /> method builds a new <see cref="T:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy" /> instance based on the properties set on the <see cref="T:System.Security.Authentication.ExtendedProtection.Configuration.ExtendedProtectionPolicyElement" /> class. </summary>
      <returns>A new <see cref="T:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy" /> instance that represents the extended protection policy created.</returns>
    </member>
    <member name="P:System.Security.Authentication.ExtendedProtection.Configuration.ExtendedProtectionPolicyElement.CustomServiceNames">
      <summary>Gets or sets the custom Service Provider Name (SPN) list used to match against a client's SPN for this configuration policy element. </summary>
      <returns>Returns a <see cref="T:System.Security.Authentication.ExtendedProtection.Configuration.ServiceNameElementCollection" /> that includes the custom SPN list used to match against a client's SPN.</returns>
    </member>
    <member name="P:System.Security.Authentication.ExtendedProtection.Configuration.ExtendedProtectionPolicyElement.PolicyEnforcement">
      <summary>Gets or sets the policy enforcement value for this configuration policy element.</summary>
      <returns>Returns a <see cref="T:System.Security.Authentication.ExtendedProtection.PolicyEnforcement" /> value that indicates when the extended protection policy should be enforced.</returns>
    </member>
    <member name="P:System.Security.Authentication.ExtendedProtection.Configuration.ExtendedProtectionPolicyElement.ProtectionScenario">
      <summary>Gets or sets the kind of protection enforced by the extended protection policy for this configuration policy element.</summary>
      <returns>A <see cref="T:System.Security.Authentication.ExtendedProtection.ProtectionScenario" /> value that indicates the kind of protection enforced by the policy.</returns>
    </member>
    <member name="T:System.Security.Authentication.ExtendedProtection.Configuration.ServiceNameElement">
      <summary>The <see cref="T:System.Security.Authentication.ExtendedProtection.Configuration.ServiceNameElement" /> class represents a configuration element for a service name used in a <see cref="T:System.Security.Authentication.ExtendedProtection.Configuration.ServiceNameElementCollection" />.</summary>
    </member>
    <member name="M:System.Security.Authentication.ExtendedProtection.Configuration.ServiceNameElement.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Security.Authentication.ExtendedProtection.Configuration.ServiceNameElement" /> class.</summary>
    </member>
    <member name="P:System.Security.Authentication.ExtendedProtection.Configuration.ServiceNameElement.Name">
      <summary>Gets or sets the Service Provider Name (SPN) for this <see cref="T:System.Security.Authentication.ExtendedProtection.Configuration.ServiceNameElement" /> instance.</summary>
      <returns>A <see cref="T:System.String" /> that contains the representation of SPN for this <see cref="T:System.Security.Authentication.ExtendedProtection.Configuration.ServiceNameElement" /> instance.</returns>
    </member>
    <member name="T:System.Security.Authentication.ExtendedProtection.Configuration.ServiceNameElementCollection">
      <summary>The <see cref="T:System.Security.Authentication.ExtendedProtection.ServiceNameCollection" /> class is a collection of service principal names that represent a configuration element for an <see cref="T:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy" />.</summary>
    </member>
    <member name="M:System.Security.Authentication.ExtendedProtection.Configuration.ServiceNameElementCollection.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Security.Authentication.ExtendedProtection.Configuration.ServiceNameElementCollection" /> class.</summary>
    </member>
    <member name="M:System.Security.Authentication.ExtendedProtection.Configuration.ServiceNameElementCollection.Add(System.Security.Authentication.ExtendedProtection.Configuration.ServiceNameElement)">
      <summary>The <see cref="M:System.Security.Authentication.ExtendedProtection.Configuration.ServiceNameElementCollection.Add(System.Security.Authentication.ExtendedProtection.Configuration.ServiceNameElement)" /> method adds a <see cref="T:System.Security.Authentication.ExtendedProtection.Configuration.ServiceNameElement" /> instance to this <see cref="T:System.Security.Authentication.ExtendedProtection.Configuration.ServiceNameElementCollection" />. </summary>
      <param name="element">The <see cref="T:System.Security.Authentication.ExtendedProtection.Configuration.ServiceNameElement" /> instance to add to this <see cref="T:System.Security.Authentication.ExtendedProtection.Configuration.ServiceNameElementCollection" />.</param>
    </member>
    <member name="M:System.Security.Authentication.ExtendedProtection.Configuration.ServiceNameElementCollection.Clear">
      <summary>The <see cref="M:System.Security.Authentication.ExtendedProtection.Configuration.ServiceNameElementCollection.Clear" /> method removes all configuration element objects from this <see cref="T:System.Security.Authentication.ExtendedProtection.Configuration.ServiceNameElementCollection" />.</summary>
    </member>
    <member name="M:System.Security.Authentication.ExtendedProtection.Configuration.ServiceNameElementCollection.IndexOf(System.Security.Authentication.ExtendedProtection.Configuration.ServiceNameElement)">
      <summary>The <see cref="M:System.Security.Authentication.ExtendedProtection.Configuration.ServiceNameElementCollection.IndexOf(System.Security.Authentication.ExtendedProtection.Configuration.ServiceNameElement)" /> method retrieves the index of the specified configuration element in this <see cref="T:System.Security.Authentication.ExtendedProtection.Configuration.ServiceNameElementCollection" />.</summary>
      <returns>The index of the specified <see cref="T:System.Security.Authentication.ExtendedProtection.Configuration.ServiceNameElement" /> in this <see cref="T:System.Security.Authentication.ExtendedProtection.Configuration.ServiceNameElementCollection" />.</returns>
      <param name="element">The <see cref="T:System.Security.Authentication.ExtendedProtection.Configuration.ServiceNameElement" /> instance to retrieve the index of in this <see cref="T:System.Security.Authentication.ExtendedProtection.Configuration.ServiceNameElementCollection" />.</param>
    </member>
    <member name="P:System.Security.Authentication.ExtendedProtection.Configuration.ServiceNameElementCollection.Item(System.Int32)">
      <summary>The <see cref="P:System.Security.Authentication.ExtendedProtection.Configuration.ServiceNameElementCollection.Item(System.String)" /> property gets or sets the <see cref="T:System.Security.Authentication.ExtendedProtection.Configuration.ServiceNameElement" /> instance at the specified index location.</summary>
      <returns>The <see cref="T:System.Security.Authentication.ExtendedProtection.Configuration.ServiceNameElement" /> instance requested. If the requested instance is not found, then null is returned.</returns>
      <param name="index">The index of the <see cref="T:System.Security.Authentication.ExtendedProtection.Configuration.ServiceNameElement" /> instance in this <see cref="T:System.Security.Authentication.ExtendedProtection.Configuration.ServiceNameElementCollection" />.</param>
    </member>
    <member name="P:System.Security.Authentication.ExtendedProtection.Configuration.ServiceNameElementCollection.Item(System.String)">
      <summary>The <see cref="P:System.Security.Authentication.ExtendedProtection.Configuration.ServiceNameElementCollection.Item(System.String)" /> property gets or sets the <see cref="T:System.Security.Authentication.ExtendedProtection.Configuration.ServiceNameElement" /> instance based on a string that represents the <see cref="T:System.Security.Authentication.ExtendedProtection.Configuration.ServiceNameElement" /> instance.</summary>
      <returns>The <see cref="T:System.Security.Authentication.ExtendedProtection.Configuration.ServiceNameElement" /> instance requested. If the requested instance is not found, then null is returned.</returns>
      <param name="name">A <see cref="T:System.String" /> that represents the <see cref="T:System.Security.Authentication.ExtendedProtection.Configuration.ServiceNameElement" /> instance in this <see cref="T:System.Security.Authentication.ExtendedProtection.Configuration.ServiceNameElementCollection" />.</param>
    </member>
    <member name="M:System.Security.Authentication.ExtendedProtection.Configuration.ServiceNameElementCollection.Remove(System.Security.Authentication.ExtendedProtection.Configuration.ServiceNameElement)">
      <summary>The <see cref="M:System.Security.Authentication.ExtendedProtection.Configuration.ServiceNameElementCollection.Remove(System.Security.Authentication.ExtendedProtection.Configuration.ServiceNameElement)" /> method removes a <see cref="T:System.Security.Authentication.ExtendedProtection.Configuration.ServiceNameElement" /> instance from this <see cref="T:System.Security.Authentication.ExtendedProtection.Configuration.ServiceNameElementCollection" />.</summary>
      <param name="element">The <see cref="T:System.Security.Authentication.ExtendedProtection.Configuration.ServiceNameElement" /> instance to remove from this <see cref="T:System.Security.Authentication.ExtendedProtection.Configuration.ServiceNameElementCollection" />.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="element " />is null. </exception>
    </member>
    <member name="M:System.Security.Authentication.ExtendedProtection.Configuration.ServiceNameElementCollection.Remove(System.String)">
      <summary>The <see cref="M:System.Security.Authentication.ExtendedProtection.Configuration.ServiceNameElementCollection.Remove(System.Security.Authentication.ExtendedProtection.Configuration.ServiceNameElement)" /> method removes a <see cref="T:System.Security.Authentication.ExtendedProtection.Configuration.ServiceNameElement" /> instance from this <see cref="T:System.Security.Authentication.ExtendedProtection.Configuration.ServiceNameElementCollection" /> based on the <see cref="T:System.String" /> specified.</summary>
      <param name="name">A <see cref="T:System.String" /> that represents the <see cref="T:System.Security.Authentication.ExtendedProtection.Configuration.ServiceNameElement" /> instance to remove from this <see cref="T:System.Security.Authentication.ExtendedProtection.Configuration.ServiceNameElementCollection" /></param>
    </member>
    <member name="M:System.Security.Authentication.ExtendedProtection.Configuration.ServiceNameElementCollection.RemoveAt(System.Int32)">
      <summary>The <see cref="M:System.Security.Authentication.ExtendedProtection.Configuration.ServiceNameElementCollection.Remove(System.Security.Authentication.ExtendedProtection.Configuration.ServiceNameElement)" /> method removes a <see cref="T:System.Security.Authentication.ExtendedProtection.Configuration.ServiceNameElement" /> instance from this <see cref="T:System.Security.Authentication.ExtendedProtection.Configuration.ServiceNameElementCollection" /> based on the index specified.</summary>
      <param name="index">The index of the <see cref="T:System.Security.Authentication.ExtendedProtection.Configuration.ServiceNameElement" /> instance to remove from this <see cref="T:System.Security.Authentication.ExtendedProtection.Configuration.ServiceNameElementCollection" />.</param>
    </member>
    <member name="T:System.Security.Cryptography.AsnEncodedData">
      <summary>Represents Abstract Syntax Notation One (ASN.1)-encoded data.</summary>
    </member>
    <member name="M:System.Security.Cryptography.AsnEncodedData.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Security.Cryptography.AsnEncodedData" /> class.</summary>
    </member>
    <member name="M:System.Security.Cryptography.AsnEncodedData.#ctor(System.Byte[])">
      <summary>Initializes a new instance of the <see cref="T:System.Security.Cryptography.AsnEncodedData" /> class using a byte array.</summary>
      <param name="rawData">A byte array that contains Abstract Syntax Notation One (ASN.1)-encoded data.</param>
    </member>
    <member name="M:System.Security.Cryptography.AsnEncodedData.#ctor(System.Security.Cryptography.AsnEncodedData)">
      <summary>Initializes a new instance of the <see cref="T:System.Security.Cryptography.AsnEncodedData" /> class using an instance of the <see cref="T:System.Security.Cryptography.AsnEncodedData" /> class.</summary>
      <param name="asnEncodedData">An instance of the <see cref="T:System.Security.Cryptography.AsnEncodedData" /> class.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="asnEncodedData" /> is null.</exception>
    </member>
    <member name="M:System.Security.Cryptography.AsnEncodedData.#ctor(System.Security.Cryptography.Oid,System.Byte[])">
      <summary>Initializes a new instance of the <see cref="T:System.Security.Cryptography.AsnEncodedData" /> class using an <see cref="T:System.Security.Cryptography.Oid" /> object and a byte array.</summary>
      <param name="oid">An <see cref="T:System.Security.Cryptography.Oid" /> object.</param>
      <param name="rawData">A byte array that contains Abstract Syntax Notation One (ASN.1)-encoded data.</param>
    </member>
    <member name="M:System.Security.Cryptography.AsnEncodedData.#ctor(System.String,System.Byte[])">
      <summary>Initializes a new instance of the <see cref="T:System.Security.Cryptography.AsnEncodedData" /> class using a byte array.</summary>
      <param name="oid">A string that represents <see cref="T:System.Security.Cryptography.Oid" /> information.</param>
      <param name="rawData">A byte array that contains Abstract Syntax Notation One (ASN.1)-encoded data.</param>
    </member>
    <member name="M:System.Security.Cryptography.AsnEncodedData.CopyFrom(System.Security.Cryptography.AsnEncodedData)">
      <summary>Copies information from an <see cref="T:System.Security.Cryptography.AsnEncodedData" /> object.</summary>
      <param name="asnEncodedData">The <see cref="T:System.Security.Cryptography.AsnEncodedData" /> object to base the new object on.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="asnEncodedData " />is null.</exception>
    </member>
    <member name="M:System.Security.Cryptography.AsnEncodedData.Format(System.Boolean)">
      <summary>Returns a formatted version of the Abstract Syntax Notation One (ASN.1)-encoded data as a string.</summary>
      <returns>A formatted string that represents the Abstract Syntax Notation One (ASN.1)-encoded data.</returns>
      <param name="multiLine">true if the return string should contain carriage returns; otherwise, false.</param>
    </member>
    <member name="P:System.Security.Cryptography.AsnEncodedData.Oid">
      <summary>Gets or sets the <see cref="T:System.Security.Cryptography.Oid" /> value for an <see cref="T:System.Security.Cryptography.AsnEncodedData" /> object.</summary>
      <returns>An <see cref="T:System.Security.Cryptography.Oid" /> object.</returns>
    </member>
    <member name="P:System.Security.Cryptography.AsnEncodedData.RawData">
      <summary>Gets or sets the Abstract Syntax Notation One (ASN.1)-encoded data represented in a byte array.</summary>
      <returns>A byte array that represents the Abstract Syntax Notation One (ASN.1)-encoded data.</returns>
      <exception cref="T:System.ArgumentNullException">The value is null.</exception>
    </member>
    <member name="T:System.Security.Cryptography.AsnEncodedDataCollection">
      <summary>Represents a collection of <see cref="T:System.Security.Cryptography.AsnEncodedData" /> objects. This class cannot be inherited.</summary>
    </member>
    <member name="M:System.Security.Cryptography.AsnEncodedDataCollection.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Security.Cryptography.AsnEncodedDataCollection" /> class.</summary>
    </member>
    <member name="M:System.Security.Cryptography.AsnEncodedDataCollection.#ctor(System.Security.Cryptography.AsnEncodedData)">
      <summary>Initializes a new instance of the <see cref="T:System.Security.Cryptography.AsnEncodedDataCollection" /> class and adds an <see cref="T:System.Security.Cryptography.AsnEncodedData" /> object to the collection.</summary>
      <param name="asnEncodedData">The <see cref="T:System.Security.Cryptography.AsnEncodedData" /> object to add to the collection.</param>
    </member>
    <member name="M:System.Security.Cryptography.AsnEncodedDataCollection.Add(System.Security.Cryptography.AsnEncodedData)">
      <summary>Adds an <see cref="T:System.Security.Cryptography.AsnEncodedData" /> object to the <see cref="T:System.Security.Cryptography.AsnEncodedDataCollection" /> object.</summary>
      <returns>The index of the added <see cref="T:System.Security.Cryptography.AsnEncodedData" /> object.</returns>
      <param name="asnEncodedData">The <see cref="T:System.Security.Cryptography.AsnEncodedData" /> object to add to the collection.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="asnEncodedData" /> is null.</exception>
      <exception cref="T:System.Security.Cryptography.CryptographicException">Neither of the OIDs are null and the OIDs do not match.</exception>
      <exception cref="T:System.Security.Cryptography.CryptographicException">One of the OIDs is null and the OIDs do not match.</exception>
    </member>
    <member name="M:System.Security.Cryptography.AsnEncodedDataCollection.CopyTo(System.Security.Cryptography.AsnEncodedData[],System.Int32)">
      <summary>Copies the <see cref="T:System.Security.Cryptography.AsnEncodedDataCollection" /> object into an array.</summary>
      <param name="array">The array that the <see cref="T:System.Security.Cryptography.AsnEncodedDataCollection" /> object is to be copied into.</param>
      <param name="index">The location where the copy operation starts.</param>
    </member>
    <member name="P:System.Security.Cryptography.AsnEncodedDataCollection.Count">
      <summary>Gets the number of <see cref="T:System.Security.Cryptography.AsnEncodedData" /> objects in a collection.</summary>
      <returns>The number of <see cref="T:System.Security.Cryptography.AsnEncodedData" /> objects.</returns>
    </member>
    <member name="M:System.Security.Cryptography.AsnEncodedDataCollection.GetEnumerator">
      <summary>Returns an <see cref="T:System.Security.Cryptography.AsnEncodedDataEnumerator" /> object that can be used to navigate the <see cref="T:System.Security.Cryptography.AsnEncodedDataCollection" /> object.</summary>
      <returns>An <see cref="T:System.Security.Cryptography.AsnEncodedDataEnumerator" /> object.</returns>
    </member>
    <member name="P:System.Security.Cryptography.AsnEncodedDataCollection.IsSynchronized">
      <summary>Gets a value that indicates whether access to the <see cref="T:System.Security.Cryptography.AsnEncodedDataCollection" /> object is thread safe.</summary>
      <returns>false in all cases.</returns>
    </member>
    <member name="P:System.Security.Cryptography.AsnEncodedDataCollection.Item(System.Int32)">
      <summary>Gets an <see cref="T:System.Security.Cryptography.AsnEncodedData" /> object from the <see cref="T:System.Security.Cryptography.AsnEncodedDataCollection" /> object.</summary>
      <returns>An <see cref="T:System.Security.Cryptography.AsnEncodedData" /> object.</returns>
      <param name="index">The location in the collection.</param>
    </member>
    <member name="M:System.Security.Cryptography.AsnEncodedDataCollection.Remove(System.Security.Cryptography.AsnEncodedData)">
      <summary>Removes an <see cref="T:System.Security.Cryptography.AsnEncodedData" /> object from the <see cref="T:System.Security.Cryptography.AsnEncodedDataCollection" /> object.</summary>
      <param name="asnEncodedData">The <see cref="T:System.Security.Cryptography.AsnEncodedData" /> object to remove.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="asnEncodedData" /> is null.</exception>
    </member>
    <member name="P:System.Security.Cryptography.AsnEncodedDataCollection.SyncRoot">
      <summary>Gets an object that can be used to synchronize access to the <see cref="T:System.Security.Cryptography.AsnEncodedDataCollection" /> object.</summary>
      <returns>An object used to synchronize access to the <see cref="T:System.Security.Cryptography.AsnEncodedDataCollection" /> object.</returns>
    </member>
    <member name="M:System.Security.Cryptography.AsnEncodedDataCollection.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
      <summary>Copies the <see cref="T:System.Security.Cryptography.AsnEncodedDataCollection" /> object into an array.</summary>
      <param name="array">The array that the <see cref="T:System.Security.Cryptography.AsnEncodedDataCollection" /> object is to be copied into.</param>
      <param name="index">The location where the copy operation starts.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="array" /> is a multidimensional array, which is not supported by this method.</exception>
      <exception cref="T:System.ArgumentException">The length for <paramref name="index" /> is invalid.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="array" /> is null.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">The length for <paramref name="index" /> is out of range.</exception>
    </member>
    <member name="M:System.Security.Cryptography.AsnEncodedDataCollection.System#Collections#IEnumerable#GetEnumerator">
      <summary>Returns an <see cref="T:System.Security.Cryptography.AsnEncodedDataEnumerator" /> object that can be used to navigate the <see cref="T:System.Security.Cryptography.AsnEncodedDataCollection" /> object.</summary>
      <returns>An <see cref="T:System.Security.Cryptography.AsnEncodedDataEnumerator" /> object that can be used to navigate the collection.</returns>
    </member>
    <member name="T:System.Security.Cryptography.AsnEncodedDataEnumerator">
      <summary>Provides the ability to navigate through an <see cref="T:System.Security.Cryptography.AsnEncodedDataCollection" /> object. This class cannot be inherited.</summary>
    </member>
    <member name="P:System.Security.Cryptography.AsnEncodedDataEnumerator.Current">
      <summary>Gets the current <see cref="T:System.Security.Cryptography.AsnEncodedData" /> object in an <see cref="T:System.Security.Cryptography.AsnEncodedDataCollection" /> object.</summary>
      <returns>The current <see cref="T:System.Security.Cryptography.AsnEncodedData" /> object in the collection.</returns>
    </member>
    <member name="M:System.Security.Cryptography.AsnEncodedDataEnumerator.MoveNext">
      <summary>Advances to the next <see cref="T:System.Security.Cryptography.AsnEncodedData" /> object in an <see cref="T:System.Security.Cryptography.AsnEncodedDataCollection" /> object.</summary>
      <returns>true, if the enumerator was successfully advanced to the next element; false, if the enumerator has passed the end of the collection.</returns>
      <exception cref="T:System.InvalidOperationException">The collection was modified after the enumerator was created.</exception>
    </member>
    <member name="M:System.Security.Cryptography.AsnEncodedDataEnumerator.Reset">
      <summary>Sets an enumerator to its initial position.</summary>
      <exception cref="T:System.InvalidOperationException">The collection was modified after the enumerator was created.</exception>
    </member>
    <member name="P:System.Security.Cryptography.AsnEncodedDataEnumerator.System#Collections#IEnumerator#Current">
      <summary>Gets the current <see cref="T:System.Security.Cryptography.AsnEncodedData" /> object in an <see cref="T:System.Security.Cryptography.AsnEncodedDataCollection" /> object.</summary>
      <returns>The current <see cref="T:System.Security.Cryptography.AsnEncodedData" /> object.</returns>
    </member>
    <member name="T:System.Security.Cryptography.Oid">
      <summary>Represents a cryptographic object identifier. This class cannot be inherited.</summary>
    </member>
    <member name="M:System.Security.Cryptography.Oid.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Security.Cryptography.Oid" /> class.</summary>
    </member>
    <member name="M:System.Security.Cryptography.Oid.#ctor(System.Security.Cryptography.Oid)">
      <summary>Initializes a new instance of the <see cref="T:System.Security.Cryptography.Oid" /> class using the specified <see cref="T:System.Security.Cryptography.Oid" /> object.</summary>
      <param name="oid">The object identifier information to use to create the new object identifier.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="oid " />is null.</exception>
    </member>
    <member name="M:System.Security.Cryptography.Oid.#ctor(System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.Security.Cryptography.Oid" /> class using a string value of an <see cref="T:System.Security.Cryptography.Oid" /> object.</summary>
      <param name="oid">An object identifier.</param>
    </member>
    <member name="M:System.Security.Cryptography.Oid.#ctor(System.String,System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.Security.Cryptography.Oid" /> class using the specified value and friendly name.</summary>
      <param name="value">The dotted number of the identifier.</param>
      <param name="friendlyName">The friendly name of the identifier.</param>
    </member>
    <member name="P:System.Security.Cryptography.Oid.FriendlyName">
      <summary>Gets or sets the friendly name of the identifier.</summary>
      <returns>The friendly name of the identifier.</returns>
    </member>
    <member name="P:System.Security.Cryptography.Oid.Value">
      <summary>Gets or sets the dotted number of the identifier.</summary>
      <returns>The dotted number of the identifier.</returns>
    </member>
    <member name="T:System.Security.Cryptography.OidCollection">
      <summary>Represents a collection of <see cref="T:System.Security.Cryptography.Oid" /> objects. This class cannot be inherited.</summary>
    </member>
    <member name="M:System.Security.Cryptography.OidCollection.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Security.Cryptography.OidCollection" /> class.</summary>
    </member>
    <member name="M:System.Security.Cryptography.OidCollection.Add(System.Security.Cryptography.Oid)">
      <summary>Adds an <see cref="T:System.Security.Cryptography.Oid" /> object to the <see cref="T:System.Security.Cryptography.OidCollection" /> object.</summary>
      <returns>The index of the added <see cref="T:System.Security.Cryptography.Oid" /> object.</returns>
      <param name="oid">The <see cref="T:System.Security.Cryptography.Oid" /> object to add to the collection.</param>
    </member>
    <member name="M:System.Security.Cryptography.OidCollection.CopyTo(System.Security.Cryptography.Oid[],System.Int32)">
      <summary>Copies the <see cref="T:System.Security.Cryptography.OidCollection" /> object into an array.</summary>
      <param name="array">The array to copy the <see cref="T:System.Security.Cryptography.OidCollection" /> object into.</param>
      <param name="index">The location where the copy operation starts.</param>
    </member>
    <member name="P:System.Security.Cryptography.OidCollection.Count">
      <summary>Gets the number of <see cref="T:System.Security.Cryptography.Oid" /> objects in a collection. </summary>
      <returns>The number of <see cref="T:System.Security.Cryptography.Oid" /> objects in a collection.</returns>
    </member>
    <member name="M:System.Security.Cryptography.OidCollection.GetEnumerator">
      <summary>Returns an <see cref="T:System.Security.Cryptography.OidEnumerator" /> object that can be used to navigate the <see cref="T:System.Security.Cryptography.OidCollection" /> object.</summary>
      <returns>An <see cref="T:System.Security.Cryptography.OidEnumerator" /> object.</returns>
    </member>
    <member name="P:System.Security.Cryptography.OidCollection.IsSynchronized">
      <summary>Gets a value that indicates whether access to the <see cref="T:System.Security.Cryptography.OidCollection" /> object is thread safe.</summary>
      <returns>false in all cases.</returns>
    </member>
    <member name="P:System.Security.Cryptography.OidCollection.Item(System.Int32)">
      <summary>Gets an <see cref="T:System.Security.Cryptography.Oid" /> object from the <see cref="T:System.Security.Cryptography.OidCollection" /> object.</summary>
      <returns>An <see cref="T:System.Security.Cryptography.Oid" /> object.</returns>
      <param name="index">The location of the <see cref="T:System.Security.Cryptography.Oid" /> object in the collection.</param>
    </member>
    <member name="P:System.Security.Cryptography.OidCollection.Item(System.String)">
      <summary>Gets the first <see cref="T:System.Security.Cryptography.Oid" /> object that contains a value of the <see cref="P:System.Security.Cryptography.Oid.Value" /> property or a value of the <see cref="P:System.Security.Cryptography.Oid.FriendlyName" /> property that matches the specified string value from the <see cref="T:System.Security.Cryptography.OidCollection" /> object.</summary>
      <returns>An <see cref="T:System.Security.Cryptography.Oid" /> object.</returns>
      <param name="oid">A string that represents a <see cref="P:System.Security.Cryptography.Oid.Value" /> property or a <see cref="P:System.Security.Cryptography.Oid.FriendlyName" /> property.</param>
    </member>
    <member name="P:System.Security.Cryptography.OidCollection.SyncRoot">
      <summary>Gets an object that can be used to synchronize access to the <see cref="T:System.Security.Cryptography.OidCollection" /> object.</summary>
      <returns>An object that can be used to synchronize access to the <see cref="T:System.Security.Cryptography.OidCollection" /> object.</returns>
    </member>
    <member name="M:System.Security.Cryptography.OidCollection.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
      <summary>Copies the <see cref="T:System.Security.Cryptography.OidCollection" /> object into an array.</summary>
      <param name="array">The array to copy the <see cref="T:System.Security.Cryptography.OidCollection" /> object to.</param>
      <param name="index">The location where the copy operation starts.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="array" /> cannot be a multidimensional array.-or-The length of <paramref name="array" /> is an invalid offset length.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="array" /> is null.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">The value of <paramref name="index" /> is out range.</exception>
    </member>
    <member name="M:System.Security.Cryptography.OidCollection.System#Collections#IEnumerable#GetEnumerator">
      <summary>Returns an <see cref="T:System.Security.Cryptography.OidEnumerator" /> object that can be used to navigate the <see cref="T:System.Security.Cryptography.OidCollection" /> object.</summary>
      <returns>An <see cref="T:System.Security.Cryptography.OidEnumerator" /> object that can be used to navigate the collection.</returns>
    </member>
    <member name="T:System.Security.Cryptography.OidEnumerator">
      <summary>Provides the ability to navigate through an <see cref="T:System.Security.Cryptography.OidCollection" /> object. This class cannot be inherited.</summary>
    </member>
    <member name="P:System.Security.Cryptography.OidEnumerator.Current">
      <summary>Gets the current <see cref="T:System.Security.Cryptography.Oid" /> object in an <see cref="T:System.Security.Cryptography.OidCollection" /> object.</summary>
      <returns>The current <see cref="T:System.Security.Cryptography.Oid" /> object in the collection.</returns>
    </member>
    <member name="M:System.Security.Cryptography.OidEnumerator.MoveNext">
      <summary>Advances to the next <see cref="T:System.Security.Cryptography.Oid" /> object in an <see cref="T:System.Security.Cryptography.OidCollection" /> object.</summary>
      <returns>true, if the enumerator was successfully advanced to the next element; false, if the enumerator has passed the end of the collection.</returns>
      <exception cref="T:System.InvalidOperationException">The collection was modified after the enumerator was created.</exception>
    </member>
    <member name="M:System.Security.Cryptography.OidEnumerator.Reset">
      <summary>Sets an enumerator to its initial position.</summary>
      <exception cref="T:System.InvalidOperationException">The collection was modified after the enumerator was created.</exception>
    </member>
    <member name="P:System.Security.Cryptography.OidEnumerator.System#Collections#IEnumerator#Current">
      <summary>Gets the current <see cref="T:System.Security.Cryptography.Oid" /> object in an <see cref="T:System.Security.Cryptography.OidCollection" /> object.</summary>
      <returns>The current <see cref="T:System.Security.Cryptography.Oid" /> object.</returns>
    </member>
    <member name="T:System.Security.Cryptography.X509Certificates.OpenFlags">
      <summary>Specifies the way to open the X.509 certificate store.</summary>
    </member>
    <member name="F:System.Security.Cryptography.X509Certificates.OpenFlags.ReadOnly">
      <summary>Open the X.509 certificate store for reading only.</summary>
    </member>
    <member name="F:System.Security.Cryptography.X509Certificates.OpenFlags.ReadWrite">
      <summary>Open the X.509 certificate store for both reading and writing.</summary>
    </member>
    <member name="F:System.Security.Cryptography.X509Certificates.OpenFlags.MaxAllowed">
      <summary>Open the X.509 certificate store for the highest access allowed.</summary>
    </member>
    <member name="F:System.Security.Cryptography.X509Certificates.OpenFlags.OpenExistingOnly">
      <summary>Opens only existing stores; if no store exists, the <see cref="M:System.Security.Cryptography.X509Certificates.X509Store.Open(System.Security.Cryptography.X509Certificates.OpenFlags)" /> method will not create a new store.</summary>
    </member>
    <member name="F:System.Security.Cryptography.X509Certificates.OpenFlags.IncludeArchived">
      <summary>Open the X.509 certificate store and include archived certificates.</summary>
    </member>
    <member name="T:System.Security.Cryptography.X509Certificates.PublicKey">
      <summary>Represents a certificate's public key information. This class cannot be inherited.</summary>
    </member>
    <member name="M:System.Security.Cryptography.X509Certificates.PublicKey.#ctor(System.Security.Cryptography.Oid,System.Security.Cryptography.AsnEncodedData,System.Security.Cryptography.AsnEncodedData)">
      <summary>Initializes a new instance of the <see cref="T:System.Security.Cryptography.X509Certificates.PublicKey" /> class using an object identifier (OID) object of the public key, an ASN.1-encoded representation of the public key parameters, and an ASN.1-encoded representation of the public key value. </summary>
      <param name="oid">An object identifier (OID) object that represents the public key.</param>
      <param name="parameters">An ASN.1-encoded representation of the public key parameters.</param>
      <param name="keyValue">An ASN.1-encoded representation of the public key value.</param>
    </member>
    <member name="P:System.Security.Cryptography.X509Certificates.PublicKey.EncodedKeyValue">
      <summary>Gets the ASN.1-encoded representation of the public key value.</summary>
      <returns>The ASN.1-encoded representation of the public key value.</returns>
    </member>
    <member name="P:System.Security.Cryptography.X509Certificates.PublicKey.EncodedParameters">
      <summary>Gets the ASN.1-encoded representation of the public key parameters.</summary>
      <returns>The ASN.1-encoded representation of the public key parameters.</returns>
    </member>
    <member name="P:System.Security.Cryptography.X509Certificates.PublicKey.Key">
      <summary>Gets an <see cref="T:System.Security.Cryptography.RSACryptoServiceProvider" /> or <see cref="T:System.Security.Cryptography.DSACryptoServiceProvider" /> object representing the public key.</summary>
      <returns>An <see cref="T:System.Security.Cryptography.AsymmetricAlgorithm" /> object representing the public key.</returns>
      <exception cref="T:System.NotSupportedException">The key algorithm is not supported.</exception>
    </member>
    <member name="P:System.Security.Cryptography.X509Certificates.PublicKey.Oid">
      <summary>Gets an object identifier (OID) object of the public key.</summary>
      <returns>An object identifier (OID) object of the public key.</returns>
    </member>
    <member name="T:System.Security.Cryptography.X509Certificates.StoreLocation">
      <summary>Specifies the location of the X.509 certificate store.</summary>
    </member>
    <member name="F:System.Security.Cryptography.X509Certificates.StoreLocation.CurrentUser">
      <summary>The X.509 certificate store used by the current user.</summary>
    </member>
    <member name="F:System.Security.Cryptography.X509Certificates.StoreLocation.LocalMachine">
      <summary>The X.509 certificate store assigned to the local machine.</summary>
    </member>
    <member name="T:System.Security.Cryptography.X509Certificates.StoreName">
      <summary>Specifies the name of the X.509 certificate store to open.</summary>
    </member>
    <member name="F:System.Security.Cryptography.X509Certificates.StoreName.AddressBook">
      <summary>The X.509 certificate store for other users.</summary>
    </member>
    <member name="F:System.Security.Cryptography.X509Certificates.StoreName.AuthRoot">
      <summary>The X.509 certificate store for third-party certificate authorities (CAs).</summary>
    </member>
    <member name="F:System.Security.Cryptography.X509Certificates.StoreName.CertificateAuthority">
      <summary>The X.509 certificate store for intermediate certificate authorities (CAs). </summary>
    </member>
    <member name="F:System.Security.Cryptography.X509Certificates.StoreName.Disallowed">
      <summary>The X.509 certificate store for revoked certificates.</summary>
    </member>
    <member name="F:System.Security.Cryptography.X509Certificates.StoreName.My">
      <summary>The X.509 certificate store for personal certificates.</summary>
    </member>
    <member name="F:System.Security.Cryptography.X509Certificates.StoreName.Root">
      <summary>The X.509 certificate store for trusted root certificate authorities (CAs).</summary>
    </member>
    <member name="F:System.Security.Cryptography.X509Certificates.StoreName.TrustedPeople">
      <summary>The X.509 certificate store for directly trusted people and resources.</summary>
    </member>
    <member name="F:System.Security.Cryptography.X509Certificates.StoreName.TrustedPublisher">
      <summary>The X.509 certificate store for directly trusted publishers.</summary>
    </member>
    <member name="T:System.Security.Cryptography.X509Certificates.X500DistinguishedName">
      <summary>Represents the distinguished name of an X509 certificate. This class cannot be inherited.</summary>
    </member>
    <member name="M:System.Security.Cryptography.X509Certificates.X500DistinguishedName.#ctor(System.Byte[])">
      <summary>Initializes a new instance of the <see cref="T:System.Security.Cryptography.X509Certificates.X500DistinguishedName" /> class using information from the specified byte array.</summary>
      <param name="encodedDistinguishedName">A byte array that contains distinguished name information.</param>
    </member>
    <member name="M:System.Security.Cryptography.X509Certificates.X500DistinguishedName.#ctor(System.Security.Cryptography.AsnEncodedData)">
      <summary>Initializes a new instance of the <see cref="T:System.Security.Cryptography.X509Certificates.X500DistinguishedName" /> class using the specified <see cref="T:System.Security.Cryptography.AsnEncodedData" /> object.</summary>
      <param name="encodedDistinguishedName">An <see cref="T:System.Security.Cryptography.AsnEncodedData" /> object that represents the distinguished name.</param>
    </member>
    <member name="M:System.Security.Cryptography.X509Certificates.X500DistinguishedName.#ctor(System.Security.Cryptography.X509Certificates.X500DistinguishedName)">
      <summary>Initializes a new instance of the <see cref="T:System.Security.Cryptography.X509Certificates.X500DistinguishedName" /> class using the specified <see cref="T:System.Security.Cryptography.X509Certificates.X500DistinguishedName" /> object.</summary>
      <param name="distinguishedName">An <see cref="T:System.Security.Cryptography.X509Certificates.X500DistinguishedName" /> object.</param>
    </member>
    <member name="M:System.Security.Cryptography.X509Certificates.X500DistinguishedName.#ctor(System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.Security.Cryptography.X509Certificates.X500DistinguishedName" /> class using information from the specified string.</summary>
      <param name="distinguishedName">A string that represents the distinguished name.</param>
    </member>
    <member name="M:System.Security.Cryptography.X509Certificates.X500DistinguishedName.#ctor(System.String,System.Security.Cryptography.X509Certificates.X500DistinguishedNameFlags)">
      <summary>Initializes a new instance of the <see cref="T:System.Security.Cryptography.X509Certificates.X500DistinguishedName" /> class using the specified string and <see cref="T:System.Security.Cryptography.X509Certificates.X500DistinguishedNameFlags" /> flag.</summary>
      <param name="distinguishedName">A string that represents the distinguished name.</param>
      <param name="flag">An <see cref="T:System.Security.Cryptography.X509Certificates.X500DistinguishedName" /> object that specifies the characteristics of the distinguished name.</param>
    </member>
    <member name="M:System.Security.Cryptography.X509Certificates.X500DistinguishedName.Decode(System.Security.Cryptography.X509Certificates.X500DistinguishedNameFlags)">
      <summary>Decodes a distinguished name using the characteristics specified by the <paramref name="flag" /> parameter.</summary>
      <returns>The decoded distinguished name.</returns>
      <param name="flag">A flag that specifies the characteristics of the <see cref="T:System.Security.Cryptography.X509Certificates.X500DistinguishedName" /> object.</param>
      <exception cref="T:System.Security.Cryptography.CryptographicException">The certificate has an invalid name.</exception>
    </member>
    <member name="M:System.Security.Cryptography.X509Certificates.X500DistinguishedName.Format(System.Boolean)">
      <summary>Returns a formatted version of an X500 distinguished name for printing or for output to a text window or to a console.</summary>
      <returns>A formatted string that represents the X500 distinguished name.</returns>
      <param name="multiLine">true if the return string should contain carriage returns; otherwise, false.</param>
    </member>
    <member name="P:System.Security.Cryptography.X509Certificates.X500DistinguishedName.Name">
      <summary>Gets the comma-delimited distinguished name from an X500 certificate.</summary>
      <returns>The comma-delimited distinguished name of the X509 certificate.</returns>
    </member>
    <member name="T:System.Security.Cryptography.X509Certificates.X500DistinguishedNameFlags">
      <summary>Specifies characteristics of the X.500 distinguished name.</summary>
    </member>
    <member name="F:System.Security.Cryptography.X509Certificates.X500DistinguishedNameFlags.None">
      <summary>The distinguished name has no special characteristics.</summary>
    </member>
    <member name="F:System.Security.Cryptography.X509Certificates.X500DistinguishedNameFlags.Reversed">
      <summary>The distinguished name is reversed.</summary>
    </member>
    <member name="F:System.Security.Cryptography.X509Certificates.X500DistinguishedNameFlags.UseSemicolons">
      <summary>The distinguished name uses semicolons.</summary>
    </member>
    <member name="F:System.Security.Cryptography.X509Certificates.X500DistinguishedNameFlags.DoNotUsePlusSign">
      <summary>The distinguished name does not use the plus sign.</summary>
    </member>
    <member name="F:System.Security.Cryptography.X509Certificates.X500DistinguishedNameFlags.DoNotUseQuotes">
      <summary>The distinguished name does not use quotation marks.</summary>
    </member>
    <member name="F:System.Security.Cryptography.X509Certificates.X500DistinguishedNameFlags.UseCommas">
      <summary>The distinguished name uses commas.</summary>
    </member>
    <member name="F:System.Security.Cryptography.X509Certificates.X500DistinguishedNameFlags.UseNewLines">
      <summary>The distinguished name uses the new line character.</summary>
    </member>
    <member name="F:System.Security.Cryptography.X509Certificates.X500DistinguishedNameFlags.UseUTF8Encoding">
      <summary>The distinguished name uses UTF8 encoding.</summary>
    </member>
    <member name="F:System.Security.Cryptography.X509Certificates.X500DistinguishedNameFlags.UseT61Encoding">
      <summary>The distinguished name uses T61 encoding.</summary>
    </member>
    <member name="F:System.Security.Cryptography.X509Certificates.X500DistinguishedNameFlags.ForceUTF8Encoding">
      <summary>The distinguished name uses UTF8 encoding.</summary>
    </member>
    <member name="T:System.Security.Cryptography.X509Certificates.X509BasicConstraintsExtension">
      <summary>Defines the constraints set on a certificate. This class cannot be inherited.</summary>
    </member>
    <member name="M:System.Security.Cryptography.X509Certificates.X509BasicConstraintsExtension.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Security.Cryptography.X509Certificates.X509BasicConstraintsExtension" /> class.</summary>
    </member>
    <member name="M:System.Security.Cryptography.X509Certificates.X509BasicConstraintsExtension.#ctor(System.Boolean,System.Boolean,System.Int32,System.Boolean)">
      <summary>Initializes a new instance of the <see cref="T:System.Security.Cryptography.X509Certificates.X509BasicConstraintsExtension" /> class. Parameters specify a value that indicates whether a certificate is a certificate authority (CA) certificate, a value that indicates whether the certificate has a restriction on the number of path levels it allows, the number of levels allowed in a certificate's path, and a value that indicates whether the extension is critical.  </summary>
      <param name="certificateAuthority">true if the certificate is a certificate authority (CA) certificate; otherwise, false.</param>
      <param name="hasPathLengthConstraint">true if the certificate has a restriction on the number of path levels it allows; otherwise, false.</param>
      <param name="pathLengthConstraint">The number of levels allowed in a certificate's path.</param>
      <param name="critical">true if the extension is critical; otherwise, false.</param>
    </member>
    <member name="M:System.Security.Cryptography.X509Certificates.X509BasicConstraintsExtension.#ctor(System.Security.Cryptography.AsnEncodedData,System.Boolean)">
      <summary>Initializes a new instance of the <see cref="T:System.Security.Cryptography.X509Certificates.X509BasicConstraintsExtension" /> class using an <see cref="T:System.Security.Cryptography.AsnEncodedData" /> object and a value that identifies whether the extension is critical. </summary>
      <param name="encodedBasicConstraints">The encoded data to use to create the extension.</param>
      <param name="critical">true if the extension is critical; otherwise, false.</param>
    </member>
    <member name="P:System.Security.Cryptography.X509Certificates.X509BasicConstraintsExtension.CertificateAuthority">
      <summary>Gets a value indicating whether a certificate is a certificate authority (CA) certificate.</summary>
      <returns>true if the certificate is a certificate authority (CA) certificate, otherwise, false.</returns>
    </member>
    <member name="M:System.Security.Cryptography.X509Certificates.X509BasicConstraintsExtension.CopyFrom(System.Security.Cryptography.AsnEncodedData)">
      <summary>Initializes a new instance of the <see cref="T:System.Security.Cryptography.X509Certificates.X509BasicConstraintsExtension" /> class using an <see cref="T:System.Security.Cryptography.AsnEncodedData" /> object.</summary>
      <param name="asnEncodedData">The encoded data to use to create the extension.</param>
    </member>
    <member name="P:System.Security.Cryptography.X509Certificates.X509BasicConstraintsExtension.HasPathLengthConstraint">
      <summary>Gets a value indicating whether a certificate has a restriction on the number of path levels it allows.</summary>
      <returns>true if the certificate has a restriction on the number of path levels it allows, otherwise, false.</returns>
      <exception cref="T:System.Security.Cryptography.CryptographicException">The extension cannot be decoded. </exception>
    </member>
    <member name="P:System.Security.Cryptography.X509Certificates.X509BasicConstraintsExtension.PathLengthConstraint">
      <summary>Gets the number of levels allowed in a certificate's path.</summary>
      <returns>An integer indicating the number of levels allowed in a certificate's path.</returns>
      <exception cref="T:System.Security.Cryptography.CryptographicException">The extension cannot be decoded. </exception>
    </member>
    <member name="T:System.Security.Cryptography.X509Certificates.X509Certificate2">
      <summary>Represents an X.509 certificate.  </summary>
    </member>
    <member name="M:System.Security.Cryptography.X509Certificates.X509Certificate2.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2" /> class.</summary>
    </member>
    <member name="M:System.Security.Cryptography.X509Certificates.X509Certificate2.#ctor(System.Byte[])">
      <summary>Initializes a new instance of the <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2" /> class using information from a byte array.</summary>
      <param name="rawData">A byte array containing data from an X.509 certificate. </param>
      <exception cref="T:System.Security.Cryptography.CryptographicException">An error with the certificate occurs. For example:The certificate file does not exist.The certificate is invalid.The certificate's password is incorrect.</exception>
    </member>
    <member name="M:System.Security.Cryptography.X509Certificates.X509Certificate2.#ctor(System.Byte[],System.Security.SecureString)">
      <summary>Initializes a new instance of the <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2" /> class using a byte array and a password.</summary>
      <param name="rawData">A byte array that contains data from an X.509 certificate. </param>
      <param name="password">The password required to access the X.509 certificate data. </param>
      <exception cref="T:System.Security.Cryptography.CryptographicException">An error with the certificate occurs. For example:The certificate file does not exist.The certificate is invalid.The certificate's password is incorrect.</exception>
    </member>
    <member name="M:System.Security.Cryptography.X509Certificates.X509Certificate2.#ctor(System.Byte[],System.Security.SecureString,System.Security.Cryptography.X509Certificates.X509KeyStorageFlags)">
      <summary>Initializes a new instance of the <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2" /> class using a byte array, a password, and a key storage flag.</summary>
      <param name="rawData">A byte array that contains data from an X.509 certificate. </param>
      <param name="password">The password required to access the X.509 certificate data. </param>
      <param name="keyStorageFlags">One of the <see cref="T:System.Security.Cryptography.X509Certificates.X509KeyStorageFlags" /> values that controls where and how to import the private key. </param>
      <exception cref="T:System.Security.Cryptography.CryptographicException">An error with the certificate occurs. For example:The certificate file does not exist.The certificate is invalid.The certificate's password is incorrect.</exception>
    </member>
    <member name="M:System.Security.Cryptography.X509Certificates.X509Certificate2.#ctor(System.Byte[],System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2" /> class using a byte array and a password.</summary>
      <param name="rawData">A byte array containing data from an X.509 certificate. </param>
      <param name="password">The password required to access the X.509 certificate data. </param>
      <exception cref="T:System.Security.Cryptography.CryptographicException">An error with the certificate occurs. For example:The certificate file does not exist.The certificate is invalid.The certificate's password is incorrect.</exception>
    </member>
    <member name="M:System.Security.Cryptography.X509Certificates.X509Certificate2.#ctor(System.Byte[],System.String,System.Security.Cryptography.X509Certificates.X509KeyStorageFlags)">
      <summary>Initializes a new instance of the <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2" /> class using a byte array, a password, and a key storage flag.</summary>
      <param name="rawData">A byte array containing data from an X.509 certificate. </param>
      <param name="password">The password required to access the X.509 certificate data. </param>
      <param name="keyStorageFlags">One of the <see cref="T:System.Security.Cryptography.X509Certificates.X509KeyStorageFlags" /> values. </param>
      <exception cref="T:System.Security.Cryptography.CryptographicException">An error with the certificate occurs. For example:The certificate file does not exist.The certificate is invalid.The certificate's password is incorrect.</exception>
    </member>
    <member name="M:System.Security.Cryptography.X509Certificates.X509Certificate2.#ctor(System.IntPtr)">
      <summary>Initializes a new instance of the <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2" /> class using an unmanaged handle.</summary>
      <param name="handle">A pointer to a certificate context in unmanaged code. The C structure is called PCCERT_CONTEXT.</param>
      <exception cref="T:System.Security.Cryptography.CryptographicException">An error with the certificate occurs. For example:The certificate file does not exist.The certificate is invalid.The certificate's password is incorrect.</exception>
    </member>
    <member name="M:System.Security.Cryptography.X509Certificates.X509Certificate2.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Initializes a new instance of the <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2" /> class using the specified serialization and stream context information. </summary>
      <param name="info">The serialization information required to deserialize the new <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2" />.</param>
      <param name="context">Contextual information about the source of the stream to be deserialized.</param>
    </member>
    <member name="M:System.Security.Cryptography.X509Certificates.X509Certificate2.#ctor(System.Security.Cryptography.X509Certificates.X509Certificate)">
      <summary>Initializes a new instance of the <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2" /> class using an <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate" /> object.</summary>
      <param name="certificate">An <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate" /> object.</param>
      <exception cref="T:System.Security.Cryptography.CryptographicException">An error with the certificate occurs. For example:The certificate file does not exist.The certificate is invalid.The certificate's password is incorrect.</exception>
    </member>
    <member name="M:System.Security.Cryptography.X509Certificates.X509Certificate2.#ctor(System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2" /> class using a certificate file name.</summary>
      <param name="fileName">The name of a certificate file. </param>
      <exception cref="T:System.Security.Cryptography.CryptographicException">An error with the certificate occurs. For example:The certificate file does not exist.The certificate is invalid.The certificate's password is incorrect.</exception>
    </member>
    <member name="M:System.Security.Cryptography.X509Certificates.X509Certificate2.#ctor(System.String,System.Security.SecureString)">
      <summary>Initializes a new instance of the <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2" /> class using a certificate file name and a password.</summary>
      <param name="fileName">The name of a certificate file. </param>
      <param name="password">The password required to access the X.509 certificate data. </param>
      <exception cref="T:System.Security.Cryptography.CryptographicException">An error with the certificate occurs. For example:The certificate file does not exist.The certificate is invalid.The certificate's password is incorrect.</exception>
    </member>
    <member name="M:System.Security.Cryptography.X509Certificates.X509Certificate2.#ctor(System.String,System.Security.SecureString,System.Security.Cryptography.X509Certificates.X509KeyStorageFlags)">
      <summary>Initializes a new instance of the <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2" /> class using a certificate file name, a password, and a key storage flag.</summary>
      <param name="fileName">The name of a certificate file. </param>
      <param name="password">The password required to access the X.509 certificate data. </param>
      <param name="keyStorageFlags">One of the <see cref="T:System.Security.Cryptography.X509Certificates.X509KeyStorageFlags" /> values that controls where and how to import the private key.. </param>
      <exception cref="T:System.Security.Cryptography.CryptographicException">An error with the certificate occurs. For example:The certificate file does not exist.The certificate is invalid.The certificate's password is incorrect.</exception>
    </member>
    <member name="M:System.Security.Cryptography.X509Certificates.X509Certificate2.#ctor(System.String,System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2" /> class using a certificate file name and a password used to access the certificate.</summary>
      <param name="fileName">The name of a certificate file. </param>
      <param name="password">The password required to access the X.509 certificate data. </param>
      <exception cref="T:System.Security.Cryptography.CryptographicException">An error with the certificate occurs. For example:The certificate file does not exist.The certificate is invalid.The certificate's password is incorrect.</exception>
    </member>
    <member name="M:System.Security.Cryptography.X509Certificates.X509Certificate2.#ctor(System.String,System.String,System.Security.Cryptography.X509Certificates.X509KeyStorageFlags)">
      <summary>Initializes a new instance of the <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2" /> class using a certificate file name, a password used to access the certificate, and a key storage flag.</summary>
      <param name="fileName">The name of a certificate file. </param>
      <param name="password">The password required to access the X.509 certificate data. </param>
      <param name="keyStorageFlags">One of the <see cref="T:System.Security.Cryptography.X509Certificates.X509KeyStorageFlags" /> values. </param>
      <exception cref="T:System.Security.Cryptography.CryptographicException">An error with the certificate occurs. For example:The certificate file does not exist.The certificate is invalid.The certificate's password is incorrect.</exception>
    </member>
    <member name="P:System.Security.Cryptography.X509Certificates.X509Certificate2.Archived">
      <summary>Gets or sets a value indicating that an X.509 certificate is archived.</summary>
      <returns>true if the certificate is archived, false if the certificate is not archived.</returns>
      <exception cref="T:System.Security.Cryptography.CryptographicException">The certificate is unreadable. </exception>
    </member>
    <member name="P:System.Security.Cryptography.X509Certificates.X509Certificate2.Extensions">
      <summary>Gets a collection of <see cref="T:System.Security.Cryptography.X509Certificates.X509Extension" /> objects.</summary>
      <returns>An <see cref="T:System.Security.Cryptography.X509Certificates.X509ExtensionCollection" /> object.</returns>
      <exception cref="T:System.Security.Cryptography.CryptographicException">The certificate is unreadable. </exception>
    </member>
    <member name="P:System.Security.Cryptography.X509Certificates.X509Certificate2.FriendlyName">
      <summary>Gets or sets the associated alias for a certificate.</summary>
      <returns>The certificate's friendly name.</returns>
      <exception cref="T:System.Security.Cryptography.CryptographicException">The certificate is unreadable. </exception>
    </member>
    <member name="M:System.Security.Cryptography.X509Certificates.X509Certificate2.GetCertContentType(System.Byte[])">
      <summary>Indicates the type of certificate contained in a byte array.</summary>
      <returns>An <see cref="T:System.Security.Cryptography.X509Certificates.X509ContentType" /> object.</returns>
      <param name="rawData">A byte array containing data from an X.509 certificate. </param>
      <exception cref="T:System.ArgumentException">
        <paramref name="rawData" /> has a zero length or is null. </exception>
    </member>
    <member name="M:System.Security.Cryptography.X509Certificates.X509Certificate2.GetCertContentType(System.String)">
      <summary>Indicates the type of certificate contained in a file.</summary>
      <returns>An <see cref="T:System.Security.Cryptography.X509Certificates.X509ContentType" /> object.</returns>
      <param name="fileName">The name of a certificate file. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="fileName" /> is null.</exception>
    </member>
    <member name="M:System.Security.Cryptography.X509Certificates.X509Certificate2.GetNameInfo(System.Security.Cryptography.X509Certificates.X509NameType,System.Boolean)">
      <summary>Gets the subject and issuer names from a certificate.</summary>
      <returns>The name of the certificate.</returns>
      <param name="nameType">The <see cref="T:System.Security.Cryptography.X509Certificates.X509NameType" /> value for the subject. </param>
      <param name="forIssuer">true to include the issuer name; otherwise, false. </param>
    </member>
    <member name="P:System.Security.Cryptography.X509Certificates.X509Certificate2.HasPrivateKey">
      <summary>Gets a value that indicates whether an <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2" /> object contains a private key. </summary>
      <returns>true if the <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2" /> object contains a private key; otherwise, false. </returns>
      <exception cref="T:System.Security.Cryptography.CryptographicException">The certificate context is invalid.</exception>
    </member>
    <member name="M:System.Security.Cryptography.X509Certificates.X509Certificate2.Import(System.Byte[])">
      <summary>Populates an <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2" /> object with data from a byte array.</summary>
      <param name="rawData">A byte array containing data from an X.509 certificate. </param>
    </member>
    <member name="M:System.Security.Cryptography.X509Certificates.X509Certificate2.Import(System.Byte[],System.Security.SecureString,System.Security.Cryptography.X509Certificates.X509KeyStorageFlags)">
      <summary>Populates an <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2" /> object using data from a byte array, a password, and a key storage flag.</summary>
      <param name="rawData">A byte array that contains data from an X.509 certificate. </param>
      <param name="password">The password required to access the X.509 certificate data. </param>
      <param name="keyStorageFlags">One of the <see cref="T:System.Security.Cryptography.X509Certificates.X509KeyStorageFlags" /> values that controls where and how to import the private key. </param>
    </member>
    <member name="M:System.Security.Cryptography.X509Certificates.X509Certificate2.Import(System.Byte[],System.String,System.Security.Cryptography.X509Certificates.X509KeyStorageFlags)">
      <summary>Populates an <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2" /> object using data from a byte array, a password, and flags for determining how to import the private key.</summary>
      <param name="rawData">A byte array containing data from an X.509 certificate. </param>
      <param name="password">The password required to access the X.509 certificate data. </param>
      <param name="keyStorageFlags">One of the <see cref="T:System.Security.Cryptography.X509Certificates.X509KeyStorageFlags" /> values used to control where and how to import the private key. </param>
    </member>
    <member name="M:System.Security.Cryptography.X509Certificates.X509Certificate2.Import(System.String)">
      <summary>Populates an <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2" /> object with information from a certificate file.</summary>
      <param name="fileName">The name of a certificate. </param>
    </member>
    <member name="M:System.Security.Cryptography.X509Certificates.X509Certificate2.Import(System.String,System.Security.SecureString,System.Security.Cryptography.X509Certificates.X509KeyStorageFlags)">
      <summary>Populates an <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2" /> object with information from a certificate file, a password, and a key storage flag.</summary>
      <param name="fileName">The name of a certificate file. </param>
      <param name="password">The password required to access the X.509 certificate data. </param>
      <param name="keyStorageFlags">One of the <see cref="T:System.Security.Cryptography.X509Certificates.X509KeyStorageFlags" /> values that controls where and how to import the private key. </param>
    </member>
    <member name="M:System.Security.Cryptography.X509Certificates.X509Certificate2.Import(System.String,System.String,System.Security.Cryptography.X509Certificates.X509KeyStorageFlags)">
      <summary>Populates an <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2" /> object with information from a certificate file, a password, and a <see cref="T:System.Security.Cryptography.X509Certificates.X509KeyStorageFlags" /> value.</summary>
      <param name="fileName">The name of a certificate file. </param>
      <param name="password">The password required to access the X.509 certificate data. </param>
      <param name="keyStorageFlags">One of the <see cref="T:System.Security.Cryptography.X509Certificates.X509KeyStorageFlags" /> values used to control where and how to import the private key. </param>
    </member>
    <member name="P:System.Security.Cryptography.X509Certificates.X509Certificate2.IssuerName">
      <summary>Gets the distinguished name of the certificate issuer.</summary>
      <returns>An <see cref="T:System.Security.Cryptography.X509Certificates.X500DistinguishedName" /> object that contains the name of the certificate issuer.</returns>
      <exception cref="T:System.Security.Cryptography.CryptographicException">The certificate context is invalid.</exception>
    </member>
    <member name="P:System.Security.Cryptography.X509Certificates.X509Certificate2.NotAfter">
      <summary>Gets the date in local time after which a certificate is no longer valid.</summary>
      <returns>A <see cref="T:System.DateTime" /> object that represents the expiration date for the certificate .</returns>
      <exception cref="T:System.Security.Cryptography.CryptographicException">The certificate is unreadable. </exception>
    </member>
    <member name="P:System.Security.Cryptography.X509Certificates.X509Certificate2.NotBefore">
      <summary>Gets the date in local time on which a certificate becomes valid.</summary>
      <returns>A <see cref="T:System.DateTime" /> object that represents the effective date of the certificate.</returns>
      <exception cref="T:System.Security.Cryptography.CryptographicException">The certificate is unreadable. </exception>
    </member>
    <member name="P:System.Security.Cryptography.X509Certificates.X509Certificate2.PrivateKey">
      <summary>Gets or sets the <see cref="T:System.Security.Cryptography.AsymmetricAlgorithm" /> object that represents the private key associated with a certificate.</summary>
      <returns>An <see cref="T:System.Security.Cryptography.AsymmetricAlgorithm" /> object, which is either an RSA or DSA cryptographic service provider.</returns>
      <exception cref="T:System.Security.Cryptography.CryptographicException">The key value is not an RSA or DSA key, or the key is unreadable. </exception>
      <exception cref="T:System.ArgumentNullException">The value being set for this property is null.</exception>
      <exception cref="T:System.NotSupportedException">The key algorithm for this private key is not supported.</exception>
      <exception cref="T:System.Security.Cryptography.CryptographicUnexpectedOperationException">The X.509 keys do not match.</exception>
      <exception cref="T:System.ArgumentException">The cryptographic service provider key is null.</exception>
    </member>
    <member name="P:System.Security.Cryptography.X509Certificates.X509Certificate2.PublicKey">
      <summary>Gets a <see cref="P:System.Security.Cryptography.X509Certificates.X509Certificate2.PublicKey" /> object associated with a certificate.</summary>
      <returns>A <see cref="P:System.Security.Cryptography.X509Certificates.X509Certificate2.PublicKey" /> object.</returns>
      <exception cref="T:System.Security.Cryptography.CryptographicException">The key value is not an RSA or DSA key, or the key is unreadable. </exception>
    </member>
    <member name="P:System.Security.Cryptography.X509Certificates.X509Certificate2.RawData">
      <summary>Gets the raw data of a certificate.</summary>
      <returns>The raw data of the certificate as a byte array.</returns>
    </member>
    <member name="M:System.Security.Cryptography.X509Certificates.X509Certificate2.Reset">
      <summary>Resets the state of an <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2" /> object.</summary>
    </member>
    <member name="P:System.Security.Cryptography.X509Certificates.X509Certificate2.SerialNumber">
      <summary>Gets the serial number of a certificate.</summary>
      <returns>The serial number of the certificate.</returns>
    </member>
    <member name="P:System.Security.Cryptography.X509Certificates.X509Certificate2.SignatureAlgorithm">
      <summary>Gets the algorithm used to create the signature of a certificate.</summary>
      <returns>Returns the object identifier (<see cref="T:System.Security.Cryptography.Oid" />) of the signature algorithm.</returns>
      <exception cref="T:System.Security.Cryptography.CryptographicException">The certificate is unreadable. </exception>
    </member>
    <member name="P:System.Security.Cryptography.X509Certificates.X509Certificate2.SubjectName">
      <summary>Gets the subject distinguished name from a certificate.</summary>
      <returns>An <see cref="T:System.Security.Cryptography.X509Certificates.X500DistinguishedName" /> object that represents the name of the certificate subject.</returns>
      <exception cref="T:System.Security.Cryptography.CryptographicException">The certificate context is invalid.</exception>
    </member>
    <member name="P:System.Security.Cryptography.X509Certificates.X509Certificate2.Thumbprint">
      <summary>Gets the thumbprint of a certificate.</summary>
      <returns>The thumbprint of the certificate.</returns>
    </member>
    <member name="M:System.Security.Cryptography.X509Certificates.X509Certificate2.ToString">
      <summary>Displays an X.509 certificate in text format.</summary>
      <returns>The certificate information.</returns>
    </member>
    <member name="M:System.Security.Cryptography.X509Certificates.X509Certificate2.ToString(System.Boolean)">
      <summary>Displays an X.509 certificate in text format.</summary>
      <returns>The certificate information.</returns>
      <param name="verbose">true to display the public key, private key, extensions, and so forth; false to display information that is similar to the <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2" /> class, including thumbprint, serial number, subject and issuer names, and so on. </param>
    </member>
    <member name="M:System.Security.Cryptography.X509Certificates.X509Certificate2.Verify">
      <summary>Performs a X.509 chain validation using basic validation policy.</summary>
      <returns>true if the validation succeeds; false if the validation fails.</returns>
      <exception cref="T:System.Security.Cryptography.CryptographicException">The certificate is unreadable. </exception>
    </member>
    <member name="P:System.Security.Cryptography.X509Certificates.X509Certificate2.Version">
      <summary>Gets the X.509 format version of a certificate.</summary>
      <returns>The certificate format.</returns>
      <exception cref="T:System.Security.Cryptography.CryptographicException">The certificate is unreadable. </exception>
    </member>
    <member name="T:System.Security.Cryptography.X509Certificates.X509Certificate2Collection">
      <summary>Represents a collection of <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2" /> objects. This class cannot be inherited.</summary>
    </member>
    <member name="M:System.Security.Cryptography.X509Certificates.X509Certificate2Collection.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2Collection" /> class without any <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2" /> information.</summary>
    </member>
    <member name="M:System.Security.Cryptography.X509Certificates.X509Certificate2Collection.#ctor(System.Security.Cryptography.X509Certificates.X509Certificate2)">
      <summary>Initializes a new instance of the <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2Collection" /> class using an <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2" /> object.</summary>
      <param name="certificate">An <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2" /> object to start the collection from.</param>
    </member>
    <member name="M:System.Security.Cryptography.X509Certificates.X509Certificate2Collection.#ctor(System.Security.Cryptography.X509Certificates.X509Certificate2[])">
      <summary>Initializes a new instance of the <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2Collection" /> class using an array of <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2" /> objects.</summary>
      <param name="certificates">An array of <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2" /> objects. </param>
    </member>
    <member name="M:System.Security.Cryptography.X509Certificates.X509Certificate2Collection.#ctor(System.Security.Cryptography.X509Certificates.X509Certificate2Collection)">
      <summary>Initializes a new instance of the <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2Collection" /> class using the specified certificate collection.</summary>
      <param name="certificates">An <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2Collection" /> object. </param>
    </member>
    <member name="M:System.Security.Cryptography.X509Certificates.X509Certificate2Collection.Add(System.Security.Cryptography.X509Certificates.X509Certificate2)">
      <summary>Adds an object to the end of the <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2Collection" />.</summary>
      <returns>The <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2Collection" /> index at which the <paramref name="certificate" /> has been added.</returns>
      <param name="certificate">An X.509 certificate represented as an <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2" /> object. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="certificate" /> is null. </exception>
    </member>
    <member name="M:System.Security.Cryptography.X509Certificates.X509Certificate2Collection.AddRange(System.Security.Cryptography.X509Certificates.X509Certificate2[])">
      <summary>Adds multiple <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2" /> objects in an array to the <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2Collection" /> object.</summary>
      <param name="certificates">An array of <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2" /> objects. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="certificates" /> is null. </exception>
    </member>
    <member name="M:System.Security.Cryptography.X509Certificates.X509Certificate2Collection.AddRange(System.Security.Cryptography.X509Certificates.X509Certificate2Collection)">
      <summary>Adds multiple <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2" /> objects in an <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2Collection" /> object to another <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2Collection" /> object.</summary>
      <param name="certificates">An <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2Collection" /> object. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="certificates" /> is null. </exception>
    </member>
    <member name="M:System.Security.Cryptography.X509Certificates.X509Certificate2Collection.Contains(System.Security.Cryptography.X509Certificates.X509Certificate2)">
      <summary>Determines whether the <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2Collection" /> object contains a specific certificate.</summary>
      <returns>true if the <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2Collection" /> contains the specified <paramref name="certificate" />; otherwise, false.</returns>
      <param name="certificate">The <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2" /> object to locate in the collection. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="certificate" /> is null. </exception>
    </member>
    <member name="M:System.Security.Cryptography.X509Certificates.X509Certificate2Collection.Export(System.Security.Cryptography.X509Certificates.X509ContentType)">
      <summary>Exports X.509 certificate information into a byte array.</summary>
      <returns>X.509 certificate information in a byte array.</returns>
      <param name="contentType">A supported <see cref="T:System.Security.Cryptography.X509Certificates.X509ContentType" /> object. </param>
    </member>
    <member name="M:System.Security.Cryptography.X509Certificates.X509Certificate2Collection.Export(System.Security.Cryptography.X509Certificates.X509ContentType,System.String)">
      <summary>Exports X.509 certificate information into a byte array using a password.</summary>
      <returns>X.509 certificate information in a byte array.</returns>
      <param name="contentType">A supported <see cref="T:System.Security.Cryptography.X509Certificates.X509ContentType" /> object. </param>
      <param name="password">A string used to protect the byte array. </param>
      <exception cref="T:System.Security.Cryptography.CryptographicException">The certificate is unreadable, the content is invalid or, in the case of a certificate requiring a password, the private key could not be exported because the password provided was incorrect. </exception>
    </member>
    <member name="M:System.Security.Cryptography.X509Certificates.X509Certificate2Collection.Find(System.Security.Cryptography.X509Certificates.X509FindType,System.Object,System.Boolean)">
      <summary>Searches an <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2Collection" /> object using the search criteria specified by the <see cref="T:System.Security.Cryptography.X509Certificates.X509FindType" /> enumeration and the <paramref name="findValue" /> object.</summary>
      <returns>An <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2Collection" /> object.</returns>
      <param name="findType">One of the <see cref="T:System.Security.Cryptography.X509Certificates.X509FindType" />  values. </param>
      <param name="findValue">The search criteria as an object. </param>
      <param name="validOnly">true to allow only valid certificates to be returned from the search; otherwise, false. </param>
      <exception cref="T:System.Security.Cryptography.CryptographicException">
        <paramref name="findType" /> is invalid. </exception>
    </member>
    <member name="M:System.Security.Cryptography.X509Certificates.X509Certificate2Collection.GetEnumerator">
      <summary>Returns an enumerator that can iterate through a <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2Collection" /> object.</summary>
      <returns>An <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2Enumerator" /> object that can iterate through the <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2Collection" /> object.</returns>
    </member>
    <member name="M:System.Security.Cryptography.X509Certificates.X509Certificate2Collection.Import(System.Byte[])">
      <summary>Imports a certificate in the form of a byte array into a <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2Collection" /> object.</summary>
      <param name="rawData">A byte array containing data from an X.509 certificate. </param>
    </member>
    <member name="M:System.Security.Cryptography.X509Certificates.X509Certificate2Collection.Import(System.Byte[],System.String,System.Security.Cryptography.X509Certificates.X509KeyStorageFlags)">
      <summary>Imports a certificate, in the form of a byte array that requires a password to access the certificate, into a <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2Collection" /> object.</summary>
      <param name="rawData">A byte array containing data from an <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2" /> object. </param>
      <param name="password">The password required to access the certificate information. </param>
      <param name="keyStorageFlags">One of the <see cref="T:System.Security.Cryptography.X509Certificates.X509KeyStorageFlags" /> values that controls how and where the private key is imported. </param>
    </member>
    <member name="M:System.Security.Cryptography.X509Certificates.X509Certificate2Collection.Import(System.String)">
      <summary>Imports a certificate file into a <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2Collection" /> object.</summary>
      <param name="fileName">The name of the file containing the certificate information. </param>
    </member>
    <member name="M:System.Security.Cryptography.X509Certificates.X509Certificate2Collection.Import(System.String,System.String,System.Security.Cryptography.X509Certificates.X509KeyStorageFlags)">
      <summary>Imports a certificate file that requires a password into a <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2Collection" /> object.</summary>
      <param name="fileName">The name of the file containing the certificate information. </param>
      <param name="password">The password required to access the certificate information. </param>
      <param name="keyStorageFlags">One of the <see cref="T:System.Security.Cryptography.X509Certificates.X509KeyStorageFlags" /> values that controls how and where the private key is imported. </param>
    </member>
    <member name="M:System.Security.Cryptography.X509Certificates.X509Certificate2Collection.Insert(System.Int32,System.Security.Cryptography.X509Certificates.X509Certificate2)">
      <summary>Inserts an object into the <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2Collection" /> object at the specified index.</summary>
      <param name="index">The zero-based index at which to insert <paramref name="certificate" />. </param>
      <param name="certificate">The <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2" /> object to insert. </param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> is less than zero.-or- <paramref name="index" /> is greater than the <see cref="P:System.Collections.CollectionBase.Count" /> property. </exception>
      <exception cref="T:System.NotSupportedException">The collection is read-only.-or- The collection has a fixed size. </exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="certificate" /> is null. </exception>
    </member>
    <member name="P:System.Security.Cryptography.X509Certificates.X509Certificate2Collection.Item(System.Int32)">
      <summary>Gets or sets the element at the specified index.</summary>
      <returns>The element at the specified index.</returns>
      <param name="index">The zero-based index of the element to get or set. </param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> is less than zero.-or- <paramref name="index" /> is equal to or greater than the <see cref="P:System.Collections.CollectionBase.Count" /> property. </exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="index" /> is null. </exception>
    </member>
    <member name="M:System.Security.Cryptography.X509Certificates.X509Certificate2Collection.Remove(System.Security.Cryptography.X509Certificates.X509Certificate2)">
      <summary>Removes the first occurrence of a certificate from the <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2Collection" /> object.</summary>
      <param name="certificate">The <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2" /> object to be removed from the <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2Collection" /> object. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="certificate" /> is null. </exception>
    </member>
    <member name="M:System.Security.Cryptography.X509Certificates.X509Certificate2Collection.RemoveRange(System.Security.Cryptography.X509Certificates.X509Certificate2[])">
      <summary>Removes multiple <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2" /> objects in an array from an <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2Collection" /> object.</summary>
      <param name="certificates">An array of <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2" /> objects. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="certificates" /> is null. </exception>
    </member>
    <member name="M:System.Security.Cryptography.X509Certificates.X509Certificate2Collection.RemoveRange(System.Security.Cryptography.X509Certificates.X509Certificate2Collection)">
      <summary>Removes multiple <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2" /> objects in an <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2Collection" /> object from another <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2Collection" /> object.</summary>
      <param name="certificates">An <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2Collection" /> object. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="certificates" /> is null. </exception>
    </member>
    <member name="T:System.Security.Cryptography.X509Certificates.X509Certificate2Enumerator">
      <summary>Supports a simple iteration over a <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2Collection" /> object. This class cannot be inherited.</summary>
    </member>
    <member name="P:System.Security.Cryptography.X509Certificates.X509Certificate2Enumerator.Current">
      <summary>Gets the current element in the <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2Collection" /> object.</summary>
      <returns>The current element in the <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2Collection" /> object.</returns>
      <exception cref="T:System.InvalidOperationException">The enumerator is positioned before the first element of the collection or after the last element. </exception>
    </member>
    <member name="M:System.Security.Cryptography.X509Certificates.X509Certificate2Enumerator.MoveNext">
      <summary>Advances the enumerator to the next element in the <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2Collection" /> object.</summary>
      <returns>true if the enumerator was successfully advanced to the next element; false if the enumerator has passed the end of the collection.</returns>
      <exception cref="T:System.InvalidOperationException">The collection was modified after the enumerator was created. </exception>
    </member>
    <member name="M:System.Security.Cryptography.X509Certificates.X509Certificate2Enumerator.Reset">
      <summary>Sets the enumerator to its initial position, which is before the first element in the <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2Collection" /> object.</summary>
      <exception cref="T:System.InvalidOperationException">The collection was modified after the enumerator was created. </exception>
    </member>
    <member name="P:System.Security.Cryptography.X509Certificates.X509Certificate2Enumerator.System#Collections#IEnumerator#Current">
      <summary>For a description of this member, see <see cref="P:System.Collections.IEnumerator.Current" />.</summary>
      <returns>The current element in the <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2Collection" /> object.</returns>
      <exception cref="T:System.InvalidOperationException">The enumerator is positioned before the first element of the collection or after the last element. </exception>
    </member>
    <member name="M:System.Security.Cryptography.X509Certificates.X509Certificate2Enumerator.System#Collections#IEnumerator#MoveNext">
      <summary>For a description of this member, see <see cref="M:System.Collections.IEnumerator.MoveNext" />.</summary>
      <returns>true if the enumerator was successfully advanced to the next element; false if the enumerator has passed the end of the collection.</returns>
      <exception cref="T:System.InvalidOperationException">The collection was modified after the enumerator was created. </exception>
    </member>
    <member name="M:System.Security.Cryptography.X509Certificates.X509Certificate2Enumerator.System#Collections#IEnumerator#Reset">
      <summary>For a description of this member, see <see cref="M:System.Collections.IEnumerator.Reset" />.</summary>
      <exception cref="T:System.InvalidOperationException">The collection was modified after the enumerator was created. </exception>
    </member>
    <member name="T:System.Security.Cryptography.X509Certificates.X509CertificateCollection">
      <summary>Defines a collection that stores <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate" /> objects.</summary>
    </member>
    <member name="M:System.Security.Cryptography.X509Certificates.X509CertificateCollection.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Security.Cryptography.X509Certificates.X509CertificateCollection" /> class.</summary>
    </member>
    <member name="M:System.Security.Cryptography.X509Certificates.X509CertificateCollection.#ctor(System.Security.Cryptography.X509Certificates.X509Certificate[])">
      <summary>Initializes a new instance of the <see cref="T:System.Security.Cryptography.X509Certificates.X509CertificateCollection" /> class from an array of <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate" /> objects.</summary>
      <param name="value">The array of <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate" /> objects with which to initialize the new object. </param>
    </member>
    <member name="M:System.Security.Cryptography.X509Certificates.X509CertificateCollection.#ctor(System.Security.Cryptography.X509Certificates.X509CertificateCollection)">
      <summary>Initializes a new instance of the <see cref="T:System.Security.Cryptography.X509Certificates.X509CertificateCollection" /> class from another <see cref="T:System.Security.Cryptography.X509Certificates.X509CertificateCollection" />.</summary>
      <param name="value">The <see cref="T:System.Security.Cryptography.X509Certificates.X509CertificateCollection" /> with which to initialize the new object. </param>
    </member>
    <member name="M:System.Security.Cryptography.X509Certificates.X509CertificateCollection.Add(System.Security.Cryptography.X509Certificates.X509Certificate)">
      <summary>Adds an <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate" /> with the specified value to the current <see cref="T:System.Security.Cryptography.X509Certificates.X509CertificateCollection" />.</summary>
      <returns>The index into the current <see cref="T:System.Security.Cryptography.X509Certificates.X509CertificateCollection" /> at which the new <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate" /> was inserted.</returns>
      <param name="value">The <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate" /> to add to the current <see cref="T:System.Security.Cryptography.X509Certificates.X509CertificateCollection" />. </param>
    </member>
    <member name="M:System.Security.Cryptography.X509Certificates.X509CertificateCollection.AddRange(System.Security.Cryptography.X509Certificates.X509Certificate[])">
      <summary>Copies the elements of an array of type <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate" /> to the end of the current <see cref="T:System.Security.Cryptography.X509Certificates.X509CertificateCollection" />.</summary>
      <param name="value">The array of type <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate" /> containing the objects to add to the current <see cref="T:System.Security.Cryptography.X509Certificates.X509CertificateCollection" />. </param>
      <exception cref="T:System.ArgumentNullException">The <paramref name="value" /> parameter is null. </exception>
    </member>
    <member name="M:System.Security.Cryptography.X509Certificates.X509CertificateCollection.AddRange(System.Security.Cryptography.X509Certificates.X509CertificateCollection)">
      <summary>Copies the elements of the specified <see cref="T:System.Security.Cryptography.X509Certificates.X509CertificateCollection" /> to the end of the current <see cref="T:System.Security.Cryptography.X509Certificates.X509CertificateCollection" />.</summary>
      <param name="value">The <see cref="T:System.Security.Cryptography.X509Certificates.X509CertificateCollection" /> containing the objects to add to the collection. </param>
      <exception cref="T:System.ArgumentNullException">The <paramref name="value" /> parameter is null. </exception>
    </member>
    <member name="M:System.Security.Cryptography.X509Certificates.X509CertificateCollection.Contains(System.Security.Cryptography.X509Certificates.X509Certificate)">
      <summary>Gets a value indicating whether the current <see cref="T:System.Security.Cryptography.X509Certificates.X509CertificateCollection" /> contains the specified <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate" />.</summary>
      <returns>true if the <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate" /> is contained in this collection; otherwise, false.</returns>
      <param name="value">The <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate" /> to locate. </param>
    </member>
    <member name="M:System.Security.Cryptography.X509Certificates.X509CertificateCollection.CopyTo(System.Security.Cryptography.X509Certificates.X509Certificate[],System.Int32)">
      <summary>Copies the <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate" /> values in the current <see cref="T:System.Security.Cryptography.X509Certificates.X509CertificateCollection" /> to a one-dimensional <see cref="T:System.Array" /> instance at the specified index.</summary>
      <param name="array">The one-dimensional <see cref="T:System.Array" /> that is the destination of the values copied from <see cref="T:System.Security.Cryptography.X509Certificates.X509CertificateCollection" />. </param>
      <param name="index">The index into <paramref name="array" /> to begin copying. </param>
      <exception cref="T:System.ArgumentException">The <paramref name="array" /> parameter is multidimensional.-or- The number of elements in the <see cref="T:System.Security.Cryptography.X509Certificates.X509CertificateCollection" /> is greater than the available space between <paramref name="arrayIndex" /> and the end of <paramref name="array" />. </exception>
      <exception cref="T:System.ArgumentNullException">The <paramref name="array" /> parameter is null. </exception>
      <exception cref="T:System.ArgumentOutOfRangeException">The <paramref name="arrayIndex" /> parameter is less than the <paramref name="array" /> parameter's lower bound. </exception>
    </member>
    <member name="M:System.Security.Cryptography.X509Certificates.X509CertificateCollection.GetEnumerator">
      <summary>Returns an enumerator that can iterate through the <see cref="T:System.Security.Cryptography.X509Certificates.X509CertificateCollection" />.</summary>
      <returns>An enumerator of the subelements of <see cref="T:System.Security.Cryptography.X509Certificates.X509CertificateCollection" /> you can use to iterate through the collection.</returns>
    </member>
    <member name="M:System.Security.Cryptography.X509Certificates.X509CertificateCollection.GetHashCode">
      <summary>Builds a hash value based on all values contained in the current <see cref="T:System.Security.Cryptography.X509Certificates.X509CertificateCollection" />.</summary>
      <returns>A hash value based on all values contained in the current <see cref="T:System.Security.Cryptography.X509Certificates.X509CertificateCollection" />.</returns>
    </member>
    <member name="M:System.Security.Cryptography.X509Certificates.X509CertificateCollection.IndexOf(System.Security.Cryptography.X509Certificates.X509Certificate)">
      <summary>Returns the index of the specified <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate" /> in the current <see cref="T:System.Security.Cryptography.X509Certificates.X509CertificateCollection" />.</summary>
      <returns>The index of the <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate" /> specified by the <paramref name="value" /> parameter in the <see cref="T:System.Security.Cryptography.X509Certificates.X509CertificateCollection" />, if found; otherwise, -1.</returns>
      <param name="value">The <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate" /> to locate. </param>
    </member>
    <member name="M:System.Security.Cryptography.X509Certificates.X509CertificateCollection.Insert(System.Int32,System.Security.Cryptography.X509Certificates.X509Certificate)">
      <summary>Inserts a <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate" /> into the current <see cref="T:System.Security.Cryptography.X509Certificates.X509CertificateCollection" /> at the specified index.</summary>
      <param name="index">The zero-based index where <paramref name="value" /> should be inserted. </param>
      <param name="value">The <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate" /> to insert. </param>
    </member>
    <member name="P:System.Security.Cryptography.X509Certificates.X509CertificateCollection.Item(System.Int32)">
      <summary>Gets or sets the entry at the specified index of the current <see cref="T:System.Security.Cryptography.X509Certificates.X509CertificateCollection" />.</summary>
      <returns>The <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate" /> at the specified index of the current <see cref="T:System.Security.Cryptography.X509Certificates.X509CertificateCollection" />.</returns>
      <param name="index">The zero-based index of the entry to locate in the current <see cref="T:System.Security.Cryptography.X509Certificates.X509CertificateCollection" />. </param>
      <exception cref="T:System.ArgumentOutOfRangeException">The <paramref name="index" /> parameter is outside the valid range of indexes for the collection. </exception>
    </member>
    <member name="M:System.Security.Cryptography.X509Certificates.X509CertificateCollection.Remove(System.Security.Cryptography.X509Certificates.X509Certificate)">
      <summary>Removes a specific <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate" /> from the current <see cref="T:System.Security.Cryptography.X509Certificates.X509CertificateCollection" />.</summary>
      <param name="value">The <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate" /> to remove from the current <see cref="T:System.Security.Cryptography.X509Certificates.X509CertificateCollection" />. </param>
      <exception cref="T:System.ArgumentException">The <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate" /> specified by the <paramref name="value" /> parameter is not found in the current <see cref="T:System.Security.Cryptography.X509Certificates.X509CertificateCollection" />. </exception>
    </member>
    <member name="T:System.Security.Cryptography.X509Certificates.X509CertificateCollection.X509CertificateEnumerator">
      <summary>Enumerates the <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate" /> objects in an <see cref="T:System.Security.Cryptography.X509Certificates.X509CertificateCollection" />.</summary>
    </member>
    <member name="M:System.Security.Cryptography.X509Certificates.X509CertificateCollection.X509CertificateEnumerator.#ctor(System.Security.Cryptography.X509Certificates.X509CertificateCollection)">
      <summary>Initializes a new instance of the <see cref="T:System.Security.Cryptography.X509Certificates.X509CertificateCollection.X509CertificateEnumerator" /> class for the specified <see cref="T:System.Security.Cryptography.X509Certificates.X509CertificateCollection" />.</summary>
      <param name="mappings">The <see cref="T:System.Security.Cryptography.X509Certificates.X509CertificateCollection" /> to enumerate. </param>
    </member>
    <member name="P:System.Security.Cryptography.X509Certificates.X509CertificateCollection.X509CertificateEnumerator.Current">
      <summary>Gets the current <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate" /> in the <see cref="T:System.Security.Cryptography.X509Certificates.X509CertificateCollection" />.</summary>
      <returns>The current <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate" /> in the <see cref="T:System.Security.Cryptography.X509Certificates.X509CertificateCollection" />.</returns>
      <exception cref="T:System.InvalidOperationException">The enumerator is positioned before the first element of the collection or after the last element. </exception>
    </member>
    <member name="M:System.Security.Cryptography.X509Certificates.X509CertificateCollection.X509CertificateEnumerator.MoveNext">
      <summary>Advances the enumerator to the next element of the collection.</summary>
      <returns>true if the enumerator was successfully advanced to the next element; false if the enumerator has passed the end of the collection.</returns>
      <exception cref="T:System.InvalidOperationException">The collection was modified after the enumerator was instantiated. </exception>
    </member>
    <member name="M:System.Security.Cryptography.X509Certificates.X509CertificateCollection.X509CertificateEnumerator.Reset">
      <summary>Sets the enumerator to its initial position, which is before the first element in the collection.</summary>
      <exception cref="T:System.InvalidOperationException">The collection is modified after the enumerator is instantiated. </exception>
    </member>
    <member name="P:System.Security.Cryptography.X509Certificates.X509CertificateCollection.X509CertificateEnumerator.System#Collections#IEnumerator#Current">
      <summary>For a description of this member, see <see cref="P:System.Collections.IEnumerator.Current" />.</summary>
      <returns>The current X.509 certificate object in the <see cref="T:System.Security.Cryptography.X509Certificates.X509CertificateCollection" /> object.</returns>
      <exception cref="T:System.InvalidOperationException">The enumerator is positioned before the first element of the collection or after the last element. </exception>
    </member>
    <member name="M:System.Security.Cryptography.X509Certificates.X509CertificateCollection.X509CertificateEnumerator.System#Collections#IEnumerator#MoveNext">
      <summary>For a description of this member, see <see cref="M:System.Collections.IEnumerator.MoveNext" />.</summary>
      <returns>true if the enumerator was successfully advanced to the next element; false if the enumerator has passed the end of the collection.</returns>
      <exception cref="T:System.InvalidOperationException">The collection was modified after the enumerator was instantiated. </exception>
    </member>
    <member name="M:System.Security.Cryptography.X509Certificates.X509CertificateCollection.X509CertificateEnumerator.System#Collections#IEnumerator#Reset">
      <summary>For a description of this member, see <see cref="M:System.Collections.IEnumerator.Reset" />.</summary>
      <exception cref="T:System.InvalidOperationException">The collection was modified after the enumerator was instantiated. </exception>
    </member>
    <member name="T:System.Security.Cryptography.X509Certificates.X509Chain">
      <summary>Represents a chain-building engine for <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2" /> certificates.</summary>
    </member>
    <member name="M:System.Security.Cryptography.X509Certificates.X509Chain.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Security.Cryptography.X509Certificates.X509Chain" /> class.</summary>
    </member>
    <member name="M:System.Security.Cryptography.X509Certificates.X509Chain.#ctor(System.Boolean)">
      <summary>Initializes a new instance of the <see cref="T:System.Security.Cryptography.X509Certificates.X509Chain" /> class specifying a value that indicates whether the machine context should be used.</summary>
      <param name="useMachineContext">true to use the machine context; false to use the current user context. </param>
    </member>
    <member name="M:System.Security.Cryptography.X509Certificates.X509Chain.#ctor(System.IntPtr)">
      <summary>Initializes a new instance of the <see cref="T:System.Security.Cryptography.X509Certificates.X509Chain" /> class using an <see cref="T:System.IntPtr" /> handle to an X.509 chain.</summary>
      <param name="chainContext">An <see cref="T:System.IntPtr" /> handle to an X.509 chain.</param>
      <exception cref="T:System.ArgumentNullException">The <paramref name="chainContext" /> parameter is null.</exception>
      <exception cref="T:System.Security.Cryptography.CryptographicException">The <paramref name="chainContext" /> parameter points to an invalid context.</exception>
    </member>
    <member name="M:System.Security.Cryptography.X509Certificates.X509Chain.Build(System.Security.Cryptography.X509Certificates.X509Certificate2)">
      <summary>Builds an X.509 chain using the policy specified in <see cref="T:System.Security.Cryptography.X509Certificates.X509ChainPolicy" />.</summary>
      <returns>true if the X.509 certificate is valid; otherwise, false.</returns>
      <param name="certificate">An <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2" /> object.</param>
      <exception cref="T:System.ArgumentException">The <paramref name="certificate" /> is not a valid certificate or is null. </exception>
      <exception cref="T:System.Security.Cryptography.CryptographicException">The <paramref name="certificate" /> is unreadable. </exception>
    </member>
    <member name="P:System.Security.Cryptography.X509Certificates.X509Chain.ChainContext">
      <summary>Gets a handle to an X.509 chain.</summary>
      <returns>An <see cref="T:System.IntPtr" /> handle to an X.509 chain.</returns>
    </member>
    <member name="P:System.Security.Cryptography.X509Certificates.X509Chain.ChainElements">
      <summary>Gets a collection of <see cref="T:System.Security.Cryptography.X509Certificates.X509ChainElement" /> objects.</summary>
      <returns>An <see cref="T:System.Security.Cryptography.X509Certificates.X509ChainElementCollection" /> object.</returns>
    </member>
    <member name="P:System.Security.Cryptography.X509Certificates.X509Chain.ChainPolicy">
      <summary>Gets or sets the <see cref="T:System.Security.Cryptography.X509Certificates.X509ChainPolicy" /> to use when building an X.509 certificate chain.</summary>
      <returns>The <see cref="T:System.Security.Cryptography.X509Certificates.X509ChainPolicy" /> object associated with this X.509 chain.</returns>
      <exception cref="T:System.ArgumentNullException">The value being set for this property is null.</exception>
    </member>
    <member name="P:System.Security.Cryptography.X509Certificates.X509Chain.ChainStatus">
      <summary>Gets the status of each element in an <see cref="T:System.Security.Cryptography.X509Certificates.X509Chain" /> object.</summary>
      <returns>An array of <see cref="T:System.Security.Cryptography.X509Certificates.X509ChainStatus" /> objects.</returns>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
      </PermissionSet>
    </member>
    <member name="M:System.Security.Cryptography.X509Certificates.X509Chain.Create">
      <summary>Creates an <see cref="T:System.Security.Cryptography.X509Certificates.X509Chain" /> object after querying for the mapping defined in the CryptoConfig file, and maps the chain to that mapping.</summary>
      <returns>An <see cref="T:System.Security.Cryptography.X509Certificates.X509Chain" /> object.</returns>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="M:System.Security.Cryptography.X509Certificates.X509Chain.Reset">
      <summary>Clears the current <see cref="T:System.Security.Cryptography.X509Certificates.X509Chain" /> object.</summary>
    </member>
    <member name="T:System.Security.Cryptography.X509Certificates.X509ChainElement">
      <summary>Represents an element of an X.509 chain.</summary>
    </member>
    <member name="P:System.Security.Cryptography.X509Certificates.X509ChainElement.Certificate">
      <summary>Gets the X.509 certificate at a particular chain element.</summary>
      <returns>An <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2" /> object.</returns>
    </member>
    <member name="P:System.Security.Cryptography.X509Certificates.X509ChainElement.ChainElementStatus">
      <summary>Gets the error status of the current X.509 certificate in a chain.</summary>
      <returns>An array of <see cref="T:System.Security.Cryptography.X509Certificates.X509ChainStatus" /> objects.</returns>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
      </PermissionSet>
    </member>
    <member name="P:System.Security.Cryptography.X509Certificates.X509ChainElement.Information">
      <summary>Gets additional error information from an unmanaged certificate chain structure.</summary>
      <returns>A string representing the pwszExtendedErrorInfo member of the unmanaged CERT_CHAIN_ELEMENT structure in the Crypto API.</returns>
    </member>
    <member name="T:System.Security.Cryptography.X509Certificates.X509ChainElementCollection">
      <summary>Represents a collection of <see cref="T:System.Security.Cryptography.X509Certificates.X509ChainElement" /> objects. This class cannot be inherited.</summary>
    </member>
    <member name="M:System.Security.Cryptography.X509Certificates.X509ChainElementCollection.CopyTo(System.Security.Cryptography.X509Certificates.X509ChainElement[],System.Int32)">
      <summary>Copies an <see cref="T:System.Security.Cryptography.X509Certificates.X509ChainElementCollection" /> object into an array, starting at the specified index.</summary>
      <param name="array">An array of <see cref="T:System.Security.Cryptography.X509Certificates.X509ChainElement" /> objects. </param>
      <param name="index">An integer representing the index value. </param>
      <exception cref="T:System.ArgumentOutOfRangeException">The specified <paramref name="index" /> is less than zero, or greater than or equal to the length of the array. </exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="array" /> is null. </exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="index" /> plus the current count is greater than the length of the array. </exception>
    </member>
    <member name="P:System.Security.Cryptography.X509Certificates.X509ChainElementCollection.Count">
      <summary>Gets the number of elements in the collection.</summary>
      <returns>An integer representing the number of elements in the collection.</returns>
    </member>
    <member name="M:System.Security.Cryptography.X509Certificates.X509ChainElementCollection.GetEnumerator">
      <summary>Gets an <see cref="T:System.Security.Cryptography.X509Certificates.X509ChainElementEnumerator" /> object that can be used to navigate through a collection of chain elements.</summary>
      <returns>An <see cref="T:System.Security.Cryptography.X509Certificates.X509ChainElementEnumerator" /> object.</returns>
    </member>
    <member name="P:System.Security.Cryptography.X509Certificates.X509ChainElementCollection.IsSynchronized">
      <summary>Gets a value indicating whether the collection of chain elements is synchronized.</summary>
      <returns>Always returns false.</returns>
    </member>
    <member name="P:System.Security.Cryptography.X509Certificates.X509ChainElementCollection.Item(System.Int32)">
      <summary>Gets the <see cref="T:System.Security.Cryptography.X509Certificates.X509ChainElement" /> object at the specified index.</summary>
      <returns>An <see cref="T:System.Security.Cryptography.X509Certificates.X509ChainElement" /> object.</returns>
      <param name="index">An integer value. </param>
      <exception cref="T:System.InvalidOperationException">
        <paramref name="index" /> is less than zero. </exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> is greater than or equal to the length of the collection. </exception>
    </member>
    <member name="P:System.Security.Cryptography.X509Certificates.X509ChainElementCollection.SyncRoot">
      <summary>Gets an object that can be used to synchronize access to an <see cref="T:System.Security.Cryptography.X509Certificates.X509ChainElementCollection" /> object.</summary>
      <returns>A pointer reference to the current object.</returns>
    </member>
    <member name="M:System.Security.Cryptography.X509Certificates.X509ChainElementCollection.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
      <summary>Copies an <see cref="T:System.Security.Cryptography.X509Certificates.X509ChainElementCollection" /> object into an array, starting at the specified index.</summary>
      <param name="array">An array to copy the <see cref="T:System.Security.Cryptography.X509Certificates.X509ChainElementCollection" /> object to.</param>
      <param name="index">The index of <paramref name="array" /> at which to start copying.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">The specified <paramref name="index" /> is less than zero, or greater than or equal to the length of the array. </exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="array" /> is null. </exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="index" /> plus the current count is greater than the length of the array. </exception>
    </member>
    <member name="M:System.Security.Cryptography.X509Certificates.X509ChainElementCollection.System#Collections#IEnumerable#GetEnumerator">
      <summary>Gets an <see cref="T:System.Collections.IEnumerator" /> object that can be used to navigate a collection of chain elements.</summary>
      <returns>An <see cref="T:System.Collections.IEnumerator" /> object.</returns>
    </member>
    <member name="T:System.Security.Cryptography.X509Certificates.X509ChainElementEnumerator">
      <summary>Supports a simple iteration over an <see cref="T:System.Security.Cryptography.X509Certificates.X509ChainElementCollection" />. This class cannot be inherited.</summary>
    </member>
    <member name="P:System.Security.Cryptography.X509Certificates.X509ChainElementEnumerator.Current">
      <summary>Gets the current element in the <see cref="T:System.Security.Cryptography.X509Certificates.X509ChainElementCollection" />.</summary>
      <returns>The current element in the <see cref="T:System.Security.Cryptography.X509Certificates.X509ChainElementCollection" />.</returns>
      <exception cref="T:System.InvalidOperationException">The enumerator is positioned before the first element of the collection or after the last element. </exception>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
      </PermissionSet>
    </member>
    <member name="M:System.Security.Cryptography.X509Certificates.X509ChainElementEnumerator.MoveNext">
      <summary>Advances the enumerator to the next element in the <see cref="T:System.Security.Cryptography.X509Certificates.X509ChainElementCollection" />.</summary>
      <returns>true if the enumerator was successfully advanced to the next element; false if the enumerator has passed the end of the collection.</returns>
      <exception cref="T:System.InvalidOperationException">The collection was modified after the enumerator was created. </exception>
    </member>
    <member name="M:System.Security.Cryptography.X509Certificates.X509ChainElementEnumerator.Reset">
      <summary>Sets the enumerator to its initial position, which is before the first element in the <see cref="T:System.Security.Cryptography.X509Certificates.X509ChainElementCollection" />.</summary>
      <exception cref="T:System.InvalidOperationException">The collection was modified after the enumerator was created. </exception>
    </member>
    <member name="P:System.Security.Cryptography.X509Certificates.X509ChainElementEnumerator.System#Collections#IEnumerator#Current">
      <summary>Gets the current element in the <see cref="T:System.Security.Cryptography.X509Certificates.X509ChainElementCollection" />.</summary>
      <returns>The current element in the <see cref="T:System.Security.Cryptography.X509Certificates.X509ChainElementCollection" />.</returns>
      <exception cref="T:System.InvalidOperationException">The enumerator is positioned before the first element of the collection or after the last element. </exception>
    </member>
    <member name="T:System.Security.Cryptography.X509Certificates.X509ChainPolicy">
      <summary>Represents the chain policy to be applied when building an X509 certificate chain. This class cannot be inherited.</summary>
    </member>
    <member name="M:System.Security.Cryptography.X509Certificates.X509ChainPolicy.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Security.Cryptography.X509Certificates.X509ChainPolicy" /> class. </summary>
    </member>
    <member name="P:System.Security.Cryptography.X509Certificates.X509ChainPolicy.ApplicationPolicy">
      <summary>Gets a collection of object identifiers (OIDs) specifying which application policies or enhanced key usages (EKUs) the certificate supports.</summary>
      <returns>An <see cref="T:System.Security.Cryptography.OidCollection" />  object.</returns>
    </member>
    <member name="P:System.Security.Cryptography.X509Certificates.X509ChainPolicy.CertificatePolicy">
      <summary>Gets a collection of object identifiers (OIDs) specifying which certificate policies the certificate supports.</summary>
      <returns>An <see cref="T:System.Security.Cryptography.OidCollection" /> object.</returns>
    </member>
    <member name="P:System.Security.Cryptography.X509Certificates.X509ChainPolicy.ExtraStore">
      <summary>Represents an additional collection of certificates that can be searched by the chaining engine when validating a certificate chain.</summary>
      <returns>An <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2Collection" /> object.</returns>
    </member>
    <member name="M:System.Security.Cryptography.X509Certificates.X509ChainPolicy.Reset">
      <summary>Resets the <see cref="T:System.Security.Cryptography.X509Certificates.X509ChainPolicy" /> members to their default values.</summary>
    </member>
    <member name="P:System.Security.Cryptography.X509Certificates.X509ChainPolicy.RevocationFlag">
      <summary>Gets or sets values for X509 revocation flags.</summary>
      <returns>An <see cref="T:System.Security.Cryptography.X509Certificates.X509RevocationFlag" /> object.</returns>
      <exception cref="T:System.ArgumentException">The <see cref="T:System.Security.Cryptography.X509Certificates.X509RevocationFlag" /> value supplied is not a valid flag. </exception>
    </member>
    <member name="P:System.Security.Cryptography.X509Certificates.X509ChainPolicy.RevocationMode">
      <summary>Gets or sets values for X509 certificate revocation mode.</summary>
      <returns>An <see cref="T:System.Security.Cryptography.X509Certificates.X509RevocationMode" /> object.</returns>
      <exception cref="T:System.ArgumentException">The <see cref="T:System.Security.Cryptography.X509Certificates.X509RevocationMode" /> value supplied is not a valid flag. </exception>
    </member>
    <member name="P:System.Security.Cryptography.X509Certificates.X509ChainPolicy.UrlRetrievalTimeout">
      <summary>Gets the time span that elapsed during online revocation verification or downloading the certificate revocation list (CRL).</summary>
      <returns>A <see cref="T:System.TimeSpan" /> object.</returns>
    </member>
    <member name="P:System.Security.Cryptography.X509Certificates.X509ChainPolicy.VerificationFlags">
      <summary>Gets verification flags for the certificate.</summary>
      <returns>A value from the <see cref="T:System.Security.Cryptography.X509Certificates.X509VerificationFlags" /> enumeration.</returns>
      <exception cref="T:System.ArgumentException">The <see cref="T:System.Security.Cryptography.X509Certificates.X509VerificationFlags" /> value supplied is not a valid flag. <see cref="F:System.Security.Cryptography.X509Certificates.X509VerificationFlags.NoFlag" /> is the default value. </exception>
    </member>
    <member name="P:System.Security.Cryptography.X509Certificates.X509ChainPolicy.VerificationTime">
      <summary>The time that the certificate was verified expressed in local time.</summary>
      <returns>A <see cref="T:System.DateTime" /> object.</returns>
    </member>
    <member name="T:System.Security.Cryptography.X509Certificates.X509ChainStatus">
      <summary>Provides a simple structure for storing X509 chain status and error information.</summary>
    </member>
    <member name="P:System.Security.Cryptography.X509Certificates.X509ChainStatus.Status">
      <summary>Specifies the status of the X509 chain.</summary>
      <returns>An <see cref="T:System.Security.Cryptography.X509Certificates.X509ChainStatusFlags" /> value.</returns>
    </member>
    <member name="P:System.Security.Cryptography.X509Certificates.X509ChainStatus.StatusInformation">
      <summary>Specifies a description of the <see cref="P:System.Security.Cryptography.X509Certificates.X509Chain.ChainStatus" /> value.</summary>
      <returns>A localizable string.</returns>
    </member>
    <member name="T:System.Security.Cryptography.X509Certificates.X509ChainStatusFlags">
      <summary>Defines the status of an X509 chain.</summary>
    </member>
    <member name="F:System.Security.Cryptography.X509Certificates.X509ChainStatusFlags.NoError">
      <summary>Specifies that the X509 chain has no errors.</summary>
    </member>
    <member name="F:System.Security.Cryptography.X509Certificates.X509ChainStatusFlags.NotTimeValid">
      <summary>Specifies that the X509 chain is not valid due to an invalid time value, such as a value that indicates an expired certificate.</summary>
    </member>
    <member name="F:System.Security.Cryptography.X509Certificates.X509ChainStatusFlags.NotTimeNested">
      <summary>Specifies that the CA (certificate authority) certificate and the issued certificate have validity periods that are not nested. For example, the CA cert can be valid from January 1 to December 1 and the issued certificate from January 2 to December 2, which would mean the validity periods are not nested.</summary>
    </member>
    <member name="F:System.Security.Cryptography.X509Certificates.X509ChainStatusFlags.Revoked">
      <summary>Specifies that the X509 chain is invalid due to a revoked certificate.</summary>
    </member>
    <member name="F:System.Security.Cryptography.X509Certificates.X509ChainStatusFlags.NotSignatureValid">
      <summary>Specifies that the X509 chain is invalid due to an invalid certificate signature.</summary>
    </member>
    <member name="F:System.Security.Cryptography.X509Certificates.X509ChainStatusFlags.NotValidForUsage">
      <summary>Specifies that the key usage is not valid.</summary>
    </member>
    <member name="F:System.Security.Cryptography.X509Certificates.X509ChainStatusFlags.UntrustedRoot">
      <summary>Specifies that the X509 chain is invalid due to an untrusted root certificate.</summary>
    </member>
    <member name="F:System.Security.Cryptography.X509Certificates.X509ChainStatusFlags.RevocationStatusUnknown">
      <summary>Specifies that it is not possible to determine whether the certificate has been revoked. This can be due to the certificate revocation list (CRL) being offline or unavailable.</summary>
    </member>
    <member name="F:System.Security.Cryptography.X509Certificates.X509ChainStatusFlags.Cyclic">
      <summary>Specifies that the X509 chain could not be built.</summary>
    </member>
    <member name="F:System.Security.Cryptography.X509Certificates.X509ChainStatusFlags.InvalidExtension">
      <summary>Specifies that the X509 chain is invalid due to an invalid extension.</summary>
    </member>
    <member name="F:System.Security.Cryptography.X509Certificates.X509ChainStatusFlags.InvalidPolicyConstraints">
      <summary>Specifies that the X509 chain is invalid due to invalid policy constraints.</summary>
    </member>
    <member name="F:System.Security.Cryptography.X509Certificates.X509ChainStatusFlags.InvalidBasicConstraints">
      <summary>Specifies that the X509 chain is invalid due to invalid basic constraints.</summary>
    </member>
    <member name="F:System.Security.Cryptography.X509Certificates.X509ChainStatusFlags.InvalidNameConstraints">
      <summary>Specifies that the X509 chain is invalid due to invalid name constraints.</summary>
    </member>
    <member name="F:System.Security.Cryptography.X509Certificates.X509ChainStatusFlags.HasNotSupportedNameConstraint">
      <summary>Specifies that the certificate does not have a supported name constant or has a name constant that is unsupported.</summary>
    </member>
    <member name="F:System.Security.Cryptography.X509Certificates.X509ChainStatusFlags.HasNotDefinedNameConstraint">
      <summary>Specifies that the certificate has an undefined name constant.</summary>
    </member>
    <member name="F:System.Security.Cryptography.X509Certificates.X509ChainStatusFlags.HasNotPermittedNameConstraint">
      <summary>Specifies that the certificate has an impermissible name constraint.</summary>
    </member>
    <member name="F:System.Security.Cryptography.X509Certificates.X509ChainStatusFlags.HasExcludedNameConstraint">
      <summary>Specifies that the X509 chain is invalid because a certificate has excluded a name constraint.</summary>
    </member>
    <member name="F:System.Security.Cryptography.X509Certificates.X509ChainStatusFlags.PartialChain">
      <summary>Specifies that the X509 chain could not be built up to the root certificate.</summary>
    </member>
    <member name="F:System.Security.Cryptography.X509Certificates.X509ChainStatusFlags.CtlNotTimeValid">
      <summary>Specifies that the certificate trust list (CTL) is not valid because of an invalid time value, such as one that indicates that the CTL has expired.</summary>
    </member>
    <member name="F:System.Security.Cryptography.X509Certificates.X509ChainStatusFlags.CtlNotSignatureValid">
      <summary>Specifies that the certificate trust list (CTL) contains an invalid signature.</summary>
    </member>
    <member name="F:System.Security.Cryptography.X509Certificates.X509ChainStatusFlags.CtlNotValidForUsage">
      <summary>Specifies that the certificate trust list (CTL) is not valid for this use.</summary>
    </member>
    <member name="F:System.Security.Cryptography.X509Certificates.X509ChainStatusFlags.OfflineRevocation">
      <summary>Specifies that the online certificate revocation list (CRL) the X509 chain relies on is currently offline.</summary>
    </member>
    <member name="F:System.Security.Cryptography.X509Certificates.X509ChainStatusFlags.NoIssuanceChainPolicy">
      <summary>Specifies that there is no certificate policy extension in the certificate. This error would occur if a group policy has specified that all certificates must have a certificate policy.</summary>
    </member>
    <member name="T:System.Security.Cryptography.X509Certificates.X509EnhancedKeyUsageExtension">
      <summary>Defines the collection of object identifiers (OIDs) that indicates the applications that use the key. This class cannot be inherited.</summary>
    </member>
    <member name="M:System.Security.Cryptography.X509Certificates.X509EnhancedKeyUsageExtension.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Security.Cryptography.X509Certificates.X509EnhancedKeyUsageExtension" /> class.</summary>
    </member>
    <member name="M:System.Security.Cryptography.X509Certificates.X509EnhancedKeyUsageExtension.#ctor(System.Security.Cryptography.AsnEncodedData,System.Boolean)">
      <summary>Initializes a new instance of the <see cref="T:System.Security.Cryptography.X509Certificates.X509EnhancedKeyUsageExtension" /> class using an <see cref="T:System.Security.Cryptography.AsnEncodedData" /> object and a value that identifies whether the extension is critical.</summary>
      <param name="encodedEnhancedKeyUsages">The encoded data to use to create the extension.</param>
      <param name="critical">true if the extension is critical; otherwise, false.</param>
    </member>
    <member name="M:System.Security.Cryptography.X509Certificates.X509EnhancedKeyUsageExtension.#ctor(System.Security.Cryptography.OidCollection,System.Boolean)">
      <summary>Initializes a new instance of the <see cref="T:System.Security.Cryptography.X509Certificates.X509EnhancedKeyUsageExtension" /> class using an <see cref="T:System.Security.Cryptography.OidCollection" /> and a value that identifies whether the extension is critical. </summary>
      <param name="enhancedKeyUsages">An <see cref="T:System.Security.Cryptography.OidCollection" /> collection. </param>
      <param name="critical">true if the extension is critical; otherwise, false.</param>
      <exception cref="T:System.Security.Cryptography.CryptographicException">The specified <see cref="T:System.Security.Cryptography.OidCollection" />  contains one or more corrupt values.</exception>
    </member>
    <member name="M:System.Security.Cryptography.X509Certificates.X509EnhancedKeyUsageExtension.CopyFrom(System.Security.Cryptography.AsnEncodedData)">
      <summary>Initializes a new instance of the <see cref="T:System.Security.Cryptography.X509Certificates.X509EnhancedKeyUsageExtension" /> class using an <see cref="T:System.Security.Cryptography.AsnEncodedData" /> object.</summary>
      <param name="asnEncodedData">The encoded data to use to create the extension.</param>
    </member>
    <member name="P:System.Security.Cryptography.X509Certificates.X509EnhancedKeyUsageExtension.EnhancedKeyUsages">
      <summary>Gets the collection of object identifiers (OIDs) that indicate the applications that use the key.</summary>
      <returns>An <see cref="T:System.Security.Cryptography.OidCollection" /> object indicating the applications that use the key.</returns>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
      </PermissionSet>
    </member>
    <member name="T:System.Security.Cryptography.X509Certificates.X509Extension">
      <summary>Represents an X509 extension.</summary>
    </member>
    <member name="M:System.Security.Cryptography.X509Certificates.X509Extension.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Security.Cryptography.X509Certificates.X509Extension" /> class.</summary>
    </member>
    <member name="M:System.Security.Cryptography.X509Certificates.X509Extension.#ctor(System.Security.Cryptography.AsnEncodedData,System.Boolean)">
      <summary>Initializes a new instance of the <see cref="T:System.Security.Cryptography.X509Certificates.X509Extension" /> class.</summary>
      <param name="encodedExtension">The encoded data to be used to create the extension.</param>
      <param name="critical">true if the extension is critical; otherwise false.</param>
    </member>
    <member name="M:System.Security.Cryptography.X509Certificates.X509Extension.#ctor(System.Security.Cryptography.Oid,System.Byte[],System.Boolean)">
      <summary>Initializes a new instance of the <see cref="T:System.Security.Cryptography.X509Certificates.X509Extension" /> class.</summary>
      <param name="oid">The object identifier used to identify the extension.</param>
      <param name="rawData">The encoded data used to create the extension.</param>
      <param name="critical">true if the extension is critical; otherwise false.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="oid" /> is null.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="oid" /> is an empty string ("").</exception>
    </member>
    <member name="M:System.Security.Cryptography.X509Certificates.X509Extension.#ctor(System.String,System.Byte[],System.Boolean)">
      <summary>Initializes a new instance of the <see cref="T:System.Security.Cryptography.X509Certificates.X509Extension" /> class.</summary>
      <param name="oid">A string representing the object identifier.</param>
      <param name="rawData">The encoded data used to create the extension.</param>
      <param name="critical">true if the extension is critical; otherwise false.</param>
    </member>
    <member name="M:System.Security.Cryptography.X509Certificates.X509Extension.CopyFrom(System.Security.Cryptography.AsnEncodedData)">
      <summary>Copies the extension properties of the specified <see cref="T:System.Security.Cryptography.AsnEncodedData" /> object.</summary>
      <param name="asnEncodedData">The <see cref="T:System.Security.Cryptography.AsnEncodedData" /> to be copied.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="asnEncodedData" /> is null. </exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="asnEncodedData" /> does not have a valid X.509 extension.</exception>
    </member>
    <member name="P:System.Security.Cryptography.X509Certificates.X509Extension.Critical">
      <summary>Gets a Boolean value indicating whether the extension is critical.</summary>
      <returns>true if the extension is critical; otherwise, false.</returns>
    </member>
    <member name="T:System.Security.Cryptography.X509Certificates.X509ExtensionCollection">
      <summary>Represents a collection of <see cref="T:System.Security.Cryptography.X509Certificates.X509Extension" /> objects. This class cannot be inherited.</summary>
    </member>
    <member name="M:System.Security.Cryptography.X509Certificates.X509ExtensionCollection.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Security.Cryptography.X509Certificates.X509ExtensionCollection" /> class. </summary>
    </member>
    <member name="M:System.Security.Cryptography.X509Certificates.X509ExtensionCollection.Add(System.Security.Cryptography.X509Certificates.X509Extension)">
      <summary>Adds an <see cref="T:System.Security.Cryptography.X509Certificates.X509Extension" /> object to an <see cref="T:System.Security.Cryptography.X509Certificates.X509ExtensionCollection" /> object.</summary>
      <returns>The index at which the <paramref name="extension" /> parameter was added.</returns>
      <param name="extension">An <see cref="T:System.Security.Cryptography.X509Certificates.X509Extension" />  object to add to the <see cref="T:System.Security.Cryptography.X509Certificates.X509ExtensionCollection" /> object. </param>
      <exception cref="T:System.ArgumentNullException">The value of the <paramref name="extension" /> parameter is null.</exception>
    </member>
    <member name="M:System.Security.Cryptography.X509Certificates.X509ExtensionCollection.CopyTo(System.Security.Cryptography.X509Certificates.X509Extension[],System.Int32)">
      <summary>Copies a collection into an array starting at the specified index.</summary>
      <param name="array">An array of <see cref="T:System.Security.Cryptography.X509Certificates.X509Extension" /> objects. </param>
      <param name="index">The location in the array at which copying starts. </param>
      <exception cref="T:System.ArgumentException">
        <paramref name="index" /> is a zero-length string or contains an invalid value. </exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="index" /> is null. </exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> specifies a value that is not in the range of the array. </exception>
    </member>
    <member name="P:System.Security.Cryptography.X509Certificates.X509ExtensionCollection.Count">
      <summary>Gets the number of <see cref="T:System.Security.Cryptography.X509Certificates.X509Extension" /> objects in a <see cref="T:System.Security.Cryptography.X509Certificates.X509ExtensionCollection" /> object.</summary>
      <returns>An integer representing the number of <see cref="T:System.Security.Cryptography.X509Certificates.X509Extension" /> objects in the <see cref="T:System.Security.Cryptography.X509Certificates.X509ExtensionCollection" /> object.</returns>
    </member>
    <member name="M:System.Security.Cryptography.X509Certificates.X509ExtensionCollection.GetEnumerator">
      <summary>Returns an enumerator that can iterate through an <see cref="T:System.Security.Cryptography.X509Certificates.X509ExtensionCollection" /> object.</summary>
      <returns>An <see cref="T:System.Security.Cryptography.X509Certificates.X509ExtensionEnumerator" /> object to use to iterate through the <see cref="T:System.Security.Cryptography.X509Certificates.X509ExtensionCollection" /> object.</returns>
    </member>
    <member name="P:System.Security.Cryptography.X509Certificates.X509ExtensionCollection.IsSynchronized">
      <summary>Gets a value indicating whether the collection is guaranteed to be thread safe.</summary>
      <returns>true if the collection is thread safe; otherwise, false.</returns>
    </member>
    <member name="P:System.Security.Cryptography.X509Certificates.X509ExtensionCollection.Item(System.Int32)">
      <summary>Gets the <see cref="T:System.Security.Cryptography.X509Certificates.X509Extension" /> object at the specified index.</summary>
      <returns>An <see cref="T:System.Security.Cryptography.X509Certificates.X509Extension" /> object.</returns>
      <param name="index">The location of the <see cref="T:System.Security.Cryptography.X509Certificates.X509Extension" /> object to retrieve. </param>
      <exception cref="T:System.InvalidOperationException">
        <paramref name="index" /> is less than zero. </exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> is equal to or greater than the length of the array. </exception>
    </member>
    <member name="P:System.Security.Cryptography.X509Certificates.X509ExtensionCollection.Item(System.String)">
      <summary>Gets the first <see cref="T:System.Security.Cryptography.X509Certificates.X509Extension" /> object whose value or friendly name is specified by an object identifier (OID).</summary>
      <returns>An <see cref="T:System.Security.Cryptography.X509Certificates.X509Extension" /> object.</returns>
      <param name="oid">The object identifier (OID) of the extension to retrieve. </param>
    </member>
    <member name="P:System.Security.Cryptography.X509Certificates.X509ExtensionCollection.SyncRoot">
      <summary>Gets an object that you can use to synchronize access to the <see cref="T:System.Security.Cryptography.X509Certificates.X509ExtensionCollection" /> object.</summary>
      <returns>An object that you can use to synchronize access to the <see cref="T:System.Security.Cryptography.X509Certificates.X509ExtensionCollection" /> object.</returns>
    </member>
    <member name="M:System.Security.Cryptography.X509Certificates.X509ExtensionCollection.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
      <summary>Copies the collection into an array starting at the specified index.</summary>
      <param name="array">An array of <see cref="T:System.Security.Cryptography.X509Certificates.X509Extension" /> objects. </param>
      <param name="index">The location in the array at which copying starts. </param>
      <exception cref="T:System.ArgumentException">
        <paramref name="index" /> is a zero-length string or contains an invalid value. </exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="index" /> is null. </exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> specifies a value that is not in the range of the array. </exception>
    </member>
    <member name="M:System.Security.Cryptography.X509Certificates.X509ExtensionCollection.System#Collections#IEnumerable#GetEnumerator">
      <summary>Returns an enumerator that can iterate through an <see cref="T:System.Security.Cryptography.X509Certificates.X509ExtensionCollection" /> object.</summary>
      <returns>An <see cref="T:System.Collections.IEnumerator" /> object to use to iterate through the <see cref="T:System.Security.Cryptography.X509Certificates.X509ExtensionCollection" /> object.</returns>
    </member>
    <member name="T:System.Security.Cryptography.X509Certificates.X509ExtensionEnumerator">
      <summary>Supports a simple iteration over a <see cref="T:System.Security.Cryptography.X509Certificates.X509ExtensionCollection" />. This class cannot be inherited.</summary>
    </member>
    <member name="P:System.Security.Cryptography.X509Certificates.X509ExtensionEnumerator.Current">
      <summary>Gets the current element in the <see cref="T:System.Security.Cryptography.X509Certificates.X509ExtensionCollection" />.</summary>
      <returns>The current element in the <see cref="T:System.Security.Cryptography.X509Certificates.X509ExtensionCollection" />.</returns>
      <exception cref="T:System.InvalidOperationException">The enumerator is positioned before the first element of the collection or after the last element. </exception>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
      </PermissionSet>
    </member>
    <member name="M:System.Security.Cryptography.X509Certificates.X509ExtensionEnumerator.MoveNext">
      <summary>Advances the enumerator to the next element in the <see cref="T:System.Security.Cryptography.X509Certificates.X509ExtensionCollection" />.</summary>
      <returns>true if the enumerator was successfully advanced to the next element; false if the enumerator has passed the end of the collection.</returns>
      <exception cref="T:System.InvalidOperationException">The collection was modified after the enumerator was created. </exception>
    </member>
    <member name="M:System.Security.Cryptography.X509Certificates.X509ExtensionEnumerator.Reset">
      <summary>Sets the enumerator to its initial position, which is before the first element in the <see cref="T:System.Security.Cryptography.X509Certificates.X509ExtensionCollection" />.</summary>
      <exception cref="T:System.InvalidOperationException">The collection was modified after the enumerator was created. </exception>
    </member>
    <member name="P:System.Security.Cryptography.X509Certificates.X509ExtensionEnumerator.System#Collections#IEnumerator#Current">
      <summary>Gets an object from a collection.</summary>
      <returns>The current element in the <see cref="T:System.Security.Cryptography.X509Certificates.X509ExtensionCollection" />.</returns>
      <exception cref="T:System.InvalidOperationException">The enumerator is positioned before the first element of the collection or after the last element. </exception>
    </member>
    <member name="T:System.Security.Cryptography.X509Certificates.X509FindType">
      <summary>Specifies the type of value searched for by the <see cref="M:System.Security.Cryptography.X509Certificates.X509Certificate2Collection.Find(System.Security.Cryptography.X509Certificates.X509FindType,System.Object,System.Boolean)" /> method.</summary>
    </member>
    <member name="F:System.Security.Cryptography.X509Certificates.X509FindType.FindByThumbprint">
      <summary>The <paramref name="findValue" /> parameter for the <see cref="M:System.Security.Cryptography.X509Certificates.X509Certificate2Collection.Find(System.Security.Cryptography.X509Certificates.X509FindType,System.Object,System.Boolean)" /> method must be a string representing the thumbprint of the certificate.</summary>
    </member>
    <member name="F:System.Security.Cryptography.X509Certificates.X509FindType.FindBySubjectName">
      <summary>The <paramref name="findValue" /> parameter for the <see cref="M:System.Security.Cryptography.X509Certificates.X509Certificate2Collection.Find(System.Security.Cryptography.X509Certificates.X509FindType,System.Object,System.Boolean)" /> method must be a string representing the subject name of the certificate. This is a less specific search than if you use the <see cref="F:System.Security.Cryptography.X509Certificates.X509FindType.FindBySubjectDistinguishedName" /> enumeration value. Using the <see cref="F:System.Security.Cryptography.X509Certificates.X509FindType.FindBySubjectName" /> value, the <see cref="M:System.Security.Cryptography.X509Certificates.X509Certificate2Collection.Find(System.Security.Cryptography.X509Certificates.X509FindType,System.Object,System.Boolean)" /> method performs a case-insensitive string compare using the supplied value. For example, if you pass "MyCert" to the <see cref="M:System.Security.Cryptography.X509Certificates.X509Certificate2Collection.Find(System.Security.Cryptography.X509Certificates.X509FindType,System.Object,System.Boolean)" /> method, it will find all certificates with the subject name containing that string, regardless of other subject values. Searching by distinguished name is a more precise search.</summary>
    </member>
    <member name="F:System.Security.Cryptography.X509Certificates.X509FindType.FindBySubjectDistinguishedName">
      <summary>The <paramref name="findValue" /> parameter for the <see cref="M:System.Security.Cryptography.X509Certificates.X509Certificate2Collection.Find(System.Security.Cryptography.X509Certificates.X509FindType,System.Object,System.Boolean)" /> method must be a string representing the subject distinguished name of the certificate. This is a more specific search than if you use the <see cref="F:System.Security.Cryptography.X509Certificates.X509FindType.FindBySubjectName" /> enumeration value. Using the <see cref="F:System.Security.Cryptography.X509Certificates.X509FindType.FindBySubjectDistinguishedName" /> value, the Find method performs a case-insensitive string compare for the entire distinguished name. Searching by subject name is a less precise search.</summary>
    </member>
    <member name="F:System.Security.Cryptography.X509Certificates.X509FindType.FindByIssuerName">
      <summary>The <paramref name="findValue" /> parameter for the <see cref="M:System.Security.Cryptography.X509Certificates.X509Certificate2Collection.Find(System.Security.Cryptography.X509Certificates.X509FindType,System.Object,System.Boolean)" /> method must be a string representing the issuer name of the certificate. This is a less specific search than if you use the <see cref="F:System.Security.Cryptography.X509Certificates.X509FindType.FindByIssuerDistinguishedName" /> enumeration value. Using the <see cref="F:System.Security.Cryptography.X509Certificates.X509FindType.FindByIssuerName" /> value, the <see cref="M:System.Security.Cryptography.X509Certificates.X509Certificate2Collection.Find(System.Security.Cryptography.X509Certificates.X509FindType,System.Object,System.Boolean)" /> method performs a case-insensitive string compare using the supplied value. For example, if you pass "MyCA" to the <see cref="M:System.Security.Cryptography.X509Certificates.X509Certificate2Collection.Find(System.Security.Cryptography.X509Certificates.X509FindType,System.Object,System.Boolean)" /> method, it will find all certificates with the issuer name containing that string, regardless of other issuer values.</summary>
    </member>
    <member name="F:System.Security.Cryptography.X509Certificates.X509FindType.FindByIssuerDistinguishedName">
      <summary>The <paramref name="findValue" /> parameter for the <see cref="M:System.Security.Cryptography.X509Certificates.X509Certificate2Collection.Find(System.Security.Cryptography.X509Certificates.X509FindType,System.Object,System.Boolean)" /> method must be a string representing the issuer distinguished name of the certificate. This is a more specific search than if you use the <see cref="F:System.Security.Cryptography.X509Certificates.X509FindType.FindByIssuerName" /> enumeration value. Using the <see cref="F:System.Security.Cryptography.X509Certificates.X509FindType.FindByIssuerDistinguishedName" /> value, the <see cref="M:System.Security.Cryptography.X509Certificates.X509Certificate2Collection.Find(System.Security.Cryptography.X509Certificates.X509FindType,System.Object,System.Boolean)" /> method performs a case-insensitive string compare for the entire distinguished name. Searching by issuer name is a less precise search.</summary>
    </member>
    <member name="F:System.Security.Cryptography.X509Certificates.X509FindType.FindBySerialNumber">
      <summary>The <paramref name="findValue" /> parameter for the <see cref="M:System.Security.Cryptography.X509Certificates.X509Certificate2Collection.Find(System.Security.Cryptography.X509Certificates.X509FindType,System.Object,System.Boolean)" /> must be a string representing the serial number of the certificate as it is displayed by the UI. The serial number must be in reverse order since it is an integer.</summary>
    </member>
    <member name="F:System.Security.Cryptography.X509Certificates.X509FindType.FindByTimeValid">
      <summary>The <paramref name="findValue" /> parameter for the <see cref="M:System.Security.Cryptography.X509Certificates.X509Certificate2Collection.Find(System.Security.Cryptography.X509Certificates.X509FindType,System.Object,System.Boolean)" /> must be a <see cref="T:System.DateTime" /> value in local time, such as <see cref="P:System.DateTime.Now" />. Note that the union of certificates returned using <see cref="F:System.Security.Cryptography.X509Certificates.X509FindType.FindByTimeValid" />, <see cref="F:System.Security.Cryptography.X509Certificates.X509FindType.FindByTimeNotYetValid" /> and <see cref="F:System.Security.Cryptography.X509Certificates.X509FindType.FindByTimeExpired" /> should represent all certificates in the queried collection.</summary>
    </member>
    <member name="F:System.Security.Cryptography.X509Certificates.X509FindType.FindByTimeNotYetValid">
      <summary>The <paramref name="findValue" /> parameter for the <see cref="M:System.Security.Cryptography.X509Certificates.X509Certificate2Collection.Find(System.Security.Cryptography.X509Certificates.X509FindType,System.Object,System.Boolean)" /> must be a <see cref="T:System.DateTime" /> value in local time, such as <see cref="P:System.DateTime.Now" />. Note that the union of certificates returned using <see cref="F:System.Security.Cryptography.X509Certificates.X509FindType.FindByTimeValid" />, <see cref="F:System.Security.Cryptography.X509Certificates.X509FindType.FindByTimeNotYetValid" /> and <see cref="F:System.Security.Cryptography.X509Certificates.X509FindType.FindByTimeExpired" /> should represent all certificates in the queried collection.</summary>
    </member>
    <member name="F:System.Security.Cryptography.X509Certificates.X509FindType.FindByTimeExpired">
      <summary>The <paramref name="findValue" /> parameter for the <see cref="M:System.Security.Cryptography.X509Certificates.X509Certificate2Collection.Find(System.Security.Cryptography.X509Certificates.X509FindType,System.Object,System.Boolean)" /> must be a <see cref="T:System.DateTime" /> value in local time, such as <see cref="P:System.DateTime.Now" />. Note that the union of certificates returned using <see cref="F:System.Security.Cryptography.X509Certificates.X509FindType.FindByTimeValid" />, <see cref="F:System.Security.Cryptography.X509Certificates.X509FindType.FindByTimeNotYetValid" /> and <see cref="F:System.Security.Cryptography.X509Certificates.X509FindType.FindByTimeExpired" /> should represent all certificates in the queried collection.</summary>
    </member>
    <member name="F:System.Security.Cryptography.X509Certificates.X509FindType.FindByTemplateName">
      <summary>The <paramref name="findValue" /> parameter for the <see cref="M:System.Security.Cryptography.X509Certificates.X509Certificate2Collection.Find(System.Security.Cryptography.X509Certificates.X509FindType,System.Object,System.Boolean)" /> must be a string representing the template name of the certificate, such as "ClientAuth." A template name is an X509 version 3 extension that specifies the uses of the certificate.</summary>
    </member>
    <member name="F:System.Security.Cryptography.X509Certificates.X509FindType.FindByApplicationPolicy">
      <summary>The <paramref name="findValue" /> parameter for the <see cref="M:System.Security.Cryptography.X509Certificates.X509Certificate2Collection.Find(System.Security.Cryptography.X509Certificates.X509FindType,System.Object,System.Boolean)" /> must be a string representing either the application policy friendly name or the object identifier (<see cref="T:System.Security.Cryptography.Oid" />) of the certificate. For example, "Encrypting File System" or "1.3.6.1.4.1.311.10.3.4" can be used. Note that for an application that is going to be localized, the OID value must be used since the friendly name is localized.</summary>
    </member>
    <member name="F:System.Security.Cryptography.X509Certificates.X509FindType.FindByCertificatePolicy">
      <summary>The <paramref name="findValue" /> parameter for the <see cref="M:System.Security.Cryptography.X509Certificates.X509Certificate2Collection.Find(System.Security.Cryptography.X509Certificates.X509FindType,System.Object,System.Boolean)" /> must be a string representing either the friendly name or the object identifier (<see cref="T:System.Security.Cryptography.Oid" />) of the certificate policy. The best practice is to use the OID, such as "1.3.6.1.4.1.311.10.3.4". Note that for an application that is going to be localized, the OID must be used since the friendly name is localized.</summary>
    </member>
    <member name="F:System.Security.Cryptography.X509Certificates.X509FindType.FindByExtension">
      <summary>The <paramref name="findValue" /> parameter for the <see cref="M:System.Security.Cryptography.X509Certificates.X509Certificate2Collection.Find(System.Security.Cryptography.X509Certificates.X509FindType,System.Object,System.Boolean)" /> must be a string describing the extension to find. The object identifier (OID) is most commonly used to direct the <see cref="M:System.Security.Cryptography.X509Certificates.X509Certificate2Collection.Find(System.Security.Cryptography.X509Certificates.X509FindType,System.Object,System.Boolean)" /> method to search for all certificates that have an extension matching that OID value.</summary>
    </member>
    <member name="F:System.Security.Cryptography.X509Certificates.X509FindType.FindByKeyUsage">
      <summary>The <paramref name="findValue" /> parameter for the <see cref="M:System.Security.Cryptography.X509Certificates.X509Certificate2Collection.Find(System.Security.Cryptography.X509Certificates.X509FindType,System.Object,System.Boolean)" /> must be either a string representing the key usage or an integer representing a bit mask containing all the requested key usages. For the string value, only one key usage at a time can be specified, but the <see cref="M:System.Security.Cryptography.X509Certificates.X509Certificate2Collection.Find(System.Security.Cryptography.X509Certificates.X509FindType,System.Object,System.Boolean)" /> method can be used in a cascading sequence to get the intersection of the requested usages. For example, the <paramref name="findValue" /> parameter can be set to "KeyEncipherment" or an integer (0x30 indicates "KeyEncipherment" and "DataEncipherment"). Values of the <see cref="T:System.Security.Cryptography.X509Certificates.X509KeyUsageFlags" /> enumeration can also be used.</summary>
    </member>
    <member name="F:System.Security.Cryptography.X509Certificates.X509FindType.FindBySubjectKeyIdentifier">
      <summary>The <paramref name="findValue" /> parameter for the <see cref="M:System.Security.Cryptography.X509Certificates.X509Certificate2Collection.Find(System.Security.Cryptography.X509Certificates.X509FindType,System.Object,System.Boolean)" /> must be a string representing the subject key identifier in hexadecimal, such as "F3E815D45E83B8477B9284113C64EF208E897112," as displayed in the UI.</summary>
    </member>
    <member name="T:System.Security.Cryptography.X509Certificates.X509IncludeOption">
      <summary>Specifies how much of the X.509 certificate chain should be included in the X.509 data.</summary>
    </member>
    <member name="F:System.Security.Cryptography.X509Certificates.X509IncludeOption.None">
      <summary>No X.509 chain information is included.</summary>
    </member>
    <member name="F:System.Security.Cryptography.X509Certificates.X509IncludeOption.ExcludeRoot">
      <summary>The entire X.509 chain is included except for the root certificate.</summary>
    </member>
    <member name="F:System.Security.Cryptography.X509Certificates.X509IncludeOption.EndCertOnly">
      <summary>Only the end certificate is included in the X.509 chain information.</summary>
    </member>
    <member name="F:System.Security.Cryptography.X509Certificates.X509IncludeOption.WholeChain">
      <summary>The entire X.509 chain is included.</summary>
    </member>
    <member name="T:System.Security.Cryptography.X509Certificates.X509KeyUsageExtension">
      <summary>Defines the usage of a key contained within an X.509 certificate.  This class cannot be inherited.</summary>
    </member>
    <member name="M:System.Security.Cryptography.X509Certificates.X509KeyUsageExtension.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Security.Cryptography.X509Certificates.X509KeyUsageExtension" /> class.</summary>
    </member>
    <member name="M:System.Security.Cryptography.X509Certificates.X509KeyUsageExtension.#ctor(System.Security.Cryptography.AsnEncodedData,System.Boolean)">
      <summary>Initializes a new instance of the <see cref="T:System.Security.Cryptography.X509Certificates.X509KeyUsageExtension" /> class using an <see cref="T:System.Security.Cryptography.AsnEncodedData" /> object and a value that identifies whether the extension is critical. </summary>
      <param name="encodedKeyUsage">The encoded data to use to create the extension.</param>
      <param name="critical">true if the extension is critical; otherwise, false.</param>
    </member>
    <member name="M:System.Security.Cryptography.X509Certificates.X509KeyUsageExtension.#ctor(System.Security.Cryptography.X509Certificates.X509KeyUsageFlags,System.Boolean)">
      <summary>Initializes a new instance of the <see cref="T:System.Security.Cryptography.X509Certificates.X509KeyUsageExtension" /> class using the specified <see cref="T:System.Security.Cryptography.X509Certificates.X509KeyUsageFlags" /> value and a value that identifies whether the extension is critical. </summary>
      <param name="keyUsages">One of the <see cref="T:System.Security.Cryptography.X509Certificates.X509KeyUsageFlags" /> values that describes how to use the key.</param>
      <param name="critical">true if the extension is critical; otherwise, false.</param>
    </member>
    <member name="M:System.Security.Cryptography.X509Certificates.X509KeyUsageExtension.CopyFrom(System.Security.Cryptography.AsnEncodedData)">
      <summary>Initializes a new instance of the <see cref="T:System.Security.Cryptography.X509Certificates.X509KeyUsageExtension" /> class using an <see cref="T:System.Security.Cryptography.AsnEncodedData" /> object. </summary>
      <param name="asnEncodedData">The encoded data to use to create the extension.</param>
    </member>
    <member name="P:System.Security.Cryptography.X509Certificates.X509KeyUsageExtension.KeyUsages">
      <summary>Gets the key usage flag associated with the certificate.</summary>
      <returns>One of the <see cref="P:System.Security.Cryptography.X509Certificates.X509KeyUsageExtension.KeyUsages" /> values.</returns>
      <exception cref="T:System.Security.Cryptography.CryptographicException">The extension cannot be decoded. </exception>
    </member>
    <member name="T:System.Security.Cryptography.X509Certificates.X509KeyUsageFlags">
      <summary>Defines how the certificate key can be used. If this value is not defined, the key can be used for any purpose.</summary>
    </member>
    <member name="F:System.Security.Cryptography.X509Certificates.X509KeyUsageFlags.None">
      <summary>No key usage parameters.</summary>
    </member>
    <member name="F:System.Security.Cryptography.X509Certificates.X509KeyUsageFlags.EncipherOnly">
      <summary>The key can be used for encryption only.</summary>
    </member>
    <member name="F:System.Security.Cryptography.X509Certificates.X509KeyUsageFlags.CrlSign">
      <summary>The key can be used to sign a certificate revocation list (CRL).</summary>
    </member>
    <member name="F:System.Security.Cryptography.X509Certificates.X509KeyUsageFlags.KeyCertSign">
      <summary>The key can be used to sign certificates.</summary>
    </member>
    <member name="F:System.Security.Cryptography.X509Certificates.X509KeyUsageFlags.KeyAgreement">
      <summary>The key can be used to determine key agreement, such as a key created using the Diffie-Hellman key agreement algorithm.</summary>
    </member>
    <member name="F:System.Security.Cryptography.X509Certificates.X509KeyUsageFlags.DataEncipherment">
      <summary>The key can be used for data encryption.</summary>
    </member>
    <member name="F:System.Security.Cryptography.X509Certificates.X509KeyUsageFlags.KeyEncipherment">
      <summary>The key can be used for key encryption.</summary>
    </member>
    <member name="F:System.Security.Cryptography.X509Certificates.X509KeyUsageFlags.NonRepudiation">
      <summary>The key can be used for authentication.</summary>
    </member>
    <member name="F:System.Security.Cryptography.X509Certificates.X509KeyUsageFlags.DigitalSignature">
      <summary>The key can be used as a digital signature.</summary>
    </member>
    <member name="F:System.Security.Cryptography.X509Certificates.X509KeyUsageFlags.DecipherOnly">
      <summary>The key can be used for decryption only.</summary>
    </member>
    <member name="T:System.Security.Cryptography.X509Certificates.X509NameType">
      <summary>Specifies the type of name the X509 certificate contains.</summary>
    </member>
    <member name="F:System.Security.Cryptography.X509Certificates.X509NameType.SimpleName">
      <summary>The simple name of a subject or issuer of an X509 certificate.</summary>
    </member>
    <member name="F:System.Security.Cryptography.X509Certificates.X509NameType.EmailName">
      <summary>The email address of the subject or issuer associated of an X509 certificate.</summary>
    </member>
    <member name="F:System.Security.Cryptography.X509Certificates.X509NameType.UpnName">
      <summary>The UPN name of the subject or issuer of an X509 certificate.</summary>
    </member>
    <member name="F:System.Security.Cryptography.X509Certificates.X509NameType.DnsName">
      <summary>The DNS name associated with the alternative name of either the subject or issuer of an X509 certificate.</summary>
    </member>
    <member name="F:System.Security.Cryptography.X509Certificates.X509NameType.DnsFromAlternativeName">
      <summary>The DNS name associated with the alternative name of either the subject or the issuer of an X.509 certificate.  This value is equivalent to the <see cref="F:System.Security.Cryptography.X509Certificates.X509NameType.DnsName" /> value.</summary>
    </member>
    <member name="F:System.Security.Cryptography.X509Certificates.X509NameType.UrlName">
      <summary>The URL address associated with the alternative name of either the subject or issuer of an X509 certificate.</summary>
    </member>
    <member name="T:System.Security.Cryptography.X509Certificates.X509RevocationFlag">
      <summary>Specifies which X509 certificates in the chain should be checked for revocation.</summary>
    </member>
    <member name="F:System.Security.Cryptography.X509Certificates.X509RevocationFlag.EndCertificateOnly">
      <summary>Only the end certificate is checked for revocation.</summary>
    </member>
    <member name="F:System.Security.Cryptography.X509Certificates.X509RevocationFlag.EntireChain">
      <summary>The entire chain of certificates is checked for revocation.</summary>
    </member>
    <member name="F:System.Security.Cryptography.X509Certificates.X509RevocationFlag.ExcludeRoot">
      <summary>The entire chain, except the root certificate, is checked for revocation.</summary>
    </member>
    <member name="T:System.Security.Cryptography.X509Certificates.X509RevocationMode">
      <summary>Specifies the mode used to check for X509 certificate revocation.</summary>
    </member>
    <member name="F:System.Security.Cryptography.X509Certificates.X509RevocationMode.NoCheck">
      <summary>No revocation check is performed on the certificate.</summary>
    </member>
    <member name="F:System.Security.Cryptography.X509Certificates.X509RevocationMode.Online">
      <summary>A revocation check is made using an online certificate revocation list (CRL).</summary>
    </member>
    <member name="F:System.Security.Cryptography.X509Certificates.X509RevocationMode.Offline">
      <summary>A revocation check is made using a cached certificate revocation list (CRL).</summary>
    </member>
    <member name="T:System.Security.Cryptography.X509Certificates.X509Store">
      <summary>Represents an X.509 store, which is a physical store where certificates are persisted and managed. This class cannot be inherited.</summary>
    </member>
    <member name="M:System.Security.Cryptography.X509Certificates.X509Store.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Security.Cryptography.X509Certificates.X509Store" /> class using the personal certificates of the current user store.</summary>
    </member>
    <member name="M:System.Security.Cryptography.X509Certificates.X509Store.#ctor(System.IntPtr)">
      <summary>Initializes a new instance of the <see cref="T:System.Security.Cryptography.X509Certificates.X509Store" /> class using an Intptr handle to an HCERTSTORE store.</summary>
      <param name="storeHandle">A handle to an HCERTSTORE store.</param>
      <exception cref="T:System.ArgumentNullException">The <paramref name="storeHandle" /> parameter is null.</exception>
      <exception cref="T:System.Security.Cryptography.CryptographicException">The <paramref name="storeHandle" /> parameter points to an invalid context.</exception>
    </member>
    <member name="M:System.Security.Cryptography.X509Certificates.X509Store.#ctor(System.Security.Cryptography.X509Certificates.StoreLocation)">
      <summary>Initializes a new instance of the <see cref="T:System.Security.Cryptography.X509Certificates.X509Store" /> class using the specified T:System.Security.Cryptography.X509Certificates.StoreLocation value.</summary>
      <param name="storeLocation">One of the enumeration values that specifies the location of the X.509 certificate store. </param>
    </member>
    <member name="M:System.Security.Cryptography.X509Certificates.X509Store.#ctor(System.Security.Cryptography.X509Certificates.StoreName)">
      <summary>Initializes a new instance of the <see cref="T:System.Security.Cryptography.X509Certificates.X509Store" /> class using the specified T:System.Security.Cryptography.X509Certificates.StoreName value.</summary>
      <param name="storeName">One of the enumeration values that specifies the name of the X.509 certificate store. </param>
    </member>
    <member name="M:System.Security.Cryptography.X509Certificates.X509Store.#ctor(System.Security.Cryptography.X509Certificates.StoreName,System.Security.Cryptography.X509Certificates.StoreLocation)">
      <summary>Initializes a new instance of the <see cref="T:System.Security.Cryptography.X509Certificates.X509Store" /> class using the specified T:System.Security.Cryptography.X509Certificates.StoreName and T:System.Security.Cryptography.X509Certificates.StoreLocation values.</summary>
      <param name="storeName">One of the enumeration values that specifies the name of the X.509 certificate store. </param>
      <param name="storeLocation">One of the enumeration values that specifies the location of the X.509 certificate store. </param>
      <exception cref="T:System.ArgumentException">
        <paramref name="storeLocation" /> is not a valid location or <paramref name="storeName" /> is not a valid name. </exception>
    </member>
    <member name="M:System.Security.Cryptography.X509Certificates.X509Store.#ctor(System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.Security.Cryptography.X509Certificates.X509Store" /> class using the specified store name.</summary>
      <param name="storeName">A string value that represents the store name. See <see cref="T:System.Security.Cryptography.X509Certificates.StoreName" />  for more information. </param>
    </member>
    <member name="M:System.Security.Cryptography.X509Certificates.X509Store.#ctor(System.String,System.Security.Cryptography.X509Certificates.StoreLocation)">
      <summary>Initializes a new instance of the <see cref="T:System.Security.Cryptography.X509Certificates.X509Store" /> class using a string that represents a value from the <see cref="T:System.Security.Cryptography.X509Certificates.StoreName" /> enumeration and a value from the <see cref="T:System.Security.Cryptography.X509Certificates.StoreLocation" /> enumeration.</summary>
      <param name="storeName">A string that represents a value from the <see cref="T:System.Security.Cryptography.X509Certificates.StoreName" /> enumeration. </param>
      <param name="storeLocation">One of the enumeration values that specifies the location of the X.509 certificate store. </param>
      <exception cref="T:System.ArgumentException">
        <paramref name="storeLocation" /> contains invalid values. </exception>
    </member>
    <member name="M:System.Security.Cryptography.X509Certificates.X509Store.Add(System.Security.Cryptography.X509Certificates.X509Certificate2)">
      <summary>Adds a certificate to an X.509 certificate store.</summary>
      <param name="certificate">The certificate to add. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="certificate" /> is null. </exception>
      <exception cref="T:System.Security.Cryptography.CryptographicException">The certificate could not be added to the store.</exception>
    </member>
    <member name="M:System.Security.Cryptography.X509Certificates.X509Store.AddRange(System.Security.Cryptography.X509Certificates.X509Certificate2Collection)">
      <summary>Adds a collection of certificates to an X.509 certificate store.</summary>
      <param name="certificates">The collection of certificates to add. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="certificates" /> is null. </exception>
      <exception cref="T:System.Security.SecurityException">The caller does not have the required permission. </exception>
    </member>
    <member name="P:System.Security.Cryptography.X509Certificates.X509Store.Certificates">
      <summary>Returns a collection of certificates located in an X.509 certificate store.</summary>
      <returns>A collection of certificates.</returns>
    </member>
    <member name="M:System.Security.Cryptography.X509Certificates.X509Store.Close">
      <summary>Closes an X.509 certificate store.</summary>
    </member>
    <member name="P:System.Security.Cryptography.X509Certificates.X509Store.Location">
      <summary>Gets the location of the X.509 certificate store.</summary>
      <returns>The location of the certificate store.</returns>
    </member>
    <member name="P:System.Security.Cryptography.X509Certificates.X509Store.Name">
      <summary>Gets the name of the X.509 certificate store.</summary>
      <returns>The name of the certificate store.</returns>
    </member>
    <member name="M:System.Security.Cryptography.X509Certificates.X509Store.Open(System.Security.Cryptography.X509Certificates.OpenFlags)">
      <summary>Opens an X.509 certificate store or creates a new store, depending on <see cref="T:System.Security.Cryptography.X509Certificates.OpenFlags" /> flag settings.</summary>
      <param name="flags">A bitwise combination of enumeration values that specifies the way to open the X.509 certificate store. </param>
      <exception cref="T:System.Security.Cryptography.CryptographicException">The store is unreadable. </exception>
      <exception cref="T:System.Security.SecurityException">The caller does not have the required permission. </exception>
      <exception cref="T:System.ArgumentException">The store contains invalid values.</exception>
    </member>
    <member name="M:System.Security.Cryptography.X509Certificates.X509Store.Remove(System.Security.Cryptography.X509Certificates.X509Certificate2)">
      <summary>Removes a certificate from an X.509 certificate store.</summary>
      <param name="certificate">The certificate to remove.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="certificate" /> is null. </exception>
      <exception cref="T:System.Security.SecurityException">The caller does not have the required permission. </exception>
    </member>
    <member name="M:System.Security.Cryptography.X509Certificates.X509Store.RemoveRange(System.Security.Cryptography.X509Certificates.X509Certificate2Collection)">
      <summary>Removes a range of certificates from an X.509 certificate store.</summary>
      <param name="certificates">A range of certificates to remove.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="certificates" /> is null. </exception>
      <exception cref="T:System.Security.SecurityException">The caller does not have the required permission. </exception>
    </member>
    <member name="P:System.Security.Cryptography.X509Certificates.X509Store.StoreHandle">
      <summary>Gets an <see cref="T:System.IntPtr" /> handle to an HCERTSTORE store.  </summary>
      <returns>A handle to an HCERTSTORE store.</returns>
      <exception cref="T:System.Security.Cryptography.CryptographicException">The store is not open. </exception>
    </member>
    <member name="T:System.Security.Cryptography.X509Certificates.X509SubjectKeyIdentifierExtension">
      <summary>Defines a string that identifies a certificate's subject key identifier (SKI). This class cannot be inherited.</summary>
    </member>
    <member name="M:System.Security.Cryptography.X509Certificates.X509SubjectKeyIdentifierExtension.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Security.Cryptography.X509Certificates.X509SubjectKeyIdentifierExtension" /> class.</summary>
    </member>
    <member name="M:System.Security.Cryptography.X509Certificates.X509SubjectKeyIdentifierExtension.#ctor(System.Byte[],System.Boolean)">
      <summary>Initializes a new instance of the <see cref="T:System.Security.Cryptography.X509Certificates.X509SubjectKeyIdentifierExtension" /> class using a byte array and a value that identifies whether the extension is critical.</summary>
      <param name="subjectKeyIdentifier">A byte array that represents data to use to create the extension.</param>
      <param name="critical">true if the extension is critical; otherwise, false.</param>
    </member>
    <member name="M:System.Security.Cryptography.X509Certificates.X509SubjectKeyIdentifierExtension.#ctor(System.Security.Cryptography.AsnEncodedData,System.Boolean)">
      <summary>Initializes a new instance of the <see cref="T:System.Security.Cryptography.X509Certificates.X509SubjectKeyIdentifierExtension" /> class using encoded data and a value that identifies whether the extension is critical.</summary>
      <param name="encodedSubjectKeyIdentifier">The <see cref="T:System.Security.Cryptography.AsnEncodedData" /> object to use to create the extension.</param>
      <param name="critical">true if the extension is critical; otherwise, false.</param>
    </member>
    <member name="M:System.Security.Cryptography.X509Certificates.X509SubjectKeyIdentifierExtension.#ctor(System.Security.Cryptography.X509Certificates.PublicKey,System.Boolean)">
      <summary>Initializes a new instance of the <see cref="T:System.Security.Cryptography.X509Certificates.X509SubjectKeyIdentifierExtension" /> class using a public key and a value indicating whether the extension is critical.</summary>
      <param name="key">A <see cref="T:System.Security.Cryptography.X509Certificates.PublicKey" />  object to create a subject key identifier (SKI) from. </param>
      <param name="critical">true if the extension is critical; otherwise, false.</param>
    </member>
    <member name="M:System.Security.Cryptography.X509Certificates.X509SubjectKeyIdentifierExtension.#ctor(System.Security.Cryptography.X509Certificates.PublicKey,System.Security.Cryptography.X509Certificates.X509SubjectKeyIdentifierHashAlgorithm,System.Boolean)">
      <summary>Initializes a new instance of the <see cref="T:System.Security.Cryptography.X509Certificates.X509SubjectKeyIdentifierExtension" /> class using a public key, a hash algorithm identifier, and a value indicating whether the extension is critical. </summary>
      <param name="key">A <see cref="T:System.Security.Cryptography.X509Certificates.PublicKey" /> object to create a subject key identifier (SKI) from.</param>
      <param name="algorithm">One of the <see cref="T:System.Security.Cryptography.X509Certificates.X509SubjectKeyIdentifierHashAlgorithm" /> values that identifies which hash algorithm to use.</param>
      <param name="critical">true if the extension is critical; otherwise, false.</param>
    </member>
    <member name="M:System.Security.Cryptography.X509Certificates.X509SubjectKeyIdentifierExtension.#ctor(System.String,System.Boolean)">
      <summary>Initializes a new instance of the <see cref="T:System.Security.Cryptography.X509Certificates.X509SubjectKeyIdentifierExtension" /> class using a string and a value that identifies whether the extension is critical.</summary>
      <param name="subjectKeyIdentifier">A string, encoded in hexadecimal format, that represents the subject key identifier (SKI) for a certificate.</param>
      <param name="critical">true if the extension is critical; otherwise, false.</param>
    </member>
    <member name="M:System.Security.Cryptography.X509Certificates.X509SubjectKeyIdentifierExtension.CopyFrom(System.Security.Cryptography.AsnEncodedData)">
      <summary>Creates a new instance of the <see cref="T:System.Security.Cryptography.X509Certificates.X509SubjectKeyIdentifierExtension" /> class by copying information from encoded data.</summary>
      <param name="asnEncodedData">The <see cref="T:System.Security.Cryptography.AsnEncodedData" /> object to use to create the extension.</param>
    </member>
    <member name="P:System.Security.Cryptography.X509Certificates.X509SubjectKeyIdentifierExtension.SubjectKeyIdentifier">
      <summary>Gets a string that represents the subject key identifier (SKI) for a certificate.</summary>
      <returns>A string, encoded in hexadecimal format, that represents the subject key identifier (SKI).</returns>
      <exception cref="T:System.Security.Cryptography.CryptographicException">The extension cannot be decoded. </exception>
    </member>
    <member name="T:System.Security.Cryptography.X509Certificates.X509SubjectKeyIdentifierHashAlgorithm">
      <summary>Defines the type of hash algorithm to use with the <see cref="T:System.Security.Cryptography.X509Certificates.X509SubjectKeyIdentifierExtension" /> class.</summary>
    </member>
    <member name="F:System.Security.Cryptography.X509Certificates.X509SubjectKeyIdentifierHashAlgorithm.Sha1">
      <summary>The SKI is composed of the 160-bit SHA-1 hash of the value of the public key (excluding the tag, length, and number of unused bits).</summary>
    </member>
    <member name="F:System.Security.Cryptography.X509Certificates.X509SubjectKeyIdentifierHashAlgorithm.ShortSha1">
      <summary>The SKI is composed of a four-bit type field with the value 0100, followed by the least significant 60 bits of the SHA-1 hash of the value of the public key (excluding the tag, length, and number of unused bit string bits)</summary>
    </member>
    <member name="F:System.Security.Cryptography.X509Certificates.X509SubjectKeyIdentifierHashAlgorithm.CapiSha1">
      <summary>The subject key identifier (SKI) is composed of a 160-bit SHA-1 hash of the encoded public key (including the tag, length, and number of unused bits).</summary>
    </member>
    <member name="T:System.Security.Cryptography.X509Certificates.X509VerificationFlags">
      <summary>Specifies conditions under which verification of certificates in the X509 chain should be conducted.</summary>
    </member>
    <member name="F:System.Security.Cryptography.X509Certificates.X509VerificationFlags.NoFlag">
      <summary>No flags pertaining to verification are included.</summary>
    </member>
    <member name="F:System.Security.Cryptography.X509Certificates.X509VerificationFlags.IgnoreNotTimeValid">
      <summary>Ignore certificates in the chain that are not valid either because they have expired or they are not yet in effect when determining certificate validity.</summary>
    </member>
    <member name="F:System.Security.Cryptography.X509Certificates.X509VerificationFlags.IgnoreCtlNotTimeValid">
      <summary>Ignore that the certificate trust list (CTL) is not valid, for reasons such as the CTL has expired, when determining certificate verification.</summary>
    </member>
    <member name="F:System.Security.Cryptography.X509Certificates.X509VerificationFlags.IgnoreNotTimeNested">
      <summary>Ignore that the CA (certificate authority) certificate and the issued certificate have validity periods that are not nested when verifying the certificate. For example, the CA cert can be valid from January 1 to December 1 and the issued certificate from January 2 to December 2, which would mean the validity periods are not nested.</summary>
    </member>
    <member name="F:System.Security.Cryptography.X509Certificates.X509VerificationFlags.IgnoreInvalidBasicConstraints">
      <summary>Ignore that the basic constraints are not valid when determining certificate verification.</summary>
    </member>
    <member name="F:System.Security.Cryptography.X509Certificates.X509VerificationFlags.AllowUnknownCertificateAuthority">
      <summary>Ignore that the chain cannot be verified due to an unknown certificate authority (CA).</summary>
    </member>
    <member name="F:System.Security.Cryptography.X509Certificates.X509VerificationFlags.IgnoreWrongUsage">
      <summary>Ignore that the certificate was not issued for the current use when determining certificate verification.</summary>
    </member>
    <member name="F:System.Security.Cryptography.X509Certificates.X509VerificationFlags.IgnoreInvalidName">
      <summary>Ignore that the certificate has an invalid name when determining certificate verification.</summary>
    </member>
    <member name="F:System.Security.Cryptography.X509Certificates.X509VerificationFlags.IgnoreInvalidPolicy">
      <summary>Ignore that the certificate has invalid policy when determining certificate verification.</summary>
    </member>
    <member name="F:System.Security.Cryptography.X509Certificates.X509VerificationFlags.IgnoreEndRevocationUnknown">
      <summary>Ignore that the end certificate (the user certificate) revocation is unknown when determining certificate verification.</summary>
    </member>
    <member name="F:System.Security.Cryptography.X509Certificates.X509VerificationFlags.IgnoreCtlSignerRevocationUnknown">
      <summary>Ignore that the certificate trust list (CTL) signer revocation is unknown when determining certificate verification.</summary>
    </member>
    <member name="F:System.Security.Cryptography.X509Certificates.X509VerificationFlags.IgnoreCertificateAuthorityRevocationUnknown">
      <summary>Ignore that the certificate authority revocation is unknown when determining certificate verification.</summary>
    </member>
    <member name="F:System.Security.Cryptography.X509Certificates.X509VerificationFlags.IgnoreRootRevocationUnknown">
      <summary>Ignore that the root revocation is unknown when determining certificate verification.</summary>
    </member>
    <member name="F:System.Security.Cryptography.X509Certificates.X509VerificationFlags.AllFlags">
      <summary>All flags pertaining to verification are included.</summary>
    </member>
    <member name="T:System.Security.Permissions.ResourcePermissionBase">
      <summary>Allows control of code access security permissions.</summary>
    </member>
    <member name="M:System.Security.Permissions.ResourcePermissionBase.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Security.Permissions.ResourcePermissionBase" /> class.</summary>
    </member>
    <member name="M:System.Security.Permissions.ResourcePermissionBase.#ctor(System.Security.Permissions.PermissionState)">
      <summary>Initializes a new instance of the <see cref="T:System.Security.Permissions.ResourcePermissionBase" /> class with the specified level of access to resources at creation.</summary>
      <param name="state">One of the <see cref="T:System.Security.Permissions.PermissionState" /> values. </param>
      <exception cref="T:System.ArgumentException">The <paramref name="state" /> parameter is not a valid value of <see cref="T:System.Security.Permissions.PermissionState" />. </exception>
    </member>
    <member name="M:System.Security.Permissions.ResourcePermissionBase.AddPermissionAccess(System.Security.Permissions.ResourcePermissionBaseEntry)">
      <summary>Adds a permission entry to the permission.</summary>
      <param name="entry">The <see cref="T:System.Security.Permissions.ResourcePermissionBaseEntry" /> to add. </param>
      <exception cref="T:System.ArgumentNullException">The specified <see cref="T:System.Security.Permissions.ResourcePermissionBaseEntry" /> is null. </exception>
      <exception cref="T:System.InvalidOperationException">The number of elements in the <see cref="P:System.Security.Permissions.ResourcePermissionBaseEntry.PermissionAccessPath" /> property is not equal to the number of elements in the <see cref="P:System.Security.Permissions.ResourcePermissionBase.TagNames" /> property.-or- The <see cref="T:System.Security.Permissions.ResourcePermissionBaseEntry" /> is already included in the permission. </exception>
    </member>
    <member name="F:System.Security.Permissions.ResourcePermissionBase.Any">
      <summary>Specifies the character to be used to represent the any wildcard character.</summary>
    </member>
    <member name="M:System.Security.Permissions.ResourcePermissionBase.Clear">
      <summary>Clears the permission of the added permission entries.</summary>
    </member>
    <member name="M:System.Security.Permissions.ResourcePermissionBase.Copy">
      <summary>Creates and returns an identical copy of the current permission object.</summary>
      <returns>A copy of the current permission object.</returns>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="M:System.Security.Permissions.ResourcePermissionBase.FromXml(System.Security.SecurityElement)">
      <summary>Reconstructs a security object with a specified state from an XML encoding.</summary>
      <param name="securityElement">The XML encoding to use to reconstruct the security object. </param>
      <exception cref="T:System.ArgumentException">The <paramref name="securityElement" /> parameter is not a valid permission element.-or- The version number of the <paramref name="securityElement" /> parameter is not supported.</exception>
      <exception cref="T:System.ArgumentNullException">The <paramref name="securityElement" /> parameter is null.</exception>
    </member>
    <member name="M:System.Security.Permissions.ResourcePermissionBase.GetPermissionEntries">
      <summary>Returns an array of the <see cref="T:System.Security.Permissions.ResourcePermissionBaseEntry" /> objects added to this permission.</summary>
      <returns>An array of <see cref="T:System.Security.Permissions.ResourcePermissionBaseEntry" /> objects that were added to this permission.</returns>
    </member>
    <member name="M:System.Security.Permissions.ResourcePermissionBase.Intersect(System.Security.IPermission)">
      <summary>Creates and returns a permission object that is the intersection of the current permission object and a target permission object.</summary>
      <returns>A new permission object that represents the intersection of the current object and the specified target. This object is null if the intersection is empty.</returns>
      <param name="target">A permission object of the same type as the current permission object. </param>
      <exception cref="T:System.ArgumentException">The target permission object is not of the same type as the current permission object. </exception>
    </member>
    <member name="M:System.Security.Permissions.ResourcePermissionBase.IsSubsetOf(System.Security.IPermission)">
      <summary>Determines whether the current permission object is a subset of the specified permission.</summary>
      <returns>true if the current permission object is a subset of the specified permission object; otherwise, false.</returns>
      <param name="target">A permission object that is to be tested for the subset relationship. </param>
    </member>
    <member name="M:System.Security.Permissions.ResourcePermissionBase.IsUnrestricted">
      <summary>Gets a value indicating whether the permission is unrestricted.</summary>
      <returns>true if permission is unrestricted; otherwise, false.</returns>
    </member>
    <member name="F:System.Security.Permissions.ResourcePermissionBase.Local">
      <summary>Specifies the character to be used to represent a local reference.</summary>
    </member>
    <member name="P:System.Security.Permissions.ResourcePermissionBase.PermissionAccessType">
      <summary>Gets or sets an enumeration value that describes the types of access that you are giving the resource.</summary>
      <returns>An enumeration value that is derived from <see cref="T:System.Type" /> and describes the types of access that you are giving the resource.</returns>
      <exception cref="T:System.ArgumentNullException">The property value is null. </exception>
      <exception cref="T:System.ArgumentException">The property value is not an enumeration value. </exception>
    </member>
    <member name="M:System.Security.Permissions.ResourcePermissionBase.RemovePermissionAccess(System.Security.Permissions.ResourcePermissionBaseEntry)">
      <summary>Removes a permission entry from the permission.</summary>
      <param name="entry">The <see cref="T:System.Security.Permissions.ResourcePermissionBaseEntry" /> to remove. </param>
      <exception cref="T:System.ArgumentNullException">The specified <see cref="T:System.Security.Permissions.ResourcePermissionBaseEntry" /> is null. </exception>
      <exception cref="T:System.InvalidOperationException">The number of elements in the <see cref="P:System.Security.Permissions.ResourcePermissionBaseEntry.PermissionAccessPath" /> property is not equal to the number of elements in the <see cref="P:System.Security.Permissions.ResourcePermissionBase.TagNames" /> property.-or- The <see cref="T:System.Security.Permissions.ResourcePermissionBaseEntry" /> is not in the permission. </exception>
    </member>
    <member name="P:System.Security.Permissions.ResourcePermissionBase.TagNames">
      <summary>Gets or sets an array of strings that identify the resource you are protecting.</summary>
      <returns>An array of strings that identify the resource you are trying to protect.</returns>
      <exception cref="T:System.ArgumentNullException">The property value is null. </exception>
      <exception cref="T:System.ArgumentException">The length of the array is 0. </exception>
    </member>
    <member name="M:System.Security.Permissions.ResourcePermissionBase.ToXml">
      <summary>Creates and returns an XML encoding of the security object and its current state.</summary>
      <returns>An XML encoding of the security object, including any state information.</returns>
    </member>
    <member name="M:System.Security.Permissions.ResourcePermissionBase.Union(System.Security.IPermission)">
      <summary>Creates a permission object that combines the current permission object and the target permission object.</summary>
      <returns>A new permission object that represents the union of the current permission object and the specified permission object.</returns>
      <param name="target">A permission object to combine with the current permission object. It must be of the same type as the current permission object. </param>
      <exception cref="T:System.ArgumentException">The <paramref name="target" /> permission object is not of the same type as the current permission object. </exception>
    </member>
    <member name="T:System.Security.Permissions.ResourcePermissionBaseEntry">
      <summary>Defines the smallest unit of a code access security permission set.</summary>
    </member>
    <member name="M:System.Security.Permissions.ResourcePermissionBaseEntry.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Security.Permissions.ResourcePermissionBaseEntry" /> class.</summary>
    </member>
    <member name="M:System.Security.Permissions.ResourcePermissionBaseEntry.#ctor(System.Int32,System.String[])">
      <summary>Initializes a new instance of the <see cref="T:System.Security.Permissions.ResourcePermissionBaseEntry" /> class with the specified permission access and permission access path.</summary>
      <param name="permissionAccess">The integer representation of the permission access level enumeration value. The <see cref="P:System.Security.Permissions.ResourcePermissionBaseEntry.PermissionAccess" /> property is set to this value. </param>
      <param name="permissionAccessPath">The array of strings that identify the resource you are protecting. The <see cref="P:System.Security.Permissions.ResourcePermissionBaseEntry.PermissionAccessPath" /> property is set to this value. </param>
      <exception cref="T:System.ArgumentNullException">The specified <paramref name="permissionAccessPath" /> is null. </exception>
    </member>
    <member name="P:System.Security.Permissions.ResourcePermissionBaseEntry.PermissionAccess">
      <summary>Gets an integer representation of the access level enumeration value.</summary>
      <returns>The access level enumeration value.</returns>
    </member>
    <member name="P:System.Security.Permissions.ResourcePermissionBaseEntry.PermissionAccessPath">
      <summary>Gets an array of strings that identify the resource you are protecting.</summary>
      <returns>An array of strings that identify the resource you are protecting.</returns>
    </member>
    <member name="T:System.Security.Permissions.StorePermission">
      <summary>Controls access to stores containing X.509 certificates. This class cannot be inherited.</summary>
    </member>
    <member name="M:System.Security.Permissions.StorePermission.#ctor(System.Security.Permissions.PermissionState)">
      <summary>Initializes a new instance of the <see cref="T:System.Security.Permissions.StorePermission" /> class with either fully restricted or unrestricted permission state.</summary>
      <param name="state">One of the <see cref="T:System.Security.Permissions.PermissionState" /> values. </param>
      <exception cref="T:System.ArgumentException">
        <paramref name="state" /> is not a valid <see cref="T:System.Security.Permissions.PermissionState" /> value. </exception>
    </member>
    <member name="M:System.Security.Permissions.StorePermission.#ctor(System.Security.Permissions.StorePermissionFlags)">
      <summary>Initializes a new instance of the <see cref="T:System.Security.Permissions.StorePermission" /> class with the specified access.</summary>
      <param name="flag">A bitwise combination of the <see cref="T:System.Security.Permissions.StorePermissionFlags" /> values. </param>
      <exception cref="T:System.ArgumentException">
        <paramref name="flag" /> is not a valid combination of <see cref="T:System.Security.Permissions.StorePermissionFlags" /> values. </exception>
    </member>
    <member name="M:System.Security.Permissions.StorePermission.Copy">
      <summary>Creates and returns an identical copy of the current permission.</summary>
      <returns>A copy of the current permission.</returns>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
      </PermissionSet>
    </member>
    <member name="P:System.Security.Permissions.StorePermission.Flags">
      <summary>Gets or sets the type of <see cref="T:System.Security.Cryptography.X509Certificates.X509Store" /> access allowed by the current permission.</summary>
      <returns>A bitwise combination of the <see cref="T:System.Security.Permissions.StorePermissionFlags" /> values.</returns>
      <exception cref="T:System.ArgumentException">An attempt is made to set this property to an invalid value. See <see cref="T:System.Security.Permissions.StorePermissionFlags" /> for the valid values. </exception>
    </member>
    <member name="M:System.Security.Permissions.StorePermission.FromXml(System.Security.SecurityElement)">
      <summary>Reconstructs a permission with a specified state from an XML encoding.</summary>
      <param name="securityElement">A <see cref="T:System.Security.SecurityElement" /> that contains the XML encoding to use to reconstruct the permission. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="securityElement" /> is null. </exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="securityElement" /> is not a valid permission element.-or- The version number in <paramref name="securityElement" /> is not valid. </exception>
    </member>
    <member name="M:System.Security.Permissions.StorePermission.Intersect(System.Security.IPermission)">
      <summary>Creates and returns a permission that is the intersection of the current permission and the specified permission.</summary>
      <returns>A new permission that represents the intersection of the current permission and the specified permission. This new permission is null if the intersection is empty.</returns>
      <param name="target">A permission to intersect with the current permission. It must be of the same type as the current permission. </param>
      <exception cref="T:System.ArgumentException">
        <paramref name="target" /> s not null and is not of the same type as the current permission. </exception>
    </member>
    <member name="M:System.Security.Permissions.StorePermission.IsSubsetOf(System.Security.IPermission)">
      <summary>Determines whether the current permission is a subset of the specified permission.</summary>
      <returns>true if the current permission is a subset of the specified permission; otherwise, false.</returns>
      <param name="target">A permission to test for the subset relationship. This permission must be of the same type as the current permission. </param>
      <exception cref="T:System.ArgumentException">
        <paramref name="target" /> is not null and is not of the same type as the current permission. </exception>
    </member>
    <member name="M:System.Security.Permissions.StorePermission.IsUnrestricted">
      <summary>Returns a value indicating whether the current permission is unrestricted.</summary>
      <returns>true if the current permission is unrestricted; otherwise, false.</returns>
    </member>
    <member name="M:System.Security.Permissions.StorePermission.ToXml">
      <summary>Creates an XML encoding of the permission and its current state.</summary>
      <returns>A <see cref="T:System.Security.SecurityElement" /> that contains an XML encoding of the permission, including any state information.</returns>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="M:System.Security.Permissions.StorePermission.Union(System.Security.IPermission)">
      <summary>Creates a permission that is the union of the current permission and the specified permission.</summary>
      <returns>A new permission that represents the union of the current permission and the specified permission.</returns>
      <param name="target">A permission to combine with the current permission. It must be of the same type as the current permission. </param>
      <exception cref="T:System.ArgumentException">
        <paramref name="target" /> is not null and is not of the same type as the current permission. </exception>
    </member>
    <member name="T:System.Security.Permissions.StorePermissionAttribute">
      <summary>Allows security actions for <see cref="T:System.Security.Permissions.StorePermission" /> to be applied to code using declarative security. This class cannot be inherited.</summary>
    </member>
    <member name="M:System.Security.Permissions.StorePermissionAttribute.#ctor(System.Security.Permissions.SecurityAction)">
      <summary>Initializes a new instance of the <see cref="T:System.Security.Permissions.StorePermissionAttribute" /> class with the specified security action.</summary>
      <param name="action">One of the <see cref="T:System.Security.Permissions.SecurityAction" /> values. </param>
    </member>
    <member name="P:System.Security.Permissions.StorePermissionAttribute.AddToStore">
      <summary>Gets or sets a value indicating whether the code is permitted to add to a store.</summary>
      <returns>true if the ability to add to a store is allowed; otherwise, false.</returns>
    </member>
    <member name="M:System.Security.Permissions.StorePermissionAttribute.CreatePermission">
      <summary>Creates and returns a new <see cref="T:System.Security.Permissions.StorePermission" />.</summary>
      <returns>A <see cref="T:System.Security.Permissions.StorePermission" /> that corresponds to the attribute.</returns>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
      </PermissionSet>
    </member>
    <member name="P:System.Security.Permissions.StorePermissionAttribute.CreateStore">
      <summary>Gets or sets a value indicating whether the code is permitted to create a store.</summary>
      <returns>true if the ability to create a store is allowed; otherwise, false.</returns>
    </member>
    <member name="P:System.Security.Permissions.StorePermissionAttribute.DeleteStore">
      <summary>Gets or sets a value indicating whether the code is permitted to delete a store.</summary>
      <returns>true if the ability to delete a store is allowed; otherwise, false.</returns>
    </member>
    <member name="P:System.Security.Permissions.StorePermissionAttribute.EnumerateCertificates">
      <summary>Gets or sets a value indicating whether the code is permitted to enumerate the certificates in a store.</summary>
      <returns>true if the ability to enumerate certificates is allowed; otherwise, false.</returns>
    </member>
    <member name="P:System.Security.Permissions.StorePermissionAttribute.EnumerateStores">
      <summary>Gets or sets a value indicating whether the code is permitted to enumerate stores.</summary>
      <returns>true if the ability to enumerate stores is allowed; otherwise, false.</returns>
    </member>
    <member name="P:System.Security.Permissions.StorePermissionAttribute.Flags">
      <summary>Gets or sets the store permissions.</summary>
      <returns>A bitwise combination of the <see cref="T:System.Security.Permissions.StorePermissionFlags" /> values. The default is <see cref="F:System.Security.Permissions.StorePermissionFlags.NoFlags" />.</returns>
    </member>
    <member name="P:System.Security.Permissions.StorePermissionAttribute.OpenStore">
      <summary>Gets or sets a value indicating whether the code is permitted to open a store.</summary>
      <returns>true if the ability to open a store is allowed; otherwise, false.</returns>
    </member>
    <member name="P:System.Security.Permissions.StorePermissionAttribute.RemoveFromStore">
      <summary>Gets or sets a value indicating whether the code is permitted to remove a certificate from a store.</summary>
      <returns>true if the ability to remove a certificate from a store is allowed; otherwise, false.</returns>
    </member>
    <member name="T:System.Security.Permissions.StorePermissionFlags">
      <summary>Specifies the permitted access to X.509 certificate stores.</summary>
    </member>
    <member name="F:System.Security.Permissions.StorePermissionFlags.NoFlags">
      <summary>Permission is not given to perform any certificate or store operations.</summary>
    </member>
    <member name="F:System.Security.Permissions.StorePermissionFlags.CreateStore">
      <summary>The ability to create a new store.</summary>
    </member>
    <member name="F:System.Security.Permissions.StorePermissionFlags.DeleteStore">
      <summary>The ability to delete a store.</summary>
    </member>
    <member name="F:System.Security.Permissions.StorePermissionFlags.EnumerateStores">
      <summary>The ability to enumerate the stores on a computer.</summary>
    </member>
    <member name="F:System.Security.Permissions.StorePermissionFlags.OpenStore">
      <summary>The ability to open a store.</summary>
    </member>
    <member name="F:System.Security.Permissions.StorePermissionFlags.AddToStore">
      <summary>The ability to add a certificate to a store.</summary>
    </member>
    <member name="F:System.Security.Permissions.StorePermissionFlags.RemoveFromStore">
      <summary>The ability to remove a certificate from a store.</summary>
    </member>
    <member name="F:System.Security.Permissions.StorePermissionFlags.EnumerateCertificates">
      <summary>The ability to enumerate the certificates in a store.</summary>
    </member>
    <member name="F:System.Security.Permissions.StorePermissionFlags.AllFlags">
      <summary>The ability to perform all certificate and store operations.</summary>
    </member>
    <member name="T:System.Security.Permissions.TypeDescriptorPermission">
      <summary>Defines partial-trust access to the <see cref="T:System.ComponentModel.TypeDescriptor" /> class.</summary>
    </member>
    <member name="M:System.Security.Permissions.TypeDescriptorPermission.#ctor(System.Security.Permissions.PermissionState)">
      <summary>Initializes a new instance of the <see cref="T:System.Security.Permissions.TypeDescriptorPermission" /> class. </summary>
      <param name="state">The <see cref="T:System.Security.Permissions.PermissionState" /> to request. Only <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" />  and <see cref="F:System.Security.Permissions.PermissionState.None" /> are valid.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="state" /> is not a valid permission state. Only <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" />  and <see cref="F:System.Security.Permissions.PermissionState.None" /> are valid. </exception>
    </member>
    <member name="M:System.Security.Permissions.TypeDescriptorPermission.#ctor(System.Security.Permissions.TypeDescriptorPermissionFlags)">
      <summary>Initializes a new instance of the <see cref="T:System.Security.Permissions.TypeDescriptorPermission" /> class with the specified permission flags. </summary>
      <param name="flag">The permission flags to request.</param>
    </member>
    <member name="M:System.Security.Permissions.TypeDescriptorPermission.Copy">
      <returns>A copy of the current permission object.</returns>
    </member>
    <member name="P:System.Security.Permissions.TypeDescriptorPermission.Flags">
      <summary>Gets or sets the <see cref="T:System.Security.Permissions.TypeDescriptorPermissionFlags" /> for the type descriptor. </summary>
      <returns>The <see cref="T:System.Security.Permissions.TypeDescriptorPermissionFlags" /> for the type descriptor.</returns>
    </member>
    <member name="M:System.Security.Permissions.TypeDescriptorPermission.FromXml(System.Security.SecurityElement)">
      <param name="securityElement">The XML encoding to use to reconstruct the security object.</param>
    </member>
    <member name="M:System.Security.Permissions.TypeDescriptorPermission.Intersect(System.Security.IPermission)">
      <returns>A new permission that represents the intersection of the current permission and the specified permission. This new permission is null if the intersection is empty.</returns>
      <param name="target">A permission to intersect with the current permission. It must be of the same type as the current permission.</param>
    </member>
    <member name="M:System.Security.Permissions.TypeDescriptorPermission.IsSubsetOf(System.Security.IPermission)">
      <returns>true if the current permission is a subset of the specified permission; otherwise, false.</returns>
      <param name="target">A permission that is to be tested for the subset relationship. This permission must be of the same type as the current permission.</param>
    </member>
    <member name="M:System.Security.Permissions.TypeDescriptorPermission.IsUnrestricted">
      <summary>Gets a value that indicates whether the type descriptor may be called from partially trusted code. </summary>
      <returns>true if the <see cref="P:System.Security.Permissions.TypeDescriptorPermission.Flags" /> property is set to <see cref="F:System.Security.Permissions.TypeDescriptorPermissionFlags.RestrictedRegistrationAccess" />; otherwise, false. </returns>
    </member>
    <member name="M:System.Security.Permissions.TypeDescriptorPermission.ToXml">
      <returns>An XML encoding of the security object, including any state information.</returns>
    </member>
    <member name="M:System.Security.Permissions.TypeDescriptorPermission.Union(System.Security.IPermission)">
      <returns>A new permission that represents the union of the current permission and the specified permission.</returns>
      <param name="target">A permission to combine with the current permission. It must be of the same type as the current permission.</param>
    </member>
    <member name="T:System.Security.Permissions.TypeDescriptorPermissionAttribute">
      <summary>Determines the permission flags that apply to a <see cref="T:System.ComponentModel.TypeDescriptor" />.</summary>
    </member>
    <member name="M:System.Security.Permissions.TypeDescriptorPermissionAttribute.#ctor(System.Security.Permissions.SecurityAction)">
      <summary>Initializes a new instance of the <see cref="T:System.Security.Permissions.TypeDescriptorPermissionAttribute" /> class with the specified <see cref="T:System.Security.Permissions.SecurityAction" />. </summary>
      <param name="action">One of the <see cref="T:System.Security.Permissions.SecurityAction" /> values. </param>
    </member>
    <member name="M:System.Security.Permissions.TypeDescriptorPermissionAttribute.CreatePermission">
      <returns>A serializable permission object.</returns>
    </member>
    <member name="P:System.Security.Permissions.TypeDescriptorPermissionAttribute.Flags">
      <summary>Gets or sets the <see cref="T:System.Security.Permissions.TypeDescriptorPermissionFlags" /> for the <see cref="T:System.ComponentModel.TypeDescriptor" />. </summary>
      <returns>The <see cref="T:System.Security.Permissions.TypeDescriptorPermissionFlags" /> for the <see cref="T:System.ComponentModel.TypeDescriptor" />.</returns>
    </member>
    <member name="P:System.Security.Permissions.TypeDescriptorPermissionAttribute.RestrictedRegistrationAccess">
      <summary>Gets or sets a value that indicates whether the type descriptor can be accessed from partial trust. </summary>
      <returns>true if the type descriptor can be accessed from partial trust; otherwise, false. </returns>
    </member>
    <member name="T:System.Security.Permissions.TypeDescriptorPermissionFlags">
      <summary>Defines permission settings for type descriptors. </summary>
    </member>
    <member name="F:System.Security.Permissions.TypeDescriptorPermissionFlags.NoFlags">
      <summary>No permission flags are set on the type descriptor.</summary>
    </member>
    <member name="F:System.Security.Permissions.TypeDescriptorPermissionFlags.RestrictedRegistrationAccess">
      <summary>The type descriptor may be called from partially trusted code.</summary>
    </member>
    <member name="T:System.Text.RegularExpressions.Capture">
      <summary>Represents the results from a single successful subexpression capture. </summary>
    </member>
    <member name="P:System.Text.RegularExpressions.Capture.Index">
      <summary>The position in the original string where the first character of the captured substring was found.</summary>
      <returns>The zero-based starting position in the original string where the captured substring was found.</returns>
    </member>
    <member name="P:System.Text.RegularExpressions.Capture.Length">
      <summary>The length of the captured substring.</summary>
      <returns>The length of the captured substring.</returns>
    </member>
    <member name="M:System.Text.RegularExpressions.Capture.ToString">
      <summary>Gets the captured substring from the input string.</summary>
      <returns>The actual substring that was captured by the match.</returns>
    </member>
    <member name="P:System.Text.RegularExpressions.Capture.Value">
      <summary>Gets the captured substring from the input string.</summary>
      <returns>The actual substring that was captured by the match.</returns>
    </member>
    <member name="T:System.Text.RegularExpressions.CaptureCollection">
      <summary>Represents the set of captures made by a single capturing group. </summary>
    </member>
    <member name="M:System.Text.RegularExpressions.CaptureCollection.CopyTo(System.Array,System.Int32)">
      <summary>Copies all the elements of the collection to the given array beginning at the given index.</summary>
      <param name="array">The array the collection is to be copied into. </param>
      <param name="arrayIndex">The position in the destination array where copying is to begin. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="array " />is null.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="arrayIndex" /> is outside the bounds of <paramref name="array" />. -or-<paramref name="arrayIndex" /> plus <see cref="P:System.Text.RegularExpressions.CaptureCollection.Count" /> is outside the bounds of <paramref name="array" />. </exception>
    </member>
    <member name="P:System.Text.RegularExpressions.CaptureCollection.Count">
      <summary>Gets the number of substrings captured by the group.</summary>
      <returns>The number of items in the <see cref="T:System.Text.RegularExpressions.CaptureCollection" />.</returns>
    </member>
    <member name="M:System.Text.RegularExpressions.CaptureCollection.GetEnumerator">
      <summary>Provides an enumerator that iterates through the collection.</summary>
      <returns>An object that contains all <see cref="T:System.Text.RegularExpressions.Capture" /> objects within the <see cref="T:System.Text.RegularExpressions.CaptureCollection" />.</returns>
    </member>
    <member name="P:System.Text.RegularExpressions.CaptureCollection.IsReadOnly">
      <summary>Gets a value that indicates whether the collection is read only.</summary>
      <returns>true in all cases.</returns>
    </member>
    <member name="P:System.Text.RegularExpressions.CaptureCollection.IsSynchronized">
      <summary>Gets a value that indicates whether access to the collection is synchronized (thread-safe).</summary>
      <returns>false in all cases.</returns>
    </member>
    <member name="P:System.Text.RegularExpressions.CaptureCollection.Item(System.Int32)">
      <summary>Gets an individual member of the collection.</summary>
      <returns>The captured substring at position <paramref name="i" /> in the collection.</returns>
      <param name="i">Index into the capture collection. </param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="i" /> is less than 0 or greater than <see cref="P:System.Text.RegularExpressions.CaptureCollection.Count" />. </exception>
    </member>
    <member name="P:System.Text.RegularExpressions.CaptureCollection.SyncRoot">
      <summary>Gets an object that can be used to synchronize access to the collection.</summary>
      <returns>An object that can be used to synchronize access to the collection.</returns>
    </member>
    <member name="T:System.Text.RegularExpressions.Group">
      <summary>Represents the results from a single capturing group. </summary>
    </member>
    <member name="P:System.Text.RegularExpressions.Group.Captures">
      <summary>Gets a collection of all the captures matched by the capturing group, in innermost-leftmost-first order (or innermost-rightmost-first order if the regular expression is modified with the <see cref="F:System.Text.RegularExpressions.RegexOptions.RightToLeft" /> option). The collection may have zero or more items.</summary>
      <returns>The collection of substrings matched by the group.</returns>
    </member>
    <member name="P:System.Text.RegularExpressions.Group.Success">
      <summary>Gets a value indicating whether the match is successful.</summary>
      <returns>true if the match is successful; otherwise, false.</returns>
    </member>
    <member name="M:System.Text.RegularExpressions.Group.Synchronized(System.Text.RegularExpressions.Group)">
      <summary>Returns a Group object equivalent to the one supplied that is safe to share between multiple threads.</summary>
      <returns>A regular expression Group object. </returns>
      <param name="inner">The input <see cref="T:System.Text.RegularExpressions.Group" /> object.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="inner" /> is null.</exception>
    </member>
    <member name="T:System.Text.RegularExpressions.GroupCollection">
      <summary>Returns the set of captured groups in a single match.</summary>
    </member>
    <member name="M:System.Text.RegularExpressions.GroupCollection.CopyTo(System.Array,System.Int32)">
      <summary>Copies all the elements of the collection to the given array beginning at the given index.</summary>
      <param name="array">The array the collection is to be copied into. </param>
      <param name="arrayIndex">The position in the destination array where the copying is to begin. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="array" /> is null.</exception>
      <exception cref="T:System.IndexOutOfRangeException">
        <paramref name="arrayIndex" /> is outside the bounds of <paramref name="array" />.-or-<paramref name="arrayIndex" /> plus <see cref="P:System.Text.RegularExpressions.GroupCollection.Count" /> is outside the bounds of <paramref name="array" />.</exception>
    </member>
    <member name="P:System.Text.RegularExpressions.GroupCollection.Count">
      <summary>Returns the number of groups in the collection.</summary>
      <returns>The number of groups in the collection.</returns>
    </member>
    <member name="M:System.Text.RegularExpressions.GroupCollection.GetEnumerator">
      <summary>Provides an enumerator that iterates through the collection.</summary>
      <returns>An enumerator that contains all <see cref="T:System.Text.RegularExpressions.Group" /> objects in the <see cref="T:System.Text.RegularExpressions.GroupCollection" />.</returns>
    </member>
    <member name="P:System.Text.RegularExpressions.GroupCollection.IsReadOnly">
      <summary>Gets a value that indicates whether the collection is read-only.</summary>
      <returns>true in all cases.</returns>
    </member>
    <member name="P:System.Text.RegularExpressions.GroupCollection.IsSynchronized">
      <summary>Gets a value that indicates whether access to the <see cref="T:System.Text.RegularExpressions.GroupCollection" /> is synchronized (thread-safe).</summary>
      <returns>false in all cases.</returns>
    </member>
    <member name="P:System.Text.RegularExpressions.GroupCollection.Item(System.Int32)">
      <summary>Enables access to a member of the collection by integer index.</summary>
      <returns>The member of the collection specified by <paramref name="groupnum" />.</returns>
      <param name="groupnum">The zero-based index of the collection member to be retrieved. </param>
    </member>
    <member name="P:System.Text.RegularExpressions.GroupCollection.Item(System.String)">
      <summary>Enables access to a member of the collection by string index.</summary>
      <returns>The member of the collection specified by <paramref name="groupname" />.</returns>
      <param name="groupname">The name of a capturing group. </param>
    </member>
    <member name="P:System.Text.RegularExpressions.GroupCollection.SyncRoot">
      <summary>Gets an object that can be used to synchronize access to the <see cref="T:System.Text.RegularExpressions.GroupCollection" />.</summary>
      <returns>A copy of the <see cref="T:System.Text.RegularExpressions.Match" /> object to synchronize.</returns>
    </member>
    <member name="T:System.Text.RegularExpressions.Match">
      <summary>Represents the results from a single regular expression match.</summary>
    </member>
    <member name="P:System.Text.RegularExpressions.Match.Empty">
      <summary>Gets the empty group. All failed matches return this empty match.</summary>
      <returns>An empty <see cref="T:System.Text.RegularExpressions.Match" />.</returns>
    </member>
    <member name="P:System.Text.RegularExpressions.Match.Groups">
      <summary>Gets a collection of groups matched by the regular expression.</summary>
      <returns>The character groups matched by the pattern.</returns>
    </member>
    <member name="M:System.Text.RegularExpressions.Match.NextMatch">
      <summary>Returns a new <see cref="T:System.Text.RegularExpressions.Match" /> with the results for the next match, starting at the position at which the last match ended (at the character after the last matched character).</summary>
      <returns>The next regular expression match.</returns>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
      </PermissionSet>
    </member>
    <member name="M:System.Text.RegularExpressions.Match.Result(System.String)">
      <summary>Returns the expansion of the specified replacement pattern. </summary>
      <returns>The expanded version of the <paramref name="replacement" /> parameter.</returns>
      <param name="replacement">The replacement pattern to use. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="replacement" /> is null.</exception>
      <exception cref="T:System.NotSupportedException">Expansion is not allowed for this pattern.</exception>
    </member>
    <member name="M:System.Text.RegularExpressions.Match.Synchronized(System.Text.RegularExpressions.Match)">
      <summary>Returns a <see cref="T:System.Text.RegularExpressions.Match" /> instance equivalent to the one supplied that is suitable to share between multiple threads.</summary>
      <returns>A regular expression match that is suitable to share between multiple threads. </returns>
      <param name="inner">A regular expression match equivalent to the one expected. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="inner" /> is null.</exception>
    </member>
    <member name="T:System.Text.RegularExpressions.MatchCollection">
      <summary>Represents the set of successful matches found by iteratively applying a regular expression pattern to the input string.</summary>
    </member>
    <member name="M:System.Text.RegularExpressions.MatchCollection.CopyTo(System.Array,System.Int32)">
      <summary>Copies all the elements of the collection to the given array starting at the given index.</summary>
      <param name="array">The array the collection is to be copied into. </param>
      <param name="arrayIndex">The position in the array where copying is to begin. </param>
      <exception cref="T:System.ArgumentException">
        <paramref name="array" /> is a multi-dimensional array.</exception>
      <exception cref="T:System.IndexOutOfRangeException">
        <paramref name="arrayIndex" /> is outside the bounds of <paramref name="array" />.-or-<paramref name="arrayIndex" /> plus <see cref="P:System.Text.RegularExpressions.GroupCollection.Count" /> is outside the bounds of <paramref name="array" />.</exception>
    </member>
    <member name="P:System.Text.RegularExpressions.MatchCollection.Count">
      <summary>Gets the number of matches.</summary>
      <returns>The number of matches.</returns>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
      </PermissionSet>
    </member>
    <member name="M:System.Text.RegularExpressions.MatchCollection.GetEnumerator">
      <summary>Provides an enumerator that iterates through the collection.</summary>
      <returns>An object that contains all <see cref="T:System.Text.RegularExpressions.Match" /> objects within the <see cref="T:System.Text.RegularExpressions.MatchCollection" />.</returns>
    </member>
    <member name="P:System.Text.RegularExpressions.MatchCollection.IsReadOnly">
      <summary>Gets a value that indicates whether the collection is read only.</summary>
      <returns>true in all cases. </returns>
    </member>
    <member name="P:System.Text.RegularExpressions.MatchCollection.IsSynchronized">
      <summary>Gets a value indicating whether access to the collection is synchronized (thread-safe).</summary>
      <returns>false in all cases.</returns>
    </member>
    <member name="P:System.Text.RegularExpressions.MatchCollection.Item(System.Int32)">
      <summary>Gets an individual member of the collection.</summary>
      <returns>The captured substring at position <paramref name="i" /> in the collection.</returns>
      <param name="i">Index into the <see cref="T:System.Text.RegularExpressions.Match" /> collection. </param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="i" /> is less than 0 or greater than or equal to <see cref="P:System.Text.RegularExpressions.MatchCollection.Count" />. </exception>
    </member>
    <member name="P:System.Text.RegularExpressions.MatchCollection.SyncRoot">
      <summary>Gets an object that can be used to synchronize access to the collection.</summary>
      <returns>An object that can be used to synchronize access to the collection. This property always returns the object itself.</returns>
    </member>
    <member name="T:System.Text.RegularExpressions.MatchEvaluator">
      <summary>Represents the method that is called each time a regular expression match is found during a <see cref="Overload:System.Text.RegularExpressions.Regex.Replace" /> method operation.</summary>
      <returns>A string returned by the method that is represented by the <see cref="T:System.Text.RegularExpressions.MatchEvaluator" /> delegate.</returns>
      <param name="match">The <see cref="T:System.Text.RegularExpressions.Match" /> object that represents a single regular expression match during a <see cref="Overload:System.Text.RegularExpressions.Regex.Replace" /> method operation. </param>
    </member>
    <member name="T:System.Text.RegularExpressions.Regex">
      <summary>Represents an immutable regular expression.</summary>
    </member>
    <member name="M:System.Text.RegularExpressions.Regex.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Text.RegularExpressions.Regex" /> class.</summary>
    </member>
    <member name="M:System.Text.RegularExpressions.Regex.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Initializes a new instance of the <see cref="T:System.Text.RegularExpressions.Regex" /> class by using serialized data.</summary>
      <param name="info">The object that contains a serialized pattern and <see cref="T:System.Text.RegularExpressions.RegexOptions" />  information.</param>
      <param name="context">The destination for this serialization. (This parameter is not used; specify null.)</param>
      <exception cref="T:System.ArgumentException">A regular expression parsing error occurred. </exception>
      <exception cref="T:System.ArgumentNullException">The pattern that <paramref name="info" /> contains is null.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="info" /> contains an invalid <see cref="T:System.Text.RegularExpressions.RegexOptions" />  flag.</exception>
    </member>
    <member name="M:System.Text.RegularExpressions.Regex.#ctor(System.String)">
      <summary>Initializes and compiles a new instance of the <see cref="T:System.Text.RegularExpressions.Regex" /> class for the specified regular expression.</summary>
      <param name="pattern">The regular expression pattern to match. </param>
      <exception cref="T:System.ArgumentException">A regular expression parsing error occurred. </exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="pattern" /> is null.</exception>
    </member>
    <member name="M:System.Text.RegularExpressions.Regex.#ctor(System.String,System.Text.RegularExpressions.RegexOptions)">
      <summary>Initializes and compiles a new instance of the <see cref="T:System.Text.RegularExpressions.Regex" /> class for the specified regular expression, with options that modify the pattern.</summary>
      <param name="pattern">The regular expression pattern to match. </param>
      <param name="options">A bitwise combination of the enumeration values that modify the regular expression. </param>
      <exception cref="T:System.ArgumentException">A regular expression parsing error occurred. </exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="pattern" /> is null.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="options" /> contains an invalid flag.</exception>
    </member>
    <member name="P:System.Text.RegularExpressions.Regex.CacheSize">
      <summary>Gets or sets the maximum number of entries in the current static cache of compiled regular expressions.</summary>
      <returns>The maximum number of entries in the static cache.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">The value in a set operation is less than zero.</exception>
    </member>
    <member name="F:System.Text.RegularExpressions.Regex.capnames">
      <summary>Used by a <see cref="T:System.Text.RegularExpressions.Regex" /> object generated by the <see cref="Overload:System.Text.RegularExpressions.Regex.CompileToAssembly" /> method. </summary>
    </member>
    <member name="F:System.Text.RegularExpressions.Regex.caps">
      <summary>Used by a <see cref="T:System.Text.RegularExpressions.Regex" /> object generated by the <see cref="Overload:System.Text.RegularExpressions.Regex.CompileToAssembly" /> method. </summary>
    </member>
    <member name="F:System.Text.RegularExpressions.Regex.capsize">
      <summary>Used by a <see cref="T:System.Text.RegularExpressions.Regex" /> object generated by the <see cref="Overload:System.Text.RegularExpressions.Regex.CompileToAssembly" /> method. </summary>
    </member>
    <member name="F:System.Text.RegularExpressions.Regex.capslist">
      <summary>Used by a <see cref="T:System.Text.RegularExpressions.Regex" /> object generated by the <see cref="Overload:System.Text.RegularExpressions.Regex.CompileToAssembly" /> method. </summary>
    </member>
    <member name="M:System.Text.RegularExpressions.Regex.CompileToAssembly(System.Text.RegularExpressions.RegexCompilationInfo[],System.Reflection.AssemblyName)">
      <summary>Compiles one or more specified <see cref="T:System.Text.RegularExpressions.Regex" /> objects to a named assembly.</summary>
      <param name="regexinfos">An array that describes the regular expressions to compile. </param>
      <param name="assemblyname">The file name of the assembly. </param>
      <exception cref="T:System.ArgumentException">The value of the <paramref name="assemblyname" /> parameter's <see cref="P:System.Reflection.AssemblyName.Name" /> property is an empty or null string.-or-The regular expression pattern of one or more objects in <paramref name="regexinfos" /> contains invalid syntax.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="assemblyname" /> or <paramref name="regexinfos" /> is null. </exception>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="ControlEvidence" />
      </PermissionSet>
    </member>
    <member name="M:System.Text.RegularExpressions.Regex.CompileToAssembly(System.Text.RegularExpressions.RegexCompilationInfo[],System.Reflection.AssemblyName,System.Reflection.Emit.CustomAttributeBuilder[])">
      <summary>Compiles one or more specified <see cref="T:System.Text.RegularExpressions.Regex" /> objects to a named assembly with the specified attributes.</summary>
      <param name="regexinfos">An array that describes the regular expressions to compile. </param>
      <param name="assemblyname">The file name of the assembly. </param>
      <param name="attributes">An array that defines the attributes to apply to the assembly. </param>
      <exception cref="T:System.ArgumentException">The value of the <paramref name="assemblyname" /> parameter's <see cref="P:System.Reflection.AssemblyName.Name" /> property is an empty or null string.-or-The regular expression pattern of one or more objects in <paramref name="regexinfos" /> contains invalid syntax.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="assemblyname" /> or <paramref name="regexinfos" /> is null. </exception>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="ControlEvidence" />
      </PermissionSet>
    </member>
    <member name="M:System.Text.RegularExpressions.Regex.CompileToAssembly(System.Text.RegularExpressions.RegexCompilationInfo[],System.Reflection.AssemblyName,System.Reflection.Emit.CustomAttributeBuilder[],System.String)">
      <summary>Compiles one or more specified <see cref="T:System.Text.RegularExpressions.Regex" /> objects and a specified resource file to a named assembly with the specified attributes.</summary>
      <param name="regexinfos">An array that describes the regular expressions to compile. </param>
      <param name="assemblyname">The file name of the assembly. </param>
      <param name="attributes">An array that defines the attributes to apply to the assembly. </param>
      <param name="resourceFile">The name of the Win32 resource file to include in the assembly. </param>
      <exception cref="T:System.ArgumentException">The value of the <paramref name="assemblyname" /> parameter's <see cref="P:System.Reflection.AssemblyName.Name" /> property is an empty or null string.-or-The regular expression pattern of one or more objects in <paramref name="regexinfos" /> contains invalid syntax.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="assemblyname" /> or <paramref name="regexinfos" /> is null. </exception>
      <exception cref="T:System.Runtime.InteropServices.COMException">The <paramref name="resourceFile" /> parameter designates an invalid Win32 resource file.</exception>
      <exception cref="T:System.IO.FileNotFoundException">The file designated by the <paramref name="resourceFile" /> parameter cannot be found.  </exception>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="ControlEvidence" />
      </PermissionSet>
    </member>
    <member name="M:System.Text.RegularExpressions.Regex.Escape(System.String)">
      <summary>Escapes a minimal set of characters (\, *, +, ?, |, {, [, (,), ^, $,., #, and white space) by replacing them with their escape codes. This instructs the regular expression engine to interpret these characters literally rather than as metacharacters.</summary>
      <returns>A string of characters with metacharacters converted to their escaped form.</returns>
      <param name="str">The input string that contains the text to convert. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="str" /> is null.</exception>
    </member>
    <member name="F:System.Text.RegularExpressions.Regex.factory">
      <summary>Used by a <see cref="T:System.Text.RegularExpressions.Regex" /> object generated by the <see cref="Overload:System.Text.RegularExpressions.Regex.CompileToAssembly" /> method. </summary>
    </member>
    <member name="M:System.Text.RegularExpressions.Regex.GetGroupNames">
      <summary>Returns an array of capturing group names for the regular expression.</summary>
      <returns>A string array of group names.</returns>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="M:System.Text.RegularExpressions.Regex.GetGroupNumbers">
      <summary>Returns an array of capturing group numbers that correspond to group names in an array.</summary>
      <returns>An integer array of group numbers.</returns>
    </member>
    <member name="M:System.Text.RegularExpressions.Regex.GroupNameFromNumber(System.Int32)">
      <summary>Gets the group name that corresponds to the specified group number.</summary>
      <returns>A string that contains the group name associated with the specified group number. If there is no group name that corresponds to <paramref name="i" />, the method returns <see cref="F:System.String.Empty" />.</returns>
      <param name="i">The group number to convert to the corresponding group name. </param>
    </member>
    <member name="M:System.Text.RegularExpressions.Regex.GroupNumberFromName(System.String)">
      <summary>Returns the group number that corresponds to the specified group name.</summary>
      <returns>The group number that corresponds to the specified group name.</returns>
      <param name="name">The group name to convert to the corresponding group number. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="name" /> is null.</exception>
    </member>
    <member name="M:System.Text.RegularExpressions.Regex.InitializeReferences">
      <summary>Used by a <see cref="T:System.Text.RegularExpressions.Regex" /> object generated by the <see cref="Overload:System.Text.RegularExpressions.Regex.CompileToAssembly" /> method. </summary>
      <exception cref="T:System.NotSupportedException">References have already been initialized. </exception>
    </member>
    <member name="M:System.Text.RegularExpressions.Regex.IsMatch(System.String)">
      <summary>Indicates whether the regular expression specified in the <see cref="T:System.Text.RegularExpressions.Regex" /> constructor finds a match in a specified input string.</summary>
      <returns>true if the regular expression finds a match; otherwise, false.</returns>
      <param name="input">The string to search for a match. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="input" /> is null.</exception>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="ControlEvidence" />
      </PermissionSet>
    </member>
    <member name="M:System.Text.RegularExpressions.Regex.IsMatch(System.String,System.Int32)">
      <summary>Indicates whether the regular expression specified in the <see cref="T:System.Text.RegularExpressions.Regex" /> constructor finds a match in the specified input string, beginning at the specified starting position in the string.</summary>
      <returns>true if the regular expression finds a match; otherwise, false.</returns>
      <param name="input">The string to search for a match. </param>
      <param name="startat">The character position at which to start the search. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="input" /> is null.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="startat" /> is less than zero or greater than the length of <paramref name="input" />.</exception>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="ControlEvidence" />
      </PermissionSet>
    </member>
    <member name="M:System.Text.RegularExpressions.Regex.IsMatch(System.String,System.String)">
      <summary>Indicates whether the specified regular expression finds a match in the specified input string.</summary>
      <returns>true if the regular expression finds a match; otherwise, false.</returns>
      <param name="input">The string to search for a match. </param>
      <param name="pattern">The regular expression pattern to match. </param>
      <exception cref="T:System.ArgumentException">A regular expression parsing error occurred.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="input" /> or <paramref name="pattern" /> is null. </exception>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="ControlEvidence" />
      </PermissionSet>
    </member>
    <member name="M:System.Text.RegularExpressions.Regex.IsMatch(System.String,System.String,System.Text.RegularExpressions.RegexOptions)">
      <summary>Indicates whether the specified regular expression finds a match in the specified input string, using the specified matching options.</summary>
      <returns>true if the regular expression finds a match; otherwise, false.</returns>
      <param name="input">The string to search for a match. </param>
      <param name="pattern">The regular expression pattern to match. </param>
      <param name="options">A bitwise combination of the enumeration values that provide options for matching. </param>
      <exception cref="T:System.ArgumentException">A regular expression parsing error occurred.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="input" /> or <paramref name="pattern" /> is null.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="options" /> is not a valid <see cref="T:System.Text.RegularExpressions.RegexOptions" />  value.</exception>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="ControlEvidence" />
      </PermissionSet>
    </member>
    <member name="M:System.Text.RegularExpressions.Regex.Match(System.String)">
      <summary>Searches the specified input string for the first occurrence of the regular expression specified in the <see cref="T:System.Text.RegularExpressions.Regex" /> constructor.</summary>
      <returns>An object that contains information about the match.</returns>
      <param name="input">The string to search for a match. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="input" /> is null.</exception>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="ControlEvidence" />
      </PermissionSet>
    </member>
    <member name="M:System.Text.RegularExpressions.Regex.Match(System.String,System.Int32)">
      <summary>Searches the input string for the first occurrence of a regular expression, beginning at the specified starting position in the string.</summary>
      <returns>An object that contains information about the match.</returns>
      <param name="input">The string to search for a match. </param>
      <param name="startat">The zero-based character position at which to start the search. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="input" /> is null.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="startat" /> is less than zero or greater than the length of <paramref name="input" />.</exception>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="ControlEvidence" />
      </PermissionSet>
    </member>
    <member name="M:System.Text.RegularExpressions.Regex.Match(System.String,System.Int32,System.Int32)">
      <summary>Searches the input string for the first occurrence of a regular expression, beginning at the specified starting position and searching only the specified number of characters.</summary>
      <returns>An object that contains information about the match.</returns>
      <param name="input">The string to be tested for a match. </param>
      <param name="beginning">The zero-based character position in the input string at which to begin the search. </param>
      <param name="length">The number of characters in the substring to include in the search. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="input" /> is null.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="beginning" /> is less than zero or greater than the length of <paramref name="input" />.-or-<paramref name="length" /> is less than zero or greater than the length of <paramref name="input" />.</exception>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="ControlEvidence" />
      </PermissionSet>
    </member>
    <member name="M:System.Text.RegularExpressions.Regex.Match(System.String,System.String)">
      <summary>Searches the specified input string for the first occurrence of the specified regular expression.</summary>
      <returns>An object that contains information about the match.</returns>
      <param name="input">The string to search for a match. </param>
      <param name="pattern">The regular expression pattern to match. </param>
      <exception cref="T:System.ArgumentException">A regular expression parsing error occurred.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="input" /> or <paramref name="pattern" /> is null.</exception>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="ControlEvidence" />
      </PermissionSet>
    </member>
    <member name="M:System.Text.RegularExpressions.Regex.Match(System.String,System.String,System.Text.RegularExpressions.RegexOptions)">
      <summary>Searches the input string for the first occurrence of the specified regular expression, using the specified matching options.</summary>
      <returns>An object that contains information about the match.</returns>
      <param name="input">The string to be tested for a match. </param>
      <param name="pattern">The regular expression pattern to match. </param>
      <param name="options">A bitwise combination of the enumeration values that provide options for matching. </param>
      <exception cref="T:System.ArgumentException">A regular expression parsing error occurred.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="input" /> or <paramref name="pattern" /> is null.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="options" /> is not a valid bitwise combination of <see cref="T:System.Text.RegularExpressions.RegexOptions" /> values.</exception>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="ControlEvidence" />
      </PermissionSet>
    </member>
    <member name="M:System.Text.RegularExpressions.Regex.Matches(System.String)">
      <summary>Searches the specified input string for all occurrences of a regular expression.</summary>
      <returns>A collection of the <see cref="T:System.Text.RegularExpressions.Match" /> objects found by the search.</returns>
      <param name="input">The string to search for a match. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="input" /> is null.</exception>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="ControlEvidence" />
      </PermissionSet>
    </member>
    <member name="M:System.Text.RegularExpressions.Regex.Matches(System.String,System.Int32)">
      <summary>Searches the specified input string for all occurrences of a regular expression, beginning at the specified starting position in the string.</summary>
      <returns>A collection of the <see cref="T:System.Text.RegularExpressions.Match" /> objects found by the search.</returns>
      <param name="input">The string to search for a match. </param>
      <param name="startat">The character position in the input string at which to start the search. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="input" /> is null.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="startat" /> is less than zero or greater than the length of <paramref name="input" />.</exception>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="ControlEvidence" />
      </PermissionSet>
    </member>
    <member name="M:System.Text.RegularExpressions.Regex.Matches(System.String,System.String)">
      <summary>Searches the specified input string for all occurrences of a specified regular expression.</summary>
      <returns>A collection of the <see cref="T:System.Text.RegularExpressions.Match" /> objects found by the search.</returns>
      <param name="input">The string to search for a match. </param>
      <param name="pattern">The regular expression pattern to match. </param>
      <exception cref="T:System.ArgumentException">A regular expression parsing error occurred.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="input" /> or <paramref name="pattern" /> is null.</exception>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="ControlEvidence" />
      </PermissionSet>
    </member>
    <member name="M:System.Text.RegularExpressions.Regex.Matches(System.String,System.String,System.Text.RegularExpressions.RegexOptions)">
      <summary>Searches the specified input string for all occurrences of a specified regular expression, using the specified matching options.</summary>
      <returns>The collection of the <see cref="T:System.Text.RegularExpressions.Match" /> objects found by the search.</returns>
      <param name="input">The string to search for a match. </param>
      <param name="pattern">The regular expression pattern to match. </param>
      <param name="options">A bitwise combination of the enumeration values that specify options for matching. </param>
      <exception cref="T:System.ArgumentException">A regular expression parsing error occurred.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="input" /> or <paramref name="pattern" /> is null.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="options" /> is not a valid bitwise combination of <see cref="T:System.Text.RegularExpressions.RegexOptions" /> values.</exception>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="ControlEvidence" />
      </PermissionSet>
    </member>
    <member name="P:System.Text.RegularExpressions.Regex.Options">
      <summary>Returns the options passed into the <see cref="T:System.Text.RegularExpressions.Regex" /> constructor.</summary>
      <returns>The <paramref name="options" /> parameter that was passed into the <see cref="T:System.Text.RegularExpressions.Regex" /> constructor.</returns>
    </member>
    <member name="F:System.Text.RegularExpressions.Regex.pattern">
      <summary>Used by a <see cref="T:System.Text.RegularExpressions.Regex" /> object generated by the <see cref="Overload:System.Text.RegularExpressions.Regex.CompileToAssembly" /> method. </summary>
    </member>
    <member name="M:System.Text.RegularExpressions.Regex.Replace(System.String,System.String)">
      <summary>Within a specified input string, replaces all strings that match a regular expression pattern with a specified replacement string. </summary>
      <returns>A new string that is identical to the input string, except that a replacement string takes the place of each matched string.</returns>
      <param name="input">The string to search for a match. </param>
      <param name="replacement">The replacement string. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="input" /> or <paramref name="replacement" /> is null.</exception>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="ControlEvidence" />
      </PermissionSet>
    </member>
    <member name="M:System.Text.RegularExpressions.Regex.Replace(System.String,System.String,System.Int32)">
      <summary>Within a specified input string, replaces a specified maximum number of strings that match a regular expression pattern with a specified replacement string. </summary>
      <returns>A new string that is identical to the input string, except that a replacement string takes the place of each matched string.</returns>
      <param name="input">The string to search for a match. </param>
      <param name="replacement">The replacement string. </param>
      <param name="count">The maximum number of times the replacement can occur. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="input" /> or <paramref name="replacement" /> is null.</exception>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="ControlEvidence" />
      </PermissionSet>
    </member>
    <member name="M:System.Text.RegularExpressions.Regex.Replace(System.String,System.String,System.Int32,System.Int32)">
      <summary>Within a specified input substring, replaces a specified maximum number of strings that match a regular expression pattern with a specified replacement string. </summary>
      <returns>A new string that is identical to the input string, except that a replacement string takes the place of each matched string.</returns>
      <param name="input">The string to search for a match. </param>
      <param name="replacement">The replacement string. </param>
      <param name="count">Maximum number of times the replacement can occur. </param>
      <param name="startat">The character position in the input string where the search begins. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="input" /> or <paramref name="replacement" /> is null.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="startat" /> is less than zero or greater than the length of <paramref name="input" />.</exception>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="ControlEvidence" />
      </PermissionSet>
    </member>
    <member name="M:System.Text.RegularExpressions.Regex.Replace(System.String,System.String,System.String)">
      <summary>Within a specified input string, replaces all strings that match a specified regular expression with a specified replacement string. </summary>
      <returns>A new string that is identical to the input string, except that a replacement string takes the place of each matched string.</returns>
      <param name="input">The string to search for a match. </param>
      <param name="pattern">The regular expression pattern to match. </param>
      <param name="replacement">The replacement string. </param>
      <exception cref="T:System.ArgumentException">A regular expression parsing error occurred.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="input" />, <paramref name="pattern" />, or <paramref name="replacement" /> is null.</exception>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="ControlEvidence" />
      </PermissionSet>
    </member>
    <member name="M:System.Text.RegularExpressions.Regex.Replace(System.String,System.String,System.String,System.Text.RegularExpressions.RegexOptions)">
      <summary>Within a specified input string, replaces all strings that match a specified regular expression with a specified replacement string. Specified options modify the matching operation. </summary>
      <returns>A new string that is identical to the input string, except that a replacement string takes the place of each matched string.</returns>
      <param name="input">The string to search for a match. </param>
      <param name="pattern">The regular expression pattern to match. </param>
      <param name="replacement">The replacement string. </param>
      <param name="options">A bitwise combination of the enumeration values that provide options for matching. </param>
      <exception cref="T:System.ArgumentException">A regular expression parsing error occurred.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="input" />, <paramref name="pattern" />, or <paramref name="replacement" /> is null.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="options" /> is not a valid bitwise combination of <see cref="T:System.Text.RegularExpressions.RegexOptions" /> values.</exception>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="ControlEvidence" />
      </PermissionSet>
    </member>
    <member name="M:System.Text.RegularExpressions.Regex.Replace(System.String,System.String,System.Text.RegularExpressions.MatchEvaluator)">
      <summary>Within a specified input string, replaces all strings that match a specified regular expression with a string returned by a <see cref="T:System.Text.RegularExpressions.MatchEvaluator" /> delegate.</summary>
      <returns>A new string that is identical to the input string, except that a replacement string takes the place of each matched string.</returns>
      <param name="input">The string to search for a match. </param>
      <param name="pattern">The regular expression pattern to match. </param>
      <param name="evaluator">A custom method that examines each match and returns either the original matched string or a replacement string.</param>
      <exception cref="T:System.ArgumentException">A regular expression parsing error occurred.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="input" />, <paramref name="pattern" />, or <paramref name="evaluator" /> is null.</exception>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="ControlEvidence" />
      </PermissionSet>
    </member>
    <member name="M:System.Text.RegularExpressions.Regex.Replace(System.String,System.String,System.Text.RegularExpressions.MatchEvaluator,System.Text.RegularExpressions.RegexOptions)">
      <summary>Within a specified input string, replaces all strings that match a specified regular expression with a string returned by a <see cref="T:System.Text.RegularExpressions.MatchEvaluator" /> delegate. Specified options modify the matching operation.</summary>
      <returns>A new string that is identical to the input string, except that a replacement string takes the place of each matched string.</returns>
      <param name="input">The string to search for a match. </param>
      <param name="pattern">The regular expression pattern to match. </param>
      <param name="evaluator">A custom method that examines each match and returns either the original matched string or a replacement string. </param>
      <param name="options">A bitwise combination of the enumeration values that provide options for matching. </param>
      <exception cref="T:System.ArgumentException">A regular expression parsing error occurred.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="input" />, <paramref name="pattern" />, or <paramref name="evaluator" /> is null.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="options" /> is not a valid bitwise combination of <see cref="T:System.Text.RegularExpressions.RegexOptions" /> values.</exception>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="ControlEvidence" />
      </PermissionSet>
    </member>
    <member name="M:System.Text.RegularExpressions.Regex.Replace(System.String,System.Text.RegularExpressions.MatchEvaluator)">
      <summary>Within a specified input string, replaces all strings that match a specified regular expression with a string returned by a <see cref="T:System.Text.RegularExpressions.MatchEvaluator" /> delegate. </summary>
      <returns>A new string that is identical to the input string, except that a replacement string takes the place of each matched string.</returns>
      <param name="input">The string to search for a match. </param>
      <param name="evaluator">A custom method that examines each match and returns either the original matched string or a replacement string.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="input" /> or <paramref name="evaluator" /> is null.</exception>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="ControlEvidence" />
      </PermissionSet>
    </member>
    <member name="M:System.Text.RegularExpressions.Regex.Replace(System.String,System.Text.RegularExpressions.MatchEvaluator,System.Int32)">
      <summary>Within a specified input string, replaces a specified maximum number of strings that match a regular expression pattern with a string returned by a <see cref="T:System.Text.RegularExpressions.MatchEvaluator" /> delegate. </summary>
      <returns>A new string that is identical to the input string, except that a replacement string takes the place of each matched string.</returns>
      <param name="input">The string to search for a match. </param>
      <param name="evaluator">A custom method that examines each match and returns either the original matched string or a replacement string.</param>
      <param name="count">The maximum number of times the replacement will occur. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="input" /> or <paramref name="evaluator" /> is null.</exception>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="ControlEvidence" />
      </PermissionSet>
    </member>
    <member name="M:System.Text.RegularExpressions.Regex.Replace(System.String,System.Text.RegularExpressions.MatchEvaluator,System.Int32,System.Int32)">
      <summary>Within a specified input substring, replaces a specified maximum number of strings that match a regular expression pattern with a string returned by a <see cref="T:System.Text.RegularExpressions.MatchEvaluator" /> delegate. </summary>
      <returns>A new string that is identical to the input string, except that a replacement string takes the place of each matched string.</returns>
      <param name="input">The string to search for a match. </param>
      <param name="evaluator">A custom method that examines each match and returns either the original matched string or a replacement string.</param>
      <param name="count">The maximum number of times the replacement will occur. </param>
      <param name="startat">The character position in the input string where the search begins. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="input" /> or <paramref name="evaluator" /> is null.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="startat" /> is less than zero or greater than the length of <paramref name="input" />.</exception>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="ControlEvidence" />
      </PermissionSet>
    </member>
    <member name="P:System.Text.RegularExpressions.Regex.RightToLeft">
      <summary>Gets a value indicating whether the regular expression searches from right to left.</summary>
      <returns>true if the regular expression searches from right to left; otherwise false.</returns>
    </member>
    <member name="F:System.Text.RegularExpressions.Regex.roptions">
      <summary>Used by a <see cref="T:System.Text.RegularExpressions.Regex" /> object generated by the <see cref="Overload:System.Text.RegularExpressions.Regex.CompileToAssembly" /> method. </summary>
    </member>
    <member name="M:System.Text.RegularExpressions.Regex.Split(System.String)">
      <summary>Splits the specified input string at the positions defined by a regular expression pattern specified in the <see cref="T:System.Text.RegularExpressions.Regex" /> constructor.</summary>
      <returns>An array of strings.</returns>
      <param name="input">The string to split. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="input" /> is null.</exception>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="ControlEvidence" />
      </PermissionSet>
    </member>
    <member name="M:System.Text.RegularExpressions.Regex.Split(System.String,System.Int32)">
      <summary>Splits the specified input string a specified maximum number of times at the positions defined by a regular expression specified in the <see cref="T:System.Text.RegularExpressions.Regex" /> constructor.</summary>
      <returns>An array of strings.</returns>
      <param name="input">The string to be split. </param>
      <param name="count">The maximum number of times the split can occur. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="input" /> is null.</exception>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="ControlEvidence" />
      </PermissionSet>
    </member>
    <member name="M:System.Text.RegularExpressions.Regex.Split(System.String,System.Int32,System.Int32)">
      <summary>Splits the specified input string a specified maximum number of times at the positions defined by a regular expression specified in the <see cref="T:System.Text.RegularExpressions.Regex" /> constructor. The search for the regular expression pattern starts at a specified character position in the input string.</summary>
      <returns>An array of strings.</returns>
      <param name="input">The string to be split. </param>
      <param name="count">The maximum number of times the split can occur. </param>
      <param name="startat">The character position in the input string where the search will begin. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="input" /> is null.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="startat" /> is less than zero or greater than the length of <paramref name="input" />.</exception>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="ControlEvidence" />
      </PermissionSet>
    </member>
    <member name="M:System.Text.RegularExpressions.Regex.Split(System.String,System.String)">
      <summary>Splits the input string at the positions defined by a regular expression pattern.</summary>
      <returns>An array of strings.</returns>
      <param name="input">The string to split. </param>
      <param name="pattern">The regular expression pattern to match. </param>
      <exception cref="T:System.ArgumentException">A regular expression parsing error occurred.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="input" /> or <paramref name="pattern" /> is null.</exception>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="ControlEvidence" />
      </PermissionSet>
    </member>
    <member name="M:System.Text.RegularExpressions.Regex.Split(System.String,System.String,System.Text.RegularExpressions.RegexOptions)">
      <summary>Splits the input string at the positions defined by a specified regular expression pattern. Specified options modify the matching operation.</summary>
      <returns>An array of strings.</returns>
      <param name="input">The string to split. </param>
      <param name="pattern">The regular expression pattern to match. </param>
      <param name="options">A bitwise combination of the enumeration values that provide options for matching. </param>
      <exception cref="T:System.ArgumentException">A regular expression parsing error occurred.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="input" /> or <paramref name="pattern" /> is null.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="options" /> is not a valid bitwise combination of <see cref="T:System.Text.RegularExpressions.RegexOptions" /> values.</exception>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="ControlEvidence" />
      </PermissionSet>
    </member>
    <member name="M:System.Text.RegularExpressions.Regex.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Populates a <see cref="T:System.Runtime.Serialization.SerializationInfo" /> object with the data necessary to deserialize the current <see cref="T:System.Text.RegularExpressions.Regex" /> object.</summary>
      <param name="si">The object to populate with serialization information.</param>
      <param name="context">The place to store and retrieve serialized data. Reserved for future use.</param>
    </member>
    <member name="M:System.Text.RegularExpressions.Regex.ToString">
      <summary>Returns the regular expression pattern that was passed into the Regex constructor.</summary>
      <returns>The <paramref name="pattern" /> parameter that was passed into the Regex constructor.</returns>
    </member>
    <member name="M:System.Text.RegularExpressions.Regex.Unescape(System.String)">
      <summary>Converts any escaped characters in the input string.</summary>
      <returns>A string of characters with any escaped characters converted to their unescaped form.</returns>
      <param name="str">The input string containing the text to convert. </param>
      <exception cref="T:System.ArgumentException">
        <paramref name="str" /> includes an unrecognized escape sequence.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="str" /> is null.</exception>
    </member>
    <member name="M:System.Text.RegularExpressions.Regex.UseOptionC">
      <summary>Used by a <see cref="T:System.Text.RegularExpressions.Regex" /> object generated by the <see cref="Overload:System.Text.RegularExpressions.Regex.CompileToAssembly" /> method.</summary>
      <returns>true if the <see cref="P:System.Text.RegularExpressions.Regex.Options" /> property contains the <see cref="F:System.Text.RegularExpressions.RegexOptions.Compiled" /> option; otherwise, false.</returns>
    </member>
    <member name="M:System.Text.RegularExpressions.Regex.UseOptionR">
      <summary>Used by a <see cref="T:System.Text.RegularExpressions.Regex" /> object generated by the <see cref="Overload:System.Text.RegularExpressions.Regex.CompileToAssembly" /> method.</summary>
      <returns>true if the <see cref="P:System.Text.RegularExpressions.Regex.Options" /> property contains the <see cref="F:System.Text.RegularExpressions.RegexOptions.RightToLeft" /> option; otherwise, false.</returns>
    </member>
    <member name="T:System.Text.RegularExpressions.RegexCompilationInfo">
      <summary>Provides information about a regular expression that is used to compile a regular expression to a stand-alone assembly. </summary>
    </member>
    <member name="M:System.Text.RegularExpressions.RegexCompilationInfo.#ctor(System.String,System.Text.RegularExpressions.RegexOptions,System.String,System.String,System.Boolean)">
      <summary>Initializes a new instance of the <see cref="T:System.Text.RegularExpressions.RegexCompilationInfo" /> class that contains information about a regular expression to be included in an assembly. </summary>
      <param name="pattern">The regular expression to compile. </param>
      <param name="options">The regular expression options to use when compiling the regular expression. </param>
      <param name="name">The name of the type that represents the compiled regular expression. </param>
      <param name="fullnamespace">The namespace to which the new type belongs. </param>
      <param name="ispublic">true to make the compiled regular expression publicly visible; otherwise, false. </param>
    </member>
    <member name="P:System.Text.RegularExpressions.RegexCompilationInfo.IsPublic">
      <summary>Gets or sets a value that indicates whether the compiled regular expression has public visibility.</summary>
      <returns>true if the regular expression has public visibility; otherwise, false.</returns>
    </member>
    <member name="P:System.Text.RegularExpressions.RegexCompilationInfo.Name">
      <summary>Gets or sets the name of the type that represents the compiled regular expression.</summary>
      <returns>The name of the new type.</returns>
      <exception cref="T:System.ArgumentNullException">The value for this property is null.</exception>
      <exception cref="T:System.ArgumentException">The value for this property is an empty string.</exception>
    </member>
    <member name="P:System.Text.RegularExpressions.RegexCompilationInfo.Namespace">
      <summary>Gets or sets the namespace to which the new type belongs.</summary>
      <returns>The namespace of the new type.</returns>
      <exception cref="T:System.ArgumentNullException">The value for this property is null.</exception>
    </member>
    <member name="P:System.Text.RegularExpressions.RegexCompilationInfo.Options">
      <summary>Gets or sets the options to use when compiling the regular expression.</summary>
      <returns>A bitwise combination of the enumeration values.</returns>
    </member>
    <member name="P:System.Text.RegularExpressions.RegexCompilationInfo.Pattern">
      <summary>Gets or sets the regular expression to compile.</summary>
      <returns>The regular expression to compile.</returns>
      <exception cref="T:System.ArgumentNullException">The value for this property is null.</exception>
    </member>
    <member name="T:System.Text.RegularExpressions.RegexOptions">
      <summary>Provides enumerated values to use to set regular expression options.</summary>
    </member>
    <member name="F:System.Text.RegularExpressions.RegexOptions.None">
      <summary>Specifies that no options are set.</summary>
    </member>
    <member name="F:System.Text.RegularExpressions.RegexOptions.IgnoreCase">
      <summary>Specifies case-insensitive matching.</summary>
    </member>
    <member name="F:System.Text.RegularExpressions.RegexOptions.Multiline">
      <summary>Multiline mode. Changes the meaning of ^ and $ so they match at the beginning and end, respectively, of any line, and not just the beginning and end of the entire string.</summary>
    </member>
    <member name="F:System.Text.RegularExpressions.RegexOptions.ExplicitCapture">
      <summary>Specifies that the only valid captures are explicitly named or numbered groups of the form (?&lt;name&gt;…). This allows unnamed parentheses to act as noncapturing groups without the syntactic clumsiness of the expression (?:…).</summary>
    </member>
    <member name="F:System.Text.RegularExpressions.RegexOptions.Compiled">
      <summary>Specifies that the regular expression is compiled to an assembly. This yields faster execution but increases startup time. This value should not be assigned to the <see cref="P:System.Text.RegularExpressions.RegexCompilationInfo.Options" /> property when calling the <see cref="M:System.Text.RegularExpressions.Regex.CompileToAssembly(System.Text.RegularExpressions.RegexCompilationInfo[],System.Reflection.AssemblyName)" /> method. </summary>
    </member>
    <member name="F:System.Text.RegularExpressions.RegexOptions.Singleline">
      <summary>Specifies single-line mode. Changes the meaning of the dot (.) so it matches every character (instead of every character except \n).</summary>
    </member>
    <member name="F:System.Text.RegularExpressions.RegexOptions.IgnorePatternWhitespace">
      <summary>Eliminates unescaped white space from the pattern and enables comments marked with #. However, the <see cref="F:System.Text.RegularExpressions.RegexOptions.IgnorePatternWhitespace" /> value does not affect or eliminate white space in character classes. </summary>
    </member>
    <member name="F:System.Text.RegularExpressions.RegexOptions.RightToLeft">
      <summary>Specifies that the search will be from right to left instead of from left to right.</summary>
    </member>
    <member name="F:System.Text.RegularExpressions.RegexOptions.ECMAScript">
      <summary>Enables ECMAScript-compliant behavior for the expression. This value can be used only in conjunction with the <see cref="F:System.Text.RegularExpressions.RegexOptions.IgnoreCase" />, <see cref="F:System.Text.RegularExpressions.RegexOptions.Multiline" />, and <see cref="F:System.Text.RegularExpressions.RegexOptions.Compiled" /> values. The use of this value with any other values results in an exception.</summary>
    </member>
    <member name="F:System.Text.RegularExpressions.RegexOptions.CultureInvariant">
      <summary>Specifies that cultural differences in language is ignored. See Performing Culture-Insensitive Operations in the RegularExpressions Namespace for more information.</summary>
    </member>
    <member name="T:System.Text.RegularExpressions.RegexRunner">
      <summary>The <see cref="T:System.Text.RegularExpressions.RegexRunner" /> class is the base class for compiled regular expressions.</summary>
    </member>
    <member name="M:System.Text.RegularExpressions.RegexRunner.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Text.RegularExpressions.RegexRunner" /> class. </summary>
    </member>
    <member name="M:System.Text.RegularExpressions.RegexRunner.Capture(System.Int32,System.Int32,System.Int32)">
      <summary>Used by a <see cref="T:System.Text.RegularExpressions.Regex" /> object generated by the <see cref="Overload:System.Text.RegularExpressions.Regex.CompileToAssembly" /> method. </summary>
    </member>
    <member name="M:System.Text.RegularExpressions.RegexRunner.CharInClass(System.Char,System.String)">
      <summary>Used by a <see cref="T:System.Text.RegularExpressions.Regex" /> object generated by the <see cref="Overload:System.Text.RegularExpressions.Regex.CompileToAssembly" /> method. Determines whether a character is in a character class.</summary>
      <returns>true if the <paramref name="ch" /> parameter is in the character class specified by the <paramref name="charClass" /> parameter.</returns>
      <param name="ch">A character to test.</param>
      <param name="charClass">The internal name of a character class.</param>
    </member>
    <member name="M:System.Text.RegularExpressions.RegexRunner.CharInSet(System.Char,System.String,System.String)">
      <summary>Used by a <see cref="T:System.Text.RegularExpressions.Regex" /> object generated by the <see cref="Overload:System.Text.RegularExpressions.Regex.CompileToAssembly" /> method. </summary>
    </member>
    <member name="M:System.Text.RegularExpressions.RegexRunner.Crawl(System.Int32)">
      <summary>Used by a <see cref="T:System.Text.RegularExpressions.Regex" /> object generated by the <see cref="Overload:System.Text.RegularExpressions.Regex.CompileToAssembly" /> method. </summary>
    </member>
    <member name="M:System.Text.RegularExpressions.RegexRunner.Crawlpos">
      <summary>Used by a <see cref="T:System.Text.RegularExpressions.Regex" /> object generated by the <see cref="Overload:System.Text.RegularExpressions.Regex.CompileToAssembly" /> method. </summary>
    </member>
    <member name="M:System.Text.RegularExpressions.RegexRunner.DoubleCrawl">
      <summary>Used by a <see cref="T:System.Text.RegularExpressions.Regex" /> object generated by the <see cref="Overload:System.Text.RegularExpressions.Regex.CompileToAssembly" /> method. </summary>
    </member>
    <member name="M:System.Text.RegularExpressions.RegexRunner.DoubleStack">
      <summary>Used by a <see cref="T:System.Text.RegularExpressions.Regex" /> object generated by the <see cref="Overload:System.Text.RegularExpressions.Regex.CompileToAssembly" /> method. </summary>
    </member>
    <member name="M:System.Text.RegularExpressions.RegexRunner.DoubleTrack">
      <summary>Used by a <see cref="T:System.Text.RegularExpressions.Regex" /> object generated by the <see cref="Overload:System.Text.RegularExpressions.Regex.CompileToAssembly" /> method. </summary>
    </member>
    <member name="M:System.Text.RegularExpressions.RegexRunner.EnsureStorage">
      <summary>Used by a <see cref="T:System.Text.RegularExpressions.Regex" /> object generated by the <see cref="Overload:System.Text.RegularExpressions.Regex.CompileToAssembly" /> method. </summary>
    </member>
    <member name="M:System.Text.RegularExpressions.RegexRunner.FindFirstChar">
      <summary>Used by a <see cref="T:System.Text.RegularExpressions.Regex" /> object generated by the <see cref="Overload:System.Text.RegularExpressions.Regex.CompileToAssembly" /> method. </summary>
    </member>
    <member name="M:System.Text.RegularExpressions.RegexRunner.Go">
      <summary>Used by a <see cref="T:System.Text.RegularExpressions.Regex" /> object generated by the <see cref="Overload:System.Text.RegularExpressions.Regex.CompileToAssembly" /> method. </summary>
    </member>
    <member name="M:System.Text.RegularExpressions.RegexRunner.InitTrackCount">
      <summary>Used by a <see cref="T:System.Text.RegularExpressions.Regex" /> object generated by the <see cref="Overload:System.Text.RegularExpressions.Regex.CompileToAssembly" /> method. </summary>
    </member>
    <member name="M:System.Text.RegularExpressions.RegexRunner.IsBoundary(System.Int32,System.Int32,System.Int32)">
      <summary>Used by a <see cref="T:System.Text.RegularExpressions.Regex" /> object generated by the <see cref="Overload:System.Text.RegularExpressions.Regex.CompileToAssembly" /> method. </summary>
    </member>
    <member name="M:System.Text.RegularExpressions.RegexRunner.IsECMABoundary(System.Int32,System.Int32,System.Int32)">
      <summary>Used by a <see cref="T:System.Text.RegularExpressions.Regex" /> object generated by the <see cref="Overload:System.Text.RegularExpressions.Regex.CompileToAssembly" /> method. </summary>
    </member>
    <member name="M:System.Text.RegularExpressions.RegexRunner.IsMatched(System.Int32)">
      <summary>Used by a <see cref="T:System.Text.RegularExpressions.Regex" /> object generated by the <see cref="Overload:System.Text.RegularExpressions.Regex.CompileToAssembly" /> method. </summary>
    </member>
    <member name="M:System.Text.RegularExpressions.RegexRunner.MatchIndex(System.Int32)">
      <summary>Used by a <see cref="T:System.Text.RegularExpressions.Regex" /> object generated by the <see cref="Overload:System.Text.RegularExpressions.Regex.CompileToAssembly" /> method. </summary>
    </member>
    <member name="M:System.Text.RegularExpressions.RegexRunner.MatchLength(System.Int32)">
      <summary>Used by a <see cref="T:System.Text.RegularExpressions.Regex" /> object generated by the <see cref="Overload:System.Text.RegularExpressions.Regex.CompileToAssembly" /> method. </summary>
    </member>
    <member name="M:System.Text.RegularExpressions.RegexRunner.Popcrawl">
      <summary>Used by a <see cref="T:System.Text.RegularExpressions.Regex" /> object generated by the <see cref="Overload:System.Text.RegularExpressions.Regex.CompileToAssembly" /> method. </summary>
    </member>
    <member name="F:System.Text.RegularExpressions.RegexRunner.runcrawl">
      <summary>Used by a <see cref="T:System.Text.RegularExpressions.Regex" /> object generated by the <see cref="Overload:System.Text.RegularExpressions.Regex.CompileToAssembly" /> method. </summary>
    </member>
    <member name="F:System.Text.RegularExpressions.RegexRunner.runcrawlpos">
      <summary>Used by a <see cref="T:System.Text.RegularExpressions.Regex" /> object generated by the <see cref="Overload:System.Text.RegularExpressions.Regex.CompileToAssembly" /> method. </summary>
    </member>
    <member name="F:System.Text.RegularExpressions.RegexRunner.runmatch">
      <summary>Used by a <see cref="T:System.Text.RegularExpressions.Regex" /> object generated by the <see cref="Overload:System.Text.RegularExpressions.Regex.CompileToAssembly" /> method. </summary>
    </member>
    <member name="F:System.Text.RegularExpressions.RegexRunner.runregex">
      <summary>Used by a <see cref="T:System.Text.RegularExpressions.Regex" /> object generated by the <see cref="Overload:System.Text.RegularExpressions.Regex.CompileToAssembly" /> method. </summary>
    </member>
    <member name="F:System.Text.RegularExpressions.RegexRunner.runstack">
      <summary>Used by a <see cref="T:System.Text.RegularExpressions.Regex" /> object generated by the <see cref="Overload:System.Text.RegularExpressions.Regex.CompileToAssembly" /> method. </summary>
    </member>
    <member name="F:System.Text.RegularExpressions.RegexRunner.runstackpos">
      <summary>Used by a <see cref="T:System.Text.RegularExpressions.Regex" /> object generated by the <see cref="Overload:System.Text.RegularExpressions.Regex.CompileToAssembly" /> method. </summary>
    </member>
    <member name="F:System.Text.RegularExpressions.RegexRunner.runtext">
      <summary>Used by a <see cref="T:System.Text.RegularExpressions.Regex" /> object generated by the <see cref="Overload:System.Text.RegularExpressions.Regex.CompileToAssembly" /> method. </summary>
    </member>
    <member name="F:System.Text.RegularExpressions.RegexRunner.runtextbeg">
      <summary>Used by a <see cref="T:System.Text.RegularExpressions.Regex" /> object generated by the <see cref="Overload:System.Text.RegularExpressions.Regex.CompileToAssembly" /> method. </summary>
    </member>
    <member name="F:System.Text.RegularExpressions.RegexRunner.runtextend">
      <summary>Used by a <see cref="T:System.Text.RegularExpressions.Regex" /> object generated by the <see cref="Overload:System.Text.RegularExpressions.Regex.CompileToAssembly" /> method. </summary>
    </member>
    <member name="F:System.Text.RegularExpressions.RegexRunner.runtextpos">
      <summary>Used by a <see cref="T:System.Text.RegularExpressions.Regex" /> object generated by the <see cref="Overload:System.Text.RegularExpressions.Regex.CompileToAssembly" /> method. </summary>
    </member>
    <member name="F:System.Text.RegularExpressions.RegexRunner.runtextstart">
      <summary>Used by a <see cref="T:System.Text.RegularExpressions.Regex" /> object generated by the <see cref="Overload:System.Text.RegularExpressions.Regex.CompileToAssembly" /> method. </summary>
    </member>
    <member name="F:System.Text.RegularExpressions.RegexRunner.runtrack">
      <summary>Used by a <see cref="T:System.Text.RegularExpressions.Regex" /> object generated by the <see cref="Overload:System.Text.RegularExpressions.Regex.CompileToAssembly" /> method. </summary>
    </member>
    <member name="F:System.Text.RegularExpressions.RegexRunner.runtrackcount">
      <summary>Used by a <see cref="T:System.Text.RegularExpressions.Regex" /> object generated by the <see cref="Overload:System.Text.RegularExpressions.Regex.CompileToAssembly" /> method. </summary>
    </member>
    <member name="F:System.Text.RegularExpressions.RegexRunner.runtrackpos">
      <summary>Used by a <see cref="T:System.Text.RegularExpressions.Regex" /> object generated by the <see cref="Overload:System.Text.RegularExpressions.Regex.CompileToAssembly" /> method. </summary>
    </member>
    <member name="M:System.Text.RegularExpressions.RegexRunner.Scan(System.Text.RegularExpressions.Regex,System.String,System.Int32,System.Int32,System.Int32,System.Int32,System.Boolean)">
      <summary>Used by a <see cref="T:System.Text.RegularExpressions.Regex" /> object generated by the <see cref="Overload:System.Text.RegularExpressions.Regex.CompileToAssembly" /> method. </summary>
    </member>
    <member name="M:System.Text.RegularExpressions.RegexRunner.TransferCapture(System.Int32,System.Int32,System.Int32,System.Int32)">
      <summary>Used by a <see cref="T:System.Text.RegularExpressions.Regex" /> object generated by the <see cref="Overload:System.Text.RegularExpressions.Regex.CompileToAssembly" /> method. </summary>
    </member>
    <member name="M:System.Text.RegularExpressions.RegexRunner.Uncapture">
      <summary>Used by a <see cref="T:System.Text.RegularExpressions.Regex" /> object generated by the <see cref="Overload:System.Text.RegularExpressions.Regex.CompileToAssembly" /> method.</summary>
    </member>
    <member name="T:System.Text.RegularExpressions.RegexRunnerFactory">
      <summary>Creates a <see cref="T:System.Text.RegularExpressions.RegexRunner" /> class for a compiled regular expression.</summary>
    </member>
    <member name="M:System.Text.RegularExpressions.RegexRunnerFactory.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Text.RegularExpressions.RegexRunnerFactory" /> class. </summary>
    </member>
    <member name="M:System.Text.RegularExpressions.RegexRunnerFactory.CreateInstance">
      <summary>When overridden in a derived class, creates a <see cref="T:System.Text.RegularExpressions.RegexRunner" /> object for a specific compiled regular expression.</summary>
      <returns>A <see cref="T:System.Text.RegularExpressions.RegexRunner" /> object designed to execute a specific compiled regular expression. </returns>
    </member>
    <member name="T:System.Threading.Barrier">
      <summary>Enables multiple tasks to cooperatively work on an algorithm in parallel through multiple phases.</summary>
    </member>
    <member name="M:System.Threading.Barrier.#ctor(System.Int32)">
      <summary>Initializes a new instance of the <see cref="T:System.Threading.Barrier" /> class.</summary>
      <param name="participantCount">The number of participating threads.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="participantCount" /> is less than 0 or greater than 32,767.</exception>
    </member>
    <member name="M:System.Threading.Barrier.#ctor(System.Int32,System.Action{System.Threading.Barrier})">
      <summary>Initializes a new instance of the <see cref="T:System.Threading.Barrier" /> class.</summary>
      <param name="participantCount">The number of participating threads.</param>
      <param name="postPhaseAction">The <see cref="T:System.Action`1" /> to be executed after each phase.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="participantCount" /> is less than 0 or greater than 32,767.</exception>
    </member>
    <member name="M:System.Threading.Barrier.AddParticipant">
      <summary>Notifies the <see cref="T:System.Threading.Barrier" /> that there will be an additional participant.</summary>
      <returns>The phase number of the barrier in which the new participants will first participate.</returns>
      <exception cref="T:System.ObjectDisposedException">The current instance has already been disposed.</exception>
      <exception cref="T:System.InvalidOperationException">Adding a participant would cause the barrier's participant count to exceed 32,767.-or-The method was invoked from within a post-phase action.</exception>
    </member>
    <member name="M:System.Threading.Barrier.AddParticipants(System.Int32)">
      <summary>Notifies the <see cref="T:System.Threading.Barrier" /> that there will be additional participants.</summary>
      <returns>The phase number of the barrier in which the new participants will first participate.</returns>
      <param name="participantCount">The number of additional participants to add to the barrier.</param>
      <exception cref="T:System.ObjectDisposedException">The current instance has already been disposed.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="participantCount" /> is less than 0.-or-Adding <paramref name="participantCount" /> participants would cause the barrier's participant count to exceed 32,767.</exception>
      <exception cref="T:System.InvalidOperationException">The method was invoked from within a post-phase action.</exception>
    </member>
    <member name="P:System.Threading.Barrier.CurrentPhaseNumber">
      <summary>Gets the number of the barrier's current phase.</summary>
      <returns>Returns the number of the barrier's current phase.</returns>
    </member>
    <member name="M:System.Threading.Barrier.Dispose">
      <summary>Releases all resources used by the current instance of the <see cref="T:System.Threading.Barrier" /> class.</summary>
      <exception cref="T:System.InvalidOperationException">The method was invoked from within a post-phase action.</exception>
    </member>
    <member name="M:System.Threading.Barrier.Dispose(System.Boolean)">
      <summary>When overridden in a derived class, releases the unmanaged resources used by the <see cref="T:System.Threading.Barrier" />, and optionally releases the managed resources.</summary>
      <param name="disposing">true to release both managed and unmanaged resources; false to release only unmanaged resources.</param>
    </member>
    <member name="P:System.Threading.Barrier.ParticipantCount">
      <summary>Gets the total number of participants in the barrier.</summary>
      <returns>Returns the total number of participants in the barrier.</returns>
    </member>
    <member name="P:System.Threading.Barrier.ParticipantsRemaining">
      <summary>Gets the number of participants in the barrier that haven’t yet signaled in the current phase.</summary>
      <returns>Returns the number of participants in the barrier that haven’t yet signaled in the current phase.</returns>
    </member>
    <member name="M:System.Threading.Barrier.RemoveParticipant">
      <summary>Notifies the <see cref="T:System.Threading.Barrier" /> that there will be one less participant.</summary>
      <exception cref="T:System.ObjectDisposedException">The current instance has already been disposed.</exception>
      <exception cref="T:System.InvalidOperationException">The barrier already has 0 participants.-or-The method was invoked from within a post-phase action.</exception>
    </member>
    <member name="M:System.Threading.Barrier.RemoveParticipants(System.Int32)">
      <summary>Notifies the <see cref="T:System.Threading.Barrier" /> that there will be fewer participants.</summary>
      <param name="participantCount">The number of additional participants to remove from the barrier.</param>
      <exception cref="T:System.ObjectDisposedException">The current instance has already been disposed.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="participantCount" /> is less than 0.</exception>
      <exception cref="T:System.InvalidOperationException">The barrier already has 0 participants.-or-The method was invoked from within a post-phase action.</exception>
    </member>
    <member name="M:System.Threading.Barrier.SignalAndWait">
      <summary>Signals that a participant has reached the <see cref="T:System.Threading.Barrier" /> and waits for all other participants to reach the barrier as well.</summary>
      <exception cref="T:System.ObjectDisposedException">The current instance has already been disposed.</exception>
      <exception cref="T:System.InvalidOperationException">The method was invoked from within a post-phase action, the barrier currently has 0 participants, or the barrier is being used by more threads than are registered as participants.</exception>
    </member>
    <member name="M:System.Threading.Barrier.SignalAndWait(System.Int32)">
      <summary>Signals that a participant has reached the <see cref="T:System.Threading.Barrier" /> and waits for all other participants to reach the barrier as well, using a 32-bit signed integer to measure the time interval.</summary>
      <returns>true if all other participants reached the barrier; otherwise, false.</returns>
      <param name="millisecondsTimeout">The number of milliseconds to wait, or <see cref="F:System.Threading.Timeout.Infinite" />(-1) to wait indefinitely.</param>
      <exception cref="T:System.ObjectDisposedException">The current instance has already been disposed.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="millisecondsTimeout" /> is a negative number other than -1, which represents an infinite time-out.</exception>
      <exception cref="T:System.InvalidOperationException">The method was invoked from within a post-phase action, the barrier currently has 0 participants, or the barrier is being used by more threads than are registered as participants.</exception>
    </member>
    <member name="M:System.Threading.Barrier.SignalAndWait(System.Int32,System.Threading.CancellationToken)">
      <summary>Signals that a participant has reached the barrier and waits for all other participants to reach the barrier as well, using a 32-bit signed integer to measure the time interval, while observing a <see cref="T:System.Threading.CancellationToken" />.</summary>
      <returns>true if all other participants reached the barrier; otherwise, false.</returns>
      <param name="millisecondsTimeout">The number of milliseconds to wait, or <see cref="F:System.Threading.Timeout.Infinite" />(-1) to wait indefinitely.</param>
      <param name="cancellationToken">The <see cref="T:System.Threading.CancellationToken" /> to observe.</param>
      <exception cref="T:System.OperationCanceledException">
        <paramref name="cancellationToken" /> has been canceled.</exception>
      <exception cref="T:System.ObjectDisposedException">The current instance has already been disposed.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="millisecondsTimeout" /> is a negative number other than -1, which represents an infinite time-out.</exception>
      <exception cref="T:System.InvalidOperationException">The method was invoked from within a post-phase action, the barrier currently has 0 participants, or the barrier is being used by more threads than are registered as participants.</exception>
    </member>
    <member name="M:System.Threading.Barrier.SignalAndWait(System.Threading.CancellationToken)">
      <summary>Signals that a participant has reached the <see cref="T:System.Threading.Barrier" /> and waits for all other participants to reach the barrier, while observing a <see cref="T:System.Threading.CancellationToken" />.</summary>
      <param name="cancellationToken">The <see cref="T:System.Threading.CancellationToken" /> to observe.</param>
      <exception cref="T:System.OperationCanceledException">
        <paramref name="cancellationToken" /> has been canceled.</exception>
      <exception cref="T:System.ObjectDisposedException">The current instance has already been disposed.</exception>
      <exception cref="T:System.InvalidOperationException">The method was invoked from within a post-phase action, the barrier currently has 0 participants, or the barrier is being used by more threads than are registered as participants.</exception>
    </member>
    <member name="M:System.Threading.Barrier.SignalAndWait(System.TimeSpan)">
      <summary>Signals that a participant has reached the <see cref="T:System.Threading.Barrier" /> and waits for all other participants to reach the barrier as well, using a <see cref="T:System.TimeSpan" /> to measure the time interval.</summary>
      <returns>true if all other participants reached the barrier; otherwise, false.</returns>
      <param name="timeout">A <see cref="T:System.TimeSpan" /> that represents the number of milliseconds to wait, or a <see cref="T:System.TimeSpan" /> that represents -1 milliseconds to wait indefinitely.</param>
      <exception cref="T:System.ObjectDisposedException">The current instance has already been disposed.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="timeout" />is a negative number other than -1 milliseconds, which represents an infinite time-out, or it is greater than 32,767.</exception>
      <exception cref="T:System.InvalidOperationException">The method was invoked from within a post-phase action, the barrier currently has 0 participants, or the barrier is being used by more threads than are registered as participants.</exception>
    </member>
    <member name="M:System.Threading.Barrier.SignalAndWait(System.TimeSpan,System.Threading.CancellationToken)">
      <summary>Signals that a participant has reached the <see cref="T:System.Threading.Barrier" /> and waits for all other participants to reach the barrier as well, using a <see cref="T:System.TimeSpan" /> to measure the time interval, while observing a <see cref="T:System.Threading.CancellationToken" />.</summary>
      <returns>true if all other participants reached the barrier; otherwise, false.</returns>
      <param name="timeout">A <see cref="T:System.TimeSpan" /> that represents the number of milliseconds to wait, or a <see cref="T:System.TimeSpan" /> that represents -1 milliseconds to wait indefinitely.</param>
      <param name="cancellationToken">The <see cref="T:System.Threading.CancellationToken" /> to observe.</param>
      <exception cref="T:System.OperationCanceledException">
        <paramref name="cancellationToken" /> has been canceled.</exception>
      <exception cref="T:System.ObjectDisposedException">The current instance has already been disposed.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="timeout" />is a negative number other than -1 milliseconds, which represents an infinite time-out.</exception>
      <exception cref="T:System.InvalidOperationException">The method was invoked from within a post-phase action, the barrier currently has 0 participants, or the barrier is being used by more threads than are registered as participants.</exception>
    </member>
    <member name="T:System.Threading.BarrierPostPhaseException">
      <summary>Represents an exception that can be thrown after a <see cref="T:System.Threading.Barrier" /> phase has completed.</summary>
    </member>
    <member name="M:System.Threading.BarrierPostPhaseException.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Threading.BarrierPostPhaseException" /> class with a system-supplied message that describes the error.</summary>
    </member>
    <member name="M:System.Threading.BarrierPostPhaseException.#ctor(System.Exception)">
      <summary>Initializes a new instance of the <see cref="T:System.Threading.BarrierPostPhaseException" /> class with the specified inner exception.</summary>
      <param name="innerException">The exception that is the cause of the current exception.</param>
    </member>
    <member name="M:System.Threading.BarrierPostPhaseException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Initializes a new instance of the <see cref="T:System.Threading.BarrierPostPhaseException" /> class with serialized data.</summary>
      <param name="info">The object that holds the serialized object data. </param>
      <param name="context">The contextual information about the source or destination. </param>
    </member>
    <member name="M:System.Threading.BarrierPostPhaseException.#ctor(System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.Threading.BarrierPostPhaseException" /> class with a specified message that describes the error.</summary>
      <param name="message">The message that describes the exception. The caller of this constructor is required to ensure that this string has been localized for the current system culture.</param>
    </member>
    <member name="M:System.Threading.BarrierPostPhaseException.#ctor(System.String,System.Exception)">
      <summary>Initializes a new instance of the <see cref="T:System.Threading.BarrierPostPhaseException" /> class with a specified error message and a reference to the inner exception that is the cause of this exception.</summary>
      <param name="message">The message that describes the exception. The caller of this constructor is required to ensure that this string has been localized for the current system culture. </param>
      <param name="innerException">The exception that is the cause of the current exception. If the <paramref name="innerException" /> parameter is not null, the current exception is raised in a catch block that handles the inner exception. </param>
    </member>
    <member name="T:System.Threading.Semaphore">
      <summary>Limits the number of threads that can access a resource or pool of resources concurrently. </summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Threading.Semaphore.#ctor(System.Int32,System.Int32)">
      <summary>Initializes a new instance of the <see cref="T:System.Threading.Semaphore" /> class, specifying the maximum number of concurrent entries and optionally reserving some entries.</summary>
      <param name="initialCount">The initial number of requests for the semaphore that can be granted concurrently.</param>
      <param name="maximumCount">The maximum number of requests for the semaphore that can be granted concurrently.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="initialCount" /> is greater than <paramref name="maximumCount" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="maximumCount" /> is less than 1.-or-<paramref name="initialCount" /> is less than 0.</exception>
    </member>
    <member name="M:System.Threading.Semaphore.#ctor(System.Int32,System.Int32,System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.Threading.Semaphore" /> class, specifying the maximum number of concurrent entries, optionally reserving some entries for the calling thread, and optionally specifying the name of a system semaphore object.</summary>
      <param name="initialCount">The initial number of requests for the semaphore that can be granted concurrently. </param>
      <param name="maximumCount">The maximum number of requests for the semaphore that can be granted concurrently.</param>
      <param name="name">The name of a named system semaphore object.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="initialCount" /> is greater than <paramref name="maximumCount" />.-or-<paramref name="name" /> is longer than 260 characters.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="maximumCount" /> is less than 1.-or-<paramref name="initialCount" /> is less than 0.</exception>
      <exception cref="T:System.IO.IOException">A Win32 error occurred.</exception>
      <exception cref="T:System.UnauthorizedAccessException">The named semaphore exists and has access control security, and the user does not have <see cref="F:System.Security.AccessControl.SemaphoreRights.FullControl" />.</exception>
      <exception cref="T:System.Threading.WaitHandleCannotBeOpenedException">The named semaphore cannot be created, perhaps because a wait handle of a different type has the same name.</exception>
    </member>
    <member name="M:System.Threading.Semaphore.#ctor(System.Int32,System.Int32,System.String,System.Boolean@)">
      <summary>Initializes a new instance of the <see cref="T:System.Threading.Semaphore" /> class, specifying the maximum number of concurrent entries, optionally reserving some entries for the calling thread, optionally specifying the name of a system semaphore object, and specifying a variable that receives a value indicating whether a new system semaphore was created.</summary>
      <param name="initialCount">The initial number of requests for the semaphore that can be satisfied concurrently. </param>
      <param name="maximumCount">The maximum number of requests for the semaphore that can be satisfied concurrently.</param>
      <param name="name">The name of a named system semaphore object.</param>
      <param name="createdNew">When this method returns, contains true if a local semaphore was created (that is, if <paramref name="name" /> is null or an empty string) or if the specified named system semaphore was created; false if the specified named system semaphore already existed. This parameter is passed uninitialized.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="initialCount" /> is greater than <paramref name="maximumCount" />. -or-<paramref name="name" /> is longer than 260 characters.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="maximumCount" /> is less than 1.-or-<paramref name="initialCount" /> is less than 0.</exception>
      <exception cref="T:System.IO.IOException">A Win32 error occurred.</exception>
      <exception cref="T:System.UnauthorizedAccessException">The named semaphore exists and has access control security, and the user does not have <see cref="F:System.Security.AccessControl.SemaphoreRights.FullControl" />.</exception>
      <exception cref="T:System.Threading.WaitHandleCannotBeOpenedException">The named semaphore cannot be created, perhaps because a wait handle of a different type has the same name.</exception>
    </member>
    <member name="M:System.Threading.Semaphore.#ctor(System.Int32,System.Int32,System.String,System.Boolean@,System.Security.AccessControl.SemaphoreSecurity)">
      <summary>Initializes a new instance of the <see cref="T:System.Threading.Semaphore" /> class, specifying the maximum number of concurrent entries, optionally reserving some entries for the calling thread, optionally specifying the name of a system semaphore object, specifying a variable that receives a value indicating whether a new system semaphore was created, and specifying security access control for the system semaphore.</summary>
      <param name="initialCount">The initial number of requests for the semaphore that can be satisfied concurrently. </param>
      <param name="maximumCount">The maximum number of requests for the semaphore that can be satisfied concurrently.</param>
      <param name="name">The name of a named system semaphore object.</param>
      <param name="createdNew">When this method returns, contains true if a local semaphore was created (that is, if <paramref name="name" /> is null or an empty string) or if the specified named system semaphore was created; false if the specified named system semaphore already existed. This parameter is passed uninitialized.</param>
      <param name="semaphoreSecurity">A <see cref="T:System.Security.AccessControl.SemaphoreSecurity" />  object that represents the access control security to be applied to the named system semaphore.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="initialCount" /> is greater than <paramref name="maximumCount" />.-or-<paramref name="name" /> is longer than 260 characters.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="maximumCount" /> is less than 1.-or-<paramref name="initialCount" /> is less than 0.</exception>
      <exception cref="T:System.UnauthorizedAccessException">The named semaphore exists and has access control security, and the user does not have <see cref="F:System.Security.AccessControl.SemaphoreRights.FullControl" />.</exception>
      <exception cref="T:System.IO.IOException">A Win32 error occurred.</exception>
      <exception cref="T:System.Threading.WaitHandleCannotBeOpenedException">The named semaphore cannot be created, perhaps because a wait handle of a different type has the same name.</exception>
    </member>
    <member name="M:System.Threading.Semaphore.GetAccessControl">
      <summary>Gets the access control security for a named system semaphore.</summary>
      <returns>A <see cref="T:System.Security.AccessControl.SemaphoreSecurity" /> object that represents the access control security for the named system semaphore.</returns>
      <exception cref="T:System.UnauthorizedAccessException">The current <see cref="T:System.Threading.Semaphore" /> object represents a named system semaphore, and the user does not have <see cref="F:System.Security.AccessControl.SemaphoreRights.ReadPermissions" /> rights.-or-The current <see cref="T:System.Threading.Semaphore" /> object represents a named system semaphore and was not opened with <see cref="F:System.Security.AccessControl.SemaphoreRights.ReadPermissions" /> rights.</exception>
      <exception cref="T:System.NotSupportedException">Not supported for Windows 98 or Windows Millennium Edition.</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Threading.Semaphore.OpenExisting(System.String)">
      <summary>Opens an existing named semaphore.</summary>
      <returns>A <see cref="T:System.Threading.Semaphore" /> object that represents a named system semaphore.</returns>
      <param name="name">The name of a named system semaphore.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="name" /> is an empty string.-or-<paramref name="name" /> is longer than 260 characters.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="name" /> is null.</exception>
      <exception cref="T:System.Threading.WaitHandleCannotBeOpenedException">The named semaphore does not exist.</exception>
      <exception cref="T:System.IO.IOException">A Win32 error occurred.</exception>
      <exception cref="T:System.UnauthorizedAccessException">The named semaphore exists, but the user does not have the security access required to use it.</exception>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="M:System.Threading.Semaphore.OpenExisting(System.String,System.Security.AccessControl.SemaphoreRights)">
      <summary>Opens an existing named semaphore, specifying the desired security access rights.</summary>
      <returns>A <see cref="T:System.Threading.Semaphore" /> object that represents the named system semaphore.</returns>
      <param name="name">The name of a system semaphore.</param>
      <param name="rights">A bitwise combination of the <see cref="T:System.Security.AccessControl.SemaphoreRights" />  values that represent the desired security access rights.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="name" /> is an empty string.-or-<paramref name="name" /> is longer than 260 characters.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="name" /> is null.</exception>
      <exception cref="T:System.Threading.WaitHandleCannotBeOpenedException">The named semaphore does not exist.</exception>
      <exception cref="T:System.IO.IOException">A Win32 error occurred.</exception>
      <exception cref="T:System.UnauthorizedAccessException">The named semaphore exists, but the user does not have the desired security access rights.</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Threading.Semaphore.Release">
      <summary>Exits the semaphore and returns the previous count.</summary>
      <returns>The count on the semaphore before the <see cref="Overload:System.Threading.Semaphore.Release" /> method was called. </returns>
      <exception cref="T:System.Threading.SemaphoreFullException">The semaphore count is already at the maximum value.</exception>
      <exception cref="T:System.IO.IOException">A Win32 error occurred with a named semaphore.</exception>
      <exception cref="T:System.UnauthorizedAccessException">The current semaphore represents a named system semaphore, but the user does not have <see cref="F:System.Security.AccessControl.SemaphoreRights.Modify" />.-or-The current semaphore represents a named system semaphore, but it was not opened with <see cref="F:System.Security.AccessControl.SemaphoreRights.Modify" />.</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Threading.Semaphore.Release(System.Int32)">
      <summary>Exits the semaphore a specified number of times and returns the previous count.</summary>
      <returns>The count on the semaphore before the <see cref="Overload:System.Threading.Semaphore.Release" /> method was called. </returns>
      <param name="releaseCount">The number of times to exit the semaphore.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="releaseCount" /> is less than 1.</exception>
      <exception cref="T:System.Threading.SemaphoreFullException">The semaphore count is already at the maximum value.</exception>
      <exception cref="T:System.IO.IOException">A Win32 error occurred with a named semaphore.</exception>
      <exception cref="T:System.UnauthorizedAccessException">The current semaphore represents a named system semaphore, but the user does not have <see cref="F:System.Security.AccessControl.SemaphoreRights.Modify" /> rights.-or-The current semaphore represents a named system semaphore, but it was not opened with <see cref="F:System.Security.AccessControl.SemaphoreRights.Modify" /> rights.</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Threading.Semaphore.SetAccessControl(System.Security.AccessControl.SemaphoreSecurity)">
      <summary>Sets the access control security for a named system semaphore.</summary>
      <param name="semaphoreSecurity">A <see cref="T:System.Security.AccessControl.SemaphoreSecurity" />  object that represents the access control security to be applied to the named system semaphore.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="semaphoreSecurity" /> is null.</exception>
      <exception cref="T:System.UnauthorizedAccessException">The user does not have <see cref="F:System.Security.AccessControl.SemaphoreRights.ChangePermissions" /> rights.-or-The semaphore was not opened with <see cref="F:System.Security.AccessControl.SemaphoreRights.ChangePermissions" /> rights.</exception>
      <exception cref="T:System.NotSupportedException">The current <see cref="T:System.Threading.Semaphore" /> object does not represent a named system semaphore.</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="T:System.Threading.ThreadExceptionEventArgs">
      <summary>Provides data for the <see cref="E:System.Windows.Forms.Application.ThreadException" /> event.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Threading.ThreadExceptionEventArgs.#ctor(System.Exception)">
      <summary>Initializes a new instance of the <see cref="T:System.Threading.ThreadExceptionEventArgs" /> class.</summary>
      <param name="t">The <see cref="T:System.Exception" /> that occurred. </param>
    </member>
    <member name="P:System.Threading.ThreadExceptionEventArgs.Exception">
      <summary>Gets the <see cref="T:System.Exception" /> that occurred.</summary>
      <returns>The <see cref="T:System.Exception" /> that occurred.</returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="T:System.Threading.ThreadExceptionEventHandler">
      <summary>Represents the method that will handle the <see cref="E:System.Windows.Forms.Application.ThreadException" /> event of an <see cref="T:System.Windows.Forms.Application" />.</summary>
      <param name="sender">The source of the event. </param>
      <param name="e">A <see cref="T:System.Threading.ThreadExceptionEventArgs" /> that contains the event data. </param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="T:System.Timers.ElapsedEventArgs">
      <summary>Provides data for the <see cref="E:System.Timers.Timer.Elapsed" /> event.</summary>
    </member>
    <member name="P:System.Timers.ElapsedEventArgs.SignalTime">
      <summary>Gets the time the <see cref="E:System.Timers.Timer.Elapsed" /> event was raised.</summary>
      <returns>The time the <see cref="E:System.Timers.Timer.Elapsed" /> event was raised.</returns>
    </member>
    <member name="T:System.Timers.ElapsedEventHandler">
      <summary>Represents the method that will handle the <see cref="E:System.Timers.Timer.Elapsed" /> event of a <see cref="T:System.Timers.Timer" />.</summary>
      <param name="sender">The source of the event. </param>
      <param name="e">An <see cref="T:System.Timers.ElapsedEventArgs" /> object that contains the event data. </param>
    </member>
    <member name="T:System.Timers.Timer">
      <summary>Generates recurring events in an application.</summary>
    </member>
    <member name="M:System.Timers.Timer.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Timers.Timer" /> class, and sets all the properties to their initial values.</summary>
    </member>
    <member name="M:System.Timers.Timer.#ctor(System.Double)">
      <summary>Initializes a new instance of the <see cref="T:System.Timers.Timer" /> class, and sets the <see cref="P:System.Timers.Timer.Interval" /> property to the specified number of milliseconds.</summary>
      <param name="interval">The time, in milliseconds, between events. The value must be greater than zero and less than or equal to <see cref="F:System.Int32.MaxValue" />.</param>
      <exception cref="T:System.ArgumentException">The value of the <paramref name="interval" /> parameter is less than or equal to zero, or greater than <see cref="F:System.Int32.MaxValue" />. </exception>
    </member>
    <member name="P:System.Timers.Timer.AutoReset">
      <summary>Gets or sets a value indicating whether the <see cref="T:System.Timers.Timer" /> should raise the <see cref="E:System.Timers.Timer.Elapsed" /> event each time the specified interval elapses or only after the first time it elapses.</summary>
      <returns>true if the <see cref="T:System.Timers.Timer" /> should raise the <see cref="E:System.Timers.Timer.Elapsed" /> event each time the interval elapses; false if it should raise the <see cref="E:System.Timers.Timer.Elapsed" /> event only once, after the first time the interval elapses. The default is true.</returns>
    </member>
    <member name="M:System.Timers.Timer.BeginInit">
      <summary>Begins the run-time initialization of a <see cref="T:System.Timers.Timer" /> that is used on a form or by another component.</summary>
    </member>
    <member name="M:System.Timers.Timer.Close">
      <summary>Releases the resources used by the <see cref="T:System.Timers.Timer" />.</summary>
    </member>
    <member name="M:System.Timers.Timer.Dispose(System.Boolean)">
      <summary>Releases all resources used by the current <see cref="T:System.Timers.Timer" />.</summary>
      <param name="disposing">true to release both managed and unmanaged resources; false to release only unmanaged resources. </param>
    </member>
    <member name="E:System.Timers.Timer.Elapsed">
      <summary>Occurs when the interval elapses.</summary>
    </member>
    <member name="P:System.Timers.Timer.Enabled">
      <summary>Gets or sets a value indicating whether the <see cref="T:System.Timers.Timer" /> should raise the <see cref="E:System.Timers.Timer.Elapsed" /> event.</summary>
      <returns>true if the <see cref="T:System.Timers.Timer" /> should raise the <see cref="E:System.Timers.Timer.Elapsed" /> event; otherwise, false. The default is false.</returns>
      <exception cref="T:System.ObjectDisposedException">This property cannot be set because the timer has been disposed.</exception>
      <exception cref="T:System.ArgumentException">The <see cref="P:System.Timers.Timer.Interval" /> property was set to a value greater than <see cref="F:System.Int32.MaxValue" /> before the timer was enabled. </exception>
    </member>
    <member name="M:System.Timers.Timer.EndInit">
      <summary>Ends the run-time initialization of a <see cref="T:System.Timers.Timer" /> that is used on a form or by another component.</summary>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="P:System.Timers.Timer.Interval">
      <summary>Gets or sets the interval at which to raise the <see cref="E:System.Timers.Timer.Elapsed" /> event.</summary>
      <returns>The time, in milliseconds, between <see cref="E:System.Timers.Timer.Elapsed" /> events. The value must be greater than zero and less than or equal to <see cref="F:System.Int32.MaxValue" />. The default is 100 milliseconds.</returns>
      <exception cref="T:System.ArgumentException">The interval is less than or equal to zero.-or-The interval is greater than <see cref="F:System.Int32.MaxValue" />, and the timer is currently enabled. (If the timer is not currently enabled, no exception is thrown until it is enabled.) </exception>
    </member>
    <member name="P:System.Timers.Timer.Site">
      <summary>Gets or sets the site that binds the <see cref="T:System.Timers.Timer" /> to its container in design mode.</summary>
      <returns>An <see cref="T:System.ComponentModel.ISite" /> interface representing the site that binds the <see cref="T:System.Timers.Timer" /> object to its container.</returns>
    </member>
    <member name="M:System.Timers.Timer.Start">
      <summary>Starts raising the <see cref="E:System.Timers.Timer.Elapsed" /> event by setting <see cref="P:System.Timers.Timer.Enabled" /> to true.</summary>
      <exception cref="T:System.ArgumentOutOfRangeException">The <see cref="T:System.Timers.Timer" /> is created with an interval equal to or greater than <see cref="F:System.Int32.MaxValue" /> + 1, or set to an interval less than zero.</exception>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="M:System.Timers.Timer.Stop">
      <summary>Stops raising the <see cref="E:System.Timers.Timer.Elapsed" /> event by setting <see cref="P:System.Timers.Timer.Enabled" /> to false.</summary>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="P:System.Timers.Timer.SynchronizingObject">
      <summary>Gets or sets the object used to marshal event-handler calls that are issued when an interval has elapsed.</summary>
      <returns>The <see cref="T:System.ComponentModel.ISynchronizeInvoke" /> representing the object used to marshal the event-handler calls that are issued when an interval has elapsed. The default is null.</returns>
    </member>
    <member name="T:System.Timers.TimersDescriptionAttribute">
      <summary>Sets the description that visual designers can display when referencing an event, extender, or property.</summary>
    </member>
    <member name="M:System.Timers.TimersDescriptionAttribute.#ctor(System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.Timers.TimersDescriptionAttribute" /> class.</summary>
      <param name="description">The description to use. </param>
    </member>
    <member name="P:System.Timers.TimersDescriptionAttribute.Description">
      <summary>Gets the description that visual designers can display when referencing an event, extender, or property.</summary>
      <returns>The description for the event, extender, or property.</returns>
    </member>
    <member name="T:System.Web.AspNetHostingPermission">
      <summary>Controls access permissions in ASP.NET hosted environments. This class cannot be inherited.</summary>
    </member>
    <member name="M:System.Web.AspNetHostingPermission.#ctor(System.Security.Permissions.PermissionState)">
      <summary>Initializes a new instance of the <see cref="T:System.Web.AspNetHostingPermission" /> class with the specified <see cref="T:System.Security.Permissions.PermissionState" /> enumeration value.</summary>
      <param name="state">A <see cref="T:System.Security.Permissions.PermissionState" /> enumeration value. </param>
      <exception cref="T:System.ArgumentException">
        <paramref name="state" /> is not set to one of the <see cref="T:System.Security.Permissions.PermissionState" /> enumeration values.</exception>
    </member>
    <member name="M:System.Web.AspNetHostingPermission.#ctor(System.Web.AspNetHostingPermissionLevel)">
      <summary>Initializes a new instance of the <see cref="T:System.Web.AspNetHostingPermission" /> class with the specified permission level.</summary>
      <param name="level">An <see cref="T:System.Web.AspNetHostingPermissionLevel" /> enumeration value. </param>
    </member>
    <member name="M:System.Web.AspNetHostingPermission.Copy">
      <summary>When implemented by a derived class, creates and returns an identical copy of the current permission object.</summary>
      <returns>A copy of the current permission object.</returns>
    </member>
    <member name="M:System.Web.AspNetHostingPermission.FromXml(System.Security.SecurityElement)">
      <summary>Reconstructs a permission object with a specified state from an XML encoding.</summary>
      <param name="securityElement">The <see cref="T:System.Security.SecurityElement" /> containing the XML encoding to use to reconstruct the permission object. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="securityElement" /> is null. </exception>
      <exception cref="T:System.ArgumentException">The <see cref="P:System.Security.SecurityElement.Tag" /> property of <paramref name="securityElement" /> is not equal to "IPermission". - or- The class <see cref="M:System.Security.SecurityElement.Attribute(System.String)" /> of <paramref name="securityElement" /> is null or an empty string (""). </exception>
    </member>
    <member name="M:System.Web.AspNetHostingPermission.Intersect(System.Security.IPermission)">
      <summary>When implemented by a derived class, creates and returns a permission that is the intersection of the current permission and the specified permission.</summary>
      <returns>An <see cref="T:System.Security.IPermission" /> that represents the intersection of the current permission and the specified permission; otherwise, null if the intersection is empty.</returns>
      <param name="target">A permission to combine with the current permission. It must be of the same type as the current permission. </param>
      <exception cref="T:System.ArgumentException">
        <paramref name="target" /> is not an <see cref="T:System.Web.AspNetHostingPermission" />. </exception>
    </member>
    <member name="M:System.Web.AspNetHostingPermission.IsSubsetOf(System.Security.IPermission)">
      <summary>Returns a value indicating whether the current permission is a subset of the specified permission.</summary>
      <returns>true if the current <see cref="T:System.Security.IPermission" /> is a subset of the specified <see cref="T:System.Security.IPermission" />; otherwise, false.</returns>
      <param name="target">The <see cref="T:System.Security.IPermission" /> to combine with the current permission. It must be of the same type as the current <see cref="T:System.Security.IPermission" />. </param>
      <exception cref="T:System.ArgumentException">
        <paramref name="target" /> is not an <see cref="T:System.Web.AspNetHostingPermission" />. </exception>
    </member>
    <member name="M:System.Web.AspNetHostingPermission.IsUnrestricted">
      <summary>Returns a value indicating whether unrestricted access to the resource that is protected by the current permission is allowed.</summary>
      <returns>true if unrestricted use of the resource protected by the permission is allowed; otherwise, false.</returns>
    </member>
    <member name="P:System.Web.AspNetHostingPermission.Level">
      <summary>Gets or sets the current hosting permission level for an ASP.NET application.</summary>
      <returns>One of the <see cref="T:System.Web.AspNetHostingPermissionLevel" /> enumeration values.</returns>
    </member>
    <member name="M:System.Web.AspNetHostingPermission.ToXml">
      <summary>Creates an XML encoding of the permission object and its current state.</summary>
      <returns>A <see cref="T:System.Security.SecurityElement" /> containing the XML encoding of the permission object, including any state information.</returns>
    </member>
    <member name="M:System.Web.AspNetHostingPermission.Union(System.Security.IPermission)">
      <summary>Creates a permission that is the union of the current permission and the specified permission.</summary>
      <returns>An <see cref="T:System.Security.IPermission" /> that represents the union of the current permission and the specified permission.</returns>
      <param name="target">A permission to combine with the current permission. It must be of the same type as the current permission. </param>
      <exception cref="T:System.ArgumentException">
        <paramref name="target" /> is not an <see cref="T:System.Web.AspNetHostingPermission" />. </exception>
    </member>
    <member name="T:System.Web.AspNetHostingPermissionAttribute">
      <summary>Allows security actions for <see cref="T:System.Web.AspNetHostingPermission" /> to be applied to code using declarative security. This class cannot be inherited.</summary>
    </member>
    <member name="M:System.Web.AspNetHostingPermissionAttribute.#ctor(System.Security.Permissions.SecurityAction)">
      <summary>Initializes a new instance of the <see cref="T:System.Web.AspNetHostingPermissionAttribute" /> class.</summary>
      <param name="action">One of the <see cref="T:System.Security.Permissions.SecurityAction" /> enumeration values. </param>
    </member>
    <member name="M:System.Web.AspNetHostingPermissionAttribute.CreatePermission">
      <summary>Creates a new <see cref="T:System.Web.AspNetHostingPermission" /> with the permission level previously set by the <see cref="P:System.Web.AspNetHostingPermissionAttribute.Level" /> property.</summary>
      <returns>An <see cref="T:System.Security.IPermission" /> that is the new <see cref="T:System.Web.AspNetHostingPermission" />.</returns>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
      </PermissionSet>
    </member>
    <member name="P:System.Web.AspNetHostingPermissionAttribute.Level">
      <summary>Gets or sets the current hosting permission level.</summary>
      <returns>One of the <see cref="T:System.Web.AspNetHostingPermissionLevel" /> enumeration values.</returns>
    </member>
    <member name="T:System.Web.AspNetHostingPermissionLevel">
      <summary>Specifies the trust level that is granted to an ASP.NET Web application.</summary>
    </member>
    <member name="F:System.Web.AspNetHostingPermissionLevel.None">
      <summary>Indicates that no permission is granted. All demands for <see cref="T:System.Web.AspNetHostingPermission" /> will fail.</summary>
    </member>
    <member name="F:System.Web.AspNetHostingPermissionLevel.Minimal">
      <summary>Indicates that features protected with a demand for the <see cref="F:System.Web.AspNetHostingPermissionLevel.Minimal" /> level will succeed. This level allows code to execute but not to interact with resources present on the system. This level is granted by configuring at least the <see cref="F:System.Web.AspNetHostingPermissionLevel.Minimal" /> trust level using the trust section in a configuration file.</summary>
    </member>
    <member name="F:System.Web.AspNetHostingPermissionLevel.Low">
      <summary>Indicates that features protected with a demand for any level less than or equal to the <see cref="F:System.Web.AspNetHostingPermissionLevel.Low" /> level will succeed. This level is intended to allow read-only access to limited resources in a constrained environment. This level is granted by specifying the <see cref="F:System.Web.AspNetHostingPermissionLevel.Low" /> trust level in the trust section in a configuration file.</summary>
    </member>
    <member name="F:System.Web.AspNetHostingPermissionLevel.Medium">
      <summary>Indicates that features protected with a demand for any level less than or equal to the <see cref="F:System.Web.AspNetHostingPermissionLevel.Medium" /> level will succeed. This level is granted by configuring at least the <see cref="F:System.Web.AspNetHostingPermissionLevel.Medium" /> trust level in the trust section in a configuration file.</summary>
    </member>
    <member name="F:System.Web.AspNetHostingPermissionLevel.High">
      <summary>Indicates that features protected with a demand for any level less than or equal to the High trust level will succeed. This level is intended for highly trusted managed-code applications that need to use most of the managed permissions that support semi-trusted access. It does not grant some of the highest permissions (for example, the ability to call into native code), but it does provide a way to run trusted applications with least privilege or to provide some level of constraints for highly trusted applications. This level is granted by configuring at least the <see cref="F:System.Web.AspNetHostingPermissionLevel.High" /> trust level in the trust section in a configuration file.</summary>
    </member>
    <member name="F:System.Web.AspNetHostingPermissionLevel.Unrestricted">
      <summary>Indicates that all demands for permission to use all features of an application will be granted. This is equivalent to granting Full trust level in the trust section in a configuration file.</summary>
    </member>
  </members>
</doc>
=== C:/Users/treeman/Desktop/windows nt source code\xbox\Xbox Live Source\XONLINE_MAIN\public\ext\sdk\vs10rtm\SDK\bin\vsstools\BetestSample.xml ===
<BETest>

  <Writer writerId="5affb034-969f-4919-8875-88f830d0ef89">

    <Component componentName="TestFiles" >

    </Component>

  </Writer>

</BETest>
=== C:/Users/treeman/Desktop/windows nt source code\xbox\Xbox Live Source\XONLINE_MAIN\public\ext\sdk\vs10rtm\SDK\bin\vsstools\betest.xml ===
<?xml-stylesheet type="text/xsl" href="xdr-schema.xsl"?>
<Schema name="BETestConfig" xmlns="urn:schemas-microsoft-com:xml-data" xmlns:dt="urn:schemas-microsoft-com:datatypes">

<AttributeType name="filespec" dt:type="string" required="yes">
   <description>
   File specification.  Can include wildcard characters ? and *
   </description>
</AttributeType>

<AttributeType name="path" dt:type="string" required="yes">
   <description>
   Path to a file.  The path can include environment variables or
   values extracted from registry keys.
   </description>
</AttributeType>

<AttributeType name="recursive" dt:type="enumeration"
               dt:values="yes no" default="no">
   <description>
   Is path specified recursive or limited to the directory that is specified.
   </description>
</AttributeType>

<AttributeType name="alternatePath" dt:type="string" required="no">
   <description>
   For New Targets, the alternate path to which the file specification should be restored to
   </description>
</AttributeType>

<AttributeType name="logicalPath" dt:type="string">
   <description>
   Logical path for a Writer component.  This logical name uses backslash
   as separators to form a logical namespace hierarchy
   </description>
</AttributeType>

<AttributeType name="componentName" dt:type="string">
   <description>
   Name used to identify a Writer component.  May be qualified by a
   logical path.
   </description>
</AttributeType>

<AttributeType name="instanceName" dt:type="string">
    <description>
    If multiple instances of a writer are running, they must all have instance names.
    In this case, the instance name can be used to specify which writer instance should 
    receive restore events for a particular component.
    </description>
</AttributeType>

<AttributeType name="backupOptions" dt:type="string">
    <description>
    BETest can use this attribute to send a writer-specific
    string for each component being backed up
    </description>
</AttributeType>

<AttributeType name="restoreOptions" dt:type="string">
    <description>
    BETest can use this attribute to send a writer-specific
    string for each component being restored
    </description>
</AttributeType>

<AttributeType name="authoritativeRestore" dt:type="enumeration"
			dt:values = "yes no" default = "no">
    <description>
    BETest can use this attribute to specify that a component should be restored in an authoritative manner
    </description>
</AttributeType>

    <AttributeType name="rollForwardType" dt:type="enumeration" required = "no"
               dt:values="none all partial">
      <description>
        This attributes determines how far a writer should roll forward restored data
        or not.
      </description>
    </AttributeType>

    <AttributeType name="rollForwardPoint" dt:type="string" required = "no">
      <description>
        This attributes determines how far a writer should roll forward restored data
        or not.
      </description>
    </AttributeType>

    <AttributeType name="restoreName" dt:type="string" required = "no">
      <description>
      This attribute allows a requestor to rename a component at restore time.
      </description>
    </AttributeType>

<AttributeType name="additionalRestores" dt:type="enumeration"
               dt:values="yes no" default="no">
    <description>
    Indicates whether additional restores of this component should
    be expected.
    </description>
</AttributeType>

<AttributeType name="writerId" dt:type="uuid" required="yes">
    <description>
   Unique id to identify the writer.  Note that this identifies the
   writer class rather than a specific instance of the writer.
    </description>
</AttributeType>

<ElementType name="BETest" content="eltOnly" model="closed">
    <description>
    Configuration information for BETest backup/restore
    </description>
    
    <element type="Writer" minOccurs="1" maxOccurs="*" />
</ElementType>

<ElementType name="Writer" content="eltOnly" model="closed">
    <description>
    Information about a writer that is to be backed up/restored
    </description>
    
    <attribute type="writerId" required="yes"/>
    <element type="Component" minOccurs="1" maxOccurs="*" />
</ElementType>

<ElementType name="Component" content="eltOnly" model="closed">
    <description>
    Information about a component that is to be backed up/restored
    </description>
    
    <attribute type="logicalPath" required="no" />
    <attribute type="componentName" required="yes" />
    <attribute type="instanceName" required="no" />
    <attribute type="backupOptions" required="no" />
    <attribute type="restoreOptions" required="no" />
    <attribute type="authoritativeRestore" required="no" />        
    <attribute type="additionalRestores" default="no"/>
    <element type="SubComponent" minOccurs="0" maxOccurs="*" />
    <element type="NewTarget" minOccurs="0" maxOccurs="*" />
</ElementType>

<ElementType name="SubComponent" content="eltOnly" model="closed">
    <description>
    Indicates that BETest is not to restore the root component.  Rather
    BETest is to restore the list of selectable-for-restore components.
    </description>
    
    <attribute type="logicalPath" required="no" />
    <attribute type="componentName" required="yes" />
</ElementType>

<ElementType name="NewTarget" content="eltOnly" model="closed">
    <description>
    Indicates that BETest is to restore the specified file specification to an
    alternate location.
    </description>
    
    <attribute type="path" required="yes"/>
    <attribute type="filespec" required="yes"/>
    <attribute type="recursive" default="no"/>
    <attribute type="alternatePath" required="yes" />
</ElementType>

</Schema>
=== C:/Users/treeman/Desktop/windows nt source code\xbox\Xbox Live Source\XONLINE_MAIN\public\ext\sdk\vs10rtm\SDK\bin\vsstools\swriter.xml ===
<Schema name="VssTestWriterConfig"
        xmlns="urn:schemas-microsoft-com:xml-data"
	xmlns:dt="urn:schemas-microsoft-com:datatypes">

<!-- Here we define all attributes that may be used across different elements of the document -->
<AttributeType name="filespec" dt:type="string">
	<description>
	File specification.  Can include wildcard characters ? and *
	</description>
</AttributeType>

<AttributeType name="path" dt:type="string">
	<description>
	Path to a file.  The path can include environment variables or
	values extracted from registry keys.
	</description>
</AttributeType>

<AttributeType name="recursive" dt:type="enumeration"
               dt:values="yes no">
	<description>
	Is path specified recursive or limited to the directory that is specified.
	</description>
</AttributeType>

<AttributeType name="alternatePath" dt:type="string">
	<description>
	Alternate path in which to find the file.  Files in a file group may
	have been copied to an alternative location by the writer.  Backup should
	pick up the files from the alternative location instead of the original
	location but should restore the files to their original location
	</description>
</AttributeType>

<AttributeType name="logicalPath" dt:type="string">
   <description>
   Logical path for a Writer component.  This logical name uses backslash
   as separators to form a logical namespace hierarchy
   </description>
</AttributeType>

<AttributeType name="componentName" dt:type="string">
   <description>
   Name used to identify a Writer component.  May be qualified by a
   logical path.
   </description>
</AttributeType>

<AttributeType name="instanceName" dt:type="string">
	<description>
	This provides the writer with a unique instance id that persists
	between backup and restore.  This allows the backup application
	to handle multiple writer instances at restore time.
	</description>
</AttributeType>
	
<!-- Here we define all of the possible elements of the document -->
<ElementType name="TestWriter" content="eltOnly" model="closed">
	<description>
	Configuration information for the VSS Test Writer.
	</description>

	<AttributeType name="usage" dt:type="enumeration"
		dt:values="USER_DATA
				   BOOTABLE_SYSTEM_STATE 
				   SYSTEM_SERVICE 
				   OTHER">
	      <description>
	      How the data associated with the writer is used.  
	      </description>
	</AttributeType>

	<AttributeType name="timestamped" dt:type="enumeration"
		dt:values="yes no">
		<description>
		Whether this writer supports timestamped components or not.
		</description>
	</AttributeType>

	<AttributeType name="supportsNewTarget" dt:type="enumeration"
		dt:values="yes no">
		<description>
		Whether this writer supports new target operations or not.
		</description>
	</AttributeType>

	<AttributeType name="supportsRestoreWithMove" dt:type="enumeration"
		dt:values="yes no">
		<description>
		Whether this writer supports redirecting components at restore time.
		</description>
	</AttributeType>
	
	<AttributeType name="supportsCopy" dt:type="enumeration"
		dt:values="yes no">
		<description>
		Whether this writer supports copy backups.
		</description>
	</AttributeType>

	<AttributeType name="supportsDifferential" dt:type="enumeration"
		dt:values="yes no">
		<description>
		Whether this writer supports differential backups.
		</description>
	</AttributeType>

	<AttributeType name="supportsIncremental" dt:type="enumeration"
		dt:values="yes no">
		<description>
		Whether this writer supports incremental backups.
		</description>
	</AttributeType>

	<AttributeType name="supportsLog" dt:type="enumeration"
		dt:values="yes no">
		<description>
		Whether this writer supports Log backups.
		</description>
	</AttributeType>

	<AttributeType name="supportsAuthRestore" dt:type="enumeration"
		dt:values="yes no">
		<description>
		Whether this writer supports authoritative restore.
		</description>
	</AttributeType>

	<AttributeType name="supportsRollforward" dt:type="enumeration"
		dt:values="yes no">
		<description>
		Whether this writer supports rollforward restore.
		</description>
	</AttributeType>

	<AttributeType name="supportsRestoreRename" dt:type="enumeration"
		dt:values="yes no">
		<description>
		Whether this writer supports component rename at restore time.
		</description>
	</AttributeType>

	<AttributeType name="verbosity" dt:type="enumeration"
	      dt:values="low medium high">
	      <description>
		Whether verbose output is enabled.      
		low:  	Messages are not printed if files are not properly restored
		medium:	Most general messages are printed, including warnings if files are not restored
		high:	Extremely verbose output is enabled.
	      </description>
	</AttributeType>

	<AttributeType name="checkExcludes" dt:type="enumeration"
		dt:values="yes no">
		<description>
		Whether to check that excluded files are not restored at restore time.  
		If restoring to a location that may contain files matching the exclude list,
		set this to false to prevent spurious warnings.
		</description>
	</AttributeType>

	<AttributeType name="checkIncludes" dt:type="enumeration"
		dt:values="yes no">
		<description>
		Whether to check that included files are restored at restore time.  
		</description>
	</AttributeType>

	<AttributeType name="deleteFiles" dt:type="enumeration"
		dt:values="yes no">
		<description>
		whether to delete files from original volume after snapshot is taken
		</description>
	</AttributeType>

	<AttributeType name="deletePartialFiles" dt:type="enumeration"
		dt:values="yes no">
		<description>
		whether to delete partial files from original volume after snapshot is taken
		</description>
	</AttributeType>

	<AttributeType name="deleteDifferencedFiles" dt:type="enumeration"
		dt:values="yes no">
		<description>
		whether to delete differenced files from original volume after snapshot is taken
		</description>
	</AttributeType>

	<AttributeType name="majorVersion" dt:type="number" >
	 <description>
	   Major version number of the writer.
	 </description>
	</AttributeType>
	<AttributeType name="minorVersion" dt:type="number" >
	 <description>
	   Minor version number of the writer.
	 </description>
	</AttributeType>

	<AttributeType name="excludeLowPriority" dt:type="enumeration"
		dt:values="yes no">
		<description>
		whether to exclude files using low-priority IO
		</description>
	</AttributeType>

	<attribute type="instanceName" required="no" />
	<attribute type="usage"  default="OTHER" />
	<attribute type="timestamped" default="no" />
	<attribute type="supportsNewTarget" default="yes" />
	<attribute type="supportsRestoreWithMove" default="yes" />
	<attribute type="supportsCopy" default = "no" />
	<attribute type="supportsDifferential" default = "no" />
	<attribute type="supportsIncremental" default = "no" />
	<attribute type="supportsLog" default = "no" />

	<attribute type="supportsAuthRestore" default = "no" />
	<attribute type="supportsRollforward" default = "no" />
	<attribute type="supportsRestoreRename" default = "no" />
	
	<attribute type="verbosity" default="medium" />
	<attribute type="checkExcludes" default="yes" />
	<attribute type="checkIncludes" default="yes" />
	<attribute type="deleteFiles" default="no" />
	<attribute type="deletePartialFiles" default="no" />
	<attribute type="deleteDifferencedFiles" default="no" />

	<attribute type="majorVersion" required="no" />
	<attribute type="minorVersion" required="no" />

	<attribute type="excludeLowPriority" default="no" />
	<element type="RestoreMethod"   />
 
	<group order="many">
		<element type="ExcludeFile" minOccurs="0" maxOccurs="*" />
		<element type="ExcludeFileFromSnapshot" minOccurs="0" maxOccurs="*" />		
		<element type="Component" minOccurs="0" maxOccurs="*" />
		<element type="FailEvent" minOccurs="0" maxOccurs="*" />
	</group>
</ElementType>

<ElementType name="RestoreMethod" content="eltOnly" model="closed">
	<description>
	How restore should be performed.  Includes specification of how files
	should be restored as well as special steps that should occur in order
	 to complete the restore.
	</description>

	<AttributeType name="method" dt:type="enumeration"
	         dt:values="RESTORE_IF_NONE_THERE
	                          RESTORE_IF_CAN_BE_REPLACED
	                          STOP_RESTART_SERVICE
	                          REPLACE_AT_REBOOT
	                          REPLACE_AT_REBOOT_IF_CANNOT_REPLACE
	                          RESTORE_TO_ALTERNATE_LOCATION
	                          CUSTOM">
		<description>
	       RESTORE_IF_NONE_THERE: i.e., can restore data if it is not at the
	          location where it was backed up from.  This essentially allows
		  data to be restored to a clean system
	       RESTORE_IF_CAN_BE_REPLACED: Restore data if all of the files can
	          be replaced in the orgiginal backup location.  Fails if any of
		  the files are open.  If an alternate location is provided, files
		  will be placed there if they cannot be restored to their original
		  location.
	       STOP_RESTART_SERVICE: stop service (service attribute must be
	          specified). Restore files to original backup location.
		  Restart service.  Fails if any of the files are open after the
		  service is stopped.
	       REPLACE_AT_REBOOT: Restore files to a temporary location.  Use
	          MoveFileEx to replace the files at reboot.
              REPLACE_AT_REBOOT_IF_CANNOT_REPLACE:  Similiar to REPLACE_AT_REBOOT
		   however files may be restored in place in they are not busy.  All files
		   within a component must be either completely replaced in place or
		   completely replaced at reboot, so if one component file is busy, all files
		   in that component must be replaced at reboot.
	          
	       RESTORE_TO_ALTERNATIVE_LOCATION: Restore files to an alternate
	          location.  Typically writerRestore will indicate that the writer
		  will participate in the restore process
		CUSTOM:  Custom restore method.  Requestor's should not handle this
		case at all for this writer.
	       </description>
	</AttributeType>

	<AttributeType name="service" dt:type="string">
		<description>
		Must be specified if method="STOP_RESTART_SERVICE", indicates
	      service to be stopped before restoring files.
		</description>
	</AttributeType>

	<AttributeType name="writerRestore" dt:type="enumeration"
                  dt:values="always never ifReplaceFails">
		<description>
		Whether writer should be invoked after files are restored to
		disk.  Options are always, never, and ifReplaceFails.  The latter means
		that the files will be restored to their original location.  If one
		or more of the files cannot be replaced, then the files will be
		restored to an alternate location (must be specified via
		ALTERNATE_LOCATION_MAPPING.  After the files are restored, the writer
		is invoked.
		</description>
	</AttributeType>

	<AttributeType name="rebootRequired" dt:type="enumeration"
                 dt:values="yes no">
		<description>
		Should a reboot be performed after restoring the data for this
		writer
		</description>
	</AttributeType>
	
	<attribute type="method" required="yes" />
	<attribute type="service" required="no" />
	<attribute type="writerRestore" default="always" />
	<attribute type="rebootRequired" default="no" />

	<element type="AlternateLocationMapping" minOccurs="0" maxOccurs="*" />
</ElementType>

<ElementType name="Dependency" content="empty" model="closed">
    <description>
    A dependency from one component to another component in another writer.
    </description>
    
  <AttributeType name="writerId" dt:type="uuid" required="yes">
    <description>
    Id of writer that this component is dependent on.
    </description>
  </AttributeType>


  <attribute type="writerId" required="yes" />
  <attribute type="logicalPath" required="no" />
  <attribute type="componentName" required="yes" />
</ElementType>

<ElementType name="ComponentFile" content="empty" model="closed">
	<description>
	Location of a file in a component.  For database components, the alternatePath
	attribute is ignored.
	</description>

	<AttributeType name="fullBackupRequired" dt:type="enumeration"
				dt:values="yes no" >
	<description>
	Whether this file needs backing up during a full backup.
	</description>
	</AttributeType>

	<AttributeType name="diffBackupRequired" dt:type="enumeration"
				dt:values="yes no" >
	<description>
	Whether this file needs backing up during a differential backup.
	</description>	
	</AttributeType>

	<AttributeType name="incBackupRequired" dt:type="enumeration"
				dt:values="yes no" >
	<description>
	Whether this file needs backing up during an incremental backup.
	</description>
	</AttributeType>

	<AttributeType name="logBackupRequired" dt:type="enumeration"
				dt:values="yes no" >
	<description>
	Whether this file needs backing up during a log backup.
	</description>
	</AttributeType>
	
	<AttributeType name="fullSnapshotRequired" dt:type="enumeration"
				dt:values="yes no" >
	<description>
	Whether this file needs to be copied off of a snapshot during a full backup.
	</description>
	</AttributeType>
	
	<AttributeType name="diffSnapshotRequired" dt:type="enumeration"
				dt:values="yes no" >
	<description>
	Whether this file needs to be copied off of a snapshot during a differential backup.
	</description>
	</AttributeType>
	
	<AttributeType name="incSnapshotRequired" dt:type="enumeration"
				dt:values="yes no" >
	<description>
	Whether this file needs to be copied off of a snapshot during an incremental backup.
	</description>
	</AttributeType>
	
	<AttributeType name="logSnapshotRequired" dt:type="enumeration"
				dt:values="yes no" >
	<description>
	Whether this file needs to be copied off of a snapshot during a log backup.
	</description>
	</AttributeType>

	<AttributeType name="nonSnapshotFile" dt:type="string">
	<description>
	If the file is not being copied off of the snapshot volume, it is replaced by this file in PostSnapshot.
	This ensures that the requestor does not back up the file off of the snapshot
	</description>
	</AttributeType>
	
	<attribute type="path" required="yes" />
	<attribute type="filespec" required="yes" />
	<attribute type="recursive" required="yes" />
	<attribute type="alternatePath" required="no" />
	<attribute type="nonSnapshotFile" required="no" />
	
	<attribute type="fullBackupRequired" default="yes" />
	<attribute type="diffBackupRequired" default="yes" />
	<attribute type="incBackupRequired" default="yes" />
	<attribute type="logBackupRequired" default="yes" />

	<attribute type="fullSnapshotRequired" default="yes" />
	<attribute type="diffSnapshotRequired" default="yes" />
	<attribute type="incSnapshotRequired" default="yes" />
	<attribute type="logSnapshotRequired" default="yes" />
</ElementType>

<ElementType name="ExcludeFile" content="empty" model="closed">
	<description>
	Location of a file that the writer should mark as excluded from backup.
	</description>
	
	<attribute type ="path" required="yes" />
	<attribute type="filespec" required="yes" />
	<attribute type="recursive" required="yes" />
</ElementType>

<ElementType name="ExcludeFileFromSnapshot" content="empty" model="closed">
	<description>
	Location of a file that the writer should mark as excluded from a snapshot.
	</description>
	
	<attribute type ="path" required="yes" />
	<attribute type="filespec" required="yes" />
	<attribute type="recursive" required="yes" />	
</ElementType>

<ElementType name="DifferencedFile" content="empty" model="closed">
	<description>
	Differenced files that the writer will add during PostSnapshot
	</description>
	
	<AttributeType name="year" dt:type="number" >
	<description>
	The time that indicates the point of the last backup.
	</description>
	</AttributeType>

	<AttributeType name="month" dt:type="number" >
	<description>
	The time that indicates the point of the last backup.
	</description>
	</AttributeType>

	<AttributeType name="day" dt:type="number" >
	<description>
	The time that indicates the point of the last backup.
	</description>
	</AttributeType>

	<AttributeType name="hour" dt:type="number" >
	<description>
	The time that indicates the point of the last backup.
	</description>
	</AttributeType>

	<AttributeType name="minute" dt:type="number" >
	<description>
	The time that indicates the point of the last backup.
	</description>
	</AttributeType>

	<AttributeType name="second" dt:type="number" >
	<description>
	The time that indicates the point of the last backup.
	</description>
	</AttributeType>

	<attribute type ="path" required="yes" />
	<attribute type="filespec" required="yes" />
	<attribute type="recursive" required="yes" />

	<attribute type="year" default="0"/>
	<attribute type="month" default="0" />
	<attribute type="day" default="0" />
	<attribute type="hour" default="0" />
	<attribute type="minute" default="0" />
	<attribute type="second" default="0" />
</ElementType>

<ElementType name="PartialFile" content="empty" model="closed">
	<description>
	Partial file specification that the writer will add during PostSnapshot
	</description>

   <AttributeType name="ranges" dt:type="string">
       <description>
       This range list has the form (offset:length ...) where offset is
       the byte offset in the file to be backed up and length is the length
       of the data to be backed up.  Both are 32 bit integers (for this version 
       of the writer).  The ranges must be monotonically increasing and must 
       not overlap.  If the rangelist is not specified then the entire file should be 
       backed up.
       </description>
   </AttributeType>

	<attribute type="path" required="yes" />
	<attribute type="filespec" required="yes" />

	<attribute type="ranges" required="no" />
</ElementType>

<ElementType name="Component" content="eltOnly" model="closed">
	<description>
	Description of a Writer component.  Currently this can describe either a file-group 
	component or a database component.
	</description>

	<AttributeType name="componentType" dt:type="enumeration"
		dt:values="database filegroup">
		<description>
		specified the type of a Writer component
		</description>
	</AttributeType>

	<AttributeType name="selectable" dt:type="enumeration"
		dt:values="yes no">
		<description>
		Is this component selectable for backup or is it always backed up.
		If no, then the component is always backed up if any other components of
		the application/service are backed up.  If yes, then the
		component may be selectively backed up.
		</description>
	</AttributeType>

	<AttributeType name="selectableForRestore" dt:type="enumeration"
		dt:values="yes no" >
		<description>
		Is this component selectable for restore
		</description>
	</AttributeType>

	<AttributeType name="restoreTarget" dt:type="enumeration"
		dt:values="VSS_RT_ORIGINAL_LOCATION
				   VSS_RT_ALTERNATE">
		<description>
		Allows the writer to override the restore method for this component in the PreRestore event.
		VSS_RT_ORIGINAL_LOCATION:   all files in this component should be restored to their original locations.
		VSS_RT_ALTERNATE: all files in this component should be restored to the previously specified alternate location
		</description>
	</AttributeType>

	<AttributeType name="autoRecover" dt:type="enumeration"
		dt:values="backup appRollback never">
		<description>
		When auto recovery is required
		</description>
	</AttributeType>


	<attribute type="instanceName" required="no" />
	<attribute type="componentType" required="yes" />
	<attribute type="logicalPath" required="no" />
	<attribute type="componentName" required="yes" />
	<attribute type="selectable" default="yes" />
	<attribute type="selectableForRestore" default="no" />
	<attribute type="restoreTarget" required="no" />
	<attribute type="autoRecover" default="never"/>
	
	<group order="many">
		<element type="ComponentFile" minOccurs="0" maxOccurs="*" />
		<element type="DifferencedFile" minOccurs="0" maxOccurs="*" />
		<element type="PartialFile" minOccurs="0" maxOccurs="*" />
		<element type="Dependency" minOccurs="0" maxOccurs="*" />
	</group>
</ElementType>

<ElementType name="FailEvent" content="empty" model="closed">
	<description>
	Specifies an event that the Test Writer will fail.
	</description>

	<AttributeType name="writerEvent" dt:type="enumeration"
		dt:values="Identify
				   PrepareForBackup
				   PrepareForSnapshot
				   Freeze
				   Thaw
				   PostSnapshot
				   Abort
				   BackupComplete
				   BackupShutdown
				   PreRestore
				   PostRestore">
		<description>
		Defines the list of events that a Writer can fail.
		</description>
	</AttributeType>		

	<AttributeType name="retryable" dt:type="enumeration"
		dt:values="yes no">
		<description>
		Whether the failure should be retryable or not
		</description>
	</AttributeType>

	<AttributeType name="numFailures" dt:type="number">
	<description>
	If the failure is retryable, then this parameter indicates the number of times the writer should
	fail the event.
	</description>
	</AttributeType>
	
	<attribute type="writerEvent" required="yes" />
	<attribute type="retryable" default="yes" />
	<attribute type="numFailures" default="1" />
</ElementType>

<ElementType name="AlternateLocationMapping" content="empty" model="closed">
	<description>
	Mapping from a location that was backed up to a location to restore to.
	</description>
	
	<attribute type="path" required="yes" />
	<attribute type="filespec" required="yes" />
	<attribute type="recursive" default="no" />
	<attribute type="alternatePath" required="yes" />
</ElementType>

</Schema>
=== C:/Users/treeman/Desktop/windows nt source code\xbox\Xbox Live Source\XONLINE_MAIN\public\ext\sdk\vs10rtm\SDK\bin\isvtier5appsignsdk_client.xml ===
< ? x m l   v e r s i o n = " 1 . 0 "   e n c o d i n g = " u t f - 1 6 " ? > 
 
 < C E R T I F I C A T E C H A I N > 
 
     < C E R T I F I C A T E > P A A / A H g A b Q B s A C A A d g B l A H I A c w B p A G 8 A b g A 9 A C I A M Q A u A D A A I g A / A D 4 A P A B Y A H I A T Q B M A C A A e A B t A G w A b g B z A D 0 A I g A i A C A A d g B l A H I A c w B p A G 8 A b g A 9 A C I A M Q A u A D I A I g A + A D w A Q g B P A E Q A W Q A g A H Q A e Q B w A G U A P Q A i A E w A S Q B D A E U A T g B T A E U A I g A g A H Y A Z Q B y A H M A a Q B v A G 4 A P Q A i A D M A L g A w A C I A P g A 8 A E k A U w B T A F U A R Q B E A F Q A S Q B N A E U A P g A y A D A A M A A 2 A C 0 A M A A 2 A C 0 A M g A y A F Q A M Q A 5 A D o A N Q A 0 A D w A L w B J A F M A U w B V A E U A R A B U A E k A T Q B F A D 4 A P A B W A E E A T A B J A E Q A S Q B U A F k A V A B J A E 0 A R Q A + A D w A R g B S A E 8 A T Q A + A D I A M A A w A D M A L Q A w A D I A L Q A w A D U A V A A w A D A A O g A w A D A A P A A v A E Y A U g B P A E 0 A P g A 8 A F U A T g B U A E k A T A A + A D I A M A A x A D Y A L Q A w A D Y A L Q A x A D k A V A A x A D k A O g A 1 A D Q A P A A v A F U A T g B U A E k A T A A + A D w A L w B W A E E A T A B J A E Q A S Q B U A F k A V A B J A E 0 A R Q A + A D w A R A B F A F M A Q w B S A E k A U A B U A E 8 A U g A + A D w A T w B C A E o A R Q B D A F Q A I A B 0 A H k A c A B l A D 0 A I g B B A H A A c A B s A G k A Y w B h A H Q A a Q B v A G 4 A L Q B T A G k A Z w B u A G k A b g B n A C 0 A Q w B l A H I A d A B p A G Y A a Q B j A G E A d A B l A C I A P g A 8 A E k A R A A g A H Q A e Q B w A G U A P Q A i A E 0 A U w A t A E c A V Q B J A E Q A I g A + A H s A N g B k A D U A Y Q B l A D Q A O Q B l A C 0 A Z g A 4 A D A A M A A t A D Q A Y Q A 4 A G Q A L Q B i A D U A M w B j A C 0 A M g B l A D U A Y g A 5 A D c A Z A A 2 A G Y A N w A w A G Q A f Q A 8 A C 8 A S Q B E A D 4 A P A A v A E 8 A Q g B K A E U A Q w B U A D 4 A P A A v A E Q A R Q B T A E M A U g B J A F A A V A B P A F I A P g A 8 A E k A U w B T A F U A R Q B S A D 4 A P A B P A E I A S g B F A E M A V A A g A H Q A e Q B w A G U A P Q A i A E Q A U g B N A C 0 A Q w B l A H I A d A B p A G Y A a Q B j A G E A d A B l A C 0 A Q Q B 1 A H Q A a A B v A H I A a Q B 0 A H k A I g A + A D w A S Q B E A C A A d A B 5 A H A A Z Q A 9 A C I A T Q B T A C 0 A R w B V A E k A R A A i A D 4 A e w B j A G Q A M A A z A D U A Z Q B j A G Q A L Q B l A D k A N Q A z A C 0 A N A B k A G I A O A A t A D g A M Q B h A D c A L Q B i A D I A M g B j A D g A Y Q B j A D Q A Z g B i A D E A N Q B 9 A D w A L w B J A E Q A P g A 8 A E 4 A Q Q B N A E U A P g B N A G k A Y w B y A G 8 A c w B v A G Y A d A A g A E Q A U g B N A C A A S Q B T A F Y A I A B N A G E A b g B p A G Y A Z Q B z A H Q A I A B T A G k A Z w B u A G k A b g B n A C A A S w B l A H k A I A B D A E E A P A A v A E 4 A Q Q B N A E U A P g A 8 A C 8 A T w B C A E o A R Q B D A F Q A P g A 8 A F A A V Q B C A E w A S Q B D A E s A R Q B Z A D 4 A P A B B A E w A R w B P A F I A S Q B U A E g A T Q A + A F I A U w B B A D w A L w B B A E w A R w B P A F I A S Q B U A E g A T Q A + A D w A U A B B A F I A Q Q B N A E U A V A B F A F I A I A B u A G E A b Q B l A D 0 A I g B w A H U A Y g B s A G k A Y w A t A G U A e A B w A G 8 A b g B l A G 4 A d A A i A D 4 A P A B W A E E A T A B V A E U A I A B l A G 4 A Y w B v A G Q A a Q B u A G c A P Q A i A G k A b g B 0 A G U A Z w B l A H I A M w A y A C I A P g A 2 A D U A N Q A z A D c A P A A v A F Y A Q Q B M A F U A R Q A + A D w A L w B Q A E E A U g B B A E 0 A R Q B U A E U A U g A + A D w A U A B B A F I A Q Q B N A E U A V A B F A F I A I A B u A G E A b Q B l A D 0 A I g B t A G 8 A Z A B 1 A G w A d Q B z A C I A P g A 8 A F Y A Q Q B M A F U A R Q A g A G U A b g B j A G 8 A Z A B p A G 4 A Z w A 9 A C I A Y g B h A H M A Z Q A 2 A D Q A I g A g A H M A a Q B 6 A G U A P Q A i A D E A M A A y A D Q A I g A + A G I A V g B 5 A F Y A c A B i A G w A b g A 1 A E 4 A a Q B z A G o A S g A 3 A F A A V w B F A H c A R A B v A D E A a g B R A F g A a w B I A H o A L w A z A E Y A M w B k A F k A a A B Q A F I A M A B 5 A F E A W g B v A F A A V g B S A F U A U A B Q A E M A N Q A x A F c A U w A 2 A E c A d Q A 2 A H I A W A B F A H Q A R A A y A G 8 A S A B r A E U A N g A 1 A F g A M g A w A G E A Y g B D A G Q A O Q B s A G w A U w A z A E g A Q w A x A E Q A Z A B E A E Y A Z g B U A E U A T Q B j A C 8 A e Q B p A E 8 A b A B G A G s A d A B G A E U A U A B N A G s A a Q B 2 A G c A W Q B O A E E A Z w B j A H I A R g B E A G Y A Q Q B P A H c A a Q B J A E U A W g B U A G Q A a A B 2 A D Y A R Q A x A F k A V g B x A F E A W Q B 1 A E I A V A A y A F Q A Y g A y A G c A V Q B 2 A G 0 A S w B r A G I A Y Q A w A F g A O Q B 1 A E 4 A U A B V A G 0 A T w B a A F E A Y g B 2 A H k A a w B B A G g A Y Q B 3 A D 0 A P A A v A F Y A Q Q B M A F U A R Q A + A D w A L w B Q A E E A U g B B A E 0 A R Q B U A E U A U g A + A D w A L w B Q A F U A Q g B M A E k A Q w B L A E U A W Q A + A D w A L w B J A F M A U w B V A E U A U g A + A D w A S Q B T A F M A V Q B F A E Q A U A B S A E k A T g B D A E k A U A B B A E w A U w A + A D w A U A B S A E k A T g B D A E k A U A B B A E w A I A B p A G 4 A d A B l A H I A b g B h A G w A L Q B p A G Q A P Q A i A D E A I g A + A D w A T w B C A E o A R Q B D A F Q A I A B 0 A H k A c A B l A D 0 A I g B N A G E A b g B p A G Y A Z Q B z A H Q A L Q B T A G k A Z w B u A G k A b g B n A C 0 A S w B l A H k A I g A + A D w A S Q B E A C A A d A B 5 A H A A Z Q A 9 A C I A T Q B T A C 0 A R w B V A E k A R A A i A D 4 A e w A 4 A D k A Z A B j A D U A N w A w A D U A L Q A x A G I A N w A 5 A C 0 A N A B h A D Y A Y g A t A D g A N w B m A D c A L Q A w A D g A O A A 0 A D k A Y Q A 3 A D A A O A A 5 A D U A O A B 9 A D w A L w B J A E Q A P g A 8 A E 4 A Q Q B N A E U A P g B N A G k A Y w B y A G 8 A c w B v A G Y A d A A g A F I A T Q B T A C A A U w B E A E s A I A B U A G k A Z Q B y A D U A I A B B A H A A c A A g A F M A a Q B n A G 4 A I A B D A G U A c g B 0 A D w A L w B O A E E A T Q B F A D 4 A P A A v A E 8 A Q g B K A E U A Q w B U A D 4 A P A B Q A F U A Q g B M A E k A Q w B L A E U A W Q A + A D w A Q Q B M A E c A T w B S A E k A V A B I A E 0 A P g B S A F M A Q Q A 8 A C 8 A Q Q B M A E c A T w B S A E k A V A B I A E 0 A P g A 8 A F A A Q Q B S A E E A T Q B F A F Q A R Q B S A C A A b g B h A G 0 A Z Q A 9 A C I A c A B 1 A G I A b A B p A G M A L Q B l A H g A c A B v A G 4 A Z Q B u A H Q A I g A + A D w A V g B B A E w A V Q B F A C A A Z Q B u A G M A b w B k A G k A b g B n A D 0 A I g B p A G 4 A d A B l A G c A Z Q B y A D M A M g A i A D 4 A N g A 1 A D U A M w A 3 A D w A L w B W A E E A T A B V A E U A P g A 8 A C 8 A U A B B A F I A Q Q B N A E U A V A B F A F I A P g A 8 A F A A Q Q B S A E E A T Q B F A F Q A R Q B S A C A A b g B h A G 0 A Z Q A 9 A C I A b Q B v A G Q A d Q B s A H U A c w A i A D 4 A P A B W A E E A T A B V A E U A I A B l A G 4 A Y w B v A G Q A a Q B u A G c A P Q A i A G I A Y Q B z A G U A N g A 0 A C I A I A B z A G k A e g B l A D 0 A I g A x A D A A M g A 0 A C I A P g B H A G U A R Q B j A C s A R g B k A E k A d A B i A D I A W A B 6 A G 0 A Z w B S A H o A Q Q B a A E c A a A B Z A H g A V w B n A H g A Z g A r A E c A V g B 3 A E c A a Q B Z A E U A N Q B i A F k A c w B S A F c A d w B Z A D Y A T Q B o A G M A S Q B B A G M A N A B G A H o A T Q B 5 A H E A T g A 3 A H U A W g B I A G U A U A B s A E E A W A B y A G Q A U A B V A G c A N Q B U A F E A Z Q B t A E g A d g B K A H c A V A B 1 A G o A N Q B O A F U A V A B n A E w A V Q B p A H E A R A B u A D E A R g B 3 A H c A V Q B m A G o A R w B P A F E A Q g A 1 A E U A e g B O A E o A Y w A z A E w A Y w A v A F A A R w B s A E Y A L w B V A E w A a Q B Y A E w A d w B 4 A G E A d w B F A H Y A N Q B x A H o A L w A x A E 4 A d Q B 1 A E 0 A R A B o A H E A d A B K A F U A Z w B N A H Q A S Q B m A H E A Q w B u A G Y A T A B m A H Q A M A B i A G 8 A d Q B w A F U A K w B v A D c A U g B a A D c A M A A 9 A D w A L w B W A E E A T A B V A E U A P g A 8 A C 8 A U A B B A F I A Q Q B N A E U A V A B F A F I A P g A 8 A C 8 A U A B V A E I A T A B J A E M A S w B F A F k A P g A 8 A C 8 A U A B S A E k A T g B D A E k A U A B B A E w A P g A 8 A C 8 A S Q B T A F M A V Q B F A E Q A U A B S A E k A T g B D A E k A U A B B A E w A U w A + A D w A V w B P A F I A S w A + A D w A T w B C A E o A R Q B D A F Q A I A B 0 A H k A c A B l A D 0 A I g B B A H A A c A B s A G k A Y w B h A H Q A a Q B v A G 4 A L Q B T A G k A Z w B u A G k A b g B n A C 0 A Q w B l A H I A d A B p A G Y A a Q B j A G E A d A B l A C I A P g A 8 A E k A R A A g A H Q A e Q B w A G U A P Q A i A E 0 A U w A t A E c A V Q B J A E Q A I g A + A H s A N g B k A D U A Y Q B l A D Q A O Q B l A C 0 A Z g A 4 A D A A M A A t A D Q A Y Q A 4 A G Q A L Q B i A D U A M w B j A C 0 A M g B l A D U A Y g A 5 A D c A Z A A 2 A G Y A N w A w A G Q A f Q A 8 A C 8 A S Q B E A D 4 A P A A v A E 8 A Q g B K A E U A Q w B U A D 4 A P A B S A E k A R w B I A F Q A U w B H A F I A T w B V A F A A I A B u A G E A b Q B l A D 0 A I g B N A G E A a Q B u A C 0 A U g B p A G c A a A B 0 A H M A I g A + A D w A U g B J A E c A S A B U A F M A T A B J A F M A V A A + A D w A U g B J A E c A S A B U A C A A b g B h A G 0 A Z Q A 9 A C I A S Q B T A F M A V Q B F A C I A P g A 8 A E M A T w B O A E Q A S Q B U A E k A T w B O A E w A S Q B T A F Q A P g A 8 A F Q A S Q B N A E U A P g A 8 A F I A Q Q B O A E c A R Q B U A E k A T Q B F A D 4 A P A B G A F I A T w B N A D 4 A M g A w A D A A M w A t A D A A M g A t A D A A N Q B U A D A A M A A 6 A D A A M A A 8 A C 8 A R g B S A E 8 A T Q A + A D w A V Q B O A F Q A S Q B M A D 4 A M g A w A D E A M w A t A D A A N g A t A D I A M A B U A D E A O Q A 6 A D U A N A A 8 A C 8 A V Q B O A F Q A S Q B M A D 4 A P A A v A F I A Q Q B O A E c A R Q B U A E k A T Q B F A D 4 A P A A v A F Q A S Q B N A E U A P g A 8 A E E A Q w B D A E U A U w B T A D 4 A P A B Q A F I A S Q B O A E M A S Q B Q A E E A T A A g A G k A b g B 0 A G U A c g B u A G E A b A A t A G k A Z A A 9 A C I A M Q A i A C A A L w A + A D w A L w B B A E M A Q w B F A F M A U w A + A D w A L w B D A E 8 A T g B E A E k A V A B J A E 8 A T g B M A E k A U w B U A D 4 A P A A v A F I A S Q B H A E g A V A A + A D w A L w B S A E k A R w B I A F Q A U w B M A E k A U w B U A D 4 A P A A v A F I A S Q B H A E g A V A B T A E c A U g B P A F U A U A A + A D w A L w B X A E 8 A U g B L A D 4 A P A A v A E I A T w B E A F k A P g A 8 A F M A S Q B H A E 4 A Q Q B U A F U A U g B F A D 4 A P A B E A E k A R w B F A F M A V A A + A D w A Q Q B M A E c A T w B S A E k A V A B I A E 0 A P g B T A E g A Q Q A x A D w A L w B B A E w A R w B P A F I A S Q B U A E g A T Q A + A D w A U A B B A F I A Q Q B N A E U A V A B F A F I A I A B u A G E A b Q B l A D 0 A I g B j A G 8 A Z A B p A G 4 A Z w B 0 A H k A c A B l A C I A P g A 8 A F Y A Q Q B M A F U A R Q A g A G U A b g B j A G 8 A Z A B p A G 4 A Z w A 9 A C I A c w B 0 A H I A a Q B u A G c A I g A + A H M A d Q B y A G Y A Y Q B j A G U A L Q B j A G 8 A Z A B p A G 4 A Z w A 8 A C 8 A V g B B A E w A V Q B F A D 4 A P A A v A F A A Q Q B S A E E A T Q B F A F Q A R Q B S A D 4 A P A B W A E E A T A B V A E U A I A B l A G 4 A Y w B v A G Q A a Q B u A G c A P Q A i A G I A Y Q B z A G U A N g A 0 A C I A I A B z A G k A e g B l A D 0 A I g A x A D Y A M A A i A D 4 A S Q B Y A D I A U A B H A C s A R g A 3 A D Q A a g B I A E k A M w B X A G k A V g B s A G M A e Q B P A F k A R w B O A G o A U g B M A E k A P Q A 8 A C 8 A V g B B A E w A V Q B F A D 4 A P A A v A E Q A S Q B H A E U A U w B U A D 4 A P A B B A E w A R w B P A F I A S Q B U A E g A T Q A + A F I A U w B B A C A A U A B L A E M A U w A j A D E A L Q B W A D E A L g A 1 A D w A L w B B A E w A R w B P A F I A S Q B U A E g A T Q A + A D w A V g B B A E w A V Q B F A C A A Z Q B u A G M A b w B k A G k A b g B n A D 0 A I g B i A G E A c w B l A D Y A N A A i A C A A c w B p A H o A Z Q A 9 A C I A M Q A w A D I A N A A i A D 4 A Z g B Y A H E A Q w A 4 A H E A Y g B 2 A F c A V g A r A H M A e Q A y A F U A d Q A 0 A G 0 A b g B W A D k A M g B C A G g A O Q B s A D Y A b A B U A H I A c A B y A H c A c A B h A G k A a A B w A E I A V w B H A G Q A U Q B Q A D c A Y w A v A F g A M Q B N A F E A e g B T A H A A Q w A 0 A H U A S g B 5 A F c A a Q B 4 A G M A O A B k A H o A N Q B 6 A E 0 A R w B B A E s A S w B m A C s A d g B 5 A D A A V A B V A E 8 A L w B k A F Q A S g B Q A E Y A W g B o A E k A N w B m A D I A a g B p A H E A c Q B Y A G E A N Q B 4 A F I A V A B U A D M A Q Q B L A G s A c A B q A F M A L w B E A C 8 A W Q B W A H c A b w B w A H A A Y w B W A D M A N Q B L A G M A M Q B V A D A A d g B n A H E A a g B P A G w A N w B N A H k A b Q B v A F Y A R w B j A G 0 A U w B j A H c A R g B B A H c A b g B Q A H U A R g B s A G o A N A B K A E U A e g B R A E 0 A c A B E A D c A Z w B H A F g A U Q B z A G 8 A P Q A 8 A C 8 A V g B B A E w A V Q B F A D 4 A P A A v A F M A S Q B H A E 4 A Q Q B U A F U A U g B F A D 4 A P A A v A F g A c g B N A E w A P g A = < / C E R T I F I C A T E > 
 
     < C E R T I F I C A T E > P A A / A H g A b Q B s A C A A d g B l A H I A c w B p A G 8 A b g A 9 A C I A M Q A u A D A A I g A / A D 4 A P A B Y A H I A T Q B M A C A A e A B t A G w A b g B z A D 0 A I g A i A C A A d g B l A H I A c w B p A G 8 A b g A 9 A C I A M Q A u A D I A I g A + A D w A Q g B P A E Q A W Q A g A H Q A e Q B w A G U A P Q A i A E w A S Q B D A E U A T g B T A E U A I g A g A H Y A Z Q B y A H M A a Q B v A G 4 A P Q A i A D M A L g A w A C I A P g A 8 A E k A U w B T A F U A R Q B E A F Q A S Q B N A E U A P g A y A D A A M A A 1 A C 0 A M A A z A C 0 A M A A z A F Q A M g A y A D o A N Q A 1 A D w A L w B J A F M A U w B V A E U A R A B U A E k A T Q B F A D 4 A P A B W A E E A T A B J A E Q A S Q B U A F k A V A B J A E 0 A R Q A + A D w A R g B S A E 8 A T Q A + A D I A M A A w A D I A L Q A x A D E A L Q A y A D I A V A A y A D I A O g A 1 A D A A P A A v A E Y A U g B P A E 0 A P g A 8 A F U A T g B U A E k A T A A + A D I A M A A x A D U A L Q A w A D Y A L Q A w A D E A V A A y A D I A O g A 1 A D U A P A A v A F U A T g B U A E k A T A A + A D w A L w B W A E E A T A B J A E Q A S Q B U A F k A V A B J A E 0 A R Q A + A D w A R A B F A F M A Q w B S A E k A U A B U A E 8 A U g A + A D w A T w B C A E o A R Q B D A F Q A I A B 0 A H k A c A B l A D 0 A I g B B A H A A c A B s A G k A Y w B h A H Q A a Q B v A G 4 A L Q B T A G k A Z w B u A G k A b g B n A C 0 A Q w B l A H I A d A B p A G Y A a Q B j A G E A d A B l A C I A P g A 8 A E k A R A A g A H Q A e Q B w A G U A P Q A i A E 0 A U w A t A E c A V Q B J A E Q A I g A + A H s A M w A 2 A G Y A Z A A 4 A D c A M Q A 1 A C 0 A Z Q B j A D Y A Y Q A t A D Q A O Q A 1 A G Y A L Q A 5 A D E A Y Q B i A C 0 A M w A 0 A D Y A Z Q A 5 A G E A O A B i A G E A Y w A 5 A G U A f Q A 8 A C 8 A S Q B E A D 4 A P A A v A E 8 A Q g B K A E U A Q w B U A D 4 A P A A v A E Q A R Q B T A E M A U g B J A F A A V A B P A F I A P g A 8 A E k A U w B T A F U A R Q B S A D 4 A P A B P A E I A S g B F A E M A V A A g A H Q A e Q B w A G U A P Q A i A E Q A U g B N A C 0 A Q w B l A H I A d A B p A G Y A a Q B j A G E A d A B l A C 0 A Q Q B 1 A H Q A a A B v A H I A a Q B 0 A H k A I g A + A D w A S Q B E A C A A d A B 5 A H A A Z Q A 9 A C I A Y Q B z A G M A a Q B p A C 0 A d A B h A G c A I g A + A E 0 A a Q B j A H I A b w B z A G 8 A Z g B 0 A C A A R A B S A E 0 A I A B J A F M A V g A g A E E A c A B w A G w A a Q B j A G E A d A B p A G 8 A b g A g A F M A a Q B n A G 4 A a Q B u A G c A I A B T A G U A c g B 2 A G U A c g A g A E M A Q Q A 8 A C 8 A S Q B E A D 4 A P A B O A E E A T Q B F A D 4 A T Q B p A G M A c g B v A H M A b w B m A H Q A I A B E A F I A T Q A g A E k A U w B W A C A A Q Q B w A H A A b A B p A G M A Y Q B 0 A G k A b w B u A C A A U w B p A G c A b g B p A G 4 A Z w A g A F M A Z Q B y A H Y A Z Q B y A C A A Q w B B A D w A L w B O A E E A T Q B F A D 4 A P A A v A E 8 A Q g B K A E U A Q w B U A D 4 A P A B Q A F U A Q g B M A E k A Q w B L A E U A W Q A + A D w A Q Q B M A E c A T w B S A E k A V A B I A E 0 A P g B S A F M A Q Q A 8 A C 8 A Q Q B M A E c A T w B S A E k A V A B I A E 0 A P g A 8 A F A A Q Q B S A E E A T Q B F A F Q A R Q B S A C A A b g B h A G 0 A Z Q A 9 A C I A c A B 1 A G I A b A B p A G M A L Q B l A H g A c A B v A G 4 A Z Q B u A H Q A I g A + A D w A V g B B A E w A V Q B F A C A A Z Q B u A G M A b w B k A G k A b g B n A D 0 A I g B p A G 4 A d A B l A G c A Z Q B y A D M A M g A i A D 4 A N g A 1 A D U A M w A 3 A D w A L w B W A E E A T A B V A E U A P g A 8 A C 8 A U A B B A F I A Q Q B N A E U A V A B F A F I A P g A 8 A F A A Q Q B S A E E A T Q B F A F Q A R Q B S A C A A b g B h A G 0 A Z Q A 9 A C I A b Q B v A G Q A d Q B s A H U A c w A i A D 4 A P A B W A E E A T A B V A E U A I A B l A G 4 A Y w B v A G Q A a Q B u A G c A P Q A i A G I A Y Q B z A G U A N g A 0 A C I A I A B z A G k A e g B l A D 0 A I g A x A D A A M g A 0 A C I A P g B O A G M A K w B Z A F I A b A B G A H A A M w B w A E U A U w B K A E M A R Q A x A C s A R Q B m A E k A b A A 5 A F o A b g B y A E g A V Q B v A F k A T A A r A D Y A V g B w A E k A R Q B X A E U A S Q B m A H Y A W Q B n A E 4 A c Q B R A E M A U w B Y A G I A V A B J A D A A O A B a A H g A V A B m A D Y A T g B r A F g A b g B L A G 0 A M w A 0 A G s A N w B C A H Q A W Q A 3 A G Q A R Q B R A E w A W g B h A H E A d g B M A D k A M w B H A G Q A T g A 3 A G o A b Q B t A H k A Z g B l A E 0 A Q w B o A G 8 A K w B O A E c A Z A B I A H Q A M Q B 1 A H g A W A B E A G 8 A S g B r A G w A R g B X A F M A e Q A w A G 4 A b A B 6 A F A A M g B v A G 4 A Y g B p A E c A b w B 2 A D Y A c A B m A D c A N A B p A G 8 A Z Q B y A F Q A U g B j A E E A K w B u A G 4 A M w B G A H g A d A B Z A H c A a w A y A C 8 A T w A r A D A A O Q B D A E o A S g A w A D A A V Q B q A G U A c g A 5 A F k A M A A 9 A D w A L w B W A E E A T A B V A E U A P g A 8 A C 8 A U A B B A F I A Q Q B N A E U A V A B F A F I A P g A 8 A C 8 A U A B V A E I A T A B J A E M A S w B F A F k A P g A 8 A C 8 A S Q B T A F M A V Q B F A F I A P g A 8 A E k A U w B T A F U A R Q B E A F A A U g B J A E 4 A Q w B J A F A A Q Q B M A F M A P g A 8 A F A A U g B J A E 4 A Q w B J A F A A Q Q B M A C A A a Q B u A H Q A Z Q B y A G 4 A Y Q B s A C 0 A a Q B k A D 0 A I g A x A C I A P g A 8 A E 8 A Q g B K A E U A Q w B U A C A A d A B 5 A H A A Z Q A 9 A C I A R A B S A E 0 A L Q B D A G U A c g B 0 A G k A Z g B p A G M A Y Q B 0 A G U A L Q B B A H U A d A B o A G 8 A c g B p A H Q A e Q A i A D 4 A P A B J A E Q A I A B 0 A H k A c A B l A D 0 A I g B N A F M A L Q B H A F U A S Q B E A C I A P g B 7 A G M A Z A A w A D M A N Q B l A G M A Z A A t A G U A O Q A 1 A D M A L Q A 0 A G Q A Y g A 4 A C 0 A O A A x A G E A N w A t A G I A M g A y A G M A O A B h A G M A N A B m A G I A M Q A 1 A H 0 A P A A v A E k A R A A + A D w A T g B B A E 0 A R Q A + A E 0 A a Q B j A H I A b w B z A G 8 A Z g B 0 A C A A R A B S A E 0 A I A B J A F M A V g A g A E 0 A Y Q B u A G k A Z g B l A H M A d A A g A F M A a Q B n A G 4 A a Q B u A G c A I A B L A G U A e Q A g A E M A Q Q A 8 A C 8 A T g B B A E 0 A R Q A + A D w A L w B P A E I A S g B F A E M A V A A + A D w A U A B V A E I A T A B J A E M A S w B F A F k A P g A 8 A E E A T A B H A E 8 A U g B J A F Q A S A B N A D 4 A U g B T A E E A P A A v A E E A T A B H A E 8 A U g B J A F Q A S A B N A D 4 A P A B Q A E E A U g B B A E 0 A R Q B U A E U A U g A g A G 4 A Y Q B t A G U A P Q A i A H A A d Q B i A G w A a Q B j A C 0 A Z Q B 4 A H A A b w B u A G U A b g B 0 A C I A P g A 8 A F Y A Q Q B M A F U A R Q A g A G U A b g B j A G 8 A Z A B p A G 4 A Z w A 9 A C I A a Q B u A H Q A Z Q B n A G U A c g A z A D I A I g A + A D Y A N Q A 1 A D M A N w A 8 A C 8 A V g B B A E w A V Q B F A D 4 A P A A v A F A A Q Q B S A E E A T Q B F A F Q A R Q B S A D 4 A P A B Q A E E A U g B B A E 0 A R Q B U A E U A U g A g A G 4 A Y Q B t A G U A P Q A i A G 0 A b w B k A H U A b A B 1 A H M A I g A + A D w A V g B B A E w A V Q B F A C A A Z Q B u A G M A b w B k A G k A b g B n A D 0 A I g B i A G E A c w B l A D Y A N A A i A C A A c w B p A H o A Z Q A 9 A C I A M Q A w A D I A N A A i A D 4 A Y g B W A H k A V g B w A G I A b A B u A D U A T g B p A H M A a g B K A D c A U A B X A E U A d w B E A G 8 A M Q B q A F E A W A B r A E g A e g A v A D M A R g A z A G Q A W Q B o A F A A U g A w A H k A U Q B a A G 8 A U A B W A F I A V Q B Q A F A A Q w A 1 A D E A V w B T A D Y A R w B 1 A D Y A c g B Y A E U A d A B E A D I A b w B I A G s A R Q A 2 A D U A W A A y A D A A Y Q B i A E M A Z A A 5 A G w A b A B T A D M A S A B D A D E A R A B k A E Q A R g B m A F Q A R Q B N A G M A L w B 5 A G k A T w B s A E Y A a w B 0 A E Y A R Q B Q A E 0 A a w B p A H Y A Z w B Z A E 4 A Q Q B n A G M A c g B G A E Q A Z g B B A E 8 A d w B p A E k A R Q B a A F Q A Z A B o A H Y A N g B F A D E A W Q B W A H E A U Q B Z A H U A Q g B U A D I A V A B i A D I A Z w B V A H Y A b Q B L A G s A Y g B h A D A A W A A 5 A H U A T g B Q A F U A b Q B P A F o A U Q B i A H Y A e Q B r A E E A a A B h A H c A P Q A 8 A C 8 A V g B B A E w A V Q B F A D 4 A P A A v A F A A Q Q B S A E E A T Q B F A F Q A R Q B S A D 4 A P A A v A F A A V Q B C A E w A S Q B D A E s A R Q B Z A D 4 A P A A v A F A A U g B J A E 4 A Q w B J A F A A Q Q B M A D 4 A P A A v A E k A U w B T A F U A R Q B E A F A A U g B J A E 4 A Q w B J A F A A Q Q B M A F M A P g A 8 A F c A T w B S A E s A P g A 8 A E 8 A Q g B K A E U A Q w B U A C A A d A B 5 A H A A Z Q A 9 A C I A Q Q B w A H A A b A B p A G M A Y Q B 0 A G k A b w B u A C 0 A U w B p A G c A b g B p A G 4 A Z w A t A E M A Z Q B y A H Q A a Q B m A G k A Y w B h A H Q A Z Q A i A D 4 A P A B J A E Q A I A B 0 A H k A c A B l A D 0 A I g B N A F M A L Q B H A F U A S Q B E A C I A P g B 7 A D M A N g B m A G Q A O A A 3 A D E A N Q A t A G U A Y w A 2 A G E A L Q A 0 A D k A N Q B m A C 0 A O Q A x A G E A Y g A t A D M A N A A 2 A G U A O Q B h A D g A Y g B h A G M A O Q B l A H 0 A P A A v A E k A R A A + A D w A L w B P A E I A S g B F A E M A V A A + A D w A U g B J A E c A S A B U A F M A R w B S A E 8 A V Q B Q A C A A b g B h A G 0 A Z Q A 9 A C I A T Q B h A G k A b g A t A F I A a Q B n A G g A d A B z A C I A P g A 8 A F I A S Q B H A E g A V A B T A E w A S Q B T A F Q A P g A 8 A F I A S Q B H A E g A V A A g A G 4 A Y Q B t A G U A P Q A i A E k A U w B T A F U A R Q A i A D 4 A P A B D A E 8 A T g B E A E k A V A B J A E 8 A T g B M A E k A U w B U A D 4 A P A B U A E k A T Q B F A D 4 A P A B S A E E A T g B H A E U A V A B J A E 0 A R Q A + A D w A R g B S A E 8 A T Q A + A D I A M A A w A D I A L Q A x A D E A L Q A y A D I A V A A y A D I A O g A 1 A D A A P A A v A E Y A U g B P A E 0 A P g A 8 A F U A T g B U A E k A T A A + A D I A M A A x A D M A L Q A w A D Y A L Q A w A D E A V A A y A D I A O g A 1 A D U A P A A v A F U A T g B U A E k A T A A + A D w A L w B S A E E A T g B H A E U A V A B J A E 0 A R Q A + A D w A L w B U A E k A T Q B F A D 4 A P A B B A E M A Q w B F A F M A U w A + A D w A U A B S A E k A T g B D A E k A U A B B A E w A I A B p A G 4 A d A B l A H I A b g B h A G w A L Q B p A G Q A P Q A i A D E A I g A g A C 8 A P g A 8 A C 8 A Q Q B D A E M A R Q B T A F M A P g A 8 A C 8 A Q w B P A E 4 A R A B J A F Q A S Q B P A E 4 A T A B J A F M A V A A + A D w A L w B S A E k A R w B I A F Q A P g A 8 A C 8 A U g B J A E c A S A B U A F M A T A B J A F M A V A A + A D w A L w B S A E k A R w B I A F Q A U w B H A F I A T w B V A F A A P g A 8 A C 8 A V w B P A F I A S w A + A D w A L w B C A E 8 A R A B Z A D 4 A P A B T A E k A R w B O A E E A V A B V A F I A R Q A + A D w A R A B J A E c A R Q B T A F Q A P g A 8 A E E A T A B H A E 8 A U g B J A F Q A S A B N A D 4 A U w B I A E E A M Q A 8 A C 8 A Q Q B M A E c A T w B S A E k A V A B I A E 0 A P g A 8 A F A A Q Q B S A E E A T Q B F A F Q A R Q B S A C A A b g B h A G 0 A Z Q A 9 A C I A Y w B v A G Q A a Q B u A G c A d A B 5 A H A A Z Q A i A D 4 A P A B W A E E A T A B V A E U A I A B l A G 4 A Y w B v A G Q A a Q B u A G c A P Q A i A H M A d A B y A G k A b g B n A C I A P g B z A H U A c g B m A G E A Y w B l A C 0 A Y w B v A G Q A a Q B u A G c A P A A v A F Y A Q Q B M A F U A R Q A + A D w A L w B Q A E E A U g B B A E 0 A R Q B U A E U A U g A + A D w A V g B B A E w A V Q B F A C A A Z Q B u A G M A b w B k A G k A b g B n A D 0 A I g B i A G E A c w B l A D Y A N A A i A C A A c w B p A H o A Z Q A 9 A C I A M Q A 2 A D A A I g A + A F g A T A B 5 A F k A R w B z A G E A N Q B x A G 8 A V w B Z A E w A R g B I A H c A V w A 5 A D k A W Q B y A E E A S Q B 3 A D A A b g B v A D 0 A P A A v A F Y A Q Q B M A F U A R Q A + A D w A L w B E A E k A R w B F A F M A V A A + A D w A Q Q B M A E c A T w B S A E k A V A B I A E 0 A P g B S A F M A Q Q A g A F A A S w B D A F M A I w A x A C 0 A V g A x A C 4 A N Q A 8 A C 8 A Q Q B M A E c A T w B S A E k A V A B I A E 0 A P g A 8 A F Y A Q Q B M A F U A R Q A g A G U A b g B j A G 8 A Z A B p A G 4 A Z w A 9 A C I A Y g B h A H M A Z Q A 2 A D Q A I g A g A H M A a Q B 6 A G U A P Q A i A D E A M A A y A D Q A I g A + A E s A b A B P A E U A U w B o A D A A b g A 2 A F Q A Z g A x A D E A a w B 5 A G s A c A B B A E M A U g B y A H c A U A B N A F c A d w A 0 A F g A K w B Y A D M A b g B K A H g A N g B N A E s A V w A v A H Y A N g A 4 A E c A Z Q B G A D E A M A B G A E I A d Q B w A E U A N g B W A E E A T w B r A H o A b w B S A E Q A Y w B x A E I A Z A B a A F Y A V A B i A E c A d Q B R A H Y A c A B n A D Y A N A B x A D Y A V g B r A F g A N Q B y A D E A b A A 4 A G s A e Q B J A D M A Z w B s A H g A d w B l A G w A Y w B M A E o A c A B 2 A D c A R g B i A H c A Z Q B U A F Y A b g B Y A E 4 A R A B 3 A G I A V Q A 3 A D I A N g B K A G o A d Q B y A H U A c A B q A F A A S w B k A C s A a g B V A E Y A a g B z A G c A N w A w A G U A Q Q A z A F Q A T Q B a A E o A S Q B I A F I A U Q B G A F U A W Q B M A G U A R A B D A F I A Y g B 2 A E Y A d A A x A D c A Z g A 5 A F A A Z A B Y A E M A b g B Z A D 0 A P A A v A F Y A Q Q B M A F U A R Q A + A D w A L w B T A E k A R w B O A E E A V A B V A F I A R Q A + A D w A L w B Y A H I A T Q B M A D 4 A < / C E R T I F I C A T E > 
 
     < C E R T I F I C A T E > P A A / A H g A b Q B s A C A A d g B l A H I A c w B p A G 8 A b g A 9 A C I A M Q A u A D A A I g A / A D 4 A P A B Y A H I A T Q B M A C A A e A B t A G w A b g B z A D 0 A I g A i A C A A d g B l A H I A c w B p A G 8 A b g A 9 A C I A M Q A u A D I A I g A + A D w A Q g B P A E Q A W Q A g A H Q A e Q B w A G U A P Q A i A E w A S Q B D A E U A T g B T A E U A I g A g A H Y A Z Q B y A H M A a Q B v A G 4 A P Q A i A D M A L g A w A C I A P g A 8 A E k A U w B T A F U A R Q B E A F Q A S Q B N A E U A P g A y A D A A M A A 1 A C 0 A M A A x A C 0 A M A A 4 A F Q A M A A w A D o A M Q A x A D w A L w B J A F M A U w B V A E U A R A B U A E k A T Q B F A D 4 A P A B W A E E A T A B J A E Q A S Q B U A F k A V A B J A E 0 A R Q A + A D w A R g B S A E 8 A T Q A + A D I A M A A w A D I A L Q A x A D I A L Q A w A D U A V A A w A D E A O g A w A D c A P A A v A E Y A U g B P A E 0 A P g A 8 A F U A T g B U A E k A T A A + A D I A M A A x A D U A L Q A x A D E A L Q A y A D c A V A A w A D A A O g A x A D E A P A A v A F U A T g B U A E k A T A A + A D w A L w B W A E E A T A B J A E Q A S Q B U A F k A V A B J A E 0 A R Q A + A D w A R A B F A F M A Q w B S A E k A U A B U A E 8 A U g A + A D w A T w B C A E o A R Q B D A F Q A I A B 0 A H k A c A B l A D 0 A I g B B A H A A c A B s A G k A Y w B h A H Q A a Q B v A G 4 A L Q B T A G k A Z w B u A G k A b g B n A C 0 A Q w B l A H I A d A B p A G Y A a Q B j A G E A d A B l A C I A P g A 8 A E k A R A A g A H Q A e Q B w A G U A P Q A i A E 0 A U w A t A E c A V Q B J A E Q A I g A + A H s A Y w A 0 A D A A Z A A 4 A G M A Y g B j A C 0 A O A A 2 A D g A O Q A t A D Q A Y g A 5 A D U A L Q B h A G E A M Q A 1 A C 0 A M A A 0 A D A A Y w A z A D M A N w B m A D M A Y w A 0 A G M A f Q A 8 A C 8 A S Q B E A D 4 A P A A v A E 8 A Q g B K A E U A Q w B U A D 4 A P A A v A E Q A R Q B T A E M A U g B J A F A A V A B P A F I A P g A 8 A E k A U w B T A F U A R Q B S A D 4 A P A B P A E I A S g B F A E M A V A A g A H Q A e Q B w A G U A P Q A i A E Q A U g B N A C 0 A Q w B l A H I A d A B p A G Y A a Q B j A G E A d A B l A C 0 A Q Q B 1 A H Q A a A B v A H I A a Q B 0 A H k A I g A + A D w A S Q B E A C A A d A B 5 A H A A Z Q A 9 A C I A Y Q B z A G M A a Q B p A C 0 A d A B h A G c A I g A + A E 0 A a Q B j A H I A b w B z A G 8 A Z g B 0 A C A A R A B S A E 0 A I A B J A F M A V g A g A E M A Q Q A 8 A C 8 A S Q B E A D 4 A P A B O A E E A T Q B F A D 4 A T Q B p A G M A c g B v A H M A b w B m A H Q A I A B E A F I A T Q A g A E k A U w B W A C A A Q w B B A D w A L w B O A E E A T Q B F A D 4 A P A A v A E 8 A Q g B K A E U A Q w B U A D 4 A P A B Q A F U A Q g B M A E k A Q w B L A E U A W Q A + A D w A Q Q B M A E c A T w B S A E k A V A B I A E 0 A P g B S A F M A Q Q A 8 A C 8 A Q Q B M A E c A T w B S A E k A V A B I A E 0 A P g A 8 A F A A Q Q B S A E E A T Q B F A F Q A R Q B S A C A A b g B h A G 0 A Z Q A 9 A C I A c A B 1 A G I A b A B p A G M A L Q B l A H g A c A B v A G 4 A Z Q B u A H Q A I g A + A D w A V g B B A E w A V Q B F A C A A Z Q B u A G M A b w B k A G k A b g B n A D 0 A I g B p A G 4 A d A B l A G c A Z Q B y A D M A M g A i A D 4 A N g A 1 A D U A M w A 3 A D w A L w B W A E E A T A B V A E U A P g A 8 A C 8 A U A B B A F I A Q Q B N A E U A V A B F A F I A P g A 8 A F A A Q Q B S A E E A T Q B F A F Q A R Q B S A C A A b g B h A G 0 A Z Q A 9 A C I A b Q B v A G Q A d Q B s A H U A c w A i A D 4 A P A B W A E E A T A B V A E U A I A B l A G 4 A Y w B v A G Q A a Q B u A G c A P Q A i A G I A Y Q B z A G U A N g A 0 A C I A I A B z A G k A e g B l A D 0 A I g A y A D A A N A A 4 A C I A P g B z A D E A R w A v A E 0 A Z Q B q A F I A M A B F A D Q A Y w B Y A E M A d A B U A F E A a w B 5 A E o A e Q A y A D k A V g B i A E g A a g B 2 A G w A U Q B H A G w A a Q B t A D Y A U A B m A F Q A U Q B 0 A E 4 A M g A 0 A E g A d A B u A F I A a A A x A G 8 A S w B I A E s A U w A v A H A A S A B Z A H I A M w B a A E 8 A c w B o A F o A T Q B E A D A A c A B k A C 8 A Y Q B s A C 8 A N A B H A D Y A b g B E A G w A W Q B J A E s A M g B l A D M A a g A x A H k A U Q B Q A H U A a g B q A D Y A U g B V A H Q A S g B 0 A H Y A W g B y A D I A Q g B u A D I A R A B H A C 8 A U g B B A C s A T A B X A G E A b Q B u A H U A Y w B U A F Y A e g B 6 A G 8 A L w A 5 A F E A M g B r A D c A S w B 6 A F Q A U Q A 0 A D Y A a A B V A G o A b A B X A E c A Y w A r A F Y A e Q B G A H o A K w B n A F g A V w A 1 A G c A N Q B Y A F U A d Q A 1 A F A A b w B t A G w A b w A 1 A D k A d g B i A C 8 A R w B M A G 4 A W g B E A F M A a A B n A G c A e A B k A D g A V w B 1 A H g A R Q B s A E 8 A M w B p A D k A W Q B m A F M A N A B k A E 8 A O A B O A E o A R Q B 2 A D E A b A B F A H U A e Q B J A F A A O A A 4 A G w A Z g B h A G Y A e g B S A G U A a w B E A C s A W Q B j A G o A Y Q A 0 A G M A U g B U A E c A S A B P A E g A e A B O A E U A c Q A 1 A E 4 A b w B H A F g A a Q B D A D A A c w B S A G M A O A A z A F g A Z w B 0 A D c A U w A 3 A D c A M A B 1 A F A A T A B 4 A G c A U g B s A E Q A b A B w A G k A Q w B 1 A E 8 A Q Q B 4 A G 8 A Q w B P A G w A c w A w A G 8 A c w B y A G I A Z A B H A F Y A S g B C A F A A S A A y A G g A Y g A 2 A D U A L w B 2 A G 0 A M Q B w A E Q A a Q B y A G M A N A A 2 A G M A T A B 0 A E M A M w A 5 A E w A Y Q B W A E Q A N g B r A D U A V g A 3 A H I A c g A 1 A F k A V w A z A G w A S w B s A E w A L w B n A G c A e g B n A F g A T A B y A G 4 A Q Q A 9 A D 0 A P A A v A F Y A Q Q B M A F U A R Q A + A D w A L w B Q A E E A U g B B A E 0 A R Q B U A E U A U g A + A D w A L w B Q A F U A Q g B M A E k A Q w B L A E U A W Q A + A D w A L w B J A F M A U w B V A E U A U g A + A D w A S Q B T A F M A V Q B F A E Q A U A B S A E k A T g B D A E k A U A B B A E w A U w A + A D w A U A B S A E k A T g B D A E k A U A B B A E w A I A B p A G 4 A d A B l A H I A b g B h A G w A L Q B p A G Q A P Q A i A D E A I g A + A D w A T w B C A E o A R Q B D A F Q A I A B 0 A H k A c A B l A D 0 A I g B E A F I A T Q A t A E M A Z Q B y A H Q A a Q B m A G k A Y w B h A H Q A Z Q A t A E E A d Q B 0 A G g A b w B y A G k A d A B 5 A C I A P g A 8 A E k A R A A g A H Q A e Q B w A G U A P Q A i A G E A c w B j A G k A a Q A t A H Q A Y Q B n A C I A P g B N A G k A Y w B y A G 8 A c w B v A G Y A d A A g A E Q A U g B N A C A A S Q B T A F Y A I A B B A H A A c A B s A G k A Y w B h A H Q A a Q B v A G 4 A I A B T A G k A Z w B u A G k A b g B n A C A A U w B l A H I A d g B l A H I A I A B D A E E A P A A v A E k A R A A + A D w A T g B B A E 0 A R Q A + A E 0 A a Q B j A H I A b w B z A G 8 A Z g B 0 A C A A R A B S A E 0 A I A B J A F M A V g A g A E E A c A B w A G w A a Q B j A G E A d A B p A G 8 A b g A g A F M A a Q B n A G 4 A a Q B u A G c A I A B T A G U A c g B 2 A G U A c g A g A E M A Q Q A 8 A C 8 A T g B B A E 0 A R Q A + A D w A L w B P A E I A S g B F A E M A V A A + A D w A U A B V A E I A T A B J A E M A S w B F A F k A P g A 8 A E E A T A B H A E 8 A U g B J A F Q A S A B N A D 4 A U g B T A E E A P A A v A E E A T A B H A E 8 A U g B J A F Q A S A B N A D 4 A P A B Q A E E A U g B B A E 0 A R Q B U A E U A U g A g A G 4 A Y Q B t A G U A P Q A i A H A A d Q B i A G w A a Q B j A C 0 A Z Q B 4 A H A A b w B u A G U A b g B 0 A C I A P g A 8 A F Y A Q Q B M A F U A R Q A g A G U A b g B j A G 8 A Z A B p A G 4 A Z w A 9 A C I A a Q B u A H Q A Z Q B n A G U A c g A z A D I A I g A + A D Y A N Q A 1 A D M A N w A 8 A C 8 A V g B B A E w A V Q B F A D 4 A P A A v A F A A Q Q B S A E E A T Q B F A F Q A R Q B S A D 4 A P A B Q A E E A U g B B A E 0 A R Q B U A E U A U g A g A G 4 A Y Q B t A G U A P Q A i A G 0 A b w B k A H U A b A B 1 A H M A I g A + A D w A V g B B A E w A V Q B F A C A A Z Q B u A G M A b w B k A G k A b g B n A D 0 A I g B i A G E A c w B l A D Y A N A A i A C A A c w B p A H o A Z Q A 9 A C I A M Q A w A D I A N A A i A D 4 A T g B j A C s A W Q B S A G w A R g B w A D M A c A B F A F M A S g B D A E U A M Q A r A E U A Z g B J A G w A O Q B a A G 4 A c g B I A F U A b w B Z A E w A K w A 2 A F Y A c A B J A E U A V w B F A E k A Z g B 2 A F k A Z w B O A H E A U Q B D A F M A W A B i A F Q A S Q A w A D g A W g B 4 A F Q A Z g A 2 A E 4 A a w B Y A G 4 A S w B t A D M A N A B r A D c A Q g B 0 A F k A N w B k A E U A U Q B M A F o A Y Q B x A H Y A T A A 5 A D M A R w B k A E 4 A N w B q A G 0 A b Q B 5 A G Y A Z Q B N A E M A a A B v A C s A T g B H A G Q A S A B 0 A D E A d Q B 4 A F g A R A B v A E o A a w B s A E Y A V w B T A H k A M A B u A G w A e g B Q A D I A b w B u A G I A a Q B H A G 8 A d g A 2 A H A A Z g A 3 A D Q A a Q B v A G U A c g B U A F I A Y w B B A C s A b g B u A D M A R g B 4 A H Q A W Q B 3 A G s A M g A v A E 8 A K w A w A D k A Q w B K A E o A M A A w A F U A a g B l A H I A O Q B Z A D A A P Q A 8 A C 8 A V g B B A E w A V Q B F A D 4 A P A A v A F A A Q Q B S A E E A T Q B F A F Q A R Q B S A D 4 A P A A v A F A A V Q B C A E w A S Q B D A E s A R Q B Z A D 4 A P A A v A F A A U g B J A E 4 A Q w B J A F A A Q Q B M A D 4 A P A A v A E k A U w B T A F U A R Q B E A F A A U g B J A E 4 A Q w B J A F A A Q Q B M A F M A P g A 8 A F c A T w B S A E s A P g A 8 A E 8 A Q g B K A E U A Q w B U A C A A d A B 5 A H A A Z Q A 9 A C I A Q Q B w A H A A b A B p A G M A Y Q B 0 A G k A b w B u A C 0 A U w B p A G c A b g B p A G 4 A Z w A t A E M A Z Q B y A H Q A a Q B m A G k A Y w B h A H Q A Z Q A i A D 4 A P A B J A E Q A I A B 0 A H k A c A B l A D 0 A I g B N A F M A L Q B H A F U A S Q B E A C I A P g B 7 A G M A N A A w A G Q A O A B j A G I A Y w A t A D g A N g A 4 A D k A L Q A 0 A G I A O Q A 1 A C 0 A Y Q B h A D E A N Q A t A D A A N A A w A G M A M w A z A D c A Z g A z A G M A N A B j A H 0 A P A A v A E k A R A A + A D w A L w B P A E I A S g B F A E M A V A A + A D w A U g B J A E c A S A B U A F M A R w B S A E 8 A V Q B Q A C A A b g B h A G 0 A Z Q A 9 A C I A T Q B h A G k A b g A t A F I A a Q B n A G g A d A B z A C I A P g A 8 A F I A S Q B H A E g A V A B T A E w A S Q B T A F Q A P g A 8 A F I A S Q B H A E g A V A A g A G 4 A Y Q B t A G U A P Q A i A E k A U w B T A F U A R Q A i A D 4 A P A B D A E 8 A T g B E A E k A V A B J A E 8 A T g B M A E k A U w B U A D 4 A P A B U A E k A T Q B F A D 4 A P A B S A E E A T g B H A E U A V A B J A E 0 A R Q A + A D w A R g B S A E 8 A T Q A + A D I A M A A w A D I A L Q A x A D I A L Q A w A D U A V A A w A D E A O g A w A D c A P A A v A E Y A U g B P A E 0 A P g A 8 A F U A T g B U A E k A T A A + A D I A M A A x A D M A L Q A x A D E A L Q A y A D c A V A A w A D A A O g A x A D E A P A A v A F U A T g B U A E k A T A A + A D w A L w B S A E E A T g B H A E U A V A B J A E 0 A R Q A + A D w A L w B U A E k A T Q B F A D 4 A P A B B A E M A Q w B F A F M A U w A + A D w A U A B S A E k A T g B D A E k A U A B B A E w A I A B p A G 4 A d A B l A H I A b g B h A G w A L Q B p A G Q A P Q A i A D E A I g A g A C 8 A P g A 8 A C 8 A Q Q B D A E M A R Q B T A F M A P g A 8 A C 8 A Q w B P A E 4 A R A B J A F Q A S Q B P A E 4 A T A B J A F M A V A A + A D w A L w B S A E k A R w B I A F Q A P g A 8 A C 8 A U g B J A E c A S A B U A F M A T A B J A F M A V A A + A D w A L w B S A E k A R w B I A F Q A U w B H A F I A T w B V A F A A P g A 8 A C 8 A V w B P A F I A S w A + A D w A L w B C A E 8 A R A B Z A D 4 A P A B T A E k A R w B O A E E A V A B V A F I A R Q A + A D w A R A B J A E c A R Q B T A F Q A P g A 8 A E E A T A B H A E 8 A U g B J A F Q A S A B N A D 4 A U w B I A E E A M Q A 8 A C 8 A Q Q B M A E c A T w B S A E k A V A B I A E 0 A P g A 8 A F A A Q Q B S A E E A T Q B F A F Q A R Q B S A C A A b g B h A G 0 A Z Q A 9 A C I A Y w B v A G Q A a Q B u A G c A d A B 5 A H A A Z Q A i A D 4 A P A B W A E E A T A B V A E U A I A B l A G 4 A Y w B v A G Q A a Q B u A G c A P Q A i A H M A d A B y A G k A b g B n A C I A P g B z A H U A c g B m A G E A Y w B l A C 0 A Y w B v A G Q A a Q B u A G c A P A A v A F Y A Q Q B M A F U A R Q A + A D w A L w B Q A E E A U g B B A E 0 A R Q B U A E U A U g A + A D w A V g B B A E w A V Q B F A C A A Z Q B u A G M A b w B k A G k A b g B n A D 0 A I g B i A G E A c w B l A D Y A N A A i A C A A c w B p A H o A Z Q A 9 A C I A M Q A 2 A D A A I g A + A F k A Q g B w A F M A Q Q B z A D Y A a w A x A F U A b Q B F A F g A N Q B J A F k A b g B B A E 0 A Z w B Y A D E A Z w B 5 A H Y A R A B Z A D 0 A P A A v A F Y A Q Q B M A F U A R Q A + A D w A L w B E A E k A R w B F A F M A V A A + A D w A Q Q B M A E c A T w B S A E k A V A B I A E 0 A P g B S A F M A Q Q A g A F A A S w B D A F M A I w A x A C 0 A V g A x A C 4 A N Q A 8 A C 8 A Q Q B M A E c A T w B S A E k A V A B I A E 0 A P g A 8 A F Y A Q Q B M A F U A R Q A g A G U A b g B j A G 8 A Z A B p A G 4 A Z w A 9 A C I A Y g B h A H M A Z Q A 2 A D Q A I g A g A H M A a Q B 6 A G U A P Q A i A D I A M A A 0 A D g A I g A + A E M A e Q B o A G I A T w B G A D I A T w B M A G s A V A A 2 A H U A R A A 0 A H E A Q Q B N A F A A e A B 6 A F Y A T A B 0 A H k A d g A 1 A E Y A S Q B t A F Y A T Q B n A G o A b Q B 4 A G M A V Q B w A F k A T Q A x A D I A Q w B o A D I A e g B F A H E A W A A 1 A E Y A V w A 0 A C 8 A a w B Z A F Y A d w A r A E U A b w B W A F o A Q w B W A C s A e A B z A H M A Z Q A 3 A E E A b Q A z A F o A M Q B m A E o A b w B N A E 0 A N g A 0 A H I A Y Q B 3 A E M A Z g B t A G U A d A B S A D k A W g B k A H E A U w B p A D U A N g A y A E 8 A M w A y A H E A T w B s A H Y A W Q B 2 A E s A Y w A x A H c A e A B v A F c A M Q B 6 A G 8 A L w B R A D c A N A B m A D g A W A B N A E 4 A M g B B A G c A W A B K A F U A N A B G A E 8 A L w B i A H c A c g B V A H c A S A B s A G Y A T w B a A F Y A M Q B H A H o A d w A v A D M A R A A w A H A A U A B N A H A A N A B D A H Y A a w B t A D A A S A B L A F E A V g B j A H M A L w B i A E Y A c w B E A D I A T Q B l A F U A V g A z A G k A Q g B j A C 8 A b g B r A D k A S w B y A G k A Q Q A y A F g A M A B Q A H k A a g B M A F g A N w B X A E 4 A O A B k A F E A V Q B h A E w A S w B h A F Q A R A B t A F A A M w B s A D M A a w B Q A D A A Y Q B n A F g A V A B V A E U A S w B K A H g A Y w B u A E s A Q g B B A E U A U Q B w A D k A S w A z A G g A c g B C A H M A R A B H A E U A V Q B T A D Q A T A A 4 A D Y A Q Q B N A E s A c A B i A E c A L w A 3 A E w A N g B V A C s A T Q B 5 A E o A V Q B p A D g A T A B a A G U A c A B w A G 4 A T A B 6 A E U A L w A v A H o A S Q A 3 A F A A d A A w A H Y A N g B 6 A H g A d A B R A E 8 A N w B 6 A G Y A N w B R A E E A d w B w A E Q A T Q B 4 A H k A Z g B y A G I A e g A x A G 4 A d A B 4 A G o A Z A B k A D Y A U w A r A D E A Z w A 5 A F U A N Q B Q A H A A c w B B A F E A N Q B J A C s A K w B n A D 0 A P Q A 8 A C 8 A V g B B A E w A V Q B F A D 4 A P A A v A F M A S Q B H A E 4 A Q Q B U A F U A U g B F A D 4 A P A A v A F g A c g B N A E w A P g A = < / C E R T I F I C A T E > 
 
     < C E R T I F I C A T E > P A A / A H g A b Q B s A C A A d g B l A H I A c w B p A G 8 A b g A 9 A C I A M Q A u A D A A I g A / A D 4 A P A B Y A H I A T Q B M A C A A e A B t A G w A b g B z A D 0 A I g A i A C A A d g B l A H I A c w B p A G 8 A b g A 9 A C I A M Q A u A D I A I g A + A D w A Q g B P A E Q A W Q A g A H Q A e Q B w A G U A P Q A i A E w A S Q B D A E U A T g B T A E U A I g A g A H Y A Z Q B y A H M A a Q B v A G 4 A P Q A i A D M A L g A w A C I A P g A 8 A E k A U w B T A F U A R Q B E A F Q A S Q B N A E U A P g A y A D A A M A A 1 A C 0 A M A A x A C 0 A M A A 4 A F Q A M A A w A D o A M A A 2 A D w A L w B J A F M A U w B V A E U A R A B U A E k A T Q B F A D 4 A P A B W A E E A T A B J A E Q A S Q B U A F k A V A B J A E 0 A R Q A + A D w A R g B S A E 8 A T Q A + A D I A M A A w A D I A L Q A x A D I A L Q A w A D U A V A A w A D E A O g A w A D c A P A A v A E Y A U g B P A E 0 A P g A 8 A F U A T g B U A E k A T A A + A D I A M A A x A D U A L Q A x A D E A L Q A y A D c A V A A w A D A A O g A w A D Y A P A A v A F U A T g B U A E k A T A A + A D w A L w B W A E E A T A B J A E Q A S Q B U A F k A V A B J A E 0 A R Q A + A D w A R A B F A F M A Q w B S A E k A U A B U A E 8 A U g A + A D w A T w B C A E o A R Q B D A F Q A I A B 0 A H k A c A B l A D 0 A I g B E A F I A T Q A t A E M A Q Q A t A E M A Z Q B y A H Q A a Q B m A G k A Y w B h A H Q A Z Q A i A D 4 A P A B J A E Q A I A B 0 A H k A c A B l A D 0 A I g B N A F M A L Q B H A F U A S Q B E A C I A P g B 7 A D g A Z g B m A G E A O Q A 5 A G U A O A A t A D E A O A B j A G I A L Q A 0 A D c A N Q A 2 A C 0 A Y g B l A G M A Y w A t A D g A Y w A 1 A D I A N Q A 4 A D A A M Q A w A D A A Y w A z A H 0 A P A A v A E k A R A A + A D w A L w B P A E I A S g B F A E M A V A A + A D w A L w B E A E U A U w B D A F I A S Q B Q A F Q A T w B S A D 4 A P A B J A F M A U w B V A E U A U g A + A D w A T w B C A E o A R Q B D A F Q A I A B 0 A H k A c A B l A D 0 A I g B E A F I A T Q A t A E M A Z Q B y A H Q A a Q B m A G k A Y w B h A H Q A Z Q A t A E E A d Q B 0 A G g A b w B y A G k A d A B 5 A C I A P g A 8 A E k A R A A g A H Q A e Q B w A G U A P Q A i A G E A c w B j A G k A a Q A t A H Q A Y Q B n A C I A P g B N A G k A Y w B y A G 8 A c w B v A G Y A d A A g A E Q A U g B N A C A A S Q B T A F Y A I A B S A G 8 A b w B 0 A D w A L w B J A E Q A P g A 8 A E 4 A Q Q B N A E U A P g B N A G k A Y w B y A G 8 A c w B v A G Y A d A A g A E Q A U g B N A C A A S Q B T A F Y A I A B S A G 8 A b w B 0 A D w A L w B O A E E A T Q B F A D 4 A P A A v A E 8 A Q g B K A E U A Q w B U A D 4 A P A B Q A F U A Q g B M A E k A Q w B L A E U A W Q A + A D w A Q Q B M A E c A T w B S A E k A V A B I A E 0 A P g B S A F M A Q Q A 8 A C 8 A Q Q B M A E c A T w B S A E k A V A B I A E 0 A P g A 8 A F A A Q Q B S A E E A T Q B F A F Q A R Q B S A C A A b g B h A G 0 A Z Q A 9 A C I A c A B 1 A G I A b A B p A G M A L Q B l A H g A c A B v A G 4 A Z Q B u A H Q A I g A + A D w A V g B B A E w A V Q B F A C A A Z Q B u A G M A b w B k A G k A b g B n A D 0 A I g B p A G 4 A d A B l A G c A Z Q B y A D M A M g A i A D 4 A N g A 1 A D U A M w A 3 A D w A L w B W A E E A T A B V A E U A P g A 8 A C 8 A U A B B A F I A Q Q B N A E U A V A B F A F I A P g A 8 A F A A Q Q B S A E E A T Q B F A F Q A R Q B S A C A A b g B h A G 0 A Z Q A 9 A C I A b Q B v A G Q A d Q B s A H U A c w A i A D 4 A P A B W A E E A T A B V A E U A I A B l A G 4 A Y w B v A G Q A a Q B u A G c A P Q A i A G I A Y Q B z A G U A N g A 0 A C I A I A B z A G k A e g B l A D 0 A I g A y A D A A N A A 4 A C I A P g B 0 A F Q A L w B q A H g A d A A y A F o A c Q B 5 A E 8 A N w B q A G E A d A B r A G M A d Q B h A G M A U Q B I A G g A V g B U A E c A R w B F A E I A M w B E A F I A b A B 2 A H E A O Q B z A D E A V g B m A F Q A c g B Q A G E A V A B y A F Q A Z w B G A D k A a Q B G A C s A O A B 5 A G Q A e Q B K A E M A S A B o A H g A d w B U A H E A O A B j A E M A d A B 3 A E I A W A B 1 A E k A T g B I A F c A d g A r A G U A V w B m A F U A O Q B E A E 8 A b w B 1 A H g A V g B Y A D I A T A B k A F k A T A A v A E w A d A B O A C s A Z g A z A D c A M w A y A F g A V g B t A G w A e g B 1 A D g A V A B K A F M A T g B L A H Y A c g B 5 A E 4 A V g A w A C s A V Q B 5 A E Y A Q g B L A G Y A U g B F A D Y A M g B S A G 8 A V Q B 6 A F E A W A B H A E U A M w B 3 A F U A M w A y A E I A U A B D A D Y A T w A r A H E A R g B p A H Y A S w B w A H Y A c w B 3 A F Y A a A A z A C 8 A M g B U A G 0 A O A B l A H E A a A B L A C s A L w B m A G Q A W A B 0 A D E A e Q A y A E c A N w B 4 A D U A L w B l A E 4 A V Q B 0 A H E A S Q B 3 A G 4 A b g A 5 A F Y A N Q B J A E Q A b Q A 3 A D g A W g B 1 A E U A N g A 2 A H Q A Q Q B C A F c A S g B F A H E A d g B h A D Y A T w B 1 A D g A S g B L A D A A O A B V A E s A c g B 2 A E 0 A M A B w A E s A W g B Q A G g A b g B I A E o A R g A x A G 0 A c g B x A D k A V g A 1 A H o A V A B 4 A F Q A L w A 1 A D M A T A B t A D U A M Q A 5 A C s A K w B P A E E A M Q B m A G k A V Q B K A F c A Q w B z A D Q A a g B D A G 0 A O A B O A G g A d g B J A H E A K w B 6 A H c A b w B O A D g A M w B N A G E A U A B J A D A A c g B J A H E A Q g B i A E E A O A A 2 A D I A d Q B o A G E A Z A B 5 A F M A V Q B F A E w A c A B z A D c A K w B q A D c A T w B S A D A A a g B q A G I A T w A r A H I A T w A y A E I A N g B J A G U A R Q B n A F g A L w B V A D A A Z w A 9 A D 0 A P A A v A F Y A Q Q B M A F U A R Q A + A D w A L w B Q A E E A U g B B A E 0 A R Q B U A E U A U g A + A D w A L w B Q A F U A Q g B M A E k A Q w B L A E U A W Q A + A D w A L w B J A F M A U w B V A E U A U g A + A D w A S Q B T A F M A V Q B F A E Q A U A B S A E k A T g B D A E k A U A B B A E w A U w A + A D w A U A B S A E k A T g B D A E k A U A B B A E w A I A B p A G 4 A d A B l A H I A b g B h A G w A L Q B p A G Q A P Q A i A D E A I g A + A D w A T w B C A E o A R Q B D A F Q A I A B 0 A H k A c A B l A D 0 A I g B E A F I A T Q A t A E M A Z Q B y A H Q A a Q B m A G k A Y w B h A H Q A Z Q A t A E E A d Q B 0 A G g A b w B y A G k A d A B 5 A C I A P g A 8 A E k A R A A g A H Q A e Q B w A G U A P Q A i A G E A c w B j A G k A a Q A t A H Q A Y Q B n A C I A P g B N A G k A Y w B y A G 8 A c w B v A G Y A d A A g A E Q A U g B N A C A A S Q B T A F Y A I A B D A E E A P A A v A E k A R A A + A D w A T g B B A E 0 A R Q A + A E 0 A a Q B j A H I A b w B z A G 8 A Z g B 0 A C A A R A B S A E 0 A I A B J A F M A V g A g A E M A Q Q A 8 A C 8 A T g B B A E 0 A R Q A + A D w A L w B P A E I A S g B F A E M A V A A + A D w A U A B V A E I A T A B J A E M A S w B F A F k A P g A 8 A E E A T A B H A E 8 A U g B J A F Q A S A B N A D 4 A U g B T A E E A P A A v A E E A T A B H A E 8 A U g B J A F Q A S A B N A D 4 A P A B Q A E E A U g B B A E 0 A R Q B U A E U A U g A g A G 4 A Y Q B t A G U A P Q A i A H A A d Q B i A G w A a Q B j A C 0 A Z Q B 4 A H A A b w B u A G U A b g B 0 A C I A P g A 8 A F Y A Q Q B M A F U A R Q A g A G U A b g B j A G 8 A Z A B p A G 4 A Z w A 9 A C I A a Q B u A H Q A Z Q B n A G U A c g A z A D I A I g A + A D Y A N Q A 1 A D M A N w A 8 A C 8 A V g B B A E w A V Q B F A D 4 A P A A v A F A A Q Q B S A E E A T Q B F A F Q A R Q B S A D 4 A P A B Q A E E A U g B B A E 0 A R Q B U A E U A U g A g A G 4 A Y Q B t A G U A P Q A i A G 0 A b w B k A H U A b A B 1 A H M A I g A + A D w A V g B B A E w A V Q B F A C A A Z Q B u A G M A b w B k A G k A b g B n A D 0 A I g B i A G E A c w B l A D Y A N A A i A C A A c w B p A H o A Z Q A 9 A C I A M g A w A D Q A O A A i A D 4 A c w A x A E c A L w B N A G U A a g B S A D A A R Q A 0 A G M A W A B D A H Q A V A B R A G s A e Q B K A H k A M g A 5 A F Y A Y g B I A G o A d g B s A F E A R w B s A G k A b Q A 2 A F A A Z g B U A F E A d A B O A D I A N A B I A H Q A b g B S A G g A M Q B v A E s A S A B L A F M A L w B w A E g A W Q B y A D M A W g B P A H M A a A B a A E 0 A R A A w A H A A Z A A v A G E A b A A v A D Q A R w A 2 A G 4 A R A B s A F k A S Q B L A D I A Z Q A z A G o A M Q B 5 A F E A U A B 1 A G o A a g A 2 A F I A V Q B 0 A E o A d A B 2 A F o A c g A y A E I A b g A y A E Q A R w A v A F I A Q Q A r A E w A V w B h A G 0 A b g B 1 A G M A V A B W A H o A e g B v A C 8 A O Q B R A D I A a w A 3 A E s A e g B U A F E A N A A 2 A G g A V Q B q A G w A V w B H A G M A K w B W A H k A R g B 6 A C s A Z w B Y A F c A N Q B n A D U A W A B V A H U A N Q B Q A G 8 A b Q B s A G 8 A N Q A 5 A H Y A Y g A v A E c A T A B u A F o A R A B T A G g A Z w B n A H g A Z A A 4 A F c A d Q B 4 A E U A b A B P A D M A a Q A 5 A F k A Z g B T A D Q A Z A B P A D g A T g B K A E U A d g A x A G w A R Q B 1 A H k A S Q B Q A D g A O A B s A G Y A Y Q B m A H o A U g B l A G s A R A A r A F k A Y w B q A G E A N A B j A F I A V A B H A E g A T w B I A H g A T g B F A H E A N Q B O A G 8 A R w B Y A G k A Q w A w A H M A U g B j A D g A M w B Y A G c A d A A 3 A F M A N w A 3 A D A A d Q B Q A E w A e A B n A F I A b A B E A G w A c A B p A E M A d Q B P A E E A e A B v A E M A T w B s A H M A M A B v A H M A c g B i A G Q A R w B W A E o A Q g B Q A E g A M g B o A G I A N g A 1 A C 8 A d g B t A D E A c A B E A G k A c g B j A D Q A N g B j A E w A d A B D A D M A O Q B M A G E A V g B E A D Y A a w A 1 A F Y A N w B y A H I A N Q B Z A F c A M w B s A E s A b A B M A C 8 A Z w B n A H o A Z w B Y A E w A c g B u A E E A P Q A 9 A D w A L w B W A E E A T A B V A E U A P g A 8 A C 8 A U A B B A F I A Q Q B N A E U A V A B F A F I A P g A 8 A C 8 A U A B V A E I A T A B J A E M A S w B F A F k A P g A 8 A C 8 A U A B S A E k A T g B D A E k A U A B B A E w A P g A 8 A C 8 A S Q B T A F M A V Q B F A E Q A U A B S A E k A T g B D A E k A U A B B A E w A U w A + A D w A V w B P A F I A S w A + A D w A T w B C A E o A R Q B D A F Q A I A B 0 A H k A c A B l A D 0 A I g B E A F I A T Q A t A E M A Q Q A t A E M A Z Q B y A H Q A a Q B m A G k A Y w B h A H Q A Z Q A i A D 4 A P A B J A E Q A I A B 0 A H k A c A B l A D 0 A I g B N A F M A L Q B H A F U A S Q B E A C I A P g B 7 A D g A Z g B m A G E A O Q A 5 A G U A O A A t A D E A O A B j A G I A L Q A 0 A D c A N Q A 2 A C 0 A Y g B l A G M A Y w A t A D g A Y w A 1 A D I A N Q A 4 A D A A M Q A w A D A A Y w A z A H 0 A P A A v A E k A R A A + A D w A L w B P A E I A S g B F A E M A V A A + A D w A U g B J A E c A S A B U A F M A R w B S A E 8 A V Q B Q A C A A b g B h A G 0 A Z Q A 9 A C I A T Q B h A G k A b g A t A F I A a Q B n A G g A d A B z A C I A P g A 8 A F I A S Q B H A E g A V A B T A E w A S Q B T A F Q A P g A 8 A F I A S Q B H A E g A V A A g A G 4 A Y Q B t A G U A P Q A i A E k A U w B T A F U A R Q A i A D 4 A P A B D A E 8 A T g B E A E k A V A B J A E 8 A T g B M A E k A U w B U A D 4 A P A B U A E k A T Q B F A D 4 A P A B S A E E A T g B H A E U A V A B J A E 0 A R Q A + A D w A R g B S A E 8 A T Q A + A D I A M A A w A D I A L Q A x A D I A L Q A w A D U A V A A w A D E A O g A w A D c A P A A v A E Y A U g B P A E 0 A P g A 8 A F U A T g B U A E k A T A A + A D I A M A A x A D M A L Q A x A D E A L Q A y A D c A V A A w A D A A O g A w A D Y A P A A v A F U A T g B U A E k A T A A + A D w A L w B S A E E A T g B H A E U A V A B J A E 0 A R Q A + A D w A L w B U A E k A T Q B F A D 4 A P A B B A E M A Q w B F A F M A U w A + A D w A U A B S A E k A T g B D A E k A U A B B A E w A I A B p A G 4 A d A B l A H I A b g B h A G w A L Q B p A G Q A P Q A i A D E A I g A g A C 8 A P g A 8 A C 8 A Q Q B D A E M A R Q B T A F M A P g A 8 A C 8 A Q w B P A E 4 A R A B J A F Q A S Q B P A E 4 A T A B J A F M A V A A + A D w A L w B S A E k A R w B I A F Q A P g A 8 A C 8 A U g B J A E c A S A B U A F M A T A B J A F M A V A A + A D w A L w B S A E k A R w B I A F Q A U w B H A F I A T w B V A F A A P g A 8 A C 8 A V w B P A F I A S w A + A D w A L w B C A E 8 A R A B Z A D 4 A P A B T A E k A R w B O A E E A V A B V A F I A R Q A + A D w A R A B J A E c A R Q B T A F Q A P g A 8 A E E A T A B H A E 8 A U g B J A F Q A S A B N A D 4 A U w B I A E E A M Q A 8 A C 8 A Q Q B M A E c A T w B S A E k A V A B I A E 0 A P g A 8 A F A A Q Q B S A E E A T Q B F A F Q A R Q B S A C A A b g B h A G 0 A Z Q A 9 A C I A Y w B v A G Q A a Q B u A G c A d A B 5 A H A A Z Q A i A D 4 A P A B W A E E A T A B V A E U A I A B l A G 4 A Y w B v A G Q A a Q B u A G c A P Q A i A H M A d A B y A G k A b g B n A C I A P g B z A H U A c g B m A G E A Y w B l A C 0 A Y w B v A G Q A a Q B u A G c A P A A v A F Y A Q Q B M A F U A R Q A + A D w A L w B Q A E E A U g B B A E 0 A R Q B U A E U A U g A + A D w A V g B B A E w A V Q B F A C A A Z Q B u A G M A b w B k A G k A b g B n A D 0 A I g B i A G E A c w B l A D Y A N A A i A C A A c w B p A H o A Z Q A 9 A C I A M Q A 2 A D A A I g A + A H g A Z A B o A C s A M A B z A D Y A T Q A x A D Y A a w B o A D k A V w B q A G 4 A R g B s A E 4 A d A B E A F Q A U w B E A E 8 A M w A 0 A D 0 A P A A v A F Y A Q Q B M A F U A R Q A + A D w A L w B E A E k A R w B F A F M A V A A + A D w A Q Q B M A E c A T w B S A E k A V A B I A E 0 A P g B S A F M A Q Q A g A F A A S w B D A F M A I w A x A C 0 A V g A x A C 4 A N Q A 8 A C 8 A Q Q B M A E c A T w B S A E k A V A B I A E 0 A P g A 8 A F Y A Q Q B M A F U A R Q A g A G U A b g B j A G 8 A Z A B p A G 4 A Z w A 9 A C I A Y g B h A H M A Z Q A 2 A D Q A I g A g A H M A a Q B 6 A G U A P Q A i A D I A M A A 0 A D g A I g A + A E Y A R g B O A E I A c w B U A D U A Z Q B z A F I A Y w B S A D g A S g B O A E w A T g B L A E Q A a Q B W A F Y A N A B t A G g A d A B u A C s A M g B w A D A A V Q B 6 A E U A U g B K A E I A Y w B V A G U A L w B X A E c A a Q B W A H I A Z A A v A F Y A T g B 2 A F A A Y Q B k A D Y A M w B D A G M A e Q B T A E Q A b g B 1 A E c A d w B 3 A G M A T A B E A D U A d Q B o A G o A V A B a A H g A S g B I A F A A e Q B N A F k A U g B z A H g A Y Q B Z A G I A T g B P A D k A d A B 4 A F Q A c A B R A E 0 A S w B 5 A E E A Z g B 6 A F c A R Q A y A G 8 A T g B z A H k A d A B Z A D A A S w B T A E U A Q w A 1 A H c A M Q A 3 A E U A T g B U A D M A U A A 2 A F Q A b Q B F A G g A a g B V A F k A M w B U A D Q A Z w B R A E I A e g B 0 A E 8 A c A B v A F I A S A B R A H E A O A B Q A F o A b A A 2 A G w A L w B q A G U A Y w A y A F A A U A B x A G 4 A M Q B t A H A A Z w B Y A H Q A a Q B S A E U A Q w B Q A H k A b Q B 6 A E 4 A Y Q B v A G c A Y Q B a A F c A a w B o A F c A Y w B u A E U A e Q B u A H A A N A B W A C s A U g B V A F M A d Q B H A H E A Q w A z A C s A Q g B O A E 8 A M A B p A G s A R Q A x A D A A c A A w A C s A c w A w A D Y A e g B C A F g A O A B n A D g A N Q B u A H U A V w A y A E E A Y g B W A F E A U Q B 3 A D M A N w B 2 A G s A U Q B N A C 8 A Q g B l A F E A e A B k A G E A T Q B p A G 8 A R g B 0 A E c A W Q B k A G 4 A R Q A 1 A E Y A V w B r A E E A a g A v A G c A S A B o A E c A N g A x A G 0 A S g B n A H Q A d w B F A F I A c A B 1 A D M A d Q B M A E w A Y w B o A H U A Y Q B r A E 4 A N g B 1 A F A A e g B 0 A H E A U g B 6 A D A A e g B x A E k A N w B y A H A A M w B U A E Y A S g B V A G Y A Y g B v A G c A b Q B k A E I A U g B S A F A A d g A 4 A H E A R A B z A E o A e g B 4 A E o A c Q B y A G Q A Z Q B m A H U A Z A B J A F Q A N A B R A D 0 A P Q A 8 A C 8 A V g B B A E w A V Q B F A D 4 A P A A v A F M A S Q B H A E 4 A Q Q B U A F U A U g B F A D 4 A P A A v A F g A c g B N A E w A P g A = < / C E R T I F I C A T E > 
 
 < / C E R T I F I C A T E C H A I N > 
=== C:/Users/treeman/Desktop/windows nt source code\xbox\Xbox Live Source\XONLINE_MAIN\public\ext\sdk\vs10rtm\SDK\bin\isvtier5appsignsdk.xml ===
< ? x m l   v e r s i o n = " 1 . 0 " ? > < X r M L   x m l n s = " "   v e r s i o n = " 1 . 2 " > < B O D Y   t y p e = " L I C E N S E "   v e r s i o n = " 3 . 0 " > < I S S U E D T I M E > 2 0 0 6 - 0 6 - 2 2 T 1 9 : 5 4 < / I S S U E D T I M E > < V A L I D I T Y T I M E > < F R O M > 2 0 0 3 - 0 2 - 0 5 T 0 0 : 0 0 < / F R O M > < U N T I L > 2 0 1 6 - 0 6 - 1 9 T 1 9 : 5 4 < / U N T I L > < / V A L I D I T Y T I M E > < D E S C R I P T O R > < O B J E C T   t y p e = " A p p l i c a t i o n - S i g n i n g - C e r t i f i c a t e " > < I D   t y p e = " M S - G U I D " > { 6 d 5 a e 4 9 e - f 8 0 0 - 4 a 8 d - b 5 3 c - 2 e 5 b 9 7 d 6 f 7 0 d } < / I D > < / O B J E C T > < / D E S C R I P T O R > < I S S U E R > < O B J E C T   t y p e = " D R M - C e r t i f i c a t e - A u t h o r i t y " > < I D   t y p e = " M S - G U I D " > { c d 0 3 5 e c d - e 9 5 3 - 4 d b 8 - 8 1 a 7 - b 2 2 c 8 a c 4 f b 1 5 } < / I D > < N A M E > M i c r o s o f t   D R M   I S V   M a n i f e s t   S i g n i n g   K e y   C A < / N A M E > < / O B J E C T > < P U B L I C K E Y > < A L G O R I T H M > R S A < / A L G O R I T H M > < P A R A M E T E R   n a m e = " p u b l i c - e x p o n e n t " > < V A L U E   e n c o d i n g = " i n t e g e r 3 2 " > 6 5 5 3 7 < / V A L U E > < / P A R A M E T E R > < P A R A M E T E R   n a m e = " m o d u l u s " > < V A L U E   e n c o d i n g = " b a s e 6 4 "   s i z e = " 1 0 2 4 " > b V y V p b l n 5 N i s j J 7 P W E w D o 1 j Q X k H z / 3 F 3 d Y h P R 0 y Q Z o P V R U P P C 5 1 W S 6 G u 6 r X E t D 2 o H k E 6 5 X 2 0 a b C d 9 l l S 3 H C 1 D d D F f T E M c / y i O l F k t F E P M k i v g Y N A g c r F D f A O w i I E Z T d h v 6 E 1 Y V q Q Y u B T 2 T b 2 g U v m K k b a 0 X 9 u N P U m O Z Q b v y k A h a w = < / V A L U E > < / P A R A M E T E R > < / P U B L I C K E Y > < / I S S U E R > < I S S U E D P R I N C I P A L S > < P R I N C I P A L   i n t e r n a l - i d = " 1 " > < O B J E C T   t y p e = " M a n i f e s t - S i g n i n g - K e y " > < I D   t y p e = " M S - G U I D " > { 8 9 d c 5 7 0 5 - 1 b 7 9 - 4 a 6 b - 8 7 f 7 - 0 8 8 4 9 a 7 0 8 9 5 8 } < / I D > < N A M E > M i c r o s o f t   R M S   S D K   T i e r 5   A p p   S i g n   C e r t < / N A M E > < / O B J E C T > < P U B L I C K E Y > < A L G O R I T H M > R S A < / A L G O R I T H M > < P A R A M E T E R   n a m e = " p u b l i c - e x p o n e n t " > < V A L U E   e n c o d i n g = " i n t e g e r 3 2 " > 6 5 5 3 7 < / V A L U E > < / P A R A M E T E R > < P A R A M E T E R   n a m e = " m o d u l u s " > < V A L U E   e n c o d i n g = " b a s e 6 4 "   s i z e = " 1 0 2 4 " > G e E c + F d I t b 2 X z m g R z A Z G h Y x W g x f + G V w G i Y E 5 b Y s R W w Y 6 M h c I A c 4 F z M y q N 7 u Z H e P l A X r d P U g 5 T Q e m H v J w T u j 5 N U T g L U i q D n 1 F w w U f j G O Q B 5 E z N J c 3 L c / P G l F / U L i X L w x a w E v 5 q z / 1 N u u M D h q t J U g M t I f q C n f L f t 0 b o u p U + o 7 R Z 7 0 = < / V A L U E > < / P A R A M E T E R > < / P U B L I C K E Y > < / P R I N C I P A L > < / I S S U E D P R I N C I P A L S > < W O R K > < O B J E C T   t y p e = " A p p l i c a t i o n - S i g n i n g - C e r t i f i c a t e " > < I D   t y p e = " M S - G U I D " > { 6 d 5 a e 4 9 e - f 8 0 0 - 4 a 8 d - b 5 3 c - 2 e 5 b 9 7 d 6 f 7 0 d } < / I D > < / O B J E C T > < R I G H T S G R O U P   n a m e = " M a i n - R i g h t s " > < R I G H T S L I S T > < R I G H T   n a m e = " I S S U E " > < C O N D I T I O N L I S T > < T I M E > < R A N G E T I M E > < F R O M > 2 0 0 3 - 0 2 - 0 5 T 0 0 : 0 0 < / F R O M > < U N T I L > 2 0 1 3 - 0 6 - 2 0 T 1 9 : 5 4 < / U N T I L > < / R A N G E T I M E > < / T I M E > < A C C E S S > < P R I N C I P A L   i n t e r n a l - i d = " 1 "   / > < / A C C E S S > < / C O N D I T I O N L I S T > < / R I G H T > < / R I G H T S L I S T > < / R I G H T S G R O U P > < / W O R K > < / B O D Y > < S I G N A T U R E > < D I G E S T > < A L G O R I T H M > S H A 1 < / A L G O R I T H M > < P A R A M E T E R   n a m e = " c o d i n g t y p e " > < V A L U E   e n c o d i n g = " s t r i n g " > s u r f a c e - c o d i n g < / V A L U E > < / P A R A M E T E R > < V A L U E   e n c o d i n g = " b a s e 6 4 "   s i z e = " 1 6 0 " > I X 2 P G + F 7 4 j H I 3 W i V l c y O Y G N j R L I = < / V A L U E > < / D I G E S T > < A L G O R I T H M > R S A   P K C S # 1 - V 1 . 5 < / A L G O R I T H M > < V A L U E   e n c o d i n g = " b a s e 6 4 "   s i z e = " 1 0 2 4 " > f X q C 8 q b v W V + s y 2 U u 4 m n V 9 2 B h 9 l 6 l T r p r w p a i h p B W G d Q P 7 c / X 1 M Q z S p C 4 u J y W i x c 8 d z 5 z M G A K K f + v y 0 T U O / d T J P F Z h I 7 f 2 j i q q X a 5 x R T T 3 A K k p j S / D / Y V w o p p c V 3 5 K c 1 U 0 v g q j O l 7 M y m o V G c m S c w F A w n P u F l j 4 J E z Q M p D 7 g G X Q s o = < / V A L U E > < / S I G N A T U R E > < / X r M L > 
 
 
=== C:/Users/treeman/Desktop/windows nt source code\xbox\Xbox Live Source\XONLINE_MAIN\public\ext\sdk\vs10rtm\SDK\bin\x64\isvtier5appsignsdk.xml ===
< ? x m l   v e r s i o n = " 1 . 0 " ? > < X r M L   x m l n s = " "   v e r s i o n = " 1 . 2 " > < B O D Y   t y p e = " L I C E N S E "   v e r s i o n = " 3 . 0 " > < I S S U E D T I M E > 2 0 0 6 - 0 6 - 2 2 T 1 9 : 5 4 < / I S S U E D T I M E > < V A L I D I T Y T I M E > < F R O M > 2 0 0 3 - 0 2 - 0 5 T 0 0 : 0 0 < / F R O M > < U N T I L > 2 0 1 6 - 0 6 - 1 9 T 1 9 : 5 4 < / U N T I L > < / V A L I D I T Y T I M E > < D E S C R I P T O R > < O B J E C T   t y p e = " A p p l i c a t i o n - S i g n i n g - C e r t i f i c a t e " > < I D   t y p e = " M S - G U I D " > { 6 d 5 a e 4 9 e - f 8 0 0 - 4 a 8 d - b 5 3 c - 2 e 5 b 9 7 d 6 f 7 0 d } < / I D > < / O B J E C T > < / D E S C R I P T O R > < I S S U E R > < O B J E C T   t y p e = " D R M - C e r t i f i c a t e - A u t h o r i t y " > < I D   t y p e = " M S - G U I D " > { c d 0 3 5 e c d - e 9 5 3 - 4 d b 8 - 8 1 a 7 - b 2 2 c 8 a c 4 f b 1 5 } < / I D > < N A M E > M i c r o s o f t   D R M   I S V   M a n i f e s t   S i g n i n g   K e y   C A < / N A M E > < / O B J E C T > < P U B L I C K E Y > < A L G O R I T H M > R S A < / A L G O R I T H M > < P A R A M E T E R   n a m e = " p u b l i c - e x p o n e n t " > < V A L U E   e n c o d i n g = " i n t e g e r 3 2 " > 6 5 5 3 7 < / V A L U E > < / P A R A M E T E R > < P A R A M E T E R   n a m e = " m o d u l u s " > < V A L U E   e n c o d i n g = " b a s e 6 4 "   s i z e = " 1 0 2 4 " > b V y V p b l n 5 N i s j J 7 P W E w D o 1 j Q X k H z / 3 F 3 d Y h P R 0 y Q Z o P V R U P P C 5 1 W S 6 G u 6 r X E t D 2 o H k E 6 5 X 2 0 a b C d 9 l l S 3 H C 1 D d D F f T E M c / y i O l F k t F E P M k i v g Y N A g c r F D f A O w i I E Z T d h v 6 E 1 Y V q Q Y u B T 2 T b 2 g U v m K k b a 0 X 9 u N P U m O Z Q b v y k A h a w = < / V A L U E > < / P A R A M E T E R > < / P U B L I C K E Y > < / I S S U E R > < I S S U E D P R I N C I P A L S > < P R I N C I P A L   i n t e r n a l - i d = " 1 " > < O B J E C T   t y p e = " M a n i f e s t - S i g n i n g - K e y " > < I D   t y p e = " M S - G U I D " > { 8 9 d c 5 7 0 5 - 1 b 7 9 - 4 a 6 b - 8 7 f 7 - 0 8 8 4 9 a 7 0 8 9 5 8 } < / I D > < N A M E > M i c r o s o f t   R M S   S D K   T i e r 5   A p p   S i g n   C e r t < / N A M E > < / O B J E C T > < P U B L I C K E Y > < A L G O R I T H M > R S A < / A L G O R I T H M > < P A R A M E T E R   n a m e = " p u b l i c - e x p o n e n t " > < V A L U E   e n c o d i n g = " i n t e g e r 3 2 " > 6 5 5 3 7 < / V A L U E > < / P A R A M E T E R > < P A R A M E T E R   n a m e = " m o d u l u s " > < V A L U E   e n c o d i n g = " b a s e 6 4 "   s i z e = " 1 0 2 4 " > G e E c + F d I t b 2 X z m g R z A Z G h Y x W g x f + G V w G i Y E 5 b Y s R W w Y 6 M h c I A c 4 F z M y q N 7 u Z H e P l A X r d P U g 5 T Q e m H v J w T u j 5 N U T g L U i q D n 1 F w w U f j G O Q B 5 E z N J c 3 L c / P G l F / U L i X L w x a w E v 5 q z / 1 N u u M D h q t J U g M t I f q C n f L f t 0 b o u p U + o 7 R Z 7 0 = < / V A L U E > < / P A R A M E T E R > < / P U B L I C K E Y > < / P R I N C I P A L > < / I S S U E D P R I N C I P A L S > < W O R K > < O B J E C T   t y p e = " A p p l i c a t i o n - S i g n i n g - C e r t i f i c a t e " > < I D   t y p e = " M S - G U I D " > { 6 d 5 a e 4 9 e - f 8 0 0 - 4 a 8 d - b 5 3 c - 2 e 5 b 9 7 d 6 f 7 0 d } < / I D > < / O B J E C T > < R I G H T S G R O U P   n a m e = " M a i n - R i g h t s " > < R I G H T S L I S T > < R I G H T   n a m e = " I S S U E " > < C O N D I T I O N L I S T > < T I M E > < R A N G E T I M E > < F R O M > 2 0 0 3 - 0 2 - 0 5 T 0 0 : 0 0 < / F R O M > < U N T I L > 2 0 1 3 - 0 6 - 2 0 T 1 9 : 5 4 < / U N T I L > < / R A N G E T I M E > < / T I M E > < A C C E S S > < P R I N C I P A L   i n t e r n a l - i d = " 1 "   / > < / A C C E S S > < / C O N D I T I O N L I S T > < / R I G H T > < / R I G H T S L I S T > < / R I G H T S G R O U P > < / W O R K > < / B O D Y > < S I G N A T U R E > < D I G E S T > < A L G O R I T H M > S H A 1 < / A L G O R I T H M > < P A R A M E T E R   n a m e = " c o d i n g t y p e " > < V A L U E   e n c o d i n g = " s t r i n g " > s u r f a c e - c o d i n g < / V A L U E > < / P A R A M E T E R > < V A L U E   e n c o d i n g = " b a s e 6 4 "   s i z e = " 1 6 0 " > I X 2 P G + F 7 4 j H I 3 W i V l c y O Y G N j R L I = < / V A L U E > < / D I G E S T > < A L G O R I T H M > R S A   P K C S # 1 - V 1 . 5 < / A L G O R I T H M > < V A L U E   e n c o d i n g = " b a s e 6 4 "   s i z e = " 1 0 2 4 " > f X q C 8 q b v W V + s y 2 U u 4 m n V 9 2 B h 9 l 6 l T r p r w p a i h p B W G d Q P 7 c / X 1 M Q z S p C 4 u J y W i x c 8 d z 5 z M G A K K f + v y 0 T U O / d T J P F Z h I 7 f 2 j i q q X a 5 x R T T 3 A K k p j S / D / Y V w o p p c V 3 5 K c 1 U 0 v g q j O l 7 M y m o V G c m S c w F A w n P u F l j 4 J E z Q M p D 7 g G X Q s o = < / V A L U E > < / S I G N A T U R E > < / X r M L > 
 
 
=== C:/Users/treeman/Desktop/windows nt source code\xbox\Xbox Live Source\XONLINE_MAIN\public\ext\sdk\vs10rtm\SDK\bin\x64\vsstools\betest.xml ===
<?xml-stylesheet type="text/xsl" href="xdr-schema.xsl"?>
<Schema name="BETestConfig" xmlns="urn:schemas-microsoft-com:xml-data" xmlns:dt="urn:schemas-microsoft-com:datatypes">

<AttributeType name="filespec" dt:type="string" required="yes">
   <description>
   File specification.  Can include wildcard characters ? and *
   </description>
</AttributeType>

<AttributeType name="path" dt:type="string" required="yes">
   <description>
   Path to a file.  The path can include environment variables or
   values extracted from registry keys.
   </description>
</AttributeType>

<AttributeType name="recursive" dt:type="enumeration"
               dt:values="yes no" default="no">
   <description>
   Is path specified recursive or limited to the directory that is specified.
   </description>
</AttributeType>

<AttributeType name="alternatePath" dt:type="string" required="no">
   <description>
   For New Targets, the alternate path to which the file specification should be restored to
   </description>
</AttributeType>

<AttributeType name="logicalPath" dt:type="string">
   <description>
   Logical path for a Writer component.  This logical name uses backslash
   as separators to form a logical namespace hierarchy
   </description>
</AttributeType>

<AttributeType name="componentName" dt:type="string">
   <description>
   Name used to identify a Writer component.  May be qualified by a
   logical path.
   </description>
</AttributeType>

<AttributeType name="instanceName" dt:type="string">
    <description>
    If multiple instances of a writer are running, they must all have instance names.
    In this case, the instance name can be used to specify which writer instance should 
    receive restore events for a particular component.
    </description>
</AttributeType>

<AttributeType name="backupOptions" dt:type="string">
    <description>
    BETest can use this attribute to send a writer-specific
    string for each component being backed up
    </description>
</AttributeType>

<AttributeType name="restoreOptions" dt:type="string">
    <description>
    BETest can use this attribute to send a writer-specific
    string for each component being restored
    </description>
</AttributeType>

<AttributeType name="authoritativeRestore" dt:type="enumeration"
			dt:values = "yes no" default = "no">
    <description>
    BETest can use this attribute to specify that a component should be restored in an authoritative manner
    </description>
</AttributeType>

    <AttributeType name="rollForwardType" dt:type="enumeration" required = "no"
               dt:values="none all partial">
      <description>
        This attributes determines how far a writer should roll forward restored data
        or not.
      </description>
    </AttributeType>

    <AttributeType name="rollForwardPoint" dt:type="string" required = "no">
      <description>
        This attributes determines how far a writer should roll forward restored data
        or not.
      </description>
    </AttributeType>

    <AttributeType name="restoreName" dt:type="string" required = "no">
      <description>
      This attribute allows a requestor to rename a component at restore time.
      </description>
    </AttributeType>

<AttributeType name="additionalRestores" dt:type="enumeration"
               dt:values="yes no" default="no">
    <description>
    Indicates whether additional restores of this component should
    be expected.
    </description>
</AttributeType>

<AttributeType name="writerId" dt:type="uuid" required="yes">
    <description>
   Unique id to identify the writer.  Note that this identifies the
   writer class rather than a specific instance of the writer.
    </description>
</AttributeType>

<ElementType name="BETest" content="eltOnly" model="closed">
    <description>
    Configuration information for BETest backup/restore
    </description>
    
    <element type="Writer" minOccurs="1" maxOccurs="*" />
</ElementType>

<ElementType name="Writer" content="eltOnly" model="closed">
    <description>
    Information about a writer that is to be backed up/restored
    </description>
    
    <attribute type="writerId" required="yes"/>
    <element type="Component" minOccurs="1" maxOccurs="*" />
</ElementType>

<ElementType name="Component" content="eltOnly" model="closed">
    <description>
    Information about a component that is to be backed up/restored
    </description>
    
    <attribute type="logicalPath" required="no" />
    <attribute type="componentName" required="yes" />
    <attribute type="instanceName" required="no" />
    <attribute type="backupOptions" required="no" />
    <attribute type="restoreOptions" required="no" />
    <attribute type="authoritativeRestore" required="no" />        
    <attribute type="additionalRestores" default="no"/>
    <element type="SubComponent" minOccurs="0" maxOccurs="*" />
    <element type="NewTarget" minOccurs="0" maxOccurs="*" />
</ElementType>

<ElementType name="SubComponent" content="eltOnly" model="closed">
    <description>
    Indicates that BETest is not to restore the root component.  Rather
    BETest is to restore the list of selectable-for-restore components.
    </description>
    
    <attribute type="logicalPath" required="no" />
    <attribute type="componentName" required="yes" />
</ElementType>

<ElementType name="NewTarget" content="eltOnly" model="closed">
    <description>
    Indicates that BETest is to restore the specified file specification to an
    alternate location.
    </description>
    
    <attribute type="path" required="yes"/>
    <attribute type="filespec" required="yes"/>
    <attribute type="recursive" default="no"/>
    <attribute type="alternatePath" required="yes" />
</ElementType>

</Schema>
=== C:/Users/treeman/Desktop/windows nt source code\xbox\Xbox Live Source\XONLINE_MAIN\public\ext\sdk\vs10rtm\SDK\bin\x64\vsstools\BetestSample.xml ===
<BETest>

  <Writer writerId="5affb034-969f-4919-8875-88f830d0ef89">

    <Component componentName="TestFiles" >

    </Component>

  </Writer>

</BETest>
=== C:/Users/treeman/Desktop/windows nt source code\xbox\Xbox Live Source\XONLINE_MAIN\public\ext\sdk\vs10rtm\SDK\bin\vsstools\vswriter_config.xml ===
<TestWriter usage="USER_DATA">

    <RestoreMethod method="RESTORE_IF_CAN_BE_REPLACED" 
                   writerRestore="always"
                   rebootRequired="no" />
    
    <ExcludeFile path="c:\writerData\notTheseFiles" filespec="excludeThisFile.txt" recursive="no"/>
    
    <Component componentType="filegroup" 
               componentName="TestFiles">
        <ComponentFile path="c:\writerData\myFilesHere" filespec="*" recursive="no" />
    </Component>

</TestWriter>
=== C:/Users/treeman/Desktop/windows nt source code\xbox\Xbox Live Source\XONLINE_MAIN\public\ext\sdk\vs10rtm\SDK\bin\x64\vsstools\VswriterSample.xml ===
<TestWriter	usage="USER_DATA"
			deleteFiles="no">

    <RestoreMethod method="RESTORE_IF_CAN_BE_REPLACED" 
                   writerRestore="always"
                   rebootRequired="no" />
    
    <Component componentType="filegroup" 
               componentName="TestFiles">
        <ComponentFile path="c:\TestPath" filespec="*" recursive="no" />
    </Component>

</TestWriter>
=== C:/Users/treeman/Desktop/windows nt source code\xbox\Xbox Live Source\XONLINE_MAIN\public\ext\sdk\vs10rtm\SDK\bin\x64\vsstools\vswriter_config.xml ===
<TestWriter usage="USER_DATA">

    <RestoreMethod method="RESTORE_IF_CAN_BE_REPLACED" 
                   writerRestore="always"
                   rebootRequired="no" />
    
    <ExcludeFile path="c:\writerData\notTheseFiles" filespec="excludeThisFile.txt" recursive="no"/>
    
    <Component componentType="filegroup" 
               componentName="TestFiles">
        <ComponentFile path="c:\writerData\myFilesHere" filespec="*" recursive="no" />
    </Component>

</TestWriter>
=== C:/Users/treeman/Desktop/windows nt source code\xbox\Xbox Live Source\XONLINE_MAIN\public\ext\sdk\vs10rtm\SDK\bin\vsstools\VswriterSample.xml ===
<TestWriter	usage="USER_DATA"
			deleteFiles="no">

    <RestoreMethod method="RESTORE_IF_CAN_BE_REPLACED" 
                   writerRestore="always"
                   rebootRequired="no" />
    
    <Component componentType="filegroup" 
               componentName="TestFiles">
        <ComponentFile path="c:\TestPath" filespec="*" recursive="no" />
    </Component>

</TestWriter>
=== C:/Users/treeman/Desktop/windows nt source code\xbox\Xbox Live Source\XONLINE_MAIN\public\ext\sdk\vs10rtm\SDK\bin\x64\vsstools\swriter.xml ===
<Schema name="VssTestWriterConfig"
        xmlns="urn:schemas-microsoft-com:xml-data"
	xmlns:dt="urn:schemas-microsoft-com:datatypes">

<!-- Here we define all attributes that may be used across different elements of the document -->
<AttributeType name="filespec" dt:type="string">
	<description>
	File specification.  Can include wildcard characters ? and *
	</description>
</AttributeType>

<AttributeType name="path" dt:type="string">
	<description>
	Path to a file.  The path can include environment variables or
	values extracted from registry keys.
	</description>
</AttributeType>

<AttributeType name="recursive" dt:type="enumeration"
               dt:values="yes no">
	<description>
	Is path specified recursive or limited to the directory that is specified.
	</description>
</AttributeType>

<AttributeType name="alternatePath" dt:type="string">
	<description>
	Alternate path in which to find the file.  Files in a file group may
	have been copied to an alternative location by the writer.  Backup should
	pick up the files from the alternative location instead of the original
	location but should restore the files to their original location
	</description>
</AttributeType>

<AttributeType name="logicalPath" dt:type="string">
   <description>
   Logical path for a Writer component.  This logical name uses backslash
   as separators to form a logical namespace hierarchy
   </description>
</AttributeType>

<AttributeType name="componentName" dt:type="string">
   <description>
   Name used to identify a Writer component.  May be qualified by a
   logical path.
   </description>
</AttributeType>

<AttributeType name="instanceName" dt:type="string">
	<description>
	This provides the writer with a unique instance id that persists
	between backup and restore.  This allows the backup application
	to handle multiple writer instances at restore time.
	</description>
</AttributeType>
	
<!-- Here we define all of the possible elements of the document -->
<ElementType name="TestWriter" content="eltOnly" model="closed">
	<description>
	Configuration information for the VSS Test Writer.
	</description>

	<AttributeType name="usage" dt:type="enumeration"
		dt:values="USER_DATA
				   BOOTABLE_SYSTEM_STATE 
				   SYSTEM_SERVICE 
				   OTHER">
	      <description>
	      How the data associated with the writer is used.  
	      </description>
	</AttributeType>

	<AttributeType name="timestamped" dt:type="enumeration"
		dt:values="yes no">
		<description>
		Whether this writer supports timestamped components or not.
		</description>
	</AttributeType>

	<AttributeType name="supportsNewTarget" dt:type="enumeration"
		dt:values="yes no">
		<description>
		Whether this writer supports new target operations or not.
		</description>
	</AttributeType>

	<AttributeType name="supportsRestoreWithMove" dt:type="enumeration"
		dt:values="yes no">
		<description>
		Whether this writer supports redirecting components at restore time.
		</description>
	</AttributeType>
	
	<AttributeType name="supportsCopy" dt:type="enumeration"
		dt:values="yes no">
		<description>
		Whether this writer supports copy backups.
		</description>
	</AttributeType>

	<AttributeType name="supportsDifferential" dt:type="enumeration"
		dt:values="yes no">
		<description>
		Whether this writer supports differential backups.
		</description>
	</AttributeType>

	<AttributeType name="supportsIncremental" dt:type="enumeration"
		dt:values="yes no">
		<description>
		Whether this writer supports incremental backups.
		</description>
	</AttributeType>

	<AttributeType name="supportsLog" dt:type="enumeration"
		dt:values="yes no">
		<description>
		Whether this writer supports Log backups.
		</description>
	</AttributeType>

	<AttributeType name="supportsAuthRestore" dt:type="enumeration"
		dt:values="yes no">
		<description>
		Whether this writer supports authoritative restore.
		</description>
	</AttributeType>

	<AttributeType name="supportsRollforward" dt:type="enumeration"
		dt:values="yes no">
		<description>
		Whether this writer supports rollforward restore.
		</description>
	</AttributeType>

	<AttributeType name="supportsRestoreRename" dt:type="enumeration"
		dt:values="yes no">
		<description>
		Whether this writer supports component rename at restore time.
		</description>
	</AttributeType>

	<AttributeType name="verbosity" dt:type="enumeration"
	      dt:values="low medium high">
	      <description>
		Whether verbose output is enabled.      
		low:  	Messages are not printed if files are not properly restored
		medium:	Most general messages are printed, including warnings if files are not restored
		high:	Extremely verbose output is enabled.
	      </description>
	</AttributeType>

	<AttributeType name="checkExcludes" dt:type="enumeration"
		dt:values="yes no">
		<description>
		Whether to check that excluded files are not restored at restore time.  
		If restoring to a location that may contain files matching the exclude list,
		set this to false to prevent spurious warnings.
		</description>
	</AttributeType>

	<AttributeType name="checkIncludes" dt:type="enumeration"
		dt:values="yes no">
		<description>
		Whether to check that included files are restored at restore time.  
		</description>
	</AttributeType>

	<AttributeType name="deleteFiles" dt:type="enumeration"
		dt:values="yes no">
		<description>
		whether to delete files from original volume after snapshot is taken
		</description>
	</AttributeType>

	<AttributeType name="deletePartialFiles" dt:type="enumeration"
		dt:values="yes no">
		<description>
		whether to delete partial files from original volume after snapshot is taken
		</description>
	</AttributeType>

	<AttributeType name="deleteDifferencedFiles" dt:type="enumeration"
		dt:values="yes no">
		<description>
		whether to delete differenced files from original volume after snapshot is taken
		</description>
	</AttributeType>

	<AttributeType name="majorVersion" dt:type="number" >
	 <description>
	   Major version number of the writer.
	 </description>
	</AttributeType>
	<AttributeType name="minorVersion" dt:type="number" >
	 <description>
	   Minor version number of the writer.
	 </description>
	</AttributeType>

	<AttributeType name="excludeLowPriority" dt:type="enumeration"
		dt:values="yes no">
		<description>
		whether to exclude files using low-priority IO
		</description>
	</AttributeType>

	<attribute type="instanceName" required="no" />
	<attribute type="usage"  default="OTHER" />
	<attribute type="timestamped" default="no" />
	<attribute type="supportsNewTarget" default="yes" />
	<attribute type="supportsRestoreWithMove" default="yes" />
	<attribute type="supportsCopy" default = "no" />
	<attribute type="supportsDifferential" default = "no" />
	<attribute type="supportsIncremental" default = "no" />
	<attribute type="supportsLog" default = "no" />

	<attribute type="supportsAuthRestore" default = "no" />
	<attribute type="supportsRollforward" default = "no" />
	<attribute type="supportsRestoreRename" default = "no" />
	
	<attribute type="verbosity" default="medium" />
	<attribute type="checkExcludes" default="yes" />
	<attribute type="checkIncludes" default="yes" />
	<attribute type="deleteFiles" default="no" />
	<attribute type="deletePartialFiles" default="no" />
	<attribute type="deleteDifferencedFiles" default="no" />

	<attribute type="majorVersion" required="no" />
	<attribute type="minorVersion" required="no" />

	<attribute type="excludeLowPriority" default="no" />
	<element type="RestoreMethod"   />
 
	<group order="many">
		<element type="ExcludeFile" minOccurs="0" maxOccurs="*" />
		<element type="ExcludeFileFromSnapshot" minOccurs="0" maxOccurs="*" />		
		<element type="Component" minOccurs="0" maxOccurs="*" />
		<element type="FailEvent" minOccurs="0" maxOccurs="*" />
	</group>
</ElementType>

<ElementType name="RestoreMethod" content="eltOnly" model="closed">
	<description>
	How restore should be performed.  Includes specification of how files
	should be restored as well as special steps that should occur in order
	 to complete the restore.
	</description>

	<AttributeType name="method" dt:type="enumeration"
	         dt:values="RESTORE_IF_NONE_THERE
	                          RESTORE_IF_CAN_BE_REPLACED
	                          STOP_RESTART_SERVICE
	                          REPLACE_AT_REBOOT
	                          REPLACE_AT_REBOOT_IF_CANNOT_REPLACE
	                          RESTORE_TO_ALTERNATE_LOCATION
	                          CUSTOM">
		<description>
	       RESTORE_IF_NONE_THERE: i.e., can restore data if it is not at the
	          location where it was backed up from.  This essentially allows
		  data to be restored to a clean system
	       RESTORE_IF_CAN_BE_REPLACED: Restore data if all of the files can
	          be replaced in the orgiginal backup location.  Fails if any of
		  the files are open.  If an alternate location is provided, files
		  will be placed there if they cannot be restored to their original
		  location.
	       STOP_RESTART_SERVICE: stop service (service attribute must be
	          specified). Restore files to original backup location.
		  Restart service.  Fails if any of the files are open after the
		  service is stopped.
	       REPLACE_AT_REBOOT: Restore files to a temporary location.  Use
	          MoveFileEx to replace the files at reboot.
              REPLACE_AT_REBOOT_IF_CANNOT_REPLACE:  Similiar to REPLACE_AT_REBOOT
		   however files may be restored in place in they are not busy.  All files
		   within a component must be either completely replaced in place or
		   completely replaced at reboot, so if one component file is busy, all files
		   in that component must be replaced at reboot.
	          
	       RESTORE_TO_ALTERNATIVE_LOCATION: Restore files to an alternate
	          location.  Typically writerRestore will indicate that the writer
		  will participate in the restore process
		CUSTOM:  Custom restore method.  Requestor's should not handle this
		case at all for this writer.
	       </description>
	</AttributeType>

	<AttributeType name="service" dt:type="string">
		<description>
		Must be specified if method="STOP_RESTART_SERVICE", indicates
	      service to be stopped before restoring files.
		</description>
	</AttributeType>

	<AttributeType name="writerRestore" dt:type="enumeration"
                  dt:values="always never ifReplaceFails">
		<description>
		Whether writer should be invoked after files are restored to
		disk.  Options are always, never, and ifReplaceFails.  The latter means
		that the files will be restored to their original location.  If one
		or more of the files cannot be replaced, then the files will be
		restored to an alternate location (must be specified via
		ALTERNATE_LOCATION_MAPPING.  After the files are restored, the writer
		is invoked.
		</description>
	</AttributeType>

	<AttributeType name="rebootRequired" dt:type="enumeration"
                 dt:values="yes no">
		<description>
		Should a reboot be performed after restoring the data for this
		writer
		</description>
	</AttributeType>
	
	<attribute type="method" required="yes" />
	<attribute type="service" required="no" />
	<attribute type="writerRestore" default="always" />
	<attribute type="rebootRequired" default="no" />

	<element type="AlternateLocationMapping" minOccurs="0" maxOccurs="*" />
</ElementType>

<ElementType name="Dependency" content="empty" model="closed">
    <description>
    A dependency from one component to another component in another writer.
    </description>
    
  <AttributeType name="writerId" dt:type="uuid" required="yes">
    <description>
    Id of writer that this component is dependent on.
    </description>
  </AttributeType>


  <attribute type="writerId" required="yes" />
  <attribute type="logicalPath" required="no" />
  <attribute type="componentName" required="yes" />
</ElementType>

<ElementType name="ComponentFile" content="empty" model="closed">
	<description>
	Location of a file in a component.  For database components, the alternatePath
	attribute is ignored.
	</description>

	<AttributeType name="fullBackupRequired" dt:type="enumeration"
				dt:values="yes no" >
	<description>
	Whether this file needs backing up during a full backup.
	</description>
	</AttributeType>

	<AttributeType name="diffBackupRequired" dt:type="enumeration"
				dt:values="yes no" >
	<description>
	Whether this file needs backing up during a differential backup.
	</description>	
	</AttributeType>

	<AttributeType name="incBackupRequired" dt:type="enumeration"
				dt:values="yes no" >
	<description>
	Whether this file needs backing up during an incremental backup.
	</description>
	</AttributeType>

	<AttributeType name="logBackupRequired" dt:type="enumeration"
				dt:values="yes no" >
	<description>
	Whether this file needs backing up during a log backup.
	</description>
	</AttributeType>
	
	<AttributeType name="fullSnapshotRequired" dt:type="enumeration"
				dt:values="yes no" >
	<description>
	Whether this file needs to be copied off of a snapshot during a full backup.
	</description>
	</AttributeType>
	
	<AttributeType name="diffSnapshotRequired" dt:type="enumeration"
				dt:values="yes no" >
	<description>
	Whether this file needs to be copied off of a snapshot during a differential backup.
	</description>
	</AttributeType>
	
	<AttributeType name="incSnapshotRequired" dt:type="enumeration"
				dt:values="yes no" >
	<description>
	Whether this file needs to be copied off of a snapshot during an incremental backup.
	</description>
	</AttributeType>
	
	<AttributeType name="logSnapshotRequired" dt:type="enumeration"
				dt:values="yes no" >
	<description>
	Whether this file needs to be copied off of a snapshot during a log backup.
	</description>
	</AttributeType>

	<AttributeType name="nonSnapshotFile" dt:type="string">
	<description>
	If the file is not being copied off of the snapshot volume, it is replaced by this file in PostSnapshot.
	This ensures that the requestor does not back up the file off of the snapshot
	</description>
	</AttributeType>
	
	<attribute type="path" required="yes" />
	<attribute type="filespec" required="yes" />
	<attribute type="recursive" required="yes" />
	<attribute type="alternatePath" required="no" />
	<attribute type="nonSnapshotFile" required="no" />
	
	<attribute type="fullBackupRequired" default="yes" />
	<attribute type="diffBackupRequired" default="yes" />
	<attribute type="incBackupRequired" default="yes" />
	<attribute type="logBackupRequired" default="yes" />

	<attribute type="fullSnapshotRequired" default="yes" />
	<attribute type="diffSnapshotRequired" default="yes" />
	<attribute type="incSnapshotRequired" default="yes" />
	<attribute type="logSnapshotRequired" default="yes" />
</ElementType>

<ElementType name="ExcludeFile" content="empty" model="closed">
	<description>
	Location of a file that the writer should mark as excluded from backup.
	</description>
	
	<attribute type ="path" required="yes" />
	<attribute type="filespec" required="yes" />
	<attribute type="recursive" required="yes" />
</ElementType>

<ElementType name="ExcludeFileFromSnapshot" content="empty" model="closed">
	<description>
	Location of a file that the writer should mark as excluded from a snapshot.
	</description>
	
	<attribute type ="path" required="yes" />
	<attribute type="filespec" required="yes" />
	<attribute type="recursive" required="yes" />	
</ElementType>

<ElementType name="DifferencedFile" content="empty" model="closed">
	<description>
	Differenced files that the writer will add during PostSnapshot
	</description>
	
	<AttributeType name="year" dt:type="number" >
	<description>
	The time that indicates the point of the last backup.
	</description>
	</AttributeType>

	<AttributeType name="month" dt:type="number" >
	<description>
	The time that indicates the point of the last backup.
	</description>
	</AttributeType>

	<AttributeType name="day" dt:type="number" >
	<description>
	The time that indicates the point of the last backup.
	</description>
	</AttributeType>

	<AttributeType name="hour" dt:type="number" >
	<description>
	The time that indicates the point of the last backup.
	</description>
	</AttributeType>

	<AttributeType name="minute" dt:type="number" >
	<description>
	The time that indicates the point of the last backup.
	</description>
	</AttributeType>

	<AttributeType name="second" dt:type="number" >
	<description>
	The time that indicates the point of the last backup.
	</description>
	</AttributeType>

	<attribute type ="path" required="yes" />
	<attribute type="filespec" required="yes" />
	<attribute type="recursive" required="yes" />

	<attribute type="year" default="0"/>
	<attribute type="month" default="0" />
	<attribute type="day" default="0" />
	<attribute type="hour" default="0" />
	<attribute type="minute" default="0" />
	<attribute type="second" default="0" />
</ElementType>

<ElementType name="PartialFile" content="empty" model="closed">
	<description>
	Partial file specification that the writer will add during PostSnapshot
	</description>

   <AttributeType name="ranges" dt:type="string">
       <description>
       This range list has the form (offset:length ...) where offset is
       the byte offset in the file to be backed up and length is the length
       of the data to be backed up.  Both are 32 bit integers (for this version 
       of the writer).  The ranges must be monotonically increasing and must 
       not overlap.  If the rangelist is not specified then the entire file should be 
       backed up.
       </description>
   </AttributeType>

	<attribute type="path" required="yes" />
	<attribute type="filespec" required="yes" />

	<attribute type="ranges" required="no" />
</ElementType>

<ElementType name="Component" content="eltOnly" model="closed">
	<description>
	Description of a Writer component.  Currently this can describe either a file-group 
	component or a database component.
	</description>

	<AttributeType name="componentType" dt:type="enumeration"
		dt:values="database filegroup">
		<description>
		specified the type of a Writer component
		</description>
	</AttributeType>

	<AttributeType name="selectable" dt:type="enumeration"
		dt:values="yes no">
		<description>
		Is this component selectable for backup or is it always backed up.
		If no, then the component is always backed up if any other components of
		the application/service are backed up.  If yes, then the
		component may be selectively backed up.
		</description>
	</AttributeType>

	<AttributeType name="selectableForRestore" dt:type="enumeration"
		dt:values="yes no" >
		<description>
		Is this component selectable for restore
		</description>
	</AttributeType>

	<AttributeType name="restoreTarget" dt:type="enumeration"
		dt:values="VSS_RT_ORIGINAL_LOCATION
				   VSS_RT_ALTERNATE">
		<description>
		Allows the writer to override the restore method for this component in the PreRestore event.
		VSS_RT_ORIGINAL_LOCATION:   all files in this component should be restored to their original locations.
		VSS_RT_ALTERNATE: all files in this component should be restored to the previously specified alternate location
		</description>
	</AttributeType>

	<AttributeType name="autoRecover" dt:type="enumeration"
		dt:values="backup appRollback never">
		<description>
		When auto recovery is required
		</description>
	</AttributeType>


	<attribute type="instanceName" required="no" />
	<attribute type="componentType" required="yes" />
	<attribute type="logicalPath" required="no" />
	<attribute type="componentName" required="yes" />
	<attribute type="selectable" default="yes" />
	<attribute type="selectableForRestore" default="no" />
	<attribute type="restoreTarget" required="no" />
	<attribute type="autoRecover" default="never"/>
	
	<group order="many">
		<element type="ComponentFile" minOccurs="0" maxOccurs="*" />
		<element type="DifferencedFile" minOccurs="0" maxOccurs="*" />
		<element type="PartialFile" minOccurs="0" maxOccurs="*" />
		<element type="Dependency" minOccurs="0" maxOccurs="*" />
	</group>
</ElementType>

<ElementType name="FailEvent" content="empty" model="closed">
	<description>
	Specifies an event that the Test Writer will fail.
	</description>

	<AttributeType name="writerEvent" dt:type="enumeration"
		dt:values="Identify
				   PrepareForBackup
				   PrepareForSnapshot
				   Freeze
				   Thaw
				   PostSnapshot
				   Abort
				   BackupComplete
				   BackupShutdown
				   PreRestore
				   PostRestore">
		<description>
		Defines the list of events that a Writer can fail.
		</description>
	</AttributeType>		

	<AttributeType name="retryable" dt:type="enumeration"
		dt:values="yes no">
		<description>
		Whether the failure should be retryable or not
		</description>
	</AttributeType>

	<AttributeType name="numFailures" dt:type="number">
	<description>
	If the failure is retryable, then this parameter indicates the number of times the writer should
	fail the event.
	</description>
	</AttributeType>
	
	<attribute type="writerEvent" required="yes" />
	<attribute type="retryable" default="yes" />
	<attribute type="numFailures" default="1" />
</ElementType>

<ElementType name="AlternateLocationMapping" content="empty" model="closed">
	<description>
	Mapping from a location that was backed up to a location to restore to.
	</description>
	
	<attribute type="path" required="yes" />
	<attribute type="filespec" required="yes" />
	<attribute type="recursive" default="no" />
	<attribute type="alternatePath" required="yes" />
</ElementType>

</Schema>
=== C:/Users/treeman/Desktop/windows nt source code\xbox\Xbox Live Source\XONLINE_MAIN\public\ext\sdk\vs10rtm\SDK\bin\x64\isvtier5appsignsdk_client.xml ===
< ? x m l   v e r s i o n = " 1 . 0 "   e n c o d i n g = " u t f - 1 6 " ? > 
 
 < C E R T I F I C A T E C H A I N > 
 
     < C E R T I F I C A T E > P A A / A H g A b Q B s A C A A d g B l A H I A c w B p A G 8 A b g A 9 A C I A M Q A u A D A A I g A / A D 4 A P A B Y A H I A T Q B M A C A A e A B t A G w A b g B z A D 0 A I g A i A C A A d g B l A H I A c w B p A G 8 A b g A 9 A C I A M Q A u A D I A I g A + A D w A Q g B P A E Q A W Q A g A H Q A e Q B w A G U A P Q A i A E w A S Q B D A E U A T g B T A E U A I g A g A H Y A Z Q B y A H M A a Q B v A G 4 A P Q A i A D M A L g A w A C I A P g A 8 A E k A U w B T A F U A R Q B E A F Q A S Q B N A E U A P g A y A D A A M A A 2 A C 0 A M A A 2 A C 0 A M g A y A F Q A M Q A 5 A D o A N Q A 0 A D w A L w B J A F M A U w B V A E U A R A B U A E k A T Q B F A D 4 A P A B W A E E A T A B J A E Q A S Q B U A F k A V A B J A E 0 A R Q A + A D w A R g B S A E 8 A T Q A + A D I A M A A w A D M A L Q A w A D I A L Q A w A D U A V A A w A D A A O g A w A D A A P A A v A E Y A U g B P A E 0 A P g A 8 A F U A T g B U A E k A T A A + A D I A M A A x A D Y A L Q A w A D Y A L Q A x A D k A V A A x A D k A O g A 1 A D Q A P A A v A F U A T g B U A E k A T A A + A D w A L w B W A E E A T A B J A E Q A S Q B U A F k A V A B J A E 0 A R Q A + A D w A R A B F A F M A Q w B S A E k A U A B U A E 8 A U g A + A D w A T w B C A E o A R Q B D A F Q A I A B 0 A H k A c A B l A D 0 A I g B B A H A A c A B s A G k A Y w B h A H Q A a Q B v A G 4 A L Q B T A G k A Z w B u A G k A b g B n A C 0 A Q w B l A H I A d A B p A G Y A a Q B j A G E A d A B l A C I A P g A 8 A E k A R A A g A H Q A e Q B w A G U A P Q A i A E 0 A U w A t A E c A V Q B J A E Q A I g A + A H s A N g B k A D U A Y Q B l A D Q A O Q B l A C 0 A Z g A 4 A D A A M A A t A D Q A Y Q A 4 A G Q A L Q B i A D U A M w B j A C 0 A M g B l A D U A Y g A 5 A D c A Z A A 2 A G Y A N w A w A G Q A f Q A 8 A C 8 A S Q B E A D 4 A P A A v A E 8 A Q g B K A E U A Q w B U A D 4 A P A A v A E Q A R Q B T A E M A U g B J A F A A V A B P A F I A P g A 8 A E k A U w B T A F U A R Q B S A D 4 A P A B P A E I A S g B F A E M A V A A g A H Q A e Q B w A G U A P Q A i A E Q A U g B N A C 0 A Q w B l A H I A d A B p A G Y A a Q B j A G E A d A B l A C 0 A Q Q B 1 A H Q A a A B v A H I A a Q B 0 A H k A I g A + A D w A S Q B E A C A A d A B 5 A H A A Z Q A 9 A C I A T Q B T A C 0 A R w B V A E k A R A A i A D 4 A e w B j A G Q A M A A z A D U A Z Q B j A G Q A L Q B l A D k A N Q A z A C 0 A N A B k A G I A O A A t A D g A M Q B h A D c A L Q B i A D I A M g B j A D g A Y Q B j A D Q A Z g B i A D E A N Q B 9 A D w A L w B J A E Q A P g A 8 A E 4 A Q Q B N A E U A P g B N A G k A Y w B y A G 8 A c w B v A G Y A d A A g A E Q A U g B N A C A A S Q B T A F Y A I A B N A G E A b g B p A G Y A Z Q B z A H Q A I A B T A G k A Z w B u A G k A b g B n A C A A S w B l A H k A I A B D A E E A P A A v A E 4 A Q Q B N A E U A P g A 8 A C 8 A T w B C A E o A R Q B D A F Q A P g A 8 A F A A V Q B C A E w A S Q B D A E s A R Q B Z A D 4 A P A B B A E w A R w B P A F I A S Q B U A E g A T Q A + A F I A U w B B A D w A L w B B A E w A R w B P A F I A S Q B U A E g A T Q A + A D w A U A B B A F I A Q Q B N A E U A V A B F A F I A I A B u A G E A b Q B l A D 0 A I g B w A H U A Y g B s A G k A Y w A t A G U A e A B w A G 8 A b g B l A G 4 A d A A i A D 4 A P A B W A E E A T A B V A E U A I A B l A G 4 A Y w B v A G Q A a Q B u A G c A P Q A i A G k A b g B 0 A G U A Z w B l A H I A M w A y A C I A P g A 2 A D U A N Q A z A D c A P A A v A F Y A Q Q B M A F U A R Q A + A D w A L w B Q A E E A U g B B A E 0 A R Q B U A E U A U g A + A D w A U A B B A F I A Q Q B N A E U A V A B F A F I A I A B u A G E A b Q B l A D 0 A I g B t A G 8 A Z A B 1 A G w A d Q B z A C I A P g A 8 A F Y A Q Q B M A F U A R Q A g A G U A b g B j A G 8 A Z A B p A G 4 A Z w A 9 A C I A Y g B h A H M A Z Q A 2 A D Q A I g A g A H M A a Q B 6 A G U A P Q A i A D E A M A A y A D Q A I g A + A G I A V g B 5 A F Y A c A B i A G w A b g A 1 A E 4 A a Q B z A G o A S g A 3 A F A A V w B F A H c A R A B v A D E A a g B R A F g A a w B I A H o A L w A z A E Y A M w B k A F k A a A B Q A F I A M A B 5 A F E A W g B v A F A A V g B S A F U A U A B Q A E M A N Q A x A F c A U w A 2 A E c A d Q A 2 A H I A W A B F A H Q A R A A y A G 8 A S A B r A E U A N g A 1 A F g A M g A w A G E A Y g B D A G Q A O Q B s A G w A U w A z A E g A Q w A x A E Q A Z A B E A E Y A Z g B U A E U A T Q B j A C 8 A e Q B p A E 8 A b A B G A G s A d A B G A E U A U A B N A G s A a Q B 2 A G c A W Q B O A E E A Z w B j A H I A R g B E A G Y A Q Q B P A H c A a Q B J A E U A W g B U A G Q A a A B 2 A D Y A R Q A x A F k A V g B x A F E A W Q B 1 A E I A V A A y A F Q A Y g A y A G c A V Q B 2 A G 0 A S w B r A G I A Y Q A w A F g A O Q B 1 A E 4 A U A B V A G 0 A T w B a A F E A Y g B 2 A H k A a w B B A G g A Y Q B 3 A D 0 A P A A v A F Y A Q Q B M A F U A R Q A + A D w A L w B Q A E E A U g B B A E 0 A R Q B U A E U A U g A + A D w A L w B Q A F U A Q g B M A E k A Q w B L A E U A W Q A + A D w A L w B J A F M A U w B V A E U A U g A + A D w A S Q B T A F M A V Q B F A E Q A U A B S A E k A T g B D A E k A U A B B A E w A U w A + A D w A U A B S A E k A T g B D A E k A U A B B A E w A I A B p A G 4 A d A B l A H I A b g B h A G w A L Q B p A G Q A P Q A i A D E A I g A + A D w A T w B C A E o A R Q B D A F Q A I A B 0 A H k A c A B l A D 0 A I g B N A G E A b g B p A G Y A Z Q B z A H Q A L Q B T A G k A Z w B u A G k A b g B n A C 0 A S w B l A H k A I g A + A D w A S Q B E A C A A d A B 5 A H A A Z Q A 9 A C I A T Q B T A C 0 A R w B V A E k A R A A i A D 4 A e w A 4 A D k A Z A B j A D U A N w A w A D U A L Q A x A G I A N w A 5 A C 0 A N A B h A D Y A Y g A t A D g A N w B m A D c A L Q A w A D g A O A A 0 A D k A Y Q A 3 A D A A O A A 5 A D U A O A B 9 A D w A L w B J A E Q A P g A 8 A E 4 A Q Q B N A E U A P g B N A G k A Y w B y A G 8 A c w B v A G Y A d A A g A F I A T Q B T A C A A U w B E A E s A I A B U A G k A Z Q B y A D U A I A B B A H A A c A A g A F M A a Q B n A G 4 A I A B D A G U A c g B 0 A D w A L w B O A E E A T Q B F A D 4 A P A A v A E 8 A Q g B K A E U A Q w B U A D 4 A P A B Q A F U A Q g B M A E k A Q w B L A E U A W Q A + A D w A Q Q B M A E c A T w B S A E k A V A B I A E 0 A P g B S A F M A Q Q A 8 A C 8 A Q Q B M A E c A T w B S A E k A V A B I A E 0 A P g A 8 A F A A Q Q B S A E E A T Q B F A F Q A R Q B S A C A A b g B h A G 0 A Z Q A 9 A C I A c A B 1 A G I A b A B p A G M A L Q B l A H g A c A B v A G 4 A Z Q B u A H Q A I g A + A D w A V g B B A E w A V Q B F A C A A Z Q B u A G M A b w B k A G k A b g B n A D 0 A I g B p A G 4 A d A B l A G c A Z Q B y A D M A M g A i A D 4 A N g A 1 A D U A M w A 3 A D w A L w B W A E E A T A B V A E U A P g A 8 A C 8 A U A B B A F I A Q Q B N A E U A V A B F A F I A P g A 8 A F A A Q Q B S A E E A T Q B F A F Q A R Q B S A C A A b g B h A G 0 A Z Q A 9 A C I A b Q B v A G Q A d Q B s A H U A c w A i A D 4 A P A B W A E E A T A B V A E U A I A B l A G 4 A Y w B v A G Q A a Q B u A G c A P Q A i A G I A Y Q B z A G U A N g A 0 A C I A I A B z A G k A e g B l A D 0 A I g A x A D A A M g A 0 A C I A P g B H A G U A R Q B j A C s A R g B k A E k A d A B i A D I A W A B 6 A G 0 A Z w B S A H o A Q Q B a A E c A a A B Z A H g A V w B n A H g A Z g A r A E c A V g B 3 A E c A a Q B Z A E U A N Q B i A F k A c w B S A F c A d w B Z A D Y A T Q B o A G M A S Q B B A G M A N A B G A H o A T Q B 5 A H E A T g A 3 A H U A W g B I A G U A U A B s A E E A W A B y A G Q A U A B V A G c A N Q B U A F E A Z Q B t A E g A d g B K A H c A V A B 1 A G o A N Q B O A F U A V A B n A E w A V Q B p A H E A R A B u A D E A R g B 3 A H c A V Q B m A G o A R w B P A F E A Q g A 1 A E U A e g B O A E o A Y w A z A E w A Y w A v A F A A R w B s A E Y A L w B V A E w A a Q B Y A E w A d w B 4 A G E A d w B F A H Y A N Q B x A H o A L w A x A E 4 A d Q B 1 A E 0 A R A B o A H E A d A B K A F U A Z w B N A H Q A S Q B m A H E A Q w B u A G Y A T A B m A H Q A M A B i A G 8 A d Q B w A F U A K w B v A D c A U g B a A D c A M A A 9 A D w A L w B W A E E A T A B V A E U A P g A 8 A C 8 A U A B B A F I A Q Q B N A E U A V A B F A F I A P g A 8 A C 8 A U A B V A E I A T A B J A E M A S w B F A F k A P g A 8 A C 8 A U A B S A E k A T g B D A E k A U A B B A E w A P g A 8 A C 8 A S Q B T A F M A V Q B F A E Q A U A B S A E k A T g B D A E k A U A B B A E w A U w A + A D w A V w B P A F I A S w A + A D w A T w B C A E o A R Q B D A F Q A I A B 0 A H k A c A B l A D 0 A I g B B A H A A c A B s A G k A Y w B h A H Q A a Q B v A G 4 A L Q B T A G k A Z w B u A G k A b g B n A C 0 A Q w B l A H I A d A B p A G Y A a Q B j A G E A d A B l A C I A P g A 8 A E k A R A A g A H Q A e Q B w A G U A P Q A i A E 0 A U w A t A E c A V Q B J A E Q A I g A + A H s A N g B k A D U A Y Q B l A D Q A O Q B l A C 0 A Z g A 4 A D A A M A A t A D Q A Y Q A 4 A G Q A L Q B i A D U A M w B j A C 0 A M g B l A D U A Y g A 5 A D c A Z A A 2 A G Y A N w A w A G Q A f Q A 8 A C 8 A S Q B E A D 4 A P A A v A E 8 A Q g B K A E U A Q w B U A D 4 A P A B S A E k A R w B I A F Q A U w B H A F I A T w B V A F A A I A B u A G E A b Q B l A D 0 A I g B N A G E A a Q B u A C 0 A U g B p A G c A a A B 0 A H M A I g A + A D w A U g B J A E c A S A B U A F M A T A B J A F M A V A A + A D w A U g B J A E c A S A B U A C A A b g B h A G 0 A Z Q A 9 A C I A S Q B T A F M A V Q B F A C I A P g A 8 A E M A T w B O A E Q A S Q B U A E k A T w B O A E w A S Q B T A F Q A P g A 8 A F Q A S Q B N A E U A P g A 8 A F I A Q Q B O A E c A R Q B U A E k A T Q B F A D 4 A P A B G A F I A T w B N A D 4 A M g A w A D A A M w A t A D A A M g A t A D A A N Q B U A D A A M A A 6 A D A A M A A 8 A C 8 A R g B S A E 8 A T Q A + A D w A V Q B O A F Q A S Q B M A D 4 A M g A w A D E A M w A t A D A A N g A t A D I A M A B U A D E A O Q A 6 A D U A N A A 8 A C 8 A V Q B O A F Q A S Q B M A D 4 A P A A v A F I A Q Q B O A E c A R Q B U A E k A T Q B F A D 4 A P A A v A F Q A S Q B N A E U A P g A 8 A E E A Q w B D A E U A U w B T A D 4 A P A B Q A F I A S Q B O A E M A S Q B Q A E E A T A A g A G k A b g B 0 A G U A c g B u A G E A b A A t A G k A Z A A 9 A C I A M Q A i A C A A L w A + A D w A L w B B A E M A Q w B F A F M A U w A + A D w A L w B D A E 8 A T g B E A E k A V A B J A E 8 A T g B M A E k A U w B U A D 4 A P A A v A F I A S Q B H A E g A V A A + A D w A L w B S A E k A R w B I A F Q A U w B M A E k A U w B U A D 4 A P A A v A F I A S Q B H A E g A V A B T A E c A U g B P A F U A U A A + A D w A L w B X A E 8 A U g B L A D 4 A P A A v A E I A T w B E A F k A P g A 8 A F M A S Q B H A E 4 A Q Q B U A F U A U g B F A D 4 A P A B E A E k A R w B F A F M A V A A + A D w A Q Q B M A E c A T w B S A E k A V A B I A E 0 A P g B T A E g A Q Q A x A D w A L w B B A E w A R w B P A F I A S Q B U A E g A T Q A + A D w A U A B B A F I A Q Q B N A E U A V A B F A F I A I A B u A G E A b Q B l A D 0 A I g B j A G 8 A Z A B p A G 4 A Z w B 0 A H k A c A B l A C I A P g A 8 A F Y A Q Q B M A F U A R Q A g A G U A b g B j A G 8 A Z A B p A G 4 A Z w A 9 A C I A c w B 0 A H I A a Q B u A G c A I g A + A H M A d Q B y A G Y A Y Q B j A G U A L Q B j A G 8 A Z A B p A G 4 A Z w A 8 A C 8 A V g B B A E w A V Q B F A D 4 A P A A v A F A A Q Q B S A E E A T Q B F A F Q A R Q B S A D 4 A P A B W A E E A T A B V A E U A I A B l A G 4 A Y w B v A G Q A a Q B u A G c A P Q A i A G I A Y Q B z A G U A N g A 0 A C I A I A B z A G k A e g B l A D 0 A I g A x A D Y A M A A i A D 4 A S Q B Y A D I A U A B H A C s A R g A 3 A D Q A a g B I A E k A M w B X A G k A V g B s A G M A e Q B P A F k A R w B O A G o A U g B M A E k A P Q A 8 A C 8 A V g B B A E w A V Q B F A D 4 A P A A v A E Q A S Q B H A E U A U w B U A D 4 A P A B B A E w A R w B P A F I A S Q B U A E g A T Q A + A F I A U w B B A C A A U A B L A E M A U w A j A D E A L Q B W A D E A L g A 1 A D w A L w B B A E w A R w B P A F I A S Q B U A E g A T Q A + A D w A V g B B A E w A V Q B F A C A A Z Q B u A G M A b w B k A G k A b g B n A D 0 A I g B i A G E A c w B l A D Y A N A A i A C A A c w B p A H o A Z Q A 9 A C I A M Q A w A D I A N A A i A D 4 A Z g B Y A H E A Q w A 4 A H E A Y g B 2 A F c A V g A r A H M A e Q A y A F U A d Q A 0 A G 0 A b g B W A D k A M g B C A G g A O Q B s A D Y A b A B U A H I A c A B y A H c A c A B h A G k A a A B w A E I A V w B H A G Q A U Q B Q A D c A Y w A v A F g A M Q B N A F E A e g B T A H A A Q w A 0 A H U A S g B 5 A F c A a Q B 4 A G M A O A B k A H o A N Q B 6 A E 0 A R w B B A E s A S w B m A C s A d g B 5 A D A A V A B V A E 8 A L w B k A F Q A S g B Q A E Y A W g B o A E k A N w B m A D I A a g B p A H E A c Q B Y A G E A N Q B 4 A F I A V A B U A D M A Q Q B L A G s A c A B q A F M A L w B E A C 8 A W Q B W A H c A b w B w A H A A Y w B W A D M A N Q B L A G M A M Q B V A D A A d g B n A H E A a g B P A G w A N w B N A H k A b Q B v A F Y A R w B j A G 0 A U w B j A H c A R g B B A H c A b g B Q A H U A R g B s A G o A N A B K A E U A e g B R A E 0 A c A B E A D c A Z w B H A F g A U Q B z A G 8 A P Q A 8 A C 8 A V g B B A E w A V Q B F A D 4 A P A A v A F M A S Q B H A E 4 A Q Q B U A F U A U g B F A D 4 A P A A v A F g A c g B N A E w A P g A = < / C E R T I F I C A T E > 
 
     < C E R T I F I C A T E > P A A / A H g A b Q B s A C A A d g B l A H I A c w B p A G 8 A b g A 9 A C I A M Q A u A D A A I g A / A D 4 A P A B Y A H I A T Q B M A C A A e A B t A G w A b g B z A D 0 A I g A i A C A A d g B l A H I A c w B p A G 8 A b g A 9 A C I A M Q A u A D I A I g A + A D w A Q g B P A E Q A W Q A g A H Q A e Q B w A G U A P Q A i A E w A S Q B D A E U A T g B T A E U A I g A g A H Y A Z Q B y A H M A a Q B v A G 4 A P Q A i A D M A L g A w A C I A P g A 8 A E k A U w B T A F U A R Q B E A F Q A S Q B N A E U A P g A y A D A A M A A 1 A C 0 A M A A z A C 0 A M A A z A F Q A M g A y A D o A N Q A 1 A D w A L w B J A F M A U w B V A E U A R A B U A E k A T Q B F A D 4 A P A B W A E E A T A B J A E Q A S Q B U A F k A V A B J A E 0 A R Q A + A D w A R g B S A E 8 A T Q A + A D I A M A A w A D I A L Q A x A D E A L Q A y A D I A V A A y A D I A O g A 1 A D A A P A A v A E Y A U g B P A E 0 A P g A 8 A F U A T g B U A E k A T A A + A D I A M A A x A D U A L Q A w A D Y A L Q A w A D E A V A A y A D I A O g A 1 A D U A P A A v A F U A T g B U A E k A T A A + A D w A L w B W A E E A T A B J A E Q A S Q B U A F k A V A B J A E 0 A R Q A + A D w A R A B F A F M A Q w B S A E k A U A B U A E 8 A U g A + A D w A T w B C A E o A R Q B D A F Q A I A B 0 A H k A c A B l A D 0 A I g B B A H A A c A B s A G k A Y w B h A H Q A a Q B v A G 4 A L Q B T A G k A Z w B u A G k A b g B n A C 0 A Q w B l A H I A d A B p A G Y A a Q B j A G E A d A B l A C I A P g A 8 A E k A R A A g A H Q A e Q B w A G U A P Q A i A E 0 A U w A t A E c A V Q B J A E Q A I g A + A H s A M w A 2 A G Y A Z A A 4 A D c A M Q A 1 A C 0 A Z Q B j A D Y A Y Q A t A D Q A O Q A 1 A G Y A L Q A 5 A D E A Y Q B i A C 0 A M w A 0 A D Y A Z Q A 5 A G E A O A B i A G E A Y w A 5 A G U A f Q A 8 A C 8 A S Q B E A D 4 A P A A v A E 8 A Q g B K A E U A Q w B U A D 4 A P A A v A E Q A R Q B T A E M A U g B J A F A A V A B P A F I A P g A 8 A E k A U w B T A F U A R Q B S A D 4 A P A B P A E I A S g B F A E M A V A A g A H Q A e Q B w A G U A P Q A i A E Q A U g B N A C 0 A Q w B l A H I A d A B p A G Y A a Q B j A G E A d A B l A C 0 A Q Q B 1 A H Q A a A B v A H I A a Q B 0 A H k A I g A + A D w A S Q B E A C A A d A B 5 A H A A Z Q A 9 A C I A Y Q B z A G M A a Q B p A C 0 A d A B h A G c A I g A + A E 0 A a Q B j A H I A b w B z A G 8 A Z g B 0 A C A A R A B S A E 0 A I A B J A F M A V g A g A E E A c A B w A G w A a Q B j A G E A d A B p A G 8 A b g A g A F M A a Q B n A G 4 A a Q B u A G c A I A B T A G U A c g B 2 A G U A c g A g A E M A Q Q A 8 A C 8 A S Q B E A D 4 A P A B O A E E A T Q B F A D 4 A T Q B p A G M A c g B v A H M A b w B m A H Q A I A B E A F I A T Q A g A E k A U w B W A C A A Q Q B w A H A A b A B p A G M A Y Q B 0 A G k A b w B u A C A A U w B p A G c A b g B p A G 4 A Z w A g A F M A Z Q B y A H Y A Z Q B y A C A A Q w B B A D w A L w B O A E E A T Q B F A D 4 A P A A v A E 8 A Q g B K A E U A Q w B U A D 4 A P A B Q A F U A Q g B M A E k A Q w B L A E U A W Q A + A D w A Q Q B M A E c A T w B S A E k A V A B I A E 0 A P g B S A F M A Q Q A 8 A C 8 A Q Q B M A E c A T w B S A E k A V A B I A E 0 A P g A 8 A F A A Q Q B S A E E A T Q B F A F Q A R Q B S A C A A b g B h A G 0 A Z Q A 9 A C I A c A B 1 A G I A b A B p A G M A L Q B l A H g A c A B v A G 4 A Z Q B u A H Q A I g A + A D w A V g B B A E w A V Q B F A C A A Z Q B u A G M A b w B k A G k A b g B n A D 0 A I g B p A G 4 A d A B l A G c A Z Q B y A D M A M g A i A D 4 A N g A 1 A D U A M w A 3 A D w A L w B W A E E A T A B V A E U A P g A 8 A C 8 A U A B B A F I A Q Q B N A E U A V A B F A F I A P g A 8 A F A A Q Q B S A E E A T Q B F A F Q A R Q B S A C A A b g B h A G 0 A Z Q A 9 A C I A b Q B v A G Q A d Q B s A H U A c w A i A D 4 A P A B W A E E A T A B V A E U A I A B l A G 4 A Y w B v A G Q A a Q B u A G c A P Q A i A G I A Y Q B z A G U A N g A 0 A C I A I A B z A G k A e g B l A D 0 A I g A x A D A A M g A 0 A C I A P g B O A G M A K w B Z A F I A b A B G A H A A M w B w A E U A U w B K A E M A R Q A x A C s A R Q B m A E k A b A A 5 A F o A b g B y A E g A V Q B v A F k A T A A r A D Y A V g B w A E k A R Q B X A E U A S Q B m A H Y A W Q B n A E 4 A c Q B R A E M A U w B Y A G I A V A B J A D A A O A B a A H g A V A B m A D Y A T g B r A F g A b g B L A G 0 A M w A 0 A G s A N w B C A H Q A W Q A 3 A G Q A R Q B R A E w A W g B h A H E A d g B M A D k A M w B H A G Q A T g A 3 A G o A b Q B t A H k A Z g B l A E 0 A Q w B o A G 8 A K w B O A E c A Z A B I A H Q A M Q B 1 A H g A W A B E A G 8 A S g B r A G w A R g B X A F M A e Q A w A G 4 A b A B 6 A F A A M g B v A G 4 A Y g B p A E c A b w B 2 A D Y A c A B m A D c A N A B p A G 8 A Z Q B y A F Q A U g B j A E E A K w B u A G 4 A M w B G A H g A d A B Z A H c A a w A y A C 8 A T w A r A D A A O Q B D A E o A S g A w A D A A V Q B q A G U A c g A 5 A F k A M A A 9 A D w A L w B W A E E A T A B V A E U A P g A 8 A C 8 A U A B B A F I A Q Q B N A E U A V A B F A F I A P g A 8 A C 8 A U A B V A E I A T A B J A E M A S w B F A F k A P g A 8 A C 8 A S Q B T A F M A V Q B F A F I A P g A 8 A E k A U w B T A F U A R Q B E A F A A U g B J A E 4 A Q w B J A F A A Q Q B M A F M A P g A 8 A F A A U g B J A E 4 A Q w B J A F A A Q Q B M A C A A a Q B u A H Q A Z Q B y A G 4 A Y Q B s A C 0 A a Q B k A D 0 A I g A x A C I A P g A 8 A E 8 A Q g B K A E U A Q w B U A C A A d A B 5 A H A A Z Q A 9 A C I A R A B S A E 0 A L Q B D A G U A c g B 0 A G k A Z g B p A G M A Y Q B 0 A G U A L Q B B A H U A d A B o A G 8 A c g B p A H Q A e Q A i A D 4 A P A B J A E Q A I A B 0 A H k A c A B l A D 0 A I g B N A F M A L Q B H A F U A S Q B E A C I A P g B 7 A G M A Z A A w A D M A N Q B l A G M A Z A A t A G U A O Q A 1 A D M A L Q A 0 A G Q A Y g A 4 A C 0 A O A A x A G E A N w A t A G I A M g A y A G M A O A B h A G M A N A B m A G I A M Q A 1 A H 0 A P A A v A E k A R A A + A D w A T g B B A E 0 A R Q A + A E 0 A a Q B j A H I A b w B z A G 8 A Z g B 0 A C A A R A B S A E 0 A I A B J A F M A V g A g A E 0 A Y Q B u A G k A Z g B l A H M A d A A g A F M A a Q B n A G 4 A a Q B u A G c A I A B L A G U A e Q A g A E M A Q Q A 8 A C 8 A T g B B A E 0 A R Q A + A D w A L w B P A E I A S g B F A E M A V A A + A D w A U A B V A E I A T A B J A E M A S w B F A F k A P g A 8 A E E A T A B H A E 8 A U g B J A F Q A S A B N A D 4 A U g B T A E E A P A A v A E E A T A B H A E 8 A U g B J A F Q A S A B N A D 4 A P A B Q A E E A U g B B A E 0 A R Q B U A E U A U g A g A G 4 A Y Q B t A G U A P Q A i A H A A d Q B i A G w A a Q B j A C 0 A Z Q B 4 A H A A b w B u A G U A b g B 0 A C I A P g A 8 A F Y A Q Q B M A F U A R Q A g A G U A b g B j A G 8 A Z A B p A G 4 A Z w A 9 A C I A a Q B u A H Q A Z Q B n A G U A c g A z A D I A I g A + A D Y A N Q A 1 A D M A N w A 8 A C 8 A V g B B A E w A V Q B F A D 4 A P A A v A F A A Q Q B S A E E A T Q B F A F Q A R Q B S A D 4 A P A B Q A E E A U g B B A E 0 A R Q B U A E U A U g A g A G 4 A Y Q B t A G U A P Q A i A G 0 A b w B k A H U A b A B 1 A H M A I g A + A D w A V g B B A E w A V Q B F A C A A Z Q B u A G M A b w B k A G k A b g B n A D 0 A I g B i A G E A c w B l A D Y A N A A i A C A A c w B p A H o A Z Q A 9 A C I A M Q A w A D I A N A A i A D 4 A Y g B W A H k A V g B w A G I A b A B u A D U A T g B p A H M A a g B K A D c A U A B X A E U A d w B E A G 8 A M Q B q A F E A W A B r A E g A e g A v A D M A R g A z A G Q A W Q B o A F A A U g A w A H k A U Q B a A G 8 A U A B W A F I A V Q B Q A F A A Q w A 1 A D E A V w B T A D Y A R w B 1 A D Y A c g B Y A E U A d A B E A D I A b w B I A G s A R Q A 2 A D U A W A A y A D A A Y Q B i A E M A Z A A 5 A G w A b A B T A D M A S A B D A D E A R A B k A E Q A R g B m A F Q A R Q B N A G M A L w B 5 A G k A T w B s A E Y A a w B 0 A E Y A R Q B Q A E 0 A a w B p A H Y A Z w B Z A E 4 A Q Q B n A G M A c g B G A E Q A Z g B B A E 8 A d w B p A E k A R Q B a A F Q A Z A B o A H Y A N g B F A D E A W Q B W A H E A U Q B Z A H U A Q g B U A D I A V A B i A D I A Z w B V A H Y A b Q B L A G s A Y g B h A D A A W A A 5 A H U A T g B Q A F U A b Q B P A F o A U Q B i A H Y A e Q B r A E E A a A B h A H c A P Q A 8 A C 8 A V g B B A E w A V Q B F A D 4 A P A A v A F A A Q Q B S A E E A T Q B F A F Q A R Q B S A D 4 A P A A v A F A A V Q B C A E w A S Q B D A E s A R Q B Z A D 4 A P A A v A F A A U g B J A E 4 A Q w B J A F A A Q Q B M A D 4 A P A A v A E k A U w B T A F U A R Q B E A F A A U g B J A E 4 A Q w B J A F A A Q Q B M A F M A P g A 8 A F c A T w B S A E s A P g A 8 A E 8 A Q g B K A E U A Q w B U A C A A d A B 5 A H A A Z Q A 9 A C I A Q Q B w A H A A b A B p A G M A Y Q B 0 A G k A b w B u A C 0 A U w B p A G c A b g B p A G 4 A Z w A t A E M A Z Q B y A H Q A a Q B m A G k A Y w B h A H Q A Z Q A i A D 4 A P A B J A E Q A I A B 0 A H k A c A B l A D 0 A I g B N A F M A L Q B H A F U A S Q B E A C I A P g B 7 A D M A N g B m A G Q A O A A 3 A D E A N Q A t A G U A Y w A 2 A G E A L Q A 0 A D k A N Q B m A C 0 A O Q A x A G E A Y g A t A D M A N A A 2 A G U A O Q B h A D g A Y g B h A G M A O Q B l A H 0 A P A A v A E k A R A A + A D w A L w B P A E I A S g B F A E M A V A A + A D w A U g B J A E c A S A B U A F M A R w B S A E 8 A V Q B Q A C A A b g B h A G 0 A Z Q A 9 A C I A T Q B h A G k A b g A t A F I A a Q B n A G g A d A B z A C I A P g A 8 A F I A S Q B H A E g A V A B T A E w A S Q B T A F Q A P g A 8 A F I A S Q B H A E g A V A A g A G 4 A Y Q B t A G U A P Q A i A E k A U w B T A F U A R Q A i A D 4 A P A B D A E 8 A T g B E A E k A V A B J A E 8 A T g B M A E k A U w B U A D 4 A P A B U A E k A T Q B F A D 4 A P A B S A E E A T g B H A E U A V A B J A E 0 A R Q A + A D w A R g B S A E 8 A T Q A + A D I A M A A w A D I A L Q A x A D E A L Q A y A D I A V A A y A D I A O g A 1 A D A A P A A v A E Y A U g B P A E 0 A P g A 8 A F U A T g B U A E k A T A A + A D I A M A A x A D M A L Q A w A D Y A L Q A w A D E A V A A y A D I A O g A 1 A D U A P A A v A F U A T g B U A E k A T A A + A D w A L w B S A E E A T g B H A E U A V A B J A E 0 A R Q A + A D w A L w B U A E k A T Q B F A D 4 A P A B B A E M A Q w B F A F M A U w A + A D w A U A B S A E k A T g B D A E k A U A B B A E w A I A B p A G 4 A d A B l A H I A b g B h A G w A L Q B p A G Q A P Q A i A D E A I g A g A C 8 A P g A 8 A C 8 A Q Q B D A E M A R Q B T A F M A P g A 8 A C 8 A Q w B P A E 4 A R A B J A F Q A S Q B P A E 4 A T A B J A F M A V A A + A D w A L w B S A E k A R w B I A F Q A P g A 8 A C 8 A U g B J A E c A S A B U A F M A T A B J A F M A V A A + A D w A L w B S A E k A R w B I A F Q A U w B H A F I A T w B V A F A A P g A 8 A C 8 A V w B P A F I A S w A + A D w A L w B C A E 8 A R A B Z A D 4 A P A B T A E k A R w B O A E E A V A B V A F I A R Q A + A D w A R A B J A E c A R Q B T A F Q A P g A 8 A E E A T A B H A E 8 A U g B J A F Q A S A B N A D 4 A U w B I A E E A M Q A 8 A C 8 A Q Q B M A E c A T w B S A E k A V A B I A E 0 A P g A 8 A F A A Q Q B S A E E A T Q B F A F Q A R Q B S A C A A b g B h A G 0 A Z Q A 9 A C I A Y w B v A G Q A a Q B u A G c A d A B 5 A H A A Z Q A i A D 4 A P A B W A E E A T A B V A E U A I A B l A G 4 A Y w B v A G Q A a Q B u A G c A P Q A i A H M A d A B y A G k A b g B n A C I A P g B z A H U A c g B m A G E A Y w B l A C 0 A Y w B v A G Q A a Q B u A G c A P A A v A F Y A Q Q B M A F U A R Q A + A D w A L w B Q A E E A U g B B A E 0 A R Q B U A E U A U g A + A D w A V g B B A E w A V Q B F A C A A Z Q B u A G M A b w B k A G k A b g B n A D 0 A I g B i A G E A c w B l A D Y A N A A i A C A A c w B p A H o A Z Q A 9 A C I A M Q A 2 A D A A I g A + A F g A T A B 5 A F k A R w B z A G E A N Q B x A G 8 A V w B Z A E w A R g B I A H c A V w A 5 A D k A W Q B y A E E A S Q B 3 A D A A b g B v A D 0 A P A A v A F Y A Q Q B M A F U A R Q A + A D w A L w B E A E k A R w B F A F M A V A A + A D w A Q Q B M A E c A T w B S A E k A V A B I A E 0 A P g B S A F M A Q Q A g A F A A S w B D A F M A I w A x A C 0 A V g A x A C 4 A N Q A 8 A C 8 A Q Q B M A E c A T w B S A E k A V A B I A E 0 A P g A 8 A F Y A Q Q B M A F U A R Q A g A G U A b g B j A G 8 A Z A B p A G 4 A Z w A 9 A C I A Y g B h A H M A Z Q A 2 A D Q A I g A g A H M A a Q B 6 A G U A P Q A i A D E A M A A y A D Q A I g A + A E s A b A B P A E U A U w B o A D A A b g A 2 A F Q A Z g A x A D E A a w B 5 A G s A c A B B A E M A U g B y A H c A U A B N A F c A d w A 0 A F g A K w B Y A D M A b g B K A H g A N g B N A E s A V w A v A H Y A N g A 4 A E c A Z Q B G A D E A M A B G A E I A d Q B w A E U A N g B W A E E A T w B r A H o A b w B S A E Q A Y w B x A E I A Z A B a A F Y A V A B i A E c A d Q B R A H Y A c A B n A D Y A N A B x A D Y A V g B r A F g A N Q B y A D E A b A A 4 A G s A e Q B J A D M A Z w B s A H g A d w B l A G w A Y w B M A E o A c A B 2 A D c A R g B i A H c A Z Q B U A F Y A b g B Y A E 4 A R A B 3 A G I A V Q A 3 A D I A N g B K A G o A d Q B y A H U A c A B q A F A A S w B k A C s A a g B V A E Y A a g B z A G c A N w A w A G U A Q Q A z A F Q A T Q B a A E o A S Q B I A F I A U Q B G A F U A W Q B M A G U A R A B D A F I A Y g B 2 A E Y A d A A x A D c A Z g A 5 A F A A Z A B Y A E M A b g B Z A D 0 A P A A v A F Y A Q Q B M A F U A R Q A + A D w A L w B T A E k A R w B O A E E A V A B V A F I A R Q A + A D w A L w B Y A H I A T Q B M A D 4 A < / C E R T I F I C A T E > 
 
     < C E R T I F I C A T E > P A A / A H g A b Q B s A C A A d g B l A H I A c w B p A G 8 A b g A 9 A C I A M Q A u A D A A I g A / A D 4 A P A B Y A H I A T Q B M A C A A e A B t A G w A b g B z A D 0 A I g A i A C A A d g B l A H I A c w B p A G 8 A b g A 9 A C I A M Q A u A D I A I g A + A D w A Q g B P A E Q A W Q A g A H Q A e Q B w A G U A P Q A i A E w A S Q B D A E U A T g B T A E U A I g A g A H Y A Z Q B y A H M A a Q B v A G 4 A P Q A i A D M A L g A w A C I A P g A 8 A E k A U w B T A F U A R Q B E A F Q A S Q B N A E U A P g A y A D A A M A A 1 A C 0 A M A A x A C 0 A M A A 4 A F Q A M A A w A D o A M Q A x A D w A L w B J A F M A U w B V A E U A R A B U A E k A T Q B F A D 4 A P A B W A E E A T A B J A E Q A S Q B U A F k A V A B J A E 0 A R Q A + A D w A R g B S A E 8 A T Q A + A D I A M A A w A D I A L Q A x A D I A L Q A w A D U A V A A w A D E A O g A w A D c A P A A v A E Y A U g B P A E 0 A P g A 8 A F U A T g B U A E k A T A A + A D I A M A A x A D U A L Q A x A D E A L Q A y A D c A V A A w A D A A O g A x A D E A P A A v A F U A T g B U A E k A T A A + A D w A L w B W A E E A T A B J A E Q A S Q B U A F k A V A B J A E 0 A R Q A + A D w A R A B F A F M A Q w B S A E k A U A B U A E 8 A U g A + A D w A T w B C A E o A R Q B D A F Q A I A B 0 A H k A c A B l A D 0 A I g B B A H A A c A B s A G k A Y w B h A H Q A a Q B v A G 4 A L Q B T A G k A Z w B u A G k A b g B n A C 0 A Q w B l A H I A d A B p A G Y A a Q B j A G E A d A B l A C I A P g A 8 A E k A R A A g A H Q A e Q B w A G U A P Q A i A E 0 A U w A t A E c A V Q B J A E Q A I g A + A H s A Y w A 0 A D A A Z A A 4 A G M A Y g B j A C 0 A O A A 2 A D g A O Q A t A D Q A Y g A 5 A D U A L Q B h A G E A M Q A 1 A C 0 A M A A 0 A D A A Y w A z A D M A N w B m A D M A Y w A 0 A G M A f Q A 8 A C 8 A S Q B E A D 4 A P A A v A E 8 A Q g B K A E U A Q w B U A D 4 A P A A v A E Q A R Q B T A E M A U g B J A F A A V A B P A F I A P g A 8 A E k A U w B T A F U A R Q B S A D 4 A P A B P A E I A S g B F A E M A V A A g A H Q A e Q B w A G U A P Q A i A E Q A U g B N A C 0 A Q w B l A H I A d A B p A G Y A a Q B j A G E A d A B l A C 0 A Q Q B 1 A H Q A a A B v A H I A a Q B 0 A H k A I g A + A D w A S Q B E A C A A d A B 5 A H A A Z Q A 9 A C I A Y Q B z A G M A a Q B p A C 0 A d A B h A G c A I g A + A E 0 A a Q B j A H I A b w B z A G 8 A Z g B 0 A C A A R A B S A E 0 A I A B J A F M A V g A g A E M A Q Q A 8 A C 8 A S Q B E A D 4 A P A B O A E E A T Q B F A D 4 A T Q B p A G M A c g B v A H M A b w B m A H Q A I A B E A F I A T Q A g A E k A U w B W A C A A Q w B B A D w A L w B O A E E A T Q B F A D 4 A P A A v A E 8 A Q g B K A E U A Q w B U A D 4 A P A B Q A F U A Q g B M A E k A Q w B L A E U A W Q A + A D w A Q Q B M A E c A T w B S A E k A V A B I A E 0 A P g B S A F M A Q Q A 8 A C 8 A Q Q B M A E c A T w B S A E k A V A B I A E 0 A P g A 8 A F A A Q Q B S A E E A T Q B F A F Q A R Q B S A C A A b g B h A G 0 A Z Q A 9 A C I A c A B 1 A G I A b A B p A G M A L Q B l A H g A c A B v A G 4 A Z Q B u A H Q A I g A + A D w A V g B B A E w A V Q B F A C A A Z Q B u A G M A b w B k A G k A b g B n A D 0 A I g B p A G 4 A d A B l A G c A Z Q B y A D M A M g A i A D 4 A N g A 1 A D U A M w A 3 A D w A L w B W A E E A T A B V A E U A P g A 8 A C 8 A U A B B A F I A Q Q B N A E U A V A B F A F I A P g A 8 A F A A Q Q B S A E E A T Q B F A F Q A R Q B S A C A A b g B h A G 0 A Z Q A 9 A C I A b Q B v A G Q A d Q B s A H U A c w A i A D 4 A P A B W A E E A T A B V A E U A I A B l A G 4 A Y w B v A G Q A a Q B u A G c A P Q A i A G I A Y Q B z A G U A N g A 0 A C I A I A B z A G k A e g B l A D 0 A I g A y A D A A N A A 4 A C I A P g B z A D E A R w A v A E 0 A Z Q B q A F I A M A B F A D Q A Y w B Y A E M A d A B U A F E A a w B 5 A E o A e Q A y A D k A V g B i A E g A a g B 2 A G w A U Q B H A G w A a Q B t A D Y A U A B m A F Q A U Q B 0 A E 4 A M g A 0 A E g A d A B u A F I A a A A x A G 8 A S w B I A E s A U w A v A H A A S A B Z A H I A M w B a A E 8 A c w B o A F o A T Q B E A D A A c A B k A C 8 A Y Q B s A C 8 A N A B H A D Y A b g B E A G w A W Q B J A E s A M g B l A D M A a g A x A H k A U Q B Q A H U A a g B q A D Y A U g B V A H Q A S g B 0 A H Y A W g B y A D I A Q g B u A D I A R A B H A C 8 A U g B B A C s A T A B X A G E A b Q B u A H U A Y w B U A F Y A e g B 6 A G 8 A L w A 5 A F E A M g B r A D c A S w B 6 A F Q A U Q A 0 A D Y A a A B V A G o A b A B X A E c A Y w A r A F Y A e Q B G A H o A K w B n A F g A V w A 1 A G c A N Q B Y A F U A d Q A 1 A F A A b w B t A G w A b w A 1 A D k A d g B i A C 8 A R w B M A G 4 A W g B E A F M A a A B n A G c A e A B k A D g A V w B 1 A H g A R Q B s A E 8 A M w B p A D k A W Q B m A F M A N A B k A E 8 A O A B O A E o A R Q B 2 A D E A b A B F A H U A e Q B J A F A A O A A 4 A G w A Z g B h A G Y A e g B S A G U A a w B E A C s A W Q B j A G o A Y Q A 0 A G M A U g B U A E c A S A B P A E g A e A B O A E U A c Q A 1 A E 4 A b w B H A F g A a Q B D A D A A c w B S A G M A O A A z A F g A Z w B 0 A D c A U w A 3 A D c A M A B 1 A F A A T A B 4 A G c A U g B s A E Q A b A B w A G k A Q w B 1 A E 8 A Q Q B 4 A G 8 A Q w B P A G w A c w A w A G 8 A c w B y A G I A Z A B H A F Y A S g B C A F A A S A A y A G g A Y g A 2 A D U A L w B 2 A G 0 A M Q B w A E Q A a Q B y A G M A N A A 2 A G M A T A B 0 A E M A M w A 5 A E w A Y Q B W A E Q A N g B r A D U A V g A 3 A H I A c g A 1 A F k A V w A z A G w A S w B s A E w A L w B n A G c A e g B n A F g A T A B y A G 4 A Q Q A 9 A D 0 A P A A v A F Y A Q Q B M A F U A R Q A + A D w A L w B Q A E E A U g B B A E 0 A R Q B U A E U A U g A + A D w A L w B Q A F U A Q g B M A E k A Q w B L A E U A W Q A + A D w A L w B J A F M A U w B V A E U A U g A + A D w A S Q B T A F M A V Q B F A E Q A U A B S A E k A T g B D A E k A U A B B A E w A U w A + A D w A U A B S A E k A T g B D A E k A U A B B A E w A I A B p A G 4 A d A B l A H I A b g B h A G w A L Q B p A G Q A P Q A i A D E A I g A + A D w A T w B C A E o A R Q B D A F Q A I A B 0 A H k A c A B l A D 0 A I g B E A F I A T Q A t A E M A Z Q B y A H Q A a Q B m A G k A Y w B h A H Q A Z Q A t A E E A d Q B 0 A G g A b w B y A G k A d A B 5 A C I A P g A 8 A E k A R A A g A H Q A e Q B w A G U A P Q A i A G E A c w B j A G k A a Q A t A H Q A Y Q B n A C I A P g B N A G k A Y w B y A G 8 A c w B v A G Y A d A A g A E Q A U g B N A C A A S Q B T A F Y A I A B B A H A A c A B s A G k A Y w B h A H Q A a Q B v A G 4 A I A B T A G k A Z w B u A G k A b g B n A C A A U w B l A H I A d g B l A H I A I A B D A E E A P A A v A E k A R A A + A D w A T g B B A E 0 A R Q A + A E 0 A a Q B j A H I A b w B z A G 8 A Z g B 0 A C A A R A B S A E 0 A I A B J A F M A V g A g A E E A c A B w A G w A a Q B j A G E A d A B p A G 8 A b g A g A F M A a Q B n A G 4 A a Q B u A G c A I A B T A G U A c g B 2 A G U A c g A g A E M A Q Q A 8 A C 8 A T g B B A E 0 A R Q A + A D w A L w B P A E I A S g B F A E M A V A A + A D w A U A B V A E I A T A B J A E M A S w B F A F k A P g A 8 A E E A T A B H A E 8 A U g B J A F Q A S A B N A D 4 A U g B T A E E A P A A v A E E A T A B H A E 8 A U g B J A F Q A S A B N A D 4 A P A B Q A E E A U g B B A E 0 A R Q B U A E U A U g A g A G 4 A Y Q B t A G U A P Q A i A H A A d Q B i A G w A a Q B j A C 0 A Z Q B 4 A H A A b w B u A G U A b g B 0 A C I A P g A 8 A F Y A Q Q B M A F U A R Q A g A G U A b g B j A G 8 A Z A B p A G 4 A Z w A 9 A C I A a Q B u A H Q A Z Q B n A G U A c g A z A D I A I g A + A D Y A N Q A 1 A D M A N w A 8 A C 8 A V g B B A E w A V Q B F A D 4 A P A A v A F A A Q Q B S A E E A T Q B F A F Q A R Q B S A D 4 A P A B Q A E E A U g B B A E 0 A R Q B U A E U A U g A g A G 4 A Y Q B t A G U A P Q A i A G 0 A b w B k A H U A b A B 1 A H M A I g A + A D w A V g B B A E w A V Q B F A C A A Z Q B u A G M A b w B k A G k A b g B n A D 0 A I g B i A G E A c w B l A D Y A N A A i A C A A c w B p A H o A Z Q A 9 A C I A M Q A w A D I A N A A i A D 4 A T g B j A C s A W Q B S A G w A R g B w A D M A c A B F A F M A S g B D A E U A M Q A r A E U A Z g B J A G w A O Q B a A G 4 A c g B I A F U A b w B Z A E w A K w A 2 A F Y A c A B J A E U A V w B F A E k A Z g B 2 A F k A Z w B O A H E A U Q B D A F M A W A B i A F Q A S Q A w A D g A W g B 4 A F Q A Z g A 2 A E 4 A a w B Y A G 4 A S w B t A D M A N A B r A D c A Q g B 0 A F k A N w B k A E U A U Q B M A F o A Y Q B x A H Y A T A A 5 A D M A R w B k A E 4 A N w B q A G 0 A b Q B 5 A G Y A Z Q B N A E M A a A B v A C s A T g B H A G Q A S A B 0 A D E A d Q B 4 A F g A R A B v A E o A a w B s A E Y A V w B T A H k A M A B u A G w A e g B Q A D I A b w B u A G I A a Q B H A G 8 A d g A 2 A H A A Z g A 3 A D Q A a Q B v A G U A c g B U A F I A Y w B B A C s A b g B u A D M A R g B 4 A H Q A W Q B 3 A G s A M g A v A E 8 A K w A w A D k A Q w B K A E o A M A A w A F U A a g B l A H I A O Q B Z A D A A P Q A 8 A C 8 A V g B B A E w A V Q B F A D 4 A P A A v A F A A Q Q B S A E E A T Q B F A F Q A R Q B S A D 4 A P A A v A F A A V Q B C A E w A S Q B D A E s A R Q B Z A D 4 A P A A v A F A A U g B J A E 4 A Q w B J A F A A Q Q B M A D 4 A P A A v A E k A U w B T A F U A R Q B E A F A A U g B J A E 4 A Q w B J A F A A Q Q B M A F M A P g A 8 A F c A T w B S A E s A P g A 8 A E 8 A Q g B K A E U A Q w B U A C A A d A B 5 A H A A Z Q A 9 A C I A Q Q B w A H A A b A B p A G M A Y Q B 0 A G k A b w B u A C 0 A U w B p A G c A b g B p A G 4 A Z w A t A E M A Z Q B y A H Q A a Q B m A G k A Y w B h A H Q A Z Q A i A D 4 A P A B J A E Q A I A B 0 A H k A c A B l A D 0 A I g B N A F M A L Q B H A F U A S Q B E A C I A P g B 7 A G M A N A A w A G Q A O A B j A G I A Y w A t A D g A N g A 4 A D k A L Q A 0 A G I A O Q A 1 A C 0 A Y Q B h A D E A N Q A t A D A A N A A w A G M A M w A z A D c A Z g A z A G M A N A B j A H 0 A P A A v A E k A R A A + A D w A L w B P A E I A S g B F A E M A V A A + A D w A U g B J A E c A S A B U A F M A R w B S A E 8 A V Q B Q A C A A b g B h A G 0 A Z Q A 9 A C I A T Q B h A G k A b g A t A F I A a Q B n A G g A d A B z A C I A P g A 8 A F I A S Q B H A E g A V A B T A E w A S Q B T A F Q A P g A 8 A F I A S Q B H A E g A V A A g A G 4 A Y Q B t A G U A P Q A i A E k A U w B T A F U A R Q A i A D 4 A P A B D A E 8 A T g B E A E k A V A B J A E 8 A T g B M A E k A U w B U A D 4 A P A B U A E k A T Q B F A D 4 A P A B S A E E A T g B H A E U A V A B J A E 0 A R Q A + A D w A R g B S A E 8 A T Q A + A D I A M A A w A D I A L Q A x A D I A L Q A w A D U A V A A w A D E A O g A w A D c A P A A v A E Y A U g B P A E 0 A P g A 8 A F U A T g B U A E k A T A A + A D I A M A A x A D M A L Q A x A D E A L Q A y A D c A V A A w A D A A O g A x A D E A P A A v A F U A T g B U A E k A T A A + A D w A L w B S A E E A T g B H A E U A V A B J A E 0 A R Q A + A D w A L w B U A E k A T Q B F A D 4 A P A B B A E M A Q w B F A F M A U w A + A D w A U A B S A E k A T g B D A E k A U A B B A E w A I A B p A G 4 A d A B l A H I A b g B h A G w A L Q B p A G Q A P Q A i A D E A I g A g A C 8 A P g A 8 A C 8 A Q Q B D A E M A R Q B T A F M A P g A 8 A C 8 A Q w B P A E 4 A R A B J A F Q A S Q B P A E 4 A T A B J A F M A V A A + A D w A L w B S A E k A R w B I A F Q A P g A 8 A C 8 A U g B J A E c A S A B U A F M A T A B J A F M A V A A + A D w A L w B S A E k A R w B I A F Q A U w B H A F I A T w B V A F A A P g A 8 A C 8 A V w B P A F I A S w A + A D w A L w B C A E 8 A R A B Z A D 4 A P A B T A E k A R w B O A E E A V A B V A F I A R Q A + A D w A R A B J A E c A R Q B T A F Q A P g A 8 A E E A T A B H A E 8 A U g B J A F Q A S A B N A D 4 A U w B I A E E A M Q A 8 A C 8 A Q Q B M A E c A T w B S A E k A V A B I A E 0 A P g A 8 A F A A Q Q B S A E E A T Q B F A F Q A R Q B S A C A A b g B h A G 0 A Z Q A 9 A C I A Y w B v A G Q A a Q B u A G c A d A B 5 A H A A Z Q A i A D 4 A P A B W A E E A T A B V A E U A I A B l A G 4 A Y w B v A G Q A a Q B u A G c A P Q A i A H M A d A B y A G k A b g B n A C I A P g B z A H U A c g B m A G E A Y w B l A C 0 A Y w B v A G Q A a Q B u A G c A P A A v A F Y A Q Q B M A F U A R Q A + A D w A L w B Q A E E A U g B B A E 0 A R Q B U A E U A U g A + A D w A V g B B A E w A V Q B F A C A A Z Q B u A G M A b w B k A G k A b g B n A D 0 A I g B i A G E A c w B l A D Y A N A A i A C A A c w B p A H o A Z Q A 9 A C I A M Q A 2 A D A A I g A + A F k A Q g B w A F M A Q Q B z A D Y A a w A x A F U A b Q B F A F g A N Q B J A F k A b g B B A E 0 A Z w B Y A D E A Z w B 5 A H Y A R A B Z A D 0 A P A A v A F Y A Q Q B M A F U A R Q A + A D w A L w B E A E k A R w B F A F M A V A A + A D w A Q Q B M A E c A T w B S A E k A V A B I A E 0 A P g B S A F M A Q Q A g A F A A S w B D A F M A I w A x A C 0 A V g A x A C 4 A N Q A 8 A C 8 A Q Q B M A E c A T w B S A E k A V A B I A E 0 A P g A 8 A F Y A Q Q B M A F U A R Q A g A G U A b g B j A G 8 A Z A B p A G 4 A Z w A 9 A C I A Y g B h A H M A Z Q A 2 A D Q A I g A g A H M A a Q B 6 A G U A P Q A i A D I A M A A 0 A D g A I g A + A E M A e Q B o A G I A T w B G A D I A T w B M A G s A V A A 2 A H U A R A A 0 A H E A Q Q B N A F A A e A B 6 A F Y A T A B 0 A H k A d g A 1 A E Y A S Q B t A F Y A T Q B n A G o A b Q B 4 A G M A V Q B w A F k A T Q A x A D I A Q w B o A D I A e g B F A H E A W A A 1 A E Y A V w A 0 A C 8 A a w B Z A F Y A d w A r A E U A b w B W A F o A Q w B W A C s A e A B z A H M A Z Q A 3 A E E A b Q A z A F o A M Q B m A E o A b w B N A E 0 A N g A 0 A H I A Y Q B 3 A E M A Z g B t A G U A d A B S A D k A W g B k A H E A U w B p A D U A N g A y A E 8 A M w A y A H E A T w B s A H Y A W Q B 2 A E s A Y w A x A H c A e A B v A F c A M Q B 6 A G 8 A L w B R A D c A N A B m A D g A W A B N A E 4 A M g B B A G c A W A B K A F U A N A B G A E 8 A L w B i A H c A c g B V A H c A S A B s A G Y A T w B a A F Y A M Q B H A H o A d w A v A D M A R A A w A H A A U A B N A H A A N A B D A H Y A a w B t A D A A S A B L A F E A V g B j A H M A L w B i A E Y A c w B E A D I A T Q B l A F U A V g A z A G k A Q g B j A C 8 A b g B r A D k A S w B y A G k A Q Q A y A F g A M A B Q A H k A a g B M A F g A N w B X A E 4 A O A B k A F E A V Q B h A E w A S w B h A F Q A R A B t A F A A M w B s A D M A a w B Q A D A A Y Q B n A F g A V A B V A E U A S w B K A H g A Y w B u A E s A Q g B B A E U A U Q B w A D k A S w A z A G g A c g B C A H M A R A B H A E U A V Q B T A D Q A T A A 4 A D Y A Q Q B N A E s A c A B i A E c A L w A 3 A E w A N g B V A C s A T Q B 5 A E o A V Q B p A D g A T A B a A G U A c A B w A G 4 A T A B 6 A E U A L w A v A H o A S Q A 3 A F A A d A A w A H Y A N g B 6 A H g A d A B R A E 8 A N w B 6 A G Y A N w B R A E E A d w B w A E Q A T Q B 4 A H k A Z g B y A G I A e g A x A G 4 A d A B 4 A G o A Z A B k A D Y A U w A r A D E A Z w A 5 A F U A N Q B Q A H A A c w B B A F E A N Q B J A C s A K w B n A D 0 A P Q A 8 A C 8 A V g B B A E w A V Q B F A D 4 A P A A v A F M A S Q B H A E 4 A Q Q B U A F U A U g B F A D 4 A P A A v A F g A c g B N A E w A P g A = < / C E R T I F I C A T E > 
 
     < C E R T I F I C A T E > P A A / A H g A b Q B s A C A A d g B l A H I A c w B p A G 8 A b g A 9 A C I A M Q A u A D A A I g A / A D 4 A P A B Y A H I A T Q B M A C A A e A B t A G w A b g B z A D 0 A I g A i A C A A d g B l A H I A c w B p A G 8 A b g A 9 A C I A M Q A u A D I A I g A + A D w A Q g B P A E Q A W Q A g A H Q A e Q B w A G U A P Q A i A E w A S Q B D A E U A T g B T A E U A I g A g A H Y A Z Q B y A H M A a Q B v A G 4 A P Q A i A D M A L g A w A C I A P g A 8 A E k A U w B T A F U A R Q B E A F Q A S Q B N A E U A P g A y A D A A M A A 1 A C 0 A M A A x A C 0 A M A A 4 A F Q A M A A w A D o A M A A 2 A D w A L w B J A F M A U w B V A E U A R A B U A E k A T Q B F A D 4 A P A B W A E E A T A B J A E Q A S Q B U A F k A V A B J A E 0 A R Q A + A D w A R g B S A E 8 A T Q A + A D I A M A A w A D I A L Q A x A D I A L Q A w A D U A V A A w A D E A O g A w A D c A P A A v A E Y A U g B P A E 0 A P g A 8 A F U A T g B U A E k A T A A + A D I A M A A x A D U A L Q A x A D E A L Q A y A D c A V A A w A D A A O g A w A D Y A P A A v A F U A T g B U A E k A T A A + A D w A L w B W A E E A T A B J A E Q A S Q B U A F k A V A B J A E 0 A R Q A + A D w A R A B F A F M A Q w B S A E k A U A B U A E 8 A U g A + A D w A T w B C A E o A R Q B D A F Q A I A B 0 A H k A c A B l A D 0 A I g B E A F I A T Q A t A E M A Q Q A t A E M A Z Q B y A H Q A a Q B m A G k A Y w B h A H Q A Z Q A i A D 4 A P A B J A E Q A I A B 0 A H k A c A B l A D 0 A I g B N A F M A L Q B H A F U A S Q B E A C I A P g B 7 A D g A Z g B m A G E A O Q A 5 A G U A O A A t A D E A O A B j A G I A L Q A 0 A D c A N Q A 2 A C 0 A Y g B l A G M A Y w A t A D g A Y w A 1 A D I A N Q A 4 A D A A M Q A w A D A A Y w A z A H 0 A P A A v A E k A R A A + A D w A L w B P A E I A S g B F A E M A V A A + A D w A L w B E A E U A U w B D A F I A S Q B Q A F Q A T w B S A D 4 A P A B J A F M A U w B V A E U A U g A + A D w A T w B C A E o A R Q B D A F Q A I A B 0 A H k A c A B l A D 0 A I g B E A F I A T Q A t A E M A Z Q B y A H Q A a Q B m A G k A Y w B h A H Q A Z Q A t A E E A d Q B 0 A G g A b w B y A G k A d A B 5 A C I A P g A 8 A E k A R A A g A H Q A e Q B w A G U A P Q A i A G E A c w B j A G k A a Q A t A H Q A Y Q B n A C I A P g B N A G k A Y w B y A G 8 A c w B v A G Y A d A A g A E Q A U g B N A C A A S Q B T A F Y A I A B S A G 8 A b w B 0 A D w A L w B J A E Q A P g A 8 A E 4 A Q Q B N A E U A P g B N A G k A Y w B y A G 8 A c w B v A G Y A d A A g A E Q A U g B N A C A A S Q B T A F Y A I A B S A G 8 A b w B 0 A D w A L w B O A E E A T Q B F A D 4 A P A A v A E 8 A Q g B K A E U A Q w B U A D 4 A P A B Q A F U A Q g B M A E k A Q w B L A E U A W Q A + A D w A Q Q B M A E c A T w B S A E k A V A B I A E 0 A P g B S A F M A Q Q A 8 A C 8 A Q Q B M A E c A T w B S A E k A V A B I A E 0 A P g A 8 A F A A Q Q B S A E E A T Q B F A F Q A R Q B S A C A A b g B h A G 0 A Z Q A 9 A C I A c A B 1 A G I A b A B p A G M A L Q B l A H g A c A B v A G 4 A Z Q B u A H Q A I g A + A D w A V g B B A E w A V Q B F A C A A Z Q B u A G M A b w B k A G k A b g B n A D 0 A I g B p A G 4 A d A B l A G c A Z Q B y A D M A M g A i A D 4 A N g A 1 A D U A M w A 3 A D w A L w B W A E E A T A B V A E U A P g A 8 A C 8 A U A B B A F I A Q Q B N A E U A V A B F A F I A P g A 8 A F A A Q Q B S A E E A T Q B F A F Q A R Q B S A C A A b g B h A G 0 A Z Q A 9 A C I A b Q B v A G Q A d Q B s A H U A c w A i A D 4 A P A B W A E E A T A B V A E U A I A B l A G 4 A Y w B v A G Q A a Q B u A G c A P Q A i A G I A Y Q B z A G U A N g A 0 A C I A I A B z A G k A e g B l A D 0 A I g A y A D A A N A A 4 A C I A P g B 0 A F Q A L w B q A H g A d A A y A F o A c Q B 5 A E 8 A N w B q A G E A d A B r A G M A d Q B h A G M A U Q B I A G g A V g B U A E c A R w B F A E I A M w B E A F I A b A B 2 A H E A O Q B z A D E A V g B m A F Q A c g B Q A G E A V A B y A F Q A Z w B G A D k A a Q B G A C s A O A B 5 A G Q A e Q B K A E M A S A B o A H g A d w B U A H E A O A B j A E M A d A B 3 A E I A W A B 1 A E k A T g B I A F c A d g A r A G U A V w B m A F U A O Q B E A E 8 A b w B 1 A H g A V g B Y A D I A T A B k A F k A T A A v A E w A d A B O A C s A Z g A z A D c A M w A y A F g A V g B t A G w A e g B 1 A D g A V A B K A F M A T g B L A H Y A c g B 5 A E 4 A V g A w A C s A V Q B 5 A E Y A Q g B L A G Y A U g B F A D Y A M g B S A G 8 A V Q B 6 A F E A W A B H A E U A M w B 3 A F U A M w A y A E I A U A B D A D Y A T w A r A H E A R g B p A H Y A S w B w A H Y A c w B 3 A F Y A a A A z A C 8 A M g B U A G 0 A O A B l A H E A a A B L A C s A L w B m A G Q A W A B 0 A D E A e Q A y A E c A N w B 4 A D U A L w B l A E 4 A V Q B 0 A H E A S Q B 3 A G 4 A b g A 5 A F Y A N Q B J A E Q A b Q A 3 A D g A W g B 1 A E U A N g A 2 A H Q A Q Q B C A F c A S g B F A H E A d g B h A D Y A T w B 1 A D g A S g B L A D A A O A B V A E s A c g B 2 A E 0 A M A B w A E s A W g B Q A G g A b g B I A E o A R g A x A G 0 A c g B x A D k A V g A 1 A H o A V A B 4 A F Q A L w A 1 A D M A T A B t A D U A M Q A 5 A C s A K w B P A E E A M Q B m A G k A V Q B K A F c A Q w B z A D Q A a g B D A G 0 A O A B O A G g A d g B J A H E A K w B 6 A H c A b w B O A D g A M w B N A G E A U A B J A D A A c g B J A H E A Q g B i A E E A O A A 2 A D I A d Q B o A G E A Z A B 5 A F M A V Q B F A E w A c A B z A D c A K w B q A D c A T w B S A D A A a g B q A G I A T w A r A H I A T w A y A E I A N g B J A G U A R Q B n A F g A L w B V A D A A Z w A 9 A D 0 A P A A v A F Y A Q Q B M A F U A R Q A + A D w A L w B Q A E E A U g B B A E 0 A R Q B U A E U A U g A + A D w A L w B Q A F U A Q g B M A E k A Q w B L A E U A W Q A + A D w A L w B J A F M A U w B V A E U A U g A + A D w A S Q B T A F M A V Q B F A E Q A U A B S A E k A T g B D A E k A U A B B A E w A U w A + A D w A U A B S A E k A T g B D A E k A U A B B A E w A I A B p A G 4 A d A B l A H I A b g B h A G w A L Q B p A G Q A P Q A i A D E A I g A + A D w A T w B C A E o A R Q B D A F Q A I A B 0 A H k A c A B l A D 0 A I g B E A F I A T Q A t A E M A Z Q B y A H Q A a Q B m A G k A Y w B h A H Q A Z Q A t A E E A d Q B 0 A G g A b w B y A G k A d A B 5 A C I A P g A 8 A E k A R A A g A H Q A e Q B w A G U A P Q A i A G E A c w B j A G k A a Q A t A H Q A Y Q B n A C I A P g B N A G k A Y w B y A G 8 A c w B v A G Y A d A A g A E Q A U g B N A C A A S Q B T A F Y A I A B D A E E A P A A v A E k A R A A + A D w A T g B B A E 0 A R Q A + A E 0 A a Q B j A H I A b w B z A G 8 A Z g B 0 A C A A R A B S A E 0 A I A B J A F M A V g A g A E M A Q Q A 8 A C 8 A T g B B A E 0 A R Q A + A D w A L w B P A E I A S g B F A E M A V A A + A D w A U A B V A E I A T A B J A E M A S w B F A F k A P g A 8 A E E A T A B H A E 8 A U g B J A F Q A S A B N A D 4 A U g B T A E E A P A A v A E E A T A B H A E 8 A U g B J A F Q A S A B N A D 4 A P A B Q A E E A U g B B A E 0 A R Q B U A E U A U g A g A G 4 A Y Q B t A G U A P Q A i A H A A d Q B i A G w A a Q B j A C 0 A Z Q B 4 A H A A b w B u A G U A b g B 0 A C I A P g A 8 A F Y A Q Q B M A F U A R Q A g A G U A b g B j A G 8 A Z A B p A G 4 A Z w A 9 A C I A a Q B u A H Q A Z Q B n A G U A c g A z A D I A I g A + A D Y A N Q A 1 A D M A N w A 8 A C 8 A V g B B A E w A V Q B F A D 4 A P A A v A F A A Q Q B S A E E A T Q B F A F Q A R Q B S A D 4 A P A B Q A E E A U g B B A E 0 A R Q B U A E U A U g A g A G 4 A Y Q B t A G U A P Q A i A G 0 A b w B k A H U A b A B 1 A H M A I g A + A D w A V g B B A E w A V Q B F A C A A Z Q B u A G M A b w B k A G k A b g B n A D 0 A I g B i A G E A c w B l A D Y A N A A i A C A A c w B p A H o A Z Q A 9 A C I A M g A w A D Q A O A A i A D 4 A c w A x A E c A L w B N A G U A a g B S A D A A R Q A 0 A G M A W A B D A H Q A V A B R A G s A e Q B K A H k A M g A 5 A F Y A Y g B I A G o A d g B s A F E A R w B s A G k A b Q A 2 A F A A Z g B U A F E A d A B O A D I A N A B I A H Q A b g B S A G g A M Q B v A E s A S A B L A F M A L w B w A E g A W Q B y A D M A W g B P A H M A a A B a A E 0 A R A A w A H A A Z A A v A G E A b A A v A D Q A R w A 2 A G 4 A R A B s A F k A S Q B L A D I A Z Q A z A G o A M Q B 5 A F E A U A B 1 A G o A a g A 2 A F I A V Q B 0 A E o A d A B 2 A F o A c g A y A E I A b g A y A E Q A R w A v A F I A Q Q A r A E w A V w B h A G 0 A b g B 1 A G M A V A B W A H o A e g B v A C 8 A O Q B R A D I A a w A 3 A E s A e g B U A F E A N A A 2 A G g A V Q B q A G w A V w B H A G M A K w B W A H k A R g B 6 A C s A Z w B Y A F c A N Q B n A D U A W A B V A H U A N Q B Q A G 8 A b Q B s A G 8 A N Q A 5 A H Y A Y g A v A E c A T A B u A F o A R A B T A G g A Z w B n A H g A Z A A 4 A F c A d Q B 4 A E U A b A B P A D M A a Q A 5 A F k A Z g B T A D Q A Z A B P A D g A T g B K A E U A d g A x A G w A R Q B 1 A H k A S Q B Q A D g A O A B s A G Y A Y Q B m A H o A U g B l A G s A R A A r A F k A Y w B q A G E A N A B j A F I A V A B H A E g A T w B I A H g A T g B F A H E A N Q B O A G 8 A R w B Y A G k A Q w A w A H M A U g B j A D g A M w B Y A G c A d A A 3 A F M A N w A 3 A D A A d Q B Q A E w A e A B n A F I A b A B E A G w A c A B p A E M A d Q B P A E E A e A B v A E M A T w B s A H M A M A B v A H M A c g B i A G Q A R w B W A E o A Q g B Q A E g A M g B o A G I A N g A 1 A C 8 A d g B t A D E A c A B E A G k A c g B j A D Q A N g B j A E w A d A B D A D M A O Q B M A G E A V g B E A D Y A a w A 1 A F Y A N w B y A H I A N Q B Z A F c A M w B s A E s A b A B M A C 8 A Z w B n A H o A Z w B Y A E w A c g B u A E E A P Q A 9 A D w A L w B W A E E A T A B V A E U A P g A 8 A C 8 A U A B B A F I A Q Q B N A E U A V A B F A F I A P g A 8 A C 8 A U A B V A E I A T A B J A E M A S w B F A F k A P g A 8 A C 8 A U A B S A E k A T g B D A E k A U A B B A E w A P g A 8 A C 8 A S Q B T A F M A V Q B F A E Q A U A B S A E k A T g B D A E k A U A B B A E w A U w A + A D w A V w B P A F I A S w A + A D w A T w B C A E o A R Q B D A F Q A I A B 0 A H k A c A B l A D 0 A I g B E A F I A T Q A t A E M A Q Q A t A E M A Z Q B y A H Q A a Q B m A G k A Y w B h A H Q A Z Q A i A D 4 A P A B J A E Q A I A B 0 A H k A c A B l A D 0 A I g B N A F M A L Q B H A F U A S Q B E A C I A P g B 7 A D g A Z g B m A G E A O Q A 5 A G U A O A A t A D E A O A B j A G I A L Q A 0 A D c A N Q A 2 A C 0 A Y g B l A G M A Y w A t A D g A Y w A 1 A D I A N Q A 4 A D A A M Q A w A D A A Y w A z A H 0 A P A A v A E k A R A A + A D w A L w B P A E I A S g B F A E M A V A A + A D w A U g B J A E c A S A B U A F M A R w B S A E 8 A V Q B Q A C A A b g B h A G 0 A Z Q A 9 A C I A T Q B h A G k A b g A t A F I A a Q B n A G g A d A B z A C I A P g A 8 A F I A S Q B H A E g A V A B T A E w A S Q B T A F Q A P g A 8 A F I A S Q B H A E g A V A A g A G 4 A Y Q B t A G U A P Q A i A E k A U w B T A F U A R Q A i A D 4 A P A B D A E 8 A T g B E A E k A V A B J A E 8 A T g B M A E k A U w B U A D 4 A P A B U A E k A T Q B F A D 4 A P A B S A E E A T g B H A E U A V A B J A E 0 A R Q A + A D w A R g B S A E 8 A T Q A + A D I A M A A w A D I A L Q A x A D I A L Q A w A D U A V A A w A D E A O g A w A D c A P A A v A E Y A U g B P A E 0 A P g A 8 A F U A T g B U A E k A T A A + A D I A M A A x A D M A L Q A x A D E A L Q A y A D c A V A A w A D A A O g A w A D Y A P A A v A F U A T g B U A E k A T A A + A D w A L w B S A E E A T g B H A E U A V A B J A E 0 A R Q A + A D w A L w B U A E k A T Q B F A D 4 A P A B B A E M A Q w B F A F M A U w A + A D w A U A B S A E k A T g B D A E k A U A B B A E w A I A B p A G 4 A d A B l A H I A b g B h A G w A L Q B p A G Q A P Q A i A D E A I g A g A C 8 A P g A 8 A C 8 A Q Q B D A E M A R Q B T A F M A P g A 8 A C 8 A Q w B P A E 4 A R A B J A F Q A S Q B P A E 4 A T A B J A F M A V A A + A D w A L w B S A E k A R w B I A F Q A P g A 8 A C 8 A U g B J A E c A S A B U A F M A T A B J A F M A V A A + A D w A L w B S A E k A R w B I A F Q A U w B H A F I A T w B V A F A A P g A 8 A C 8 A V w B P A F I A S w A + A D w A L w B C A E 8 A R A B Z A D 4 A P A B T A E k A R w B O A E E A V A B V A F I A R Q A + A D w A R A B J A E c A R Q B T A F Q A P g A 8 A E E A T A B H A E 8 A U g B J A F Q A S A B N A D 4 A U w B I A E E A M Q A 8 A C 8 A Q Q B M A E c A T w B S A E k A V A B I A E 0 A P g A 8 A F A A Q Q B S A E E A T Q B F A F Q A R Q B S A C A A b g B h A G 0 A Z Q A 9 A C I A Y w B v A G Q A a Q B u A G c A d A B 5 A H A A Z Q A i A D 4 A P A B W A E E A T A B V A E U A I A B l A G 4 A Y w B v A G Q A a Q B u A G c A P Q A i A H M A d A B y A G k A b g B n A C I A P g B z A H U A c g B m A G E A Y w B l A C 0 A Y w B v A G Q A a Q B u A G c A P A A v A F Y A Q Q B M A F U A R Q A + A D w A L w B Q A E E A U g B B A E 0 A R Q B U A E U A U g A + A D w A V g B B A E w A V Q B F A C A A Z Q B u A G M A b w B k A G k A b g B n A D 0 A I g B i A G E A c w B l A D Y A N A A i A C A A c w B p A H o A Z Q A 9 A C I A M Q A 2 A D A A I g A + A H g A Z A B o A C s A M A B z A D Y A T Q A x A D Y A a w B o A D k A V w B q A G 4 A R g B s A E 4 A d A B E A F Q A U w B E A E 8 A M w A 0 A D 0 A P A A v A F Y A Q Q B M A F U A R Q A + A D w A L w B E A E k A R w B F A F M A V A A + A D w A Q Q B M A E c A T w B S A E k A V A B I A E 0 A P g B S A F M A Q Q A g A F A A S w B D A F M A I w A x A C 0 A V g A x A C 4 A N Q A 8 A C 8 A Q Q B M A E c A T w B S A E k A V A B I A E 0 A P g A 8 A F Y A Q Q B M A F U A R Q A g A G U A b g B j A G 8 A Z A B p A G 4 A Z w A 9 A C I A Y g B h A H M A Z Q A 2 A D Q A I g A g A H M A a Q B 6 A G U A P Q A i A D I A M A A 0 A D g A I g A + A E Y A R g B O A E I A c w B U A D U A Z Q B z A F I A Y w B S A D g A S g B O A E w A T g B L A E Q A a Q B W A F Y A N A B t A G g A d A B u A C s A M g B w A D A A V Q B 6 A E U A U g B K A E I A Y w B V A G U A L w B X A E c A a Q B W A H I A Z A A v A F Y A T g B 2 A F A A Y Q B k A D Y A M w B D A G M A e Q B T A E Q A b g B 1 A E c A d w B 3 A G M A T A B E A D U A d Q B o A G o A V A B a A H g A S g B I A F A A e Q B N A F k A U g B z A H g A Y Q B Z A G I A T g B P A D k A d A B 4 A F Q A c A B R A E 0 A S w B 5 A E E A Z g B 6 A F c A R Q A y A G 8 A T g B z A H k A d A B Z A D A A S w B T A E U A Q w A 1 A H c A M Q A 3 A E U A T g B U A D M A U A A 2 A F Q A b Q B F A G g A a g B V A F k A M w B U A D Q A Z w B R A E I A e g B 0 A E 8 A c A B v A F I A S A B R A H E A O A B Q A F o A b A A 2 A G w A L w B q A G U A Y w A y A F A A U A B x A G 4 A M Q B t A H A A Z w B Y A H Q A a Q B S A E U A Q w B Q A H k A b Q B 6 A E 4 A Y Q B v A G c A Y Q B a A F c A a w B o A F c A Y w B u A E U A e Q B u A H A A N A B W A C s A U g B V A F M A d Q B H A H E A Q w A z A C s A Q g B O A E 8 A M A B p A G s A R Q A x A D A A c A A w A C s A c w A w A D Y A e g B C A F g A O A B n A D g A N Q B u A H U A V w A y A E E A Y g B W A F E A U Q B 3 A D M A N w B 2 A G s A U Q B N A C 8 A Q g B l A F E A e A B k A G E A T Q B p A G 8 A R g B 0 A E c A W Q B k A G 4 A R Q A 1 A E Y A V w B r A E E A a g A v A G c A S A B o A E c A N g A x A G 0 A S g B n A H Q A d w B F A F I A c A B 1 A D M A d Q B M A E w A Y w B o A H U A Y Q B r A E 4 A N g B 1 A F A A e g B 0 A H E A U g B 6 A D A A e g B x A E k A N w B y A H A A M w B U A E Y A S g B V A G Y A Y g B v A G c A b Q B k A E I A U g B S A F A A d g A 4 A H E A R A B z A E o A e g B 4 A E o A c Q B y A G Q A Z Q B m A H U A Z A B J A F Q A N A B R A D 0 A P Q A 8 A C 8 A V g B B A E w A V Q B F A D 4 A P A A v A F M A S Q B H A E 4 A Q Q B U A F U A U g B F A D 4 A P A A v A F g A c g B N A E w A P g A = < / C E R T I F I C A T E > 
 
 < / C E R T I F I C A T E C H A I N > 
=== C:/Users/treeman/Desktop/windows nt source code\xbox\Xbox Live Source\XONLINE_MAIN\public\ext\sdk\vs10rtm\SDK\include\AeroStyle.xml ===
<?xml version="1.0" encoding="us-ascii"?>
<!--

    Windows Vista Aero Style Guide Definition

    Created:    06-23-2005    Microsoft

-->

<visualstyleguide>
    <!-- 
    // 
    // Those XML schema files have a matching .H file 
    // that contains the symbol prefix for each class, part and state
    //
    -->
    <!-- Base types -->
    <symbolfile>vssym32.xml</symbolfile>
    <!-- Style classes and types -->
    <symbolfile>vsstyle.xml</symbolfile>

    <!--
    //
    // Globals
    //
    --> 
    <globals>
        <EdgeDkShadowColor> 100 100 100</EdgeDkShadowColor>
        <EdgeFillColor>     220 220 220</EdgeFillColor>
        <EdgeHighLightColor>244 247 252</EdgeHighLightColor>
        <EdgeLightColor>    180 180 180</EdgeLightColor>
        <EdgeShadowColor>   180 180 180</EdgeShadowColor>
        <GlowColor>         255 255 255</GlowColor>
    </globals>

    <!--
    //
    // System Metrics
    //
    -->
    <sysmetrics>
        <!-- Colors -->
        <ActiveBorder>           ##Globals.EdgeLightColor    </ActiveBorder>
        <ActiveCaption>          153 180 209                 </ActiveCaption>
        <AppWorkSpace>           171 171 171                 </AppWorkSpace>
        <Background>               0   0   0                 </Background>
        <Btnface>                240 240 240                 </Btnface>
        <BtnHighlight>           255 255 255                 </BtnHighlight>
        <BtnShadow>              160 160 160                 </BtnShadow>
        <BtnText>                  0   0   0                 </BtnText>
        <ButtonAlternateFace>      0   0   0                 </ButtonAlternateFace>
        <CaptionText>              0   0   0                 </CaptionText>
        <DkShadow3d>             105 105 105                 </DkShadow3d>
        <GradientActiveCaption>  185 209 234                 </GradientActiveCaption>
        <GradientInactiveCaption>215 228 242                 </GradientInactiveCaption>
        <GrayText>               109 109 109                 </GrayText>
        <Highlight>               51 153 255                 </Highlight>
        <HighlightText>          255 255 255                 </HighlightText>
        <HotTracking>              0 102 204                 </HotTracking>
        <InfoBk>                 255 255 225                 </InfoBk>
        <InfoText>                 0   0   0                 </InfoText>
        <InactiveBorder>         ##Globals.EdgeHighLightColor</InactiveBorder>
        <InactiveCaption>        191 205 219                 </InactiveCaption>
        <InactiveCaptionText>     67  78  84                 </InactiveCaptionText>
        <Light3d>                227 227 227                 </Light3d>
        <Menu>                   ##Sysmetrics.BtnFace        </Menu>
        <MenuBar>                ##Sysmetrics.BtnFace        </MenuBar>
        <MenuHilight>            ##Sysmetrics.Highlight      </MenuHilight>
        <MenuText>               ##Sysmetrics.BtnText        </MenuText>
        <Scrollbar>              200 200 200                 </Scrollbar>
        <Window>                 255 255 255                 </Window>
        <WindowFrame>            100 100 100                 </WindowFrame>
        <WindowText>               0   0   0                 </WindowText>

        <!-- Fonts -->
        <CaptionFont>     Segoe UI, 9, Quality:ClearType</CaptionFont>
        <IconTitleFont>   ##Sysmetrics.MenuFont         </IconTitleFont>
        <MenuFont>        Segoe UI, 9, Quality:ClearType</MenuFont>
        <MsgBoxFont>      ##Sysmetrics.MenuFont         </MsgBoxFont>
        <SmallCaptionFont>Segoe UI, 9, Quality:ClearType</SmallCaptionFont>
        <StatusFont>      ##Sysmetrics.MenuFont         </StatusFont>

        <!-- Metrics -->
        <CaptionBarWidth>   21</CaptionBarWidth>
        <CaptionBarHeight>  21</CaptionBarHeight>
        <MenuBarWidth>      19</MenuBarWidth>
        <MenuBarHeight>     19</MenuBarHeight>
        <ScrollbarHeight>   17</ScrollbarHeight>
        <ScrollbarWidth>    17</ScrollbarWidth>
        <SizingBorderWidth> 1 </SizingBorderWidth>
        <SMCaptionBarHeight>17</SMCaptionBarHeight>
        <SMCaptionBarWidth> 17</SMCaptionBarWidth>
        <PaddedBorderWidth> 4 </PaddedBorderWidth>
    </sysmetrics>

    <!--
    //
    // Class Data
    //
    -->

    <!-- 
    //
    //    Aero Wizard Style, implemented by AeroWizard
    //
    -->
    <class name="AeroWizardStyle">
        <part name="Titlebar">
            <caption>
                <Font>##Sysmetrics.CaptionFont</Font>
                <ClassicValue type="Font">CaptionFont</ClassicValue>
            </caption>
        </part>
        <part name="HeaderArea">
            <caption>
                <Font>##TextStyle.MainInstruction.Font</Font>
                <TextColor>##TextStyle.MainInstruction.TextColor</TextColor>
                <ClassicValue type="TextColor">##TextStyle.MainInstruction.ClassicTextColor</ClassicValue>
                <ClassicValue type="Font">##TextStyle.MainInstruction.ClassicFont</ClassicValue>
            </caption>
            <colorhints>
                <FillColorHint>255 255 255</FillColorHint>
                <ClassicValue type="FillColorHint">threedface</ClassicValue>
            </colorhints>
        </part>
        <part name="Button">
            <caption>
                <Font>##TextStyle.ControlLabel.Font</Font>
                <TextColor>##TextStyle.ControlLabel.TextColor</TextColor>
                <ClassicValue type="TextColor">##TextStyle.ControlLabel.ClassicTextColor</ClassicValue>
                <ClassicValue type="Font">##TextStyle.ControlLabel.ClassicFont</ClassicValue>
            </caption>
        </part>
        <part name="ContentArea">
            <caption>
                <TextColor>##TextStyle.BodyText.TextColor</TextColor>
                <Font>##TextStyle.BodyText.Font</Font>
                <ClassicValue type="TextColor">##TextStyle.BodyText.ClassicTextColor</ClassicValue>
                <ClassicValue type="Font">##TextStyle.BodyText.ClassicFont</ClassicValue>
            </caption>
            <colorhints>
                <FillColorHint>255 255 255</FillColorHint>
                <ClassicValue type="FillColorHint">threedface</ClassicValue>
            </colorhints>
        </part>
        <!-- part name="CommandArea"></part-->
    </class>

    <!-- 
    //
    //    Button Style, implemented by Button
    //
    -->
    <class name="ButtonStyle">
        <part name="Checkbox">
            <colorhints>
                <AccentColorHint>54 89 152</AccentColorHint>
                <BorderColorHint>142 143 143</BorderColorHint>
                <FillColorHint>244 244 244</FillColorHint>
            </colorhints>
        </part>
        <!-- part name="CommandLink" -->
        <part name="Groupbox">
            <colorhints>
                <BorderColorHint>213 223 229</BorderColorHint>
            </colorhints>
        </part>
        <part name="Pushbutton">
            <colorhints>
                <AccentColorHint>54 89 152</AccentColorHint>
                <BorderColorHint>142 143 143</BorderColorHint>
                <FillColorHint>244 244 244</FillColorHint>
            </colorhints>
            <state name="Defaulted">
                <colorhints>
                    <AccentColorHint>4 204 255</AccentColorHint>
                </colorhints>
            </state>
        </part>
        <part name="Radiobutton">
            <colorhints>
                <AccentColorHint>54 89 152</AccentColorHint>
                <BorderColorHint>142 143 143</BorderColorHint>
                <FillColorHint>244 244 244</FillColorHint>
            </colorhints>
        </part>
        <!-- part name="CommandLinkGlyph"></part-->
    </class>

    <!-- 
    //
    //    ComboBox Style, implemented by ComboBox
    //
    -->
    <class name="ComboboxStyle">
        <colorhints>
            <BorderColorHint>171 173 179</BorderColorHint>
        </colorhints>
        <part name="DropDownButton">
            <colorhints>
                <BorderColorHint>102 102 102</BorderColorHint>
                <FillColorHint>244 244 244</FillColorHint>
            </colorhints>
        </part>
        <part name="DropDownButtonRight">
            <colorhints>
                <BorderColorHint>102 102 102</BorderColorHint>
                <FillColorHint>244 244 244</FillColorHint>
            </colorhints>
        </part>
        <part name="DropDownButtonLeft">
            <colorhints>
                <BorderColorHint>102 102 102</BorderColorHint>
                <FillColorHint>244 244 244</FillColorHint>
            </colorhints>
        </part>
        <part name="ReadOnly">
            <colorhints>
                <BorderColorHint>102 102 102</BorderColorHint>
                <FillColorHint>216 216 216</FillColorHint>
            </colorhints>
        </part>
        <!-- part name="Border"></part-->
        <!-- part name="CueBanner"></part-->
    </class>
    
    <!-- 
    //
    // Control Panel Style, implemented by ControlPanel
    //
    -->
    <class name="ControlPanelStyle">
    
        <!-- Static text in Control Panel content pane -->
        <part name="ContentPaneLabel">
            <caption>
                <TextColor>##TextStyle.Label.TextColor</TextColor>
                <Font>##TextStyle.Label.Font</Font>
                <ClassicValue type="TextColor">##TextStyle.Label.ClassicTextColor</ClassicValue>
                <ClassicValue type="Font">##TextStyle.Label.ClassicFont</ClassicValue>
            </caption>
        </part>
        
        <!-- Static text in Control Panel navigation pane -->
        <part name="NavigationPaneLabel">
            <caption>
                <TextColor>21 28 85</TextColor>
                <Font>##TextStyle.BodyTitle.Font</Font>
                <ClassicValue type="TextColor">##TextStyle.BodyTitle.ClassicTextColor</ClassicValue>
                <ClassicValue type="Font">##TextStyle.BodyTitle.ClassicFont</ClassicValue>
            </caption>
        </part>
        
        <!-- Instruction text in Control Panel content pane -->
        <part name="Title">
            <caption>
                <TextColor>##TextStyle.MainInstruction.TextColor</TextColor>
                <Font>##TextStyle.MainInstruction.Font</Font>
                <ClassicValue type="TextColor">##TextStyle.MainInstruction.ClassicTextColor</ClassicValue>
                <ClassicValue type="Font">##TextStyle.MainInstruction.ClassicFont</ClassicValue>
            </caption>
        </part>

        <!-- Static text in Control Panel content pane -->
        <part name="BodyText">
            <caption>
                <TextColor>##TextStyle.BodyText.TextColor</TextColor>
                <Font>##TextStyle.BodyText.Font</Font>
                <ClassicValue type="TextColor">##TextStyle.BodyText.ClassicTextColor</ClassicValue>
                <ClassicValue type="Font">##TextStyle.BodyText.ClassicFont</ClassicValue>
            </caption>
        </part>
        
        <!-- Static bold text in Control Panel content pane -->
        <part name="BodyTitle">
            <caption>
                <TextColor>##TextStyle.BodyTitle.TextColor</TextColor>
                <Font>##TextStyle.BodyTitle.Font</Font>
                <ClassicValue type="TextColor">##TextStyle.BodyTitle.ClassicTextColor</ClassicValue>
                <ClassicValue type="Font">##TextStyle.BodyTitle.ClassicFont</ClassicValue>
            </caption>
        </part>

        <!-- Help link text in Control Panel content pane -->
        <part name="HelpLink">
            <caption>
                <TextColor>##TextStyle.HyperlinkText.TextColor</TextColor>
                <Font>##TextStyle.HyperlinkText.Font</Font>
                <ClassicValue type="TextColor">HotLight</ClassicValue>
                <ClassicValue type="Font">##TextStyle.HyperlinkText.Normal.ClassicFont</ClassicValue>
            </caption>
            <state name="Normal">
                <caption>
                    <ClassicValue type="TextColor">HotLight</ClassicValue>
                    <ClassicValue type="Font">##TextStyle.HyperlinkText.Normal.ClassicFont</ClassicValue>
                </caption>
            </state>
            <state name="Hot">
                <caption>
                    <TextColor>##TextStyle.HyperlinkText.Hot.TextColor</TextColor>
                    <Font>##TextStyle.HyperlinkText.Hot.Font</Font>
                    <ClassicValue type="TextColor">##TextStyle.HyperlinkText.Hot.ClassicTextColor</ClassicValue>
                    <ClassicValue type="Font">##TextStyle.HyperlinkText.Hot.ClassicFont</ClassicValue>
                </caption>
            </state>
            <state name="Pressed">
                <caption>
                    <TextColor>##TextStyle.HyperlinkText.Pressed.TextColor</TextColor>
                    <Font>##TextStyle.HyperlinkText.Pressed.Font</Font>
                    <ClassicValue type="TextColor">HotLight</ClassicValue>
                    <ClassicValue type="Font">##TextStyle.HyperlinkText.Pressed.ClassicFont</ClassicValue>
                </caption>
            </state>
            <state name="Disabled">
                 <caption>
                    <TextColor>##TextStyle.HyperlinkText.Disabled.TextColor</TextColor>
                    <Font>##TextStyle.HyperlinkText.Disabled.Font</Font>
                    <ClassicValue type="TextColor">##TextStyle.HyperlinkText.Disabled.ClassicTextColor</ClassicValue>
                    <ClassicValue type="Font">##TextStyle.HyperlinkText.Disabled.ClassicFont</ClassicValue>
                </caption>
            </state>
        </part>
        
        <!-- Content link text in Control Panel content pane -->
        <part name="ContentLink">
            <caption>
                <TextColor>##TextStyle.HyperlinkText.TextColor</TextColor>
                <Font>##TextStyle.HyperlinkText.Font</Font>
                <ClassicValue type="TextColor">HotLight</ClassicValue>
                <ClassicValue type="Font">##TextStyle.HyperlinkText.Normal.ClassicFont</ClassicValue>
            </caption>
            <state name="Normal">
                <caption>
                    <ClassicValue type="TextColor">HotLight</ClassicValue>
                    <ClassicValue type="Font">##TextStyle.HyperlinkText.Normal.ClassicFont</ClassicValue>
                </caption>
            </state>
            <state name="Hot">
                <caption>
                    <TextColor>##TextStyle.HyperlinkText.Hot.TextColor</TextColor>
                    <Font>##TextStyle.HyperlinkText.Hot.Font</Font>
                    <ClassicValue type="TextColor">##TextStyle.HyperlinkText.Hot.ClassicTextColor</ClassicValue>
                    <ClassicValue type="Font">##TextStyle.HyperlinkText.Hot.ClassicFont</ClassicValue>
                </caption>
            </state>
            <state name="Pressed">
                <caption>
                    <TextColor>##TextStyle.HyperlinkText.Pressed.TextColor</TextColor>
                    <Font>##TextStyle.HyperlinkText.Pressed.Font</Font>
                    <ClassicValue type="TextColor">HotLight</ClassicValue>
                    <ClassicValue type="Font">##TextStyle.HyperlinkText.Pressed.ClassicFont</ClassicValue>
                </caption>
            </state>
            <state name="Disabled">
                 <caption>
                    <TextColor>##TextStyle.HyperlinkText.Disabled.TextColor</TextColor>
                    <Font>##TextStyle.HyperlinkText.Disabled.Font</Font>
                    <ClassicValue type="TextColor">##TextStyle.HyperlinkText.Disabled.ClassicTextColor</ClassicValue>
                    <ClassicValue type="Font">##TextStyle.HyperlinkText.Disabled.ClassicFont</ClassicValue>
                </caption>
            </state>
        </part>
        
        <!-- Navigation link text in Control Panel navigation pane -->
        <part name="TaskLink">
            <caption>
                <TextColor>21 28 85</TextColor>
                <Font>##TextStyle.HyperlinkText.Font</Font>
                <ClassicValue type="TextColor">HotLight</ClassicValue>
                <ClassicValue type="Font">##TextStyle.HyperlinkText.Normal.ClassicFont</ClassicValue>
            </caption>
            <state name="Normal">
                <caption>
                    <ClassicValue type="TextColor">HotLight</ClassicValue>
                    <ClassicValue type="Font">##TextStyle.HyperlinkText.Normal.ClassicFont</ClassicValue>
                </caption>
            </state>
            <state name="Hot">
                <caption>
                    <TextColor>7 74 229</TextColor>
                    <Font>##TextStyle.HyperlinkText.Hot.Font</Font>
                    <ClassicValue type="TextColor">HotLight</ClassicValue>
                    <ClassicValue type="Font">##TextStyle.HyperlinkText.Hot.ClassicFont</ClassicValue>
                </caption>
            </state>
            <state name="Pressed">
                <caption>
                    <TextColor>7 74 229</TextColor>
                    <Font>##TextStyle.HyperlinkText.Pressed.Font</Font>
                    <ClassicValue type="TextColor">HotLight</ClassicValue>
                    <ClassicValue type="Font">##TextStyle.HyperlinkText.Pressed.ClassicFont</ClassicValue>
                </caption>
            </state>
            <state name="Disabled">
                <!-- Caution disabled navigation link text color must show over the NavigationPane Fill -->
                <caption>
                    <TextColor>128 128 128</TextColor>
                    <Font>##TextStyle.HyperlinkText.Disabled.Font</Font>
                    <ClassicValue type="TextColor">##TextStyle.HyperlinkText.Disabled.ClassicTextColor</ClassicValue>
                    <ClassicValue type="Font">##TextStyle.HyperlinkText.Disabled.ClassicFont</ClassicValue>
                </caption>
            </state>
            <state name="Page">
                <caption>
                    <TextColor>21 28 85</TextColor>
                    <Font>Segoe UI, 9, Bold, Quality:ClearType</Font>
                    <ClassicValue type="TextColor">WindowText</ClassicValue>
                    <ClassicValue type="Font">MenuFont;;bold</ClassicValue>
                </caption>
            </state>
        </part>

        <!-- Section title link text in Control Panel content pane -->
        <part name="SectionTitleLink">
            <caption>
                <TextColor>0 110 18</TextColor>
                <Font>Segoe UI, 12, Quality:ClearType</Font>
                <ClassicValue type="TextColor">HotLight</ClassicValue>
                <ClassicValue type="Font">CaptionFont</ClassicValue>
            </caption>
            <state name="Normal">
                <caption>
                    <ClassicValue type="TextColor">HotLight</ClassicValue>
                    <ClassicValue type="Font">CaptionFont</ClassicValue>
                </caption>
            </state>
            <state name="Hot">
                <caption>
                    <TextColor>0 174 29</TextColor>
                    <Font>Segoe UI, 12, Underline, Quality:ClearType</Font>
                    <ClassicValue type="TextColor">HotLight</ClassicValue>
                    <ClassicValue type="Font">CaptionFont;;;underline</ClassicValue>
                </caption>
            </state>
        </part>
        
        <!-- Grouping label text in Control Panel content pane -->
        <part name="GroupText">
            <caption>
                <TextColor>##TextStyle.BodyText.TextColor</TextColor>
                <Font>##TextStyle.BodyText.Font</Font>
                <ClassicValue type="TextColor">##TextStyle.BodyText.ClassicTextColor</ClassicValue>
                <ClassicValue type="Font">##TextStyle.BodyText.ClassicFont</ClassicValue>
            </caption>
        </part>
        
        <!-- Control Panel content pane -->
        <part name="ContentPane">
            <colorhints>
                <FillColorHint>255 255 255</FillColorHint>
                <ClassicValue type="FillColorHint">window</ClassicValue>
            </colorhints>
        </part>
        
        <!-- Control Panel content pane divider line -->
        <part name="ContentPaneLine">
            <colorhints>
                <FillColorHint>204 204 204</FillColorHint>
                <ClassicValue type="FillColorHint">buttonshadow</ClassicValue>
            </colorhints>
        </part>
        
        <!-- Control Panel banner background -->
        <part name="BannerArea">
            <colorhints>
                <FillColorHint>255 255 198</FillColorHint>
                <ClassicValue type="FillColorHint">window</ClassicValue>
            </colorhints>
        </part>
        
        <!-- Control Panel navigation pane -->
        <part name="NavigationPane">
            <colorhints>
                <FillColorHint>86 147 138</FillColorHint>
                <ClassicValue type="FillColorHint">window</ClassicValue>
            </colorhints>
        </part>
        
        <!-- Control Panel navigation pane divider line -->
        <part name="NavigationPaneLine">
            <colorhints>
                <FillColorHint>101 162 150</FillColorHint>
                <ClassicValue type="FillColorHint">buttonshadow</ClassicValue>
            </colorhints>
        </part>
        
        <!-- Control Panel command button area used with large content panes -->
        <part name="LargeCommandArea">
            <colorhints>
                <FillColorHint>240 240 240</FillColorHint>
                <ClassicValue type="FillColorHint">window</ClassicValue>
            </colorhints>
        </part>
        
        <!-- Control Panel command button area used with small content panes -->
        <part name="SmallCommandArea">
            <colorhints>
                <FillColorHint>255 255 255</FillColorHint>
                <ClassicValue type="FillColorHint">window</ClassicValue>
            </colorhints>
        </part>
        
        <!-- Control Panel pushbuttons -->
        <part name="Button">
            <caption>
                <TextColor>##TextStyle.ControlLabel.TextColor</TextColor>
                <Font>##TextStyle.ControlLabel.Font</Font>
                <ClassicValue type="TextColor">##TextStyle.ControlLabel.ClassicTextColor</ClassicValue>
                <ClassicValue type="Font">##TextStyle.ControlLabel.ClassicFont</ClassicValue>
            </caption>
        </part>

        <!-- Message text in Control Panel content pane -->
        <part name="MessageText">
            <caption>
                <TextColor>0 0 0</TextColor>
                <Font>##TextStyle.MainInstruction.Font</Font>
                <ClassicValue type="TextColor">##TextStyle.MainInstruction.ClassicTextColor</ClassicValue>
                <ClassicValue type="Font">##TextStyle.MainInstruction.ClassicFont</ClassicValue>
            </caption>
        </part>
    </class>
    
    <!-- 
    //
    //    DatePicker Style, implemented by DatePicker
    //
    -->
    <class name="DatePickerStyle">
        <part name="ShowCalendarButtonRight">
            <colorhints>
                <BorderColorHint>130 135 144</BorderColorHint>
                <FillColorHint>255 255 255</FillColorHint>
            </colorhints>
        </part>
        <!-- part name="ShowNoneCheckbox"></part-->
    </class>

    <!-- 
    //
    //    DragDrop Style, implemented by DragDrop
    //
    -->
    <class name="DragDropStyle">
        <part name="Copy">
            <colorhints>
                <BorderColorHint>255 255 255</BorderColorHint>
                <FillColorHint>0 103 205</FillColorHint>
            </colorhints>
        </part>
        <part name="Move">
            <colorhints>
                <BorderColorHint>255 255 255</BorderColorHint>
                <FillColorHint>0 103 205</FillColorHint>
            </colorhints>
        </part>
        <part name="UpdateMetaData">
            <colorhints>
                <BorderColorHint>255 255 255</BorderColorHint>
                <FillColorHint>0 103 205</FillColorHint>
            </colorhints>
        </part>
        <part name="CreateLink">
            <colorhints>
                <BorderColorHint>255 255 255</BorderColorHint>
                <FillColorHint>0 103 205</FillColorHint>
            </colorhints>
        </part>
        <part name="Warning">
            <colorhints>
                <BorderColorHint>255 255 255</BorderColorHint>
                <FillColorHint>249 199 0</FillColorHint>
            </colorhints>
        </part>
        <part name="None">
            <colorhints>
                <BorderColorHint>255 255 255</BorderColorHint>
                <FillColorHint>227 49 49</FillColorHint>
            </colorhints>
        </part>
    </class>

    <!-- 
    //
    //    Edit Style, implemented by Edit
    //
    -->
    <class name="EditStyle">
        <colorhints>
            <BorderColorHint>171 173 179</BorderColorHint>
            <FillColorHint>255 255 255</FillColorHint>
        </colorhints>
        <!-- part name="Background"></part-->
        <!-- part name="Edittext"></part-->
        <!-- part name="Password"></part-->
        <!-- part name="EditBorder_NoScroll"></part-->
        <!-- part name="EditBorder_HScroll"></part-->
        <!-- part name="EditBorder_VScroll"></part-->
        <!-- part name="EditBorder_HVScroll"></part-->
    </class>

    <!-- 
    //
    //    ExplorerBar Style, implemented by ExplorerBar
    //
    -->
    <class name="ExplorerBarStyle">
        <part name="HeaderBackground">
            <colorhints>
                <FillColorHint>140 140 140</FillColorHint>
            </colorhints>
        </part>
        <!-- part name="HeaderClose"></part-->
        <!-- part name="HeaderPin"></part-->
        <!-- part name="IEBarMenu"></part-->
        <!-- part name="NormalGroupBackground"></part-->
        <!-- part name="NormalGroupCollapse"></part-->
        <!-- part name="NormalGroupExpand"></part-->
        <!-- part name="NormalGroupHead"></part-->
        <!-- part name="SpecialGroupBackground"></part-->
        <!-- part name="SpecialGroupCollapse"></part-->
        <!-- part name="SpecialGroupExpand"></part-->
        <!-- part name="SpecialGroupHead"></part-->
    </class>

    <!-- 
    //
    //    Flyout Style, implemented by Flyout
    //
    -->
    <class name="FlyoutStyle">
         <part name="Header">
            <caption>
                <TextColor>0 0 0</TextColor>
                <Font>Segoe UI, 10, Quality:ClearType</Font>
                <ClassicValue type="TextColor">##TextStyle.BodyText.ClassicTextColor</ClassicValue>
                <ClassicValue type="Font">##TextStyle.BodyText.ClassicFont</ClassicValue>
            </caption>
        </part>
        <part name="Body">
            <caption>
                <TextColor>87 87 87</TextColor>
                <Font>##TextStyle.BodyText.Font</Font>
                <ClassicValue type="TextColor">##TextStyle.BodyText.ClassicTextColor</ClassicValue>
                <ClassicValue type="Font">##TextStyle.BodyText.ClassicFont</ClassicValue>
            </caption>
            <state name="Normal">
                <caption>
                    <ClassicValue type="TextColor">##TextStyle.BodyText.ClassicTextColor</ClassicValue>
                    <ClassicValue type="Font">##TextStyle.BodyText.ClassicFont</ClassicValue>
                </caption>
            </state>
            <state name="Emphasized">
                <caption>
                    <TextColor>0 0 0</TextColor>
                    <ClassicValue type="TextColor">##TextStyle.Label.ClassicTextColor</ClassicValue>
                    <ClassicValue type="Font">##TextStyle.Label.ClassicFont</ClassicValue>
                </caption>
            </state>
        </part>
        <part name="Label">
            <caption>
                <TextColor>##TextStyle.Label.TextColor</TextColor>
                <Font>##TextStyle.Label.Font</Font>
                <ClassicValue type="TextColor">##TextStyle.Label.ClassicTextColor</ClassicValue>
                <ClassicValue type="Font">##TextStyle.Label.ClassicFont</ClassicValue>
            </caption>
            <state name="Normal">
                <caption>
                    <ClassicValue type="TextColor">##TextStyle.Label.ClassicTextColor</ClassicValue>
                    <ClassicValue type="Font">##TextStyle.Label.ClassicFont</ClassicValue>
                </caption>
            </state>
            <state name="Selected">
            </state>
            <state name="Emphasized">
                <TextColor>19 112 171</TextColor>
                <ClassicValue type="TextColor">WindowText</ClassicValue>
            </state>
            <state name="Disabled">
                <TextColor>##SysMetrics.GrayText</TextColor>
                <ClassicValue type="TextColor">GrayText</ClassicValue>
            </state>
        </part>
        <part name="Link">
            <caption>
                <TextColor>0 102 204</TextColor>
                <Font>##TextStyle.HyperlinkText.Font</Font>
                <ClassicValue type="TextColor">##TextStyle.HyperlinkText.Normal.ClassicTextColor</ClassicValue>
                <ClassicValue type="Font">##TextStyle.HyperlinkText.Normal.ClassicFont</ClassicValue>
            </caption>
            <state name="Normal">
                <caption>
                    <ClassicValue type="TextColor">##TextStyle.HyperlinkText.Normal.ClassicTextColor</ClassicValue>
                    <ClassicValue type="Font">##TextStyle.HyperlinkText.Normal.ClassicFont</ClassicValue>
                </caption>
            </state>
            <state name="Hover">
                <caption>
                    <Font>##TextStyle.HyperlinkText.Hot.Font</Font>
                    <ClassicValue type="Font">##TextStyle.HyperlinkText.Hot.ClassicFont</ClassicValue>
                </caption>
            </state>
        </part>
        <part name="LinkHeader">
            <caption>
                <TextColor>##Flyoutstyle.Link.TextColor</TextColor>
                <Font>##FlyoutStyle.Header.Font</Font>
                <ClassicValue type="TextColor">##TextStyle.HyperlinkText.Normal.ClassicTextColor</ClassicValue>
                <ClassicValue type="Font">##TextStyle.HyperlinkText.Normal.ClassicFont</ClassicValue>
            </caption>
            <state name="Normal">
                <caption>
                    <ClassicValue type="TextColor">##TextStyle.HyperlinkText.Normal.ClassicTextColor</ClassicValue>
                    <ClassicValue type="Font">##TextStyle.HyperlinkText.Normal.ClassicFont</ClassicValue>
                </caption>
            </state>
            <state name="Hover">
                <caption>
                    <Font>##FlyoutStyle.Header.Font</Font>
                    <ClassicValue type="Font">##TextStyle.HyperlinkText.Hot.ClassicFont</ClassicValue>
                </caption>
            </state>
        </part>
        <part name="Window">
            <colorhints>
                <FillColorHint>255 255 255</FillColorHint>
                <BorderSize>0</BorderSize> 
            </colorhints>
        </part>
        <part name="LinkArea">
            <colorhints>
                <FillColorHint>241 245 251</FillColorHint>
            </colorhints>
        </part>
        <!-- part name="Divider"></part-->
    </class>

    <!-- 
    //
    //    Header Style, implemented by Header
    //
    -->
    <class name="HeaderStyle">
        <part name="HeaderItem">
            <colorhints>
                <AccentColorHint>102 188 225</AccentColorHint>
                <FillColorHint>244 244 244</FillColorHint>
            </colorhints>
        </part>
        <part name="HeaderDropDown">
            <colorhints>
                <AccentColorHint>191 191 191</AccentColorHint>
                <FillColorHint>244 244 244</FillColorHint>
            </colorhints>
        </part>
        <part name="HeaderOverflow">
            <colorhints>
                <AccentColorHint>191 191 191</AccentColorHint>
                <FillColorHint>244 244 244</FillColorHint>
            </colorhints>
        </part>
        <!-- part name="HeaderSortArrow"></part-->
    </class>

    <!-- 
    //
    //    ListBox Style, implemented by ListBox
    //
    -->
    <class name="ListboxStyle">
        <colorhints>
            <FillColorHint>255 255 255</FillColorHint>
            <BorderColorHint>130 135 144</BorderColorHint>
            <AccentColorHint>54 89 152</AccentColorHint>
        </colorhints>
        <!-- part name="Border_HScroll"></part-->
        <!-- part name="Border_HVScroll"></part-->
        <!-- part name="Border_NoScroll"></part-->
        <!-- part name="Border_VScroll"></part-->
    </class>

    <!-- 
    //
    //    Listview Style, implemented by Listview 
    //
    -->
    <class name="ListViewStyle">
        <part name="GroupHeader">
            <colorhints>
                <AccentColorHint>185 229 242</AccentColorHint>
                <FillColorHint>94 131 191</FillColorHint>
            </colorhints>
        </part>
        <!-- part name="GroupHeaderLine"></part-->
        <!-- part name="ExpandButton"></part-->
        <!-- part name="CollapseButton"></part-->
        <!-- part name="ColumnDetail"></part-->
    </class>
    <!-- 
    // Listitem implements the Explorer selection visuals,
    // use SetWindowTheme(hWndListView, L"Explorer") to get
    // this new appearance in your listview
    -->
    <!--class name="Explorer::Listview" inherits="Listview">
        <part name="Listitem"></part>
    </class-->

    <!-- 
    //
    //    Menu Style, implemented by Menu
    //
    -->
    <class name="MenuStyle">
        <part name="BarBackground">
            <colorhints>
                <FillColorHint>244 244 244</FillColorHint>
            </colorhints>
        </part>
        <part name="PopupBackground">
            <colorhints>
                <FillColorHint>244 244 244</FillColorHint>
            </colorhints>
        </part>
        <part name="PopupGutter">
            <colorhints>
                <FillColorHint>240 240 240</FillColorHint>
            </colorhints>
        </part>
        <!-- part name="BarItem"></part-->
        <!-- part name="PopupBorders"></part-->
        <!-- part name="PopupCheck"></part-->
        <!-- part name="PopupCheckBackground"></part-->
        <!-- part name="PopupItem"></part-->
        <!-- part name="PopupSeparator"></part-->
        <!-- part name="PopupSubmenu"></part-->
        <!-- part name="SystemClose"></part-->
        <!-- part name="SystemMaximize"></part-->
        <!-- part name="SystemMinimize"></part-->
        <!-- part name="SystemRestore"></part-->
    </class>

    <!-- 
    //
    //    Navigation class
    //
    //    This class has only bitmaps for now, so doesn't implement any style.
    //    Use DrawThemeBackground() or GetThemeBitmap() to retrieve the bitmaps.
    //
    -->
    <!--class name="Navigation"-->
        <!-- part name="BackButton"></part-->
        <!-- part name="ForwardButton"></part-->
        <!-- part name="MenuButton"></part-->
    <!--/class-->

    <!--
    //
    //    Progress Style, implemented by Progress
    //
    -->
    <class name="ProgressStyle">
        <part name="TransparentBar">
            <colorhints>
                <BorderColorHint>104 104 104</BorderColorHint>
                <FillColorHint>255 255 255</FillColorHint>
            </colorhints>
        </part>
        <part name="Fill">
            <colorhints>
                <FillColorHint>82 215 99</FillColorHint>
            </colorhints>
            <state name="Error">
                <colorhints>
                    <FillColorHint>228 0 33</FillColorHint>
                </colorhints>
            </state>
            <state name="Paused">
                <colorhints>
                    <FillColorHint>220 212 0</FillColorHint>
                </colorhints>
            </state>
            <state name="Partial">
                <colorhints>
                    <FillColorHint>0 148 173</FillColorHint>
                </colorhints>
            </state>
        </part>
        <!-- Bar and BarVert have been deprecated -->
        <!-- part name="Bar"></part-->
        <!-- part name="BarVert"></part-->
        <!-- Chunk and ChunkVert have been deprecated -->
        <!-- part name="Chunk"></part-->
        <!-- part name="ChunkVert"></part-->
        <!-- part name="FillVert"></part-->
        <!-- part name="MoveOverlay"></part-->
        <!-- part name="MoveOverlayVert"></part-->
        <!-- part name="PulseOverlay"></part-->
        <!-- part name="PulseOverlayVert"></part-->
        <!-- part name="TransparentBarVert"></part-->
    </class>

    <!-- 
    //
    //    Rebar Style, implemented by Rebar
    //
    -->
    <class name="RebarStyle">
        <colorhints>
            <FillColorHint>233 237 249</FillColorHint>
        </colorhints>
        <part name="Gripper">
            <colorhints>
                <FillColorHint>128 131 137</FillColorHint>
            </colorhints>
        </part>
        <part name="Chevron">
            <colorhints>
                <FillColorHint>0 0 0</FillColorHint>
            </colorhints>
        </part>
        <!-- part name="Background"></part-->
        <!-- part name="Band"></part-->
        <!-- part name="GripperVert"></part-->
        <!-- part name="ChevronVert"></part-->
        <!-- part name="Splitter"></part-->
        <!-- part name="SplitterVert"></part-->
    </class>

    <!-- 
    //
    //    Themed Experiences
    //
    //    Communications::Rebar implements a communication toolbar background
    //    Media::Rebar implements a Media toolbar background, coordinated with the MediaStyle
    //
    //    Use SetWindowTheme(hWndRebar, L"Communications") (or "Media") to apply
    //    those styles to your rebar, and use SetWindowTheme(hWnd, L"Alternate") on the toolbar
    //    to get white text instead of the default color.
    //
    -->
    
    <!-- 
    //
    //    Media Gradient Colors
    //
    -->
    <class name="MediaStyle">
        <colorhints>
            <FillColorHint>238 243 250</FillColorHint>
            <AccentColorHint>207 218 231</AccentColorHint>
        </colorhints>
    </class>

    <!-- 
    //
    //    Communications Gradient Colors
    //
    -->
    
    <class name="CommunicationsStyle">
        <part name="Tab">
            <state name="Normal">
                <colorhints>
                    <FillColorHint>10 76 134</FillColorHint>
                    <AccentColorHint>59 145 232</AccentColorHint>
                    <ClassicValue type="FillColorHint">ButtonShadow</ClassicValue>
                    <ClassicValue type="AccentColorHint">ButtonFace</ClassicValue>
                </colorhints>
            </state>
            <state name="Hot">
                <colorhints>
                   <FillColorHint>56 151 234</FillColorHint>
                   <AccentColorHint>148 201 254</AccentColorHint>
                   <ClassicValue type="FillColorHint">ButtonFace</ClassicValue>
                   <ClassicValue type="AccentColorHint">ButtonHighlight</ClassicValue>
                </colorhints>
             </state>
             <state name="Selected">
                 <colorhints>
                     <FillColorHint>1 37 69</FillColorHint>
                     <AccentColorHint>18 87 157</AccentColorHint>
                     <ClassicValue type="FillColorHint">ButtonShadow</ClassicValue>
                     <ClassicValue type="AccentColorHint">ButtonFace</ClassicValue>
                </colorhints>
             </state>

        </part>
    </class>
    

    <!-- 
    //
    //    Scrollbar Style, implemented by Scrollbar
    //
    -->
    <class name="ScrollbarStyle">
        <part name="ArrowBtn">
            <colorhints>
                <FillColorHint>244 244 244</FillColorHint>
                <BorderColorHint>130 135 144</BorderColorHint>
            </colorhints>
        </part>
        <part name="LowerTrackHorz">
            <colorhints>
                <FillColorHint>244 244 244</FillColorHint>
            </colorhints>
        </part>
        <part name="LowerTrackVert">
            <colorhints>
                <FillColorHint>244 244 244</FillColorHint>
            </colorhints>
        </part>
        <part name="SizeBox">
            <colorhints>
                <FillColorHint>120 120 120</FillColorHint>
            </colorhints>
        </part>
        <part name="ThumbBtnHorz">
            <colorhints>
                <BorderColorHint>255 255 255</BorderColorHint>
                <FillColorHint>171 175 218</FillColorHint>
            </colorhints>
        </part>
        <part name="ThumbBtnVert">
            <colorhints>
                <BorderColorHint>255 255 255</BorderColorHint>
                <FillColorHint>171 175 218</FillColorHint>
            </colorhints>
        </part>
        <part name="UpperTrackHorz">
            <colorhints>
                <FillColorHint>244 244 244</FillColorHint>
            </colorhints>
        </part>
        <part name="UpperTrackVert">
            <colorhints>
                <FillColorHint>244 244 244</FillColorHint>
            </colorhints>
        </part>
        <!-- part name="GripperHorz"></part-->
        <!-- part name="GripperVert"></part-->
    </class>

    <!-- 
    //
    //    Spin Style, implemented by Spin
    //
    -->
    <class name="SpinStyle">
        <part name="Down">
            <colorhints>
                <BorderColorHint>130 135 144</BorderColorHint>
                <FillColorHint>244 244 244</FillColorHint>
            </colorhints>
        </part>
        <part name="DownHorz">
            <colorhints>
                <BorderColorHint>130 135 144</BorderColorHint>
                <FillColorHint>244 244 244</FillColorHint>
            </colorhints>
        </part>
        <part name="Up">
            <colorhints>
                <BorderColorHint>130 135 144</BorderColorHint>
                <FillColorHint>244 244 244</FillColorHint>
            </colorhints>
        </part>
        <part name="UpHorz">
            <colorhints>
                <BorderColorHint>130 135 144</BorderColorHint>
                <FillColorHint>244 244 244</FillColorHint>
            </colorhints>
        </part>
    </class>

    <!-- 
    //
    //    Status Style, implemented by Status
    //
    -->
    <class name="StatusStyle">
        <part name="Gripper">
            <colorhints>
                <FillColorHint>119 119 192</FillColorHint>
            </colorhints>
        </part>
        <part name="Pane">
            <colorhints>
                <FillColorHint>119 119 92</FillColorHint>
            </colorhints>
        </part>
        <colorhints>
            <FillColorHint>177 183 187</FillColorHint>
        </colorhints>
        <!-- part name="GripperPane"></part-->
    </class>

    <!-- 
    //
    //    Tab Style, implemented by Tab
    //
    -->
    <class name="TabStyle">
        <part name="Body">
            <colorhints>
                <FillColorHint>244 244 244</FillColorHint>
            </colorhints>
        </part>
        <part name="AeroWizardBody">
            <colorhints>
                <FillColorHint>255 255 255</FillColorHint>
            </colorhints>
        </part>
        <part name="Pane">
            <colorhints>
                <BorderColorHint>145 155 156</BorderColorHint>
                <FillColorHint>247 247 249</FillColorHint>
            </colorhints>
        </part>
        <part name="TabItem">
            <colorhints>
                <AccentColorHint>255 200 60</AccentColorHint>
                <BorderColorHint>146 146 146</BorderColorHint>
                <FillColorHint>240 241 245</FillColorHint>
            </colorhints>
        </part>
        <!-- part name="TabItemBothEdge"></part-->
        <!-- part name="TabItemLeftEdge"></part-->
        <!-- part name="TabItemRightEdge"></part-->
        <!-- part name="TopTabItem"></part-->
        <!-- part name="TopTabItemBothEdge"></part-->
        <!-- part name="TopTabItemLeftEdge"></part-->
        <!-- part name="TopTabItemRightEdge"></part-->
    </class>

    <!-- 
      //
      //    Task Dialog Style, implemented by TaskDialog
      //
      -->
    <class name="TaskDialogStyle">
        <part name="MainInstructionPane">
            <Font>##TextStyle.MainInstruction.Font</Font>
            <TextColor>##TextStyle.MainInstruction.TextColor</TextColor>
            <ClassicValue type="Font">##TextStyle.MainInstruction.ClassicFont</ClassicValue>
            <ClassicValue type="TextColor">##TextStyle.MainInstruction.ClassicTextColor</ClassicValue>
        </part>
        <part name="ContentPane">
            <Font>##TextStyle.BodyText.Font</Font>
            <TextColor>##TextStyle.BodyText.TextColor</TextColor>
            <ClassicValue type="Font">##TextStyle.BodyText.ClassicFont</ClassicValue>
            <ClassicValue type="TextColor">##TextStyle.BodyText.ClassicTextColor</ClassicValue>
        </part>
        <part name="ExpandedContent">
            <Font>##TextStyle.BodyText.Font</Font>
            <TextColor>##TextStyle.BodyText.TextColor</TextColor>
            <ClassicValue type="Font">##TextStyle.BodyText.ClassicFont</ClassicValue>
            <ClassicValue type="TextColor">##TextStyle.BodyText.ClassicTextColor</ClassicValue>
        </part>
        <part name="ButtonSection">
            <Font>##TextStyle.BodyText.Font</Font>
            <TextColor>##TextStyle.BodyText.TextColor</TextColor>
            <ClassicValue type="Font">##TextStyle.BodyText.ClassicFont</ClassicValue>
            <ClassicValue type="TextColor">##TextStyle.BodyText.ClassicTextColor</ClassicValue>
        </part>
        <part name="ExpandoText">
            <Font>##TextStyle.BodyText.Font</Font>
            <TextColor>##TextStyle.BodyText.TextColor</TextColor>
            <ClassicValue type="Font">##TextStyle.BodyText.ClassicFont</ClassicValue>
            <ClassicValue type="TextColor">##TextStyle.BodyText.ClassicTextColor</ClassicValue>
        </part>
        <part name="ExpandedFooterArea">
            <Font>##TextStyle.BodyText.Font</Font>
            <TextColor>##TextStyle.BodyText.TextColor</TextColor>
            <ClassicValue type="Font">##TextStyle.BodyText.ClassicFont</ClassicValue>
            <ClassicValue type="TextColor">##TextStyle.BodyText.ClassicTextColor</ClassicValue>
        </part>
        <part name="VerificationText">
            <Font>##TextStyle.BodyText.Font</Font>
            <TextColor>##TextStyle.BodyText.TextColor</TextColor>
            <ClassicValue type="Font">##TextStyle.BodyText.ClassicFont</ClassicValue>
            <ClassicValue type="TextColor">##TextStyle.BodyText.ClassicTextColor</ClassicValue>
        </part>
        <part name="FootnotePane">
            <Font>##TextStyle.BodyText.Font</Font>
            <TextColor>##TextStyle.BodyText.TextColor</TextColor>
            <ClassicValue type="Font">##TextStyle.BodyText.ClassicFont</ClassicValue>
            <ClassicValue type="TextColor">##TextStyle.BodyText.ClassicTextColor</ClassicValue>
        </part>
        <part name="RadioButtonPane">
            <Caption>
                <Font>##TextStyle.BodyText.Font</Font>
                <TextColor>##TextStyle.BodyText.TextColor</TextColor>
                <ClassicValue type="Font">##TextStyle.BodyText.ClassicFont</ClassicValue>
                <ClassicValue type="TextColor">##TextStyle.BodyText.ClassicTextColor</ClassicValue>
            </Caption>
        </part>
      <!-- part name="PrimaryPanel"></part-->
      <!-- part name="MainIcon"></part-->
      <!-- part name="CommandLinkPane"></part-->
      <!-- part name="SecondaryPanel"></part-->
      <!-- part name="ControlPane"></part-->
      <!-- part name="ButtonWrapper"></part-->
      <!-- part name="ExpandoButton"></part-->
      <!-- part name="FootnoteSeparator"></part-->
      <!-- part name="ProgressBar"></part-->
      <!-- part name="ImageAlignment"></part-->
    </class>

    <!-- 
    //
    //    Abstract Text Style class
    //
    -->
    <class name="TextStyle">
        <part name="MainInstruction">
            <caption>
                <TextColor>0 51 153</TextColor>
                <Font>Segoe UI, 12, Quality:ClearType</Font>
                <ClassicValue type="TextColor">WindowText</ClassicValue>
                <ClassicValue type="Font">CaptionFont</ClassicValue>
            </caption>
        </part>
        <part name="Instruction">
            <caption>
                <TextColor>0 51 153</TextColor>
                <Font>Segoe UI, 9, Quality:ClearType</Font>
                <ClassicValue type="TextColor">WindowText</ClassicValue>
                <ClassicValue type="Font">MenuFont</ClassicValue>
            </caption>
        </part>
        <part name="BodyTitle">
            <caption>
                <TextColor>0 0 0</TextColor>
                <Font>Segoe UI, 9, Bold, Quality:ClearType</Font>
                <ClassicValue type="TextColor">WindowText</ClassicValue>
                <ClassicValue type="Font">MenuFont;;bold</ClassicValue>
            </caption>
        </part>
        <part name="BodyText">
            <caption>
                <TextColor>0 0 0</TextColor>
                <Font>Segoe UI, 9, Quality:ClearType</Font>
                <ClassicValue type="TextColor">WindowText</ClassicValue>
                <ClassicValue type="Font">MenuFont</ClassicValue>
            </caption>
        </part>
        <part name="SecondaryText">
            <caption>
                <TextColor>0 0 0</TextColor>
                <Font>Segoe UI, 9, Quality:ClearType</Font>
                <ClassicValue type="TextColor">WindowText</ClassicValue>
                <ClassicValue type="Font">MenuFont</ClassicValue>
            </caption>
        </part>
        <part name="HyperLinkText">
            <caption>
                <TextColor>0 102 204</TextColor>
                <Font>Segoe UI, 9, Quality:ClearType</Font>
                <ClassicValue type="TextColor">WindowText</ClassicValue>
                <ClassicValue type="Font">MenuFont</ClassicValue>
            </caption>
            <state name="Normal">
                <caption>
                    <ClassicValue type="TextColor">WindowText</ClassicValue>
                    <ClassicValue type="Font">MenuFont</ClassicValue>
                </caption>
            </state>
            <state name="Hot">
                <caption>
                    <TextColor>51 153 255</TextColor>
                    <Font>Segoe UI, 9, Underline, Quality:ClearType</Font>
                    <ClassicValue type="TextColor">HotLight</ClassicValue>
                    <ClassicValue type="Font">MenuFont;;;underline</ClassicValue>
                </caption>
            </state>
            <state name="Pressed">
                <caption>
                    <TextColor>51 153 255</TextColor>
                    <Font>Segoe UI, 9, Underline, Quality:ClearType</Font>
                    <ClassicValue type="TextColor">WindowText</ClassicValue>
                    <ClassicValue type="Font">MenuFont;;;underline</ClassicValue>
                </caption>
            </state>
            <state name="Disabled">
                <caption>
                    <TextColor>126 133 156</TextColor>
                    <Font>Segoe UI, 9, Quality:ClearType</Font>
                    <ClassicValue type="TextColor">GrayText</ClassicValue>
                    <ClassicValue type="Font">MenuFont</ClassicValue>
                </caption>
            </state>
        </part>
        <part name="Expanded">
            <caption>
                <TextColor>0 0 0</TextColor>
                <Font>Segoe UI, 9, Quality:ClearType</Font>
                <ClassicValue type="TextColor">WindowText</ClassicValue>
                <ClassicValue type="Font">MenuFont</ClassicValue>
            </caption>
        </part>
        <part name="Label">
            <caption>
                <TextColor>0 0 0</TextColor>
                <Font>Segoe UI, 9, Quality:ClearType</Font>
                <ClassicValue type="TextColor">WindowText</ClassicValue>
                <ClassicValue type="Font">MenuFont</ClassicValue>
            </caption>
        </part>
        <part name="ControlLabel">
            <caption>
                <TextColor>0 102 204</TextColor>
                <Font>Segoe UI, 9, Quality:ClearType</Font>
                <ClassicValue type="TextColor">WindowText</ClassicValue>
                <ClassicValue type="Font">MenuFont</ClassicValue>
            </caption>
            <state name="Disabled">
                <TextColor>126, 133, 156</TextColor>
                <ClassicValue type="TextColor">GrayText</ClassicValue>
            </state>
        </part>
    </class>

    <!-- 
    //
    //    Toolbar Style, implemented by Toolbar
    //
    -->
    <class name="ToolbarStyle">
        <part name="Button">
            <colorhints>
                <BorderColorHint>130 135 144</BorderColorHint>
                <FillColorHint>244 244 244</FillColorHint>
            </colorhints>
        </part>
        <part name="Separator">
            <colorhints>
                <FillColorHint>130 135 144</FillColorHint>
            </colorhints>
        </part>
        <part name="DropdownButton">
            <colorhints>
                <BorderColorHint>130 135 144</BorderColorHint>
                <FillColorHint>244 244 244</FillColorHint>
            </colorhints>
        </part>
        <part name="SplitButton">
            <colorhints>
                <BorderColorHint>119 119 92</BorderColorHint>
                <FillColorHint>240 241 245</FillColorHint>
            </colorhints>
        </part>
        <part name="SplitButtonDropdown">
            <colorhints>
                <BorderColorHint>119 119 92</BorderColorHint>
                <FillColorHint>240 241 245</FillColorHint>
            </colorhints>
        </part>
        <!-- part name="SeparatorVert"></part-->
        <!-- part name="DropdownButtonGlyph"></part-->
    </class>

    <!-- 
    //
    //    Tooltip Style, implemented by Tooltip
    //
    -->
    <class name="TooltipStyle">
        <part name="Standard">
            <caption>
                <Font>##TextStyle.BodyText.Font</Font>
                <TextColor>87 87 87</TextColor>
                <ClassicValue type="TextColor">##TextStyle.BodyText.ClassicTextColor</ClassicValue>
                <ClassicValue type="Font">##TextStyle.BodyText.ClassicFont</ClassicValue>
            </caption>
        </part>
        <part name="StandardTitle">
            <caption>
                <Font>##TextStyle.BodyTitle.Font</Font>
                <TextColor>87 87 87</TextColor>
                <ClassicValue type="TextColor">##TextStyle.BodyText.ClassicTextColor</ClassicValue>
                <ClassicValue type="Font">##TextStyle.BodyText.ClassicFont</ClassicValue>
            </caption>
        </part>
        <part name="Balloon">
            <caption>
                <Font>##TextStyle.BodyText.Font</Font>
                <TextColor>##TextStyle.BodyText.TextColor</TextColor>
                <ClassicValue type="TextColor">##TextStyle.BodyText.ClassicTextColor</ClassicValue>
                <ClassicValue type="Font">##TextStyle.BodyText.ClassicFont</ClassicValue>
            </caption>
            <colorhints>
                <BorderColorHint>130 135 144</BorderColorHint>
                <FillColorHint>233 233 244</FillColorHint>
            </colorhints>
        </part>
        <part name="BalloonTitle">
            <caption>
                <Font>##TextStyle.MainInstruction.Font</Font>
                <TextColor>##TextStyle.MainInstruction.TextColor</TextColor>
                <ClassicValue type="TextColor">##TextStyle.BodyText.ClassicTextColor</ClassicValue>
                <ClassicValue type="Font">##TextStyle.BodyText.ClassicFont</ClassicValue>
            </caption>
        </part>
        <!-- part name="Close"></part-->
        <!-- part name="BalloonStem"></part-->
        <!-- part name="Wrench"></part-->
    </class>

    <!-- 
    //
    //    Trackbar Style, implemented by Trackbar
    //
    -->
    <class name="TrackBarStyle">
        <part name="Thumb">
            <colorhints>
                <AccentColorHint>71 196 70</AccentColorHint>
                <BorderColorHint>118 118 118</BorderColorHint>
                <FillColorHint>244 244 244</FillColorHint>
            </colorhints>
        </part>
        <part name="Track">
            <colorhints>
                <BorderColorHint>118 118 118</BorderColorHint>
                <FillColorHint>244 244 244</FillColorHint>
            </colorhints>
        </part>
        <!-- part name="ThumbBottom"></part-->
        <!-- part name="ThumbLeft"></part-->
        <!-- part name="ThumbRight"></part-->
        <!-- part name="ThumbTop"></part-->
        <!-- part name="ThumbVert"></part-->
        <!-- part name="Tics"></part-->
        <!-- part name="TicsVert"></part-->
        <!-- part name="TrackVert"></part-->
    </class>

    <!-- 
    //
    //    Treeview Style, implemented by Treeview
    //
    -->
    <class name="TreeViewStyle">
        <part name="Glyph">
            <colorhints>
                <AccentColorHint>71 196 70</AccentColorHint>
                <BorderColorHint>118 118 118</BorderColorHint>
                <FillColorHint>244 244 244</FillColorHint>
            </colorhints>
        </part>
        <colorhints>
            <AccentColorHint>71 196 70</AccentColorHint>
            <BorderColorHint>118 118 118</BorderColorHint>
            <FillColorHint>244 244 244</FillColorHint>
        </colorhints>
    </class>
    <!-- Treeitem implements the Explorer selection visuals -->
    <!--class name="Explorer::Treeview" inherits="Treeview">
        <part name="TreeItem"></part>
    </class-->

    <!-- 
    //
    //    Window Style, implemented by Window
    //
    //    Note: CompositedWindow::Window is a subclass of Window that is used by external applications 
    //    that want to draw their own captions when compositing.  It defines Caption and MaxCaption 
    //    parts for use with DrawThemeText(Ex). It is not meant to be used directly with DrawThemeBackground 
    //    as it currently only contains text color information.
    // 
    -->
    <class name="WindowStyle">
        <part name="Caption">
            <colorhints>
                <BorderColorHint>215 228 242</BorderColorHint>
                <FillColorHint>185 209 234</FillColorHint>
            </colorhints>
        </part>
        <part name="CloseButton">
            <colorhints>
                <BorderColorHint>255 255 255</BorderColorHint>
                <FillColorHint>228 93 61</FillColorHint>
            </colorhints>
        </part>
        <part name="HelpButton">
            <colorhints>
                <BorderColorHint>255 255 255</BorderColorHint>
                <FillColorHint>177 183 187</FillColorHint>
            </colorhints>
        </part>
        <part name="MaxButton">
            <colorhints>
                <BorderColorHint>255 255 255</BorderColorHint>
                <FillColorHint>177 183 187</FillColorHint>
            </colorhints>
        </part>
        <part name="MaxCaption">
            <colorhints>
                <FillColorHint>0 0 0</FillColorHint>
            </colorhints>
        </part>
        <part name="MDICloseButton">
            <colorhints>
                <BorderColorHint>118 118 118</BorderColorHint>
                <FillColorHint>240 241 245</FillColorHint>
            </colorhints>
        </part>
        <part name="MDIRestoreButton">
            <colorhints>
                <BorderColorHint>118 118 118</BorderColorHint>
                <FillColorHint>240 241 245</FillColorHint>
            </colorhints>
        </part>
        <part name="MinButton">
            <colorhints>
                <BorderColorHint>255 255 255</BorderColorHint>
                <FillColorHint>177 183 187</FillColorHint>
            </colorhints>
        </part>
        <part name="MinCaption">
            <colorhints>
                <FillColorHint>192 200 217</FillColorHint>
            </colorhints>
        </part>
        <part name="RestoreButton">
            <colorhints>
                <BorderColorHint>255 255 255</BorderColorHint>
                <FillColorHint>177 183 187</FillColorHint>
            </colorhints>
        </part>
        <!-- part name="CaptionSizingTemplate"></part-->
        <!-- part name="Dialog"></part-->
        <!-- part name="FrameBottom"></part-->
        <!-- part name="FrameLeft"></part-->
        <!-- part name="FrameRight"></part-->
        <!-- part name="MDIMinButton"></part-->
        <!-- part name="SmallCaption"></part-->
        <!-- part name="SmallCaptionSizingTemplate"></part-->
        <!-- part name="SmallCloseButton"></part-->
        <!-- part name="SmallFrameBottom"></part-->
        <!-- part name="SmallFrameLeft"></part-->
        <!-- part name="SmallFrameRight"></part-->
    </class>

</visualstyleguide>
=== C:/Users/treeman/Desktop/windows nt source code\xbox\Xbox Live Source\XONLINE_MAIN\public\ext\sdk\vs10rtm\SDK\include\winmeta.xml ===
<instrumentationManifest
    xmlns="http://schemas.microsoft.com/win/2004/08/events" 
    xmlns:win="http://manifests.microsoft.com/win/2004/08/windows/events"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://schemas.microsoft.com/win/2004/08/events eventman.xsd"    
    >
    <metadata name="evt:meta/winTypes">
        <channels>
            <channel name="TraceClassic" type="Debug" symbol="WINEVENT_CHANNEL_CLASSIC_TRACE"
                value="0" message="$(string.channel.TraceClassic)">
              Events for Classic ETW tracing.
            </channel>
            <channel name="System" type="Admin" symbol="WINEVENT_CHANNEL_GLOBAL_SYSTEM"
                isolation="System" value="8" message="$(string.channel.System)">
              Events for all installed system services.  This channel is secured to applications running under
              system service accounts or user applications running under local adminstrator privileges.
            </channel>
            <channel name="Application" type="Admin" symbol="WINEVENT_CHANNEL_GLOBAL_APPLICATION"
                isolation="Application" value="9" message="$(string.channel.Application)">
              Events for all user-level applications.  This channel is not secured and open to any applications.
              Applications which log extensive information should define an application-specific channel.
            </channel>
            <channel name="Security" type="Admin" symbol="WINEVENT_CHANNEL_GLOBAL_SECURITY"
                isolation="System"  value="10" message="$(string.channel.Security)">
              The Windows Audit Log.  For exclusive use of the Windows Local Security Authority.  User events
              may appear as audits if supported by the underlying application.
            </channel>
        </channels>

        <!-- Standard Windows system reporting levels -->
        <levels>
            <level name="win:LogAlways" symbol="WINEVENT_LEVEL_LOG_ALWAYS" value="0" message="$(string.level.LogAlways)"> Log Always </level>
            <level name="win:Critical" symbol="WINEVENT_LEVEL_CRITICAL" value="1" message="$(string.level.Critical)"> Only critical errors </level>
            <level name="win:Error" symbol="WINEVENT_LEVEL_ERROR" value="2" message="$(string.level.Error)"> All errors, includes win:Critical </level>
            <level name="win:Warning" symbol="WINEVENT_LEVEL_WARNING" value="3" message="$(string.level.Warning)"> All warnings, includes win:Error </level>
            <level name="win:Informational" symbol="WINEVENT_LEVEL_INFO" value="4" message="$(string.level.Informational)"> All informational content, including win:Warning </level>
            <level name="win:Verbose" symbol="WINEVENT_LEVEL_VERBOSE" value="5" message="$(string.level.Verbose)"> All tracing, including previous levels </level>

            <!-- The following are unused.  They are place holders so that users dont accidentally use those values in their own definitions -->
            <level name="win:ReservedLevel6" symbol="WINEVENT_LEVEL_RESERVED_6" value="6"/>
            <level name="win:ReservedLevel7" symbol="WINEVENT_LEVEL_RESERVED_7" value="7"/>
            <level name="win:ReservedLevel8" symbol="WINEVENT_LEVEL_RESERVED_8" value="8"/>
            <level name="win:ReservedLevel9" symbol="WINEVENT_LEVEL_RESERVED_9" value="9"/>
            <level name="win:ReservedLevel10" symbol="WINEVENT_LEVEL_RESERVED_10" value="10"/>
            <level name="win:ReservedLevel11" symbol="WINEVENT_LEVEL_RESERVED_11" value="11"/>
            <level name="win:ReservedLevel12" symbol="WINEVENT_LEVEL_RESERVED_12" value="12"/>
            <level name="win:ReservedLevel13" symbol="WINEVENT_LEVEL_RESERVED_13" value="13"/>
            <level name="win:ReservedLevel14" symbol="WINEVENT_LEVEL_RESERVED_14" value="14"/>
            <level name="win:ReservedLevel15" symbol="WINEVENT_LEVEL_RESERVED_15" value="15"/>
            <!-- End of reserved values -->
        </levels>

        <!-- Standard Windows system tasks -->
        <tasks>
            <task name="win:None" value="0" symbol="WINEVENT_TASK_NONE" message="$(string.task.None)"> undefined task </task>
        </tasks>

        <!-- Standard Windows system opcodes -->
        <opcodes>    
            <opcode name="win:Info" value="0" symbol="WINEVENT_OPCODE_INFO" message="$(string.opcode.Info)"> An informational event </opcode>
            <opcode name="win:Start" value="1" symbol="WINEVENT_OPCODE_START" message="$(string.opcode.Start)"> An activity start event </opcode>
            <opcode name="win:Stop" value="2" symbol="WINEVENT_OPCODE_STOP" message="$(string.opcode.Stop)"> An activity end event </opcode>
            <opcode name="win:DC_Start" value="3" symbol="WINEVENT_OPCODE_DC_START" message="$(string.opcode.DCStart)"> A trace collection start event </opcode>
            <opcode name="win:DC_Stop" value="4" symbol="WINEVENT_OPCODE_DC_STOP" message="$(string.opcode.DCStop)"> A trace collection end event </opcode>
            <opcode name="win:Extension" value="5" symbol="WINEVENT_OPCODE_EXTENSION" message="$(string.opcode.Extension)"> An extensional event </opcode>
            <opcode name="win:Reply" value="6" symbol="WINEVENT_OPCODE_REPLY" message="$(string.opcode.Reply)"> A reply event </opcode>
            <opcode name="win:Resume" value="7" symbol="WINEVENT_OPCODE_RESUME" message="$(string.opcode.Resume)"> An event representing the activity resuming from the suspension </opcode>
            <opcode name="win:Suspend" value="8" symbol="WINEVENT_OPCODE_SUSPEND" message="$(string.opcode.Suspend)"> An event representing the activity is suspended, pending another activity's completion </opcode>
            <opcode name="win:Send" value="9" symbol="WINEVENT_OPCODE_SEND" message="$(string.opcode.Send)"> An event representing the activity is transferred to another component, and can continue to work </opcode>
            
            <!-- The following are unused.  They are place holders so that users dont accidentally use those values in their own definitions -->
            <opcode name="win:Receive" value="240" symbol="WINEVENT_OPCODE_RECEIVE" message="$(string.opcode.Receive)"> An event representing receiving an activity transfer from another component </opcode>
            <opcode name="win:ReservedOpcode241" symbol="WINEVENT_OPCODE_RESERVED_241" value="241"/>
            <opcode name="win:ReservedOpcode242" symbol="WINEVENT_OPCODE_RESERVED_242" value="242"/>
            <opcode name="win:ReservedOpcode243" symbol="WINEVENT_OPCODE_RESERVED_243" value="243"/>
            <opcode name="win:ReservedOpcode244" symbol="WINEVENT_OPCODE_RESERVED_244" value="244"/>
            <opcode name="win:ReservedOpcode245" symbol="WINEVENT_OPCODE_RESERVED_245" value="245"/>
            <opcode name="win:ReservedOpcode246" symbol="WINEVENT_OPCODE_RESERVED_246" value="246"/>
            <opcode name="win:ReservedOpcode247" symbol="WINEVENT_OPCODE_RESERVED_247" value="247"/>
            <opcode name="win:ReservedOpcode248" symbol="WINEVENT_OPCODE_RESERVED_248" value="248"/>
            <opcode name="win:ReservedOpcode249" symbol="WINEVENT_OPCODE_RESERVED_249" value="249"/>
            <opcode name="win:ReservedOpcode250" symbol="WINEVENT_OPCODE_RESERVED_250" value="250"/>
            <opcode name="win:ReservedOpcode251" symbol="WINEVENT_OPCODE_RESERVED_251" value="251"/>
            <opcode name="win:ReservedOpcode252" symbol="WINEVENT_OPCODE_RESERVED_252" value="252"/>
            <opcode name="win:ReservedOpcode253" symbol="WINEVENT_OPCODE_RESERVED_253" value="253"/>
            <opcode name="win:ReservedOpcode254" symbol="WINEVENT_OPCODE_RESERVED_254" value="254"/>
            <opcode name="win:ReservedOpcode255" symbol="WINEVENT_OPCODE_RESERVED_255" value="255"/> 
            <!-- End of reserved values -->
        </opcodes>

        <!-- Standard Windows system keywords -->
        <keywords>
            <keyword name="win:AnyKeyword" mask="0x0" symbol="WINEVT_KEYWORD_ANY" message="$(string.keyword.AnyKeyword)">
                 Wild card value
            </keyword>

            <keyword name="win:ResponseTime" mask="0x1000000000000" symbol="WINEVENT_KEYWORD_RESPONSE_TIME" message="$(string.keyword.ResponseTime)">
                 Attached to all events providing response time information
            </keyword>
            <keyword name="win:WDIContext" mask="0x2000000000000" symbol="WINEVENT_KEYWORD_WDI_CONTEXT" message="$(string.keyword.WDIContext)">
                 Attached to all WDI context events
            </keyword>
            <keyword name="win:WDIDiag" mask="0x4000000000000" symbol="WINEVENT_KEYWORD_WDI_DIAG" message="$(string.keyword.WDIDiag)">
                 Attached to all WDI diag events
            </keyword>
            <keyword name="win:SQM" mask="0x8000000000000" symbol="WINEVENT_KEYWORD_SQM" message="$(string.keyword.SQM)">
                 Attached to all SQM events
            </keyword>
            <keyword name="win:AuditFailure" mask="0x10000000000000" symbol="WINEVENT_KEYWORD_AUDIT_FAILURE" message="$(string.keyword.AuditFailure)">
                 Attached to all failed security audits
            </keyword>
            <keyword name="win:AuditSuccess" mask="0x20000000000000" symbol="WINEVENT_KEYWORD_AUDIT_SUCCESS" message="$(string.keyword.AuditSuccess)">
                 Attached to all successful security audits
            </keyword>
            <keyword name="win:CorrelationHint" mask="0x40000000000000" symbol="WINEVENT_KEYWORD_CORRELATION_HINT" message="$(string.keyword.CorrelationHint)">
                 Attached to transfer events where the related Activity ID is a computed value and not a GUID
            </keyword>
            <keyword name="win:EventlogClassic" mask="0x80000000000000" symbol="WINEVENT_KEYWORD_EVENTLOG_CLASSIC" message="$(string.keyword.Classic)">
                 Attached to events raised using classic eventlog API
            </keyword>

            <!-- The following are used to pass channel information.  They are place holders so that users dont accidentally use those values in their own definitions -->
            <keyword name="win:ReservedKeyword56" mask="0x100000000000000" symbol="WINEVENT_KEYWORD_RESERVED_56"/>
            <keyword name="win:ReservedKeyword57" mask="0x200000000000000" symbol="WINEVENT_KEYWORD_RESERVED_57"/>
            <keyword name="win:ReservedKeyword58" mask="0x400000000000000" symbol="WINEVENT_KEYWORD_RESERVED_58"/>
            <keyword name="win:ReservedKeyword59" mask="0x800000000000000" symbol="WINEVENT_KEYWORD_RESERVED_59"/>
            <keyword name="win:ReservedKeyword60" mask="0x1000000000000000" symbol="WINEVENT_KEYWORDE_RESERVED_60"/>
            <keyword name="win:ReservedKeyword61" mask="0x2000000000000000" symbol="WINEVENT_KEYWORD_RESERVED_61"/>
            <keyword name="win:ReservedKeyword62" mask="0x4000000000000000" symbol="WINEVENT_KEYWORD_RESERVED_62"/>
            <keyword name="win:ReservedKeyword63" mask="0x8000000000000000" symbol="WINEVENT_KEYWORD_RESERVED_63"/>
            <!-- End of reserved values -->
        </keywords>
        
        <!-- Standard Windows & CLR system types -->
        <types xmlns:xs="http://www.w3.org/2001/XMLSchema">
            <xmlTypes>
                 <xmlType name="xs:string" value="1" symbol="WINEVENT_OUT_TYPE_STRING"/>
                 <xmlType name="xs:dateTime" value="2" symbol="WINEVENT_OUT_TYPE_DATE_TIME"/>
                 <xmlType name="xs:byte" value="3" symbol="WINEVENT_OUT_TYPE_BYTE"/>
                 <xmlType name="xs:unsignedByte" value="4" symbol="WINEVENT_OUT_TYPE_UNSIGNED_BYTE"/>
                 <xmlType name="xs:short" value="5" symbol="WINEVENT_OUT_TYPE_SHORT"/>
                 <xmlType name="xs:unsignedShort" value="6" symbol="WINEVENT_OUT_TYPE_UNSIGNED_SHORT"/>
                 <xmlType name="xs:int" value="7" symbol="WINEVENT_OUT_TYPE_INT"/>
                 <xmlType name="xs:unsignedInt" value="8" symbol="WINEVENT_OUT_TYPE_UNSIGNED_INT"/>
                 <xmlType name="xs:long" value="9" symbol="WINEVENT_OUT_TYPE_LONG"/>
                 <xmlType name="xs:unsignedLong" value="10" symbol="WINEVENT_OUT_TYPE_UNSIGNED_LONG"/>
                 <xmlType name="xs:float" value="11" symbol="WINEVENT_OUT_TYPE_FLOAT"/>
                 <xmlType name="xs:double" value="12" symbol="WINEVENT_OUT_TYPE_DOUBLE"/>
                 <xmlType name="xs:boolean" value="13" symbol="WINEVENT_OUT_TYPE_BOOLEAN"/>
                 <xmlType name="xs:GUID" value="14" symbol="WINEVENT_OUT_TYPE_GUID"/>
                 <xmlType name="xs:hexBinary" value="15" symbol="WINEVENT_OUT_TYPE_HEXBINARY"/>
                 <xmlType name="win:HexInt8" value="16" symbol="WINEVENT_OUT_TYPE_HEX_INT8"/>
                 <xmlType name="win:HexInt16" value="17" symbol="WINEVENT_OUT_TYPE_HEX_INT16"/>
                 <xmlType name="win:HexInt32" value="18" symbol="WINEVENT_OUT_TYPE_HEX_INT32"/>
                 <xmlType name="win:HexInt64" value="19" symbol="WINEVENT_OUT_TYPE_HEX_INT64"/>
                 <xmlType name="win:PID" value="20" symbol="WINEVENT_OUT_TYPE_PID"/>
                 <xmlType name="win:TID" value="21" symbol="WINEVENT_OUT_TYPE_TID"/>
                 <xmlType name="win:Port" value="22" symbol="WINEVENT_OUT_TYPE_PORT"/>            
                 <xmlType name="win:IPv4" value="23" symbol="WINEVENT_OUT_TYPE_IPV4"/>
                 <xmlType name="win:IPv6" value="24" symbol="WINEVENT_OUT_TYPE_IPV6"/>             
                 <xmlType name="win:SocketAddress" value="25" symbol="WINEVENT_OUT_TYPE_SOCKET_ADDRESS"/>    
                 <xmlType name="win:CIMDateTime" value="26" symbol="WINEVENT_OUT_TYPE_CIMDATETIME"/>    
                 <xmlType name="win:ETWTIME" value="27" symbol="WINEVENT_OUT_TYPE_ETWTIME"/>
                 <xmlType name="win:Xml" value="28" symbol="WINEVENT_OUT_TYPE_XML"/>
                 <xmlType name="win:ErrorCode" value="29" symbol="WINEVENT_OUT_TYPE_ERROR_CODE"/>
                 <xmlType name="win:Win32Error" value="30" symbol="WINEVENT_OUT_TYPE_WIN32_ERROR"/>
                 <xmlType name="win:NTSTATUS" value="31" symbol="WINEVENT_OUT_TYPE_NTSTATUS_ERROR"/>
                 <xmlType name="win:HResult" value="32" symbol="WINEVENT_OUT_TYPE_HRESULT_ERROR"/>
                 <xmlType name="win:DateTimeCultureInsensitive" value="33" symbol="WINEVENT_OUT_TYPE_DATE_TIME_CULTURE_INSENSITIVE"/>
            </xmlTypes>
            <inTypes>
                <inType name="win:UnicodeString" value="1" symbol="WINEVENT_TYPE_NULL_TERMINATED_STRING">
                    <description> A NULL-terminated UNICODE string. </description>
                    <outType default="true" xmlType="xs:string" />
                    <outType xmlType="win:Xml" />
                </inType>
                <inType name="win:AnsiString" value="2" symbol="WINEVENT_TYPE_NULL_TERMINATED_ANSI_STRING">
                    <description> A NULL-terminated ANSI string. </description>
                    <outType default="true" xmlType="xs:string" />
                    <outType xmlType="win:Xml" />                
                </inType>
                <inType name="win:Int8" value="3" symbol="WINEVENT_TYPE_INT8">
                    <description> A signed 8-bit integer. </description>
                    <outType default="true" xmlType="xs:byte" />
                </inType>
                <inType name="win:UInt8" value="4" symbol="WINEVENT_TYPE_UINT8">
                    <description> An unsigned 8-bit integer. </description>
                    <outType default="true" xmlType="xs:unsignedByte" />
                    <outType xmlType="win:HexInt8">An integer in hex format</outType>
                </inType>
                <inType name="win:Int16" value="5" symbol="WINEVENT_TYPE_INT16">
                    <description> A signed 16-bit integer.</description>
                    <outType default="true" xmlType="xs:short" />
                </inType>
                <inType name="win:UInt16" value="6" symbol="WINEVENT_TYPE_UINT16">
                    <description> An unsigned 16-bit integer </description>
                    <outType default="true" xmlType="xs:unsignedShort" />
                    <outType xmlType="win:Port" />
                    <outType xmlType="win:HexInt16">An integer in hex format</outType>
                </inType>
                <inType name="win:Int32" value="7" symbol="WINEVENT_TYPE_INT32">
                    <description> A signed 32-bit integer. </description>
                    <outType default="true" xmlType="xs:int" />
                    <outType xmlType="win:HResult"> A message string corresponding to system HResult error code. </outType>
                </inType>
                <inType name="win:UInt32" value="8" symbol="WINEVENT_TYPE_UINT32">
                    <description> An unsigned 32-bit integer. </description>
                    <outType default="true" xmlType="xs:unsignedInt" />
                    <outType xmlType="win:PID" />
                    <outType xmlType="win:TID" />
                    <outType xmlType="win:IPv4" />
                    <outType xmlType="win:ETWTIME" />
                    <outType xmlType="win:ErrorCode"> Deprecated, same as win:HexInt32. </outType>
                    <outType xmlType="win:Win32Error"> A message string corresponding to system win32 error code. </outType>
                    <outType xmlType="win:NTSTATUS"> A message string corresponding to system NTSTATUS error code. </outType>
                    <outType xmlType="win:HexInt32">An integer in hex format</outType>
                </inType>
                <inType name="win:Int64" value="9" symbol="WINEVENT_TYPE_INT64">
                    <description> A signed 64-bit integer. </description>
                    <outType default="true" xmlType="xs:long" />
                </inType>
                <inType name="win:UInt64" value="10" symbol="WINEVENT_TYPE_UINT64">
                    <description> An unsigned 64-bit integer. </description>
                    <outType default="true" xmlType="xs:unsignedLong" />
                    <outType xmlType="win:ETWTIME" />
                    <outType xmlType="win:HexInt64">An integer in hex format</outType>
                </inType>
                <inType name="win:Float" value="11" symbol="WINEVENT_TYPE_FLOAT">
                    <description> An IEEE 4-byte floating-point value </description>
                    <outType default="true" xmlType="xs:float" />
                </inType>
                <inType name="win:Double" value="12" symbol="WINEVENT_TYPE_DOUBLE">
                    <description> An IEEE 8-byte floating-point value </description>
                    <outType default="true" xmlType="xs:double" />
                </inType>
                <inType name="win:Boolean" value="13" symbol="WINEVENT_TYPE_BOOL">
                    <description> A 32-bit value where 0 is false, 1 is true. </description>
                    <outType default="true" xmlType="xs:boolean"/>
                </inType>            
                <inType name="win:Binary" value="14" symbol="WINEVENT_TYPE_BINARY">
                    <description>Variable size binary data.</description>
                    <outType default="true" xmlType="xs:hexBinary"/>
                    <outType xmlType="win:IPv6"/>
                    <outType xmlType="win:SocketAddress"/>
                </inType>            
                <inType name="win:GUID" value="15" symbol="WINEVENT_TYPE_GUID">
                    <description> A DCE-compliant 128-bit UUID. XML spec: {12345678-1234-4667-1234-123456789abc}</description>
                    <outType default="true" xmlType="xs:GUID"/>
                </inType>
                <inType name="win:Pointer" value="16" symbol="WINEVENT_TYPE_POINTER">
                    <description> A pointer; sized to the current platform (32-bit or 64-bit). XML spec: hex representation of a pointer</description>
                    <outType default="true" xmlType="win:HexInt64"/>
                </inType>
                <inType name="win:FILETIME" value="17" symbol="WINEVENT_TYPE_FILETIME">
                    <description> A Windows FILETIME struct. </description>
                    <outType default="true" xmlType="xs:dateTime" />
                    <outType xmlType="win:DateTimeCultureInsensitive"> DateTime string without any marker related with culture. Ex) Left-To-Right</outType>
                </inType>
                <inType name="win:SYSTEMTIME" value="18" symbol="WINEVENT_TYPE_SYSTEMTIME">
                    <description> A Windows SYSTEMTIME struct.</description>
                    <outType default="true" xmlType="xs:dateTime" />
                    <outType xmlType="win:DateTimeCultureInsensitive"> DateTime string without any marker related with culture. Ex) Left-To-Right</outType>
                </inType>
                <inType name="win:SID" value="19" symbol="WINEVENT_TYPE_SID">
                    <description> A self-relative Windows SID structure. XML spec: S-1-0-0.</description>
                    <outType default="true" xmlType="xs:string"/>
                </inType>            
                <inType name="win:HexInt32" value="20" symbol="WINEVENT_TYPE_HEXINT32">
                    <description> A hexidecimal representation of an unsigned 32-bit integer. </description>
                    <outType default="true" xmlType="win:HexInt32"/>
                    <outType xmlType="win:ErrorCode"> Deprecated, same as win:HexInt32. </outType>
                    <outType xmlType="win:Win32Error"> A message string corresponding to system win32 error code. </outType>
                    <outType xmlType="win:NTSTATUS"> A message string corresponding to system NTSTATUS error code. </outType>
                </inType>
                <inType name="win:HexInt64" value="21" symbol="WINEVENT_TYPE_HEXINT64">
                    <description> A hexidecimal representation of an unsigned 64-bit integer. </description>
                    <outType default="true" xmlType="win:HexInt64"/>
                </inType>
            </inTypes>
        </types>

        <messageTable>
            <!-- Categories for classic publishers -->
            <message value="1" message="$(string.category.Devices)"/>
            <message value="2" message="$(string.category.Disk)"/>
            <message value="3" message="$(string.category.Printers)"/>
            <message value="4" message="$(string.category.Services)"/>
            <message value="5" message="$(string.category.Shell)"/>
            <message value="6" message="$(string.category.SystemEvent)"/>
            <message value="7" message="$(string.category.Network)"/>

            <!-- Channel names for classic global logs -->
            <message value="256" message="$(string.channel.Application)"/>
            <message value="257" message="$(string.channel.Security)"/>
            <message value="258" message="$(string.channel.System)"/>
        </messageTable>

    </metadata>
    
    <localization>
        <resources culture="en-US">
            <stringTable>
                <!-- Categories for classic publishers.  THESE MUST START AT ENTRY 0! -->
                <string id="category.Reserved" value="Reserved"/>
                <string id="category.Devices" value="Devices"/>
                <string id="category.Disk" value="Disk"/>
                <string id="category.Printers" value="Printers"/>
                <string id="category.Services" value="Services"/>
                <string id="category.Shell" value="Shell"/>
                <string id="category.SystemEvent" value="System Event"/>
                <string id="category.Network" value="Network"/>

                <string id="level.LogAlways" value="Log Always"/>
                <string id="level.Critical" value="Critical"/>
                <string id="level.Error" value="Error"/>
                <string id="level.Warning" value="Warning"/>
                <string id="level.Informational" value="Information"/>
                <string id="level.Verbose" value="Verbose"/>

                <string id="opcode.Info" value="Info"/>
                <string id="opcode.Start" value="Start"/>
                <string id="opcode.Stop" value="Stop"/>
                <string id="opcode.DCStart" value="DCStart"/>
                <string id="opcode.DCStop" value="DCStop"/>
                <string id="opcode.Extension" value="Extension"/>
                <string id="opcode.Reply" value="Reply"/>
                <string id="opcode.Resume" value="Resume"/>
                <string id="opcode.Suspend" value="Suspend"/>
                <string id="opcode.Send" value="Send"/>
                <string id="opcode.Receive" value="Receive"/>
 
                <string id="task.None" value="None"/>

                <string id="keyword.AnyKeyword" value="AnyKeyword"/>
                <string id="keyword.ResponseTime" value="Response Time"/>
                <string id="keyword.WDIContext" value="WDI Context"/>
                <string id="keyword.WDIDiag" value="WDI Diag"/>
                <string id="keyword.SQM" value="SQM"/>
                <string id="keyword.AuditFailure" value="Audit Failure"/>
                <string id="keyword.AuditSuccess" value="Audit Success"/>
                <string id="keyword.CorrelationHint" value="Correlation Hint"/>
                <string id="keyword.Classic" value="Classic"/>

                <string id="channel.TraceClassic" value="TraceClassic"/>
                <string id="channel.System" value="System"/>
                <string id="channel.Application" value="Application"/>
                <string id="channel.Security" value="Security"/>
            </stringTable>
        </resources>
    </localization>

</instrumentationManifest>
=== C:/Users/treeman/Desktop/windows nt source code\xbox\Xbox Live Source\XONLINE_MAIN\public\ext\sdk\vs10rtm\VC\atlmfc\include\Aqua\Style.xml ===
<STYLE>
	<VERSION>
		<NUMBER>2007</NUMBER>
		<TYPE>11</TYPE>
		<ID_PREFIX>AQUA_</ID_PREFIX>
	</VERSION>
	<DESCRIPTION>
		<NAME>Aqua</NAME>
	</DESCRIPTION>
	<GLOBALS>
		<BarText>0, 21, 110</BarText>
		<BarFace>206, 212, 225</BarFace>
		<ActiveCaption>218, 223, 234</ActiveCaption>
		<CaptionText>21, 74, 147</CaptionText>
		<InactiveCaption>181, 189, 211</InactiveCaption>
		<InactiveCaptionText>21, 74, 147</InactiveCaptionText>
		<FloatToolBarBorder>141, 149, 173</FloatToolBarBorder>
		<BarShadow>177, 187, 198</BarShadow>
		<BarDkShadow>106, 112, 128</BarDkShadow>
		<BarLight>218, 223, 234</BarLight>
		<AutoPremultiply>TRUE</AutoPremultiply>
		<HighlightGradientDark>247, 192, 91</HighlightGradientDark>
		<HighlightGradientLight>255, 255, 220</HighlightGradientLight>
		<HighlightDnGradientDark>247, 218, 124</HighlightDnGradientDark>
		<HighlightDnGradientLight>232, 127, 8</HighlightDnGradientLight>
		<HighlightCheckedGradientDark>238, 149, 21</HighlightCheckedGradientDark>
		<HighlightCheckedGradientLight>251, 230, 148</HighlightCheckedGradientLight>
		<PressedButtonBorder></PressedButtonBorder>
		<Highlight>180, 201, 233</Highlight>
		<HighlightText>0, 0, 0</HighlightText>
		<TOOLTIP>
			<DRAW_SEPARATOR>FALSE</DRAW_SEPARATOR>
			<ROUNDED_CORNERS>TRUE</ROUNDED_CORNERS>
			<COLOR_FILL>255, 255, 255</COLOR_FILL>
			<COLOR_FILLGRADIENT>206, 212, 225</COLOR_FILLGRADIENT>
			<COLOR_TEXT>76, 76, 76</COLOR_TEXT>
			<COLOR_BORDER>118, 118, 118</COLOR_BORDER>
		</TOOLTIP>
	</GLOBALS>
	<MAINWND>
		<CAPTION>
			<ActiveStart>187, 186, 186</ActiveStart>
			<ActiveFinish>248, 248, 248</ActiveFinish>
			<InactiveStart>224, 224, 224</InactiveStart>
			<InactiveFinish>252, 252, 252</InactiveFinish>
			<ActiveText>69, 69, 69</ActiveText>
			<InactiveText>163, 163, 163</InactiveText>
			<ActiveTitleText>123, 123, 123</ActiveTitleText>
			<InactiveTitleText>183, 183, 183</InactiveTitleText>
			<TextCenter>FALSE</TextCenter>
			<BORDER>
				<SIZE>35, 31</SIZE>
				<CORNERS>14, 22, 14, 1</CORNERS>
				<SIDES>14, 2, 14, 1</SIDES>
			</BORDER>
			<BUTTONS>
				<NORMAL>
					<ConstSize>21, 21</ConstSize>
					<IconSize>21, 21</IconSize>
					<SIZE>21, 21</SIZE>
					<CORNERS>4, 4, 4, 4</CORNERS>
				</NORMAL>
				<SMALL>
					<ConstSize>16, 16</ConstSize>
					<IconSize>16, 14</IconSize>
					<SIZE>21, 21</SIZE>
					<CORNERS>4, 4, 4, 4</CORNERS>
				</SMALL>
			</BUTTONS>
		</CAPTION>
		<ROUND_BORDER>9, 9</ROUND_BORDER>
		<BORDER>
			<SIZE>35, 23</SIZE>
			<CORNERS>17, 0, 17, 22</CORNERS>
			<SIDES>17, 0, 17, 17</SIDES>
		</BORDER>
		<BORDER_MDICHILD>
			<SIZE>35, 23</SIZE>
			<CORNERS>17, 0, 17, 22</CORNERS>
			<SIDES>17, 0, 17, 17</SIDES>
		</BORDER_MDICHILD>
		<MainClientArea>181, 189, 211</MainClientArea>
	</MAINWND>
	<EDIT>
		<BorderHighlighted>148, 168, 198</BorderHighlighted>
	</EDIT>
	<COMBO>
		<BorderHighlighted>148, 168, 198</BorderHighlighted>
		<BorderPressed>148, 168, 198</BorderPressed>
		<BUTTON>
			<GradientStartNormal>231, 234, 241</GradientStartNormal>
			<GradientFinishNormal>231, 234, 241</GradientFinishNormal>
			<GradientStartHighlighted>211, 211, 211</GradientStartHighlighted>
			<GradientFinishHighlighted>246, 246, 245</GradientFinishHighlighted>
			<GradientStartPressed>230, 230, 230</GradientStartPressed>
			<GradientFinishPressed>197, 197, 197</GradientFinishPressed>
			<BtnBorderHighlighted>148, 168, 198</BtnBorderHighlighted>
			<BtnBorderPressed>148, 168, 198</BtnBorderPressed>
		</BUTTON>
	</COMBO>
	<MENU>
		<Light>245, 245, 245</Light>
		<Rarely>206, 212, 225</Rarely>
		<Border>125, 123, 123</Border>
		<Separator1>225, 225, 225</Separator1>
		<Separator2>255, 255, 255</Separator2>
		<ItemBorder>190, 202, 223</ItemBorder>
		<ItemBack>
			<SIZE>20, 20</SIZE>
			<CORNERS>2, 2, 2, 2</CORNERS>
		</ItemBack>
		<ItemCheck>
			<SIZE>10, 14</SIZE>
		</ItemCheck>
		<ItemRadio>
			<SIZE>10, 14</SIZE>
		</ItemRadio>
		<Highlighted>
			<SIZE>55, 22</SIZE>
			<CORNERS>5, 5, 5, 5</CORNERS>
			<SIDES>1, 5, 1, 5</SIDES>
		</Highlighted>
		<HighlightedDisabled>
			<SIZE>55, 22</SIZE>
			<CORNERS>5, 5, 5, 5</CORNERS>
			<SIDES>1, 5, 1, 5</SIDES>
		</HighlightedDisabled>
		<ScrollBtn_T>
			<SIZE>30, 12</SIZE>
			<CORNERS>2, 2, 2, 2</CORNERS>
		</ScrollBtn_T>
		<TextNormal>0, 21, 110</TextNormal>
		<TextHighlighted>0, 21, 110</TextHighlighted>
		<TextDisabled>167, 167, 167</TextDisabled>
		<ImagesColor>0, 21, 110</ImagesColor>
		<BorderSize>2</BorderSize>
	</MENU>
	<BARS>
		<DEFAULT>
			<Bkgnd>235, 235, 235</Bkgnd>
			<GradientLight>196, 202, 217</GradientLight>
			<GradientDark>196, 202, 217</GradientDark>
		</DEFAULT>
		<TOOLBAR>
			<GradientLight>225, 226, 236</GradientLight>
			<GradientDark>149, 147, 177</GradientDark>
			<GradientVertLight>225, 226, 236</GradientVertLight>
			<GradientVertDark>149, 147, 177</GradientVertDark>
			<CustomizeButtonGradientLight>179, 178, 200</CustomizeButtonGradientLight>
			<CustomizeButtonGradientDark>118, 116, 146</CustomizeButtonGradientDark>
			<BottomLineColor>124, 124, 148</BottomLineColor>
			<GRIPPER>
				<SIZE>4, 4</SIZE>
				<TRANSPARENT>255, 0, 255</TRANSPARENT>
			</GRIPPER>
			<TEAR>
				<SIZE>35, 3</SIZE>
				<TRANSPARENT>255, 0, 255</TRANSPARENT>
			</TEAR>
			<BUTTON>
				<SIZE>22, 22</SIZE>
				<CORNERS>2, 2, 2, 2</CORNERS>
			</BUTTON>
			<BORDER>
				<SIZE>7, 7</SIZE>
				<CORNERS>3, 3, 3, 3</CORNERS>
				<SIDES>1, 1, 1, 1</SIDES>
			</BORDER>
			<TextNormal>0, 21, 110</TextNormal>
			<TextHighlighted>0, 21, 110</TextHighlighted>
			<TextDisabled>159, 141, 154</TextDisabled>
		</TOOLBAR>
		<MENUBAR>
			<GradientLight>235, 235, 235</GradientLight>
			<GradientDark>196, 195, 195</GradientDark>
			<GradientVertLight>235, 235, 235</GradientVertLight>
			<GradientVertDark>196, 195, 195</GradientVertDark>
			<TextNormal>0, 21, 110</TextNormal>
			<TextHighlighted>0, 21, 110</TextHighlighted>
			<TextDisabled>159, 141, 154</TextDisabled>
			<BUTTON>
				<SIZE>22, 20</SIZE>
				<CORNERS>2, 2, 2, 2</CORNERS>
				<TRANSPARENT>255, 0, 255</TRANSPARENT>
			</BUTTON>
		</MENUBAR>
		<POPUPBAR>
			<ROUND_BORDER>3, 3</ROUND_BORDER>
			<BORDER>
				<SIZE>7, 7</SIZE>
				<CORNERS>3, 3, 3, 3</CORNERS>
				<SIDES>2, 2, 2, 2</SIDES>
				<TRANSPARENT>255, 0, 255</TRANSPARENT>
			</BORDER>
			<RESIZEBAR>
				<BACK>
					<SIZE>3, 11</SIZE>
					<CORNERS>1, 2, 1, 1</CORNERS>
				</BACK>
				<ICON_HV>
					<SIZE>9, 8</SIZE>
					<TRANSPARENT>255, 0, 255</TRANSPARENT>
				</ICON_HV>
				<ICON_HVT>
					<SIZE>9, 8</SIZE>
					<TRANSPARENT>255, 0, 255</TRANSPARENT>
				</ICON_HVT>
				<ICON_V>
					<SIZE>15, 3</SIZE>
					<TRANSPARENT>255, 0, 255</TRANSPARENT>
				</ICON_V>
			</RESIZEBAR>
		</POPUPBAR>
		<STATUSBAR>
			<BACK>
				<SIZE>35, 23</SIZE>
				<CORNERS>5, 8, 5, 5</CORNERS>
				<SIDES>1, 8, 1, 3</SIDES>
			</BACK>
			<BACK_EXT>
				<SIZE>35, 23</SIZE>
				<CORNERS>2, 8, 5, 5</CORNERS>
				<SIDES>2, 8, 1, 3</SIDES>
			</BACK_EXT>
			<PANEBORDER>
				<SIZE>2, 20</SIZE>
			</PANEBORDER>
			<SIZEBOX>
				<SIZE>11, 11</SIZE>
			</SIZEBOX>
			<TextNormal>0, 21, 110</TextNormal>
			<TextDisabled>159, 141, 154</TextDisabled>
		</STATUSBAR>
		<CAPTIONBAR>
			<GradientLight>243, 243, 247</GradientLight>
			<GradientDark>215, 215, 229</GradientDark>
			<TextNormal>0, 0, 0</TextNormal>
		</CAPTIONBAR>
		<SCROLLBAR>
			<HORZ>
				<BACK_1>
					<SIZE>17, 17</SIZE>
					<CORNERS>1, 1, 1, 1</CORNERS>
				</BACK_1>
				<ITEM_1>
					<SIZE>17, 17</SIZE>
					<CORNERS>3, 3, 3, 3</CORNERS>
				</ITEM_1>
				<THUMB_BACK_1>
					<SIZE>21, 17</SIZE>
					<CORNERS>2, 2, 2, 2</CORNERS>
				</THUMB_BACK_1>
				<THUMB_ICON_1>
					<SIZE>8, 7</SIZE>
				</THUMB_ICON_1>
				<BACK_2>
					<SIZE>17, 17</SIZE>
					<CORNERS>1, 1</CORNERS>
				</BACK_2>
				<ITEM_2>
					<SIZE>17, 17</SIZE>
					<CORNERS>3, 3, 3, 3</CORNERS>
				</ITEM_2>
				<THUMB_BACK_2>
					<SIZE>21, 17</SIZE>
					<CORNERS>2, 2, 2, 2</CORNERS>
				</THUMB_BACK_2>
				<THUMB_ICON_2>
					<SIZE>8, 7</SIZE>
				</THUMB_ICON_2>
			</HORZ>
			<VERT>
				<BACK_1>
					<SIZE>17, 17</SIZE>
					<CORNERS>1, 1, 1, 1</CORNERS>
				</BACK_1>
				<ITEM_1>
					<SIZE>17, 17</SIZE>
					<CORNERS>3, 3, 3, 3</CORNERS>
				</ITEM_1>
				<THUMB_BACK_1>
					<SIZE>17, 21</SIZE>
					<CORNERS>2, 2, 2, 2</CORNERS>
				</THUMB_BACK_1>
				<THUMB_ICON_1>
					<SIZE>7, 8</SIZE>
				</THUMB_ICON_1>
				<BACK_2>
					<SIZE>17, 17</SIZE>
					<CORNERS>1, 1</CORNERS>
				</BACK_2>
				<ITEM_2>
					<SIZE>17, 17</SIZE>
					<CORNERS>3, 3, 3, 3</CORNERS>
				</ITEM_2>
				<THUMB_BACK_2>
					<SIZE>17, 21</SIZE>
					<CORNERS>2, 2, 2, 2</CORNERS>
				</THUMB_BACK_2>
				<THUMB_ICON_2>
					<SIZE>7, 8</SIZE>
				</THUMB_ICON_2>
			</VERT>
		</SCROLLBAR>
	</BARS>
	<TASK>
		<GradientDark>196, 202, 217</GradientDark>
		<GradientLight>196, 202, 217</GradientLight>
		<GROUP>
			<NORMAL>
				<CAPTION>
					<DarkNormal>243, 243, 247</DarkNormal>
					<LightNormal>216, 216, 230</LightNormal>
					<DarkHighlighted>216, 216, 230</DarkHighlighted>
					<LightHighlighted>241, 241, 245</LightHighlighted>
					<TextNormal>0, 21, 110</TextNormal>
					<TextHighlighted>0, 21, 110</TextHighlighted>
				</CAPTION>
				<AREA>
					<DarkNormal>255, 255, 255</DarkNormal>
					<LightNormal>255, 255, 255</LightNormal>
				</AREA>
			</NORMAL>
			<SPECIAL>
				<CAPTION>
					<DarkNormal>243, 243, 247</DarkNormal>
					<LightNormal>216, 216, 230</LightNormal>
					<DarkHighlighted>216, 216, 230</DarkHighlighted>
					<LightHighlighted>241, 241, 245</LightHighlighted>
					<TextNormal>0, 21, 110</TextNormal>
					<TextHighlighted>0, 21, 110</TextHighlighted>
				</CAPTION>
				<AREA>
					<DarkNormal>255, 255, 255</DarkNormal>
					<LightNormal>255, 255, 255</LightNormal>
				</AREA>
			</SPECIAL>
			<BORDER>124, 124, 148</BORDER>
		</GROUP>
		<SCROLL_BUTTON>
			<SIZE>30, 12</SIZE>
			<CORNERS>2, 2, 2, 2</CORNERS>
		</SCROLL_BUTTON>
	</TASK>
	<TABS>
		<TextColorActive>0, 21, 110</TextColorActive>
		<TextColorInactive>0, 21, 110</TextColorInactive>
		<3D>
			<BUTTON>
				<SIZE>72, 25</SIZE>
				<CORNERS>4, 4, 4, 2</CORNERS>
			</BUTTON>
		</3D>
		<FLAT>
			<Black>136, 157, 194</Black>
			<Highlight>166, 175, 195</Highlight>
			<BUTTON>
				<SIZE>24, 15</SIZE>
				<CORNERS>4, 4, 0, 6</CORNERS>
				<TRANSPARENT>255, 0, 255</TRANSPARENT>
			</BUTTON>
			<BorderInnerNormal>240, 242, 246</BorderInnerNormal>
			<BorderInnerActive>240, 242, 246</BorderInnerActive>
			<BorderOuterNormal>136, 157, 194</BorderOuterNormal>
			<BorderOuterActive>136, 157, 194</BorderOuterActive>
		</FLAT>
	</TABS>
	<HEADER>
		<NormalStart>199, 208, 225</NormalStart>
		<NormalFinish>205, 213, 228</NormalFinish>
		<NormalBorder>143, 153, 181</NormalBorder>
		<HighlightedStart>168, 182, 211</HighlightedStart>
		<HighlightedFinish>154, 169, 203</HighlightedFinish>
		<HighlightedBorder>167, 175, 197</HighlightedBorder>
		<PressedStart>155, 173, 210</PressedStart>
		<PressedFinish>141, 162, 207</PressedFinish>
		<PressedBorder>233, 236, 243</PressedBorder>
	</HEADER>
	<RIBBON>
		<PANEL>
			<BACK>
				<TOP>
					<SIZE>100, 68</SIZE>
					<CORNERS>2, 0, 2, 0</CORNERS>
				</TOP>
				<BOTTOM>
					<SIZE>100, 17</SIZE>
					<CORNERS>2, 0, 2, 16</CORNERS>
				</BOTTOM>
			</BACK>
			<CAPTION>
				<LAUNCH_ICON>
					<SIZE>12, 12</SIZE>
				</LAUNCH_ICON>
				<TextNormal>255, 255, 255</TextNormal>
				<TextHighlighted>255, 255, 255</TextHighlighted>
			</CAPTION>
			<SEPARATOR>
				<SIZE>1, 46</SIZE>
			</SEPARATOR>
			<BUTTONS>
				<BUTTON_GROUP_F>
					<SIZE>22, 22</SIZE>
					<CORNERS>2, 2, 2, 2</CORNERS>
				</BUTTON_GROUP_F>
				<BUTTON_GROUP_M>
					<SIZE>22, 22</SIZE>
					<CORNERS>2, 2, 2, 2</CORNERS>
				</BUTTON_GROUP_M>
				<BUTTON_GROUP_L>
					<SIZE>22, 22</SIZE>
					<CORNERS>2, 2, 2, 2</CORNERS>
				</BUTTON_GROUP_L>
				<BUTTON_GROUP_S>
					<SIZE>22, 22</SIZE>
					<CORNERS>2, 2, 2, 2</CORNERS>
				</BUTTON_GROUP_S>
				<BUTTON_GROUPMENU_F_C>
					<SIZE>24, 22</SIZE>
					<CORNERS>2, 2, 2, 2</CORNERS>
				</BUTTON_GROUPMENU_F_C>
				<BUTTON_GROUPMENU_F_M>
					<SIZE>8, 22</SIZE>
					<CORNERS>0, 2, 1, 2</CORNERS>
				</BUTTON_GROUPMENU_F_M>
				<BUTTON_GROUPMENU_M_C>
					<SIZE>24, 22</SIZE>
					<CORNERS>2, 2, 2, 2</CORNERS>
				</BUTTON_GROUPMENU_M_C>
				<BUTTON_GROUPMENU_M_M>
					<SIZE>8, 22</SIZE>
					<CORNERS>0, 2, 1, 2</CORNERS>
				</BUTTON_GROUPMENU_M_M>
				<BUTTON_GROUPMENU_L_C>
					<SIZE>24, 22</SIZE>
					<CORNERS>2, 2, 2, 2</CORNERS>
				</BUTTON_GROUPMENU_L_C>
				<BUTTON_GROUPMENU_L_M>
					<SIZE>8, 22</SIZE>
					<CORNERS>0, 2, 2, 2</CORNERS>
				</BUTTON_GROUPMENU_L_M>
				<BUTTON_NORMAL_S>
					<SIZE>22, 22</SIZE>
					<CORNERS>4, 4, 4, 4</CORNERS>
				</BUTTON_NORMAL_S>
				<BUTTON_NORMAL_B>
					<SIZE>50, 66</SIZE>
					<CORNERS>2, 2, 2, 2</CORNERS>
				</BUTTON_NORMAL_B>
				<BUTTON_DEFAULT>
					<SIZE>52, 67</SIZE>
					<CORNERS>4, 4, 4, 4</CORNERS>
				</BUTTON_DEFAULT>
				<BUTTON_DEFAULT_IMAGE>
					<SIZE>15, 16</SIZE>
				</BUTTON_DEFAULT_IMAGE>
				<BUTTON_DEFAULT_QAT_ICON>
					<SIZE>20, 12</SIZE>
					<CORNERS>2, 2, 2, 2</CORNERS>
				</BUTTON_DEFAULT_QAT_ICON>
				<BUTTON_DEFAULT_QAT>
					<SIZE>24, 24</SIZE>
					<CORNERS>4, 4, 4, 4</CORNERS>
				</BUTTON_DEFAULT_QAT>
				<BUTTON_MENU_H_C>
					<SIZE>23, 22</SIZE>
					<CORNERS>2, 2, 2, 2</CORNERS>
				</BUTTON_MENU_H_C>
				<BUTTON_MENU_H_M>
					<SIZE>11, 22</SIZE>
					<CORNERS>0, 2, 2, 2</CORNERS>
				</BUTTON_MENU_H_M>
				<BUTTON_MENU_V_C>
					<SIZE>50, 39</SIZE>
					<CORNERS>2, 2, 2, 2</CORNERS>
				</BUTTON_MENU_V_C>
				<BUTTON_MENU_V_M>
					<SIZE>50, 27</SIZE>
					<CORNERS>2, 0, 2, 2</CORNERS>
				</BUTTON_MENU_V_M>
				<BUTTON_CHECK>
					<SIZE>13, 13</SIZE>
				</BUTTON_CHECK>
				<BUTTON_PNL_T>
					<SIZE>15, 21</SIZE>
					<CORNERS>3, 3, 3, 3</CORNERS>
				</BUTTON_PNL_T>
				<BUTTON_PNL_M>
					<SIZE>15, 19</SIZE>
					<CORNERS>3, 3, 3, 3</CORNERS>
				</BUTTON_PNL_M>
				<BUTTON_PNL_B>
					<SIZE>15, 20</SIZE>
					<CORNERS>3, 3, 3, 3</CORNERS>
				</BUTTON_PNL_B>
			</BUTTONS>
			<EDIT>
				<Normal>231, 234, 241</Normal>
				<Highlighted>255, 255, 255</Highlighted>
				<Disabled>239, 239, 239</Disabled>
				<Pressed>255, 255, 255</Pressed>
				<BorderNormal>177, 187, 198</BorderNormal>
				<BorderHighlighted>148, 168, 198</BorderHighlighted>
				<BorderDisabled>177, 187, 198</BorderDisabled>
				<BorderPressed>148, 168, 198</BorderPressed>
				<Selection>189, 207, 236</Selection>
				<BUTTON>
					<GradientStartNormal>231, 234, 241</GradientStartNormal>
					<GradientFinishNormal>231, 234, 241</GradientFinishNormal>
					<GradientStartHighlighted>211, 211, 211</GradientStartHighlighted>
					<GradientFinishHighlighted>246, 246, 245</GradientFinishHighlighted>
					<GradientStartDisabled>239, 239, 239</GradientStartDisabled>
					<GradientFinishDisabled>239, 239, 239</GradientFinishDisabled>
					<GradientStartPressed>230, 230, 230</GradientStartPressed>
					<GradientFinishPressed>197, 197, 197</GradientFinishPressed>
					<BtnBorderNormal>177, 187, 198</BtnBorderNormal>
					<BtnBorderHighlighted>148, 168, 198</BtnBorderHighlighted>
					<BtnBorderDisabled>177, 187, 198</BtnBorderDisabled>
					<BtnBorderPressed>148, 168, 198</BtnBorderPressed>
				</BUTTON>
			</EDIT>
			<TextNormal>0, 21, 110</TextNormal>
			<TextHighlighted>0, 21, 110</TextHighlighted>
		</PANEL>
		<CATEGORY>
			<BACK>
				<SIZE>80, 92</SIZE>
				<CORNERS>5, 5, 5, 5</CORNERS>
			</BACK>
			<TAB>
				<BUTTON>
					<SIZE>72, 25</SIZE>
					<CORNERS>4, 4, 4, 2</CORNERS>
				</BUTTON>
				<TextNormal>0, 21, 110</TextNormal>
				<TextHighlighted>0, 21, 110</TextHighlighted>
			</TAB>
			<BUTTON_PAGE_L>
				<SIZE>14, 82</SIZE>
				<CORNERS>2, 2, 2, 2</CORNERS>
			</BUTTON_PAGE_L>
			<BUTTON_PAGE_R>
				<SIZE>14, 82</SIZE>
				<CORNERS>2, 2, 2, 2</CORNERS>
			</BUTTON_PAGE_R>
		</CATEGORY>
		<CONTEXT>
			<CATEGORY>
				<BACK>
					<SIZE>80, 92</SIZE>
					<CORNERS>5, 5, 5, 5</CORNERS>
				</BACK>
				<TAB>
					<BUTTON>
						<SIZE>76, 25</SIZE>
						<CORNERS>7, 4, 7, 2</CORNERS>
					</BUTTON>
					<TextNormal>0, 21, 110</TextNormal>
					<TextHighlighted>0, 21, 110</TextHighlighted>
				</TAB>
				<CAPTION>
					<BACK>
						<SIZE>80, 19</SIZE>
						<CORNERS>1, 1, 1, 2</CORNERS>
					</BACK>
					<TextNormal>0, 21, 110</TextNormal>
				</CAPTION>
				<BUTTON_DEFAULT>
					<SIZE>52, 67</SIZE>
					<CORNERS>4, 4, 4, 4</CORNERS>
				</BUTTON_DEFAULT>
			</CATEGORY>
			<PANEL>
				<BACK>
					<TOP>
						<SIZE>100, 68</SIZE>
						<CORNERS>2, 0, 2, 0</CORNERS>
					</TOP>
					<BOTTOM>
						<SIZE>100, 17</SIZE>
						<CORNERS>2, 0, 2, 16</CORNERS>
					</BOTTOM>
				</BACK>
				<CAPTION>
					<TextNormal>255, 255, 255</TextNormal>
					<TextHighlighted>255, 255, 255</TextHighlighted>
				</CAPTION>
				<TextNormal>0, 21, 110</TextNormal>
				<TextHighlighted>0, 21, 110</TextHighlighted>
			</PANEL>
			<SEPARATOR>
				<SIZE>3, 26</SIZE>
				<CORNERS>1, 1, 1, 1</CORNERS>
			</SEPARATOR>
		</CONTEXT>
		<CAPTION>
			<QA>
				<SIZE>32, 26</SIZE>
				<CORNERS>15, 4, 12, 4</CORNERS>
			</QA>
			<QA_GLASS>
				<SIZE>32, 26</SIZE>
				<CORNERS>15, 4, 12, 4</CORNERS>
			</QA_GLASS>
		</CAPTION>
		<MAIN_BUTTON>
			<SIZE>38, 38</SIZE>
		</MAIN_BUTTON>
		<MAIN>
			<BUTTON>
				<SIZE>70, 22</SIZE>
				<CORNERS>2, 2, 2, 2</CORNERS>
			</BUTTON>
		</MAIN>
		<STATUS>
			<PANE_BUTTON>
				<SIZE>41, 18</SIZE>
				<CORNERS>2, 2, 2, 2</CORNERS>
			</PANE_BUTTON>
			<SLIDER>
				<THUMB>
					<SIZE>7, 13</SIZE>
					<CORNERS>0, 0, 0, 0</CORNERS>
				</THUMB>
				<PLUS>
					<SIZE>16, 16</SIZE>
					<CORNERS>0, 0, 0, 0</CORNERS>
				</PLUS>
				<MINUS>
					<SIZE>16, 16</SIZE>
					<CORNERS>0, 0, 0, 0</CORNERS>
				</MINUS>
			</SLIDER>
			<PROGRESS>
				<BACK>
					<SIZE>90, 12</SIZE>
					<CORNERS>2, 2, 2, 2</CORNERS>
				</BACK>
				<NORMAL>
					<SIZE>86, 8</SIZE>
					<CORNERS>1, 1, 1, 1</CORNERS>
				</NORMAL>
				<NORMAL_EXT>
					<SIZE>5, 8</SIZE>
				</NORMAL_EXT>
				<INFINITY>
					<SIZE>86, 8</SIZE>
					<CORNERS>1, 1, 1, 1</CORNERS>
				</INFINITY>
			</PROGRESS>
		</STATUS>
		<BORDERS>
			<FLOATY>
				<SIZE>7, 7</SIZE>
				<CORNERS>3, 3, 3, 3</CORNERS>
				<SIDES>2, 2, 2, 2</SIDES>
			</FLOATY>
		</BORDERS>
		<KEYTIP>
			<BACK>
				<SIZE>15, 15</SIZE>
				<CORNERS>2, 2, 2, 2</CORNERS>
				<SIDES>1, 1, 1, 1</SIDES>
			</BACK>
		</KEYTIP>
		<HYPERLINK>
			<Inactive>0, 102, 226</Inactive>
			<Active>0, 144, 255</Active>
		</HYPERLINK>
	</RIBBON>
	<PLANNER>
		<WorkColor>181, 189, 211</WorkColor>
		<NcAreaColor>206, 212, 225</NcAreaColor>
		<NcLineColor>0, 21, 110</NcLineColor>
		<NcTextColor>0, 21, 110</NcTextColor>
		<TODAY>
			<Caption1Start>247, 208, 112</Caption1Start>
			<Caption1Finish>251, 230, 148</Caption1Finish>
			<Caption2Start>239, 155,  30</Caption2Start>
			<Caption2Finish>250, 224, 139</Caption2Finish>
			<BorderColor>238, 147, 17</BorderColor>
		</TODAY>
	</PLANNER>
	<GRID>
		<ExpandBoxLight>144, 168, 192</ExpandBoxLight>
		<ExpandBoxDark>48, 72, 96</ExpandBoxDark>
	</GRID>
	<OUTLOOK>
		<CAPTION>
			<TextNormal>0, 0, 0</TextNormal>
			<TextHighlighted>0, 0, 0</TextHighlighted>
		</CAPTION>
		<PAGEBUTTON>
			<TextNormal>0, 0, 0</TextNormal>
			<TextHighlighted>0, 0, 0</TextHighlighted>
		</PAGEBUTTON>
	</OUTLOOK>
	<POPUP>
		<GradientFillDark>196, 202, 217</GradientFillDark>
		<GradientFillLight>218, 224, 239</GradientFillLight>
	</POPUP>
</STYLE>
=== C:/Users/treeman/Desktop/windows nt source code\xbox\Xbox Live Source\XONLINE_MAIN\public\ext\sdk\vs10rtm\VC\atlmfc\include\Black\Style.xml ===
<STYLE>
	<VERSION>
		<NUMBER>2007</NUMBER>
		<TYPE>20</TYPE>
		<ID_PREFIX>BLACK_</ID_PREFIX>
	</VERSION>
	<DESCRIPTION>
		<NAME>Obsidian (black)</NAME>
	</DESCRIPTION>
	<GLOBALS>
		<BarText>0, 0, 0</BarText>
		<BarFace>235, 235, 235</BarFace>
		<ActiveCaption>233, 235, 237</ActiveCaption>
		<CaptionText>70, 70, 70</CaptionText>
		<InactiveCaption>158, 160, 160</InactiveCaption>
		<InactiveCaptionText>70, 70, 70</InactiveCaptionText>
		<FloatToolBarBorder>137, 137, 137</FloatToolBarBorder>
		<BarShadow>172, 172, 172</BarShadow>
		<BarDkShadow>129, 129, 129</BarDkShadow>
		<BarLight>233, 235, 237</BarLight>
		<AutoPremultiply>TRUE</AutoPremultiply>
		<HighlightGradientDark>255, 219, 117</HighlightGradientDark>
		<HighlightGradientLight>255, 245, 204</HighlightGradientLight>
		<HighlightDnGradientDark>255, 184, 94</HighlightDnGradientDark>
		<HighlightDnGradientLight>252, 151, 61</HighlightDnGradientLight>
		<HighlightCheckedGradientDark>255, 171, 63</HighlightCheckedGradientDark>
		<HighlightCheckedGradientLight>255, 207, 146</HighlightCheckedGradientLight>
		<PressedButtonBorder>251, 140, 60</PressedButtonBorder>
		<Highlight>180, 201, 233</Highlight>
		<HighlightText>0, 0, 0</HighlightText>
		<MenuShadowColor>50, 50, 50</MenuShadowColor>
		<TOOLTIP>
			<DRAW_SEPARATOR>FALSE</DRAW_SEPARATOR>
			<ROUNDED_CORNERS>TRUE</ROUNDED_CORNERS>
			<COLOR_FILL>255, 255, 255</COLOR_FILL>
			<COLOR_FILLGRADIENT>205, 208, 213</COLOR_FILLGRADIENT>
			<COLOR_TEXT>76, 76, 76</COLOR_TEXT>
			<COLOR_BORDER>118, 118, 118</COLOR_BORDER>
		</TOOLTIP>
	</GLOBALS>
	<MAINWND>
		<CAPTION>
			<FONT>
				<WEIGHT>NORMAL</WEIGHT>
				<QUALITY>CLEARTYPE</QUALITY>
			</FONT>
			<ActiveStart>62, 62, 62</ActiveStart>
			<ActiveFinish>47, 48, 48</ActiveFinish>
			<InactiveStart>153, 153, 153</InactiveStart>
			<InactiveFinish>146, 146, 146</InactiveFinish>
			<ActiveText>255, 255, 255</ActiveText>
			<InactiveText>225, 225, 225</InactiveText>
			<ActiveTitleText>174, 209, 255</ActiveTitleText>
			<InactiveTitleText>225, 225, 225</InactiveTitleText>
			<TextCenter>TRUE</TextCenter>
			<BORDER>
				<SIZE>35, 31</SIZE>
				<CORNERS>5, 10, 5, 3</CORNERS>
			</BORDER>
			<BUTTONS>
				<NORMAL>
					<ConstSize>23, 23</ConstSize>
					<IconSize>17, 16</IconSize>
					<SIZE>17, 16</SIZE>
					<CORNERS>2, 2, 2, 2</CORNERS>
				</NORMAL>
				<SMALL>
					<ConstSize>16, 16</ConstSize>
					<IconSize>13, 12</IconSize>
					<SIZE>17, 16</SIZE>
					<CORNERS>2, 2, 2, 2</CORNERS>
				</SMALL>
			</BUTTONS>
		</CAPTION>
		<ROUND_BORDER>9, 9</ROUND_BORDER>
		<BORDER>
			<SIZE>35, 23</SIZE>
			<CORNERS>17, 0, 17, 22</CORNERS>
			<SIDES>17, 0, 17, 17</SIDES>
		</BORDER>
		<BORDER_MDICHILD>
			<SIZE>35, 23</SIZE>
			<CORNERS>17, 0, 17, 22</CORNERS>
			<SIDES>17, 0, 17, 17</SIDES>
		</BORDER_MDICHILD>
		<MainClientArea>70, 70, 70</MainClientArea>
	</MAINWND>
	<EDIT>
		<BorderHighlighted>255, 189, 105</BorderHighlighted>
	</EDIT>
	<COMBO>
		<BorderHighlighted>255, 189, 105</BorderHighlighted>
		<BorderPressed>255, 189, 105</BorderPressed>
		<BUTTON>
			<GradientStartNormal>162, 169, 178</GradientStartNormal>
			<GradientFinishNormal>198, 202, 208</GradientFinishNormal>
			<GradientStartHighlighted>255, 220, 122</GradientStartHighlighted>
			<GradientFinishHighlighted>255, 244, 199</GradientFinishHighlighted>
			<BtnBorderHighlighted>255, 189, 105</BtnBorderHighlighted>
			<GradientStartPressed>255, 183, 91</GradientStartPressed>
			<GradientFinishPressed>252, 153, 61</GradientFinishPressed>
			<BtnBorderPressed>251, 140, 61</BtnBorderPressed>
		</BUTTON>
	</COMBO>
	<MENU>
		<Light>250, 250, 250</Light>
		<Rarely>195, 199, 205</Rarely>
		<Border>145, 153, 164</Border>
		<Separator1>197, 197, 197</Separator1>
		<Separator2>245, 245, 245</Separator2>
		<GroupBackground>235, 235, 235</GroupBackground>
		<ItemBorder>205, 181, 130</ItemBorder>
		<ItemBack>
			<SIZE>20, 20</SIZE>
			<CORNERS>2, 2, 2, 2</CORNERS>
		</ItemBack>
		<ItemCheck>
			<SIZE>10, 14</SIZE>
		</ItemCheck>
		<ItemRadio>
			<SIZE>10, 14</SIZE>
		</ItemRadio>
		<Highlighted>
			<SIZE>55, 22</SIZE>
			<CORNERS>2, 2, 2, 2</CORNERS>
		</Highlighted>
		<HighlightedDisabled>
			<SIZE>55, 22</SIZE>
			<CORNERS>2, 2, 2, 2</CORNERS>
		</HighlightedDisabled>
		<ScrollBtn_T>
			<SIZE>30, 12</SIZE>
			<CORNERS>2, 2, 2, 2</CORNERS>
		</ScrollBtn_T>
		<TextNormal>70, 70, 70</TextNormal>
		<TextHighlighted>70, 70, 70</TextHighlighted>
		<TextDisabled>167, 167, 167</TextDisabled>
		<COLORS>
			<Black>90, 90, 90</Black>
			<Black2>90, 90, 90</Black2>
		</COLORS>
		<BorderSize>2</BorderSize>
		<ButtonBorder>
			<SIZE>2, 19</SIZE>
		</ButtonBorder>
	</MENU>
	<BARS>
		<DEFAULT>
			<Bkgnd>239, 239, 239</Bkgnd>
			<GradientLight>83, 83, 83</GradientLight>
			<GradientDark>83, 83, 83</GradientDark>
		</DEFAULT>
		<TOOLBAR>
			<GradientLight>205, 208, 213</GradientLight>
			<GradientDark>148, 156, 166</GradientDark>
			<GradientVertLight>205, 208, 213</GradientVertLight>
			<GradientVertDark>148, 156, 166</GradientVertDark>
			<CustomizeButtonGradientLight>178, 183, 191</CustomizeButtonGradientLight>
			<CustomizeButtonGradientDark>76, 83, 92</CustomizeButtonGradientDark>
			<BottomLineColor>76, 83, 92</BottomLineColor>
			<GRIPPER>
				<SIZE>4, 4</SIZE>
				<TRANSPARENT>255, 0, 255</TRANSPARENT>
			</GRIPPER>
			<TEAR>
				<SIZE>35, 3</SIZE>
				<TRANSPARENT>255, 0, 255</TRANSPARENT>
			</TEAR>
			<BUTTON>
				<SIZE>22, 22</SIZE>
				<CORNERS>2, 3, 2, 2</CORNERS>
			</BUTTON>
			<BORDER>
				<SIZE>9, 9</SIZE>
				<CORNERS>4, 4, 4, 4</CORNERS>
				<SIDES>2, 2, 2, 2</SIDES>
			</BORDER>
			<TextNormal>0, 0, 0</TextNormal>
			<TextHighlighted>0, 0, 0</TextHighlighted>
			<TextDisabled>141, 141, 141</TextDisabled>
		</TOOLBAR>
		<MENUBAR>
			<GradientLight>83, 83, 83</GradientLight>
			<GradientDark>83, 83, 83</GradientDark>
			<GradientVertLight>83, 83, 83</GradientVertLight>
			<GradientVertDark>83, 83, 83</GradientVertDark>
			<TextNormal>255, 255, 255</TextNormal>
			<TextHighlighted>0, 0, 0</TextHighlighted>
			<TextDisabled>194, 194, 194</TextDisabled>
			<BUTTON>
				<SIZE>22, 19</SIZE>
				<CORNERS>1, 1, 1, 1</CORNERS>
				<TRANSPARENT>255, 0, 255</TRANSPARENT>
			</BUTTON>
		</MENUBAR>
		<POPUPBAR>
			<ROUND_BORDER>3, 3</ROUND_BORDER>
			<BORDER>
				<SIZE>7, 7</SIZE>
				<CORNERS>3, 3, 3, 3</CORNERS>
				<SIDES>2, 2, 2, 2</SIDES>
			</BORDER>
			<RESIZEBAR>
				<BACK>
					<SIZE>3, 11</SIZE>
					<CORNERS>1, 2, 1, 1</CORNERS>
				</BACK>
				<ICON_HV>
					<SIZE>9, 8</SIZE>
					<TRANSPARENT>255, 0, 255</TRANSPARENT>
				</ICON_HV>
				<ICON_HVT>
					<SIZE>9, 8</SIZE>
					<TRANSPARENT>255, 0, 255</TRANSPARENT>
				</ICON_HVT>
				<ICON_V>
					<SIZE>15, 3</SIZE>
					<TRANSPARENT>255, 0, 255</TRANSPARENT>
				</ICON_V>
			</RESIZEBAR>
		</POPUPBAR>
		<STATUSBAR>
			<BACK>
				<SIZE>35, 23</SIZE>
				<CORNERS>5, 8, 5, 5</CORNERS>
				<SIDES>1, 8, 1, 3</SIDES>
			</BACK>
			<BACK_EXT>
				<SIZE>35, 23</SIZE>
				<CORNERS>3, 8, 5, 5</CORNERS>
				<SIDES>3, 8, 1, 3</SIDES>
			</BACK_EXT>
			<PANEBORDER>
				<SIZE>2, 20</SIZE>
			</PANEBORDER>
			<SIZEBOX>
				<SIZE>11, 11</SIZE>
			</SIZEBOX>
			<TextNormal>255, 255, 255</TextNormal>
			<TextDisabled>141, 141, 141</TextDisabled>
			<TextExtendedDisabled>100, 100, 100</TextExtendedDisabled>
		</STATUSBAR>
		<CAPTIONBAR>
			<GradientLight>240, 241, 242</GradientLight>
			<GradientDark>189, 194, 200</GradientDark>
			<TextNormal>55, 60, 67</TextNormal>
		</CAPTIONBAR>
	</BARS>
	<TASK>
		<GradientDark>235, 235, 235</GradientDark>
		<GradientLight>255, 255, 255</GradientLight>
		<GROUP>
			<NORMAL>
				<CAPTION>
					<DarkNormal>221, 224, 227</DarkNormal>
					<LightNormal>240, 241, 242</LightNormal>
					<DarkHighlighted>232, 234, 236</DarkHighlighted>
					<LightHighlighted>255, 255, 255</LightHighlighted>
					<TextNormal>55, 60, 67</TextNormal>
					<TextHighlighted>55, 60, 67</TextHighlighted>
				</CAPTION>
				<AREA>
					<DarkNormal>255, 255, 255</DarkNormal>
					<LightNormal>255, 255, 255</LightNormal>
				</AREA>
			</NORMAL>
			<SPECIAL>
				<CAPTION>
					<DarkNormal>221, 224, 227</DarkNormal>
					<LightNormal>240, 241, 242</LightNormal>
					<DarkHighlighted>232, 234, 236</DarkHighlighted>
					<LightHighlighted>255, 255, 255</LightHighlighted>
					<TextNormal>55, 60, 67</TextNormal>
					<TextHighlighted>55, 60, 67</TextHighlighted>
				</CAPTION>
				<AREA>
					<DarkNormal>255, 255, 255</DarkNormal>
					<LightNormal>255, 255, 255</LightNormal>
				</AREA>
			</SPECIAL>
			<BORDER>76, 83, 92</BORDER>
		</GROUP>
		<SCROLL_BUTTON>
			<SIZE>30, 12</SIZE>
			<CORNERS>2, 2, 2, 2</CORNERS>
		</SCROLL_BUTTON>
	</TASK>
	<TABS>
		<TextColorActive>0, 0, 0</TextColorActive>
		<TextColorInactive>255, 255, 255</TextColorInactive>
		<3D>
			<BUTTON>
				<SIZE>57, 24</SIZE>
				<CORNERS>5, 5, 5, 2</CORNERS>
			</BUTTON>
		</3D>
		<FLAT>
			<Black>109, 109, 109</Black>
			<Highlight>73, 73, 73</Highlight>
			<BUTTON>
				<SIZE>24, 15</SIZE>
				<CORNERS>4, 4, 0, 6</CORNERS>
				<TRANSPARENT>255, 0, 255</TRANSPARENT>
			</BUTTON>
			<BorderInnerNormal>235, 235, 235</BorderInnerNormal>
			<BorderInnerActive>235, 235, 235</BorderInnerActive>
			<BorderOuterNormal>109, 109, 109</BorderOuterNormal>
			<BorderOuterActive>109, 109, 109</BorderOuterActive>
		</FLAT>
	</TABS>
	<HEADER>
		<NormalStart>247, 247, 247</NormalStart>
		<NormalFinish>222, 222, 222</NormalFinish>
		<NormalBorder>182, 182, 182</NormalBorder>
		<HighlightedStart>249, 216, 157</HighlightedStart>
		<HighlightedFinish>241, 193, 94</HighlightedFinish>
		<HighlightedBorder>242, 149, 54</HighlightedBorder>
		<PressedStart>255, 211, 139</PressedStart>
		<PressedFinish>242, 145, 56</PressedFinish>
		<PressedBorder>242, 149, 54</PressedBorder>
	</HEADER>
	<RIBBON>
		<PANEL>
			<BACK>
				<TOP>
					<SIZE>100, 68</SIZE>
					<CORNERS>3, 15, 3, 0</CORNERS>
				</TOP>
				<BOTTOM>
					<SIZE>100, 17</SIZE>
					<CORNERS>3, 0, 4, 4</CORNERS>
				</BOTTOM>
			</BACK>
			<CAPTION>
				<LAUNCH_BTN>
					<SIZE>15, 14</SIZE>
					<CORNERS>2, 2, 2, 2</CORNERS>
				</LAUNCH_BTN>
				<LAUNCH_ICON>
					<SIZE>8, 8</SIZE>
				</LAUNCH_ICON>
				<TextNormal>255, 255, 255</TextNormal>
				<TextHighlighted>255, 255, 255</TextHighlighted>
			</CAPTION>
			<SEPARATOR>
				<SIZE>2, 55</SIZE>
			</SEPARATOR>
			<QAT>
				<SIZE>11, 24</SIZE>
				<CORNERS>3, 3, 3, 3</CORNERS>
			</QAT>
			<BUTTONS>
				<BUTTON_GROUP_F>
					<SIZE>22, 22</SIZE>
					<CORNERS>2, 3, 2, 2</CORNERS>
				</BUTTON_GROUP_F>
				<BUTTON_GROUP_M>
					<SIZE>22, 22</SIZE>
					<CORNERS>2, 3, 2, 2</CORNERS>
				</BUTTON_GROUP_M>
				<BUTTON_GROUP_L>
					<SIZE>22, 22</SIZE>
					<CORNERS>2, 3, 2, 2</CORNERS>
				</BUTTON_GROUP_L>
				<BUTTON_GROUP_S>
					<SIZE>22, 22</SIZE>
					<CORNERS>2, 3, 2, 2</CORNERS>
				</BUTTON_GROUP_S>
				<BUTTON_GROUPMENU_F_C>
					<SIZE>23, 22</SIZE>
					<CORNERS>2, 3, 2, 2</CORNERS>
				</BUTTON_GROUPMENU_F_C>
				<BUTTON_GROUPMENU_F_M>
					<SIZE>9, 22</SIZE>
					<CORNERS>1, 3, 2, 2</CORNERS>
				</BUTTON_GROUPMENU_F_M>
				<BUTTON_GROUPMENU_M_C>
					<SIZE>23, 22</SIZE>
					<CORNERS>2, 3, 2, 2</CORNERS>
				</BUTTON_GROUPMENU_M_C>
				<BUTTON_GROUPMENU_M_M>
					<SIZE>9, 22</SIZE>
					<CORNERS>1, 3, 2, 2</CORNERS>
				</BUTTON_GROUPMENU_M_M>
				<BUTTON_GROUPMENU_L_C>
					<SIZE>23, 22</SIZE>
					<CORNERS>2, 3, 2, 2</CORNERS>
				</BUTTON_GROUPMENU_L_C>
				<BUTTON_GROUPMENU_L_M>
					<SIZE>10, 22</SIZE>
					<CORNERS>1, 3, 2, 2</CORNERS>
				</BUTTON_GROUPMENU_L_M>
				<BUTTON_NORMAL_S>
					<SIZE>22, 22</SIZE>
					<CORNERS>2, 2, 2, 2</CORNERS>
				</BUTTON_NORMAL_S>
				<BUTTON_NORMAL_B>
					<SIZE>43, 66</SIZE>
					<CORNERS>2, 2, 2, 2</CORNERS>
				</BUTTON_NORMAL_B>
				<BUTTON_DEFAULT>
					<SIZE>52, 84</SIZE>
					<CORNERS>2, 15, 2, 2</CORNERS>
				</BUTTON_DEFAULT>
				<BUTTON_DEFAULT_ICON>
					<SIZE>38, 38</SIZE>
					<CORNERS>7, 7, 8, 12</CORNERS>
				</BUTTON_DEFAULT_ICON>
				<BUTTON_DEFAULT_IMAGE>
					<SIZE>15, 16</SIZE>
				</BUTTON_DEFAULT_IMAGE>
				<BUTTON_DEFAULT_QAT_ICON>
					<SIZE>20, 12</SIZE>
					<CORNERS>3, 3, 3, 3</CORNERS>
				</BUTTON_DEFAULT_QAT_ICON>
				<BUTTON_DEFAULT_QAT>
					<SIZE>22, 22</SIZE>
					<CORNERS>3, 3, 3, 3</CORNERS>
				</BUTTON_DEFAULT_QAT>
				<BUTTON_MENU_H_C>
					<SIZE>22, 22</SIZE>
					<CORNERS>4, 4, 2, 1</CORNERS>
				</BUTTON_MENU_H_C>
				<BUTTON_MENU_H_M>
					<SIZE>11, 22</SIZE>
					<CORNERS>0, 4, 3, 2</CORNERS>
				</BUTTON_MENU_H_M>
				<BUTTON_MENU_V_C>
					<SIZE>43, 39</SIZE>
					<CORNERS>3, 6, 3, 2</CORNERS>
				</BUTTON_MENU_V_C>
				<BUTTON_MENU_V_M>
					<SIZE>43, 27</SIZE>
					<CORNERS>3, 0, 3, 2</CORNERS>
				</BUTTON_MENU_V_M>
				<BUTTON_CHECK>
					<SIZE>13, 13</SIZE>
				</BUTTON_CHECK>
				<BUTTON_PNL_T>
					<SIZE>15, 21</SIZE>
					<CORNERS>3, 3, 3, 3</CORNERS>
				</BUTTON_PNL_T>
				<BUTTON_PNL_M>
					<SIZE>15, 19</SIZE>
					<CORNERS>3, 3, 3, 3</CORNERS>
				</BUTTON_PNL_M>
				<BUTTON_PNL_B>
					<SIZE>15, 20</SIZE>
					<CORNERS>3, 3, 3, 3</CORNERS>
				</BUTTON_PNL_B>
			</BUTTONS>
			<EDIT>
				<Normal>232, 232, 232</Normal>
				<Highlighted>255, 255, 255</Highlighted>
				<Disabled>239, 239, 239</Disabled>
				<Pressed>255, 255, 255</Pressed>
				<BorderNormal>137, 137, 137</BorderNormal>
				<BorderHighlighted>137, 137, 137</BorderHighlighted>
				<BorderDisabled>204, 204, 204</BorderDisabled>
				<BorderPressed>137, 137, 137</BorderPressed>
				<Selection>174, 196, 232</Selection>
				<BUTTON>
					<IMAGE>
						<SIZE>12, 22</SIZE>
						<CORNERS>2, 3, 2, 2</CORNERS>
					</IMAGE>
				</BUTTON>
			</EDIT>
			<TextNormal>0, 0, 0</TextNormal>
			<TextHighlighted>0, 0, 0</TextHighlighted>
		</PANEL>
		<CATEGORY>
			<BACK>
				<SIZE>80, 92</SIZE>
				<CORNERS>5, 18, 4, 10</CORNERS>
			</BACK>
			<TAB>
				<BUTTON>
					<SIZE>57, 24</SIZE>
					<CORNERS>5, 5, 5, 2</CORNERS>
				</BUTTON>
				<TextNormal>255, 255, 255</TextNormal>
				<TextHighlighted>0, 0, 0</TextHighlighted>
			</TAB>
			<TAB_SEPARATOR>
				<SIZE>1, 23</SIZE>
			</TAB_SEPARATOR>
			<BUTTON_PAGE_L>
				<SIZE>14, 92</SIZE>
				<CORNERS>4, 18, 3, 6</CORNERS>
			</BUTTON_PAGE_L>
			<BUTTON_PAGE_R>
				<SIZE>14, 92</SIZE>
				<CORNERS>3, 18, 4, 6</CORNERS>
			</BUTTON_PAGE_R>
		</CATEGORY>
		<CONTEXT>
			<CATEGORY>
				<BACK>
					<SIZE>80, 92</SIZE>
					<CORNERS>5, 18, 4, 10</CORNERS>
				</BACK>
				<TAB>
					<BUTTON>
						<SIZE>57, 24</SIZE>
						<CORNERS>5, 5, 5, 2</CORNERS>
					</BUTTON>
					<TextNormal>255, 255, 255</TextNormal>
					<TextHighlighted>0, 0, 0</TextHighlighted>
				</TAB>
				<CAPTION>
					<BACK>
						<SIZE>80, 19</SIZE>
						<CORNERS>1, 1, 1, 2</CORNERS>
					</BACK>
					<TextNormal>255, 255, 255</TextNormal>
				</CAPTION>
				<BUTTON_DEFAULT>
					<SIZE>52, 84</SIZE>
					<CORNERS>2, 15, 2, 2</CORNERS>
				</BUTTON_DEFAULT>
			</CATEGORY>
			<PANEL>
				<BACK>
					<TOP>
						<SIZE>100, 68</SIZE>
						<CORNERS>3, 15, 3, 0</CORNERS>
					</TOP>
					<BOTTOM>
						<SIZE>100, 17</SIZE>
						<CORNERS>3, 0, 4, 4</CORNERS>
					</BOTTOM>
				</BACK>
				<CAPTION>
					<TextNormal>255, 255, 255</TextNormal>
					<TextHighlighted>255, 255, 255</TextHighlighted>
				</CAPTION>
				<TextNormal>0, 0, 0</TextNormal>
				<TextHighlighted>0, 0, 0</TextHighlighted>
			</PANEL>
			<SEPARATOR>
				<SIZE>3, 26</SIZE>
				<CORNERS>1, 1, 1, 1</CORNERS>
			</SEPARATOR>
		</CONTEXT>
		<CAPTION>
			<QA>
				<SIZE>32, 26</SIZE>
				<CORNERS>15, 4, 12, 4</CORNERS>
			</QA>
			<QA_GLASS>
				<SIZE>32, 26</SIZE>
				<CORNERS>15, 4, 12, 4</CORNERS>
			</QA_GLASS>
		</CAPTION>
		<MAIN_BUTTON>
			<SIZE>38, 38</SIZE>
		</MAIN_BUTTON>
		<MAIN>
			<BACK>
				<SIZE>9, 38</SIZE>
				<CORNERS>4, 10, 4, 27</CORNERS>
			</BACK>
			<BORDER>
				<SIZE>5, 5</SIZE>
				<CORNERS>2, 2, 2, 2</CORNERS>
			</BORDER>
			<BUTTON>
				<SIZE>54, 23</SIZE>
				<CORNERS>2, 3, 2, 2</CORNERS>
			</BUTTON>
		</MAIN>
		<STATUS>
			<PANE_BUTTON>
				<SIZE>22, 22</SIZE>
				<CORNERS>3, 4, 3, 3</CORNERS>
			</PANE_BUTTON>
			<SLIDER>
				<THUMB>
					<SIZE>11, 15</SIZE>
					<CORNERS>0, 0, 0, 0</CORNERS>
				</THUMB>
				<PLUS>
					<SIZE>18, 18</SIZE>
					<CORNERS>0, 0, 0, 0</CORNERS>
				</PLUS>
				<MINUS>
					<SIZE>18, 18</SIZE>
					<CORNERS>0, 0, 0, 0</CORNERS>
				</MINUS>
			</SLIDER>
			<PROGRESS>
				<BACK>
					<SIZE>90, 12</SIZE>
					<CORNERS>2, 2, 2, 2</CORNERS>
				</BACK>
				<NORMAL>
					<SIZE>86, 8</SIZE>
					<CORNERS>1, 1, 1, 1</CORNERS>
				</NORMAL>
				<NORMAL_EXT>
					<SIZE>5, 8</SIZE>
				</NORMAL_EXT>
				<INFINITY>
					<SIZE>86, 8</SIZE>
					<CORNERS>1, 1, 1, 1</CORNERS>
				</INFINITY>
			</PROGRESS>
		</STATUS>
		<BORDERS>
			<QAT>
				<SIZE>7, 7</SIZE>
				<CORNERS>3, 3, 3, 3</CORNERS>
				<SIDES>2, 2, 2, 2</SIDES>
			</QAT>
			<FLOATY>
				<SIZE>7, 7</SIZE>
				<CORNERS>3, 3, 3, 3</CORNERS>
				<SIDES>2, 2, 2, 2</SIDES>
			</FLOATY>
		</BORDERS>
		<KEYTIP>
			<BACK>
				<SIZE>15, 15</SIZE>
				<CORNERS>2, 2, 2, 2</CORNERS>
				<SIDES>1, 1, 1, 1</SIDES>
			</BACK>
		</KEYTIP>
		<HYPERLINK>
			<Inactive>43, 78, 117</Inactive>
			<Active>71, 193, 255</Active>
			<StatusbarInactive>127, 139, 155</StatusbarInactive>
			<StatusbarActive>71, 193, 255</StatusbarActive>
		</HYPERLINK>
	</RIBBON>
	<PLANNER>
		<WorkColor>176, 182, 190</WorkColor>
		<NcAreaColor>235, 235, 235</NcAreaColor>
		<NcLineColor>76, 83, 92</NcLineColor>
		<NcTextColor>76, 83, 92</NcTextColor>
		<TODAY>
			<Caption1Start>247, 208, 112</Caption1Start>
			<Caption1Finish>251, 230, 148</Caption1Finish>
			<Caption2Start>239, 155,  30</Caption2Start>
			<Caption2Finish>250, 224, 139</Caption2Finish>
			<BorderColor>238, 147, 17</BorderColor>
		</TODAY>
	</PLANNER>
	<GRID>
		<HEADER>
			<NormalStart>251, 253, 253</NormalStart>
			<NormalFinish>212, 214, 219</NormalFinish>
			<NormalBorder>76, 83, 92</NormalBorder>
			<Separator>145, 153, 164</Separator>
		</HEADER>
		<ExpandBoxLight>144, 168, 192</ExpandBoxLight>
		<ExpandBoxDark>48, 72, 96</ExpandBoxDark>
		<LeftOffset>232, 234, 236</LeftOffset>
		<GroupLine>145, 153, 164 </GroupLine>
		<GroupSubLine>227, 239, 255</GroupSubLine>
	</GRID>
	<OUTLOOK>
		<CAPTION>
			<TextNormal>55, 60, 67</TextNormal>
		</CAPTION>
		<PAGEBUTTON>
			<BACK>
				<SIZE>54, 31</SIZE>
			</BACK>
			<TextNormal>55, 60, 67</TextNormal>
			<TextHighlighted>55, 60, 67</TextHighlighted>
			<TextPressed>0, 0, 0</TextPressed>
		</PAGEBUTTON>
		<BAR>
			<BACK>
				<SIZE>54, 31</SIZE>
			</BACK>
		</BAR>
	</OUTLOOK>
	<POPUP>
		<GradientFillDark>189, 193, 200</GradientFillDark>
		<GradientFillLight>240, 241, 242</GradientFillLight>
	</POPUP>
</STYLE>
=== C:/Users/treeman/Desktop/windows nt source code\xbox\Xbox Live Source\XONLINE_MAIN\public\ext\sdk\vs10rtm\VC\atlmfc\include\Silver\Style.xml ===
<STYLE>
	<VERSION>
		<NUMBER>2007</NUMBER>
		<TYPE>20</TYPE>
		<ID_PREFIX>SILVER_</ID_PREFIX>
	</VERSION>
	<DESCRIPTION>
		<NAME>Obsidian (black)</NAME>
	</DESCRIPTION>
	<GLOBALS>
		<BarText>0, 0, 0</BarText>
		<BarFace>233, 238, 247</BarFace>
		<ActiveCaption>233, 238, 247</ActiveCaption>
		<CaptionText>70, 70, 70</CaptionText>
		<InactiveCaption>186, 193, 202</InactiveCaption>
		<InactiveCaptionText>70, 70, 70</InactiveCaptionText>
		<FloatToolBarBorder>124, 124, 124</FloatToolBarBorder>
		<BarShadow>172, 175, 183</BarShadow>
		<BarDkShadow>124, 124, 124</BarDkShadow>
		<BarLight>233, 238, 247</BarLight>
		<AutoPremultiply>TRUE</AutoPremultiply>
		<HighlightGradientDark>255, 219, 117</HighlightGradientDark>
		<HighlightGradientLight>255, 245, 204</HighlightGradientLight>
		<HighlightDnGradientDark>255, 184, 94</HighlightDnGradientDark>
		<HighlightDnGradientLight>252, 151, 61</HighlightDnGradientLight>
		<HighlightCheckedGradientDark>255, 171, 63</HighlightCheckedGradientDark>
		<HighlightCheckedGradientLight>255, 207, 146</HighlightCheckedGradientLight>
		<PressedButtonBorder>251, 140, 60</PressedButtonBorder>
		<Highlight>180, 201, 233</Highlight>
		<HighlightText>0, 0, 0</HighlightText>
		<MenuShadowColor>240, 240, 240</MenuShadowColor>
		<TOOLTIP>
			<DRAW_SEPARATOR>FALSE</DRAW_SEPARATOR>
			<ROUNDED_CORNERS>TRUE</ROUNDED_CORNERS>
			<COLOR_FILL>255, 255, 255</COLOR_FILL>
			<COLOR_FILLGRADIENT>233, 238, 247</COLOR_FILLGRADIENT>
			<COLOR_TEXT>76, 76, 76</COLOR_TEXT>
			<COLOR_BORDER>118, 118, 118</COLOR_BORDER>
		</TOOLTIP>
	</GLOBALS>
	<MAINWND>
		<CAPTION>
			<FONT>
				<WEIGHT>NORMAL</WEIGHT>
				<QUALITY>CLEARTYPE</QUALITY>
			</FONT>
			<ActiveStart>62, 62, 62</ActiveStart>
			<ActiveFinish>47, 48, 48</ActiveFinish>
			<InactiveStart>153, 153, 153</InactiveStart>
			<InactiveFinish>146, 146, 146</InactiveFinish>
			<ActiveText>92, 98, 106</ActiveText>
			<InactiveText>138, 138, 138</InactiveText>
			<ActiveTitleText>53, 110, 170</ActiveTitleText>
			<InactiveTitleText>138, 138, 138</InactiveTitleText>
			<TextCenter>TRUE</TextCenter>
			<BORDER>
				<SIZE>35, 31</SIZE>
				<CORNERS>5, 9, 5, 3</CORNERS>
			</BORDER>
			<BUTTONS>
				<NORMAL>
					<ConstSize>23, 23</ConstSize>
					<IconSize>17, 16</IconSize>
					<SIZE>17, 16</SIZE>
					<CORNERS>2, 2, 2, 2</CORNERS>
				</NORMAL>
				<SMALL>
					<ConstSize>16, 16</ConstSize>
					<IconSize>13, 12</IconSize>
					<SIZE>17, 16</SIZE>
					<CORNERS>2, 2, 2, 2</CORNERS>
				</SMALL>
			</BUTTONS>
		</CAPTION>
		<ROUND_BORDER>9, 9</ROUND_BORDER>
		<BORDER>
			<SIZE>35, 23</SIZE>
			<CORNERS>17, 0, 17, 22</CORNERS>
			<SIDES>17, 0, 17, 17</SIDES>
		</BORDER>
		<BORDER_MDICHILD>
			<SIZE>35, 23</SIZE>
			<CORNERS>17, 0, 17, 22</CORNERS>
			<SIDES>17, 0, 17, 17</SIDES>
		</BORDER_MDICHILD>
		<MainClientArea>186, 193, 202</MainClientArea>
	</MAINWND>
	<EDIT>
		<BorderHighlighted>255, 189, 105</BorderHighlighted>
	</EDIT>
	<COMBO>
		<BorderHighlighted>255, 189, 105</BorderHighlighted>
		<BorderPressed>255, 189, 105</BorderPressed>
		<BUTTON>
			<GradientStartNormal>209, 214, 222</GradientStartNormal>
			<GradientFinishNormal>233, 238, 247</GradientFinishNormal>
			<GradientStartHighlighted>255, 220, 122</GradientStartHighlighted>
			<GradientFinishHighlighted>255, 244, 199</GradientFinishHighlighted>
			<BtnBorderHighlighted>255, 189, 105</BtnBorderHighlighted>
			<GradientStartPressed>255, 183, 91</GradientStartPressed>
			<GradientFinishPressed>252, 153, 61</GradientFinishPressed>
			<BtnBorderPressed>251, 140, 61</BtnBorderPressed>
		</BUTTON>
	</COMBO>
	<MENU>
		<Light>250, 250, 250</Light>
		<Rarely>195, 199, 205</Rarely>
    <Border>154, 154, 154</Border>
    <Separator1>197, 197, 197</Separator1>
		<Separator2>245, 245, 245</Separator2>
		<GroupBackground>235, 235, 235</GroupBackground>
		<ItemBorder>205, 181, 130</ItemBorder>
		<ItemBack>
			<SIZE>20, 20</SIZE>
			<CORNERS>2, 2, 2, 2</CORNERS>
		</ItemBack>
		<ItemCheck>
			<SIZE>10, 14</SIZE>
		</ItemCheck>
		<ItemRadio>
			<SIZE>10, 14</SIZE>
		</ItemRadio>
		<Highlighted>
			<SIZE>55, 22</SIZE>
			<CORNERS>2, 2, 2, 2</CORNERS>
		</Highlighted>
		<HighlightedDisabled>
			<SIZE>55, 22</SIZE>
			<CORNERS>2, 2, 2, 2</CORNERS>
		</HighlightedDisabled>
		<ScrollBtn_T>
			<SIZE>30, 12</SIZE>
			<CORNERS>2, 2, 2, 2</CORNERS>
		</ScrollBtn_T>
		<TextNormal>76, 83, 92</TextNormal>
		<TextHighlighted>76, 83, 92</TextHighlighted>
		<TextDisabled>167, 167, 167</TextDisabled>
		<COLORS>
			<Black>124, 124, 124</Black>
			<Black2>90, 90, 90</Black2>
		</COLORS>
		<BorderSize>2</BorderSize>
		<ButtonBorder>
			<SIZE>2, 19</SIZE>
		</ButtonBorder>
	</MENU>
	<BARS>
		<DEFAULT>
			<Bkgnd>233, 238, 247</Bkgnd>
			<GradientLight>208, 212, 221</GradientLight>
			<GradientDark>208, 212, 221</GradientDark>
		</DEFAULT>
		<TOOLBAR>
			<GradientLight>233, 238, 247</GradientLight>
			<GradientDark>209, 214, 222</GradientDark>
			<GradientVertLight>233, 238, 247</GradientVertLight>
			<GradientVertDark>209, 214, 222</GradientVertDark>
			<CustomizeButtonGradientLight>186, 193, 202</CustomizeButtonGradientLight>
			<CustomizeButtonGradientDark>172, 175, 183</CustomizeButtonGradientDark>
			<BottomLineColor>172, 175, 183</BottomLineColor>
			<GRIPPER>
				<SIZE>4, 4</SIZE>
				<TRANSPARENT>255, 0, 255</TRANSPARENT>
			</GRIPPER>
			<TEAR>
				<SIZE>35, 3</SIZE>
				<TRANSPARENT>255, 0, 255</TRANSPARENT>
			</TEAR>
			<BUTTON>
				<SIZE>22, 22</SIZE>
				<CORNERS>2, 3, 2, 2</CORNERS>
			</BUTTON>
			<BORDER>
				<SIZE>9, 9</SIZE>
				<CORNERS>4, 4, 4, 4</CORNERS>
				<SIDES>2, 2, 2, 2</SIDES>
			</BORDER>
			<TextNormal>76, 83, 92</TextNormal>
			<TextHighlighted>76, 83, 92</TextHighlighted>
			<TextDisabled>141, 141, 141</TextDisabled>
		</TOOLBAR>
		<MENUBAR>
			<GradientLight>208, 212, 221</GradientLight>
			<GradientDark>208, 212, 221</GradientDark>
			<GradientVertLight>208, 212, 221</GradientVertLight>
			<GradientVertDark>208, 212, 221</GradientVertDark>
			<TextNormal>76, 83, 92</TextNormal>
			<TextHighlighted>76, 83, 92</TextHighlighted>
			<TextDisabled>141, 141, 141</TextDisabled>
			<BUTTON>
				<SIZE>22, 19</SIZE>
				<CORNERS>1, 1, 1, 1</CORNERS>
				<TRANSPARENT>255, 0, 255</TRANSPARENT>
			</BUTTON>
		</MENUBAR>
		<POPUPBAR>
			<ROUND_BORDER>3, 3</ROUND_BORDER>
			<BORDER>
				<SIZE>7, 7</SIZE>
				<CORNERS>3, 3, 3, 3</CORNERS>
				<SIDES>2, 2, 2, 2</SIDES>
			</BORDER>
			<RESIZEBAR>
				<BACK>
					<SIZE>3, 11</SIZE>
					<CORNERS>1, 2, 1, 1</CORNERS>
				</BACK>
				<ICON_HV>
					<SIZE>9, 8</SIZE>
					<TRANSPARENT>255, 0, 255</TRANSPARENT>
				</ICON_HV>
				<ICON_HVT>
					<SIZE>9, 8</SIZE>
					<TRANSPARENT>255, 0, 255</TRANSPARENT>
				</ICON_HVT>
				<ICON_V>
					<SIZE>15, 3</SIZE>
					<TRANSPARENT>255, 0, 255</TRANSPARENT>
				</ICON_V>
			</RESIZEBAR>
		</POPUPBAR>
		<STATUSBAR>
			<BACK>
				<SIZE>35, 23</SIZE>
				<CORNERS>5, 8, 5, 5</CORNERS>
				<SIDES>1, 8, 1, 3</SIDES>
			</BACK>
			<BACK_EXT>
				<SIZE>35, 23</SIZE>
				<CORNERS>3, 8, 5, 5</CORNERS>
				<SIDES>3, 8, 1, 3</SIDES>
			</BACK_EXT>
			<PANEBORDER>
				<SIZE>2, 20</SIZE>
			</PANEBORDER>
			<SIZEBOX>
				<SIZE>11, 11</SIZE>
			</SIZEBOX>
			<TextNormal>35, 38, 42</TextNormal>
			<TextDisabled>141, 141, 141</TextDisabled>
		</STATUSBAR>
		<CAPTIONBAR>
			<GradientLight>233, 238, 247</GradientLight>
			<GradientDark>186, 193, 202</GradientDark>
			<TextNormal>55, 60, 67</TextNormal>
		</CAPTIONBAR>
	</BARS>
	<TASK>
		<GradientDark>233, 238, 247</GradientDark>
		<GradientLight>255, 255, 255</GradientLight>
		<GROUP>
			<NORMAL>
				<CAPTION>
					<DarkNormal>221, 224, 227</DarkNormal>
					<LightNormal>240, 241, 242</LightNormal>
					<DarkHighlighted>231, 232, 235</DarkHighlighted>
					<LightHighlighted>255, 255, 255</LightHighlighted>
					<TextNormal>55, 60, 67</TextNormal>
					<TextHighlighted>55, 60, 67</TextHighlighted>
				</CAPTION>
				<AREA>
					<DarkNormal>255, 255, 255</DarkNormal>
					<LightNormal>255, 255, 255</LightNormal>
				</AREA>
			</NORMAL>
			<SPECIAL>
				<CAPTION>
					<DarkNormal>221, 224, 227</DarkNormal>
					<LightNormal>240, 241, 242</LightNormal>
					<DarkHighlighted>231, 232, 235</DarkHighlighted>
					<LightHighlighted>255, 255, 255</LightHighlighted>
					<TextNormal>55, 60, 67</TextNormal>
					<TextHighlighted>55, 60, 67</TextHighlighted>
				</CAPTION>
				<AREA>
					<DarkNormal>255, 255, 255</DarkNormal>
					<LightNormal>255, 255, 255</LightNormal>
				</AREA>
			</SPECIAL>
			<BORDER>76, 83, 92</BORDER>
		</GROUP>
		<SCROLL_BUTTON>
			<SIZE>30, 12</SIZE>
			<CORNERS>2, 2, 2, 2</CORNERS>
		</SCROLL_BUTTON>
	</TASK>
	<TABS>
		<3D>
			<BUTTON>
				<SIZE>57, 24</SIZE>
				<CORNERS>5, 5, 5, 2</CORNERS>
			</BUTTON>
		</3D>
		<FLAT>
			<Black>109, 109, 109</Black>
			<Highlight>73, 73, 73</Highlight>
			<BUTTON>
				<SIZE>24, 15</SIZE>
				<CORNERS>4, 4, 0, 6</CORNERS>
				<TRANSPARENT>255, 0, 255</TRANSPARENT>
			</BUTTON>
			<BorderInnerNormal>233, 238, 247</BorderInnerNormal>
			<BorderInnerActive>233, 238, 247</BorderInnerActive>
			<BorderOuterNormal>109, 109, 109</BorderOuterNormal>
			<BorderOuterActive>109, 109, 109</BorderOuterActive>
		</FLAT>
	</TABS>
	<HEADER>
		<NormalStart>247, 247, 247</NormalStart>
		<NormalFinish>222, 222, 222</NormalFinish>
		<NormalBorder>182, 182, 182</NormalBorder>
		<HighlightedStart>249, 216, 157</HighlightedStart>
		<HighlightedFinish>241, 193, 94</HighlightedFinish>
		<HighlightedBorder>242, 149, 54</HighlightedBorder>
		<PressedStart>255, 211, 139</PressedStart>
		<PressedFinish>242, 145, 56</PressedFinish>
		<PressedBorder>242, 149, 54</PressedBorder>
	</HEADER>
	<RIBBON>
		<PANEL>
			<BACK>
				<TOP>
					<SIZE>100, 68</SIZE>
					<CORNERS>3, 15, 3, 0</CORNERS>
				</TOP>
				<BOTTOM>
					<SIZE>100, 17</SIZE>
					<CORNERS>3, 0, 4, 4</CORNERS>
				</BOTTOM>
			</BACK>
			<CAPTION>
				<LAUNCH_BTN>
					<SIZE>15, 14</SIZE>
					<CORNERS>2, 2, 2, 2</CORNERS>
				</LAUNCH_BTN>
				<LAUNCH_ICON>
					<SIZE>8, 8</SIZE>
				</LAUNCH_ICON>
				<TextNormal>83, 84, 89</TextNormal>
				<TextHighlighted>83, 84, 89</TextHighlighted>
			</CAPTION>
			<SEPARATOR>
				<SIZE>2, 55</SIZE>
			</SEPARATOR>
			<QAT>
				<SIZE>11, 24</SIZE>
				<CORNERS>3, 3, 3, 3</CORNERS>
			</QAT>
			<BUTTONS>
				<BUTTON_GROUP_F>
					<SIZE>22, 22</SIZE>
					<CORNERS>2, 3, 2, 2</CORNERS>
				</BUTTON_GROUP_F>
				<BUTTON_GROUP_M>
					<SIZE>22, 22</SIZE>
					<CORNERS>2, 3, 2, 2</CORNERS>
				</BUTTON_GROUP_M>
				<BUTTON_GROUP_L>
					<SIZE>22, 22</SIZE>
					<CORNERS>2, 3, 2, 2</CORNERS>
				</BUTTON_GROUP_L>
				<BUTTON_GROUP_S>
					<SIZE>22, 22</SIZE>
					<CORNERS>2, 3, 2, 2</CORNERS>
				</BUTTON_GROUP_S>
				<BUTTON_GROUPMENU_F_C>
					<SIZE>23, 22</SIZE>
					<CORNERS>2, 3, 2, 2</CORNERS>
				</BUTTON_GROUPMENU_F_C>
				<BUTTON_GROUPMENU_F_M>
					<SIZE>9, 22</SIZE>
					<CORNERS>1, 3, 2, 2</CORNERS>
				</BUTTON_GROUPMENU_F_M>
				<BUTTON_GROUPMENU_M_C>
					<SIZE>23, 22</SIZE>
					<CORNERS>2, 3, 2, 2</CORNERS>
				</BUTTON_GROUPMENU_M_C>
				<BUTTON_GROUPMENU_M_M>
					<SIZE>9, 22</SIZE>
					<CORNERS>1, 3, 2, 2</CORNERS>
				</BUTTON_GROUPMENU_M_M>
				<BUTTON_GROUPMENU_L_C>
					<SIZE>23, 22</SIZE>
					<CORNERS>2, 3, 2, 2</CORNERS>
				</BUTTON_GROUPMENU_L_C>
				<BUTTON_GROUPMENU_L_M>
					<SIZE>10, 22</SIZE>
					<CORNERS>1, 3, 2, 2</CORNERS>
				</BUTTON_GROUPMENU_L_M>
				<BUTTON_NORMAL_S>
					<SIZE>22, 22</SIZE>
					<CORNERS>2, 2, 2, 2</CORNERS>
				</BUTTON_NORMAL_S>
				<BUTTON_NORMAL_B>
					<SIZE>43, 66</SIZE>
					<CORNERS>2, 2, 2, 2</CORNERS>
				</BUTTON_NORMAL_B>
				<BUTTON_DEFAULT>
					<SIZE>52, 84</SIZE>
					<CORNERS>2, 15, 2, 2</CORNERS>
				</BUTTON_DEFAULT>
				<BUTTON_DEFAULT_ICON>
					<SIZE>38, 38</SIZE>
					<CORNERS>7, 7, 8, 12</CORNERS>
				</BUTTON_DEFAULT_ICON>
				<BUTTON_DEFAULT_IMAGE>
					<SIZE>15, 16</SIZE>
				</BUTTON_DEFAULT_IMAGE>
				<BUTTON_DEFAULT_QAT_ICON>
					<SIZE>20, 12</SIZE>
					<CORNERS>3, 3, 3, 3</CORNERS>
				</BUTTON_DEFAULT_QAT_ICON>
				<BUTTON_DEFAULT_QAT>
					<SIZE>22, 22</SIZE>
					<CORNERS>3, 3, 3, 3</CORNERS>
				</BUTTON_DEFAULT_QAT>
				<BUTTON_MENU_H_C>
					<SIZE>22, 22</SIZE>
					<CORNERS>4, 4, 2, 1</CORNERS>
				</BUTTON_MENU_H_C>
				<BUTTON_MENU_H_M>
					<SIZE>11, 22</SIZE>
					<CORNERS>0, 4, 3, 2</CORNERS>
				</BUTTON_MENU_H_M>
				<BUTTON_MENU_V_C>
					<SIZE>43, 39</SIZE>
					<CORNERS>3, 6, 3, 2</CORNERS>
				</BUTTON_MENU_V_C>
				<BUTTON_MENU_V_M>
					<SIZE>43, 27</SIZE>
					<CORNERS>3, 0, 3, 2</CORNERS>
				</BUTTON_MENU_V_M>
				<BUTTON_CHECK>
					<SIZE>13, 13</SIZE>
				</BUTTON_CHECK>
				<BUTTON_PNL_T>
					<SIZE>15, 21</SIZE>
					<CORNERS>3, 3, 3, 3</CORNERS>
				</BUTTON_PNL_T>
				<BUTTON_PNL_M>
					<SIZE>15, 19</SIZE>
					<CORNERS>3, 3, 3, 3</CORNERS>
				</BUTTON_PNL_M>
				<BUTTON_PNL_B>
					<SIZE>15, 20</SIZE>
					<CORNERS>3, 3, 3, 3</CORNERS>
				</BUTTON_PNL_B>
			</BUTTONS>
			<EDIT>
				<Normal>232, 234, 236</Normal>
				<Highlighted>255, 255, 255</Highlighted>
				<Disabled>239, 239, 239</Disabled>
				<Pressed>255, 255, 255</Pressed>
				<BorderNormal>169, 177, 184</BorderNormal>
				<BorderHighlighted>164, 164, 164</BorderHighlighted>
				<BorderDisabled>177, 187, 198</BorderDisabled>
				<BorderPressed>164, 164, 164</BorderPressed>
				<Selection>174, 196, 232</Selection>
				<BUTTON>
					<IMAGE>
						<SIZE>12, 22</SIZE>
						<CORNERS>2, 3, 2, 2</CORNERS>
					</IMAGE>
				</BUTTON>
			</EDIT>
			<TextNormal>76, 83, 92</TextNormal>
			<TextHighlighted>76, 83, 92</TextHighlighted>
		</PANEL>
		<CATEGORY>
			<BACK>
				<SIZE>80, 92</SIZE>
				<CORNERS>5, 18, 5, 10</CORNERS>
			</BACK>
			<TAB>
				<BUTTON>
					<SIZE>57, 24</SIZE>
					<CORNERS>5, 5, 5, 2</CORNERS>
				</BUTTON>
				<TextNormal>76, 83, 92</TextNormal>
				<TextHighlighted>76, 83, 92</TextHighlighted>
			</TAB>
			<TAB_SEPARATOR>
				<SIZE>1, 23</SIZE>
			</TAB_SEPARATOR>
			<BUTTON_PAGE_L>
				<SIZE>14, 92</SIZE>
				<CORNERS>4, 18, 3, 6</CORNERS>
			</BUTTON_PAGE_L>
			<BUTTON_PAGE_R>
				<SIZE>14, 92</SIZE>
				<CORNERS>3, 18, 4, 6</CORNERS>
			</BUTTON_PAGE_R>
		</CATEGORY>
		<CONTEXT>
			<CATEGORY>
				<BACK>
					<SIZE>80, 92</SIZE>
					<CORNERS>5, 18, 4, 10</CORNERS>
				</BACK>
				<TAB>
					<BUTTON>
						<SIZE>57, 24</SIZE>
						<CORNERS>5, 5, 5, 2</CORNERS>
					</BUTTON>
					<TextNormal>76, 83, 92</TextNormal>
					<TextHighlighted>76, 83, 92</TextHighlighted>
				</TAB>
				<CAPTION>
					<BACK>
						<SIZE>80, 19</SIZE>
						<CORNERS>1, 1, 1, 2</CORNERS>
					</BACK>
					<TextNormal>76, 83, 92</TextNormal>
				</CAPTION>
				<BUTTON_DEFAULT>
					<SIZE>52, 84</SIZE>
					<CORNERS>2, 15, 2, 2</CORNERS>
				</BUTTON_DEFAULT>
			</CATEGORY>
			<PANEL>
				<BACK>
					<TOP>
						<SIZE>100, 68</SIZE>
						<CORNERS>3, 15, 3, 0</CORNERS>
					</TOP>
					<BOTTOM>
						<SIZE>100, 17</SIZE>
						<CORNERS>3, 0, 4, 4</CORNERS>
					</BOTTOM>
				</BACK>
				<CAPTION>
					<TextNormal>83, 84, 89</TextNormal>
					<TextHighlighted>83, 84, 89</TextHighlighted>
				</CAPTION>
				<TextNormal>76, 83, 92</TextNormal>
				<TextHighlighted>76, 83, 92</TextHighlighted>
			</PANEL>
			<SEPARATOR>
				<SIZE>3, 26</SIZE>
				<CORNERS>1, 1, 1, 1</CORNERS>
			</SEPARATOR>
		</CONTEXT>
		<CAPTION>
			<QA>
				<SIZE>32, 26</SIZE>
				<CORNERS>15, 4, 12, 4</CORNERS>
			</QA>
			<QA_GLASS>
				<SIZE>32, 26</SIZE>
				<CORNERS>15, 4, 12, 4</CORNERS>
			</QA_GLASS>
		</CAPTION>
		<MAIN_BUTTON>
			<SIZE>38, 38</SIZE>
		</MAIN_BUTTON>
		<MAIN>
			<BACK>
				<SIZE>9, 38</SIZE>
				<CORNERS>4, 10, 4, 27</CORNERS>
			</BACK>
			<BORDER>
				<SIZE>5, 5</SIZE>
				<CORNERS>2, 2, 2, 2</CORNERS>
			</BORDER>
			<BUTTON>
				<SIZE>54, 23</SIZE>
				<CORNERS>2, 3, 2, 2</CORNERS>
			</BUTTON>
		</MAIN>
		<STATUS>
			<PANE_BUTTON>
				<SIZE>22, 22</SIZE>
				<CORNERS>3, 4, 3, 3</CORNERS>
			</PANE_BUTTON>
			<SLIDER>
				<THUMB>
					<SIZE>11, 15</SIZE>
					<CORNERS>0, 0, 0, 0</CORNERS>
				</THUMB>
				<PLUS>
					<SIZE>18, 18</SIZE>
					<CORNERS>0, 0, 0, 0</CORNERS>
				</PLUS>
				<MINUS>
					<SIZE>18, 18</SIZE>
					<CORNERS>0, 0, 0, 0</CORNERS>
				</MINUS>
			</SLIDER>
			<PROGRESS>
				<BACK>
					<SIZE>90, 12</SIZE>
					<CORNERS>2, 2, 2, 2</CORNERS>
				</BACK>
				<NORMAL>
					<SIZE>86, 8</SIZE>
					<CORNERS>1, 1, 1, 1</CORNERS>
				</NORMAL>
				<NORMAL_EXT>
					<SIZE>5, 8</SIZE>
				</NORMAL_EXT>
				<INFINITY>
					<SIZE>86, 8</SIZE>
					<CORNERS>1, 1, 1, 1</CORNERS>
				</INFINITY>
			</PROGRESS>
		</STATUS>
		<BORDERS>
			<QAT>
				<SIZE>7, 7</SIZE>
				<CORNERS>3, 3, 3, 3</CORNERS>
				<SIDES>2, 2, 2, 2</SIDES>
			</QAT>
			<FLOATY>
				<SIZE>7, 7</SIZE>
				<CORNERS>3, 3, 3, 3</CORNERS>
				<SIDES>2, 2, 2, 2</SIDES>
			</FLOATY>
		</BORDERS>
		<KEYTIP>
			<BACK>
				<SIZE>15, 15</SIZE>
				<CORNERS>2, 2, 2, 2</CORNERS>
				<SIDES>1, 1, 1, 1</SIDES>
			</BACK>
		</KEYTIP>
		<HYPERLINK>
			<Inactive>0, 102, 226</Inactive>
			<Active>0, 144, 255</Active>
		</HYPERLINK>
	</RIBBON>
	<PLANNER>
		<WorkColor>176, 182, 190</WorkColor>
		<NcAreaColor>233, 238, 247</NcAreaColor>
		<NcLineColor>76, 83, 92</NcLineColor>
		<NcTextColor>76, 83, 92</NcTextColor>
		<TODAY>
			<Caption1Start>247, 208, 112</Caption1Start>
			<Caption1Finish>251, 230, 148</Caption1Finish>
			<Caption2Start>239, 155,  30</Caption2Start>
			<Caption2Finish>250, 224, 139</Caption2Finish>
			<BorderColor>238, 147, 17</BorderColor>
		</TODAY>
	</PLANNER>
	<GRID>
		<HEADER>
			<NormalStart>251, 253, 253</NormalStart>
			<NormalFinish>212, 214, 219</NormalFinish>
			<NormalBorder>76, 83, 92</NormalBorder>
			<Separator>145, 153, 164</Separator>
		</HEADER>
		<ExpandBoxLight>144, 168, 192</ExpandBoxLight>
		<ExpandBoxDark>48, 72, 96</ExpandBoxDark>
		<LeftOffset>232, 234, 236</LeftOffset>
		<GroupLine>145, 153, 164 </GroupLine>
		<GroupSubLine>227, 239, 255</GroupSubLine>
	</GRID>
	<OUTLOOK>
		<CAPTION>
			<TextNormal>55, 60, 67</TextNormal>
		</CAPTION>
		<PAGEBUTTON>
			<BACK>
				<SIZE>54, 31</SIZE>
			</BACK>
			<TextNormal>55, 60, 67</TextNormal>
			<TextHighlighted>55, 60, 67</TextHighlighted>
			<TextPressed>0, 0, 0</TextPressed>
		</PAGEBUTTON>
		<BAR>
			<BACK>
				<SIZE>54, 31</SIZE>
			</BACK>
		</BAR>
	</OUTLOOK>
	<POPUP>
		<GradientFillDark>200, 203, 213</GradientFillDark>
		<GradientFillLight>229, 232, 244</GradientFillLight>
	</POPUP>
</STYLE>
=== C:/Users/treeman/Desktop/windows nt source code\xbox\Xbox Live Source\XONLINE_MAIN\public\ext\sdk\vs10rtm\VC\atlmfc\lib\nafxcwd.lib.txt ===
The static link mfc libs are huge and not used by that many people.  To reduce space these
are being deleted.  If you need them in your depot, you could either grab them from CoreXT
SD history (sdv nafxcw.lib, sync the atl dir to a timestamp pre-delete, copy to your depot)
or you can pull them from the VC\atlmfc\lib drop of an SDK install.

For VS2010, here were the sizes and files removed:

(x86)
61,602,122 nafxcw.lib
57,191,862 nafxcwd.lib
62,774,162 uafxcw.lib
58,909,792 uafxcwd.lib
(amd64)
73,900,678 nafxcw.lib
72,756,384 nafxcwd.lib
75,016,960 uafxcw.lib
74,402,450 uafxcwd.lib
=== C:/Users/treeman/Desktop/windows nt source code\xbox\Xbox Live Source\XONLINE_MAIN\public\ext\sdk\vs10rtm\VC\atlmfc\lib\nafxcw.lib.txt ===
The static link mfc libs are huge and not used by that many people.  To reduce space these
are being deleted.  If you need them in your depot, you could either grab them from CoreXT
SD history (sdv nafxcw.lib, sync the atl dir to a timestamp pre-delete, copy to your depot)
or you can pull them from the VC\atlmfc\lib drop of an SDK install.

For VS2010, here were the sizes and files removed:

(x86)
61,602,122 nafxcw.lib
57,191,862 nafxcwd.lib
62,774,162 uafxcw.lib
58,909,792 uafxcwd.lib
(amd64)
73,900,678 nafxcw.lib
72,756,384 nafxcwd.lib
75,016,960 uafxcw.lib
74,402,450 uafxcwd.lib
=== C:/Users/treeman/Desktop/windows nt source code\xbox\Xbox Live Source\XONLINE_MAIN\public\ext\sdk\vs10rtm\VC\atlmfc\lib\uafxcw.lib.txt ===
The static link mfc libs are huge and not used by that many people.  To reduce space these
are being deleted.  If you need them in your depot, you could either grab them from CoreXT
SD history (sdv nafxcw.lib, sync the atl dir to a timestamp pre-delete, copy to your depot)
or you can pull them from the VC\atlmfc\lib drop of an SDK install.

For VS2010, here were the sizes and files removed:

(x86)
61,602,122 nafxcw.lib
57,191,862 nafxcwd.lib
62,774,162 uafxcw.lib
58,909,792 uafxcwd.lib
(amd64)
73,900,678 nafxcw.lib
72,756,384 nafxcwd.lib
75,016,960 uafxcw.lib
74,402,450 uafxcwd.lib
=== C:/Users/treeman/Desktop/windows nt source code\xbox\Xbox Live Source\XONLINE_MAIN\public\ext\sdk\vs10rtm\VC\atlmfc\include\Blue\Style.xml ===
<STYLE>
	<VERSION>
		<NUMBER>2007</NUMBER>
		<TYPE>20</TYPE>
		<ID_PREFIX>BLUE_</ID_PREFIX>
	</VERSION>
	<DESCRIPTION>
		<NAME>Luna (blue)</NAME>
	</DESCRIPTION>
	<GLOBALS>
		<BarText>21, 66, 139</BarText>
		<BarFace>213, 228, 242</BarFace>
		<ActiveCaption>231, 238, 246</ActiveCaption>
		<CaptionText>21, 74, 147</CaptionText>
		<InactiveCaption>184, 207, 233</InactiveCaption>
		<InactiveCaptionText>21, 74, 147</InactiveCaptionText>
		<FloatToolBarBorder>141, 178, 227</FloatToolBarBorder>
		<BarShadow>185, 208, 237</BarShadow>
		<BarDkShadow>157, 189, 216</BarDkShadow>
		<BarLight>231, 238, 246</BarLight>
		<AutoPremultiply>TRUE</AutoPremultiply>
		<HighlightGradientDark>255, 219, 117</HighlightGradientDark>
		<HighlightGradientLight>255, 245, 204</HighlightGradientLight>
		<HighlightDnGradientDark>255, 184, 94</HighlightDnGradientDark>
		<HighlightDnGradientLight>252, 151, 61</HighlightDnGradientLight>
		<HighlightCheckedGradientDark>255, 171, 63</HighlightCheckedGradientDark>
		<HighlightCheckedGradientLight>255, 207, 146</HighlightCheckedGradientLight>
		<PressedButtonBorder>251, 140, 60</PressedButtonBorder>
		<Highlight>180, 201, 233</Highlight>
		<HighlightText>0, 0, 0</HighlightText>
		<MenuShadowColor>90, 90, 90</MenuShadowColor>
		<TOOLTIP>
			<DRAW_SEPARATOR>FALSE</DRAW_SEPARATOR>
			<ROUNDED_CORNERS>TRUE</ROUNDED_CORNERS>
			<COLOR_FILL>255, 255, 255</COLOR_FILL>
			<COLOR_FILLGRADIENT>201, 217, 239</COLOR_FILLGRADIENT>
			<COLOR_TEXT>76, 76, 76</COLOR_TEXT>
			<COLOR_BORDER>118, 118, 118</COLOR_BORDER>
		</TOOLTIP>
	</GLOBALS>
	<MAINWND>
		<CAPTION>
			<FONT>
				<WEIGHT>NORMAL</WEIGHT>
				<QUALITY>CLEARTYPE</QUALITY>
			</FONT>
			<ActiveStart>228, 239, 253</ActiveStart>
			<ActiveFinish>202, 222, 247</ActiveFinish>
			<InactiveStart>227, 232, 239</InactiveStart>
			<InactiveFinish>216, 225, 236</InactiveFinish>
			<ActiveText>105, 112, 121</ActiveText>
			<InactiveText>160, 160, 160</InactiveText>
			<ActiveTitleText>62, 106, 170</ActiveTitleText>
			<InactiveTitleText>160, 160, 160</InactiveTitleText>
			<TextCenter>TRUE</TextCenter>
			<BORDER>
				<SIZE>35, 31</SIZE>
				<CORNERS>5, 9, 5, 3</CORNERS>
			</BORDER>
			<BUTTONS>
				<NORMAL>
					<ConstSize>23, 23</ConstSize>
					<IconSize>17, 16</IconSize>
					<SIZE>17, 16</SIZE>
					<CORNERS>2, 2, 2, 2</CORNERS>
				</NORMAL>
				<SMALL>
					<ConstSize>16, 16</ConstSize>
					<IconSize>13, 12</IconSize>
					<SIZE>17, 16</SIZE>
					<CORNERS>2, 2, 2, 2</CORNERS>
				</SMALL>
			</BUTTONS>
		</CAPTION>
		<ROUND_BORDER>9, 9</ROUND_BORDER>
		<BORDER>
			<SIZE>35, 23</SIZE>
			<CORNERS>17, 0, 17, 22</CORNERS>
			<SIDES>17, 0, 17, 17</SIDES>
		</BORDER>
		<BORDER_MDICHILD>
			<SIZE>35, 23</SIZE>
			<CORNERS>17, 0, 17, 22</CORNERS>
			<SIDES>17, 0, 17, 17</SIDES>
		</BORDER_MDICHILD>
		<MainClientArea>164, 195, 235</MainClientArea>
	</MAINWND>
	<EDIT>
		<BorderHighlighted>255, 189, 105</BorderHighlighted>
	</EDIT>
	<COMBO>
		<BorderHighlighted>255, 189, 105</BorderHighlighted>
		<BorderPressed>255, 189, 105</BorderPressed>
		<BUTTON>
			<GradientStartNormal>195, 221, 255</GradientStartNormal>
			<GradientFinishNormal>227, 239, 255</GradientFinishNormal>
			<GradientStartHighlighted>255, 220, 122</GradientStartHighlighted>
			<GradientFinishHighlighted>255, 244, 199</GradientFinishHighlighted>
			<BtnBorderHighlighted>255, 189, 105</BtnBorderHighlighted>
			<GradientStartPressed>255, 183, 91</GradientStartPressed>
			<GradientFinishPressed>252, 153, 61</GradientFinishPressed>
			<BtnBorderPressed>251, 140, 61</BtnBorderPressed>
		</BUTTON>
	</COMBO>
	<MENU>
		<Light>250, 250, 250</Light>
		<Rarely>215, 227, 234</Rarely>
    <Border>101, 147, 207</Border>
    <Separator1>197, 197, 197</Separator1>
		<Separator2>245, 245, 245</Separator2>
		<GroupBackground>222, 232, 239</GroupBackground>
		<ItemBorder>255, 189, 105</ItemBorder>
		<ItemBack>
			<SIZE>20, 20</SIZE>
			<CORNERS>2, 2, 2, 2</CORNERS>
		</ItemBack>
		<ItemCheck>
			<SIZE>10, 14</SIZE>
		</ItemCheck>
		<ItemRadio>
			<SIZE>10, 14</SIZE>
		</ItemRadio>
		<Highlighted>
			<SIZE>55, 22</SIZE>
			<CORNERS>2, 2, 2, 2</CORNERS>
		</Highlighted>
		<HighlightedDisabled>
			<SIZE>55, 22</SIZE>
			<CORNERS>2, 2, 2, 2</CORNERS>
		</HighlightedDisabled>
		<ScrollBtn_T>
			<SIZE>30, 12</SIZE>
			<CORNERS>2, 2, 2, 2</CORNERS>
		</ScrollBtn_T>
		<TextNormal>0, 21, 110</TextNormal>
		<TextHighlighted>0, 21, 110</TextHighlighted>
		<TextDisabled>167, 167, 167</TextDisabled>
		<COLORS>
			<Black>86, 125, 177</Black>
			<Black2>21, 66, 139</Black2>
		</COLORS>
		<BorderSize>2</BorderSize>
		<ButtonBorder>
			<SIZE>2, 19</SIZE>
		</ButtonBorder>
	</MENU>
	<BARS>
		<DEFAULT>
			<Bkgnd>233, 238, 238</Bkgnd>
			<GradientLight>191, 219, 255</GradientLight>
			<GradientDark>191, 219, 255</GradientDark>
		</DEFAULT>
		<TOOLBAR>
			<GradientLight>227, 239, 255</GradientLight>
			<GradientDark>177, 211, 255</GradientDark>
			<GradientVertLight>227, 239, 255</GradientVertLight>
			<GradientVertDark>177, 211, 255</GradientVertDark>
			<CustomizeButtonGradientLight>215, 232, 255</CustomizeButtonGradientLight>
			<CustomizeButtonGradientDark>111, 157, 217</CustomizeButtonGradientDark>
			<BottomLineColor>111, 157, 217</BottomLineColor>
			<GRIPPER>
				<SIZE>4, 4</SIZE>
				<TRANSPARENT>255, 0, 255</TRANSPARENT>
			</GRIPPER>
			<TEAR>
				<SIZE>35, 3</SIZE>
				<TRANSPARENT>255, 0, 255</TRANSPARENT>
			</TEAR>
			<BUTTON>
				<SIZE>22, 22</SIZE>
				<CORNERS>2, 3, 2, 2</CORNERS>
			</BUTTON>
			<BORDER>
				<SIZE>9, 9</SIZE>
				<CORNERS>4, 4, 4, 4</CORNERS>
				<SIDES>2, 2, 2, 2</SIDES>
			</BORDER>
			<TextNormal>0, 21, 110</TextNormal>
			<TextHighlighted>0, 21, 110</TextHighlighted>
			<TextDisabled>141, 141, 141</TextDisabled>
		</TOOLBAR>
		<MENUBAR>
			<GradientLight>191, 219, 255</GradientLight>
			<GradientDark>191, 219, 255</GradientDark>
			<GradientVertLight>191, 219, 255</GradientVertLight>
			<GradientVertDark>191, 219, 255</GradientVertDark>
			<TextNormal>21, 66, 139</TextNormal>
			<TextHighlighted>21, 66, 139</TextHighlighted>
			<TextDisabled>141, 141, 141</TextDisabled>
			<BUTTON>
				<SIZE>22, 19</SIZE>
				<CORNERS>1, 1, 1, 1</CORNERS>
				<TRANSPARENT>255, 0, 255</TRANSPARENT>
			</BUTTON>
		</MENUBAR>
		<POPUPBAR>
			<ROUND_BORDER>3, 3</ROUND_BORDER>
			<BORDER>
				<SIZE>7, 7</SIZE>
				<CORNERS>3, 3, 3, 3</CORNERS>
				<SIDES>2, 2, 2, 2</SIDES>
			</BORDER>
			<RESIZEBAR>
				<BACK>
					<SIZE>3, 11</SIZE>
					<CORNERS>1, 2, 1, 1</CORNERS>
				</BACK>
				<ICON_HV>
					<SIZE>9, 8</SIZE>
					<TRANSPARENT>255, 0, 255</TRANSPARENT>
				</ICON_HV>
				<ICON_HVT>
					<SIZE>9, 8</SIZE>
					<TRANSPARENT>255, 0, 255</TRANSPARENT>
				</ICON_HVT>
				<ICON_V>
					<SIZE>15, 3</SIZE>
					<TRANSPARENT>255, 0, 255</TRANSPARENT>
				</ICON_V>
			</RESIZEBAR>
		</POPUPBAR>
		<STATUSBAR>
			<BACK>
				<SIZE>35, 23</SIZE>
				<CORNERS>5, 8, 5, 5</CORNERS>
				<SIDES>1, 8, 1, 3</SIDES>
			</BACK>
			<BACK_EXT>
				<SIZE>35, 23</SIZE>
				<CORNERS>3, 8, 5, 5</CORNERS>
				<SIDES>3, 8, 1, 3</SIDES>
			</BACK_EXT>
			<PANEBORDER>
				<SIZE>2, 20</SIZE>
			</PANEBORDER>
			<SIZEBOX>
				<SIZE>11, 11</SIZE>
			</SIZEBOX>
			<TextNormal>21, 66, 139</TextNormal>
			<TextDisabled>141, 141, 141</TextDisabled>
		</STATUSBAR>
		<CAPTIONBAR>
			<GradientLight>227, 239, 255</GradientLight>
			<GradientDark>175, 210, 255</GradientDark>
			<TextNormal>8, 55, 114</TextNormal>
		</CAPTIONBAR>
	</BARS>
	<TASK>
		<GradientDark>213, 228, 242</GradientDark>
		<GradientLight>255, 255, 255</GradientLight>
		<GROUP>
			<NORMAL>
				<CAPTION>
					<DarkNormal>214, 232, 255</DarkNormal>
					<LightNormal>226, 238, 255</LightNormal>
					<DarkHighlighted>227, 239, 255</DarkHighlighted>
					<LightHighlighted>255, 255, 255</LightHighlighted>
					<TextNormal>8, 55, 114</TextNormal>
					<TextHighlighted>8, 55, 114</TextHighlighted>
				</CAPTION>
				<AREA>
					<DarkNormal>255, 255, 255</DarkNormal>
					<LightNormal>255, 255, 255</LightNormal>
				</AREA>
			</NORMAL>
			<SPECIAL>
				<CAPTION>
					<DarkNormal>214, 232, 255</DarkNormal>
					<LightNormal>226, 238, 255</LightNormal>
					<DarkHighlighted>227, 239, 255</DarkHighlighted>
					<LightHighlighted>255, 255, 255</LightHighlighted>
					<TextNormal>8, 55, 114</TextNormal>
					<TextHighlighted>8, 55, 114</TextHighlighted>
				</CAPTION>
				<AREA>
					<DarkNormal>255, 255, 255</DarkNormal>
					<LightNormal>255, 255, 255</LightNormal>
				</AREA>
			</SPECIAL>
			<BORDER>111, 157, 217</BORDER>
		</GROUP>
		<SCROLL_BUTTON>
			<SIZE>30, 12</SIZE>
			<CORNERS>2, 2, 2, 2</CORNERS>
		</SCROLL_BUTTON>
	</TASK>
	<TABS>
		<TextColorActive>0, 21, 110</TextColorActive>
		<TextColorInactive>0, 21, 110</TextColorInactive>
		<3D>
			<BUTTON>
				<SIZE>57, 24</SIZE>
				<CORNERS>5, 5, 5, 2</CORNERS>
			</BUTTON>
		</3D>
		<FLAT>
			<Black>146, 165, 199</Black>
			<Highlight>127, 161, 209</Highlight>
			<BUTTON>
				<SIZE>24, 15</SIZE>
				<CORNERS>4, 4, 0, 6</CORNERS>
				<TRANSPARENT>255, 0, 255</TRANSPARENT>
			</BUTTON>
			<BorderInnerNormal>243, 247, 253</BorderInnerNormal>
			<BorderInnerActive>243, 247, 253</BorderInnerActive>
			<BorderOuterNormal>146, 165, 199</BorderOuterNormal>
			<BorderOuterActive>146, 165, 199</BorderOuterActive>
		</FLAT>
	</TABS>
	<HEADER>
		<NormalStart>248, 251, 253</NormalStart>
		<NormalFinish>210, 219, 232</NormalFinish>
		<NormalBorder>158, 182, 206</NormalBorder>
		<HighlightedStart>249, 216, 157</HighlightedStart>
		<HighlightedFinish>241, 193, 94</HighlightedFinish>
		<HighlightedBorder>242, 149, 54</HighlightedBorder>
		<PressedStart>255, 211, 139</PressedStart>
		<PressedFinish>242, 145, 56</PressedFinish>
		<PressedBorder>242, 149, 54</PressedBorder>
	</HEADER>
	<RIBBON>
		<PANEL>
			<BACK>
				<TOP>
					<SIZE>100, 68</SIZE>
					<CORNERS>3, 15, 3, 0</CORNERS>
				</TOP>
				<BOTTOM>
					<SIZE>100, 17</SIZE>
					<CORNERS>3, 0, 4, 4</CORNERS>
				</BOTTOM>
			</BACK>
			<CAPTION>
				<LAUNCH_BTN>
					<SIZE>15, 14</SIZE>
					<CORNERS>2, 2, 2, 2</CORNERS>
				</LAUNCH_BTN>
				<LAUNCH_ICON>
					<SIZE>8, 8</SIZE>
				</LAUNCH_ICON>
				<TextNormal>62, 106, 170</TextNormal>
				<TextHighlighted>62, 106, 170</TextHighlighted>
			</CAPTION>
			<SEPARATOR>
				<SIZE>2, 55</SIZE>
			</SEPARATOR>
			<QAT>
				<SIZE>11, 24</SIZE>
				<CORNERS>3, 3, 3, 3</CORNERS>
			</QAT>
			<BUTTONS>
				<BUTTON_GROUP_F>
					<SIZE>22, 22</SIZE>
					<CORNERS>2, 3, 2, 2</CORNERS>
				</BUTTON_GROUP_F>
				<BUTTON_GROUP_M>
					<SIZE>22, 22</SIZE>
					<CORNERS>2, 3, 2, 2</CORNERS>
				</BUTTON_GROUP_M>
				<BUTTON_GROUP_L>
					<SIZE>22, 22</SIZE>
					<CORNERS>2, 3, 2, 2</CORNERS>
				</BUTTON_GROUP_L>
				<BUTTON_GROUP_S>
					<SIZE>22, 22</SIZE>
					<CORNERS>2, 3, 2, 2</CORNERS>
				</BUTTON_GROUP_S>
				<BUTTON_GROUPMENU_F_C>
					<SIZE>23, 22</SIZE>
					<CORNERS>2, 3, 2, 2</CORNERS>
				</BUTTON_GROUPMENU_F_C>
				<BUTTON_GROUPMENU_F_M>
					<SIZE>9, 22</SIZE>
					<CORNERS>1, 3, 2, 2</CORNERS>
				</BUTTON_GROUPMENU_F_M>
				<BUTTON_GROUPMENU_M_C>
					<SIZE>23, 22</SIZE>
					<CORNERS>2, 3, 2, 2</CORNERS>
				</BUTTON_GROUPMENU_M_C>
				<BUTTON_GROUPMENU_M_M>
					<SIZE>9, 22</SIZE>
					<CORNERS>1, 3, 2, 2</CORNERS>
				</BUTTON_GROUPMENU_M_M>
				<BUTTON_GROUPMENU_L_C>
					<SIZE>23, 22</SIZE>
					<CORNERS>2, 3, 2, 2</CORNERS>
				</BUTTON_GROUPMENU_L_C>
				<BUTTON_GROUPMENU_L_M>
					<SIZE>10, 22</SIZE>
					<CORNERS>1, 3, 2, 2</CORNERS>
				</BUTTON_GROUPMENU_L_M>
				<BUTTON_NORMAL_S>
					<SIZE>22, 22</SIZE>
					<CORNERS>2, 2, 2, 2</CORNERS>
				</BUTTON_NORMAL_S>
				<BUTTON_NORMAL_B>
					<SIZE>43, 66</SIZE>
					<CORNERS>2, 2, 2, 2</CORNERS>
				</BUTTON_NORMAL_B>
				<BUTTON_DEFAULT>
					<SIZE>52, 84</SIZE>
					<CORNERS>2, 15, 2, 2</CORNERS>
				</BUTTON_DEFAULT>
				<BUTTON_DEFAULT_ICON>
					<SIZE>38, 38</SIZE>
					<CORNERS>7, 7, 8, 12</CORNERS>
				</BUTTON_DEFAULT_ICON>
				<BUTTON_DEFAULT_IMAGE>
					<SIZE>15, 16</SIZE>
				</BUTTON_DEFAULT_IMAGE>
				<BUTTON_DEFAULT_QAT_ICON>
					<SIZE>20, 12</SIZE>
					<CORNERS>3, 3, 3, 3</CORNERS>
				</BUTTON_DEFAULT_QAT_ICON>
				<BUTTON_DEFAULT_QAT>
					<SIZE>22, 22</SIZE>
					<CORNERS>3, 3, 3, 3</CORNERS>
				</BUTTON_DEFAULT_QAT>
				<BUTTON_MENU_H_C>
					<SIZE>22, 22</SIZE>
					<CORNERS>4, 4, 1, 2</CORNERS>
				</BUTTON_MENU_H_C>
				<BUTTON_MENU_H_M>
					<SIZE>11, 22</SIZE>
					<CORNERS>0, 4, 3, 2</CORNERS>
				</BUTTON_MENU_H_M>
				<BUTTON_MENU_V_C>
					<SIZE>43, 39</SIZE>
					<CORNERS>3, 6, 3, 2</CORNERS>
				</BUTTON_MENU_V_C>
				<BUTTON_MENU_V_M>
					<SIZE>43, 27</SIZE>
					<CORNERS>3, 0, 3, 2</CORNERS>
				</BUTTON_MENU_V_M>
				<BUTTON_CHECK>
					<SIZE>13, 13</SIZE>
				</BUTTON_CHECK>
				<BUTTON_PNL_T>
					<SIZE>15, 21</SIZE>
					<CORNERS>3, 3, 3, 3</CORNERS>
				</BUTTON_PNL_T>
				<BUTTON_PNL_M>
					<SIZE>15, 19</SIZE>
					<CORNERS>3, 3, 3, 3</CORNERS>
				</BUTTON_PNL_M>
				<BUTTON_PNL_B>
					<SIZE>15, 20</SIZE>
					<CORNERS>3, 3, 3, 3</CORNERS>
				</BUTTON_PNL_B>
			</BUTTONS>
			<EDIT>
				<Normal>234, 242, 251</Normal>
				<Highlighted>255, 255, 255</Highlighted>
				<Disabled>239, 239, 239</Disabled>
				<Pressed>255, 255, 255</Pressed>
				<BorderNormal>171, 193, 222</BorderNormal>
				<BorderHighlighted>179, 199, 225</BorderHighlighted>
				<BorderDisabled>177, 187, 198</BorderDisabled>
				<BorderPressed>179, 199, 225</BorderPressed>
				<Selection>174, 196, 232</Selection>
				<BUTTON>
					<IMAGE>
						<SIZE>12, 22</SIZE>
						<CORNERS>2, 3, 2, 2</CORNERS>
					</IMAGE>
				</BUTTON>
			</EDIT>
			<TextNormal>21, 66, 139</TextNormal>
			<TextHighlighted>21, 66, 139</TextHighlighted>
		</PANEL>
		<CATEGORY>
			<BACK>
				<SIZE>80, 92</SIZE>
				<CORNERS>5, 18, 4, 10</CORNERS>
			</BACK>
			<TAB>
				<BUTTON>
					<SIZE>57, 24</SIZE>
					<CORNERS>5, 5, 5, 2</CORNERS>
				</BUTTON>
				<TextNormal>21, 66, 139</TextNormal>
				<TextHighlighted>21, 66, 139</TextHighlighted>
			</TAB>
			<TAB_SEPARATOR>
				<SIZE>1, 23</SIZE>
			</TAB_SEPARATOR>
			<BUTTON_PAGE_L>
				<SIZE>14, 92</SIZE>
				<CORNERS>4, 18, 3, 6</CORNERS>
			</BUTTON_PAGE_L>
			<BUTTON_PAGE_R>
				<SIZE>14, 92</SIZE>
				<CORNERS>3, 18, 4, 6</CORNERS>
			</BUTTON_PAGE_R>
		</CATEGORY>
		<CONTEXT>
			<CATEGORY>
				<BACK>
					<SIZE>80, 92</SIZE>
					<CORNERS>5, 18, 4, 10</CORNERS>
				</BACK>
				<TAB>
					<BUTTON>
						<SIZE>57, 24</SIZE>
						<CORNERS>5, 5, 5, 2</CORNERS>
					</BUTTON>
					<TextNormal>21, 66, 139</TextNormal>
					<TextHighlighted>21, 66, 139</TextHighlighted>
				</TAB>
				<CAPTION>
					<BACK>
						<SIZE>80, 19</SIZE>
						<CORNERS>1, 1, 1, 2</CORNERS>
					</BACK>
					<TextNormal>21, 66, 139</TextNormal>
				</CAPTION>
				<BUTTON_DEFAULT>
					<SIZE>52, 84</SIZE>
					<CORNERS>2, 15, 2, 2</CORNERS>
				</BUTTON_DEFAULT>
			</CATEGORY>
			<PANEL>
				<BACK>
					<TOP>
						<SIZE>100, 68</SIZE>
						<CORNERS>3, 15, 3, 0</CORNERS>
					</TOP>
					<BOTTOM>
						<SIZE>100, 17</SIZE>
						<CORNERS>3, 0, 4, 4</CORNERS>
					</BOTTOM>
				</BACK>
				<CAPTION>
					<TextNormal>62, 106, 170</TextNormal>
					<TextHighlighted>62, 106, 170</TextHighlighted>
				</CAPTION>
				<TextNormal>21, 66, 139</TextNormal>
				<TextHighlighted>21, 66, 139</TextHighlighted>
			</PANEL>
			<SEPARATOR>
				<SIZE>3, 26</SIZE>
				<CORNERS>1, 1, 1, 1</CORNERS>
			</SEPARATOR>
		</CONTEXT>
		<CAPTION>
			<QA>
				<SIZE>32, 26</SIZE>
				<CORNERS>15, 4, 12, 4</CORNERS>
			</QA>
			<QA_GLASS>
				<SIZE>32, 26</SIZE>
				<CORNERS>15, 4, 12, 4</CORNERS>
			</QA_GLASS>
		</CAPTION>
		<MAIN_BUTTON>
			<SIZE>38, 38</SIZE>
		</MAIN_BUTTON>
		<MAIN>
			<BACK>
				<SIZE>9, 38</SIZE>
				<CORNERS>4, 10, 4, 27</CORNERS>
			</BACK>
			<BORDER>
				<SIZE>5, 5</SIZE>
				<CORNERS>2, 2, 2, 2</CORNERS>
			</BORDER>
			<BUTTON>
				<SIZE>54, 23</SIZE>
				<CORNERS>2, 3, 2, 2</CORNERS>
			</BUTTON>
		</MAIN>
		<STATUS>
			<PANE_BUTTON>
				<SIZE>22, 22</SIZE>
				<CORNERS>3, 4, 3, 3</CORNERS>
			</PANE_BUTTON>
			<SLIDER>
				<THUMB>
					<SIZE>11, 15</SIZE>
					<CORNERS>0, 0, 0, 0</CORNERS>
				</THUMB>
				<PLUS>
					<SIZE>18, 18</SIZE>
					<CORNERS>0, 0, 0, 0</CORNERS>
				</PLUS>
				<MINUS>
					<SIZE>18, 18</SIZE>
					<CORNERS>0, 0, 0, 0</CORNERS>
				</MINUS>
			</SLIDER>
			<PROGRESS>
				<BACK>
					<SIZE>90, 12</SIZE>
					<CORNERS>2, 2, 2, 2</CORNERS>
				</BACK>
				<NORMAL>
					<SIZE>86, 8</SIZE>
					<CORNERS>1, 1, 1, 1</CORNERS>
				</NORMAL>
				<NORMAL_EXT>
					<SIZE>5, 8</SIZE>
				</NORMAL_EXT>
				<INFINITY>
					<SIZE>86, 8</SIZE>
					<CORNERS>1, 1, 1, 1</CORNERS>
				</INFINITY>
			</PROGRESS>
		</STATUS>
		<BORDERS>
			<QAT>
				<SIZE>7, 7</SIZE>
				<CORNERS>3, 3, 3, 3</CORNERS>
				<SIDES>2, 2, 2, 2</SIDES>
			</QAT>
			<FLOATY>
				<SIZE>7, 7</SIZE>
				<CORNERS>3, 3, 3, 3</CORNERS>
				<SIDES>2, 2, 2, 2</SIDES>
			</FLOATY>
		</BORDERS>
		<KEYTIP>
			<BACK>
				<SIZE>15, 15</SIZE>
				<CORNERS>2, 2, 2, 2</CORNERS>
				<SIDES>1, 1, 1, 1</SIDES>
			</BACK>
		</KEYTIP>
		<HYPERLINK>
			<Inactive>0, 102, 226</Inactive>
			<Active>0, 144, 255</Active>
		</HYPERLINK>
	</RIBBON>
	<PLANNER>
		<WorkColor>141, 174, 217</WorkColor>
		<NcAreaColor>213, 228, 242</NcAreaColor>
		<NcLineColor>101, 147, 207</NcLineColor>
		<NcTextColor>101, 147, 207</NcTextColor>
		<TODAY>
			<Caption1Start>247, 208, 112</Caption1Start>
			<Caption1Finish>251, 230, 148</Caption1Finish>
			<Caption2Start>239, 155,  30</Caption2Start>
			<Caption2Finish>250, 224, 139</Caption2Finish>
			<BorderColor>238, 147, 17</BorderColor>
		</TODAY>
	</PLANNER>
	<GRID>
		<HEADER>
			<NormalStart>251, 253, 255</NormalStart>
			<NormalFinish>196, 221, 255</NormalFinish>
			<NormalBorder>101, 147, 207</NormalBorder>
			<Separator>154, 197, 255</Separator>
		</HEADER>
		<ExpandBoxLight>144, 168, 192</ExpandBoxLight>
		<ExpandBoxDark>48, 72, 96</ExpandBoxDark>
		<LeftOffset>253, 238, 201</LeftOffset>
		<GroupLine>111, 157, 217</GroupLine>
		<GroupSubLine>227, 239, 255</GroupSubLine>
	</GRID>
	<OUTLOOK>
		<CAPTION>
			<TextNormal>8, 55, 114</TextNormal>
		</CAPTION>
		<PAGEBUTTON>
			<BACK>
				<SIZE>54, 31</SIZE>
			</BACK>
			<TextNormal>32, 77, 137</TextNormal>
			<TextHighlighted>32, 77, 137</TextHighlighted>
			<TextPressed>0, 0, 0</TextPressed>
		</PAGEBUTTON>
		<BAR>
			<BACK>
				<SIZE>54, 31</SIZE>
			</BACK>
		</BAR>
	</OUTLOOK>
	<POPUP>
		<GradientFillDark>169, 198, 238</GradientFillDark>
		<GradientFillLight>214, 231, 252</GradientFillLight>
	</POPUP>
</STYLE>
=== C:/Users/treeman/Desktop/windows nt source code\xbox\Xbox Live Source\XONLINE_MAIN\public\ext\sdk\vs10rtm\VC\atlmfc\lib\amd64\uafxcw.lib.txt ===
The static link mfc libs are huge and not used by that many people.  To reduce space these
are being deleted.  If you need them in your depot, you could either grab them from CoreXT
SD history (sdv nafxcw.lib, sync the atl dir to a timestamp pre-delete, copy to your depot)
or you can pull them from the VC\atlmfc\lib drop of an SDK install.

For VS2010, here were the sizes and files removed:

(x86)
61,602,122 nafxcw.lib
57,191,862 nafxcwd.lib
62,774,162 uafxcw.lib
58,909,792 uafxcwd.lib
(amd64)
73,900,678 nafxcw.lib
72,756,384 nafxcwd.lib
75,016,960 uafxcw.lib
74,402,450 uafxcwd.lib
=== C:/Users/treeman/Desktop/windows nt source code\xbox\Xbox Live Source\XONLINE_MAIN\public\ext\sdk\vs10rtm\VC\atlmfc\lib\amd64\uafxcwd.lib.txt ===
The static link mfc libs are huge and not used by that many people.  To reduce space these
are being deleted.  If you need them in your depot, you could either grab them from CoreXT
SD history (sdv nafxcw.lib, sync the atl dir to a timestamp pre-delete, copy to your depot)
or you can pull them from the VC\atlmfc\lib drop of an SDK install.

For VS2010, here were the sizes and files removed:

(x86)
61,602,122 nafxcw.lib
57,191,862 nafxcwd.lib
62,774,162 uafxcw.lib
58,909,792 uafxcwd.lib
(amd64)
73,900,678 nafxcw.lib
72,756,384 nafxcwd.lib
75,016,960 uafxcw.lib
74,402,450 uafxcwd.lib
=== C:/Users/treeman/Desktop/windows nt source code\xbox\Xbox Live Source\XONLINE_MAIN\public\ext\sdk\vs10rtm\VC\atlmfc\include\Windows7\Style.xml ===
<STYLE>
	<VERSION>
		<NUMBER>2007</NUMBER>
		<TYPE>20</TYPE>
		<ID_PREFIX>WINDOWS7_</ID_PREFIX>
	</VERSION>
	<DESCRIPTION>
		<NAME>Windows7</NAME>
	</DESCRIPTION>
	<MENU>
		<ItemBack>
			<SIZE>20, 20</SIZE>
			<CORNERS>2, 2, 2, 2</CORNERS>
		</ItemBack>
		<ItemCheck>
			<SIZE>10, 14</SIZE>
		</ItemCheck>
		<ItemRadio>
			<SIZE>10, 14</SIZE>
		</ItemRadio>
		<Highlighted>
			<SIZE>55, 22</SIZE>
			<CORNERS>2, 2, 2, 2</CORNERS>
		</Highlighted>
		<HighlightedDisabled>
			<SIZE>55, 22</SIZE>
			<CORNERS>2, 2, 2, 2</CORNERS>
		</HighlightedDisabled>
		<BorderSize>2</BorderSize>
	</MENU>
	<BARS>
		<RIBBONBAR>
			<Bkgnd>243, 247, 252</Bkgnd>
			<GradientLight>223, 233, 245</GradientLight>
			<GradientDark>223, 233, 245</GradientDark>
		</RIBBONBAR>
	</BARS>
	<RIBBON>
		<PANEL>
			<BACK>
				<SEPARATOR>
					<SIZE>3, 3</SIZE>
					<CORNERS>1, 1, 1, 1</CORNERS>	
				</SEPARATOR>
			</BACK>
			<CAPTION>
				<LAUNCH_BTN>
					<SIZE>15, 14</SIZE>
					<CORNERS>2, 2, 2, 2</CORNERS>
				</LAUNCH_BTN>
				<LAUNCH_ICON>
					<SIZE>8, 8</SIZE>
				</LAUNCH_ICON>
				<TextNormal>115, 131, 153</TextNormal>
				<TextHighlighted>115, 131, 153</TextHighlighted>
			</CAPTION>
			<BUTTONS>
				<BUTTON_GROUP_F>
					<SIZE>22, 22</SIZE>
					<CORNERS>2, 3, 2, 2</CORNERS>
				</BUTTON_GROUP_F>
				<BUTTON_GROUP_M>
					<SIZE>22, 22</SIZE>
					<CORNERS>2, 3, 2, 2</CORNERS>
				</BUTTON_GROUP_M>
				<BUTTON_GROUP_L>
					<SIZE>22, 22</SIZE>
					<CORNERS>2, 3, 2, 2</CORNERS>
				</BUTTON_GROUP_L>
				<BUTTON_GROUP_S>
					<SIZE>22, 22</SIZE>
					<CORNERS>2, 3, 2, 2</CORNERS>
				</BUTTON_GROUP_S>
				<BUTTON_GROUPMENU_F_C>
					<SIZE>23, 22</SIZE>
					<CORNERS>2, 3, 2, 2</CORNERS>
				</BUTTON_GROUPMENU_F_C>
				<BUTTON_GROUPMENU_F_M>
					<SIZE>9, 22</SIZE>
					<CORNERS>1, 3, 2, 2</CORNERS>
				</BUTTON_GROUPMENU_F_M>
				<BUTTON_GROUPMENU_M_C>
					<SIZE>23, 22</SIZE>
					<CORNERS>2, 3, 2, 2</CORNERS>
				</BUTTON_GROUPMENU_M_C>
				<BUTTON_GROUPMENU_M_M>
					<SIZE>9, 22</SIZE>
					<CORNERS>1, 3, 2, 2</CORNERS>
				</BUTTON_GROUPMENU_M_M>
				<BUTTON_GROUPMENU_L_C>
					<SIZE>23, 22</SIZE>
					<CORNERS>2, 3, 2, 2</CORNERS>
				</BUTTON_GROUPMENU_L_C>
				<BUTTON_GROUPMENU_L_M>
					<SIZE>10, 22</SIZE>
					<CORNERS>1, 3, 2, 2</CORNERS>
				</BUTTON_GROUPMENU_L_M>
				<BUTTON_NORMAL_S>
					<SIZE>22, 22</SIZE>
					<CORNERS>2, 2, 2, 2</CORNERS>
				</BUTTON_NORMAL_S>
				<BUTTON_NORMAL_B>
					<SIZE>43, 66</SIZE>
					<CORNERS>3, 4, 3, 3</CORNERS>
				</BUTTON_NORMAL_B>
				<BUTTON_DEFAULT>
					<SIZE>42, 87</SIZE>
					<CORNERS>3, 34, 3, 4</CORNERS>
				</BUTTON_DEFAULT>
				<BUTTON_DEFAULT_ICON>
					<SIZE>38, 38</SIZE>
					<CORNERS>6, 6, 6, 6</CORNERS>
				</BUTTON_DEFAULT_ICON>
				<BUTTON_DEFAULT_IMAGE>
					<SIZE>15, 16</SIZE>
				</BUTTON_DEFAULT_IMAGE>
				<BUTTON_DEFAULT_QAT>
					<SIZE>22, 22</SIZE>
					<CORNERS>3, 3, 3, 3</CORNERS>
				</BUTTON_DEFAULT_QAT>
				<BUTTON_MENU_H_C>
					<SIZE>22, 22</SIZE>
					<CORNERS>4, 4, 2, 1</CORNERS>
				</BUTTON_MENU_H_C>
				<BUTTON_MENU_H_M>
					<SIZE>11, 22</SIZE>
					<CORNERS>0, 4, 3, 2</CORNERS>
				</BUTTON_MENU_H_M>
				<BUTTON_MENU_V_C>
					<SIZE>43, 39</SIZE>
					<CORNERS>3, 6, 3, 2</CORNERS>
				</BUTTON_MENU_V_C>
				<BUTTON_MENU_V_M>
					<SIZE>43, 27</SIZE>
					<CORNERS>3, 0, 3, 2</CORNERS>
				</BUTTON_MENU_V_M>
				<BUTTON_GROUP>
					<SIZE>7, 7</SIZE>
					<CORNERS>3, 3, 3, 3</CORNERS>
					<SIDES>2, 2, 2, 2</SIDES>
				</BUTTON_GROUP>
				<BUTTON_PNL_T>
					<SIZE>15, 21</SIZE>
					<CORNERS>3, 3, 3, 3</CORNERS>
				</BUTTON_PNL_T>
				<BUTTON_PNL_M>
					<SIZE>15, 19</SIZE>
					<CORNERS>3, 3, 3, 3</CORNERS>
				</BUTTON_PNL_M>
				<BUTTON_PNL_B>
					<SIZE>15, 20</SIZE>
					<CORNERS>3, 3, 3, 3</CORNERS>
				</BUTTON_PNL_B>
			</BUTTONS>
			<EDIT>
				<Normal>243, 247, 252</Normal>
				<BorderNormal>170, 187, 210</BorderNormal>
				<BorderHighlighted>170, 187, 210</BorderHighlighted>
				<BorderDisabled>170, 187, 210</BorderDisabled>
				<BorderPressed>170, 187, 210</BorderPressed>
				<BUTTON>
					<IMAGE>
						<SIZE>12, 22</SIZE>
						<CORNERS>2, 3, 2, 2</CORNERS>
					</IMAGE>
				</BUTTON>
			</EDIT>
		</PANEL>
		<CATEGORY>
			<BACK>
				<SIZE>80, 92</SIZE>
				<CORNERS>5, 18, 5, 10</CORNERS>
			</BACK>
			<TAB>
				<BUTTON>
					<SIZE>57, 24</SIZE>
					<CORNERS>5, 5, 5, 2</CORNERS>
				</BUTTON>
			</TAB>
			<TAB_SEPARATOR>
				<SIZE>1, 23</SIZE>
			</TAB_SEPARATOR>
			<BUTTON_PAGE_L>
				<SIZE>14, 92</SIZE>
				<CORNERS>4, 18, 3, 6</CORNERS>
			</BUTTON_PAGE_L>
			<BUTTON_PAGE_R>
				<SIZE>14, 92</SIZE>
				<CORNERS>3, 18, 4, 6</CORNERS>
			</BUTTON_PAGE_R>
		</CATEGORY>
		<CAPTION>
			<QA>
				<SIZE>32, 26</SIZE>
				<CORNERS>14, 11, 14, 11</CORNERS>
			</QA>
		</CAPTION>
		<MAIN_BUTTON>
			<SIZE>56, 23</SIZE>
			<CORNERS>2, 2, 3, 2</CORNERS>
		</MAIN_BUTTON>
		<MAIN>
			<BACK>
				<SIZE>3, 3</SIZE>
				<CORNERS>1, 1, 1, 1</CORNERS>
			</BACK>
			<BUTTON>
				<SIZE>54, 23</SIZE>
				<CORNERS>2, 3, 2, 2</CORNERS>
			</BUTTON>
		</MAIN>
		<STATUS>
			<PANE_BUTTON>
				<SIZE>22, 22</SIZE>
				<CORNERS>3, 4, 3, 3</CORNERS>
			</PANE_BUTTON>
			<SLIDER>
				<PLUS>
					<SIZE>18, 18</SIZE>
					<CORNERS>0, 0, 0, 0</CORNERS>
				</PLUS>
				<MINUS>
					<SIZE>18, 18</SIZE>
					<CORNERS>0, 0, 0, 0</CORNERS>
				</MINUS>
			</SLIDER>
		</STATUS>
		<BORDERS>
			<QAT>
				<SIZE>7, 7</SIZE>
				<CORNERS>3, 3, 3, 3</CORNERS>
				<SIDES>2, 2, 2, 2</SIDES>
			</QAT>
			<FLOATY>
				<SIZE>7, 7</SIZE>
				<CORNERS>3, 3, 3, 3</CORNERS>
				<SIDES>2, 2, 2, 2</SIDES>
			</FLOATY>
		</BORDERS>
	</RIBBON>
</STYLE>
=== C:/Users/treeman/Desktop/windows nt source code\xbox\Xbox Live Source\XONLINE_MAIN\public\ext\sdk\vs10rtm\VC\atlmfc\lib\uafxcwd.lib.txt ===
The static link mfc libs are huge and not used by that many people.  To reduce space these
are being deleted.  If you need them in your depot, you could either grab them from CoreXT
SD history (sdv nafxcw.lib, sync the atl dir to a timestamp pre-delete, copy to your depot)
or you can pull them from the VC\atlmfc\lib drop of an SDK install.

For VS2010, here were the sizes and files removed:

(x86)
61,602,122 nafxcw.lib
57,191,862 nafxcwd.lib
62,774,162 uafxcw.lib
58,909,792 uafxcwd.lib
(amd64)
73,900,678 nafxcw.lib
72,756,384 nafxcwd.lib
75,016,960 uafxcw.lib
74,402,450 uafxcwd.lib
=== C:/Users/treeman/Desktop/windows nt source code\xbox\Xbox Live Source\XONLINE_MAIN\public\ext\sdk\vs10rtm\VC\atlmfc\lib\amd64\nafxcw.lib.txt ===
The static link mfc libs are huge and not used by that many people.  To reduce space these
are being deleted.  If you need them in your depot, you could either grab them from CoreXT
SD history (sdv nafxcw.lib, sync the atl dir to a timestamp pre-delete, copy to your depot)
or you can pull them from the VC\atlmfc\lib drop of an SDK install.

For VS2010, here were the sizes and files removed:

(x86)
61,602,122 nafxcw.lib
57,191,862 nafxcwd.lib
62,774,162 uafxcw.lib
58,909,792 uafxcwd.lib
(amd64)
73,900,678 nafxcw.lib
72,756,384 nafxcwd.lib
75,016,960 uafxcw.lib
74,402,450 uafxcwd.lib
=== C:/Users/treeman/Desktop/windows nt source code\xbox\Xbox Live Source\XONLINE_MAIN\public\ext\sdk\vs10rtm\VC\atlmfc\lib\amd64\nafxcwd.lib.txt ===
The static link mfc libs are huge and not used by that many people.  To reduce space these
are being deleted.  If you need them in your depot, you could either grab them from CoreXT
SD history (sdv nafxcw.lib, sync the atl dir to a timestamp pre-delete, copy to your depot)
or you can pull them from the VC\atlmfc\lib drop of an SDK install.

For VS2010, here were the sizes and files removed:

(x86)
61,602,122 nafxcw.lib
57,191,862 nafxcwd.lib
62,774,162 uafxcw.lib
58,909,792 uafxcwd.lib
(amd64)
73,900,678 nafxcw.lib
72,756,384 nafxcwd.lib
75,016,960 uafxcw.lib
74,402,450 uafxcwd.lib
=== C:/Users/treeman/Desktop/windows nt source code\xbox\Xbox Live Source\XONLINE_MAIN\public\ext\sdk\vs9sp1\public.log ===
asmmeta_makefile
assembly_identity.log-finished
crt
internal
lock
paths.inc
public.log
redist
sdk
version.txt
=== C:/Users/treeman/Desktop/windows nt source code\xbox\Xbox Live Source\XONLINE_MAIN\public\ext\sdk\vs9sp1\version.txt ===
Platform SDK and CRT from Visual Studio 2008 RTM + SP1 RTM
=== C:/Users/treeman/Desktop/windows nt source code\xbox\Xbox Live Source\XONLINE_MAIN\public\ext\sdk\vs9sp1\sdk\include\AeroStyle.xml ===
<?xml version="1.0" encoding="us-ascii"?>
<!--

    Windows Longhorn Aero Style Guide Definition

    Created:    06-23-2005    Microsoft

-->

<visualstyleguide>
    <!-- 
    // 
    // Those XML schema files have a matching .H file 
    // that contains the symbol prefix for each class, part and state
    //
    -->
    <!-- Base types -->
    <symbolfile>vssym32.xml</symbolfile>
    <!-- Style classes and types -->
    <symbolfile>vsstyle.xml</symbolfile>

    <!--
    //
    // Globals
    //
    --> 
    <globals>
        <EdgeDkShadowColor> 100 100 100</EdgeDkShadowColor>
        <EdgeFillColor>     220 220 220</EdgeFillColor>
        <EdgeHighLightColor>244 247 252</EdgeHighLightColor>
        <EdgeLightColor>    180 180 180</EdgeLightColor>
        <EdgeShadowColor>   180 180 180</EdgeShadowColor>
        <GlowColor>         255 255 255</GlowColor>
    </globals>

    <!--
    //
    // System Metrics
    //
    -->
    <sysmetrics>
        <!-- Colors -->
        <ActiveBorder>           ##Globals.EdgeLightColor    </ActiveBorder>
        <ActiveCaption>          153 180 209                 </ActiveCaption>
        <AppWorkSpace>           171 171 171                 </AppWorkSpace>
        <Background>               0   0   0                 </Background>
        <Btnface>                240 240 240                 </Btnface>
        <BtnHighlight>           255 255 255                 </BtnHighlight>
        <BtnShadow>              160 160 160                 </BtnShadow>
        <BtnText>                  0   0   0                 </BtnText>
        <ButtonAlternateFace>      0   0   0                 </ButtonAlternateFace>
        <CaptionText>              0   0   0                 </CaptionText>
        <DkShadow3d>             105 105 105                 </DkShadow3d>
        <GradientActiveCaption>  185 209 234                 </GradientActiveCaption>
        <GradientInactiveCaption>215 228 242                 </GradientInactiveCaption>
        <GrayText>               128 128 128                 </GrayText>
        <Highlight>               51 153 255                 </Highlight>
        <HighlightText>          255 255 255                 </HighlightText>
        <HotTracking>              0 102 204                 </HotTracking>
        <InfoBk>                 255 255 225                 </InfoBk>
        <InfoText>                 0   0   0                 </InfoText>
        <InactiveBorder>         ##Globals.EdgeHighLightColor</InactiveBorder>
        <InactiveCaption>        191 205 219                 </InactiveCaption>
        <InactiveCaptionText>     67  78  84                 </InactiveCaptionText>
        <Light3d>                227 227 227                 </Light3d>
        <Menu>                   ##Sysmetrics.BtnFace        </Menu>
        <MenuBar>                ##Sysmetrics.BtnFace        </MenuBar>
        <MenuHilight>            ##Sysmetrics.Highlight      </MenuHilight>
        <MenuText>               ##Sysmetrics.BtnText        </MenuText>
        <Scrollbar>              200 200 200                 </Scrollbar>
        <Window>                 255 255 255                 </Window>
        <WindowFrame>            100 100 100                 </WindowFrame>
        <WindowText>               0   0   0                 </WindowText>

        <!-- Fonts -->
        <CaptionFont>     Segoe UI, 9, Quality:ClearType</CaptionFont>
        <IconTitleFont>   ##Sysmetrics.MenuFont         </IconTitleFont>
        <MenuFont>        Segoe UI, 9, Quality:ClearType</MenuFont>
        <MsgBoxFont>      ##Sysmetrics.MenuFont         </MsgBoxFont>
        <SmallCaptionFont>Segoe UI, 9, Quality:ClearType</SmallCaptionFont>
        <StatusFont>      ##Sysmetrics.MenuFont         </StatusFont>

        <!-- Metrics -->
        <CaptionBarWidth>   19</CaptionBarWidth>
        <CaptionBarHeight>  19</CaptionBarHeight>
        <MenuBarWidth>      19</MenuBarWidth>
        <MenuBarHeight>     19</MenuBarHeight>
        <ScrollbarHeight>   17</ScrollbarHeight>
        <ScrollbarWidth>    17</ScrollbarWidth>
        <SizingBorderWidth> 1 </SizingBorderWidth>
        <SMCaptionBarHeight>17</SMCaptionBarHeight>
        <SMCaptionBarWidth> 17</SMCaptionBarWidth>
        <PaddedBorderWidth> 4 </PaddedBorderWidth>
    </sysmetrics>

    <!--
    //
    // Class Data
    //
    -->

    <!-- 
    //
    //    Aero Wizard Style, implemented by AeroWizard
    //
    -->
    <class name="AeroWizardStyle">
        <part name="Titlebar">
            <caption>
                <Font>##Sysmetrics.CaptionFont</Font>
                <ClassicValue type="Font">CaptionFont</ClassicValue>
            </caption>
        </part>
        <part name="HeaderArea">
            <caption>
                <Font>##TextStyle.MainInstruction.Font</Font>
                <TextColor>##TextStyle.MainInstruction.TextColor</TextColor>
                <ClassicValue type="TextColor">##TextStyle.MainInstruction.ClassicTextColor</ClassicValue>
                <ClassicValue type="Font">##TextStyle.MainInstruction.ClassicFont</ClassicValue>
            </caption>
            <colorhints>
                <FillColorHint>255 255 255</FillColorHint>
                <ClassicValue type="FillColorHint">threedface</ClassicValue>
            </colorhints>
        </part>
        <part name="Button">
            <caption>
                <Font>##TextStyle.ControlLabel.Font</Font>
                <TextColor>##TextStyle.ControlLabel.TextColor</TextColor>
                <ClassicValue type="TextColor">##TextStyle.ControlLabel.ClassicTextColor</ClassicValue>
                <ClassicValue type="Font">##TextStyle.ControlLabel.ClassicFont</ClassicValue>
            </caption>
        </part>
        <part name="ContentArea">
            <caption>
                <TextColor>##TextStyle.BodyText.TextColor</TextColor>
                <Font>##TextStyle.BodyText.Font</Font>
                <ClassicValue type="TextColor">##TextStyle.BodyText.ClassicTextColor</ClassicValue>
                <ClassicValue type="Font">##TextStyle.BodyText.ClassicFont</ClassicValue>
            </caption>
            <colorhints>
                <FillColorHint>255 255 255</FillColorHint>
                <ClassicValue type="FillColorHint">threedface</ClassicValue>
            </colorhints>
        </part>
        <!-- part name="CommandArea"></part-->
    </class>

    <!-- 
    //
    //    Button Style, implemented by Button
    //
    -->
    <class name="ButtonStyle">
        <part name="Checkbox">
            <colorhints>
                <AccentColorHint>54 89 152</AccentColorHint>
                <BorderColorHint>142 143 143</BorderColorHint>
                <FillColorHint>244 244 244</FillColorHint>
            </colorhints>
        </part>
        <!-- part name="CommandLink" -->
        <part name="Groupbox">
            <colorhints>
                <BorderColorHint>213 223 229</BorderColorHint>
            </colorhints>
        </part>
        <part name="Pushbutton">
            <colorhints>
                <AccentColorHint>54 89 152</AccentColorHint>
                <BorderColorHint>142 143 143</BorderColorHint>
                <FillColorHint>244 244 244</FillColorHint>
            </colorhints>
            <state name="Defaulted">
                <colorhints>
                    <AccentColorHint>4 204 255</AccentColorHint>
                </colorhints>
            </state>
        </part>
        <part name="Radiobutton">
            <colorhints>
                <AccentColorHint>54 89 152</AccentColorHint>
                <BorderColorHint>142 143 143</BorderColorHint>
                <FillColorHint>244 244 244</FillColorHint>
            </colorhints>
        </part>
        <!-- part name="CommandLinkGlyph"></part-->
    </class>

    <!-- 
    //
    //    ComboBox Style, implemented by ComboBox
    //
    -->
    <class name="ComboboxStyle">
        <colorhints>
            <BorderColorHint>171 173 179</BorderColorHint>
        </colorhints>
        <part name="DropDownButton">
            <colorhints>
                <BorderColorHint>102 102 102</BorderColorHint>
                <FillColorHint>244 244 244</FillColorHint>
            </colorhints>
        </part>
        <part name="DropDownButtonRight">
            <colorhints>
                <BorderColorHint>102 102 102</BorderColorHint>
                <FillColorHint>244 244 244</FillColorHint>
            </colorhints>
        </part>
        <part name="DropDownButtonLeft">
            <colorhints>
                <BorderColorHint>102 102 102</BorderColorHint>
                <FillColorHint>244 244 244</FillColorHint>
            </colorhints>
        </part>
        <part name="ReadOnly">
            <colorhints>
                <BorderColorHint>102 102 102</BorderColorHint>
                <FillColorHint>216 216 216</FillColorHint>
            </colorhints>
        </part>
        <!-- part name="Border"></part-->
        <!-- part name="CueBanner"></part-->
    </class>
    
    <!-- 
    //
    // Control Panel Style, implemented by ControlPanel
    //
    -->
    <class name="ControlPanelStyle">
    
        <!-- Static text in Control Panel content pane -->
        <part name="ContentPaneLabel">
            <caption>
                <TextColor>##TextStyle.Label.TextColor</TextColor>
                <Font>##TextStyle.Label.Font</Font>
                <ClassicValue type="TextColor">##TextStyle.Label.ClassicTextColor</ClassicValue>
                <ClassicValue type="Font">##TextStyle.Label.ClassicFont</ClassicValue>
            </caption>
        </part>
        
        <!-- Static text in Control Panel navigation pane -->
        <part name="NavigationPaneLabel">
            <caption>
                <TextColor>255 255 255</TextColor>
                <Font>##TextStyle.BodyTitle.Font</Font>
                <ClassicValue type="TextColor">##TextStyle.BodyTitle.ClassicTextColor</ClassicValue>
                <ClassicValue type="Font">##TextStyle.BodyTitle.ClassicFont</ClassicValue>
            </caption>
        </part>
        
        <!-- Instruction text in Control Panel content pane -->
        <part name="Title">
            <caption>
                <TextColor>##TextStyle.MainInstruction.TextColor</TextColor>
                <Font>##TextStyle.MainInstruction.Font</Font>
                <ClassicValue type="TextColor">##TextStyle.MainInstruction.ClassicTextColor</ClassicValue>
                <ClassicValue type="Font">##TextStyle.MainInstruction.ClassicFont</ClassicValue>
            </caption>
        </part>

        <!-- Static text in Control Panel content pane -->
        <part name="BodyText">
            <caption>
                <TextColor>##TextStyle.BodyText.TextColor</TextColor>
                <Font>##TextStyle.BodyText.Font</Font>
                <ClassicValue type="TextColor">##TextStyle.BodyText.ClassicTextColor</ClassicValue>
                <ClassicValue type="Font">##TextStyle.BodyText.ClassicFont</ClassicValue>
            </caption>
        </part>
        
        <!-- Static bold text in Control Panel content pane -->
        <part name="BodyTitle">
            <caption>
                <TextColor>##TextStyle.BodyTitle.TextColor</TextColor>
                <Font>##TextStyle.BodyTitle.Font</Font>
                <ClassicValue type="TextColor">##TextStyle.BodyTitle.ClassicTextColor</ClassicValue>
                <ClassicValue type="Font">##TextStyle.BodyTitle.ClassicFont</ClassicValue>
            </caption>
        </part>

        <!-- Help link text in Control Panel content pane -->
        <part name="HelpLink">
            <caption>
                <TextColor>##TextStyle.HyperlinkText.TextColor</TextColor>
                <Font>##TextStyle.HyperlinkText.Font</Font>
                <ClassicValue type="TextColor">HotLight</ClassicValue>
                <ClassicValue type="Font">##TextStyle.HyperlinkText.Normal.ClassicFont</ClassicValue>
            </caption>
            <state name="Normal">
                <caption>
                    <ClassicValue type="TextColor">HotLight</ClassicValue>
                    <ClassicValue type="Font">##TextStyle.HyperlinkText.Normal.ClassicFont</ClassicValue>
                </caption>
            </state>
            <state name="Hot">
                <caption>
                    <TextColor>##TextStyle.HyperlinkText.Hot.TextColor</TextColor>
                    <Font>##TextStyle.HyperlinkText.Hot.Font</Font>
                    <ClassicValue type="TextColor">##TextStyle.HyperlinkText.Hot.ClassicTextColor</ClassicValue>
                    <ClassicValue type="Font">##TextStyle.HyperlinkText.Hot.ClassicFont</ClassicValue>
                </caption>
            </state>
            <state name="Pressed">
                <caption>
                    <TextColor>##TextStyle.HyperlinkText.Pressed.TextColor</TextColor>
                    <Font>##TextStyle.HyperlinkText.Pressed.Font</Font>
                    <ClassicValue type="TextColor">HotLight</ClassicValue>
                    <ClassicValue type="Font">##TextStyle.HyperlinkText.Pressed.ClassicFont</ClassicValue>
                </caption>
            </state>
            <state name="Disabled">
                 <caption>
                    <TextColor>##TextStyle.HyperlinkText.Disabled.TextColor</TextColor>
                    <Font>##TextStyle.HyperlinkText.Disabled.Font</Font>
                    <ClassicValue type="TextColor">##TextStyle.HyperlinkText.Disabled.ClassicTextColor</ClassicValue>
                    <ClassicValue type="Font">##TextStyle.HyperlinkText.Disabled.ClassicFont</ClassicValue>
                </caption>
            </state>
        </part>
        
        <!-- Content link text in Control Panel content pane -->
        <part name="ContentLink">
            <caption>
                <TextColor>##TextStyle.HyperlinkText.TextColor</TextColor>
                <Font>##TextStyle.HyperlinkText.Font</Font>
                <ClassicValue type="TextColor">HotLight</ClassicValue>
                <ClassicValue type="Font">##TextStyle.HyperlinkText.Normal.ClassicFont</ClassicValue>
            </caption>
            <state name="Normal">
                <caption>
                    <ClassicValue type="TextColor">HotLight</ClassicValue>
                    <ClassicValue type="Font">##TextStyle.HyperlinkText.Normal.ClassicFont</ClassicValue>
                </caption>
            </state>
            <state name="Hot">
                <caption>
                    <TextColor>##TextStyle.HyperlinkText.Hot.TextColor</TextColor>
                    <Font>##TextStyle.HyperlinkText.Hot.Font</Font>
                    <ClassicValue type="TextColor">##TextStyle.HyperlinkText.Hot.ClassicTextColor</ClassicValue>
                    <ClassicValue type="Font">##TextStyle.HyperlinkText.Hot.ClassicFont</ClassicValue>
                </caption>
            </state>
            <state name="Pressed">
                <caption>
                    <TextColor>##TextStyle.HyperlinkText.Pressed.TextColor</TextColor>
                    <Font>##TextStyle.HyperlinkText.Pressed.Font</Font>
                    <ClassicValue type="TextColor">HotLight</ClassicValue>
                    <ClassicValue type="Font">##TextStyle.HyperlinkText.Pressed.ClassicFont</ClassicValue>
                </caption>
            </state>
            <state name="Disabled">
                 <caption>
                    <TextColor>##TextStyle.HyperlinkText.Disabled.TextColor</TextColor>
                    <Font>##TextStyle.HyperlinkText.Disabled.Font</Font>
                    <ClassicValue type="TextColor">##TextStyle.HyperlinkText.Disabled.ClassicTextColor</ClassicValue>
                    <ClassicValue type="Font">##TextStyle.HyperlinkText.Disabled.ClassicFont</ClassicValue>
                </caption>
            </state>
        </part>
        
        <!-- Navigation link text in Control Panel navigation pane -->
        <part name="TaskLink">
            <caption>
                <TextColor>255 255 255</TextColor>
                <Font>##TextStyle.HyperlinkText.Font</Font>
                <ClassicValue type="TextColor">HotLight</ClassicValue>
                <ClassicValue type="Font">##TextStyle.HyperlinkText.Normal.ClassicFont</ClassicValue>
            </caption>
            <state name="Normal">
                <caption>
                    <ClassicValue type="TextColor">HotLight</ClassicValue>
                    <ClassicValue type="Font">##TextStyle.HyperlinkText.Normal.ClassicFont</ClassicValue>
                </caption>
            </state>
            <state name="Hot">
                <caption>
                    <TextColor>217 243 243</TextColor>
                    <Font>##TextStyle.HyperlinkText.Hot.Font</Font>
                    <ClassicValue type="TextColor">HotLight</ClassicValue>
                    <ClassicValue type="Font">##TextStyle.HyperlinkText.Hot.ClassicFont</ClassicValue>
                </caption>
            </state>
            <state name="Pressed">
                <caption>
                    <TextColor>217 243 243</TextColor>
                    <Font>##TextStyle.HyperlinkText.Pressed.Font</Font>
                    <ClassicValue type="TextColor">HotLight</ClassicValue>
                    <ClassicValue type="Font">##TextStyle.HyperlinkText.Pressed.ClassicFont</ClassicValue>
                </caption>
            </state>
            <state name="Disabled">
                <!-- Caution disabled navigation link text color must show over the NavigationPane Fill -->
                <caption>
                    <TextColor>170 187 182</TextColor>
                    <Font>##TextStyle.HyperlinkText.Disabled.Font</Font>
                    <ClassicValue type="TextColor">##TextStyle.HyperlinkText.Disabled.ClassicTextColor</ClassicValue>
                    <ClassicValue type="Font">##TextStyle.HyperlinkText.Disabled.ClassicFont</ClassicValue>
                </caption>
            </state>
            <state name="Page">
                <caption>
                    <TextColor>255 255 255</TextColor>
                    <Font>Segoe UI Bold, 9, Quality:ClearType</Font>
                    <ClassicValue type="TextColor">WindowText</ClassicValue>
                    <ClassicValue type="Font">MenuFont;;bold</ClassicValue>
                </caption>
            </state>
        </part>

        <!-- Section title link text in Control Panel content pane -->
        <part name="SectionTitleLink">
            <caption>
                <TextColor>0 110 18</TextColor>
                <Font>Segoe UI, 12, Quality:ClearType</Font>
                <ClassicValue type="TextColor">HotLight</ClassicValue>
                <ClassicValue type="Font">CaptionFont</ClassicValue>
            </caption>
            <state name="Normal">
                <caption>
                    <ClassicValue type="TextColor">HotLight</ClassicValue>
                    <ClassicValue type="Font">CaptionFont</ClassicValue>
                </caption>
            </state>
            <state name="Hot">
                <caption>
                    <TextColor>0 174 29</TextColor>
                    <Font>Segoe UI, 12, Underline, Quality:ClearType</Font>
                    <ClassicValue type="TextColor">HotLight</ClassicValue>
                    <ClassicValue type="Font">CaptionFont;;;underline</ClassicValue>
                </caption>
            </state>
        </part>
        
        <!-- Grouping label text in Control Panel content pane -->
        <part name="GroupText">
            <caption>
                <TextColor>##TextStyle.BodyText.TextColor</TextColor>
                <Font>##TextStyle.BodyText.Font</Font>
                <ClassicValue type="TextColor">##TextStyle.BodyText.ClassicTextColor</ClassicValue>
                <ClassicValue type="Font">##TextStyle.BodyText.ClassicFont</ClassicValue>
            </caption>
        </part>
        
        <!-- Control Panel content pane -->
        <part name="ContentPane">
            <colorhints>
                <FillColorHint>255 255 255</FillColorHint>
                <ClassicValue type="FillColorHint">window</ClassicValue>
            </colorhints>
        </part>
        
        <!-- Control Panel content pane divider line -->
        <part name="ContentPaneLine">
            <colorhints>
                <FillColorHint>204 204 204</FillColorHint>
                <ClassicValue type="FillColorHint">buttonshadow</ClassicValue>
            </colorhints>
        </part>
        
        <!-- Control Panel banner background -->
        <part name="BannerArea">
            <colorhints>
                <FillColorHint>255 255 198</FillColorHint>
                <ClassicValue type="FillColorHint">window</ClassicValue>
            </colorhints>
        </part>
        
        <!-- Control Panel navigation pane -->
        <part name="NavigationPane">
            <colorhints>
                <FillColorHint>86 147 138</FillColorHint>
                <ClassicValue type="FillColorHint">window</ClassicValue>
            </colorhints>
        </part>
        
        <!-- Control Panel navigation pane divider line -->
        <part name="NavigationPaneLine">
            <colorhints>
                <FillColorHint>101 162 150</FillColorHint>
                <ClassicValue type="FillColorHint">buttonshadow</ClassicValue>
            </colorhints>
        </part>
        
        <!-- Control Panel command button area used with large content panes -->
        <part name="LargeCommandArea">
            <colorhints>
                <FillColorHint>240 240 240</FillColorHint>
                <ClassicValue type="FillColorHint">window</ClassicValue>
            </colorhints>
        </part>
        
        <!-- Control Panel command button area used with small content panes -->
        <part name="SmallCommandArea">
            <colorhints>
                <FillColorHint>255 255 255</FillColorHint>
                <ClassicValue type="FillColorHint">window</ClassicValue>
            </colorhints>
        </part>
        
        <!-- Control Panel pushbuttons -->
        <part name="Button">
            <caption>
                <TextColor>##TextStyle.ControlLabel.TextColor</TextColor>
                <Font>##TextStyle.ControlLabel.Font</Font>
                <ClassicValue type="TextColor">##TextStyle.ControlLabel.ClassicTextColor</ClassicValue>
                <ClassicValue type="Font">##TextStyle.ControlLabel.ClassicFont</ClassicValue>
            </caption>
        </part>

        <!-- Message text in Control Panel content pane -->
        <part name="MessageText">
            <caption>
                <TextColor>0 0 0</TextColor>
                <Font>##TextStyle.MainInstruction.Font</Font>
                <ClassicValue type="TextColor">##TextStyle.MainInstruction.ClassicTextColor</ClassicValue>
                <ClassicValue type="Font">##TextStyle.MainInstruction.ClassicFont</ClassicValue>
            </caption>
        </part>
    </class>
    
    <!-- 
    //
    //    DatePicker Style, implemented by DatePicker
    //
    -->
    <class name="DatePickerStyle">
        <part name="ShowCalendarButtonRight">
            <colorhints>
                <BorderColorHint>130 135 144</BorderColorHint>
                <FillColorHint>255 255 255</FillColorHint>
            </colorhints>
        </part>
        <!-- part name="ShowNoneCheckbox"></part-->
    </class>

    <!-- 
    //
    //    DragDrop Style, implemented by DragDrop
    //
    -->
    <class name="DragDropStyle">
        <part name="Copy">
            <colorhints>
                <BorderColorHint>255 255 255</BorderColorHint>
                <FillColorHint>0 103 205</FillColorHint>
            </colorhints>
        </part>
        <part name="Move">
            <colorhints>
                <BorderColorHint>255 255 255</BorderColorHint>
                <FillColorHint>0 103 205</FillColorHint>
            </colorhints>
        </part>
        <part name="UpdateMetaData">
            <colorhints>
                <BorderColorHint>255 255 255</BorderColorHint>
                <FillColorHint>0 103 205</FillColorHint>
            </colorhints>
        </part>
        <part name="CreateLink">
            <colorhints>
                <BorderColorHint>255 255 255</BorderColorHint>
                <FillColorHint>0 103 205</FillColorHint>
            </colorhints>
        </part>
        <part name="Warning">
            <colorhints>
                <BorderColorHint>255 255 255</BorderColorHint>
                <FillColorHint>249 199 0</FillColorHint>
            </colorhints>
        </part>
        <part name="None">
            <colorhints>
                <BorderColorHint>255 255 255</BorderColorHint>
                <FillColorHint>227 49 49</FillColorHint>
            </colorhints>
        </part>
    </class>

    <!-- 
    //
    //    Edit Style, implemented by Edit
    //
    -->
    <class name="EditStyle">
        <colorhints>
            <BorderColorHint>171 173 179</BorderColorHint>
            <FillColorHint>255 255 255</FillColorHint>
        </colorhints>
        <!-- part name="Background"></part-->
        <!-- part name="Edittext"></part-->
        <!-- part name="Password"></part-->
        <!-- part name="EditBorder_NoScroll"></part-->
        <!-- part name="EditBorder_HScroll"></part-->
        <!-- part name="EditBorder_VScroll"></part-->
        <!-- part name="EditBorder_HVScroll"></part-->
    </class>

    <!-- 
    //
    //    ExplorerBar Style, implemented by ExplorerBar
    //
    -->
    <class name="ExplorerBarStyle">
        <part name="HeaderBackground">
            <colorhints>
                <FillColorHint>140 140 140</FillColorHint>
            </colorhints>
        </part>
        <!-- part name="HeaderClose"></part-->
        <!-- part name="HeaderPin"></part-->
        <!-- part name="IEBarMenu"></part-->
        <!-- part name="NormalGroupBackground"></part-->
        <!-- part name="NormalGroupCollapse"></part-->
        <!-- part name="NormalGroupExpand"></part-->
        <!-- part name="NormalGroupHead"></part-->
        <!-- part name="SpecialGroupBackground"></part-->
        <!-- part name="SpecialGroupCollapse"></part-->
        <!-- part name="SpecialGroupExpand"></part-->
        <!-- part name="SpecialGroupHead"></part-->
    </class>

    <!-- 
    //
    //    Flyout Style, implemented by Flyout
    //
    -->
    <class name="FlyoutStyle">
         <part name="Header">
            <caption>
                <TextColor>87 87 87</TextColor>
                <Font>Segoe UI, 10, Quality:ClearType</Font>
                <ClassicValue type="TextColor">##TextStyle.BodyText.ClassicTextColor</ClassicValue>
                <ClassicValue type="Font">##TextStyle.BodyText.ClassicFont</ClassicValue>
            </caption>
        </part>
        <part name="Body">
            <caption>
                <TextColor>87 87 87</TextColor>
                <Font>##TextStyle.BodyText.Font</Font>
                <ClassicValue type="TextColor">##TextStyle.BodyText.ClassicTextColor</ClassicValue>
                <ClassicValue type="Font">##TextStyle.BodyText.ClassicFont</ClassicValue>
            </caption>
            <state name="Normal">
                <caption>
                    <ClassicValue type="TextColor">##TextStyle.BodyText.ClassicTextColor</ClassicValue>
                    <ClassicValue type="Font">##TextStyle.BodyText.ClassicFont</ClassicValue>
                </caption>
            </state>
            <state name="Emphasized">
                <caption>
                    <TextColor>0 0 0</TextColor>
                    <ClassicValue type="TextColor">##TextStyle.Label.ClassicTextColor</ClassicValue>
                    <ClassicValue type="Font">##TextStyle.Label.ClassicFont</ClassicValue>
                </caption>
            </state>
        </part>
        <part name="Label">
            <caption>
                <TextColor>##TextStyle.Label.TextColor</TextColor>
                <Font>##TextStyle.Label.Font</Font>
                <ClassicValue type="TextColor">##TextStyle.Label.ClassicTextColor</ClassicValue>
                <ClassicValue type="Font">##TextStyle.Label.ClassicFont</ClassicValue>
            </caption>
            <state name="Normal">
                <caption>
                    <ClassicValue type="TextColor">##TextStyle.Label.ClassicTextColor</ClassicValue>
                    <ClassicValue type="Font">##TextStyle.Label.ClassicFont</ClassicValue>
                </caption>
            </state>
            <state name="Selected">
            </state>
            <state name="Emphasized">
                <TextColor>19 112 171</TextColor>
                <ClassicValue type="TextColor">WindowText</ClassicValue>
            </state>
            <state name="Disabled">
                <TextColor>##SysMetrics.GrayText</TextColor>
                <ClassicValue type="TextColor">GrayText</ClassicValue>
            </state>
        </part>
        <part name="Link">
            <caption>
                <TextColor>0 102 204</TextColor>
                <Font>##TextStyle.HyperlinkText.Font</Font>
                <ClassicValue type="TextColor">##TextStyle.HyperlinkText.Normal.ClassicTextColor</ClassicValue>
                <ClassicValue type="Font">##TextStyle.HyperlinkText.Normal.ClassicFont</ClassicValue>
            </caption>
            <state name="Normal">
                <caption>
                    <ClassicValue type="TextColor">##TextStyle.HyperlinkText.Normal.ClassicTextColor</ClassicValue>
                    <ClassicValue type="Font">##TextStyle.HyperlinkText.Normal.ClassicFont</ClassicValue>
                </caption>
            </state>
            <state name="Hover">
                <caption>
                    <Font>##TextStyle.HyperlinkText.Hot.Font</Font>
                    <ClassicValue type="Font">##TextStyle.HyperlinkText.Hot.ClassicFont</ClassicValue>
                </caption>
            </state>
        </part>
        <part name="LinkHeader">
            <caption>
                <TextColor>##Flyoutstyle.Link.TextColor</TextColor>
                <Font>##FlyoutStyle.Header.Font</Font>
                <ClassicValue type="TextColor">##TextStyle.HyperlinkText.Normal.ClassicTextColor</ClassicValue>
                <ClassicValue type="Font">##TextStyle.HyperlinkText.Normal.ClassicFont</ClassicValue>
            </caption>
            <state name="Normal">
                <caption>
                    <ClassicValue type="TextColor">##TextStyle.HyperlinkText.Normal.ClassicTextColor</ClassicValue>
                    <ClassicValue type="Font">##TextStyle.HyperlinkText.Normal.ClassicFont</ClassicValue>
                </caption>
            </state>
            <state name="Hover">
                <caption>
                    <Font>##FlyoutStyle.Header.Font</Font>
                    <ClassicValue type="Font">##TextStyle.HyperlinkText.Hot.ClassicFont</ClassicValue>
                </caption>
            </state>
        </part>
        <part name="Window">
            <colorhints>
                <FillColorHint>255 255 255</FillColorHint>
                <BorderSize>0</BorderSize> 
            </colorhints>
        </part>
        <part name="LinkArea">
            <colorhints>
                <FillColorHint>##SysMetrics.BtnFace</FillColorHint>
            </colorhints>
        </part>
        <!-- part name="Divider"></part-->
    </class>

    <!-- 
    //
    //    Header Style, implemented by Header
    //
    -->
    <class name="HeaderStyle">
        <part name="HeaderItem">
            <colorhints>
                <AccentColorHint>102 188 225</AccentColorHint>
                <FillColorHint>244 244 244</FillColorHint>
            </colorhints>
        </part>
        <part name="HeaderDropDown">
            <colorhints>
                <AccentColorHint>191 191 191</AccentColorHint>
                <FillColorHint>244 244 244</FillColorHint>
            </colorhints>
        </part>
        <part name="HeaderOverflow">
            <colorhints>
                <AccentColorHint>191 191 191</AccentColorHint>
                <FillColorHint>244 244 244</FillColorHint>
            </colorhints>
        </part>
        <!-- part name="HeaderSortArrow"></part-->
    </class>

    <!-- 
    //
    //    ListBox Style, implemented by ListBox
    //
    -->
    <class name="ListboxStyle">
        <colorhints>
            <FillColorHint>255 255 255</FillColorHint>
            <BorderColorHint>130 135 144</BorderColorHint>
            <AccentColorHint>54 89 152</AccentColorHint>
        </colorhints>
        <!-- part name="Border_HScroll"></part-->
        <!-- part name="Border_HVScroll"></part-->
        <!-- part name="Border_NoScroll"></part-->
        <!-- part name="Border_VScroll"></part-->
    </class>

    <!-- 
    //
    //    Listview Style, implemented by Listview 
    //
    -->
    <class name="ListViewStyle">
        <part name="GroupHeader">
            <colorhints>
                <AccentColorHint>185 229 242</AccentColorHint>
                <FillColorHint>94 131 191</FillColorHint>
            </colorhints>
        </part>
        <!-- part name="GroupHeaderLine"></part-->
        <!-- part name="ExpandButton"></part-->
        <!-- part name="CollapseButton"></part-->
        <!-- part name="ColumnDetail"></part-->
    </class>
    <!-- 
    // Listitem implements the Explorer selection visuals,
    // use SetWindowTheme(hWndListView, L"Explorer") to get
    // this new appearance in your listview
    -->
    <!--class name="Explorer::Listview" inherits="Listview">
        <part name="Listitem"></part>
    </class-->

    <!-- 
    //
    //    Menu Style, implemented by Menu
    //
    -->
    <class name="MenuStyle">
        <part name="BarBackground">
            <colorhints>
                <FillColorHint>244 244 244</FillColorHint>
            </colorhints>
        </part>
        <part name="PopupBackground">
            <colorhints>
                <FillColorHint>244 244 244</FillColorHint>
            </colorhints>
        </part>
        <part name="PopupGutter">
            <colorhints>
                <FillColorHint>240 240 240</FillColorHint>
            </colorhints>
        </part>
        <!-- part name="BarItem"></part-->
        <!-- part name="PopupBorders"></part-->
        <!-- part name="PopupCheck"></part-->
        <!-- part name="PopupCheckBackground"></part-->
        <!-- part name="PopupItem"></part-->
        <!-- part name="PopupSeparator"></part-->
        <!-- part name="PopupSubmenu"></part-->
        <!-- part name="SystemClose"></part-->
        <!-- part name="SystemMaximize"></part-->
        <!-- part name="SystemMinimize"></part-->
        <!-- part name="SystemRestore"></part-->
    </class>

    <!-- 
    //
    //    Navigation class
    //
    //    This class has only bitmaps for now, so doesn't implement any style.
    //    Use DrawThemeBackground() or GetThemeBitmap() to retrieve the bitmaps.
    //
    -->
    <!--class name="Navigation"-->
        <!-- part name="BackButton"></part-->
        <!-- part name="ForwardButton"></part-->
        <!-- part name="MenuButton"></part-->
    <!--/class-->

    <!--
    //
    //    Progress Style, implemented by Progress
    //
    -->
    <class name="ProgressStyle">
        <part name="TransparentBar">
            <colorhints>
                <BorderColorHint>104 104 104</BorderColorHint>
                <FillColorHint>255 255 255</FillColorHint>
            </colorhints>
        </part>
        <part name="Fill">
            <colorhints>
                <FillColorHint>82 215 99</FillColorHint>
            </colorhints>
            <state name="Error">
                <colorhints>
                    <FillColorHint>228 0 33</FillColorHint>
                </colorhints>
            </state>
            <state name="Paused">
                <colorhints>
                    <FillColorHint>220 212 0</FillColorHint>
                </colorhints>
            </state>
            <state name="Partial">
                <colorhints>
                    <FillColorHint>0 148 173</FillColorHint>
                </colorhints>
            </state>
        </part>
        <!-- Bar and BarVert have been deprecated -->
        <!-- part name="Bar"></part-->
        <!-- part name="BarVert"></part-->
        <!-- Chunk and ChunkVert have been deprecated -->
        <!-- part name="Chunk"></part-->
        <!-- part name="ChunkVert"></part-->
        <!-- part name="FillVert"></part-->
        <!-- part name="MoveOverlay"></part-->
        <!-- part name="MoveOverlayVert"></part-->
        <!-- part name="PulseOverlay"></part-->
        <!-- part name="PulseOverlayVert"></part-->
        <!-- part name="TransparentBarVert"></part-->
    </class>

    <!-- 
    //
    //    Rebar Style, implemented by Rebar
    //
    -->
    <class name="RebarStyle">
        <colorhints>
            <FillColorHint>233 237 249</FillColorHint>
        </colorhints>
        <part name="Gripper">
            <colorhints>
                <FillColorHint>128 131 137</FillColorHint>
            </colorhints>
        </part>
        <part name="Chevron">
            <colorhints>
                <FillColorHint>0 0 0</FillColorHint>
            </colorhints>
        </part>
        <!-- part name="Background"></part-->
        <!-- part name="Band"></part-->
        <!-- part name="GripperVert"></part-->
        <!-- part name="ChevronVert"></part-->
        <!-- part name="Splitter"></part-->
        <!-- part name="SplitterVert"></part-->
    </class>

    <!-- 
    //
    //    Themed Experiences
    //
    //    Communications::Rebar implements a communication toolbar background
    //    Media::Rebar implements a Media toolbar background, coordinated with the MediaStyle
    //
    //    Use SetWindowTheme(hWndRebar, L"Communications") (or "Media") to apply
    //    those styles to your rebar, and use SetWindowTheme(hWnd, L"Alternate") on the toolbar
    //    to get white text instead of the default color.
    //
    -->
    
    <!-- 
    //
    //    Media Gradient Colors
    //
    -->
    <class name="MediaStyle">
        <colorhints>
            <FillColorHint>238 243 250</FillColorHint>
            <AccentColorHint>207 218 231</AccentColorHint>
        </colorhints>
    </class>

    <!-- 
    //
    //    Communications Gradient Colors
    //
    -->
    
    <class name="CommunicationsStyle">
        <part name="Tab">
            <state name="Normal">
                <colorhints>
                    <FillColorHint>10 76 134</FillColorHint>
                    <AccentColorHint>59 145 232</AccentColorHint>
                    <ClassicValue type="FillColorHint">ButtonShadow</ClassicValue>
                    <ClassicValue type="AccentColorHint">ButtonFace</ClassicValue>
                </colorhints>
            </state>
            <state name="Hot">
                <colorhints>
                   <FillColorHint>56 151 234</FillColorHint>
                   <AccentColorHint>148 201 254</AccentColorHint>
                   <ClassicValue type="FillColorHint">ButtonFace</ClassicValue>
                   <ClassicValue type="AccentColorHint">ButtonHighlight</ClassicValue>
                </colorhints>
             </state>
             <state name="Selected">
                 <colorhints>
                     <FillColorHint>1 37 69</FillColorHint>
                     <AccentColorHint>18 87 157</AccentColorHint>
                     <ClassicValue type="FillColorHint">ButtonShadow</ClassicValue>
                     <ClassicValue type="AccentColorHint">ButtonFace</ClassicValue>
                </colorhints>
             </state>

        </part>
    </class>
    

    <!-- 
    //
    //    Scrollbar Style, implemented by Scrollbar
    //
    -->
    <class name="ScrollbarStyle">
        <part name="ArrowBtn">
            <colorhints>
                <FillColorHint>244 244 244</FillColorHint>
                <BorderColorHint>130 135 144</BorderColorHint>
            </colorhints>
        </part>
        <part name="LowerTrackHorz">
            <colorhints>
                <FillColorHint>244 244 244</FillColorHint>
            </colorhints>
        </part>
        <part name="LowerTrackVert">
            <colorhints>
                <FillColorHint>244 244 244</FillColorHint>
            </colorhints>
        </part>
        <part name="SizeBox">
            <colorhints>
                <FillColorHint>120 120 120</FillColorHint>
            </colorhints>
        </part>
        <part name="ThumbBtnHorz">
            <colorhints>
                <BorderColorHint>255 255 255</BorderColorHint>
                <FillColorHint>171 175 218</FillColorHint>
            </colorhints>
        </part>
        <part name="ThumbBtnVert">
            <colorhints>
                <BorderColorHint>255 255 255</BorderColorHint>
                <FillColorHint>171 175 218</FillColorHint>
            </colorhints>
        </part>
        <part name="UpperTrackHorz">
            <colorhints>
                <FillColorHint>244 244 244</FillColorHint>
            </colorhints>
        </part>
        <part name="UpperTrackVert">
            <colorhints>
                <FillColorHint>244 244 244</FillColorHint>
            </colorhints>
        </part>
        <!-- part name="GripperHorz"></part-->
        <!-- part name="GripperVert"></part-->
    </class>

    <!-- 
    //
    //    Spin Style, implemented by Spin
    //
    -->
    <class name="SpinStyle">
        <part name="Down">
            <colorhints>
                <BorderColorHint>130 135 144</BorderColorHint>
                <FillColorHint>244 244 244</FillColorHint>
            </colorhints>
        </part>
        <part name="DownHorz">
            <colorhints>
                <BorderColorHint>130 135 144</BorderColorHint>
                <FillColorHint>244 244 244</FillColorHint>
            </colorhints>
        </part>
        <part name="Up">
            <colorhints>
                <BorderColorHint>130 135 144</BorderColorHint>
                <FillColorHint>244 244 244</FillColorHint>
            </colorhints>
        </part>
        <part name="UpHorz">
            <colorhints>
                <BorderColorHint>130 135 144</BorderColorHint>
                <FillColorHint>244 244 244</FillColorHint>
            </colorhints>
        </part>
    </class>

    <!-- 
    //
    //    Status Style, implemented by Status
    //
    -->
    <class name="StatusStyle">
        <part name="Gripper">
            <colorhints>
                <FillColorHint>119 119 192</FillColorHint>
            </colorhints>
        </part>
        <part name="Pane">
            <colorhints>
                <FillColorHint>119 119 92</FillColorHint>
            </colorhints>
        </part>
        <colorhints>
            <FillColorHint>177 183 187</FillColorHint>
        </colorhints>
        <!-- part name="GripperPane"></part-->
    </class>

    <!-- 
    //
    //    Tab Style, implemented by Tab
    //
    -->
    <class name="TabStyle">
        <part name="Body">
            <colorhints>
                <FillColorHint>244 244 244</FillColorHint>
            </colorhints>
        </part>
        <part name="AeroWizardBody">
            <colorhints>
                <FillColorHint>255 255 255</FillColorHint>
            </colorhints>
        </part>
        <part name="Pane">
            <colorhints>
                <BorderColorHint>145 155 156</BorderColorHint>
                <FillColorHint>247 247 249</FillColorHint>
            </colorhints>
        </part>
        <part name="TabItem">
            <colorhints>
                <AccentColorHint>255 200 60</AccentColorHint>
                <BorderColorHint>146 146 146</BorderColorHint>
                <FillColorHint>240 241 245</FillColorHint>
            </colorhints>
        </part>
        <!-- part name="TabItemBothEdge"></part-->
        <!-- part name="TabItemLeftEdge"></part-->
        <!-- part name="TabItemRightEdge"></part-->
        <!-- part name="TopTabItem"></part-->
        <!-- part name="TopTabItemBothEdge"></part-->
        <!-- part name="TopTabItemLeftEdge"></part-->
        <!-- part name="TopTabItemRightEdge"></part-->
    </class>

    <!-- 
      //
      //    Task Dialog Style, implemented by TaskDialog
      //
      -->
    <class name="TaskDialogStyle">
        <part name="MainInstructionPane">
            <Font>##TextStyle.MainInstruction.Font</Font>
            <TextColor>##TextStyle.MainInstruction.TextColor</TextColor>
            <ClassicValue type="Font">##TextStyle.MainInstruction.ClassicFont</ClassicValue>
            <ClassicValue type="TextColor">##TextStyle.MainInstruction.ClassicTextColor</ClassicValue>
        </part>
        <part name="ContentPane">
            <Font>##TextStyle.BodyText.Font</Font>
            <TextColor>##TextStyle.BodyText.TextColor</TextColor>
            <ClassicValue type="Font">##TextStyle.BodyText.ClassicFont</ClassicValue>
            <ClassicValue type="TextColor">##TextStyle.BodyText.ClassicTextColor</ClassicValue>
        </part>
        <part name="ExpandedContent">
            <Font>##TextStyle.BodyText.Font</Font>
            <TextColor>##TextStyle.BodyText.TextColor</TextColor>
            <ClassicValue type="Font">##TextStyle.BodyText.ClassicFont</ClassicValue>
            <ClassicValue type="TextColor">##TextStyle.BodyText.ClassicTextColor</ClassicValue>
        </part>
        <part name="ButtonSection">
            <Font>##TextStyle.BodyText.Font</Font>
            <TextColor>##TextStyle.BodyText.TextColor</TextColor>
            <ClassicValue type="Font">##TextStyle.BodyText.ClassicFont</ClassicValue>
            <ClassicValue type="TextColor">##TextStyle.BodyText.ClassicTextColor</ClassicValue>
        </part>
        <part name="ExpandoText">
            <Font>##TextStyle.BodyText.Font</Font>
            <TextColor>##TextStyle.BodyText.TextColor</TextColor>
            <ClassicValue type="Font">##TextStyle.BodyText.ClassicFont</ClassicValue>
            <ClassicValue type="TextColor">##TextStyle.BodyText.ClassicTextColor</ClassicValue>
        </part>
        <part name="ExpandedFooterArea">
            <Font>##TextStyle.BodyText.Font</Font>
            <TextColor>##TextStyle.BodyText.TextColor</TextColor>
            <ClassicValue type="Font">##TextStyle.BodyText.ClassicFont</ClassicValue>
            <ClassicValue type="TextColor">##TextStyle.BodyText.ClassicTextColor</ClassicValue>
        </part>
        <part name="VerificationText">
            <Font>##TextStyle.BodyText.Font</Font>
            <TextColor>##TextStyle.BodyText.TextColor</TextColor>
            <ClassicValue type="Font">##TextStyle.BodyText.ClassicFont</ClassicValue>
            <ClassicValue type="TextColor">##TextStyle.BodyText.ClassicTextColor</ClassicValue>
        </part>
        <part name="FootnotePane">
            <Font>##TextStyle.BodyText.Font</Font>
            <TextColor>##TextStyle.BodyText.TextColor</TextColor>
            <ClassicValue type="Font">##TextStyle.BodyText.ClassicFont</ClassicValue>
            <ClassicValue type="TextColor">##TextStyle.BodyText.ClassicTextColor</ClassicValue>
        </part>
        <part name="RadioButtonPane">
            <Caption>
                <Font>##TextStyle.BodyText.Font</Font>
                <TextColor>##TextStyle.BodyText.TextColor</TextColor>
                <ClassicValue type="Font">##TextStyle.BodyText.ClassicFont</ClassicValue>
                <ClassicValue type="TextColor">##TextStyle.BodyText.ClassicTextColor</ClassicValue>
            </Caption>
        </part>
      <!-- part name="PrimaryPanel"></part-->
      <!-- part name="MainIcon"></part-->
      <!-- part name="CommandLinkPane"></part-->
      <!-- part name="SecondaryPanel"></part-->
      <!-- part name="ControlPane"></part-->
      <!-- part name="ButtonWrapper"></part-->
      <!-- part name="ExpandoButton"></part-->
      <!-- part name="FootnoteSeparator"></part-->
      <!-- part name="ProgressBar"></part-->
      <!-- part name="ImageAlignment"></part-->
    </class>

    <!-- 
    //
    //    Abstract Text Style class
    //
    -->
    <class name="TextStyle">
        <part name="MainInstruction">
            <caption>
                <TextColor>0 51 153</TextColor>
                <Font>Segoe UI, 12, Quality:ClearType</Font>
                <ClassicValue type="TextColor">WindowText</ClassicValue>
                <ClassicValue type="Font">CaptionFont</ClassicValue>
            </caption>
        </part>
        <part name="Instruction">
            <caption>
                <TextColor>0 51 153</TextColor>
                <Font>Segoe UI, 9, Quality:ClearType</Font>
                <ClassicValue type="TextColor">WindowText</ClassicValue>
                <ClassicValue type="Font">MenuFont</ClassicValue>
            </caption>
        </part>
        <part name="BodyTitle">
            <caption>
                <TextColor>0 0 0</TextColor>
                <Font>Segoe UI Bold, 9, Quality:ClearType</Font>
                <ClassicValue type="TextColor">WindowText</ClassicValue>
                <ClassicValue type="Font">MenuFont;;bold</ClassicValue>
            </caption>
        </part>
        <part name="BodyText">
            <caption>
                <TextColor>0 0 0</TextColor>
                <Font>Segoe UI, 9, Quality:ClearType</Font>
                <ClassicValue type="TextColor">WindowText</ClassicValue>
                <ClassicValue type="Font">MenuFont</ClassicValue>
            </caption>
        </part>
        <part name="SecondaryText">
            <caption>
                <TextColor>0 0 0</TextColor>
                <Font>Segoe UI, 9, Quality:ClearType</Font>
                <ClassicValue type="TextColor">WindowText</ClassicValue>
                <ClassicValue type="Font">MenuFont</ClassicValue>
            </caption>
        </part>
        <part name="HyperLinkText">
            <caption>
                <TextColor>0 102 204</TextColor>
                <Font>Segoe UI, 9, Quality:ClearType</Font>
                <ClassicValue type="TextColor">WindowText</ClassicValue>
                <ClassicValue type="Font">MenuFont</ClassicValue>
            </caption>
            <state name="Normal">
                <caption>
                    <ClassicValue type="TextColor">WindowText</ClassicValue>
                    <ClassicValue type="Font">MenuFont</ClassicValue>
                </caption>
            </state>
            <state name="Hot">
                <caption>
                    <TextColor>51 153 255</TextColor>
                    <Font>Segoe UI, 9, Underline, Quality:ClearType</Font>
                    <ClassicValue type="TextColor">HotLight</ClassicValue>
                    <ClassicValue type="Font">MenuFont;;;underline</ClassicValue>
                </caption>
            </state>
            <state name="Pressed">
                <caption>
                    <TextColor>51 153 255</TextColor>
                    <Font>Segoe UI, 9, Underline, Quality:ClearType</Font>
                    <ClassicValue type="TextColor">WindowText</ClassicValue>
                    <ClassicValue type="Font">MenuFont;;;underline</ClassicValue>
                </caption>
            </state>
            <state name="Disabled">
                <caption>
                    <TextColor>126 133 156</TextColor>
                    <Font>Segoe UI, 9, Quality:ClearType</Font>
                    <ClassicValue type="TextColor">GrayText</ClassicValue>
                    <ClassicValue type="Font">MenuFont</ClassicValue>
                </caption>
            </state>
        </part>
        <part name="Expanded">
            <caption>
                <TextColor>0 0 0</TextColor>
                <Font>Segoe UI, 9, Quality:ClearType</Font>
                <ClassicValue type="TextColor">WindowText</ClassicValue>
                <ClassicValue type="Font">MenuFont</ClassicValue>
            </caption>
        </part>
        <part name="Label">
            <caption>
                <TextColor>0 0 0</TextColor>
                <Font>Segoe UI, 9, Quality:ClearType</Font>
                <ClassicValue type="TextColor">WindowText</ClassicValue>
                <ClassicValue type="Font">MenuFont</ClassicValue>
            </caption>
        </part>
        <part name="ControlLabel">
            <caption>
                <TextColor>0 102 204</TextColor>
                <Font>Segoe UI, 9, Quality:ClearType</Font>
                <ClassicValue type="TextColor">WindowText</ClassicValue>
                <ClassicValue type="Font">MenuFont</ClassicValue>
            </caption>
            <state name="Disabled">
                <TextColor>126, 133, 156</TextColor>
                <ClassicValue type="TextColor">GrayText</ClassicValue>
            </state>
        </part>
    </class>

    <!-- 
    //
    //    Toolbar Style, implemented by Toolbar
    //
    -->
    <class name="ToolbarStyle">
        <part name="Button">
            <colorhints>
                <BorderColorHint>130 135 144</BorderColorHint>
                <FillColorHint>244 244 244</FillColorHint>
            </colorhints>
        </part>
        <part name="Separator">
            <colorhints>
                <FillColorHint>130 135 144</FillColorHint>
            </colorhints>
        </part>
        <part name="DropdownButton">
            <colorhints>
                <BorderColorHint>130 135 144</BorderColorHint>
                <FillColorHint>244 244 244</FillColorHint>
            </colorhints>
        </part>
        <part name="SplitButton">
            <colorhints>
                <BorderColorHint>119 119 92</BorderColorHint>
                <FillColorHint>240 241 245</FillColorHint>
            </colorhints>
        </part>
        <part name="SplitButtonDropdown">
            <colorhints>
                <BorderColorHint>119 119 92</BorderColorHint>
                <FillColorHint>240 241 245</FillColorHint>
            </colorhints>
        </part>
        <!-- part name="SeparatorVert"></part-->
    </class>

    <!-- 
    //
    //    Tooltip Style, implemented by Tooltip
    //
    -->
    <class name="TooltipStyle">
        <part name="Standard">
            <caption>
                <Font>##TextStyle.BodyText.Font</Font>
                <TextColor>87 87 87</TextColor>
                <ClassicValue type="TextColor">##TextStyle.BodyText.ClassicTextColor</ClassicValue>
                <ClassicValue type="Font">##TextStyle.BodyText.ClassicFont</ClassicValue>
            </caption>
        </part>
        <part name="StandardTitle">
            <caption>
                <Font>##TextStyle.BodyTitle.Font</Font>
                <TextColor>87 87 87</TextColor>
                <ClassicValue type="TextColor">##TextStyle.BodyText.ClassicTextColor</ClassicValue>
                <ClassicValue type="Font">##TextStyle.BodyText.ClassicFont</ClassicValue>
            </caption>
        </part>
        <part name="Balloon">
            <caption>
                <Font>##TextStyle.BodyText.Font</Font>
                <TextColor>##TextStyle.BodyText.TextColor</TextColor>
                <ClassicValue type="TextColor">##TextStyle.BodyText.ClassicTextColor</ClassicValue>
                <ClassicValue type="Font">##TextStyle.BodyText.ClassicFont</ClassicValue>
            </caption>
            <colorhints>
                <BorderColorHint>130 135 144</BorderColorHint>
                <FillColorHint>233 233 244</FillColorHint>
            </colorhints>
        </part>
        <part name="BalloonTitle">
            <caption>
                <Font>##TextStyle.MainInstruction.Font</Font>
                <TextColor>##TextStyle.MainInstruction.TextColor</TextColor>
                <ClassicValue type="TextColor">##TextStyle.BodyText.ClassicTextColor</ClassicValue>
                <ClassicValue type="Font">##TextStyle.BodyText.ClassicFont</ClassicValue>
            </caption>
        </part>
        <!-- part name="Close"></part-->
        <!-- part name="BalloonStem"></part-->
    </class>

    <!-- 
    //
    //    Trackbar Style, implemented by Trackbar
    //
    -->
    <class name="TrackBarStyle">
        <part name="Thumb">
            <colorhints>
                <AccentColorHint>71 196 70</AccentColorHint>
                <BorderColorHint>118 118 118</BorderColorHint>
                <FillColorHint>244 244 244</FillColorHint>
            </colorhints>
        </part>
        <part name="Track">
            <colorhints>
                <BorderColorHint>118 118 118</BorderColorHint>
                <FillColorHint>244 244 244</FillColorHint>
            </colorhints>
        </part>
        <!-- part name="ThumbBottom"></part-->
        <!-- part name="ThumbLeft"></part-->
        <!-- part name="ThumbRight"></part-->
        <!-- part name="ThumbTop"></part-->
        <!-- part name="ThumbVert"></part-->
        <!-- part name="Tics"></part-->
        <!-- part name="TicsVert"></part-->
        <!-- part name="TrackVert"></part-->
    </class>

    <!-- 
    //
    //    Treeview Style, implemented by Treeview
    //
    -->
    <class name="TreeViewStyle">
        <part name="Glyph">
            <colorhints>
                <AccentColorHint>71 196 70</AccentColorHint>
                <BorderColorHint>118 118 118</BorderColorHint>
                <FillColorHint>244 244 244</FillColorHint>
            </colorhints>
        </part>
        <colorhints>
            <AccentColorHint>71 196 70</AccentColorHint>
            <BorderColorHint>118 118 118</BorderColorHint>
            <FillColorHint>244 244 244</FillColorHint>
        </colorhints>
    </class>
    <!-- Treeitem implements the Explorer selection visuals -->
    <!--class name="Explorer::Treeview" inherits="Treeview">
        <part name="TreeItem"></part>
    </class-->

    <!-- 
    //
    //    Window Style, implemented by Window
    //
    //    Note: CompositedWindow::Window is a subclass of Window that is used by external applications 
    //    that want to draw their own captions when compositing.  It defines Caption and MaxCaption 
    //    parts for use with DrawThemeText(Ex). It is not meant to be used directly with DrawThemeBackground 
    //    as it currently only contains text color information.
    // 
    -->
    <class name="WindowStyle">
        <part name="Caption">
            <colorhints>
                <BorderColorHint>215 228 242</BorderColorHint>
                <FillColorHint>185 209 234</FillColorHint>
            </colorhints>
        </part>
        <part name="CloseButton">
            <colorhints>
                <BorderColorHint>255 255 255</BorderColorHint>
                <FillColorHint>228 93 61</FillColorHint>
            </colorhints>
        </part>
        <part name="HelpButton">
            <colorhints>
                <BorderColorHint>255 255 255</BorderColorHint>
                <FillColorHint>177 183 187</FillColorHint>
            </colorhints>
        </part>
        <part name="MaxButton">
            <colorhints>
                <BorderColorHint>255 255 255</BorderColorHint>
                <FillColorHint>177 183 187</FillColorHint>
            </colorhints>
        </part>
        <part name="MaxCaption">
            <colorhints>
                <FillColorHint>0 0 0</FillColorHint>
            </colorhints>
        </part>
        <part name="MDICloseButton">
            <colorhints>
                <BorderColorHint>118 118 118</BorderColorHint>
                <FillColorHint>240 241 245</FillColorHint>
            </colorhints>
        </part>
        <part name="MDIRestoreButton">
            <colorhints>
                <BorderColorHint>118 118 118</BorderColorHint>
                <FillColorHint>240 241 245</FillColorHint>
            </colorhints>
        </part>
        <part name="MinButton">
            <colorhints>
                <BorderColorHint>255 255 255</BorderColorHint>
                <FillColorHint>177 183 187</FillColorHint>
            </colorhints>
        </part>
        <part name="MinCaption">
            <colorhints>
                <FillColorHint>192 200 217</FillColorHint>
            </colorhints>
        </part>
        <part name="RestoreButton">
            <colorhints>
                <BorderColorHint>255 255 255</BorderColorHint>
                <FillColorHint>177 183 187</FillColorHint>
            </colorhints>
        </part>
        <!-- part name="CaptionSizingTemplate"></part-->
        <!-- part name="Dialog"></part-->
        <!-- part name="FrameBottom"></part-->
        <!-- part name="FrameLeft"></part-->
        <!-- part name="FrameRight"></part-->
        <!-- part name="MDIMinButton"></part-->
        <!-- part name="SmallCaption"></part-->
        <!-- part name="SmallCaptionSizingTemplate"></part-->
        <!-- part name="SmallCloseButton"></part-->
        <!-- part name="SmallFrameBottom"></part-->
        <!-- part name="SmallFrameLeft"></part-->
        <!-- part name="SmallFrameRight"></part-->
    </class>

</visualstyleguide>
=== C:/Users/treeman/Desktop/windows nt source code\xbox\Xbox Live Source\XONLINE_MAIN\public\ext\sdk\vs9sp1\sdk\include\winmeta.xml ===
<instrumentationManifest
    xmlns="http://schemas.microsoft.com/win/2004/08/events" 
    xmlns:win="http://manifests.microsoft.com/win/2004/08/windows/events"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://schemas.microsoft.com/win/2004/08/events eventman.xsd"    
    >
    <metadata name="evt:meta/winTypes">
        <channels>
            <channel name="TraceClassic" type="Debug" symbol="WINEVENT_CHANNEL_CLASSIC_TRACE"
                value="0" message="$(string.channel.TraceClassic)">
              Events for Classic ETW tracing.
            </channel>
            <channel name="System" type="Admin" symbol="WINEVENT_CHANNEL_GLOBAL_SYSTEM"
                isolation="System" value="8" message="$(string.channel.System)">
              Events for all installed system services.  This channel is secured to applications running under
              system service accounts or user applications running under local adminstrator privileges.
            </channel>
            <channel name="Application" type="Admin" symbol="WINEVENT_CHANNEL_GLOBAL_APPLICATION"
                isolation="Application" value="9" message="$(string.channel.Application)">
              Events for all user-level applications.  This channel is not secured and open to any applications.
              Applications which log extensive information should define an application-specific channel.
            </channel>
            <channel name="Security" type="Admin" symbol="WINEVENT_CHANNEL_GLOBAL_SECURITY"
                isolation="System"  value="10" message="$(string.channel.Security)">
              The Windows Audit Log.  For exclusive use of the Windows Local Security Authority.  User events
              may appear as audits if supported by the underlying application.
            </channel>
        </channels>

        <!-- Standard Windows system reporting levels -->
        <levels>
            <level name="win:LogAlways" symbol="WINEVENT_LEVEL_LOG_ALWAYS" value="0" message="$(string.level.LogAlways)"> Log Always </level>
            <level name="win:Critical" symbol="WINEVENT_LEVEL_CRITICAL" value="1" message="$(string.level.Critical)"> Only critical errors </level>
            <level name="win:Error" symbol="WINEVENT_LEVEL_ERROR" value="2" message="$(string.level.Error)"> All errors, includes win:Critical </level>
            <level name="win:Warning" symbol="WINEVENT_LEVEL_WARNING" value="3" message="$(string.level.Warning)"> All warnings, includes win:Error </level>
            <level name="win:Informational" symbol="WINEVENT_LEVEL_INFO" value="4" message="$(string.level.Informational)"> All informational content, including win:Warning </level>
            <level name="win:Verbose" symbol="WINEVENT_LEVEL_VERBOSE" value="5" message="$(string.level.Verbose)"> All tracing, including previous levels </level>

            <!-- The following are unused.  They are place holders so that users dont accidentally use those values in their own definitions -->
            <level name="win:ReservedLevel6" symbol="WINEVENT_LEVEL_RESERVED_6" value="6"/>
            <level name="win:ReservedLevel7" symbol="WINEVENT_LEVEL_RESERVED_7" value="7"/>
            <level name="win:ReservedLevel8" symbol="WINEVENT_LEVEL_RESERVED_8" value="8"/>
            <level name="win:ReservedLevel9" symbol="WINEVENT_LEVEL_RESERVED_9" value="9"/>
            <level name="win:ReservedLevel10" symbol="WINEVENT_LEVEL_RESERVED_10" value="10"/>
            <level name="win:ReservedLevel11" symbol="WINEVENT_LEVEL_RESERVED_11" value="11"/>
            <level name="win:ReservedLevel12" symbol="WINEVENT_LEVEL_RESERVED_12" value="12"/>
            <level name="win:ReservedLevel13" symbol="WINEVENT_LEVEL_RESERVED_13" value="13"/>
            <level name="win:ReservedLevel14" symbol="WINEVENT_LEVEL_RESERVED_14" value="14"/>
            <level name="win:ReservedLevel15" symbol="WINEVENT_LEVEL_RESERVED_15" value="15"/>
            <!-- End of reserved values -->
        </levels>

        <!-- Standard Windows system tasks -->
        <tasks>
            <task name="win:None" value="0" symbol="WINEVENT_TASK_NONE" message="$(string.task.None)"> undefined task </task>
        </tasks>

        <!-- Standard Windows system opcodes -->
        <opcodes>    
            <opcode name="win:Info" value="0" symbol="WINEVENT_OPCODE_INFO" message="$(string.opcode.Info)"> An informational event </opcode>
            <opcode name="win:Start" value="1" symbol="WINEVENT_OPCODE_START" message="$(string.opcode.Start)"> An activity start event </opcode>
            <opcode name="win:Stop" value="2" symbol="WINEVENT_OPCODE_STOP" message="$(string.opcode.Stop)"> An activity end event </opcode>
            <opcode name="win:DC_Start" value="3" symbol="WINEVENT_OPCODE_DC_START" message="$(string.opcode.DCStart)"> A trace collection start event </opcode>
            <opcode name="win:DC_Stop" value="4" symbol="WINEVENT_OPCODE_DC_STOP" message="$(string.opcode.DCStop)"> A trace collection end event </opcode>
            <opcode name="win:Extension" value="5" symbol="WINEVENT_OPCODE_EXTENSION" message="$(string.opcode.Extension)"> An extensional event </opcode>
            <opcode name="win:Reply" value="6" symbol="WINEVENT_OPCODE_REPLY" message="$(string.opcode.Reply)"> A reply event </opcode>
            <opcode name="win:Resume" value="7" symbol="WINEVENT_OPCODE_RESUME" message="$(string.opcode.Resume)"> An event representing the activity resuming from the suspension </opcode>
            <opcode name="win:Suspend" value="8" symbol="WINEVENT_OPCODE_SUSPEND" message="$(string.opcode.Suspend)"> An event representing the activity is suspended, pending another activity's completion </opcode>
            <opcode name="win:Send" value="9" symbol="WINEVENT_OPCODE_SEND" message="$(string.opcode.Send)"> An event representing the activity is transferred to another component, and can continue to work </opcode>
            
            <!-- The following are unused.  They are place holders so that users dont accidentally use those values in their own definitions -->
            <opcode name="win:Receive" value="240" symbol="WINEVENT_OPCODE_RECEIVE" message="$(string.opcode.Receive)"> An event representing receiving an activity transfer from another component </opcode>
            <opcode name="win:ReservedOpcode241" symbol="WINEVENT_OPCODE_RESERVED_241" value="241"/>
            <opcode name="win:ReservedOpcode242" symbol="WINEVENT_OPCODE_RESERVED_242" value="242"/>
            <opcode name="win:ReservedOpcode243" symbol="WINEVENT_OPCODE_RESERVED_243" value="243"/>
            <opcode name="win:ReservedOpcode244" symbol="WINEVENT_OPCODE_RESERVED_244" value="244"/>
            <opcode name="win:ReservedOpcode245" symbol="WINEVENT_OPCODE_RESERVED_245" value="245"/>
            <opcode name="win:ReservedOpcode246" symbol="WINEVENT_OPCODE_RESERVED_246" value="246"/>
            <opcode name="win:ReservedOpcode247" symbol="WINEVENT_OPCODE_RESERVED_247" value="247"/>
            <opcode name="win:ReservedOpcode248" symbol="WINEVENT_OPCODE_RESERVED_248" value="248"/>
            <opcode name="win:ReservedOpcode249" symbol="WINEVENT_OPCODE_RESERVED_249" value="249"/>
            <opcode name="win:ReservedOpcode250" symbol="WINEVENT_OPCODE_RESERVED_250" value="250"/>
            <opcode name="win:ReservedOpcode251" symbol="WINEVENT_OPCODE_RESERVED_251" value="251"/>
            <opcode name="win:ReservedOpcode252" symbol="WINEVENT_OPCODE_RESERVED_252" value="252"/>
            <opcode name="win:ReservedOpcode253" symbol="WINEVENT_OPCODE_RESERVED_253" value="253"/>
            <opcode name="win:ReservedOpcode254" symbol="WINEVENT_OPCODE_RESERVED_254" value="254"/>
            <opcode name="win:ReservedOpcode255" symbol="WINEVENT_OPCODE_RESERVED_255" value="255"/> 
            <!-- End of reserved values -->
        </opcodes>

        <!-- Standard Windows system keywords -->
        <keywords>
            <keyword name="win:AnyKeyword" mask="0x0" symbol="WINEVT_KEYWORD_ANY" message="$(string.keyword.AnyKeyword)">
                 Wild card value
            </keyword>

            <!-- The following are unused.  They are place holders so that users dont accidentally use those values in their own definitions -->
            <keyword name="win:ReservedKeyword48" mask="0x1000000000000" symbol="WINEVENT_KEYWORD_RESERVED_48"/>
            <!-- End of reserved values -->

            <keyword name="win:WDIContext" mask="0x2000000000000" symbol="WINEVENT_KEYWORD_WDI_CONTEXT" message="$(string.keyword.WDIContext)">
                 Attached to all WDI context events
            </keyword>
            <keyword name="win:WDIDiag" mask="0x4000000000000" symbol="WINEVENT_KEYWORD_WDI_DIAG" message="$(string.keyword.WDIDiag)">
                 Attached to all WDI diag events
            </keyword>
            <keyword name="win:SQM" mask="0x8000000000000" symbol="WINEVENT_KEYWORD_SQM" message="$(string.keyword.SQM)">
                 Attached to all SQM events
            </keyword>
            <keyword name="win:AuditFailure" mask="0x10000000000000" symbol="WINEVENT_KEYWORD_AUDIT_FAILURE" message="$(string.keyword.AuditFailure)">
                 Attached to all failed security audits
            </keyword>
            <keyword name="win:AuditSuccess" mask="0x20000000000000" symbol="WINEVENT_KEYWORD_AUDIT_SUCCESS" message="$(string.keyword.AuditSuccess)">
                 Attached to all successful security audits
            </keyword>
            <keyword name="win:CorrelationHint" mask="0x40000000000000" symbol="WINEVENT_KEYWORD_CORRELATION_HINT" message="$(string.keyword.CorrelationHint)">
                 Attached to transfer events where the related Activity ID is a computed value and not a GUID
            </keyword>
            <keyword name="win:EventlogClassic" mask="0x80000000000000" symbol="WINEVENT_KEYWORD_EVENTLOG_CLASSIC" message="$(string.keyword.Classic)">
                 Attached to events raised using classic eventlog API
            </keyword>

            <!-- The following are used to pass channel information.  They are place holders so that users dont accidentally use those values in their own definitions -->
            <keyword name="win:ReservedKeyword56" mask="0x100000000000000" symbol="WINEVENT_KEYWORD_RESERVED_56"/>
            <keyword name="win:ReservedKeyword57" mask="0x200000000000000" symbol="WINEVENT_KEYWORD_RESERVED_57"/>
            <keyword name="win:ReservedKeyword58" mask="0x400000000000000" symbol="WINEVENT_KEYWORD_RESERVED_58"/>
            <keyword name="win:ReservedKeyword59" mask="0x800000000000000" symbol="WINEVENT_KEYWORD_RESERVED_59"/>
            <keyword name="win:ReservedKeyword60" mask="0x1000000000000000" symbol="WINEVENT_KEYWORDE_RESERVED_60"/>
            <keyword name="win:ReservedKeyword61" mask="0x2000000000000000" symbol="WINEVENT_KEYWORD_RESERVED_61"/>
            <keyword name="win:ReservedKeyword62" mask="0x4000000000000000" symbol="WINEVENT_KEYWORD_RESERVED_62"/>
            <keyword name="win:ReservedKeyword63" mask="0x8000000000000000" symbol="WINEVENT_KEYWORD_RESERVED_63"/>
            <!-- End of reserved values -->
        </keywords>
        
        <!-- Standard Windows & CLR system types -->
        <types xmlns:xs="http://www.w3.org/2001/XMLSchema">
            <xmlTypes>
                 <xmlType name="xs:string" value="1" symbol="WINEVENT_OUT_TYPE_STRING"/>
                 <xmlType name="xs:dateTime" value="2" symbol="WINEVENT_OUT_TYPE_DATE_TIME"/>
                 <xmlType name="xs:byte" value="3" symbol="WINEVENT_OUT_TYPE_BYTE"/>
                 <xmlType name="xs:unsignedByte" value="4" symbol="WINEVENT_OUT_TYPE_UNSIGNED_BYTE"/>
                 <xmlType name="xs:short" value="5" symbol="WINEVENT_OUT_TYPE_SHORT"/>
                 <xmlType name="xs:unsignedShort" value="6" symbol="WINEVENT_OUT_TYPE_UNSIGNED_SHORT"/>
                 <xmlType name="xs:int" value="7" symbol="WINEVENT_OUT_TYPE_INT"/>
                 <xmlType name="xs:unsignedInt" value="8" symbol="WINEVENT_OUT_TYPE_UNSIGNED_INT"/>
                 <xmlType name="xs:long" value="9" symbol="WINEVENT_OUT_TYPE_LONG"/>
                 <xmlType name="xs:unsignedLong" value="10" symbol="WINEVENT_OUT_TYPE_UNSIGNED_LONG"/>
                 <xmlType name="xs:float" value="11" symbol="WINEVENT_OUT_TYPE_FLOAT"/>
                 <xmlType name="xs:double" value="12" symbol="WINEVENT_OUT_TYPE_DOUBLE"/>
                 <xmlType name="xs:boolean" value="13" symbol="WINEVENT_OUT_TYPE_BOOLEAN"/>
                 <xmlType name="xs:GUID" value="14" symbol="WINEVENT_OUT_TYPE_GUID"/>
                 <xmlType name="xs:hexBinary" value="15" symbol="WINEVENT_OUT_TYPE_HEXBINARY"/>
                 <xmlType name="win:HexInt8" value="16" symbol="WINEVENT_OUT_TYPE_HEX_INT8"/>
                 <xmlType name="win:HexInt16" value="17" symbol="WINEVENT_OUT_TYPE_HEX_INT16"/>
                 <xmlType name="win:HexInt32" value="18" symbol="WINEVENT_OUT_TYPE_HEX_INT32"/>
                 <xmlType name="win:HexInt64" value="19" symbol="WINEVENT_OUT_TYPE_HEX_INT64"/>
                 <xmlType name="win:PID" value="20" symbol="WINEVENT_OUT_TYPE_PID"/>
                 <xmlType name="win:TID" value="21" symbol="WINEVENT_OUT_TYPE_TID"/>
                 <xmlType name="win:Port" value="22" symbol="WINEVENT_OUT_TYPE_PORT"/>            
                 <xmlType name="win:IPv4" value="23" symbol="WINEVENT_OUT_TYPE_IPV4"/>
                 <xmlType name="win:IPv6" value="24" symbol="WINEVENT_OUT_TYPE_IPV6"/>             
                 <xmlType name="win:SocketAddress" value="25" symbol="WINEVENT_OUT_TYPE_SOCKET_ADDRESS"/>    
                 <xmlType name="win:CIMDateTime" value="26" symbol="WINEVENT_OUT_TYPE_CIMDATETIME"/>    
                 <xmlType name="win:ETWTIME" value="27" symbol="WINEVENT_OUT_TYPE_ETWTIME"/>
                 <xmlType name="win:Xml" value="28" symbol="WINEVENT_OUT_TYPE_XML"/>
                 <xmlType name="win:ErrorCode" value="29" symbol="WINEVENT_OUT_TYPE_ERROR_CODE"/>
            </xmlTypes>
            <inTypes>
                <inType name="win:UnicodeString" value="1" symbol="WINEVENT_TYPE_NULL_TERMINATED_STRING">
                    <description> A NULL-terminated UNICODE string. </description>
                    <outType default="true" xmlType="xs:string" />
                    <outType xmlType="win:Xml" />
                </inType>
                <inType name="win:AnsiString" value="2" symbol="WINEVENT_TYPE_NULL_TERMINATED_ANSI_STRING">
                    <description> A NULL-terminated ANSI string. </description>
                    <outType default="true" xmlType="xs:string" />
                    <outType xmlType="win:Xml" />                
                </inType>
                <inType name="win:Int8" value="3" symbol="WINEVENT_TYPE_INT8">
                    <description> A signed 8-bit integer. </description>
                    <outType default="true" xmlType="xs:byte" />
                </inType>
                <inType name="win:UInt8" value="4" symbol="WINEVENT_TYPE_UINT8">
                    <description> An unsigned 8-bit integer. </description>
                    <outType default="true" xmlType="xs:unsignedByte" />
                    <outType xmlType="win:HexInt8">An integer in hex format</outType>
                </inType>
                <inType name="win:Int16" value="5" symbol="WINEVENT_TYPE_INT16">
                    <description> A signed 16-bit integer.</description>
                    <outType default="true" xmlType="xs:short" />
                </inType>
                <inType name="win:UInt16" value="6" symbol="WINEVENT_TYPE_UINT16">
                    <description> An unsigned 16-bit integer </description>
                    <outType default="true" xmlType="xs:unsignedShort" />
                    <outType xmlType="win:Port" />
                    <outType xmlType="win:HexInt16">An integer in hex format</outType>
                </inType>
                <inType name="win:Int32" value="7" symbol="WINEVENT_TYPE_INT32">
                    <description> A signed 32-bit integer. </description>
                    <outType default="true" xmlType="xs:int" />
                </inType>
                <inType name="win:UInt32" value="8" symbol="WINEVENT_TYPE_UINT32">
                    <description> An unsigned 32-bit integer. </description>
                    <outType default="true" xmlType="xs:unsignedInt" />
                    <outType xmlType="win:PID" />
                    <outType xmlType="win:TID" />
                    <outType xmlType="win:IPv4" />
                    <outType xmlType="win:ETWTIME" />
                    <outType xmlType="win:ErrorCode"/>
                    <outType xmlType="win:HexInt32">An integer in hex format</outType>
                </inType>
                <inType name="win:Int64" value="9" symbol="WINEVENT_TYPE_INT64">
                    <description> A signed 64-bit integer. </description>
                    <outType default="true" xmlType="xs:long" />
                </inType>
                <inType name="win:UInt64" value="10" symbol="WINEVENT_TYPE_UINT64">
                    <description> An unsigned 64-bit integer. </description>
                    <outType default="true" xmlType="xs:unsignedLong" />
                    <outType xmlType="win:HexInt64">An integer in hex format</outType>
                </inType>
                <inType name="win:Float" value="11" symbol="WINEVENT_TYPE_FLOAT">
                    <description> An IEEE 4-byte floating-point value </description>
                    <outType default="true" xmlType="xs:float" />
                </inType>
                <inType name="win:Double" value="12" symbol="WINEVENT_TYPE_DOUBLE">
                    <description> An IEEE 8-byte floating-point value </description>
                    <outType default="true" xmlType="xs:double" />
                </inType>
                <inType name="win:Boolean" value="13" symbol="WINEVENT_TYPE_BOOL">
                    <description> A 32-bit value where 0 is false, 1 is true. </description>
                    <outType default="true" xmlType="xs:boolean"/>
                </inType>            
                <inType name="win:Binary" value="14" symbol="WINEVENT_TYPE_BINARY">
                    <description>Variable size binary data.</description>
                    <outType default="true" xmlType="xs:hexBinary"/>
                    <outType xmlType="win:IPv6"/>
                    <outType xmlType="win:SocketAddress"/>
                </inType>            
                <inType name="win:GUID" value="15" symbol="WINEVENT_TYPE_GUID">
                    <description> A DCE-compliant 128-bit UUID. XML spec: {12345678-1234-4667-1234-123456789abc}</description>
                    <outType default="true" xmlType="xs:GUID"/>
                </inType>
                <inType name="win:Pointer" value="16" symbol="WINEVENT_TYPE_POINTER">
                    <description> A pointer; sized to the current platform (32-bit or 64-bit). XML spec: hex representation of a pointer</description>
                    <outType default="true" xmlType="win:HexInt64"/>
                </inType>
                <inType name="win:FILETIME" value="17" symbol="WINEVENT_TYPE_FILETIME">
                    <description> A Windows FILETIME struct. </description>
                    <outType default="true" xmlType="xs:dateTime" />
                </inType>
                <inType name="win:SYSTEMTIME" value="18" symbol="WINEVENT_TYPE_SYSTEMTIME">
                    <description> A Windows SYSTEMTIME struct.</description>
                    <outType default="true" xmlType="xs:dateTime" />
                </inType>
                <inType name="win:SID" value="19" symbol="WINEVENT_TYPE_SID">
                    <description> A self-relative Windows SID structure. XML spec: S-1-0-0.</description>
                    <outType default="true" xmlType="xs:string"/>
                </inType>            
                <inType name="win:HexInt32" value="20" symbol="WINEVENT_TYPE_HEXINT32">
                    <description> A hexidecimal representation of an unsigned 32-bit integer. </description>
                    <outType default="true" xmlType="win:HexInt32"/>
                    <outType xmlType="win:ErrorCode"/>
                </inType>
                <inType name="win:HexInt64" value="21" symbol="WINEVENT_TYPE_HEXINT64">
                    <description> A hexidecimal representation of an unsigned 64-bit integer. </description>
                    <outType default="true" xmlType="win:HexInt64"/>
                </inType>
            </inTypes>
        </types>

        <messageTable>
            <!-- Categories for classic publishers -->
            <message value="1" message="$(string.category.Devices)"/>
            <message value="2" message="$(string.category.Disk)"/>
            <message value="3" message="$(string.category.Printers)"/>
            <message value="4" message="$(string.category.Services)"/>
            <message value="5" message="$(string.category.Shell)"/>
            <message value="6" message="$(string.category.SystemEvent)"/>
            <message value="7" message="$(string.category.Network)"/>

            <!-- Channel names for classic global logs -->
            <message value="256" message="$(string.channel.Application)"/>
            <message value="257" message="$(string.channel.Security)"/>
            <message value="258" message="$(string.channel.System)"/>
        </messageTable>

    </metadata>
    
    <localization>
        <resources culture="en-US">
            <stringTable>
                <!-- Categories for classic publishers.  THESE MUST START AT ENTRY 0! -->
                <string id="category.Reserved" value="Reserved"/>
                <string id="category.Devices" value="Devices"/>
                <string id="category.Disk" value="Disk"/>
                <string id="category.Printers" value="Printers"/>
                <string id="category.Services" value="Services"/>
                <string id="category.Shell" value="Shell"/>
                <string id="category.SystemEvent" value="System Event"/>
                <string id="category.Network" value="Network"/>

                <string id="level.LogAlways" value="Log Always"/>
                <string id="level.Critical" value="Critical"/>
                <string id="level.Error" value="Error"/>
                <string id="level.Warning" value="Warning"/>
                <string id="level.Informational" value="Information"/>
                <string id="level.Verbose" value="Verbose"/>

                <string id="opcode.Info" value="Info"/>
                <string id="opcode.Start" value="Start"/>
                <string id="opcode.Stop" value="Stop"/>
                <string id="opcode.DCStart" value="DCStart"/>
                <string id="opcode.DCStop" value="DCStop"/>
                <string id="opcode.Extension" value="Extension"/>
                <string id="opcode.Reply" value="Reply"/>
                <string id="opcode.Resume" value="Resume"/>
                <string id="opcode.Suspend" value="Suspend"/>
                <string id="opcode.Send" value="Send"/>
                <string id="opcode.Receive" value="Receive"/>
 
                <string id="task.None" value="None"/>

                <string id="keyword.AnyKeyword" value="AnyKeyword"/>
                <string id="keyword.WDIContext" value="WDI Context"/>
                <string id="keyword.WDIDiag" value="WDI Diag"/>
                <string id="keyword.SQM" value="SQM"/>
                <string id="keyword.AuditFailure" value="Audit Failure"/>
                <string id="keyword.AuditSuccess" value="Audit Success"/>
                <string id="keyword.CorrelationHint" value="Correlation Hint"/>
                <string id="keyword.Classic" value="Classic"/>

                <string id="channel.TraceClassic" value="TraceClassic"/>
                <string id="channel.System" value="System"/>
                <string id="channel.Application" value="Application"/>
                <string id="channel.Security" value="Security"/>
            </stringTable>
        </resources>
    </localization>

</instrumentationManifest>
=== C:/Users/treeman/Desktop/windows nt source code\xbox\Xbox Live Source\XONLINE_MAIN\public\ext\sdk\vs9sp1\sdk\include\atl90\Black\Style.xml ===
<STYLE>
	<VERSION>
		<NUMBER>2007</NUMBER>
		<TYPE>20</TYPE>
		<ID_PREFIX>BLACK_</ID_PREFIX>
	</VERSION>
	<DESCRIPTION>
		<NAME>Obsidian (black)</NAME>
	</DESCRIPTION>
	<GLOBALS>
		<BarText>0, 0, 0</BarText>
		<BarFace>235, 235, 235</BarFace>
		<ActiveCaption>233, 235, 237</ActiveCaption>
		<CaptionText>70, 70, 70</CaptionText>
		<InactiveCaption>158, 160, 160</InactiveCaption>
		<InactiveCaptionText>70, 70, 70</InactiveCaptionText>
		<FloatToolBarBorder>137, 137, 137</FloatToolBarBorder>
		<BarShadow>172, 172, 172</BarShadow>
		<BarDkShadow>129, 129, 129</BarDkShadow>
		<BarLight>233, 235, 237</BarLight>
		<AutoPremultiply>TRUE</AutoPremultiply>
		<HighlightGradientDark>255, 219, 117</HighlightGradientDark>
		<HighlightGradientLight>255, 245, 204</HighlightGradientLight>
		<HighlightDnGradientDark>255, 184, 94</HighlightDnGradientDark>
		<HighlightDnGradientLight>252, 151, 61</HighlightDnGradientLight>
		<HighlightCheckedGradientDark>255, 171, 63</HighlightCheckedGradientDark>
		<HighlightCheckedGradientLight>255, 207, 146</HighlightCheckedGradientLight>
		<PressedButtonBorder>251, 140, 60</PressedButtonBorder>
		<Highlight>180, 201, 233</Highlight>
		<HighlightText>0, 0, 0</HighlightText>
		<MenuShadowColor>50, 50, 50</MenuShadowColor>
		<TOOLTIP>
			<DRAW_SEPARATOR>FALSE</DRAW_SEPARATOR>
			<ROUNDED_CORNERS>TRUE</ROUNDED_CORNERS>
			<COLOR_FILL>255, 255, 255</COLOR_FILL>
			<COLOR_FILLGRADIENT>205, 208, 213</COLOR_FILLGRADIENT>
			<COLOR_TEXT>76, 76, 76</COLOR_TEXT>
			<COLOR_BORDER>118, 118, 118</COLOR_BORDER>
		</TOOLTIP>
	</GLOBALS>
	<MAINWND>
		<CAPTION>
			<FONT>
				<WEIGHT>NORMAL</WEIGHT>
				<QUALITY>CLEARTYPE</QUALITY>
			</FONT>
			<ActiveStart>62, 62, 62</ActiveStart>
			<ActiveFinish>47, 48, 48</ActiveFinish>
			<InactiveStart>153, 153, 153</InactiveStart>
			<InactiveFinish>146, 146, 146</InactiveFinish>
			<ActiveText>255, 255, 255</ActiveText>
			<InactiveText>225, 225, 225</InactiveText>
			<ActiveTitleText>174, 209, 255</ActiveTitleText>
			<InactiveTitleText>225, 225, 225</InactiveTitleText>
			<TextCenter>TRUE</TextCenter>
			<BORDER>
				<SIZE>35, 31</SIZE>
				<CORNERS>5, 10, 5, 3</CORNERS>
			</BORDER>
			<BUTTONS>
				<NORMAL>
					<ConstSize>23, 23</ConstSize>
					<IconSize>17, 16</IconSize>
					<SIZE>17, 16</SIZE>
					<CORNERS>2, 2, 2, 2</CORNERS>
				</NORMAL>
				<SMALL>
					<ConstSize>16, 16</ConstSize>
					<IconSize>13, 12</IconSize>
					<SIZE>17, 16</SIZE>
					<CORNERS>2, 2, 2, 2</CORNERS>
				</SMALL>
			</BUTTONS>
		</CAPTION>
		<ROUND_BORDER>9, 9</ROUND_BORDER>
		<BORDER>
			<SIZE>35, 23</SIZE>
			<CORNERS>17, 0, 17, 22</CORNERS>
			<SIDES>17, 0, 17, 17</SIDES>
		</BORDER>
		<BORDER_MDICHILD>
			<SIZE>35, 23</SIZE>
			<CORNERS>17, 0, 17, 22</CORNERS>
			<SIDES>17, 0, 17, 17</SIDES>
		</BORDER_MDICHILD>
		<MainClientArea>70, 70, 70</MainClientArea>
	</MAINWND>
	<EDIT>
		<BorderHighlighted>255, 189, 105</BorderHighlighted>
	</EDIT>
	<COMBO>
		<BorderHighlighted>255, 189, 105</BorderHighlighted>
		<BorderPressed>255, 189, 105</BorderPressed>
		<BUTTON>
			<GradientStartNormal>162, 169, 178</GradientStartNormal>
			<GradientFinishNormal>198, 202, 208</GradientFinishNormal>
			<GradientStartHighlighted>255, 220, 122</GradientStartHighlighted>
			<GradientFinishHighlighted>255, 244, 199</GradientFinishHighlighted>
			<BtnBorderHighlighted>255, 189, 105</BtnBorderHighlighted>
			<GradientStartPressed>255, 183, 91</GradientStartPressed>
			<GradientFinishPressed>252, 153, 61</GradientFinishPressed>
			<BtnBorderPressed>251, 140, 61</BtnBorderPressed>
		</BUTTON>
	</COMBO>
	<MENU>
		<Light>250, 250, 250</Light>
		<Rarely>195, 199, 205</Rarely>
		<Border>145, 153, 164</Border>
		<Separator1>197, 197, 197</Separator1>
		<Separator2>245, 245, 245</Separator2>
		<GroupBackground>235, 235, 235</GroupBackground>
		<ItemBorder>205, 181, 130</ItemBorder>
		<ItemBack>
			<SIZE>20, 20</SIZE>
			<CORNERS>2, 2, 2, 2</CORNERS>
		</ItemBack>
		<ItemCheck>
			<SIZE>10, 14</SIZE>
		</ItemCheck>
		<ItemRadio>
			<SIZE>10, 14</SIZE>
		</ItemRadio>
		<Highlighted>
			<SIZE>55, 22</SIZE>
			<CORNERS>2, 2, 2, 2</CORNERS>
		</Highlighted>
		<HighlightedDisabled>
			<SIZE>55, 22</SIZE>
			<CORNERS>2, 2, 2, 2</CORNERS>
		</HighlightedDisabled>
		<ScrollBtn_T>
			<SIZE>30, 12</SIZE>
			<CORNERS>2, 2, 2, 2</CORNERS>
		</ScrollBtn_T>
		<TextNormal>70, 70, 70</TextNormal>
		<TextHighlighted>70, 70, 70</TextHighlighted>
		<TextDisabled>167, 167, 167</TextDisabled>
		<COLORS>
			<Black>90, 90, 90</Black>
			<Black2>90, 90, 90</Black2>
		</COLORS>
		<BorderSize>2</BorderSize>
		<ButtonBorder>
			<SIZE>2, 19</SIZE>
		</ButtonBorder>
	</MENU>
	<BARS>
		<DEFAULT>
			<Bkgnd>239, 239, 239</Bkgnd>
			<GradientLight>83, 83, 83</GradientLight>
			<GradientDark>83, 83, 83</GradientDark>
		</DEFAULT>
		<TOOLBAR>
			<GradientLight>205, 208, 213</GradientLight>
			<GradientDark>148, 156, 166</GradientDark>
			<GradientVertLight>205, 208, 213</GradientVertLight>
			<GradientVertDark>148, 156, 166</GradientVertDark>
			<CustomizeButtonGradientLight>178, 183, 191</CustomizeButtonGradientLight>
			<CustomizeButtonGradientDark>76, 83, 92</CustomizeButtonGradientDark>
			<BottomLineColor>76, 83, 92</BottomLineColor>
			<GRIPPER>
				<SIZE>4, 4</SIZE>
				<TRANSPARENT>255, 0, 255</TRANSPARENT>
			</GRIPPER>
			<TEAR>
				<SIZE>35, 3</SIZE>
				<TRANSPARENT>255, 0, 255</TRANSPARENT>
			</TEAR>
			<BUTTON>
				<SIZE>22, 22</SIZE>
				<CORNERS>2, 3, 2, 2</CORNERS>
			</BUTTON>
			<BORDER>
				<SIZE>9, 9</SIZE>
				<CORNERS>4, 4, 4, 4</CORNERS>
				<SIDES>2, 2, 2, 2</SIDES>
			</BORDER>
			<TextNormal>0, 0, 0</TextNormal>
			<TextHighlighted>0, 0, 0</TextHighlighted>
			<TextDisabled>141, 141, 141</TextDisabled>
		</TOOLBAR>
		<MENUBAR>
			<GradientLight>83, 83, 83</GradientLight>
			<GradientDark>83, 83, 83</GradientDark>
			<GradientVertLight>83, 83, 83</GradientVertLight>
			<GradientVertDark>83, 83, 83</GradientVertDark>
			<TextNormal>255, 255, 255</TextNormal>
			<TextHighlighted>0, 0, 0</TextHighlighted>
			<TextDisabled>194, 194, 194</TextDisabled>
			<BUTTON>
				<SIZE>22, 19</SIZE>
				<CORNERS>1, 1, 1, 1</CORNERS>
				<TRANSPARENT>255, 0, 255</TRANSPARENT>
			</BUTTON>
		</MENUBAR>
		<POPUPBAR>
			<ROUND_BORDER>3, 3</ROUND_BORDER>
			<BORDER>
				<SIZE>7, 7</SIZE>
				<CORNERS>3, 3, 3, 3</CORNERS>
				<SIDES>2, 2, 2, 2</SIDES>
			</BORDER>
			<RESIZEBAR>
				<BACK>
					<SIZE>3, 11</SIZE>
					<CORNERS>1, 2, 1, 1</CORNERS>
				</BACK>
				<ICON_HV>
					<SIZE>9, 8</SIZE>
					<TRANSPARENT>255, 0, 255</TRANSPARENT>
				</ICON_HV>
				<ICON_HVT>
					<SIZE>9, 8</SIZE>
					<TRANSPARENT>255, 0, 255</TRANSPARENT>
				</ICON_HVT>
				<ICON_V>
					<SIZE>15, 3</SIZE>
					<TRANSPARENT>255, 0, 255</TRANSPARENT>
				</ICON_V>
			</RESIZEBAR>
		</POPUPBAR>
		<STATUSBAR>
			<BACK>
				<SIZE>35, 23</SIZE>
				<CORNERS>5, 8, 5, 5</CORNERS>
				<SIDES>1, 8, 1, 3</SIDES>
			</BACK>
			<BACK_EXT>
				<SIZE>35, 23</SIZE>
				<CORNERS>3, 8, 5, 5</CORNERS>
				<SIDES>3, 8, 1, 3</SIDES>
			</BACK_EXT>
			<PANEBORDER>
				<SIZE>2, 20</SIZE>
			</PANEBORDER>
			<SIZEBOX>
				<SIZE>11, 11</SIZE>
			</SIZEBOX>
			<TextNormal>255, 255, 255</TextNormal>
			<TextDisabled>141, 141, 141</TextDisabled>
			<TextExtendedDisabled>100, 100, 100</TextExtendedDisabled>
		</STATUSBAR>
		<CAPTIONBAR>
			<GradientLight>240, 241, 242</GradientLight>
			<GradientDark>189, 194, 200</GradientDark>
			<TextNormal>55, 60, 67</TextNormal>
		</CAPTIONBAR>
	</BARS>
	<TASK>
		<GradientDark>235, 235, 235</GradientDark>
		<GradientLight>255, 255, 255</GradientLight>
		<GROUP>
			<NORMAL>
				<CAPTION>
					<DarkNormal>221, 224, 227</DarkNormal>
					<LightNormal>240, 241, 242</LightNormal>
					<DarkHighlighted>232, 234, 236</DarkHighlighted>
					<LightHighlighted>255, 255, 255</LightHighlighted>
					<TextNormal>55, 60, 67</TextNormal>
					<TextHighlighted>55, 60, 67</TextHighlighted>
				</CAPTION>
				<AREA>
					<DarkNormal>255, 255, 255</DarkNormal>
					<LightNormal>255, 255, 255</LightNormal>
				</AREA>
			</NORMAL>
			<SPECIAL>
				<CAPTION>
					<DarkNormal>221, 224, 227</DarkNormal>
					<LightNormal>240, 241, 242</LightNormal>
					<DarkHighlighted>232, 234, 236</DarkHighlighted>
					<LightHighlighted>255, 255, 255</LightHighlighted>
					<TextNormal>55, 60, 67</TextNormal>
					<TextHighlighted>55, 60, 67</TextHighlighted>
				</CAPTION>
				<AREA>
					<DarkNormal>255, 255, 255</DarkNormal>
					<LightNormal>255, 255, 255</LightNormal>
				</AREA>
			</SPECIAL>
			<BORDER>76, 83, 92</BORDER>
		</GROUP>
		<SCROLL_BUTTON>
			<SIZE>30, 12</SIZE>
			<CORNERS>2, 2, 2, 2</CORNERS>
		</SCROLL_BUTTON>
	</TASK>
	<TABS>
		<TextColorActive>0, 0, 0</TextColorActive>
		<TextColorInactive>255, 255, 255</TextColorInactive>
		<3D>
			<BUTTON>
				<SIZE>57, 24</SIZE>
				<CORNERS>5, 5, 5, 2</CORNERS>
			</BUTTON>
		</3D>
		<FLAT>
			<Black>109, 109, 109</Black>
			<Highlight>73, 73, 73</Highlight>
			<BUTTON>
				<SIZE>24, 15</SIZE>
				<CORNERS>4, 4, 0, 6</CORNERS>
				<TRANSPARENT>255, 0, 255</TRANSPARENT>
			</BUTTON>
			<BorderInnerNormal>235, 235, 235</BorderInnerNormal>
			<BorderInnerActive>235, 235, 235</BorderInnerActive>
			<BorderOuterNormal>109, 109, 109</BorderOuterNormal>
			<BorderOuterActive>109, 109, 109</BorderOuterActive>
		</FLAT>
	</TABS>
	<HEADER>
		<NormalStart>247, 247, 247</NormalStart>
		<NormalFinish>222, 222, 222</NormalFinish>
		<NormalBorder>182, 182, 182</NormalBorder>
		<HighlightedStart>249, 216, 157</HighlightedStart>
		<HighlightedFinish>241, 193, 94</HighlightedFinish>
		<HighlightedBorder>242, 149, 54</HighlightedBorder>
		<PressedStart>255, 211, 139</PressedStart>
		<PressedFinish>242, 145, 56</PressedFinish>
		<PressedBorder>242, 149, 54</PressedBorder>
	</HEADER>
	<RIBBON>
		<PANEL>
			<BACK>
				<TOP>
					<SIZE>100, 68</SIZE>
					<CORNERS>3, 15, 3, 0</CORNERS>
				</TOP>
				<BOTTOM>
					<SIZE>100, 17</SIZE>
					<CORNERS>3, 0, 4, 4</CORNERS>
				</BOTTOM>
			</BACK>
			<CAPTION>
				<LAUNCH_BTN>
					<SIZE>15, 14</SIZE>
					<CORNERS>2, 2, 2, 2</CORNERS>
				</LAUNCH_BTN>
				<LAUNCH_ICON>
					<SIZE>8, 8</SIZE>
				</LAUNCH_ICON>
				<TextNormal>255, 255, 255</TextNormal>
				<TextHighlighted>255, 255, 255</TextHighlighted>
			</CAPTION>
			<SEPARATOR>
				<SIZE>2, 55</SIZE>
			</SEPARATOR>
			<QAT>
				<SIZE>11, 24</SIZE>
				<CORNERS>3, 3, 3, 3</CORNERS>
			</QAT>
			<BUTTONS>
				<BUTTON_GROUP_F>
					<SIZE>22, 22</SIZE>
					<CORNERS>2, 3, 2, 2</CORNERS>
				</BUTTON_GROUP_F>
				<BUTTON_GROUP_M>
					<SIZE>22, 22</SIZE>
					<CORNERS>2, 3, 2, 2</CORNERS>
				</BUTTON_GROUP_M>
				<BUTTON_GROUP_L>
					<SIZE>22, 22</SIZE>
					<CORNERS>2, 3, 2, 2</CORNERS>
				</BUTTON_GROUP_L>
				<BUTTON_GROUP_S>
					<SIZE>22, 22</SIZE>
					<CORNERS>2, 3, 2, 2</CORNERS>
				</BUTTON_GROUP_S>
				<BUTTON_GROUPMENU_F_C>
					<SIZE>23, 22</SIZE>
					<CORNERS>2, 3, 2, 2</CORNERS>
				</BUTTON_GROUPMENU_F_C>
				<BUTTON_GROUPMENU_F_M>
					<SIZE>9, 22</SIZE>
					<CORNERS>1, 3, 2, 2</CORNERS>
				</BUTTON_GROUPMENU_F_M>
				<BUTTON_GROUPMENU_M_C>
					<SIZE>23, 22</SIZE>
					<CORNERS>2, 3, 2, 2</CORNERS>
				</BUTTON_GROUPMENU_M_C>
				<BUTTON_GROUPMENU_M_M>
					<SIZE>9, 22</SIZE>
					<CORNERS>1, 3, 2, 2</CORNERS>
				</BUTTON_GROUPMENU_M_M>
				<BUTTON_GROUPMENU_L_C>
					<SIZE>23, 22</SIZE>
					<CORNERS>2, 3, 2, 2</CORNERS>
				</BUTTON_GROUPMENU_L_C>
				<BUTTON_GROUPMENU_L_M>
					<SIZE>10, 22</SIZE>
					<CORNERS>1, 3, 2, 2</CORNERS>
				</BUTTON_GROUPMENU_L_M>
				<BUTTON_NORMAL_S>
					<SIZE>22, 22</SIZE>
					<CORNERS>2, 2, 2, 2</CORNERS>
				</BUTTON_NORMAL_S>
				<BUTTON_NORMAL_B>
					<SIZE>43, 66</SIZE>
					<CORNERS>2, 2, 2, 2</CORNERS>
				</BUTTON_NORMAL_B>
				<BUTTON_DEFAULT>
					<SIZE>52, 84</SIZE>
					<CORNERS>2, 15, 2, 2</CORNERS>
				</BUTTON_DEFAULT>
				<BUTTON_DEFAULT_ICON>
					<SIZE>38, 38</SIZE>
					<CORNERS>7, 7, 8, 12</CORNERS>
				</BUTTON_DEFAULT_ICON>
				<BUTTON_DEFAULT_IMAGE>
					<SIZE>15, 16</SIZE>
				</BUTTON_DEFAULT_IMAGE>
				<BUTTON_DEFAULT_QAT_ICON>
					<SIZE>20, 12</SIZE>
					<CORNERS>3, 3, 3, 3</CORNERS>
				</BUTTON_DEFAULT_QAT_ICON>
				<BUTTON_DEFAULT_QAT>
					<SIZE>22, 22</SIZE>
					<CORNERS>3, 3, 3, 3</CORNERS>
				</BUTTON_DEFAULT_QAT>
				<BUTTON_MENU_H_C>
					<SIZE>22, 22</SIZE>
					<CORNERS>4, 4, 2, 1</CORNERS>
				</BUTTON_MENU_H_C>
				<BUTTON_MENU_H_M>
					<SIZE>11, 22</SIZE>
					<CORNERS>0, 4, 3, 2</CORNERS>
				</BUTTON_MENU_H_M>
				<BUTTON_MENU_V_C>
					<SIZE>43, 39</SIZE>
					<CORNERS>3, 6, 3, 2</CORNERS>
				</BUTTON_MENU_V_C>
				<BUTTON_MENU_V_M>
					<SIZE>43, 27</SIZE>
					<CORNERS>3, 0, 3, 2</CORNERS>
				</BUTTON_MENU_V_M>
				<BUTTON_CHECK>
					<SIZE>13, 13</SIZE>
				</BUTTON_CHECK>
				<BUTTON_PNL_T>
					<SIZE>15, 21</SIZE>
					<CORNERS>3, 3, 3, 3</CORNERS>
				</BUTTON_PNL_T>
				<BUTTON_PNL_M>
					<SIZE>15, 19</SIZE>
					<CORNERS>3, 3, 3, 3</CORNERS>
				</BUTTON_PNL_M>
				<BUTTON_PNL_B>
					<SIZE>15, 20</SIZE>
					<CORNERS>3, 3, 3, 3</CORNERS>
				</BUTTON_PNL_B>
			</BUTTONS>
			<EDIT>
				<Normal>232, 232, 232</Normal>
				<Highlighted>255, 255, 255</Highlighted>
				<Disabled>239, 239, 239</Disabled>
				<Pressed>255, 255, 255</Pressed>
				<BorderNormal>137, 137, 137</BorderNormal>
				<BorderHighlighted>137, 137, 137</BorderHighlighted>
				<BorderDisabled>204, 204, 204</BorderDisabled>
				<BorderPressed>137, 137, 137</BorderPressed>
				<Selection>174, 196, 232</Selection>
				<BUTTON>
					<IMAGE>
						<SIZE>12, 22</SIZE>
						<CORNERS>2, 3, 2, 2</CORNERS>
					</IMAGE>
				</BUTTON>
			</EDIT>
			<TextNormal>0, 0, 0</TextNormal>
			<TextHighlighted>0, 0, 0</TextHighlighted>
		</PANEL>
		<CATEGORY>
			<BACK>
				<SIZE>80, 92</SIZE>
				<CORNERS>5, 18, 4, 10</CORNERS>
			</BACK>
			<TAB>
				<BUTTON>
					<SIZE>57, 24</SIZE>
					<CORNERS>5, 5, 5, 2</CORNERS>
				</BUTTON>
				<TextNormal>255, 255, 255</TextNormal>
				<TextHighlighted>0, 0, 0</TextHighlighted>
			</TAB>
			<TAB_SEPARATOR>
				<SIZE>1, 23</SIZE>
			</TAB_SEPARATOR>
			<BUTTON_PAGE_L>
				<SIZE>14, 92</SIZE>
				<CORNERS>4, 18, 3, 6</CORNERS>
			</BUTTON_PAGE_L>
			<BUTTON_PAGE_R>
				<SIZE>14, 92</SIZE>
				<CORNERS>3, 18, 4, 6</CORNERS>
			</BUTTON_PAGE_R>
		</CATEGORY>
		<CONTEXT>
			<CATEGORY>
				<BACK>
					<SIZE>80, 92</SIZE>
					<CORNERS>5, 18, 4, 10</CORNERS>
				</BACK>
				<TAB>
					<BUTTON>
						<SIZE>57, 24</SIZE>
						<CORNERS>5, 5, 5, 2</CORNERS>
					</BUTTON>
					<TextNormal>255, 255, 255</TextNormal>
					<TextHighlighted>0, 0, 0</TextHighlighted>
				</TAB>
				<CAPTION>
					<BACK>
						<SIZE>80, 19</SIZE>
						<CORNERS>1, 1, 1, 2</CORNERS>
					</BACK>
					<TextNormal>255, 255, 255</TextNormal>
				</CAPTION>
				<BUTTON_DEFAULT>
					<SIZE>52, 84</SIZE>
					<CORNERS>2, 15, 2, 2</CORNERS>
				</BUTTON_DEFAULT>
			</CATEGORY>
			<PANEL>
				<BACK>
					<TOP>
						<SIZE>100, 68</SIZE>
						<CORNERS>3, 15, 3, 0</CORNERS>
					</TOP>
					<BOTTOM>
						<SIZE>100, 17</SIZE>
						<CORNERS>3, 0, 4, 4</CORNERS>
					</BOTTOM>
				</BACK>
				<CAPTION>
					<TextNormal>255, 255, 255</TextNormal>
					<TextHighlighted>255, 255, 255</TextHighlighted>
				</CAPTION>
				<TextNormal>0, 0, 0</TextNormal>
				<TextHighlighted>0, 0, 0</TextHighlighted>
			</PANEL>
			<SEPARATOR>
				<SIZE>3, 26</SIZE>
				<CORNERS>1, 1, 1, 1</CORNERS>
			</SEPARATOR>
		</CONTEXT>
		<CAPTION>
			<QA>
				<SIZE>32, 26</SIZE>
				<CORNERS>15, 4, 12, 4</CORNERS>
			</QA>
			<QA_GLASS>
				<SIZE>32, 26</SIZE>
				<CORNERS>15, 4, 12, 4</CORNERS>
			</QA_GLASS>
		</CAPTION>
		<MAIN_BUTTON>
			<SIZE>38, 38</SIZE>
		</MAIN_BUTTON>
		<MAIN>
			<BACK>
				<SIZE>9, 38</SIZE>
				<CORNERS>4, 10, 4, 27</CORNERS>
			</BACK>
			<BORDER>
				<SIZE>5, 5</SIZE>
				<CORNERS>2, 2, 2, 2</CORNERS>
			</BORDER>
			<BUTTON>
				<SIZE>54, 23</SIZE>
				<CORNERS>2, 3, 2, 2</CORNERS>
			</BUTTON>
		</MAIN>
		<STATUS>
			<PANE_BUTTON>
				<SIZE>22, 22</SIZE>
				<CORNERS>3, 4, 3, 3</CORNERS>
			</PANE_BUTTON>
			<SLIDER>
				<THUMB>
					<SIZE>11, 15</SIZE>
					<CORNERS>0, 0, 0, 0</CORNERS>
				</THUMB>
				<PLUS>
					<SIZE>18, 18</SIZE>
					<CORNERS>0, 0, 0, 0</CORNERS>
				</PLUS>
				<MINUS>
					<SIZE>18, 18</SIZE>
					<CORNERS>0, 0, 0, 0</CORNERS>
				</MINUS>
			</SLIDER>
			<PROGRESS>
				<BACK>
					<SIZE>90, 12</SIZE>
					<CORNERS>2, 2, 2, 2</CORNERS>
				</BACK>
				<NORMAL>
					<SIZE>86, 8</SIZE>
					<CORNERS>1, 1, 1, 1</CORNERS>
				</NORMAL>
				<NORMAL_EXT>
					<SIZE>5, 8</SIZE>
				</NORMAL_EXT>
				<INFINITY>
					<SIZE>86, 8</SIZE>
					<CORNERS>1, 1, 1, 1</CORNERS>
				</INFINITY>
			</PROGRESS>
		</STATUS>
		<BORDERS>
			<QAT>
				<SIZE>7, 7</SIZE>
				<CORNERS>3, 3, 3, 3</CORNERS>
				<SIDES>2, 2, 2, 2</SIDES>
			</QAT>
			<FLOATY>
				<SIZE>7, 7</SIZE>
				<CORNERS>3, 3, 3, 3</CORNERS>
				<SIDES>2, 2, 2, 2</SIDES>
			</FLOATY>
		</BORDERS>
		<KEYTIP>
			<BACK>
				<SIZE>15, 15</SIZE>
				<CORNERS>2, 2, 2, 2</CORNERS>
				<SIDES>1, 1, 1, 1</SIDES>
			</BACK>
		</KEYTIP>
		<HYPERLINK>
			<Inactive>43, 78, 117</Inactive>
			<Active>71, 193, 255</Active>
			<StatusbarInactive>127, 139, 155</StatusbarInactive>
			<StatusbarActive>71, 193, 255</StatusbarActive>
		</HYPERLINK>
	</RIBBON>
	<PLANNER>
		<WorkColor>176, 182, 190</WorkColor>
		<NcAreaColor>235, 235, 235</NcAreaColor>
		<NcLineColor>76, 83, 92</NcLineColor>
		<NcTextColor>76, 83, 92</NcTextColor>
		<TODAY>
			<Caption1Start>247, 208, 112</Caption1Start>
			<Caption1Finish>251, 230, 148</Caption1Finish>
			<Caption2Start>239, 155,  30</Caption2Start>
			<Caption2Finish>250, 224, 139</Caption2Finish>
			<BorderColor>238, 147, 17</BorderColor>
		</TODAY>
	</PLANNER>
	<GRID>
		<HEADER>
			<NormalStart>251, 253, 253</NormalStart>
			<NormalFinish>212, 214, 219</NormalFinish>
			<NormalBorder>76, 83, 92</NormalBorder>
			<Separator>145, 153, 164</Separator>
		</HEADER>
		<ExpandBoxLight>144, 168, 192</ExpandBoxLight>
		<ExpandBoxDark>48, 72, 96</ExpandBoxDark>
		<LeftOffset>232, 234, 236</LeftOffset>
		<GroupLine>145, 153, 164 </GroupLine>
		<GroupSubLine>227, 239, 255</GroupSubLine>
	</GRID>
	<OUTLOOK>
		<CAPTION>
			<TextNormal>55, 60, 67</TextNormal>
		</CAPTION>
		<PAGEBUTTON>
			<BACK>
				<SIZE>54, 31</SIZE>
			</BACK>
			<TextNormal>55, 60, 67</TextNormal>
			<TextHighlighted>55, 60, 67</TextHighlighted>
			<TextPressed>0, 0, 0</TextPressed>
		</PAGEBUTTON>
		<BAR>
			<BACK>
				<SIZE>54, 31</SIZE>
			</BACK>
		</BAR>
	</OUTLOOK>
	<POPUP>
		<GradientFillDark>189, 193, 200</GradientFillDark>
		<GradientFillLight>240, 241, 242</GradientFillLight>
	</POPUP>
</STYLE>
=== C:/Users/treeman/Desktop/windows nt source code\xbox\Xbox Live Source\XONLINE_MAIN\public\ext\sdk\vs9sp1\sdk\include\atl90\Blue\Style.xml ===
<STYLE>
	<VERSION>
		<NUMBER>2007</NUMBER>
		<TYPE>20</TYPE>
		<ID_PREFIX>BLUE_</ID_PREFIX>
	</VERSION>
	<DESCRIPTION>
		<NAME>Luna (blue)</NAME>
	</DESCRIPTION>
	<GLOBALS>
		<BarText>21, 66, 139</BarText>
		<BarFace>213, 228, 242</BarFace>
		<ActiveCaption>231, 238, 246</ActiveCaption>
		<CaptionText>21, 74, 147</CaptionText>
		<InactiveCaption>184, 207, 233</InactiveCaption>
		<InactiveCaptionText>21, 74, 147</InactiveCaptionText>
		<FloatToolBarBorder>141, 178, 227</FloatToolBarBorder>
		<BarShadow>185, 208, 237</BarShadow>
		<BarDkShadow>157, 189, 216</BarDkShadow>
		<BarLight>231, 238, 246</BarLight>
		<AutoPremultiply>TRUE</AutoPremultiply>
		<HighlightGradientDark>255, 219, 117</HighlightGradientDark>
		<HighlightGradientLight>255, 245, 204</HighlightGradientLight>
		<HighlightDnGradientDark>255, 184, 94</HighlightDnGradientDark>
		<HighlightDnGradientLight>252, 151, 61</HighlightDnGradientLight>
		<HighlightCheckedGradientDark>255, 171, 63</HighlightCheckedGradientDark>
		<HighlightCheckedGradientLight>255, 207, 146</HighlightCheckedGradientLight>
		<PressedButtonBorder>251, 140, 60</PressedButtonBorder>
		<Highlight>180, 201, 233</Highlight>
		<HighlightText>0, 0, 0</HighlightText>
		<MenuShadowColor>90, 90, 90</MenuShadowColor>
		<TOOLTIP>
			<DRAW_SEPARATOR>FALSE</DRAW_SEPARATOR>
			<ROUNDED_CORNERS>TRUE</ROUNDED_CORNERS>
			<COLOR_FILL>255, 255, 255</COLOR_FILL>
			<COLOR_FILLGRADIENT>201, 217, 239</COLOR_FILLGRADIENT>
			<COLOR_TEXT>76, 76, 76</COLOR_TEXT>
			<COLOR_BORDER>118, 118, 118</COLOR_BORDER>
		</TOOLTIP>
	</GLOBALS>
	<MAINWND>
		<CAPTION>
			<FONT>
				<WEIGHT>NORMAL</WEIGHT>
				<QUALITY>CLEARTYPE</QUALITY>
			</FONT>
			<ActiveStart>228, 239, 253</ActiveStart>
			<ActiveFinish>202, 222, 247</ActiveFinish>
			<InactiveStart>227, 232, 239</InactiveStart>
			<InactiveFinish>216, 225, 236</InactiveFinish>
			<ActiveText>105, 112, 121</ActiveText>
			<InactiveText>160, 160, 160</InactiveText>
			<ActiveTitleText>62, 106, 170</ActiveTitleText>
			<InactiveTitleText>160, 160, 160</InactiveTitleText>
			<TextCenter>TRUE</TextCenter>
			<BORDER>
				<SIZE>35, 31</SIZE>
				<CORNERS>5, 9, 5, 3</CORNERS>
			</BORDER>
			<BUTTONS>
				<NORMAL>
					<ConstSize>23, 23</ConstSize>
					<IconSize>17, 16</IconSize>
					<SIZE>17, 16</SIZE>
					<CORNERS>2, 2, 2, 2</CORNERS>
				</NORMAL>
				<SMALL>
					<ConstSize>16, 16</ConstSize>
					<IconSize>13, 12</IconSize>
					<SIZE>17, 16</SIZE>
					<CORNERS>2, 2, 2, 2</CORNERS>
				</SMALL>
			</BUTTONS>
		</CAPTION>
		<ROUND_BORDER>9, 9</ROUND_BORDER>
		<BORDER>
			<SIZE>35, 23</SIZE>
			<CORNERS>17, 0, 17, 22</CORNERS>
			<SIDES>17, 0, 17, 17</SIDES>
		</BORDER>
		<BORDER_MDICHILD>
			<SIZE>35, 23</SIZE>
			<CORNERS>17, 0, 17, 22</CORNERS>
			<SIDES>17, 0, 17, 17</SIDES>
		</BORDER_MDICHILD>
		<MainClientArea>164, 195, 235</MainClientArea>
	</MAINWND>
	<EDIT>
		<BorderHighlighted>255, 189, 105</BorderHighlighted>
	</EDIT>
	<COMBO>
		<BorderHighlighted>255, 189, 105</BorderHighlighted>
		<BorderPressed>255, 189, 105</BorderPressed>
		<BUTTON>
			<GradientStartNormal>195, 221, 255</GradientStartNormal>
			<GradientFinishNormal>227, 239, 255</GradientFinishNormal>
			<GradientStartHighlighted>255, 220, 122</GradientStartHighlighted>
			<GradientFinishHighlighted>255, 244, 199</GradientFinishHighlighted>
			<BtnBorderHighlighted>255, 189, 105</BtnBorderHighlighted>
			<GradientStartPressed>255, 183, 91</GradientStartPressed>
			<GradientFinishPressed>252, 153, 61</GradientFinishPressed>
			<BtnBorderPressed>251, 140, 61</BtnBorderPressed>
		</BUTTON>
	</COMBO>
	<MENU>
		<Light>250, 250, 250</Light>
		<Rarely>215, 227, 234</Rarely>
    <Border>101, 147, 207</Border>
    <Separator1>197, 197, 197</Separator1>
		<Separator2>245, 245, 245</Separator2>
		<GroupBackground>222, 232, 239</GroupBackground>
		<ItemBorder>255, 189, 105</ItemBorder>
		<ItemBack>
			<SIZE>20, 20</SIZE>
			<CORNERS>2, 2, 2, 2</CORNERS>
		</ItemBack>
		<ItemCheck>
			<SIZE>10, 14</SIZE>
		</ItemCheck>
		<ItemRadio>
			<SIZE>10, 14</SIZE>
		</ItemRadio>
		<Highlighted>
			<SIZE>55, 22</SIZE>
			<CORNERS>2, 2, 2, 2</CORNERS>
		</Highlighted>
		<HighlightedDisabled>
			<SIZE>55, 22</SIZE>
			<CORNERS>2, 2, 2, 2</CORNERS>
		</HighlightedDisabled>
		<ScrollBtn_T>
			<SIZE>30, 12</SIZE>
			<CORNERS>2, 2, 2, 2</CORNERS>
		</ScrollBtn_T>
		<TextNormal>0, 21, 110</TextNormal>
		<TextHighlighted>0, 21, 110</TextHighlighted>
		<TextDisabled>167, 167, 167</TextDisabled>
		<COLORS>
			<Black>86, 125, 177</Black>
			<Black2>21, 66, 139</Black2>
		</COLORS>
		<BorderSize>2</BorderSize>
		<ButtonBorder>
			<SIZE>2, 19</SIZE>
		</ButtonBorder>
	</MENU>
	<BARS>
		<DEFAULT>
			<Bkgnd>233, 238, 238</Bkgnd>
			<GradientLight>191, 219, 255</GradientLight>
			<GradientDark>191, 219, 255</GradientDark>
		</DEFAULT>
		<TOOLBAR>
			<GradientLight>227, 239, 255</GradientLight>
			<GradientDark>177, 211, 255</GradientDark>
			<GradientVertLight>227, 239, 255</GradientVertLight>
			<GradientVertDark>177, 211, 255</GradientVertDark>
			<CustomizeButtonGradientLight>215, 232, 255</CustomizeButtonGradientLight>
			<CustomizeButtonGradientDark>111, 157, 217</CustomizeButtonGradientDark>
			<BottomLineColor>111, 157, 217</BottomLineColor>
			<GRIPPER>
				<SIZE>4, 4</SIZE>
				<TRANSPARENT>255, 0, 255</TRANSPARENT>
			</GRIPPER>
			<TEAR>
				<SIZE>35, 3</SIZE>
				<TRANSPARENT>255, 0, 255</TRANSPARENT>
			</TEAR>
			<BUTTON>
				<SIZE>22, 22</SIZE>
				<CORNERS>2, 3, 2, 2</CORNERS>
			</BUTTON>
			<BORDER>
				<SIZE>9, 9</SIZE>
				<CORNERS>4, 4, 4, 4</CORNERS>
				<SIDES>2, 2, 2, 2</SIDES>
			</BORDER>
			<TextNormal>0, 21, 110</TextNormal>
			<TextHighlighted>0, 21, 110</TextHighlighted>
			<TextDisabled>141, 141, 141</TextDisabled>
		</TOOLBAR>
		<MENUBAR>
			<GradientLight>191, 219, 255</GradientLight>
			<GradientDark>191, 219, 255</GradientDark>
			<GradientVertLight>191, 219, 255</GradientVertLight>
			<GradientVertDark>191, 219, 255</GradientVertDark>
			<TextNormal>21, 66, 139</TextNormal>
			<TextHighlighted>21, 66, 139</TextHighlighted>
			<TextDisabled>141, 141, 141</TextDisabled>
			<BUTTON>
				<SIZE>22, 19</SIZE>
				<CORNERS>1, 1, 1, 1</CORNERS>
				<TRANSPARENT>255, 0, 255</TRANSPARENT>
			</BUTTON>
		</MENUBAR>
		<POPUPBAR>
			<ROUND_BORDER>3, 3</ROUND_BORDER>
			<BORDER>
				<SIZE>7, 7</SIZE>
				<CORNERS>3, 3, 3, 3</CORNERS>
				<SIDES>2, 2, 2, 2</SIDES>
			</BORDER>
			<RESIZEBAR>
				<BACK>
					<SIZE>3, 11</SIZE>
					<CORNERS>1, 2, 1, 1</CORNERS>
				</BACK>
				<ICON_HV>
					<SIZE>9, 8</SIZE>
					<TRANSPARENT>255, 0, 255</TRANSPARENT>
				</ICON_HV>
				<ICON_HVT>
					<SIZE>9, 8</SIZE>
					<TRANSPARENT>255, 0, 255</TRANSPARENT>
				</ICON_HVT>
				<ICON_V>
					<SIZE>15, 3</SIZE>
					<TRANSPARENT>255, 0, 255</TRANSPARENT>
				</ICON_V>
			</RESIZEBAR>
		</POPUPBAR>
		<STATUSBAR>
			<BACK>
				<SIZE>35, 23</SIZE>
				<CORNERS>5, 8, 5, 5</CORNERS>
				<SIDES>1, 8, 1, 3</SIDES>
			</BACK>
			<BACK_EXT>
				<SIZE>35, 23</SIZE>
				<CORNERS>3, 8, 5, 5</CORNERS>
				<SIDES>3, 8, 1, 3</SIDES>
			</BACK_EXT>
			<PANEBORDER>
				<SIZE>2, 20</SIZE>
			</PANEBORDER>
			<SIZEBOX>
				<SIZE>11, 11</SIZE>
			</SIZEBOX>
			<TextNormal>21, 66, 139</TextNormal>
			<TextDisabled>141, 141, 141</TextDisabled>
		</STATUSBAR>
		<CAPTIONBAR>
			<GradientLight>227, 239, 255</GradientLight>
			<GradientDark>175, 210, 255</GradientDark>
			<TextNormal>8, 55, 114</TextNormal>
		</CAPTIONBAR>
	</BARS>
	<TASK>
		<GradientDark>213, 228, 242</GradientDark>
		<GradientLight>255, 255, 255</GradientLight>
		<GROUP>
			<NORMAL>
				<CAPTION>
					<DarkNormal>214, 232, 255</DarkNormal>
					<LightNormal>226, 238, 255</LightNormal>
					<DarkHighlighted>227, 239, 255</DarkHighlighted>
					<LightHighlighted>255, 255, 255</LightHighlighted>
					<TextNormal>8, 55, 114</TextNormal>
					<TextHighlighted>8, 55, 114</TextHighlighted>
				</CAPTION>
				<AREA>
					<DarkNormal>255, 255, 255</DarkNormal>
					<LightNormal>255, 255, 255</LightNormal>
				</AREA>
			</NORMAL>
			<SPECIAL>
				<CAPTION>
					<DarkNormal>214, 232, 255</DarkNormal>
					<LightNormal>226, 238, 255</LightNormal>
					<DarkHighlighted>227, 239, 255</DarkHighlighted>
					<LightHighlighted>255, 255, 255</LightHighlighted>
					<TextNormal>8, 55, 114</TextNormal>
					<TextHighlighted>8, 55, 114</TextHighlighted>
				</CAPTION>
				<AREA>
					<DarkNormal>255, 255, 255</DarkNormal>
					<LightNormal>255, 255, 255</LightNormal>
				</AREA>
			</SPECIAL>
			<BORDER>111, 157, 217</BORDER>
		</GROUP>
		<SCROLL_BUTTON>
			<SIZE>30, 12</SIZE>
			<CORNERS>2, 2, 2, 2</CORNERS>
		</SCROLL_BUTTON>
	</TASK>
	<TABS>
		<TextColorActive>0, 21, 110</TextColorActive>
		<TextColorInactive>0, 21, 110</TextColorInactive>
		<3D>
			<BUTTON>
				<SIZE>57, 24</SIZE>
				<CORNERS>5, 5, 5, 2</CORNERS>
			</BUTTON>
		</3D>
		<FLAT>
			<Black>146, 165, 199</Black>
			<Highlight>127, 161, 209</Highlight>
			<BUTTON>
				<SIZE>24, 15</SIZE>
				<CORNERS>4, 4, 0, 6</CORNERS>
				<TRANSPARENT>255, 0, 255</TRANSPARENT>
			</BUTTON>
			<BorderInnerNormal>243, 247, 253</BorderInnerNormal>
			<BorderInnerActive>243, 247, 253</BorderInnerActive>
			<BorderOuterNormal>146, 165, 199</BorderOuterNormal>
			<BorderOuterActive>146, 165, 199</BorderOuterActive>
		</FLAT>
	</TABS>
	<HEADER>
		<NormalStart>248, 251, 253</NormalStart>
		<NormalFinish>210, 219, 232</NormalFinish>
		<NormalBorder>158, 182, 206</NormalBorder>
		<HighlightedStart>249, 216, 157</HighlightedStart>
		<HighlightedFinish>241, 193, 94</HighlightedFinish>
		<HighlightedBorder>242, 149, 54</HighlightedBorder>
		<PressedStart>255, 211, 139</PressedStart>
		<PressedFinish>242, 145, 56</PressedFinish>
		<PressedBorder>242, 149, 54</PressedBorder>
	</HEADER>
	<RIBBON>
		<PANEL>
			<BACK>
				<TOP>
					<SIZE>100, 68</SIZE>
					<CORNERS>3, 15, 3, 0</CORNERS>
				</TOP>
				<BOTTOM>
					<SIZE>100, 17</SIZE>
					<CORNERS>3, 0, 4, 4</CORNERS>
				</BOTTOM>
			</BACK>
			<CAPTION>
				<LAUNCH_BTN>
					<SIZE>15, 14</SIZE>
					<CORNERS>2, 2, 2, 2</CORNERS>
				</LAUNCH_BTN>
				<LAUNCH_ICON>
					<SIZE>8, 8</SIZE>
				</LAUNCH_ICON>
				<TextNormal>62, 106, 170</TextNormal>
				<TextHighlighted>62, 106, 170</TextHighlighted>
			</CAPTION>
			<SEPARATOR>
				<SIZE>2, 55</SIZE>
			</SEPARATOR>
			<QAT>
				<SIZE>11, 24</SIZE>
				<CORNERS>3, 3, 3, 3</CORNERS>
			</QAT>
			<BUTTONS>
				<BUTTON_GROUP_F>
					<SIZE>22, 22</SIZE>
					<CORNERS>2, 3, 2, 2</CORNERS>
				</BUTTON_GROUP_F>
				<BUTTON_GROUP_M>
					<SIZE>22, 22</SIZE>
					<CORNERS>2, 3, 2, 2</CORNERS>
				</BUTTON_GROUP_M>
				<BUTTON_GROUP_L>
					<SIZE>22, 22</SIZE>
					<CORNERS>2, 3, 2, 2</CORNERS>
				</BUTTON_GROUP_L>
				<BUTTON_GROUP_S>
					<SIZE>22, 22</SIZE>
					<CORNERS>2, 3, 2, 2</CORNERS>
				</BUTTON_GROUP_S>
				<BUTTON_GROUPMENU_F_C>
					<SIZE>23, 22</SIZE>
					<CORNERS>2, 3, 2, 2</CORNERS>
				</BUTTON_GROUPMENU_F_C>
				<BUTTON_GROUPMENU_F_M>
					<SIZE>9, 22</SIZE>
					<CORNERS>1, 3, 2, 2</CORNERS>
				</BUTTON_GROUPMENU_F_M>
				<BUTTON_GROUPMENU_M_C>
					<SIZE>23, 22</SIZE>
					<CORNERS>2, 3, 2, 2</CORNERS>
				</BUTTON_GROUPMENU_M_C>
				<BUTTON_GROUPMENU_M_M>
					<SIZE>9, 22</SIZE>
					<CORNERS>1, 3, 2, 2</CORNERS>
				</BUTTON_GROUPMENU_M_M>
				<BUTTON_GROUPMENU_L_C>
					<SIZE>23, 22</SIZE>
					<CORNERS>2, 3, 2, 2</CORNERS>
				</BUTTON_GROUPMENU_L_C>
				<BUTTON_GROUPMENU_L_M>
					<SIZE>10, 22</SIZE>
					<CORNERS>1, 3, 2, 2</CORNERS>
				</BUTTON_GROUPMENU_L_M>
				<BUTTON_NORMAL_S>
					<SIZE>22, 22</SIZE>
					<CORNERS>2, 2, 2, 2</CORNERS>
				</BUTTON_NORMAL_S>
				<BUTTON_NORMAL_B>
					<SIZE>43, 66</SIZE>
					<CORNERS>2, 2, 2, 2</CORNERS>
				</BUTTON_NORMAL_B>
				<BUTTON_DEFAULT>
					<SIZE>52, 84</SIZE>
					<CORNERS>2, 15, 2, 2</CORNERS>
				</BUTTON_DEFAULT>
				<BUTTON_DEFAULT_ICON>
					<SIZE>38, 38</SIZE>
					<CORNERS>7, 7, 8, 12</CORNERS>
				</BUTTON_DEFAULT_ICON>
				<BUTTON_DEFAULT_IMAGE>
					<SIZE>15, 16</SIZE>
				</BUTTON_DEFAULT_IMAGE>
				<BUTTON_DEFAULT_QAT_ICON>
					<SIZE>20, 12</SIZE>
					<CORNERS>3, 3, 3, 3</CORNERS>
				</BUTTON_DEFAULT_QAT_ICON>
				<BUTTON_DEFAULT_QAT>
					<SIZE>22, 22</SIZE>
					<CORNERS>3, 3, 3, 3</CORNERS>
				</BUTTON_DEFAULT_QAT>
				<BUTTON_MENU_H_C>
					<SIZE>22, 22</SIZE>
					<CORNERS>4, 4, 1, 2</CORNERS>
				</BUTTON_MENU_H_C>
				<BUTTON_MENU_H_M>
					<SIZE>11, 22</SIZE>
					<CORNERS>0, 4, 3, 2</CORNERS>
				</BUTTON_MENU_H_M>
				<BUTTON_MENU_V_C>
					<SIZE>43, 39</SIZE>
					<CORNERS>3, 6, 3, 2</CORNERS>
				</BUTTON_MENU_V_C>
				<BUTTON_MENU_V_M>
					<SIZE>43, 27</SIZE>
					<CORNERS>3, 0, 3, 2</CORNERS>
				</BUTTON_MENU_V_M>
				<BUTTON_CHECK>
					<SIZE>13, 13</SIZE>
				</BUTTON_CHECK>
				<BUTTON_PNL_T>
					<SIZE>15, 21</SIZE>
					<CORNERS>3, 3, 3, 3</CORNERS>
				</BUTTON_PNL_T>
				<BUTTON_PNL_M>
					<SIZE>15, 19</SIZE>
					<CORNERS>3, 3, 3, 3</CORNERS>
				</BUTTON_PNL_M>
				<BUTTON_PNL_B>
					<SIZE>15, 20</SIZE>
					<CORNERS>3, 3, 3, 3</CORNERS>
				</BUTTON_PNL_B>
			</BUTTONS>
			<EDIT>
				<Normal>234, 242, 251</Normal>
				<Highlighted>255, 255, 255</Highlighted>
				<Disabled>239, 239, 239</Disabled>
				<Pressed>255, 255, 255</Pressed>
				<BorderNormal>171, 193, 222</BorderNormal>
				<BorderHighlighted>179, 199, 225</BorderHighlighted>
				<BorderDisabled>177, 187, 198</BorderDisabled>
				<BorderPressed>179, 199, 225</BorderPressed>
				<Selection>174, 196, 232</Selection>
				<BUTTON>
					<IMAGE>
						<SIZE>12, 22</SIZE>
						<CORNERS>2, 3, 2, 2</CORNERS>
					</IMAGE>
				</BUTTON>
			</EDIT>
			<TextNormal>21, 66, 139</TextNormal>
			<TextHighlighted>21, 66, 139</TextHighlighted>
		</PANEL>
		<CATEGORY>
			<BACK>
				<SIZE>80, 92</SIZE>
				<CORNERS>5, 18, 4, 10</CORNERS>
			</BACK>
			<TAB>
				<BUTTON>
					<SIZE>57, 24</SIZE>
					<CORNERS>5, 5, 5, 2</CORNERS>
				</BUTTON>
				<TextNormal>21, 66, 139</TextNormal>
				<TextHighlighted>21, 66, 139</TextHighlighted>
			</TAB>
			<TAB_SEPARATOR>
				<SIZE>1, 23</SIZE>
			</TAB_SEPARATOR>
			<BUTTON_PAGE_L>
				<SIZE>14, 92</SIZE>
				<CORNERS>4, 18, 3, 6</CORNERS>
			</BUTTON_PAGE_L>
			<BUTTON_PAGE_R>
				<SIZE>14, 92</SIZE>
				<CORNERS>3, 18, 4, 6</CORNERS>
			</BUTTON_PAGE_R>
		</CATEGORY>
		<CONTEXT>
			<CATEGORY>
				<BACK>
					<SIZE>80, 92</SIZE>
					<CORNERS>5, 18, 4, 10</CORNERS>
				</BACK>
				<TAB>
					<BUTTON>
						<SIZE>57, 24</SIZE>
						<CORNERS>5, 5, 5, 2</CORNERS>
					</BUTTON>
					<TextNormal>21, 66, 139</TextNormal>
					<TextHighlighted>21, 66, 139</TextHighlighted>
				</TAB>
				<CAPTION>
					<BACK>
						<SIZE>80, 19</SIZE>
						<CORNERS>1, 1, 1, 2</CORNERS>
					</BACK>
					<TextNormal>21, 66, 139</TextNormal>
				</CAPTION>
				<BUTTON_DEFAULT>
					<SIZE>52, 84</SIZE>
					<CORNERS>2, 15, 2, 2</CORNERS>
				</BUTTON_DEFAULT>
			</CATEGORY>
			<PANEL>
				<BACK>
					<TOP>
						<SIZE>100, 68</SIZE>
						<CORNERS>3, 15, 3, 0</CORNERS>
					</TOP>
					<BOTTOM>
						<SIZE>100, 17</SIZE>
						<CORNERS>3, 0, 4, 4</CORNERS>
					</BOTTOM>
				</BACK>
				<CAPTION>
					<TextNormal>62, 106, 170</TextNormal>
					<TextHighlighted>62, 106, 170</TextHighlighted>
				</CAPTION>
				<TextNormal>21, 66, 139</TextNormal>
				<TextHighlighted>21, 66, 139</TextHighlighted>
			</PANEL>
			<SEPARATOR>
				<SIZE>3, 26</SIZE>
				<CORNERS>1, 1, 1, 1</CORNERS>
			</SEPARATOR>
		</CONTEXT>
		<CAPTION>
			<QA>
				<SIZE>32, 26</SIZE>
				<CORNERS>15, 4, 12, 4</CORNERS>
			</QA>
			<QA_GLASS>
				<SIZE>32, 26</SIZE>
				<CORNERS>15, 4, 12, 4</CORNERS>
			</QA_GLASS>
		</CAPTION>
		<MAIN_BUTTON>
			<SIZE>38, 38</SIZE>
		</MAIN_BUTTON>
		<MAIN>
			<BACK>
				<SIZE>9, 38</SIZE>
				<CORNERS>4, 10, 4, 27</CORNERS>
			</BACK>
			<BORDER>
				<SIZE>5, 5</SIZE>
				<CORNERS>2, 2, 2, 2</CORNERS>
			</BORDER>
			<BUTTON>
				<SIZE>54, 23</SIZE>
				<CORNERS>2, 3, 2, 2</CORNERS>
			</BUTTON>
		</MAIN>
		<STATUS>
			<PANE_BUTTON>
				<SIZE>22, 22</SIZE>
				<CORNERS>3, 4, 3, 3</CORNERS>
			</PANE_BUTTON>
			<SLIDER>
				<THUMB>
					<SIZE>11, 15</SIZE>
					<CORNERS>0, 0, 0, 0</CORNERS>
				</THUMB>
				<PLUS>
					<SIZE>18, 18</SIZE>
					<CORNERS>0, 0, 0, 0</CORNERS>
				</PLUS>
				<MINUS>
					<SIZE>18, 18</SIZE>
					<CORNERS>0, 0, 0, 0</CORNERS>
				</MINUS>
			</SLIDER>
			<PROGRESS>
				<BACK>
					<SIZE>90, 12</SIZE>
					<CORNERS>2, 2, 2, 2</CORNERS>
				</BACK>
				<NORMAL>
					<SIZE>86, 8</SIZE>
					<CORNERS>1, 1, 1, 1</CORNERS>
				</NORMAL>
				<NORMAL_EXT>
					<SIZE>5, 8</SIZE>
				</NORMAL_EXT>
				<INFINITY>
					<SIZE>86, 8</SIZE>
					<CORNERS>1, 1, 1, 1</CORNERS>
				</INFINITY>
			</PROGRESS>
		</STATUS>
		<BORDERS>
			<QAT>
				<SIZE>7, 7</SIZE>
				<CORNERS>3, 3, 3, 3</CORNERS>
				<SIDES>2, 2, 2, 2</SIDES>
			</QAT>
			<FLOATY>
				<SIZE>7, 7</SIZE>
				<CORNERS>3, 3, 3, 3</CORNERS>
				<SIDES>2, 2, 2, 2</SIDES>
			</FLOATY>
		</BORDERS>
		<KEYTIP>
			<BACK>
				<SIZE>15, 15</SIZE>
				<CORNERS>2, 2, 2, 2</CORNERS>
				<SIDES>1, 1, 1, 1</SIDES>
			</BACK>
		</KEYTIP>
		<HYPERLINK>
			<Inactive>0, 102, 226</Inactive>
			<Active>0, 144, 255</Active>
		</HYPERLINK>
	</RIBBON>
	<PLANNER>
		<WorkColor>141, 174, 217</WorkColor>
		<NcAreaColor>213, 228, 242</NcAreaColor>
		<NcLineColor>101, 147, 207</NcLineColor>
		<NcTextColor>101, 147, 207</NcTextColor>
		<TODAY>
			<Caption1Start>247, 208, 112</Caption1Start>
			<Caption1Finish>251, 230, 148</Caption1Finish>
			<Caption2Start>239, 155,  30</Caption2Start>
			<Caption2Finish>250, 224, 139</Caption2Finish>
			<BorderColor>238, 147, 17</BorderColor>
		</TODAY>
	</PLANNER>
	<GRID>
		<HEADER>
			<NormalStart>251, 253, 255</NormalStart>
			<NormalFinish>196, 221, 255</NormalFinish>
			<NormalBorder>101, 147, 207</NormalBorder>
			<Separator>154, 197, 255</Separator>
		</HEADER>
		<ExpandBoxLight>144, 168, 192</ExpandBoxLight>
		<ExpandBoxDark>48, 72, 96</ExpandBoxDark>
		<LeftOffset>253, 238, 201</LeftOffset>
		<GroupLine>111, 157, 217</GroupLine>
		<GroupSubLine>227, 239, 255</GroupSubLine>
	</GRID>
	<OUTLOOK>
		<CAPTION>
			<TextNormal>8, 55, 114</TextNormal>
		</CAPTION>
		<PAGEBUTTON>
			<BACK>
				<SIZE>54, 31</SIZE>
			</BACK>
			<TextNormal>32, 77, 137</TextNormal>
			<TextHighlighted>32, 77, 137</TextHighlighted>
			<TextPressed>0, 0, 0</TextPressed>
		</PAGEBUTTON>
		<BAR>
			<BACK>
				<SIZE>54, 31</SIZE>
			</BACK>
		</BAR>
	</OUTLOOK>
	<POPUP>
		<GradientFillDark>169, 198, 238</GradientFillDark>
		<GradientFillLight>214, 231, 252</GradientFillLight>
	</POPUP>
</STYLE>
=== C:/Users/treeman/Desktop/windows nt source code\xbox\Xbox Live Source\XONLINE_MAIN\public\ext\sdk\vs9sp1\sdk\include\atl90\Aqua\Style.xml ===
<STYLE>
	<VERSION>
		<NUMBER>2007</NUMBER>
		<TYPE>11</TYPE>
		<ID_PREFIX>AQUA_</ID_PREFIX>
	</VERSION>
	<DESCRIPTION>
		<NAME>Aqua</NAME>
	</DESCRIPTION>
	<GLOBALS>
		<BarText>0, 21, 110</BarText>
		<BarFace>206, 212, 225</BarFace>
		<ActiveCaption>218, 223, 234</ActiveCaption>
		<CaptionText>21, 74, 147</CaptionText>
		<InactiveCaption>181, 189, 211</InactiveCaption>
		<InactiveCaptionText>21, 74, 147</InactiveCaptionText>
		<FloatToolBarBorder>141, 149, 173</FloatToolBarBorder>
		<BarShadow>177, 187, 198</BarShadow>
		<BarDkShadow>106, 112, 128</BarDkShadow>
		<BarLight>218, 223, 234</BarLight>
		<AutoPremultiply>TRUE</AutoPremultiply>
		<HighlightGradientDark>247, 192, 91</HighlightGradientDark>
		<HighlightGradientLight>255, 255, 220</HighlightGradientLight>
		<HighlightDnGradientDark>247, 218, 124</HighlightDnGradientDark>
		<HighlightDnGradientLight>232, 127, 8</HighlightDnGradientLight>
		<HighlightCheckedGradientDark>238, 149, 21</HighlightCheckedGradientDark>
		<HighlightCheckedGradientLight>251, 230, 148</HighlightCheckedGradientLight>
		<PressedButtonBorder></PressedButtonBorder>
		<Highlight>180, 201, 233</Highlight>
		<HighlightText>0, 0, 0</HighlightText>
		<TOOLTIP>
			<DRAW_SEPARATOR>FALSE</DRAW_SEPARATOR>
			<ROUNDED_CORNERS>TRUE</ROUNDED_CORNERS>
			<COLOR_FILL>255, 255, 255</COLOR_FILL>
			<COLOR_FILLGRADIENT>206, 212, 225</COLOR_FILLGRADIENT>
			<COLOR_TEXT>76, 76, 76</COLOR_TEXT>
			<COLOR_BORDER>118, 118, 118</COLOR_BORDER>
		</TOOLTIP>
	</GLOBALS>
	<MAINWND>
		<CAPTION>
			<ActiveStart>187, 186, 186</ActiveStart>
			<ActiveFinish>248, 248, 248</ActiveFinish>
			<InactiveStart>224, 224, 224</InactiveStart>
			<InactiveFinish>252, 252, 252</InactiveFinish>
			<ActiveText>69, 69, 69</ActiveText>
			<InactiveText>163, 163, 163</InactiveText>
			<ActiveTitleText>123, 123, 123</ActiveTitleText>
			<InactiveTitleText>183, 183, 183</InactiveTitleText>
			<TextCenter>FALSE</TextCenter>
			<BORDER>
				<SIZE>35, 31</SIZE>
				<CORNERS>14, 22, 14, 1</CORNERS>
				<SIDES>14, 2, 14, 1</SIDES>
			</BORDER>
			<BUTTONS>
				<NORMAL>
					<ConstSize>21, 21</ConstSize>
					<IconSize>21, 21</IconSize>
					<SIZE>21, 21</SIZE>
					<CORNERS>4, 4, 4, 4</CORNERS>
				</NORMAL>
				<SMALL>
					<ConstSize>16, 16</ConstSize>
					<IconSize>16, 14</IconSize>
					<SIZE>21, 21</SIZE>
					<CORNERS>4, 4, 4, 4</CORNERS>
				</SMALL>
			</BUTTONS>
		</CAPTION>
		<ROUND_BORDER>9, 9</ROUND_BORDER>
		<BORDER>
			<SIZE>35, 23</SIZE>
			<CORNERS>17, 0, 17, 22</CORNERS>
			<SIDES>17, 0, 17, 17</SIDES>
		</BORDER>
		<BORDER_MDICHILD>
			<SIZE>35, 23</SIZE>
			<CORNERS>17, 0, 17, 22</CORNERS>
			<SIDES>17, 0, 17, 17</SIDES>
		</BORDER_MDICHILD>
		<MainClientArea>181, 189, 211</MainClientArea>
	</MAINWND>
	<EDIT>
		<BorderHighlighted>148, 168, 198</BorderHighlighted>
	</EDIT>
	<COMBO>
		<BorderHighlighted>148, 168, 198</BorderHighlighted>
		<BorderPressed>148, 168, 198</BorderPressed>
		<BUTTON>
			<GradientStartNormal>231, 234, 241</GradientStartNormal>
			<GradientFinishNormal>231, 234, 241</GradientFinishNormal>
			<GradientStartHighlighted>211, 211, 211</GradientStartHighlighted>
			<GradientFinishHighlighted>246, 246, 245</GradientFinishHighlighted>
			<GradientStartPressed>230, 230, 230</GradientStartPressed>
			<GradientFinishPressed>197, 197, 197</GradientFinishPressed>
			<BtnBorderHighlighted>148, 168, 198</BtnBorderHighlighted>
			<BtnBorderPressed>148, 168, 198</BtnBorderPressed>
		</BUTTON>
	</COMBO>
	<MENU>
		<Light>245, 245, 245</Light>
		<Rarely>206, 212, 225</Rarely>
		<Border>125, 123, 123</Border>
		<Separator1>225, 225, 225</Separator1>
		<Separator2>255, 255, 255</Separator2>
		<ItemBorder>190, 202, 223</ItemBorder>
		<ItemBack>
			<SIZE>20, 20</SIZE>
			<CORNERS>2, 2, 2, 2</CORNERS>
		</ItemBack>
		<ItemCheck>
			<SIZE>10, 14</SIZE>
		</ItemCheck>
		<ItemRadio>
			<SIZE>10, 14</SIZE>
		</ItemRadio>
		<Highlighted>
			<SIZE>55, 22</SIZE>
			<CORNERS>5, 5, 5, 5</CORNERS>
			<SIDES>1, 5, 1, 5</SIDES>
		</Highlighted>
		<HighlightedDisabled>
			<SIZE>55, 22</SIZE>
			<CORNERS>5, 5, 5, 5</CORNERS>
			<SIDES>1, 5, 1, 5</SIDES>
		</HighlightedDisabled>
		<ScrollBtn_T>
			<SIZE>30, 12</SIZE>
			<CORNERS>2, 2, 2, 2</CORNERS>
		</ScrollBtn_T>
		<TextNormal>0, 21, 110</TextNormal>
		<TextHighlighted>0, 21, 110</TextHighlighted>
		<TextDisabled>167, 167, 167</TextDisabled>
		<ImagesColor>0, 21, 110</ImagesColor>
		<BorderSize>2</BorderSize>
	</MENU>
	<BARS>
		<DEFAULT>
			<Bkgnd>235, 235, 235</Bkgnd>
			<GradientLight>196, 202, 217</GradientLight>
			<GradientDark>196, 202, 217</GradientDark>
		</DEFAULT>
		<TOOLBAR>
			<GradientLight>225, 226, 236</GradientLight>
			<GradientDark>149, 147, 177</GradientDark>
			<GradientVertLight>225, 226, 236</GradientVertLight>
			<GradientVertDark>149, 147, 177</GradientVertDark>
			<CustomizeButtonGradientLight>179, 178, 200</CustomizeButtonGradientLight>
			<CustomizeButtonGradientDark>118, 116, 146</CustomizeButtonGradientDark>
			<BottomLineColor>124, 124, 148</BottomLineColor>
			<GRIPPER>
				<SIZE>4, 4</SIZE>
				<TRANSPARENT>255, 0, 255</TRANSPARENT>
			</GRIPPER>
			<TEAR>
				<SIZE>35, 3</SIZE>
				<TRANSPARENT>255, 0, 255</TRANSPARENT>
			</TEAR>
			<BUTTON>
				<SIZE>22, 22</SIZE>
				<CORNERS>2, 2, 2, 2</CORNERS>
			</BUTTON>
			<BORDER>
				<SIZE>7, 7</SIZE>
				<CORNERS>3, 3, 3, 3</CORNERS>
				<SIDES>1, 1, 1, 1</SIDES>
			</BORDER>
			<TextNormal>0, 21, 110</TextNormal>
			<TextHighlighted>0, 21, 110</TextHighlighted>
			<TextDisabled>159, 141, 154</TextDisabled>
		</TOOLBAR>
		<MENUBAR>
			<GradientLight>235, 235, 235</GradientLight>
			<GradientDark>196, 195, 195</GradientDark>
			<GradientVertLight>235, 235, 235</GradientVertLight>
			<GradientVertDark>196, 195, 195</GradientVertDark>
			<TextNormal>0, 21, 110</TextNormal>
			<TextHighlighted>0, 21, 110</TextHighlighted>
			<TextDisabled>159, 141, 154</TextDisabled>
			<BUTTON>
				<SIZE>22, 20</SIZE>
				<CORNERS>2, 2, 2, 2</CORNERS>
				<TRANSPARENT>255, 0, 255</TRANSPARENT>
			</BUTTON>
		</MENUBAR>
		<POPUPBAR>
			<ROUND_BORDER>3, 3</ROUND_BORDER>
			<BORDER>
				<SIZE>7, 7</SIZE>
				<CORNERS>3, 3, 3, 3</CORNERS>
				<SIDES>2, 2, 2, 2</SIDES>
				<TRANSPARENT>255, 0, 255</TRANSPARENT>
			</BORDER>
			<RESIZEBAR>
				<BACK>
					<SIZE>3, 11</SIZE>
					<CORNERS>1, 2, 1, 1</CORNERS>
				</BACK>
				<ICON_HV>
					<SIZE>9, 8</SIZE>
					<TRANSPARENT>255, 0, 255</TRANSPARENT>
				</ICON_HV>
				<ICON_HVT>
					<SIZE>9, 8</SIZE>
					<TRANSPARENT>255, 0, 255</TRANSPARENT>
				</ICON_HVT>
				<ICON_V>
					<SIZE>15, 3</SIZE>
					<TRANSPARENT>255, 0, 255</TRANSPARENT>
				</ICON_V>
			</RESIZEBAR>
		</POPUPBAR>
		<STATUSBAR>
			<BACK>
				<SIZE>35, 23</SIZE>
				<CORNERS>5, 8, 5, 5</CORNERS>
				<SIDES>1, 8, 1, 3</SIDES>
			</BACK>
			<BACK_EXT>
				<SIZE>35, 23</SIZE>
				<CORNERS>2, 8, 5, 5</CORNERS>
				<SIDES>2, 8, 1, 3</SIDES>
			</BACK_EXT>
			<PANEBORDER>
				<SIZE>2, 20</SIZE>
			</PANEBORDER>
			<SIZEBOX>
				<SIZE>11, 11</SIZE>
			</SIZEBOX>
			<TextNormal>0, 21, 110</TextNormal>
			<TextDisabled>159, 141, 154</TextDisabled>
		</STATUSBAR>
		<CAPTIONBAR>
			<GradientLight>243, 243, 247</GradientLight>
			<GradientDark>215, 215, 229</GradientDark>
			<TextNormal>0, 0, 0</TextNormal>
		</CAPTIONBAR>
		<SCROLLBAR>
			<HORZ>
				<BACK_1>
					<SIZE>17, 17</SIZE>
					<CORNERS>1, 1, 1, 1</CORNERS>
				</BACK_1>
				<ITEM_1>
					<SIZE>17, 17</SIZE>
					<CORNERS>3, 3, 3, 3</CORNERS>
				</ITEM_1>
				<THUMB_BACK_1>
					<SIZE>21, 17</SIZE>
					<CORNERS>2, 2, 2, 2</CORNERS>
				</THUMB_BACK_1>
				<THUMB_ICON_1>
					<SIZE>8, 7</SIZE>
				</THUMB_ICON_1>
				<BACK_2>
					<SIZE>17, 17</SIZE>
					<CORNERS>1, 1</CORNERS>
				</BACK_2>
				<ITEM_2>
					<SIZE>17, 17</SIZE>
					<CORNERS>3, 3, 3, 3</CORNERS>
				</ITEM_2>
				<THUMB_BACK_2>
					<SIZE>21, 17</SIZE>
					<CORNERS>2, 2, 2, 2</CORNERS>
				</THUMB_BACK_2>
				<THUMB_ICON_2>
					<SIZE>8, 7</SIZE>
				</THUMB_ICON_2>
			</HORZ>
			<VERT>
				<BACK_1>
					<SIZE>17, 17</SIZE>
					<CORNERS>1, 1, 1, 1</CORNERS>
				</BACK_1>
				<ITEM_1>
					<SIZE>17, 17</SIZE>
					<CORNERS>3, 3, 3, 3</CORNERS>
				</ITEM_1>
				<THUMB_BACK_1>
					<SIZE>17, 21</SIZE>
					<CORNERS>2, 2, 2, 2</CORNERS>
				</THUMB_BACK_1>
				<THUMB_ICON_1>
					<SIZE>7, 8</SIZE>
				</THUMB_ICON_1>
				<BACK_2>
					<SIZE>17, 17</SIZE>
					<CORNERS>1, 1</CORNERS>
				</BACK_2>
				<ITEM_2>
					<SIZE>17, 17</SIZE>
					<CORNERS>3, 3, 3, 3</CORNERS>
				</ITEM_2>
				<THUMB_BACK_2>
					<SIZE>17, 21</SIZE>
					<CORNERS>2, 2, 2, 2</CORNERS>
				</THUMB_BACK_2>
				<THUMB_ICON_2>
					<SIZE>7, 8</SIZE>
				</THUMB_ICON_2>
			</VERT>
		</SCROLLBAR>
	</BARS>
	<TASK>
		<GradientDark>196, 202, 217</GradientDark>
		<GradientLight>196, 202, 217</GradientLight>
		<GROUP>
			<NORMAL>
				<CAPTION>
					<DarkNormal>243, 243, 247</DarkNormal>
					<LightNormal>216, 216, 230</LightNormal>
					<DarkHighlighted>216, 216, 230</DarkHighlighted>
					<LightHighlighted>241, 241, 245</LightHighlighted>
					<TextNormal>0, 21, 110</TextNormal>
					<TextHighlighted>0, 21, 110</TextHighlighted>
				</CAPTION>
				<AREA>
					<DarkNormal>255, 255, 255</DarkNormal>
					<LightNormal>255, 255, 255</LightNormal>
				</AREA>
			</NORMAL>
			<SPECIAL>
				<CAPTION>
					<DarkNormal>243, 243, 247</DarkNormal>
					<LightNormal>216, 216, 230</LightNormal>
					<DarkHighlighted>216, 216, 230</DarkHighlighted>
					<LightHighlighted>241, 241, 245</LightHighlighted>
					<TextNormal>0, 21, 110</TextNormal>
					<TextHighlighted>0, 21, 110</TextHighlighted>
				</CAPTION>
				<AREA>
					<DarkNormal>255, 255, 255</DarkNormal>
					<LightNormal>255, 255, 255</LightNormal>
				</AREA>
			</SPECIAL>
			<BORDER>124, 124, 148</BORDER>
		</GROUP>
		<SCROLL_BUTTON>
			<SIZE>30, 12</SIZE>
			<CORNERS>2, 2, 2, 2</CORNERS>
		</SCROLL_BUTTON>
	</TASK>
	<TABS>
		<TextColorActive>0, 21, 110</TextColorActive>
		<TextColorInactive>0, 21, 110</TextColorInactive>
		<3D>
			<BUTTON>
				<SIZE>72, 25</SIZE>
				<CORNERS>4, 4, 4, 2</CORNERS>
			</BUTTON>
		</3D>
		<FLAT>
			<Black>136, 157, 194</Black>
			<Highlight>166, 175, 195</Highlight>
			<BUTTON>
				<SIZE>24, 15</SIZE>
				<CORNERS>4, 4, 0, 6</CORNERS>
				<TRANSPARENT>255, 0, 255</TRANSPARENT>
			</BUTTON>
			<BorderInnerNormal>240, 242, 246</BorderInnerNormal>
			<BorderInnerActive>240, 242, 246</BorderInnerActive>
			<BorderOuterNormal>136, 157, 194</BorderOuterNormal>
			<BorderOuterActive>136, 157, 194</BorderOuterActive>
		</FLAT>
	</TABS>
	<HEADER>
		<NormalStart>199, 208, 225</NormalStart>
		<NormalFinish>205, 213, 228</NormalFinish>
		<NormalBorder>143, 153, 181</NormalBorder>
		<HighlightedStart>168, 182, 211</HighlightedStart>
		<HighlightedFinish>154, 169, 203</HighlightedFinish>
		<HighlightedBorder>167, 175, 197</HighlightedBorder>
		<PressedStart>155, 173, 210</PressedStart>
		<PressedFinish>141, 162, 207</PressedFinish>
		<PressedBorder>233, 236, 243</PressedBorder>
	</HEADER>
	<RIBBON>
		<PANEL>
			<BACK>
				<TOP>
					<SIZE>100, 68</SIZE>
					<CORNERS>2, 0, 2, 0</CORNERS>
				</TOP>
				<BOTTOM>
					<SIZE>100, 17</SIZE>
					<CORNERS>2, 0, 2, 16</CORNERS>
				</BOTTOM>
			</BACK>
			<CAPTION>
				<LAUNCH_ICON>
					<SIZE>12, 12</SIZE>
				</LAUNCH_ICON>
				<TextNormal>255, 255, 255</TextNormal>
				<TextHighlighted>255, 255, 255</TextHighlighted>
			</CAPTION>
			<SEPARATOR>
				<SIZE>1, 46</SIZE>
			</SEPARATOR>
			<BUTTONS>
				<BUTTON_GROUP_F>
					<SIZE>22, 22</SIZE>
					<CORNERS>2, 2, 2, 2</CORNERS>
				</BUTTON_GROUP_F>
				<BUTTON_GROUP_M>
					<SIZE>22, 22</SIZE>
					<CORNERS>2, 2, 2, 2</CORNERS>
				</BUTTON_GROUP_M>
				<BUTTON_GROUP_L>
					<SIZE>22, 22</SIZE>
					<CORNERS>2, 2, 2, 2</CORNERS>
				</BUTTON_GROUP_L>
				<BUTTON_GROUP_S>
					<SIZE>22, 22</SIZE>
					<CORNERS>2, 2, 2, 2</CORNERS>
				</BUTTON_GROUP_S>
				<BUTTON_GROUPMENU_F_C>
					<SIZE>24, 22</SIZE>
					<CORNERS>2, 2, 2, 2</CORNERS>
				</BUTTON_GROUPMENU_F_C>
				<BUTTON_GROUPMENU_F_M>
					<SIZE>8, 22</SIZE>
					<CORNERS>0, 2, 1, 2</CORNERS>
				</BUTTON_GROUPMENU_F_M>
				<BUTTON_GROUPMENU_M_C>
					<SIZE>24, 22</SIZE>
					<CORNERS>2, 2, 2, 2</CORNERS>
				</BUTTON_GROUPMENU_M_C>
				<BUTTON_GROUPMENU_M_M>
					<SIZE>8, 22</SIZE>
					<CORNERS>0, 2, 1, 2</CORNERS>
				</BUTTON_GROUPMENU_M_M>
				<BUTTON_GROUPMENU_L_C>
					<SIZE>24, 22</SIZE>
					<CORNERS>2, 2, 2, 2</CORNERS>
				</BUTTON_GROUPMENU_L_C>
				<BUTTON_GROUPMENU_L_M>
					<SIZE>8, 22</SIZE>
					<CORNERS>0, 2, 2, 2</CORNERS>
				</BUTTON_GROUPMENU_L_M>
				<BUTTON_NORMAL_S>
					<SIZE>22, 22</SIZE>
					<CORNERS>4, 4, 4, 4</CORNERS>
				</BUTTON_NORMAL_S>
				<BUTTON_NORMAL_B>
					<SIZE>50, 66</SIZE>
					<CORNERS>2, 2, 2, 2</CORNERS>
				</BUTTON_NORMAL_B>
				<BUTTON_DEFAULT>
					<SIZE>52, 67</SIZE>
					<CORNERS>4, 4, 4, 4</CORNERS>
				</BUTTON_DEFAULT>
				<BUTTON_DEFAULT_IMAGE>
					<SIZE>15, 16</SIZE>
				</BUTTON_DEFAULT_IMAGE>
				<BUTTON_DEFAULT_QAT_ICON>
					<SIZE>20, 12</SIZE>
					<CORNERS>2, 2, 2, 2</CORNERS>
				</BUTTON_DEFAULT_QAT_ICON>
				<BUTTON_DEFAULT_QAT>
					<SIZE>24, 24</SIZE>
					<CORNERS>4, 4, 4, 4</CORNERS>
				</BUTTON_DEFAULT_QAT>
				<BUTTON_MENU_H_C>
					<SIZE>23, 22</SIZE>
					<CORNERS>2, 2, 2, 2</CORNERS>
				</BUTTON_MENU_H_C>
				<BUTTON_MENU_H_M>
					<SIZE>11, 22</SIZE>
					<CORNERS>0, 2, 2, 2</CORNERS>
				</BUTTON_MENU_H_M>
				<BUTTON_MENU_V_C>
					<SIZE>50, 39</SIZE>
					<CORNERS>2, 2, 2, 2</CORNERS>
				</BUTTON_MENU_V_C>
				<BUTTON_MENU_V_M>
					<SIZE>50, 27</SIZE>
					<CORNERS>2, 0, 2, 2</CORNERS>
				</BUTTON_MENU_V_M>
				<BUTTON_CHECK>
					<SIZE>13, 13</SIZE>
				</BUTTON_CHECK>
				<BUTTON_PNL_T>
					<SIZE>15, 21</SIZE>
					<CORNERS>3, 3, 3, 3</CORNERS>
				</BUTTON_PNL_T>
				<BUTTON_PNL_M>
					<SIZE>15, 19</SIZE>
					<CORNERS>3, 3, 3, 3</CORNERS>
				</BUTTON_PNL_M>
				<BUTTON_PNL_B>
					<SIZE>15, 20</SIZE>
					<CORNERS>3, 3, 3, 3</CORNERS>
				</BUTTON_PNL_B>
			</BUTTONS>
			<EDIT>
				<Normal>231, 234, 241</Normal>
				<Highlighted>255, 255, 255</Highlighted>
				<Disabled>239, 239, 239</Disabled>
				<Pressed>255, 255, 255</Pressed>
				<BorderNormal>177, 187, 198</BorderNormal>
				<BorderHighlighted>148, 168, 198</BorderHighlighted>
				<BorderDisabled>177, 187, 198</BorderDisabled>
				<BorderPressed>148, 168, 198</BorderPressed>
				<Selection>189, 207, 236</Selection>
				<BUTTON>
					<GradientStartNormal>231, 234, 241</GradientStartNormal>
					<GradientFinishNormal>231, 234, 241</GradientFinishNormal>
					<GradientStartHighlighted>211, 211, 211</GradientStartHighlighted>
					<GradientFinishHighlighted>246, 246, 245</GradientFinishHighlighted>
					<GradientStartDisabled>239, 239, 239</GradientStartDisabled>
					<GradientFinishDisabled>239, 239, 239</GradientFinishDisabled>
					<GradientStartPressed>230, 230, 230</GradientStartPressed>
					<GradientFinishPressed>197, 197, 197</GradientFinishPressed>
					<BtnBorderNormal>177, 187, 198</BtnBorderNormal>
					<BtnBorderHighlighted>148, 168, 198</BtnBorderHighlighted>
					<BtnBorderDisabled>177, 187, 198</BtnBorderDisabled>
					<BtnBorderPressed>148, 168, 198</BtnBorderPressed>
				</BUTTON>
			</EDIT>
			<TextNormal>0, 21, 110</TextNormal>
			<TextHighlighted>0, 21, 110</TextHighlighted>
		</PANEL>
		<CATEGORY>
			<BACK>
				<SIZE>80, 92</SIZE>
				<CORNERS>5, 5, 5, 5</CORNERS>
			</BACK>
			<TAB>
				<BUTTON>
					<SIZE>72, 25</SIZE>
					<CORNERS>4, 4, 4, 2</CORNERS>
				</BUTTON>
				<TextNormal>0, 21, 110</TextNormal>
				<TextHighlighted>0, 21, 110</TextHighlighted>
			</TAB>
			<BUTTON_PAGE_L>
				<SIZE>14, 82</SIZE>
				<CORNERS>2, 2, 2, 2</CORNERS>
			</BUTTON_PAGE_L>
			<BUTTON_PAGE_R>
				<SIZE>14, 82</SIZE>
				<CORNERS>2, 2, 2, 2</CORNERS>
			</BUTTON_PAGE_R>
		</CATEGORY>
		<CONTEXT>
			<CATEGORY>
				<BACK>
					<SIZE>80, 92</SIZE>
					<CORNERS>5, 5, 5, 5</CORNERS>
				</BACK>
				<TAB>
					<BUTTON>
						<SIZE>76, 25</SIZE>
						<CORNERS>7, 4, 7, 2</CORNERS>
					</BUTTON>
					<TextNormal>0, 21, 110</TextNormal>
					<TextHighlighted>0, 21, 110</TextHighlighted>
				</TAB>
				<CAPTION>
					<BACK>
						<SIZE>80, 19</SIZE>
						<CORNERS>1, 1, 1, 2</CORNERS>
					</BACK>
					<TextNormal>0, 21, 110</TextNormal>
				</CAPTION>
				<BUTTON_DEFAULT>
					<SIZE>52, 67</SIZE>
					<CORNERS>4, 4, 4, 4</CORNERS>
				</BUTTON_DEFAULT>
			</CATEGORY>
			<PANEL>
				<BACK>
					<TOP>
						<SIZE>100, 68</SIZE>
						<CORNERS>2, 0, 2, 0</CORNERS>
					</TOP>
					<BOTTOM>
						<SIZE>100, 17</SIZE>
						<CORNERS>2, 0, 2, 16</CORNERS>
					</BOTTOM>
				</BACK>
				<CAPTION>
					<TextNormal>255, 255, 255</TextNormal>
					<TextHighlighted>255, 255, 255</TextHighlighted>
				</CAPTION>
				<TextNormal>0, 21, 110</TextNormal>
				<TextHighlighted>0, 21, 110</TextHighlighted>
			</PANEL>
			<SEPARATOR>
				<SIZE>3, 26</SIZE>
				<CORNERS>1, 1, 1, 1</CORNERS>
			</SEPARATOR>
		</CONTEXT>
		<CAPTION>
			<QA>
				<SIZE>32, 26</SIZE>
				<CORNERS>15, 4, 12, 4</CORNERS>
			</QA>
			<QA_GLASS>
				<SIZE>32, 26</SIZE>
				<CORNERS>15, 4, 12, 4</CORNERS>
			</QA_GLASS>
		</CAPTION>
		<MAIN_BUTTON>
			<SIZE>38, 38</SIZE>
		</MAIN_BUTTON>
		<MAIN>
			<BUTTON>
				<SIZE>70, 22</SIZE>
				<CORNERS>2, 2, 2, 2</CORNERS>
			</BUTTON>
		</MAIN>
		<STATUS>
			<PANE_BUTTON>
				<SIZE>41, 18</SIZE>
				<CORNERS>2, 2, 2, 2</CORNERS>
			</PANE_BUTTON>
			<SLIDER>
				<THUMB>
					<SIZE>7, 13</SIZE>
					<CORNERS>0, 0, 0, 0</CORNERS>
				</THUMB>
				<PLUS>
					<SIZE>16, 16</SIZE>
					<CORNERS>0, 0, 0, 0</CORNERS>
				</PLUS>
				<MINUS>
					<SIZE>16, 16</SIZE>
					<CORNERS>0, 0, 0, 0</CORNERS>
				</MINUS>
			</SLIDER>
			<PROGRESS>
				<BACK>
					<SIZE>90, 12</SIZE>
					<CORNERS>2, 2, 2, 2</CORNERS>
				</BACK>
				<NORMAL>
					<SIZE>86, 8</SIZE>
					<CORNERS>1, 1, 1, 1</CORNERS>
				</NORMAL>
				<NORMAL_EXT>
					<SIZE>5, 8</SIZE>
				</NORMAL_EXT>
				<INFINITY>
					<SIZE>86, 8</SIZE>
					<CORNERS>1, 1, 1, 1</CORNERS>
				</INFINITY>
			</PROGRESS>
		</STATUS>
		<BORDERS>
			<FLOATY>
				<SIZE>7, 7</SIZE>
				<CORNERS>3, 3, 3, 3</CORNERS>
				<SIDES>2, 2, 2, 2</SIDES>
			</FLOATY>
		</BORDERS>
		<KEYTIP>
			<BACK>
				<SIZE>15, 15</SIZE>
				<CORNERS>2, 2, 2, 2</CORNERS>
				<SIDES>1, 1, 1, 1</SIDES>
			</BACK>
		</KEYTIP>
		<HYPERLINK>
			<Inactive>0, 102, 226</Inactive>
			<Active>0, 144, 255</Active>
		</HYPERLINK>
	</RIBBON>
	<PLANNER>
		<WorkColor>181, 189, 211</WorkColor>
		<NcAreaColor>206, 212, 225</NcAreaColor>
		<NcLineColor>0, 21, 110</NcLineColor>
		<NcTextColor>0, 21, 110</NcTextColor>
		<TODAY>
			<Caption1Start>247, 208, 112</Caption1Start>
			<Caption1Finish>251, 230, 148</Caption1Finish>
			<Caption2Start>239, 155,  30</Caption2Start>
			<Caption2Finish>250, 224, 139</Caption2Finish>
			<BorderColor>238, 147, 17</BorderColor>
		</TODAY>
	</PLANNER>
	<GRID>
		<ExpandBoxLight>144, 168, 192</ExpandBoxLight>
		<ExpandBoxDark>48, 72, 96</ExpandBoxDark>
	</GRID>
	<OUTLOOK>
		<CAPTION>
			<TextNormal>0, 0, 0</TextNormal>
			<TextHighlighted>0, 0, 0</TextHighlighted>
		</CAPTION>
		<PAGEBUTTON>
			<TextNormal>0, 0, 0</TextNormal>
			<TextHighlighted>0, 0, 0</TextHighlighted>
		</PAGEBUTTON>
	</OUTLOOK>
	<POPUP>
		<GradientFillDark>196, 202, 217</GradientFillDark>
		<GradientFillLight>218, 224, 239</GradientFillLight>
	</POPUP>
</STYLE>
=== C:/Users/treeman/Desktop/windows nt source code\xbox\Xbox Live Source\XONLINE_MAIN\public\ext\sdk\vs9sp1\sdk\include\atl90\Silver\Style.xml ===
<STYLE>
	<VERSION>
		<NUMBER>2007</NUMBER>
		<TYPE>20</TYPE>
		<ID_PREFIX>SILVER_</ID_PREFIX>
	</VERSION>
	<DESCRIPTION>
		<NAME>Obsidian (black)</NAME>
	</DESCRIPTION>
	<GLOBALS>
		<BarText>0, 0, 0</BarText>
		<BarFace>233, 238, 247</BarFace>
		<ActiveCaption>233, 238, 247</ActiveCaption>
		<CaptionText>70, 70, 70</CaptionText>
		<InactiveCaption>186, 193, 202</InactiveCaption>
		<InactiveCaptionText>70, 70, 70</InactiveCaptionText>
		<FloatToolBarBorder>124, 124, 124</FloatToolBarBorder>
		<BarShadow>172, 175, 183</BarShadow>
		<BarDkShadow>124, 124, 124</BarDkShadow>
		<BarLight>233, 238, 247</BarLight>
		<AutoPremultiply>TRUE</AutoPremultiply>
		<HighlightGradientDark>255, 219, 117</HighlightGradientDark>
		<HighlightGradientLight>255, 245, 204</HighlightGradientLight>
		<HighlightDnGradientDark>255, 184, 94</HighlightDnGradientDark>
		<HighlightDnGradientLight>252, 151, 61</HighlightDnGradientLight>
		<HighlightCheckedGradientDark>255, 171, 63</HighlightCheckedGradientDark>
		<HighlightCheckedGradientLight>255, 207, 146</HighlightCheckedGradientLight>
		<PressedButtonBorder>251, 140, 60</PressedButtonBorder>
		<Highlight>180, 201, 233</Highlight>
		<HighlightText>0, 0, 0</HighlightText>
		<MenuShadowColor>240, 240, 240</MenuShadowColor>
		<TOOLTIP>
			<DRAW_SEPARATOR>FALSE</DRAW_SEPARATOR>
			<ROUNDED_CORNERS>TRUE</ROUNDED_CORNERS>
			<COLOR_FILL>255, 255, 255</COLOR_FILL>
			<COLOR_FILLGRADIENT>233, 238, 247</COLOR_FILLGRADIENT>
			<COLOR_TEXT>76, 76, 76</COLOR_TEXT>
			<COLOR_BORDER>118, 118, 118</COLOR_BORDER>
		</TOOLTIP>
	</GLOBALS>
	<MAINWND>
		<CAPTION>
			<FONT>
				<WEIGHT>NORMAL</WEIGHT>
				<QUALITY>CLEARTYPE</QUALITY>
			</FONT>
			<ActiveStart>62, 62, 62</ActiveStart>
			<ActiveFinish>47, 48, 48</ActiveFinish>
			<InactiveStart>153, 153, 153</InactiveStart>
			<InactiveFinish>146, 146, 146</InactiveFinish>
			<ActiveText>92, 98, 106</ActiveText>
			<InactiveText>138, 138, 138</InactiveText>
			<ActiveTitleText>53, 110, 170</ActiveTitleText>
			<InactiveTitleText>138, 138, 138</InactiveTitleText>
			<TextCenter>TRUE</TextCenter>
			<BORDER>
				<SIZE>35, 31</SIZE>
				<CORNERS>5, 9, 5, 3</CORNERS>
			</BORDER>
			<BUTTONS>
				<NORMAL>
					<ConstSize>23, 23</ConstSize>
					<IconSize>17, 16</IconSize>
					<SIZE>17, 16</SIZE>
					<CORNERS>2, 2, 2, 2</CORNERS>
				</NORMAL>
				<SMALL>
					<ConstSize>16, 16</ConstSize>
					<IconSize>13, 12</IconSize>
					<SIZE>17, 16</SIZE>
					<CORNERS>2, 2, 2, 2</CORNERS>
				</SMALL>
			</BUTTONS>
		</CAPTION>
		<ROUND_BORDER>9, 9</ROUND_BORDER>
		<BORDER>
			<SIZE>35, 23</SIZE>
			<CORNERS>17, 0, 17, 22</CORNERS>
			<SIDES>17, 0, 17, 17</SIDES>
		</BORDER>
		<BORDER_MDICHILD>
			<SIZE>35, 23</SIZE>
			<CORNERS>17, 0, 17, 22</CORNERS>
			<SIDES>17, 0, 17, 17</SIDES>
		</BORDER_MDICHILD>
		<MainClientArea>186, 193, 202</MainClientArea>
	</MAINWND>
	<EDIT>
		<BorderHighlighted>255, 189, 105</BorderHighlighted>
	</EDIT>
	<COMBO>
		<BorderHighlighted>255, 189, 105</BorderHighlighted>
		<BorderPressed>255, 189, 105</BorderPressed>
		<BUTTON>
			<GradientStartNormal>209, 214, 222</GradientStartNormal>
			<GradientFinishNormal>233, 238, 247</GradientFinishNormal>
			<GradientStartHighlighted>255, 220, 122</GradientStartHighlighted>
			<GradientFinishHighlighted>255, 244, 199</GradientFinishHighlighted>
			<BtnBorderHighlighted>255, 189, 105</BtnBorderHighlighted>
			<GradientStartPressed>255, 183, 91</GradientStartPressed>
			<GradientFinishPressed>252, 153, 61</GradientFinishPressed>
			<BtnBorderPressed>251, 140, 61</BtnBorderPressed>
		</BUTTON>
	</COMBO>
	<MENU>
		<Light>250, 250, 250</Light>
		<Rarely>195, 199, 205</Rarely>
    <Border>154, 154, 154</Border>
    <Separator1>197, 197, 197</Separator1>
		<Separator2>245, 245, 245</Separator2>
		<GroupBackground>235, 235, 235</GroupBackground>
		<ItemBorder>205, 181, 130</ItemBorder>
		<ItemBack>
			<SIZE>20, 20</SIZE>
			<CORNERS>2, 2, 2, 2</CORNERS>
		</ItemBack>
		<ItemCheck>
			<SIZE>10, 14</SIZE>
		</ItemCheck>
		<ItemRadio>
			<SIZE>10, 14</SIZE>
		</ItemRadio>
		<Highlighted>
			<SIZE>55, 22</SIZE>
			<CORNERS>2, 2, 2, 2</CORNERS>
		</Highlighted>
		<HighlightedDisabled>
			<SIZE>55, 22</SIZE>
			<CORNERS>2, 2, 2, 2</CORNERS>
		</HighlightedDisabled>
		<ScrollBtn_T>
			<SIZE>30, 12</SIZE>
			<CORNERS>2, 2, 2, 2</CORNERS>
		</ScrollBtn_T>
		<TextNormal>76, 83, 92</TextNormal>
		<TextHighlighted>76, 83, 92</TextHighlighted>
		<TextDisabled>167, 167, 167</TextDisabled>
		<COLORS>
			<Black>124, 124, 124</Black>
			<Black2>90, 90, 90</Black2>
		</COLORS>
		<BorderSize>2</BorderSize>
		<ButtonBorder>
			<SIZE>2, 19</SIZE>
		</ButtonBorder>
	</MENU>
	<BARS>
		<DEFAULT>
			<Bkgnd>233, 238, 247</Bkgnd>
			<GradientLight>208, 212, 221</GradientLight>
			<GradientDark>208, 212, 221</GradientDark>
		</DEFAULT>
		<TOOLBAR>
			<GradientLight>233, 238, 247</GradientLight>
			<GradientDark>209, 214, 222</GradientDark>
			<GradientVertLight>233, 238, 247</GradientVertLight>
			<GradientVertDark>209, 214, 222</GradientVertDark>
			<CustomizeButtonGradientLight>186, 193, 202</CustomizeButtonGradientLight>
			<CustomizeButtonGradientDark>172, 175, 183</CustomizeButtonGradientDark>
			<BottomLineColor>172, 175, 183</BottomLineColor>
			<GRIPPER>
				<SIZE>4, 4</SIZE>
				<TRANSPARENT>255, 0, 255</TRANSPARENT>
			</GRIPPER>
			<TEAR>
				<SIZE>35, 3</SIZE>
				<TRANSPARENT>255, 0, 255</TRANSPARENT>
			</TEAR>
			<BUTTON>
				<SIZE>22, 22</SIZE>
				<CORNERS>2, 3, 2, 2</CORNERS>
			</BUTTON>
			<BORDER>
				<SIZE>9, 9</SIZE>
				<CORNERS>4, 4, 4, 4</CORNERS>
				<SIDES>2, 2, 2, 2</SIDES>
			</BORDER>
			<TextNormal>76, 83, 92</TextNormal>
			<TextHighlighted>76, 83, 92</TextHighlighted>
			<TextDisabled>141, 141, 141</TextDisabled>
		</TOOLBAR>
		<MENUBAR>
			<GradientLight>208, 212, 221</GradientLight>
			<GradientDark>208, 212, 221</GradientDark>
			<GradientVertLight>208, 212, 221</GradientVertLight>
			<GradientVertDark>208, 212, 221</GradientVertDark>
			<TextNormal>76, 83, 92</TextNormal>
			<TextHighlighted>76, 83, 92</TextHighlighted>
			<TextDisabled>141, 141, 141</TextDisabled>
			<BUTTON>
				<SIZE>22, 19</SIZE>
				<CORNERS>1, 1, 1, 1</CORNERS>
				<TRANSPARENT>255, 0, 255</TRANSPARENT>
			</BUTTON>
		</MENUBAR>
		<POPUPBAR>
			<ROUND_BORDER>3, 3</ROUND_BORDER>
			<BORDER>
				<SIZE>7, 7</SIZE>
				<CORNERS>3, 3, 3, 3</CORNERS>
				<SIDES>2, 2, 2, 2</SIDES>
			</BORDER>
			<RESIZEBAR>
				<BACK>
					<SIZE>3, 11</SIZE>
					<CORNERS>1, 2, 1, 1</CORNERS>
				</BACK>
				<ICON_HV>
					<SIZE>9, 8</SIZE>
					<TRANSPARENT>255, 0, 255</TRANSPARENT>
				</ICON_HV>
				<ICON_HVT>
					<SIZE>9, 8</SIZE>
					<TRANSPARENT>255, 0, 255</TRANSPARENT>
				</ICON_HVT>
				<ICON_V>
					<SIZE>15, 3</SIZE>
					<TRANSPARENT>255, 0, 255</TRANSPARENT>
				</ICON_V>
			</RESIZEBAR>
		</POPUPBAR>
		<STATUSBAR>
			<BACK>
				<SIZE>35, 23</SIZE>
				<CORNERS>5, 8, 5, 5</CORNERS>
				<SIDES>1, 8, 1, 3</SIDES>
			</BACK>
			<BACK_EXT>
				<SIZE>35, 23</SIZE>
				<CORNERS>3, 8, 5, 5</CORNERS>
				<SIDES>3, 8, 1, 3</SIDES>
			</BACK_EXT>
			<PANEBORDER>
				<SIZE>2, 20</SIZE>
			</PANEBORDER>
			<SIZEBOX>
				<SIZE>11, 11</SIZE>
			</SIZEBOX>
			<TextNormal>35, 38, 42</TextNormal>
			<TextDisabled>141, 141, 141</TextDisabled>
		</STATUSBAR>
		<CAPTIONBAR>
			<GradientLight>233, 238, 247</GradientLight>
			<GradientDark>186, 193, 202</GradientDark>
			<TextNormal>55, 60, 67</TextNormal>
		</CAPTIONBAR>
	</BARS>
	<TASK>
		<GradientDark>233, 238, 247</GradientDark>
		<GradientLight>255, 255, 255</GradientLight>
		<GROUP>
			<NORMAL>
				<CAPTION>
					<DarkNormal>221, 224, 227</DarkNormal>
					<LightNormal>240, 241, 242</LightNormal>
					<DarkHighlighted>231, 232, 235</DarkHighlighted>
					<LightHighlighted>255, 255, 255</LightHighlighted>
					<TextNormal>55, 60, 67</TextNormal>
					<TextHighlighted>55, 60, 67</TextHighlighted>
				</CAPTION>
				<AREA>
					<DarkNormal>255, 255, 255</DarkNormal>
					<LightNormal>255, 255, 255</LightNormal>
				</AREA>
			</NORMAL>
			<SPECIAL>
				<CAPTION>
					<DarkNormal>221, 224, 227</DarkNormal>
					<LightNormal>240, 241, 242</LightNormal>
					<DarkHighlighted>231, 232, 235</DarkHighlighted>
					<LightHighlighted>255, 255, 255</LightHighlighted>
					<TextNormal>55, 60, 67</TextNormal>
					<TextHighlighted>55, 60, 67</TextHighlighted>
				</CAPTION>
				<AREA>
					<DarkNormal>255, 255, 255</DarkNormal>
					<LightNormal>255, 255, 255</LightNormal>
				</AREA>
			</SPECIAL>
			<BORDER>76, 83, 92</BORDER>
		</GROUP>
		<SCROLL_BUTTON>
			<SIZE>30, 12</SIZE>
			<CORNERS>2, 2, 2, 2</CORNERS>
		</SCROLL_BUTTON>
	</TASK>
	<TABS>
		<3D>
			<BUTTON>
				<SIZE>57, 24</SIZE>
				<CORNERS>5, 5, 5, 2</CORNERS>
			</BUTTON>
		</3D>
		<FLAT>
			<Black>109, 109, 109</Black>
			<Highlight>73, 73, 73</Highlight>
			<BUTTON>
				<SIZE>24, 15</SIZE>
				<CORNERS>4, 4, 0, 6</CORNERS>
				<TRANSPARENT>255, 0, 255</TRANSPARENT>
			</BUTTON>
			<BorderInnerNormal>233, 238, 247</BorderInnerNormal>
			<BorderInnerActive>233, 238, 247</BorderInnerActive>
			<BorderOuterNormal>109, 109, 109</BorderOuterNormal>
			<BorderOuterActive>109, 109, 109</BorderOuterActive>
		</FLAT>
	</TABS>
	<HEADER>
		<NormalStart>247, 247, 247</NormalStart>
		<NormalFinish>222, 222, 222</NormalFinish>
		<NormalBorder>182, 182, 182</NormalBorder>
		<HighlightedStart>249, 216, 157</HighlightedStart>
		<HighlightedFinish>241, 193, 94</HighlightedFinish>
		<HighlightedBorder>242, 149, 54</HighlightedBorder>
		<PressedStart>255, 211, 139</PressedStart>
		<PressedFinish>242, 145, 56</PressedFinish>
		<PressedBorder>242, 149, 54</PressedBorder>
	</HEADER>
	<RIBBON>
		<PANEL>
			<BACK>
				<TOP>
					<SIZE>100, 68</SIZE>
					<CORNERS>3, 15, 3, 0</CORNERS>
				</TOP>
				<BOTTOM>
					<SIZE>100, 17</SIZE>
					<CORNERS>3, 0, 4, 4</CORNERS>
				</BOTTOM>
			</BACK>
			<CAPTION>
				<LAUNCH_BTN>
					<SIZE>15, 14</SIZE>
					<CORNERS>2, 2, 2, 2</CORNERS>
				</LAUNCH_BTN>
				<LAUNCH_ICON>
					<SIZE>8, 8</SIZE>
				</LAUNCH_ICON>
				<TextNormal>83, 84, 89</TextNormal>
				<TextHighlighted>83, 84, 89</TextHighlighted>
			</CAPTION>
			<SEPARATOR>
				<SIZE>2, 55</SIZE>
			</SEPARATOR>
			<QAT>
				<SIZE>11, 24</SIZE>
				<CORNERS>3, 3, 3, 3</CORNERS>
			</QAT>
			<BUTTONS>
				<BUTTON_GROUP_F>
					<SIZE>22, 22</SIZE>
					<CORNERS>2, 3, 2, 2</CORNERS>
				</BUTTON_GROUP_F>
				<BUTTON_GROUP_M>
					<SIZE>22, 22</SIZE>
					<CORNERS>2, 3, 2, 2</CORNERS>
				</BUTTON_GROUP_M>
				<BUTTON_GROUP_L>
					<SIZE>22, 22</SIZE>
					<CORNERS>2, 3, 2, 2</CORNERS>
				</BUTTON_GROUP_L>
				<BUTTON_GROUP_S>
					<SIZE>22, 22</SIZE>
					<CORNERS>2, 3, 2, 2</CORNERS>
				</BUTTON_GROUP_S>
				<BUTTON_GROUPMENU_F_C>
					<SIZE>23, 22</SIZE>
					<CORNERS>2, 3, 2, 2</CORNERS>
				</BUTTON_GROUPMENU_F_C>
				<BUTTON_GROUPMENU_F_M>
					<SIZE>9, 22</SIZE>
					<CORNERS>1, 3, 2, 2</CORNERS>
				</BUTTON_GROUPMENU_F_M>
				<BUTTON_GROUPMENU_M_C>
					<SIZE>23, 22</SIZE>
					<CORNERS>2, 3, 2, 2</CORNERS>
				</BUTTON_GROUPMENU_M_C>
				<BUTTON_GROUPMENU_M_M>
					<SIZE>9, 22</SIZE>
					<CORNERS>1, 3, 2, 2</CORNERS>
				</BUTTON_GROUPMENU_M_M>
				<BUTTON_GROUPMENU_L_C>
					<SIZE>23, 22</SIZE>
					<CORNERS>2, 3, 2, 2</CORNERS>
				</BUTTON_GROUPMENU_L_C>
				<BUTTON_GROUPMENU_L_M>
					<SIZE>10, 22</SIZE>
					<CORNERS>1, 3, 2, 2</CORNERS>
				</BUTTON_GROUPMENU_L_M>
				<BUTTON_NORMAL_S>
					<SIZE>22, 22</SIZE>
					<CORNERS>2, 2, 2, 2</CORNERS>
				</BUTTON_NORMAL_S>
				<BUTTON_NORMAL_B>
					<SIZE>43, 66</SIZE>
					<CORNERS>2, 2, 2, 2</CORNERS>
				</BUTTON_NORMAL_B>
				<BUTTON_DEFAULT>
					<SIZE>52, 84</SIZE>
					<CORNERS>2, 15, 2, 2</CORNERS>
				</BUTTON_DEFAULT>
				<BUTTON_DEFAULT_ICON>
					<SIZE>38, 38</SIZE>
					<CORNERS>7, 7, 8, 12</CORNERS>
				</BUTTON_DEFAULT_ICON>
				<BUTTON_DEFAULT_IMAGE>
					<SIZE>15, 16</SIZE>
				</BUTTON_DEFAULT_IMAGE>
				<BUTTON_DEFAULT_QAT_ICON>
					<SIZE>20, 12</SIZE>
					<CORNERS>3, 3, 3, 3</CORNERS>
				</BUTTON_DEFAULT_QAT_ICON>
				<BUTTON_DEFAULT_QAT>
					<SIZE>22, 22</SIZE>
					<CORNERS>3, 3, 3, 3</CORNERS>
				</BUTTON_DEFAULT_QAT>
				<BUTTON_MENU_H_C>
					<SIZE>22, 22</SIZE>
					<CORNERS>4, 4, 2, 1</CORNERS>
				</BUTTON_MENU_H_C>
				<BUTTON_MENU_H_M>
					<SIZE>11, 22</SIZE>
					<CORNERS>0, 4, 3, 2</CORNERS>
				</BUTTON_MENU_H_M>
				<BUTTON_MENU_V_C>
					<SIZE>43, 39</SIZE>
					<CORNERS>3, 6, 3, 2</CORNERS>
				</BUTTON_MENU_V_C>
				<BUTTON_MENU_V_M>
					<SIZE>43, 27</SIZE>
					<CORNERS>3, 0, 3, 2</CORNERS>
				</BUTTON_MENU_V_M>
				<BUTTON_CHECK>
					<SIZE>13, 13</SIZE>
				</BUTTON_CHECK>
				<BUTTON_PNL_T>
					<SIZE>15, 21</SIZE>
					<CORNERS>3, 3, 3, 3</CORNERS>
				</BUTTON_PNL_T>
				<BUTTON_PNL_M>
					<SIZE>15, 19</SIZE>
					<CORNERS>3, 3, 3, 3</CORNERS>
				</BUTTON_PNL_M>
				<BUTTON_PNL_B>
					<SIZE>15, 20</SIZE>
					<CORNERS>3, 3, 3, 3</CORNERS>
				</BUTTON_PNL_B>
			</BUTTONS>
			<EDIT>
				<Normal>232, 234, 236</Normal>
				<Highlighted>255, 255, 255</Highlighted>
				<Disabled>239, 239, 239</Disabled>
				<Pressed>255, 255, 255</Pressed>
				<BorderNormal>169, 177, 184</BorderNormal>
				<BorderHighlighted>164, 164, 164</BorderHighlighted>
				<BorderDisabled>177, 187, 198</BorderDisabled>
				<BorderPressed>164, 164, 164</BorderPressed>
				<Selection>174, 196, 232</Selection>
				<BUTTON>
					<IMAGE>
						<SIZE>12, 22</SIZE>
						<CORNERS>2, 3, 2, 2</CORNERS>
					</IMAGE>
				</BUTTON>
			</EDIT>
			<TextNormal>76, 83, 92</TextNormal>
			<TextHighlighted>76, 83, 92</TextHighlighted>
		</PANEL>
		<CATEGORY>
			<BACK>
				<SIZE>80, 92</SIZE>
				<CORNERS>5, 18, 5, 10</CORNERS>
			</BACK>
			<TAB>
				<BUTTON>
					<SIZE>57, 24</SIZE>
					<CORNERS>5, 5, 5, 2</CORNERS>
				</BUTTON>
				<TextNormal>76, 83, 92</TextNormal>
				<TextHighlighted>76, 83, 92</TextHighlighted>
			</TAB>
			<TAB_SEPARATOR>
				<SIZE>1, 23</SIZE>
			</TAB_SEPARATOR>
			<BUTTON_PAGE_L>
				<SIZE>14, 92</SIZE>
				<CORNERS>4, 18, 3, 6</CORNERS>
			</BUTTON_PAGE_L>
			<BUTTON_PAGE_R>
				<SIZE>14, 92</SIZE>
				<CORNERS>3, 18, 4, 6</CORNERS>
			</BUTTON_PAGE_R>
		</CATEGORY>
		<CONTEXT>
			<CATEGORY>
				<BACK>
					<SIZE>80, 92</SIZE>
					<CORNERS>5, 18, 4, 10</CORNERS>
				</BACK>
				<TAB>
					<BUTTON>
						<SIZE>57, 24</SIZE>
						<CORNERS>5, 5, 5, 2</CORNERS>
					</BUTTON>
					<TextNormal>76, 83, 92</TextNormal>
					<TextHighlighted>76, 83, 92</TextHighlighted>
				</TAB>
				<CAPTION>
					<BACK>
						<SIZE>80, 19</SIZE>
						<CORNERS>1, 1, 1, 2</CORNERS>
					</BACK>
					<TextNormal>76, 83, 92</TextNormal>
				</CAPTION>
				<BUTTON_DEFAULT>
					<SIZE>52, 84</SIZE>
					<CORNERS>2, 15, 2, 2</CORNERS>
				</BUTTON_DEFAULT>
			</CATEGORY>
			<PANEL>
				<BACK>
					<TOP>
						<SIZE>100, 68</SIZE>
						<CORNERS>3, 15, 3, 0</CORNERS>
					</TOP>
					<BOTTOM>
						<SIZE>100, 17</SIZE>
						<CORNERS>3, 0, 4, 4</CORNERS>
					</BOTTOM>
				</BACK>
				<CAPTION>
					<TextNormal>83, 84, 89</TextNormal>
					<TextHighlighted>83, 84, 89</TextHighlighted>
				</CAPTION>
				<TextNormal>76, 83, 92</TextNormal>
				<TextHighlighted>76, 83, 92</TextHighlighted>
			</PANEL>
			<SEPARATOR>
				<SIZE>3, 26</SIZE>
				<CORNERS>1, 1, 1, 1</CORNERS>
			</SEPARATOR>
		</CONTEXT>
		<CAPTION>
			<QA>
				<SIZE>32, 26</SIZE>
				<CORNERS>15, 4, 12, 4</CORNERS>
			</QA>
			<QA_GLASS>
				<SIZE>32, 26</SIZE>
				<CORNERS>15, 4, 12, 4</CORNERS>
			</QA_GLASS>
		</CAPTION>
		<MAIN_BUTTON>
			<SIZE>38, 38</SIZE>
		</MAIN_BUTTON>
		<MAIN>
			<BACK>
				<SIZE>9, 38</SIZE>
				<CORNERS>4, 10, 4, 27</CORNERS>
			</BACK>
			<BORDER>
				<SIZE>5, 5</SIZE>
				<CORNERS>2, 2, 2, 2</CORNERS>
			</BORDER>
			<BUTTON>
				<SIZE>54, 23</SIZE>
				<CORNERS>2, 3, 2, 2</CORNERS>
			</BUTTON>
		</MAIN>
		<STATUS>
			<PANE_BUTTON>
				<SIZE>22, 22</SIZE>
				<CORNERS>3, 4, 3, 3</CORNERS>
			</PANE_BUTTON>
			<SLIDER>
				<THUMB>
					<SIZE>11, 15</SIZE>
					<CORNERS>0, 0, 0, 0</CORNERS>
				</THUMB>
				<PLUS>
					<SIZE>18, 18</SIZE>
					<CORNERS>0, 0, 0, 0</CORNERS>
				</PLUS>
				<MINUS>
					<SIZE>18, 18</SIZE>
					<CORNERS>0, 0, 0, 0</CORNERS>
				</MINUS>
			</SLIDER>
			<PROGRESS>
				<BACK>
					<SIZE>90, 12</SIZE>
					<CORNERS>2, 2, 2, 2</CORNERS>
				</BACK>
				<NORMAL>
					<SIZE>86, 8</SIZE>
					<CORNERS>1, 1, 1, 1</CORNERS>
				</NORMAL>
				<NORMAL_EXT>
					<SIZE>5, 8</SIZE>
				</NORMAL_EXT>
				<INFINITY>
					<SIZE>86, 8</SIZE>
					<CORNERS>1, 1, 1, 1</CORNERS>
				</INFINITY>
			</PROGRESS>
		</STATUS>
		<BORDERS>
			<QAT>
				<SIZE>7, 7</SIZE>
				<CORNERS>3, 3, 3, 3</CORNERS>
				<SIDES>2, 2, 2, 2</SIDES>
			</QAT>
			<FLOATY>
				<SIZE>7, 7</SIZE>
				<CORNERS>3, 3, 3, 3</CORNERS>
				<SIDES>2, 2, 2, 2</SIDES>
			</FLOATY>
		</BORDERS>
		<KEYTIP>
			<BACK>
				<SIZE>15, 15</SIZE>
				<CORNERS>2, 2, 2, 2</CORNERS>
				<SIDES>1, 1, 1, 1</SIDES>
			</BACK>
		</KEYTIP>
		<HYPERLINK>
			<Inactive>0, 102, 226</Inactive>
			<Active>0, 144, 255</Active>
		</HYPERLINK>
	</RIBBON>
	<PLANNER>
		<WorkColor>176, 182, 190</WorkColor>
		<NcAreaColor>233, 238, 247</NcAreaColor>
		<NcLineColor>76, 83, 92</NcLineColor>
		<NcTextColor>76, 83, 92</NcTextColor>
		<TODAY>
			<Caption1Start>247, 208, 112</Caption1Start>
			<Caption1Finish>251, 230, 148</Caption1Finish>
			<Caption2Start>239, 155,  30</Caption2Start>
			<Caption2Finish>250, 224, 139</Caption2Finish>
			<BorderColor>238, 147, 17</BorderColor>
		</TODAY>
	</PLANNER>
	<GRID>
		<HEADER>
			<NormalStart>251, 253, 253</NormalStart>
			<NormalFinish>212, 214, 219</NormalFinish>
			<NormalBorder>76, 83, 92</NormalBorder>
			<Separator>145, 153, 164</Separator>
		</HEADER>
		<ExpandBoxLight>144, 168, 192</ExpandBoxLight>
		<ExpandBoxDark>48, 72, 96</ExpandBoxDark>
		<LeftOffset>232, 234, 236</LeftOffset>
		<GroupLine>145, 153, 164 </GroupLine>
		<GroupSubLine>227, 239, 255</GroupSubLine>
	</GRID>
	<OUTLOOK>
		<CAPTION>
			<TextNormal>55, 60, 67</TextNormal>
		</CAPTION>
		<PAGEBUTTON>
			<BACK>
				<SIZE>54, 31</SIZE>
			</BACK>
			<TextNormal>55, 60, 67</TextNormal>
			<TextHighlighted>55, 60, 67</TextHighlighted>
			<TextPressed>0, 0, 0</TextPressed>
		</PAGEBUTTON>
		<BAR>
			<BACK>
				<SIZE>54, 31</SIZE>
			</BACK>
		</BAR>
	</OUTLOOK>
	<POPUP>
		<GradientFillDark>200, 203, 213</GradientFillDark>
		<GradientFillLight>229, 232, 244</GradientFillLight>
	</POPUP>
</STYLE>
=== C:/Users/treeman/Desktop/windows nt source code\xbox\Xbox Live Source\XONLINE_MAIN\public\ext\sdk\vs9sp1\sdk\lib\nafxcw.lib.txt ===
The static link mfc libs are huge and not used by that many people.  To reduce space these
are being deleted.  If you need them in your depot, you could either grab them from CoreXT
SD history (sdv nafxcw.lib, sync the atl dir to a timestamp pre-delete, copy to your depot)
or you can pull them from the VC\atlmfc\lib drop of an SDK install.

For VS9SP1, here were the sizes and files removed:

(x86)
49,961,732 nafxcw.lib
52,948,036 nafxcwd.lib
50,878,860 uafxcw.lib
54,308,646 uafxcwd.lib
(amd64)
59,304,686 nafxcw.lib
66,881,626 nafxcwd.lib
60,094,880 uafxcw.lib
68,167,334 uafxcwd.lib
=== C:/Users/treeman/Desktop/windows nt source code\xbox\Xbox Live Source\XONLINE_MAIN\public\ext\sdk\vs9sp1\sdk\lib\nafxcwd.lib.txt ===
The static link mfc libs are huge and not used by that many people.  To reduce space these
are being deleted.  If you need them in your depot, you could either grab them from CoreXT
SD history (sdv nafxcw.lib, sync the atl dir to a timestamp pre-delete, copy to your depot)
or you can pull them from the VC\atlmfc\lib drop of an SDK install.

For VS9SP1, here were the sizes and files removed:

(x86)
49,961,732 nafxcw.lib
52,948,036 nafxcwd.lib
50,878,860 uafxcw.lib
54,308,646 uafxcwd.lib
(amd64)
59,304,686 nafxcw.lib
66,881,626 nafxcwd.lib
60,094,880 uafxcw.lib
68,167,334 uafxcwd.lib
=== C:/Users/treeman/Desktop/windows nt source code\xbox\Xbox Live Source\XONLINE_MAIN\public\ext\sdk\vs9sp1\sdk\lib\uafxcw.lib.txt ===
The static link mfc libs are huge and not used by that many people.  To reduce space these
are being deleted.  If you need them in your depot, you could either grab them from CoreXT
SD history (sdv nafxcw.lib, sync the atl dir to a timestamp pre-delete, copy to your depot)
or you can pull them from the VC\atlmfc\lib drop of an SDK install.

For VS9SP1, here were the sizes and files removed:

(x86)
49,961,732 nafxcw.lib
52,948,036 nafxcwd.lib
50,878,860 uafxcw.lib
54,308,646 uafxcwd.lib
(amd64)
59,304,686 nafxcw.lib
66,881,626 nafxcwd.lib
60,094,880 uafxcw.lib
68,167,334 uafxcwd.lib
=== C:/Users/treeman/Desktop/windows nt source code\xbox\Xbox Live Source\XONLINE_MAIN\public\ext\sdk\vs9sp1\sdk\lib\uafxcwd.lib.txt ===
The static link mfc libs are huge and not used by that many people.  To reduce space these
are being deleted.  If you need them in your depot, you could either grab them from CoreXT
SD history (sdv nafxcw.lib, sync the atl dir to a timestamp pre-delete, copy to your depot)
or you can pull them from the VC\atlmfc\lib drop of an SDK install.

For VS9SP1, here were the sizes and files removed:

(x86)
49,961,732 nafxcw.lib
52,948,036 nafxcwd.lib
50,878,860 uafxcw.lib
54,308,646 uafxcwd.lib
(amd64)
59,304,686 nafxcw.lib
66,881,626 nafxcwd.lib
60,094,880 uafxcw.lib
68,167,334 uafxcwd.lib
=== C:/Users/treeman/Desktop/windows nt source code\xbox\Xbox Live Source\XONLINE_MAIN\public\ext\sdk\vs9sp1\sdk\lib\amd64\nafxcw.lib.txt ===
The static link mfc libs are huge and not used by that many people.  To reduce space these
are being deleted.  If you need them in your depot, you could either grab them from CoreXT
SD history (sdv nafxcw.lib, sync the atl dir to a timestamp pre-delete, copy to your depot)
or you can pull them from the VC\atlmfc\lib drop of an SDK install.

For VS9SP1, here were the sizes and files removed:

(x86)
49,961,732 nafxcw.lib
52,948,036 nafxcwd.lib
50,878,860 uafxcw.lib
54,308,646 uafxcwd.lib
(amd64)
59,304,686 nafxcw.lib
66,881,626 nafxcwd.lib
60,094,880 uafxcw.lib
68,167,334 uafxcwd.lib
=== C:/Users/treeman/Desktop/windows nt source code\xbox\Xbox Live Source\XONLINE_MAIN\public\ext\sdk\vs9sp1\sdk\lib\amd64\nafxcwd.lib.txt ===
The static link mfc libs are huge and not used by that many people.  To reduce space these
are being deleted.  If you need them in your depot, you could either grab them from CoreXT
SD history (sdv nafxcw.lib, sync the atl dir to a timestamp pre-delete, copy to your depot)
or you can pull them from the VC\atlmfc\lib drop of an SDK install.

For VS9SP1, here were the sizes and files removed:

(x86)
49,961,732 nafxcw.lib
52,948,036 nafxcwd.lib
50,878,860 uafxcw.lib
54,308,646 uafxcwd.lib
(amd64)
59,304,686 nafxcw.lib
66,881,626 nafxcwd.lib
60,094,880 uafxcw.lib
68,167,334 uafxcwd.lib
=== C:/Users/treeman/Desktop/windows nt source code\xbox\Xbox Live Source\XONLINE_MAIN\public\ext\sdk\vs9sp1\sdk\lib\amd64\uafxcw.lib.txt ===
The static link mfc libs are huge and not used by that many people.  To reduce space these
are being deleted.  If you need them in your depot, you could either grab them from CoreXT
SD history (sdv nafxcw.lib, sync the atl dir to a timestamp pre-delete, copy to your depot)
or you can pull them from the VC\atlmfc\lib drop of an SDK install.

For VS9SP1, here were the sizes and files removed:

(x86)
49,961,732 nafxcw.lib
52,948,036 nafxcwd.lib
50,878,860 uafxcw.lib
54,308,646 uafxcwd.lib
(amd64)
59,304,686 nafxcw.lib
66,881,626 nafxcwd.lib
60,094,880 uafxcw.lib
68,167,334 uafxcwd.lib
=== C:/Users/treeman/Desktop/windows nt source code\xbox\Xbox Live Source\XONLINE_MAIN\public\ext\sdk\vs9sp1\sdk\lib\coffbase.txt ===
;
; This file defines the base virtual address for Dynamic Link Libraries (DLL)
; that are part of the Windows NT System.  The first token on a line is the name
; of the DLL and the second token is the base virtual address, in hexidecimal.
; The third token is the maximum size of the DLL image file, including symbols.
;
;  NOTE:  Unused areas are marked as _FREE_.
=== C:/Users/treeman/Desktop/windows nt source code\xbox\Xbox Live Source\XONLINE_MAIN\public\ext\sdk\vs9sp1\sdk\lib\amd64\uafxcwd.lib.txt ===
The static link mfc libs are huge and not used by that many people.  To reduce space these
are being deleted.  If you need them in your depot, you could either grab them from CoreXT
SD history (sdv nafxcw.lib, sync the atl dir to a timestamp pre-delete, copy to your depot)
or you can pull them from the VC\atlmfc\lib drop of an SDK install.

For VS9SP1, here were the sizes and files removed:

(x86)
49,961,732 nafxcw.lib
52,948,036 nafxcwd.lib
50,878,860 uafxcw.lib
54,308,646 uafxcwd.lib
(amd64)
59,304,686 nafxcw.lib
66,881,626 nafxcwd.lib
60,094,880 uafxcw.lib
68,167,334 uafxcwd.lib
=== C:/Users/treeman/Desktop/windows nt source code\xbox\Xbox Live Source\XONLINE_MAIN\public\ext\sdk\win2k8\public.log ===
asmmeta_makefile
assembly_identity.log-finished
crt
internal
lock
paths.inc
public.log
redist
sdk
version.txt
=== C:/Users/treeman/Desktop/windows nt source code\xbox\Xbox Live Source\XONLINE_MAIN\public\ext\sdk\win2k8\version.txt ===
Platform SDK v6.1 (Windows Server SDK 2008)
CRT from VS.NET Whidbey RTM (v2.0.50727.42)
WDK from WDK for Windows Server 2008 (v6001.18000)
=== C:/Users/treeman/Desktop/windows nt source code\xbox\Xbox Live Source\XONLINE_MAIN\public\ext\sdk\win2k8\sdk\include\AeroStyle.xml ===
<?xml version="1.0" encoding="us-ascii"?>
<!--

    Windows Aero Style Guide Definition

    Created:    06-23-2005    Microsoft

-->

<visualstyleguide>
    <!-- 
    // 
    // Those XML schema files have a matching .H file 
    // that contains the symbol prefix for each class, part and state
    //
    -->
    <!-- Base types -->
    <symbolfile>vssym32.xml</symbolfile>
    <!-- Style classes and types -->
    <symbolfile>vsstyle.xml</symbolfile>

    <!--
    //
    // Globals
    //
    --> 
    <globals>
        <EdgeDkShadowColor> 100 100 100</EdgeDkShadowColor>
        <EdgeFillColor>     220 220 220</EdgeFillColor>
        <EdgeHighLightColor>244 247 252</EdgeHighLightColor>
        <EdgeLightColor>    180 180 180</EdgeLightColor>
        <EdgeShadowColor>   180 180 180</EdgeShadowColor>
        <GlowColor>         255 255 255</GlowColor>
    </globals>

    <!--
    //
    // System Metrics
    //
    -->
    <sysmetrics>
        <!-- Colors -->
        <ActiveBorder>           ##Globals.EdgeLightColor    </ActiveBorder>
        <ActiveCaption>          153 180 209                 </ActiveCaption>
        <AppWorkSpace>           171 171 171                 </AppWorkSpace>
        <Background>               0   0   0                 </Background>
        <Btnface>                240 240 240                 </Btnface>
        <BtnHighlight>           255 255 255                 </BtnHighlight>
        <BtnShadow>              160 160 160                 </BtnShadow>
        <BtnText>                  0   0   0                 </BtnText>
        <ButtonAlternateFace>      0   0   0                 </ButtonAlternateFace>
        <CaptionText>              0   0   0                 </CaptionText>
        <DkShadow3d>             105 105 105                 </DkShadow3d>
        <GradientActiveCaption>  185 209 234                 </GradientActiveCaption>
        <GradientInactiveCaption>215 228 242                 </GradientInactiveCaption>
        <GrayText>               128 128 128                 </GrayText>
        <Highlight>               51 153 255                 </Highlight>
        <HighlightText>          255 255 255                 </HighlightText>
        <HotTracking>              0 102 204                 </HotTracking>
        <InfoBk>                 255 255 225                 </InfoBk>
        <InfoText>                 0   0   0                 </InfoText>
        <InactiveBorder>         ##Globals.EdgeHighLightColor</InactiveBorder>
        <InactiveCaption>        191 205 219                 </InactiveCaption>
        <InactiveCaptionText>     67  78  84                 </InactiveCaptionText>
        <Light3d>                227 227 227                 </Light3d>
        <Menu>                   ##Sysmetrics.BtnFace        </Menu>
        <MenuBar>                ##Sysmetrics.BtnFace        </MenuBar>
        <MenuHilight>            ##Sysmetrics.Highlight      </MenuHilight>
        <MenuText>               ##Sysmetrics.BtnText        </MenuText>
        <Scrollbar>              200 200 200                 </Scrollbar>
        <Window>                 255 255 255                 </Window>
        <WindowFrame>            100 100 100                 </WindowFrame>
        <WindowText>               0   0   0                 </WindowText>

        <!-- Fonts -->
        <CaptionFont>     Segoe UI, 9, Quality:ClearType</CaptionFont>
        <IconTitleFont>   ##Sysmetrics.MenuFont         </IconTitleFont>
        <MenuFont>        Segoe UI, 9, Quality:ClearType</MenuFont>
        <MsgBoxFont>      ##Sysmetrics.MenuFont         </MsgBoxFont>
        <SmallCaptionFont>Segoe UI, 9, Quality:ClearType</SmallCaptionFont>
        <StatusFont>      ##Sysmetrics.MenuFont         </StatusFont>

        <!-- Metrics -->
        <CaptionBarWidth>   19</CaptionBarWidth>
        <CaptionBarHeight>  19</CaptionBarHeight>
        <MenuBarWidth>      19</MenuBarWidth>
        <MenuBarHeight>     19</MenuBarHeight>
        <ScrollbarHeight>   17</ScrollbarHeight>
        <ScrollbarWidth>    17</ScrollbarWidth>
        <SizingBorderWidth> 1 </SizingBorderWidth>
        <SMCaptionBarHeight>17</SMCaptionBarHeight>
        <SMCaptionBarWidth> 17</SMCaptionBarWidth>
        <PaddedBorderWidth> 4 </PaddedBorderWidth>
    </sysmetrics>

    <!--
    //
    // Class Data
    //
    -->

    <!-- 
    //
    //    Aero Wizard Style, implemented by AeroWizard
    //
    -->
    <class name="AeroWizardStyle">
        <part name="Titlebar">
            <caption>
                <Font>##Sysmetrics.CaptionFont</Font>
                <ClassicValue type="Font">CaptionFont</ClassicValue>
            </caption>
        </part>
        <part name="HeaderArea">
            <caption>
                <Font>##TextStyle.MainInstruction.Font</Font>
                <TextColor>##TextStyle.MainInstruction.TextColor</TextColor>
                <ClassicValue type="TextColor">##TextStyle.MainInstruction.ClassicTextColor</ClassicValue>
                <ClassicValue type="Font">##TextStyle.MainInstruction.ClassicFont</ClassicValue>
            </caption>
            <colorhints>
                <FillColorHint>255 255 255</FillColorHint>
                <ClassicValue type="FillColorHint">threedface</ClassicValue>
            </colorhints>
        </part>
        <part name="Button">
            <caption>
                <Font>##TextStyle.ControlLabel.Font</Font>
                <TextColor>##TextStyle.ControlLabel.TextColor</TextColor>
                <ClassicValue type="TextColor">##TextStyle.ControlLabel.ClassicTextColor</ClassicValue>
                <ClassicValue type="Font">##TextStyle.ControlLabel.ClassicFont</ClassicValue>
            </caption>
        </part>
        <part name="ContentArea">
            <caption>
                <TextColor>##TextStyle.BodyText.TextColor</TextColor>
                <Font>##TextStyle.BodyText.Font</Font>
                <ClassicValue type="TextColor">##TextStyle.BodyText.ClassicTextColor</ClassicValue>
                <ClassicValue type="Font">##TextStyle.BodyText.ClassicFont</ClassicValue>
            </caption>
            <colorhints>
                <FillColorHint>255 255 255</FillColorHint>
                <ClassicValue type="FillColorHint">threedface</ClassicValue>
            </colorhints>
        </part>
        <!-- part name="CommandArea"></part-->
    </class>

    <!-- 
    //
    //    Button Style, implemented by Button
    //
    -->
    <class name="ButtonStyle">
        <part name="Checkbox">
            <colorhints>
                <AccentColorHint>54 89 152</AccentColorHint>
                <BorderColorHint>142 143 143</BorderColorHint>
                <FillColorHint>244 244 244</FillColorHint>
            </colorhints>
        </part>
        <!-- part name="CommandLink" -->
        <part name="Groupbox">
            <colorhints>
                <BorderColorHint>213 223 229</BorderColorHint>
            </colorhints>
        </part>
        <part name="Pushbutton">
            <colorhints>
                <AccentColorHint>54 89 152</AccentColorHint>
                <BorderColorHint>142 143 143</BorderColorHint>
                <FillColorHint>244 244 244</FillColorHint>
            </colorhints>
            <state name="Defaulted">
                <colorhints>
                    <AccentColorHint>4 204 255</AccentColorHint>
                </colorhints>
            </state>
        </part>
        <part name="Radiobutton">
            <colorhints>
                <AccentColorHint>54 89 152</AccentColorHint>
                <BorderColorHint>142 143 143</BorderColorHint>
                <FillColorHint>244 244 244</FillColorHint>
            </colorhints>
        </part>
        <!-- part name="CommandLinkGlyph"></part-->
    </class>

    <!-- 
    //
    //    ComboBox Style, implemented by ComboBox
    //
    -->
    <class name="ComboboxStyle">
        <colorhints>
            <BorderColorHint>171 173 179</BorderColorHint>
        </colorhints>
        <part name="DropDownButton">
            <colorhints>
                <BorderColorHint>102 102 102</BorderColorHint>
                <FillColorHint>244 244 244</FillColorHint>
            </colorhints>
        </part>
        <part name="DropDownButtonRight">
            <colorhints>
                <BorderColorHint>102 102 102</BorderColorHint>
                <FillColorHint>244 244 244</FillColorHint>
            </colorhints>
        </part>
        <part name="DropDownButtonLeft">
            <colorhints>
                <BorderColorHint>102 102 102</BorderColorHint>
                <FillColorHint>244 244 244</FillColorHint>
            </colorhints>
        </part>
        <part name="ReadOnly">
            <colorhints>
                <BorderColorHint>102 102 102</BorderColorHint>
                <FillColorHint>216 216 216</FillColorHint>
            </colorhints>
        </part>
        <!-- part name="Border"></part-->
        <!-- part name="CueBanner"></part-->
    </class>
    
    <!-- 
    //
    // Control Panel Style, implemented by ControlPanel
    //
    -->
    <class name="ControlPanelStyle">
    
        <!-- Static text in Control Panel content pane -->
        <part name="ContentPaneLabel">
            <caption>
                <TextColor>##TextStyle.Label.TextColor</TextColor>
                <Font>##TextStyle.Label.Font</Font>
                <ClassicValue type="TextColor">##TextStyle.Label.ClassicTextColor</ClassicValue>
                <ClassicValue type="Font">##TextStyle.Label.ClassicFont</ClassicValue>
            </caption>
        </part>
        
        <!-- Static text in Control Panel navigation pane -->
        <part name="NavigationPaneLabel">
            <caption>
                <TextColor>255 255 255</TextColor>
                <Font>##TextStyle.BodyTitle.Font</Font>
                <ClassicValue type="TextColor">##TextStyle.BodyTitle.ClassicTextColor</ClassicValue>
                <ClassicValue type="Font">##TextStyle.BodyTitle.ClassicFont</ClassicValue>
            </caption>
        </part>
        
        <!-- Instruction text in Control Panel content pane -->
        <part name="Title">
            <caption>
                <TextColor>##TextStyle.MainInstruction.TextColor</TextColor>
                <Font>##TextStyle.MainInstruction.Font</Font>
                <ClassicValue type="TextColor">##TextStyle.MainInstruction.ClassicTextColor</ClassicValue>
                <ClassicValue type="Font">##TextStyle.MainInstruction.ClassicFont</ClassicValue>
            </caption>
        </part>

        <!-- Static text in Control Panel content pane -->
        <part name="BodyText">
            <caption>
                <TextColor>##TextStyle.BodyText.TextColor</TextColor>
                <Font>##TextStyle.BodyText.Font</Font>
                <ClassicValue type="TextColor">##TextStyle.BodyText.ClassicTextColor</ClassicValue>
                <ClassicValue type="Font">##TextStyle.BodyText.ClassicFont</ClassicValue>
            </caption>
        </part>
        
        <!-- Static bold text in Control Panel content pane -->
        <part name="BodyTitle">
            <caption>
                <TextColor>##TextStyle.BodyTitle.TextColor</TextColor>
                <Font>##TextStyle.BodyTitle.Font</Font>
                <ClassicValue type="TextColor">##TextStyle.BodyTitle.ClassicTextColor</ClassicValue>
                <ClassicValue type="Font">##TextStyle.BodyTitle.ClassicFont</ClassicValue>
            </caption>
        </part>

        <!-- Help link text in Control Panel content pane -->
        <part name="HelpLink">
            <caption>
                <TextColor>##TextStyle.HyperlinkText.TextColor</TextColor>
                <Font>##TextStyle.HyperlinkText.Font</Font>
                <ClassicValue type="TextColor">HotLight</ClassicValue>
                <ClassicValue type="Font">##TextStyle.HyperlinkText.Normal.ClassicFont</ClassicValue>
            </caption>
            <state name="Normal">
                <caption>
                    <ClassicValue type="TextColor">HotLight</ClassicValue>
                    <ClassicValue type="Font">##TextStyle.HyperlinkText.Normal.ClassicFont</ClassicValue>
                </caption>
            </state>
            <state name="Hot">
                <caption>
                    <TextColor>##TextStyle.HyperlinkText.Hot.TextColor</TextColor>
                    <Font>##TextStyle.HyperlinkText.Hot.Font</Font>
                    <ClassicValue type="TextColor">##TextStyle.HyperlinkText.Hot.ClassicTextColor</ClassicValue>
                    <ClassicValue type="Font">##TextStyle.HyperlinkText.Hot.ClassicFont</ClassicValue>
                </caption>
            </state>
            <state name="Pressed">
                <caption>
                    <TextColor>##TextStyle.HyperlinkText.Pressed.TextColor</TextColor>
                    <Font>##TextStyle.HyperlinkText.Pressed.Font</Font>
                    <ClassicValue type="TextColor">HotLight</ClassicValue>
                    <ClassicValue type="Font">##TextStyle.HyperlinkText.Pressed.ClassicFont</ClassicValue>
                </caption>
            </state>
            <state name="Disabled">
                 <caption>
                    <TextColor>##TextStyle.HyperlinkText.Disabled.TextColor</TextColor>
                    <Font>##TextStyle.HyperlinkText.Disabled.Font</Font>
                    <ClassicValue type="TextColor">##TextStyle.HyperlinkText.Disabled.ClassicTextColor</ClassicValue>
                    <ClassicValue type="Font">##TextStyle.HyperlinkText.Disabled.ClassicFont</ClassicValue>
                </caption>
            </state>
        </part>
        
        <!-- Content link text in Control Panel content pane -->
        <part name="ContentLink">
            <caption>
                <TextColor>##TextStyle.HyperlinkText.TextColor</TextColor>
                <Font>##TextStyle.HyperlinkText.Font</Font>
                <ClassicValue type="TextColor">HotLight</ClassicValue>
                <ClassicValue type="Font">##TextStyle.HyperlinkText.Normal.ClassicFont</ClassicValue>
            </caption>
            <state name="Normal">
                <caption>
                    <ClassicValue type="TextColor">HotLight</ClassicValue>
                    <ClassicValue type="Font">##TextStyle.HyperlinkText.Normal.ClassicFont</ClassicValue>
                </caption>
            </state>
            <state name="Hot">
                <caption>
                    <TextColor>##TextStyle.HyperlinkText.Hot.TextColor</TextColor>
                    <Font>##TextStyle.HyperlinkText.Hot.Font</Font>
                    <ClassicValue type="TextColor">##TextStyle.HyperlinkText.Hot.ClassicTextColor</ClassicValue>
                    <ClassicValue type="Font">##TextStyle.HyperlinkText.Hot.ClassicFont</ClassicValue>
                </caption>
            </state>
            <state name="Pressed">
                <caption>
                    <TextColor>##TextStyle.HyperlinkText.Pressed.TextColor</TextColor>
                    <Font>##TextStyle.HyperlinkText.Pressed.Font</Font>
                    <ClassicValue type="TextColor">HotLight</ClassicValue>
                    <ClassicValue type="Font">##TextStyle.HyperlinkText.Pressed.ClassicFont</ClassicValue>
                </caption>
            </state>
            <state name="Disabled">
                 <caption>
                    <TextColor>##TextStyle.HyperlinkText.Disabled.TextColor</TextColor>
                    <Font>##TextStyle.HyperlinkText.Disabled.Font</Font>
                    <ClassicValue type="TextColor">##TextStyle.HyperlinkText.Disabled.ClassicTextColor</ClassicValue>
                    <ClassicValue type="Font">##TextStyle.HyperlinkText.Disabled.ClassicFont</ClassicValue>
                </caption>
            </state>
        </part>
        
        <!-- Navigation link text in Control Panel navigation pane -->
        <part name="TaskLink">
            <caption>
                <TextColor>255 255 255</TextColor>
                <Font>##TextStyle.HyperlinkText.Font</Font>
                <ClassicValue type="TextColor">HotLight</ClassicValue>
                <ClassicValue type="Font">##TextStyle.HyperlinkText.Normal.ClassicFont</ClassicValue>
            </caption>
            <state name="Normal">
                <caption>
                    <ClassicValue type="TextColor">HotLight</ClassicValue>
                    <ClassicValue type="Font">##TextStyle.HyperlinkText.Normal.ClassicFont</ClassicValue>
                </caption>
            </state>
            <state name="Hot">
                <caption>
                    <TextColor>217 243 243</TextColor>
                    <Font>##TextStyle.HyperlinkText.Hot.Font</Font>
                    <ClassicValue type="TextColor">HotLight</ClassicValue>
                    <ClassicValue type="Font">##TextStyle.HyperlinkText.Hot.ClassicFont</ClassicValue>
                </caption>
            </state>
            <state name="Pressed">
                <caption>
                    <TextColor>217 243 243</TextColor>
                    <Font>##TextStyle.HyperlinkText.Pressed.Font</Font>
                    <ClassicValue type="TextColor">HotLight</ClassicValue>
                    <ClassicValue type="Font">##TextStyle.HyperlinkText.Pressed.ClassicFont</ClassicValue>
                </caption>
            </state>
            <state name="Disabled">
                <!-- Caution disabled navigation link text color must show over the NavigationPane Fill -->
                <caption>
                    <TextColor>170 187 182</TextColor>
                    <Font>##TextStyle.HyperlinkText.Disabled.Font</Font>
                    <ClassicValue type="TextColor">##TextStyle.HyperlinkText.Disabled.ClassicTextColor</ClassicValue>
                    <ClassicValue type="Font">##TextStyle.HyperlinkText.Disabled.ClassicFont</ClassicValue>
                </caption>
            </state>
            <state name="Page">
                <caption>
                    <TextColor>255 255 255</TextColor>
                    <Font>Segoe UI Bold, 9, Quality:ClearType</Font>
                    <ClassicValue type="TextColor">WindowText</ClassicValue>
                    <ClassicValue type="Font">MenuFont;;bold</ClassicValue>
                </caption>
            </state>
        </part>

        <!-- Section title link text in Control Panel content pane -->
        <part name="SectionTitleLink">
            <caption>
                <TextColor>0 110 18</TextColor>
                <Font>Segoe UI, 12, Quality:ClearType</Font>
                <ClassicValue type="TextColor">HotLight</ClassicValue>
                <ClassicValue type="Font">CaptionFont</ClassicValue>
            </caption>
            <state name="Normal">
                <caption>
                    <ClassicValue type="TextColor">HotLight</ClassicValue>
                    <ClassicValue type="Font">CaptionFont</ClassicValue>
                </caption>
            </state>
            <state name="Hot">
                <caption>
                    <TextColor>0 174 29</TextColor>
                    <Font>Segoe UI, 12, Underline, Quality:ClearType</Font>
                    <ClassicValue type="TextColor">HotLight</ClassicValue>
                    <ClassicValue type="Font">CaptionFont;;;underline</ClassicValue>
                </caption>
            </state>
        </part>
        
        <!-- Grouping label text in Control Panel content pane -->
        <part name="GroupText">
            <caption>
                <TextColor>##TextStyle.BodyText.TextColor</TextColor>
                <Font>##TextStyle.BodyText.Font</Font>
                <ClassicValue type="TextColor">##TextStyle.BodyText.ClassicTextColor</ClassicValue>
                <ClassicValue type="Font">##TextStyle.BodyText.ClassicFont</ClassicValue>
            </caption>
        </part>
        
        <!-- Control Panel content pane -->
        <part name="ContentPane">
            <colorhints>
                <FillColorHint>255 255 255</FillColorHint>
                <ClassicValue type="FillColorHint">window</ClassicValue>
            </colorhints>
        </part>
        
        <!-- Control Panel content pane divider line -->
        <part name="ContentPaneLine">
            <colorhints>
                <FillColorHint>204 204 204</FillColorHint>
                <ClassicValue type="FillColorHint">buttonshadow</ClassicValue>
            </colorhints>
        </part>
        
        <!-- Control Panel banner background -->
        <part name="BannerArea">
            <colorhints>
                <FillColorHint>255 255 198</FillColorHint>
                <ClassicValue type="FillColorHint">window</ClassicValue>
            </colorhints>
        </part>
        
        <!-- Control Panel navigation pane -->
        <part name="NavigationPane">
            <colorhints>
                <FillColorHint>86 147 138</FillColorHint>
                <ClassicValue type="FillColorHint">window</ClassicValue>
            </colorhints>
        </part>
        
        <!-- Control Panel navigation pane divider line -->
        <part name="NavigationPaneLine">
            <colorhints>
                <FillColorHint>101 162 150</FillColorHint>
                <ClassicValue type="FillColorHint">buttonshadow</ClassicValue>
            </colorhints>
        </part>
        
        <!-- Control Panel command button area used with large content panes -->
        <part name="LargeCommandArea">
            <colorhints>
                <FillColorHint>240 240 240</FillColorHint>
                <ClassicValue type="FillColorHint">window</ClassicValue>
            </colorhints>
        </part>
        
        <!-- Control Panel command button area used with small content panes -->
        <part name="SmallCommandArea">
            <colorhints>
                <FillColorHint>255 255 255</FillColorHint>
                <ClassicValue type="FillColorHint">window</ClassicValue>
            </colorhints>
        </part>
        
        <!-- Control Panel pushbuttons -->
        <part name="Button">
            <caption>
                <TextColor>##TextStyle.ControlLabel.TextColor</TextColor>
                <Font>##TextStyle.ControlLabel.Font</Font>
                <ClassicValue type="TextColor">##TextStyle.ControlLabel.ClassicTextColor</ClassicValue>
                <ClassicValue type="Font">##TextStyle.ControlLabel.ClassicFont</ClassicValue>
            </caption>
        </part>

        <!-- Message text in Control Panel content pane -->
        <part name="MessageText">
            <caption>
                <TextColor>0 0 0</TextColor>
                <Font>##TextStyle.MainInstruction.Font</Font>
                <ClassicValue type="TextColor">##TextStyle.MainInstruction.ClassicTextColor</ClassicValue>
                <ClassicValue type="Font">##TextStyle.MainInstruction.ClassicFont</ClassicValue>
            </caption>
        </part>
    </class>
    
    <!-- 
    //
    //    DatePicker Style, implemented by DatePicker
    //
    -->
    <class name="DatePickerStyle">
        <part name="ShowCalendarButtonRight">
            <colorhints>
                <BorderColorHint>130 135 144</BorderColorHint>
                <FillColorHint>255 255 255</FillColorHint>
            </colorhints>
        </part>
        <!-- part name="ShowNoneCheckbox"></part-->
    </class>

    <!-- 
    //
    //    DragDrop Style, implemented by DragDrop
    //
    -->
    <class name="DragDropStyle">
        <part name="Copy">
            <colorhints>
                <BorderColorHint>255 255 255</BorderColorHint>
                <FillColorHint>0 103 205</FillColorHint>
            </colorhints>
        </part>
        <part name="Move">
            <colorhints>
                <BorderColorHint>255 255 255</BorderColorHint>
                <FillColorHint>0 103 205</FillColorHint>
            </colorhints>
        </part>
        <part name="UpdateMetaData">
            <colorhints>
                <BorderColorHint>255 255 255</BorderColorHint>
                <FillColorHint>0 103 205</FillColorHint>
            </colorhints>
        </part>
        <part name="CreateLink">
            <colorhints>
                <BorderColorHint>255 255 255</BorderColorHint>
                <FillColorHint>0 103 205</FillColorHint>
            </colorhints>
        </part>
        <part name="Warning">
            <colorhints>
                <BorderColorHint>255 255 255</BorderColorHint>
                <FillColorHint>249 199 0</FillColorHint>
            </colorhints>
        </part>
        <part name="None">
            <colorhints>
                <BorderColorHint>255 255 255</BorderColorHint>
                <FillColorHint>227 49 49</FillColorHint>
            </colorhints>
        </part>
    </class>

    <!-- 
    //
    //    Edit Style, implemented by Edit
    //
    -->
    <class name="EditStyle">
        <colorhints>
            <BorderColorHint>171 173 179</BorderColorHint>
            <FillColorHint>255 255 255</FillColorHint>
        </colorhints>
        <!-- part name="Background"></part-->
        <!-- part name="Edittext"></part-->
        <!-- part name="Password"></part-->
        <!-- part name="EditBorder_NoScroll"></part-->
        <!-- part name="EditBorder_HScroll"></part-->
        <!-- part name="EditBorder_VScroll"></part-->
        <!-- part name="EditBorder_HVScroll"></part-->
    </class>

    <!-- 
    //
    //    ExplorerBar Style, implemented by ExplorerBar
    //
    -->
    <class name="ExplorerBarStyle">
        <part name="HeaderBackground">
            <colorhints>
                <FillColorHint>140 140 140</FillColorHint>
            </colorhints>
        </part>
        <!-- part name="HeaderClose"></part-->
        <!-- part name="HeaderPin"></part-->
        <!-- part name="IEBarMenu"></part-->
        <!-- part name="NormalGroupBackground"></part-->
        <!-- part name="NormalGroupCollapse"></part-->
        <!-- part name="NormalGroupExpand"></part-->
        <!-- part name="NormalGroupHead"></part-->
        <!-- part name="SpecialGroupBackground"></part-->
        <!-- part name="SpecialGroupCollapse"></part-->
        <!-- part name="SpecialGroupExpand"></part-->
        <!-- part name="SpecialGroupHead"></part-->
    </class>

    <!-- 
    //
    //    Flyout Style, implemented by Flyout
    //
    -->
    <class name="FlyoutStyle">
         <part name="Header">
            <caption>
                <TextColor>87 87 87</TextColor>
                <Font>Segoe UI, 10, Quality:ClearType</Font>
                <ClassicValue type="TextColor">##TextStyle.BodyText.ClassicTextColor</ClassicValue>
                <ClassicValue type="Font">##TextStyle.BodyText.ClassicFont</ClassicValue>
            </caption>
        </part>
        <part name="Body">
            <caption>
                <TextColor>87 87 87</TextColor>
                <Font>##TextStyle.BodyText.Font</Font>
                <ClassicValue type="TextColor">##TextStyle.BodyText.ClassicTextColor</ClassicValue>
                <ClassicValue type="Font">##TextStyle.BodyText.ClassicFont</ClassicValue>
            </caption>
            <state name="Normal">
                <caption>
                    <ClassicValue type="TextColor">##TextStyle.BodyText.ClassicTextColor</ClassicValue>
                    <ClassicValue type="Font">##TextStyle.BodyText.ClassicFont</ClassicValue>
                </caption>
            </state>
            <state name="Emphasized">
                <caption>
                    <TextColor>0 0 0</TextColor>
                    <ClassicValue type="TextColor">##TextStyle.Label.ClassicTextColor</ClassicValue>
                    <ClassicValue type="Font">##TextStyle.Label.ClassicFont</ClassicValue>
                </caption>
            </state>
        </part>
        <part name="Label">
            <caption>
                <TextColor>##TextStyle.Label.TextColor</TextColor>
                <Font>##TextStyle.Label.Font</Font>
                <ClassicValue type="TextColor">##TextStyle.Label.ClassicTextColor</ClassicValue>
                <ClassicValue type="Font">##TextStyle.Label.ClassicFont</ClassicValue>
            </caption>
            <state name="Normal">
                <caption>
                    <ClassicValue type="TextColor">##TextStyle.Label.ClassicTextColor</ClassicValue>
                    <ClassicValue type="Font">##TextStyle.Label.ClassicFont</ClassicValue>
                </caption>
            </state>
            <state name="Selected">
            </state>
            <state name="Emphasized">
                <TextColor>19 112 171</TextColor>
                <ClassicValue type="TextColor">WindowText</ClassicValue>
            </state>
            <state name="Disabled">
                <TextColor>##SysMetrics.GrayText</TextColor>
                <ClassicValue type="TextColor">GrayText</ClassicValue>
            </state>
        </part>
        <part name="Link">
            <caption>
                <TextColor>0 102 204</TextColor>
                <Font>##TextStyle.HyperlinkText.Font</Font>
                <ClassicValue type="TextColor">##TextStyle.HyperlinkText.Normal.ClassicTextColor</ClassicValue>
                <ClassicValue type="Font">##TextStyle.HyperlinkText.Normal.ClassicFont</ClassicValue>
            </caption>
            <state name="Normal">
                <caption>
                    <ClassicValue type="TextColor">##TextStyle.HyperlinkText.Normal.ClassicTextColor</ClassicValue>
                    <ClassicValue type="Font">##TextStyle.HyperlinkText.Normal.ClassicFont</ClassicValue>
                </caption>
            </state>
            <state name="Hover">
                <caption>
                    <Font>##TextStyle.HyperlinkText.Hot.Font</Font>
                    <ClassicValue type="Font">##TextStyle.HyperlinkText.Hot.ClassicFont</ClassicValue>
                </caption>
            </state>
        </part>
        <part name="LinkHeader">
            <caption>
                <TextColor>##Flyoutstyle.Link.TextColor</TextColor>
                <Font>##FlyoutStyle.Header.Font</Font>
                <ClassicValue type="TextColor">##TextStyle.HyperlinkText.Normal.ClassicTextColor</ClassicValue>
                <ClassicValue type="Font">##TextStyle.HyperlinkText.Normal.ClassicFont</ClassicValue>
            </caption>
            <state name="Normal">
                <caption>
                    <ClassicValue type="TextColor">##TextStyle.HyperlinkText.Normal.ClassicTextColor</ClassicValue>
                    <ClassicValue type="Font">##TextStyle.HyperlinkText.Normal.ClassicFont</ClassicValue>
                </caption>
            </state>
            <state name="Hover">
                <caption>
                    <Font>##FlyoutStyle.Header.Font</Font>
                    <ClassicValue type="Font">##TextStyle.HyperlinkText.Hot.ClassicFont</ClassicValue>
                </caption>
            </state>
        </part>
        <part name="Window">
            <colorhints>
                <FillColorHint>255 255 255</FillColorHint>
                <BorderSize>0</BorderSize> 
            </colorhints>
        </part>
        <part name="LinkArea">
            <colorhints>
                <FillColorHint>##SysMetrics.BtnFace</FillColorHint>
            </colorhints>
        </part>
        <!-- part name="Divider"></part-->
    </class>

    <!-- 
    //
    //    Header Style, implemented by Header
    //
    -->
    <class name="HeaderStyle">
        <part name="HeaderItem">
            <colorhints>
                <AccentColorHint>102 188 225</AccentColorHint>
                <FillColorHint>244 244 244</FillColorHint>
            </colorhints>
        </part>
        <part name="HeaderDropDown">
            <colorhints>
                <AccentColorHint>191 191 191</AccentColorHint>
                <FillColorHint>244 244 244</FillColorHint>
            </colorhints>
        </part>
        <part name="HeaderOverflow">
            <colorhints>
                <AccentColorHint>191 191 191</AccentColorHint>
                <FillColorHint>244 244 244</FillColorHint>
            </colorhints>
        </part>
        <!-- part name="HeaderSortArrow"></part-->
    </class>

    <!-- 
    //
    //    ListBox Style, implemented by ListBox
    //
    -->
    <class name="ListboxStyle">
        <colorhints>
            <FillColorHint>255 255 255</FillColorHint>
            <BorderColorHint>130 135 144</BorderColorHint>
            <AccentColorHint>54 89 152</AccentColorHint>
        </colorhints>
        <!-- part name="Border_HScroll"></part-->
        <!-- part name="Border_HVScroll"></part-->
        <!-- part name="Border_NoScroll"></part-->
        <!-- part name="Border_VScroll"></part-->
    </class>

    <!-- 
    //
    //    Listview Style, implemented by Listview 
    //
    -->
    <class name="ListViewStyle">
        <part name="GroupHeader">
            <colorhints>
                <AccentColorHint>185 229 242</AccentColorHint>
                <FillColorHint>94 131 191</FillColorHint>
            </colorhints>
        </part>
        <!-- part name="GroupHeaderLine"></part-->
        <!-- part name="ExpandButton"></part-->
        <!-- part name="CollapseButton"></part-->
        <!-- part name="ColumnDetail"></part-->
    </class>
    <!-- 
    // Listitem implements the Explorer selection visuals,
    // use SetWindowTheme(hWndListView, L"Explorer") to get
    // this new appearance in your listview
    -->
    <!--class name="Explorer::Listview" inherits="Listview">
        <part name="Listitem"></part>
    </class-->

    <!-- 
    //
    //    Menu Style, implemented by Menu
    //
    -->
    <class name="MenuStyle">
        <part name="BarBackground">
            <colorhints>
                <FillColorHint>244 244 244</FillColorHint>
            </colorhints>
        </part>
        <part name="PopupBackground">
            <colorhints>
                <FillColorHint>244 244 244</FillColorHint>
            </colorhints>
        </part>
        <part name="PopupGutter">
            <colorhints>
                <FillColorHint>240 240 240</FillColorHint>
            </colorhints>
        </part>
        <!-- part name="BarItem"></part-->
        <!-- part name="PopupBorders"></part-->
        <!-- part name="PopupCheck"></part-->
        <!-- part name="PopupCheckBackground"></part-->
        <!-- part name="PopupItem"></part-->
        <!-- part name="PopupSeparator"></part-->
        <!-- part name="PopupSubmenu"></part-->
        <!-- part name="SystemClose"></part-->
        <!-- part name="SystemMaximize"></part-->
        <!-- part name="SystemMinimize"></part-->
        <!-- part name="SystemRestore"></part-->
    </class>

    <!-- 
    //
    //    Navigation class
    //
    //    This class has only bitmaps for now, so doesn't implement any style.
    //    Use DrawThemeBackground() or GetThemeBitmap() to retrieve the bitmaps.
    //
    -->
    <!--class name="Navigation"-->
        <!-- part name="BackButton"></part-->
        <!-- part name="ForwardButton"></part-->
        <!-- part name="MenuButton"></part-->
    <!--/class-->

    <!--
    //
    //    Progress Style, implemented by Progress
    //
    -->
    <class name="ProgressStyle">
        <part name="TransparentBar">
            <colorhints>
                <BorderColorHint>104 104 104</BorderColorHint>
                <FillColorHint>255 255 255</FillColorHint>
            </colorhints>
        </part>
        <part name="Fill">
            <colorhints>
                <FillColorHint>82 215 99</FillColorHint>
            </colorhints>
            <state name="Error">
                <colorhints>
                    <FillColorHint>228 0 33</FillColorHint>
                </colorhints>
            </state>
            <state name="Paused">
                <colorhints>
                    <FillColorHint>220 212 0</FillColorHint>
                </colorhints>
            </state>
            <state name="Partial">
                <colorhints>
                    <FillColorHint>0 148 173</FillColorHint>
                </colorhints>
            </state>
        </part>
        <!-- Bar and BarVert have been deprecated -->
        <!-- part name="Bar"></part-->
        <!-- part name="BarVert"></part-->
        <!-- Chunk and ChunkVert have been deprecated -->
        <!-- part name="Chunk"></part-->
        <!-- part name="ChunkVert"></part-->
        <!-- part name="FillVert"></part-->
        <!-- part name="MoveOverlay"></part-->
        <!-- part name="MoveOverlayVert"></part-->
        <!-- part name="PulseOverlay"></part-->
        <!-- part name="PulseOverlayVert"></part-->
        <!-- part name="TransparentBarVert"></part-->
    </class>

    <!-- 
    //
    //    Rebar Style, implemented by Rebar
    //
    -->
    <class name="RebarStyle">
        <colorhints>
            <FillColorHint>233 237 249</FillColorHint>
        </colorhints>
        <part name="Gripper">
            <colorhints>
                <FillColorHint>128 131 137</FillColorHint>
            </colorhints>
        </part>
        <part name="Chevron">
            <colorhints>
                <FillColorHint>0 0 0</FillColorHint>
            </colorhints>
        </part>
        <!-- part name="Background"></part-->
        <!-- part name="Band"></part-->
        <!-- part name="GripperVert"></part-->
        <!-- part name="ChevronVert"></part-->
        <!-- part name="Splitter"></part-->
        <!-- part name="SplitterVert"></part-->
    </class>

    <!-- 
    //
    //    Themed Experiences
    //
    //    Communications::Rebar implements a communication toolbar background
    //    Media::Rebar implements a Media toolbar background, coordinated with the MediaStyle
    //
    //    Use SetWindowTheme(hWndRebar, L"Communications") (or "Media") to apply
    //    those styles to your rebar, and use SetWindowTheme(hWnd, L"Alternate") on the toolbar
    //    to get white text instead of the default color.
    //
    -->
    
    <!-- 
    //
    //    Media Gradient Colors
    //
    -->
    <class name="MediaStyle">
        <colorhints>
            <FillColorHint>238 243 250</FillColorHint>
            <AccentColorHint>207 218 231</AccentColorHint>
        </colorhints>
    </class>

    <!-- 
    //
    //    Communications Gradient Colors
    //
    -->
    
    <class name="CommunicationsStyle">
        <part name="Tab">
            <state name="Normal">
                <colorhints>
                    <FillColorHint>10 76 134</FillColorHint>
                    <AccentColorHint>59 145 232</AccentColorHint>
                    <ClassicValue type="FillColorHint">ButtonShadow</ClassicValue>
                    <ClassicValue type="AccentColorHint">ButtonFace</ClassicValue>
                </colorhints>
            </state>
            <state name="Hot">
                <colorhints>
                   <FillColorHint>56 151 234</FillColorHint>
                   <AccentColorHint>148 201 254</AccentColorHint>
                   <ClassicValue type="FillColorHint">ButtonFace</ClassicValue>
                   <ClassicValue type="AccentColorHint">ButtonHighlight</ClassicValue>
                </colorhints>
             </state>
             <state name="Selected">
                 <colorhints>
                     <FillColorHint>1 37 69</FillColorHint>
                     <AccentColorHint>18 87 157</AccentColorHint>
                     <ClassicValue type="FillColorHint">ButtonShadow</ClassicValue>
                     <ClassicValue type="AccentColorHint">ButtonFace</ClassicValue>
                </colorhints>
             </state>

        </part>
    </class>
    

    <!-- 
    //
    //    Scrollbar Style, implemented by Scrollbar
    //
    -->
    <class name="ScrollbarStyle">
        <part name="ArrowBtn">
            <colorhints>
                <FillColorHint>244 244 244</FillColorHint>
                <BorderColorHint>130 135 144</BorderColorHint>
            </colorhints>
        </part>
        <part name="LowerTrackHorz">
            <colorhints>
                <FillColorHint>244 244 244</FillColorHint>
            </colorhints>
        </part>
        <part name="LowerTrackVert">
            <colorhints>
                <FillColorHint>244 244 244</FillColorHint>
            </colorhints>
        </part>
        <part name="SizeBox">
            <colorhints>
                <FillColorHint>120 120 120</FillColorHint>
            </colorhints>
        </part>
        <part name="ThumbBtnHorz">
            <colorhints>
                <BorderColorHint>255 255 255</BorderColorHint>
                <FillColorHint>171 175 218</FillColorHint>
            </colorhints>
        </part>
        <part name="ThumbBtnVert">
            <colorhints>
                <BorderColorHint>255 255 255</BorderColorHint>
                <FillColorHint>171 175 218</FillColorHint>
            </colorhints>
        </part>
        <part name="UpperTrackHorz">
            <colorhints>
                <FillColorHint>244 244 244</FillColorHint>
            </colorhints>
        </part>
        <part name="UpperTrackVert">
            <colorhints>
                <FillColorHint>244 244 244</FillColorHint>
            </colorhints>
        </part>
        <!-- part name="GripperHorz"></part-->
        <!-- part name="GripperVert"></part-->
    </class>

    <!-- 
    //
    //    Spin Style, implemented by Spin
    //
    -->
    <class name="SpinStyle">
        <part name="Down">
            <colorhints>
                <BorderColorHint>130 135 144</BorderColorHint>
                <FillColorHint>244 244 244</FillColorHint>
            </colorhints>
        </part>
        <part name="DownHorz">
            <colorhints>
                <BorderColorHint>130 135 144</BorderColorHint>
                <FillColorHint>244 244 244</FillColorHint>
            </colorhints>
        </part>
        <part name="Up">
            <colorhints>
                <BorderColorHint>130 135 144</BorderColorHint>
                <FillColorHint>244 244 244</FillColorHint>
            </colorhints>
        </part>
        <part name="UpHorz">
            <colorhints>
                <BorderColorHint>130 135 144</BorderColorHint>
                <FillColorHint>244 244 244</FillColorHint>
            </colorhints>
        </part>
    </class>

    <!-- 
    //
    //    Status Style, implemented by Status
    //
    -->
    <class name="StatusStyle">
        <part name="Gripper">
            <colorhints>
                <FillColorHint>119 119 192</FillColorHint>
            </colorhints>
        </part>
        <part name="Pane">
            <colorhints>
                <FillColorHint>119 119 92</FillColorHint>
            </colorhints>
        </part>
        <colorhints>
            <FillColorHint>177 183 187</FillColorHint>
        </colorhints>
        <!-- part name="GripperPane"></part-->
    </class>

    <!-- 
    //
    //    Tab Style, implemented by Tab
    //
    -->
    <class name="TabStyle">
        <part name="Body">
            <colorhints>
                <FillColorHint>244 244 244</FillColorHint>
            </colorhints>
        </part>
        <part name="AeroWizardBody">
            <colorhints>
                <FillColorHint>255 255 255</FillColorHint>
            </colorhints>
        </part>
        <part name="Pane">
            <colorhints>
                <BorderColorHint>145 155 156</BorderColorHint>
                <FillColorHint>247 247 249</FillColorHint>
            </colorhints>
        </part>
        <part name="TabItem">
            <colorhints>
                <AccentColorHint>255 200 60</AccentColorHint>
                <BorderColorHint>146 146 146</BorderColorHint>
                <FillColorHint>240 241 245</FillColorHint>
            </colorhints>
        </part>
        <!-- part name="TabItemBothEdge"></part-->
        <!-- part name="TabItemLeftEdge"></part-->
        <!-- part name="TabItemRightEdge"></part-->
        <!-- part name="TopTabItem"></part-->
        <!-- part name="TopTabItemBothEdge"></part-->
        <!-- part name="TopTabItemLeftEdge"></part-->
        <!-- part name="TopTabItemRightEdge"></part-->
    </class>

    <!-- 
      //
      //    Task Dialog Style, implemented by TaskDialog
      //
      -->
    <class name="TaskDialogStyle">
        <part name="MainInstructionPane">
            <Font>##TextStyle.MainInstruction.Font</Font>
            <TextColor>##TextStyle.MainInstruction.TextColor</TextColor>
            <ClassicValue type="Font">##TextStyle.MainInstruction.ClassicFont</ClassicValue>
            <ClassicValue type="TextColor">##TextStyle.MainInstruction.ClassicTextColor</ClassicValue>
        </part>
        <part name="ContentPane">
            <Font>##TextStyle.BodyText.Font</Font>
            <TextColor>##TextStyle.BodyText.TextColor</TextColor>
            <ClassicValue type="Font">##TextStyle.BodyText.ClassicFont</ClassicValue>
            <ClassicValue type="TextColor">##TextStyle.BodyText.ClassicTextColor</ClassicValue>
        </part>
        <part name="ExpandedContent">
            <Font>##TextStyle.BodyText.Font</Font>
            <TextColor>##TextStyle.BodyText.TextColor</TextColor>
            <ClassicValue type="Font">##TextStyle.BodyText.ClassicFont</ClassicValue>
            <ClassicValue type="TextColor">##TextStyle.BodyText.ClassicTextColor</ClassicValue>
        </part>
        <part name="ButtonSection">
            <Font>##TextStyle.BodyText.Font</Font>
            <TextColor>##TextStyle.BodyText.TextColor</TextColor>
            <ClassicValue type="Font">##TextStyle.BodyText.ClassicFont</ClassicValue>
            <ClassicValue type="TextColor">##TextStyle.BodyText.ClassicTextColor</ClassicValue>
        </part>
        <part name="ExpandoText">
            <Font>##TextStyle.BodyText.Font</Font>
            <TextColor>##TextStyle.BodyText.TextColor</TextColor>
            <ClassicValue type="Font">##TextStyle.BodyText.ClassicFont</ClassicValue>
            <ClassicValue type="TextColor">##TextStyle.BodyText.ClassicTextColor</ClassicValue>
        </part>
        <part name="ExpandedFooterArea">
            <Font>##TextStyle.BodyText.Font</Font>
            <TextColor>##TextStyle.BodyText.TextColor</TextColor>
            <ClassicValue type="Font">##TextStyle.BodyText.ClassicFont</ClassicValue>
            <ClassicValue type="TextColor">##TextStyle.BodyText.ClassicTextColor</ClassicValue>
        </part>
        <part name="VerificationText">
            <Font>##TextStyle.BodyText.Font</Font>
            <TextColor>##TextStyle.BodyText.TextColor</TextColor>
            <ClassicValue type="Font">##TextStyle.BodyText.ClassicFont</ClassicValue>
            <ClassicValue type="TextColor">##TextStyle.BodyText.ClassicTextColor</ClassicValue>
        </part>
        <part name="FootnotePane">
            <Font>##TextStyle.BodyText.Font</Font>
            <TextColor>##TextStyle.BodyText.TextColor</TextColor>
            <ClassicValue type="Font">##TextStyle.BodyText.ClassicFont</ClassicValue>
            <ClassicValue type="TextColor">##TextStyle.BodyText.ClassicTextColor</ClassicValue>
        </part>
        <part name="RadioButtonPane">
            <Caption>
                <Font>##TextStyle.BodyText.Font</Font>
                <TextColor>##TextStyle.BodyText.TextColor</TextColor>
                <ClassicValue type="Font">##TextStyle.BodyText.ClassicFont</ClassicValue>
                <ClassicValue type="TextColor">##TextStyle.BodyText.ClassicTextColor</ClassicValue>
            </Caption>
        </part>
      <!-- part name="PrimaryPanel"></part-->
      <!-- part name="MainIcon"></part-->
      <!-- part name="CommandLinkPane"></part-->
      <!-- part name="SecondaryPanel"></part-->
      <!-- part name="ControlPane"></part-->
      <!-- part name="ButtonWrapper"></part-->
      <!-- part name="ExpandoButton"></part-->
      <!-- part name="FootnoteSeparator"></part-->
      <!-- part name="ProgressBar"></part-->
      <!-- part name="ImageAlignment"></part-->
    </class>

    <!-- 
    //
    //    Abstract Text Style class
    //
    -->
    <class name="TextStyle">
        <part name="MainInstruction">
            <caption>
                <TextColor>0 51 153</TextColor>
                <Font>Segoe UI, 12, Quality:ClearType</Font>
                <ClassicValue type="TextColor">WindowText</ClassicValue>
                <ClassicValue type="Font">CaptionFont</ClassicValue>
            </caption>
        </part>
        <part name="Instruction">
            <caption>
                <TextColor>0 51 153</TextColor>
                <Font>Segoe UI, 9, Quality:ClearType</Font>
                <ClassicValue type="TextColor">WindowText</ClassicValue>
                <ClassicValue type="Font">MenuFont</ClassicValue>
            </caption>
        </part>
        <part name="BodyTitle">
            <caption>
                <TextColor>0 0 0</TextColor>
                <Font>Segoe UI Bold, 9, Quality:ClearType</Font>
                <ClassicValue type="TextColor">WindowText</ClassicValue>
                <ClassicValue type="Font">MenuFont;;bold</ClassicValue>
            </caption>
        </part>
        <part name="BodyText">
            <caption>
                <TextColor>0 0 0</TextColor>
                <Font>Segoe UI, 9, Quality:ClearType</Font>
                <ClassicValue type="TextColor">WindowText</ClassicValue>
                <ClassicValue type="Font">MenuFont</ClassicValue>
            </caption>
        </part>
        <part name="SecondaryText">
            <caption>
                <TextColor>0 0 0</TextColor>
                <Font>Segoe UI, 9, Quality:ClearType</Font>
                <ClassicValue type="TextColor">WindowText</ClassicValue>
                <ClassicValue type="Font">MenuFont</ClassicValue>
            </caption>
        </part>
        <part name="HyperLinkText">
            <caption>
                <TextColor>0 102 204</TextColor>
                <Font>Segoe UI, 9, Quality:ClearType</Font>
                <ClassicValue type="TextColor">WindowText</ClassicValue>
                <ClassicValue type="Font">MenuFont</ClassicValue>
            </caption>
            <state name="Normal">
                <caption>
                    <ClassicValue type="TextColor">WindowText</ClassicValue>
                    <ClassicValue type="Font">MenuFont</ClassicValue>
                </caption>
            </state>
            <state name="Hot">
                <caption>
                    <TextColor>51 153 255</TextColor>
                    <Font>Segoe UI, 9, Underline, Quality:ClearType</Font>
                    <ClassicValue type="TextColor">HotLight</ClassicValue>
                    <ClassicValue type="Font">MenuFont;;;underline</ClassicValue>
                </caption>
            </state>
            <state name="Pressed">
                <caption>
                    <TextColor>51 153 255</TextColor>
                    <Font>Segoe UI, 9, Underline, Quality:ClearType</Font>
                    <ClassicValue type="TextColor">WindowText</ClassicValue>
                    <ClassicValue type="Font">MenuFont;;;underline</ClassicValue>
                </caption>
            </state>
            <state name="Disabled">
                <caption>
                    <TextColor>126 133 156</TextColor>
                    <Font>Segoe UI, 9, Quality:ClearType</Font>
                    <ClassicValue type="TextColor">GrayText</ClassicValue>
                    <ClassicValue type="Font">MenuFont</ClassicValue>
                </caption>
            </state>
        </part>
        <part name="Expanded">
            <caption>
                <TextColor>0 0 0</TextColor>
                <Font>Segoe UI, 9, Quality:ClearType</Font>
                <ClassicValue type="TextColor">WindowText</ClassicValue>
                <ClassicValue type="Font">MenuFont</ClassicValue>
            </caption>
        </part>
        <part name="Label">
            <caption>
                <TextColor>0 0 0</TextColor>
                <Font>Segoe UI, 9, Quality:ClearType</Font>
                <ClassicValue type="TextColor">WindowText</ClassicValue>
                <ClassicValue type="Font">MenuFont</ClassicValue>
            </caption>
        </part>
        <part name="ControlLabel">
            <caption>
                <TextColor>0 102 204</TextColor>
                <Font>Segoe UI, 9, Quality:ClearType</Font>
                <ClassicValue type="TextColor">WindowText</ClassicValue>
                <ClassicValue type="Font">MenuFont</ClassicValue>
            </caption>
            <state name="Disabled">
                <TextColor>126, 133, 156</TextColor>
                <ClassicValue type="TextColor">GrayText</ClassicValue>
            </state>
        </part>
    </class>

    <!-- 
    //
    //    Toolbar Style, implemented by Toolbar
    //
    -->
    <class name="ToolbarStyle">
        <part name="Button">
            <colorhints>
                <BorderColorHint>130 135 144</BorderColorHint>
                <FillColorHint>244 244 244</FillColorHint>
            </colorhints>
        </part>
        <part name="Separator">
            <colorhints>
                <FillColorHint>130 135 144</FillColorHint>
            </colorhints>
        </part>
        <part name="DropdownButton">
            <colorhints>
                <BorderColorHint>130 135 144</BorderColorHint>
                <FillColorHint>244 244 244</FillColorHint>
            </colorhints>
        </part>
        <part name="SplitButton">
            <colorhints>
                <BorderColorHint>119 119 92</BorderColorHint>
                <FillColorHint>240 241 245</FillColorHint>
            </colorhints>
        </part>
        <part name="SplitButtonDropdown">
            <colorhints>
                <BorderColorHint>119 119 92</BorderColorHint>
                <FillColorHint>240 241 245</FillColorHint>
            </colorhints>
        </part>
        <!-- part name="SeparatorVert"></part-->
    </class>

    <!-- 
    //
    //    Tooltip Style, implemented by Tooltip
    //
    -->
    <class name="TooltipStyle">
        <part name="Standard">
            <caption>
                <Font>##TextStyle.BodyText.Font</Font>
                <TextColor>87 87 87</TextColor>
                <ClassicValue type="TextColor">##TextStyle.BodyText.ClassicTextColor</ClassicValue>
                <ClassicValue type="Font">##TextStyle.BodyText.ClassicFont</ClassicValue>
            </caption>
        </part>
        <part name="StandardTitle">
            <caption>
                <Font>##TextStyle.BodyTitle.Font</Font>
                <TextColor>87 87 87</TextColor>
                <ClassicValue type="TextColor">##TextStyle.BodyText.ClassicTextColor</ClassicValue>
                <ClassicValue type="Font">##TextStyle.BodyText.ClassicFont</ClassicValue>
            </caption>
        </part>
        <part name="Balloon">
            <caption>
                <Font>##TextStyle.BodyText.Font</Font>
                <TextColor>##TextStyle.BodyText.TextColor</TextColor>
                <ClassicValue type="TextColor">##TextStyle.BodyText.ClassicTextColor</ClassicValue>
                <ClassicValue type="Font">##TextStyle.BodyText.ClassicFont</ClassicValue>
            </caption>
            <colorhints>
                <BorderColorHint>130 135 144</BorderColorHint>
                <FillColorHint>233 233 244</FillColorHint>
            </colorhints>
        </part>
        <part name="BalloonTitle">
            <caption>
                <Font>##TextStyle.MainInstruction.Font</Font>
                <TextColor>##TextStyle.MainInstruction.TextColor</TextColor>
                <ClassicValue type="TextColor">##TextStyle.BodyText.ClassicTextColor</ClassicValue>
                <ClassicValue type="Font">##TextStyle.BodyText.ClassicFont</ClassicValue>
            </caption>
        </part>
        <!-- part name="Close"></part-->
        <!-- part name="BalloonStem"></part-->
    </class>

    <!-- 
    //
    //    Trackbar Style, implemented by Trackbar
    //
    -->
    <class name="TrackBarStyle">
        <part name="Thumb">
            <colorhints>
                <AccentColorHint>71 196 70</AccentColorHint>
                <BorderColorHint>118 118 118</BorderColorHint>
                <FillColorHint>244 244 244</FillColorHint>
            </colorhints>
        </part>
        <part name="Track">
            <colorhints>
                <BorderColorHint>118 118 118</BorderColorHint>
                <FillColorHint>244 244 244</FillColorHint>
            </colorhints>
        </part>
        <!-- part name="ThumbBottom"></part-->
        <!-- part name="ThumbLeft"></part-->
        <!-- part name="ThumbRight"></part-->
        <!-- part name="ThumbTop"></part-->
        <!-- part name="ThumbVert"></part-->
        <!-- part name="Tics"></part-->
        <!-- part name="TicsVert"></part-->
        <!-- part name="TrackVert"></part-->
    </class>

    <!-- 
    //
    //    Treeview Style, implemented by Treeview
    //
    -->
    <class name="TreeViewStyle">
        <part name="Glyph">
            <colorhints>
                <AccentColorHint>71 196 70</AccentColorHint>
                <BorderColorHint>118 118 118</BorderColorHint>
                <FillColorHint>244 244 244</FillColorHint>
            </colorhints>
        </part>
        <colorhints>
            <AccentColorHint>71 196 70</AccentColorHint>
            <BorderColorHint>118 118 118</BorderColorHint>
            <FillColorHint>244 244 244</FillColorHint>
        </colorhints>
    </class>
    <!-- Treeitem implements the Explorer selection visuals -->
    <!--class name="Explorer::Treeview" inherits="Treeview">
        <part name="TreeItem"></part>
    </class-->

    <!-- 
    //
    //    Window Style, implemented by Window
    //
    //    Note: CompositedWindow::Window is a subclass of Window that is used by external applications 
    //    that want to draw their own captions when compositing.  It defines Caption and MaxCaption 
    //    parts for use with DrawThemeText(Ex). It is not meant to be used directly with DrawThemeBackground 
    //    as it currently only contains text color information.
    // 
    -->
    <class name="WindowStyle">
        <part name="Caption">
            <colorhints>
                <BorderColorHint>215 228 242</BorderColorHint>
                <FillColorHint>185 209 234</FillColorHint>
            </colorhints>
        </part>
        <part name="CloseButton">
            <colorhints>
                <BorderColorHint>255 255 255</BorderColorHint>
                <FillColorHint>228 93 61</FillColorHint>
            </colorhints>
        </part>
        <part name="HelpButton">
            <colorhints>
                <BorderColorHint>255 255 255</BorderColorHint>
                <FillColorHint>177 183 187</FillColorHint>
            </colorhints>
        </part>
        <part name="MaxButton">
            <colorhints>
                <BorderColorHint>255 255 255</BorderColorHint>
                <FillColorHint>177 183 187</FillColorHint>
            </colorhints>
        </part>
        <part name="MaxCaption">
            <colorhints>
                <FillColorHint>0 0 0</FillColorHint>
            </colorhints>
        </part>
        <part name="MDICloseButton">
            <colorhints>
                <BorderColorHint>118 118 118</BorderColorHint>
                <FillColorHint>240 241 245</FillColorHint>
            </colorhints>
        </part>
        <part name="MDIRestoreButton">
            <colorhints>
                <BorderColorHint>118 118 118</BorderColorHint>
                <FillColorHint>240 241 245</FillColorHint>
            </colorhints>
        </part>
        <part name="MinButton">
            <colorhints>
                <BorderColorHint>255 255 255</BorderColorHint>
                <FillColorHint>177 183 187</FillColorHint>
            </colorhints>
        </part>
        <part name="MinCaption">
            <colorhints>
                <FillColorHint>192 200 217</FillColorHint>
            </colorhints>
        </part>
        <part name="RestoreButton">
            <colorhints>
                <BorderColorHint>255 255 255</BorderColorHint>
                <FillColorHint>177 183 187</FillColorHint>
            </colorhints>
        </part>
        <!-- part name="CaptionSizingTemplate"></part-->
        <!-- part name="Dialog"></part-->
        <!-- part name="FrameBottom"></part-->
        <!-- part name="FrameLeft"></part-->
        <!-- part name="FrameRight"></part-->
        <!-- part name="MDIMinButton"></part-->
        <!-- part name="SmallCaption"></part-->
        <!-- part name="SmallCaptionSizingTemplate"></part-->
        <!-- part name="SmallCloseButton"></part-->
        <!-- part name="SmallFrameBottom"></part-->
        <!-- part name="SmallFrameLeft"></part-->
        <!-- part name="SmallFrameRight"></part-->
    </class>

</visualstyleguide>
=== C:/Users/treeman/Desktop/windows nt source code\xbox\Xbox Live Source\XONLINE_MAIN\public\ext\sdk\win2k8\sdk\include\winmeta.xml ===
<instrumentationManifest
    xmlns="http://schemas.microsoft.com/win/2004/08/events" 
    xmlns:win="http://manifests.microsoft.com/win/2004/08/windows/events"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://schemas.microsoft.com/win/2004/08/events eventman.xsd"    
    >
    <metadata name="evt:meta/winTypes">
        <channels>
            <channel name="TraceClassic" type="Debug" symbol="WINEVENT_CHANNEL_CLASSIC_TRACE"
                value="0" message="$(string.channel.TraceClassic)">
              Events for Classic ETW tracing.
            </channel>
            <channel name="System" type="Admin" symbol="WINEVENT_CHANNEL_GLOBAL_SYSTEM"
                isolation="System" value="8" message="$(string.channel.System)">
              Events for all installed system services.  This channel is secured to applications running under
              system service accounts or user applications running under local adminstrator privileges.
            </channel>
            <channel name="Application" type="Admin" symbol="WINEVENT_CHANNEL_GLOBAL_APPLICATION"
                isolation="Application" value="9" message="$(string.channel.Application)">
              Events for all user-level applications.  This channel is not secured and open to any applications.
              Applications which log extensive information should define an application-specific channel.
            </channel>
            <channel name="Security" type="Admin" symbol="WINEVENT_CHANNEL_GLOBAL_SECURITY"
                isolation="System"  value="10" message="$(string.channel.Security)">
              The Windows Audit Log.  For exclusive use of the Windows Local Security Authority.  User events
              may appear as audits if supported by the underlying application.
            </channel>
        </channels>

        <!-- Standard Windows system reporting levels -->
        <levels>
            <level name="win:LogAlways" symbol="WINEVENT_LEVEL_LOG_ALWAYS" value="0" message="$(string.level.LogAlways)"> Log Always </level>
            <level name="win:Critical" symbol="WINEVENT_LEVEL_CRITICAL" value="1" message="$(string.level.Critical)"> Only critical errors </level>
            <level name="win:Error" symbol="WINEVENT_LEVEL_ERROR" value="2" message="$(string.level.Error)"> All errors, includes win:Critical </level>
            <level name="win:Warning" symbol="WINEVENT_LEVEL_WARNING" value="3" message="$(string.level.Warning)"> All warnings, includes win:Error </level>
            <level name="win:Informational" symbol="WINEVENT_LEVEL_INFO" value="4" message="$(string.level.Informational)"> All informational content, including win:Warning </level>
            <level name="win:Verbose" symbol="WINEVENT_LEVEL_VERBOSE" value="5" message="$(string.level.Verbose)"> All tracing, including previous levels </level>

            <!-- The following are unused.  They are place holders so that users dont accidentally use those values in their own definitions -->
            <level name="win:ReservedLevel6" symbol="WINEVENT_LEVEL_RESERVED_6" value="6"/>
            <level name="win:ReservedLevel7" symbol="WINEVENT_LEVEL_RESERVED_7" value="7"/>
            <level name="win:ReservedLevel8" symbol="WINEVENT_LEVEL_RESERVED_8" value="8"/>
            <level name="win:ReservedLevel9" symbol="WINEVENT_LEVEL_RESERVED_9" value="9"/>
            <level name="win:ReservedLevel10" symbol="WINEVENT_LEVEL_RESERVED_10" value="10"/>
            <level name="win:ReservedLevel11" symbol="WINEVENT_LEVEL_RESERVED_11" value="11"/>
            <level name="win:ReservedLevel12" symbol="WINEVENT_LEVEL_RESERVED_12" value="12"/>
            <level name="win:ReservedLevel13" symbol="WINEVENT_LEVEL_RESERVED_13" value="13"/>
            <level name="win:ReservedLevel14" symbol="WINEVENT_LEVEL_RESERVED_14" value="14"/>
            <level name="win:ReservedLevel15" symbol="WINEVENT_LEVEL_RESERVED_15" value="15"/>
            <!-- End of reserved values -->
        </levels>

        <!-- Standard Windows system tasks -->
        <tasks>
            <task name="win:None" value="0" symbol="WINEVENT_TASK_NONE" message="$(string.task.None)"> undefined task </task>
        </tasks>

        <!-- Standard Windows system opcodes -->
        <opcodes>    
            <opcode name="win:Info" value="0" symbol="WINEVENT_OPCODE_INFO" message="$(string.opcode.Info)"> An informational event </opcode>
            <opcode name="win:Start" value="1" symbol="WINEVENT_OPCODE_START" message="$(string.opcode.Start)"> An activity start event </opcode>
            <opcode name="win:Stop" value="2" symbol="WINEVENT_OPCODE_STOP" message="$(string.opcode.Stop)"> An activity end event </opcode>
            <opcode name="win:DC_Start" value="3" symbol="WINEVENT_OPCODE_DC_START" message="$(string.opcode.DCStart)"> A trace collection start event </opcode>
            <opcode name="win:DC_Stop" value="4" symbol="WINEVENT_OPCODE_DC_STOP" message="$(string.opcode.DCStop)"> A trace collection end event </opcode>
            <opcode name="win:Extension" value="5" symbol="WINEVENT_OPCODE_EXTENSION" message="$(string.opcode.Extension)"> An extensional event </opcode>
            <opcode name="win:Reply" value="6" symbol="WINEVENT_OPCODE_REPLY" message="$(string.opcode.Reply)"> A reply event </opcode>
            <opcode name="win:Resume" value="7" symbol="WINEVENT_OPCODE_RESUME" message="$(string.opcode.Resume)"> An event representing the activity resuming from the suspension </opcode>
            <opcode name="win:Suspend" value="8" symbol="WINEVENT_OPCODE_SUSPEND" message="$(string.opcode.Suspend)"> An event representing the activity is suspended, pending another activity's completion </opcode>
            <opcode name="win:Send" value="9" symbol="WINEVENT_OPCODE_SEND" message="$(string.opcode.Send)"> An event representing the activity is transferred to another component, and can continue to work </opcode>
            
            <!-- The following are unused.  They are place holders so that users dont accidentally use those values in their own definitions -->
            <opcode name="win:Receive" value="240" symbol="WINEVENT_OPCODE_RECEIVE" message="$(string.opcode.Receive)"> An event representing receiving an activity transfer from another component </opcode>
            <opcode name="win:ReservedOpcode241" symbol="WINEVENT_OPCODE_RESERVED_241" value="241"/>
            <opcode name="win:ReservedOpcode242" symbol="WINEVENT_OPCODE_RESERVED_242" value="242"/>
            <opcode name="win:ReservedOpcode243" symbol="WINEVENT_OPCODE_RESERVED_243" value="243"/>
            <opcode name="win:ReservedOpcode244" symbol="WINEVENT_OPCODE_RESERVED_244" value="244"/>
            <opcode name="win:ReservedOpcode245" symbol="WINEVENT_OPCODE_RESERVED_245" value="245"/>
            <opcode name="win:ReservedOpcode246" symbol="WINEVENT_OPCODE_RESERVED_246" value="246"/>
            <opcode name="win:ReservedOpcode247" symbol="WINEVENT_OPCODE_RESERVED_247" value="247"/>
            <opcode name="win:ReservedOpcode248" symbol="WINEVENT_OPCODE_RESERVED_248" value="248"/>
            <opcode name="win:ReservedOpcode249" symbol="WINEVENT_OPCODE_RESERVED_249" value="249"/>
            <opcode name="win:ReservedOpcode250" symbol="WINEVENT_OPCODE_RESERVED_250" value="250"/>
            <opcode name="win:ReservedOpcode251" symbol="WINEVENT_OPCODE_RESERVED_251" value="251"/>
            <opcode name="win:ReservedOpcode252" symbol="WINEVENT_OPCODE_RESERVED_252" value="252"/>
            <opcode name="win:ReservedOpcode253" symbol="WINEVENT_OPCODE_RESERVED_253" value="253"/>
            <opcode name="win:ReservedOpcode254" symbol="WINEVENT_OPCODE_RESERVED_254" value="254"/>
            <opcode name="win:ReservedOpcode255" symbol="WINEVENT_OPCODE_RESERVED_255" value="255"/> 
            <!-- End of reserved values -->
        </opcodes>

        <!-- Standard Windows system keywords -->
        <keywords>
            <keyword name="win:AnyKeyword" mask="0x0" symbol="WINEVT_KEYWORD_ANY" message="$(string.keyword.AnyKeyword)">
                 Wild card value
            </keyword>

            <!-- The following are unused.  They are place holders so that users dont accidentally use those values in their own definitions -->
            <keyword name="win:ReservedKeyword48" mask="0x1000000000000" symbol="WINEVENT_KEYWORD_RESERVED_48"/>
            <!-- End of reserved values -->

            <keyword name="win:WDIContext" mask="0x2000000000000" symbol="WINEVENT_KEYWORD_WDI_CONTEXT" message="$(string.keyword.WDIContext)">
                 Attached to all WDI context events
            </keyword>
            <keyword name="win:WDIDiag" mask="0x4000000000000" symbol="WINEVENT_KEYWORD_WDI_DIAG" message="$(string.keyword.WDIDiag)">
                 Attached to all WDI diag events
            </keyword>
            <keyword name="win:SQM" mask="0x8000000000000" symbol="WINEVENT_KEYWORD_SQM" message="$(string.keyword.SQM)">
                 Attached to all SQM events
            </keyword>
            <keyword name="win:AuditFailure" mask="0x10000000000000" symbol="WINEVENT_KEYWORD_AUDIT_FAILURE" message="$(string.keyword.AuditFailure)">
                 Attached to all failed security audits
            </keyword>
            <keyword name="win:AuditSuccess" mask="0x20000000000000" symbol="WINEVENT_KEYWORD_AUDIT_SUCCESS" message="$(string.keyword.AuditSuccess)">
                 Attached to all successful security audits
            </keyword>
            <keyword name="win:CorrelationHint" mask="0x40000000000000" symbol="WINEVENT_KEYWORD_CORRELATION_HINT" message="$(string.keyword.CorrelationHint)">
                 Attached to transfer events where the related Activity ID is a computed value and not a GUID
            </keyword>
            <keyword name="win:EventlogClassic" mask="0x80000000000000" symbol="WINEVENT_KEYWORD_EVENTLOG_CLASSIC" message="$(string.keyword.Classic)">
                 Attached to events raised using classic eventlog API
            </keyword>

            <!-- The following are used to pass channel information.  They are place holders so that users dont accidentally use those values in their own definitions -->
            <keyword name="win:ReservedKeyword56" mask="0x100000000000000" symbol="WINEVENT_KEYWORD_RESERVED_56"/>
            <keyword name="win:ReservedKeyword57" mask="0x200000000000000" symbol="WINEVENT_KEYWORD_RESERVED_57"/>
            <keyword name="win:ReservedKeyword58" mask="0x400000000000000" symbol="WINEVENT_KEYWORD_RESERVED_58"/>
            <keyword name="win:ReservedKeyword59" mask="0x800000000000000" symbol="WINEVENT_KEYWORD_RESERVED_59"/>
            <keyword name="win:ReservedKeyword60" mask="0x1000000000000000" symbol="WINEVENT_KEYWORDE_RESERVED_60"/>
            <keyword name="win:ReservedKeyword61" mask="0x2000000000000000" symbol="WINEVENT_KEYWORD_RESERVED_61"/>
            <keyword name="win:ReservedKeyword62" mask="0x4000000000000000" symbol="WINEVENT_KEYWORD_RESERVED_62"/>
            <keyword name="win:ReservedKeyword63" mask="0x8000000000000000" symbol="WINEVENT_KEYWORD_RESERVED_63"/>
            <!-- End of reserved values -->
        </keywords>
        
        <!-- Standard Windows & CLR system types -->
        <types xmlns:xs="http://www.w3.org/2001/XMLSchema">
            <xmlTypes>
                 <xmlType name="xs:string" value="1" symbol="WINEVENT_OUT_TYPE_STRING"/>
                 <xmlType name="xs:dateTime" value="2" symbol="WINEVENT_OUT_TYPE_DATE_TIME"/>
                 <xmlType name="xs:byte" value="3" symbol="WINEVENT_OUT_TYPE_BYTE"/>
                 <xmlType name="xs:unsignedByte" value="4" symbol="WINEVENT_OUT_TYPE_UNSIGNED_BYTE"/>
                 <xmlType name="xs:short" value="5" symbol="WINEVENT_OUT_TYPE_SHORT"/>
                 <xmlType name="xs:unsignedShort" value="6" symbol="WINEVENT_OUT_TYPE_UNSIGNED_SHORT"/>
                 <xmlType name="xs:int" value="7" symbol="WINEVENT_OUT_TYPE_INT"/>
                 <xmlType name="xs:unsignedInt" value="8" symbol="WINEVENT_OUT_TYPE_UNSIGNED_INT"/>
                 <xmlType name="xs:long" value="9" symbol="WINEVENT_OUT_TYPE_LONG"/>
                 <xmlType name="xs:unsignedLong" value="10" symbol="WINEVENT_OUT_TYPE_UNSIGNED_LONG"/>
                 <xmlType name="xs:float" value="11" symbol="WINEVENT_OUT_TYPE_FLOAT"/>
                 <xmlType name="xs:double" value="12" symbol="WINEVENT_OUT_TYPE_DOUBLE"/>
                 <xmlType name="xs:boolean" value="13" symbol="WINEVENT_OUT_TYPE_BOOLEAN"/>
                 <xmlType name="xs:GUID" value="14" symbol="WINEVENT_OUT_TYPE_GUID"/>
                 <xmlType name="xs:hexBinary" value="15" symbol="WINEVENT_OUT_TYPE_HEXBINARY"/>
                 <xmlType name="win:HexInt8" value="16" symbol="WINEVENT_OUT_TYPE_HEX_INT8"/>
                 <xmlType name="win:HexInt16" value="17" symbol="WINEVENT_OUT_TYPE_HEX_INT16"/>
                 <xmlType name="win:HexInt32" value="18" symbol="WINEVENT_OUT_TYPE_HEX_INT32"/>
                 <xmlType name="win:HexInt64" value="19" symbol="WINEVENT_OUT_TYPE_HEX_INT64"/>
                 <xmlType name="win:PID" value="20" symbol="WINEVENT_OUT_TYPE_PID"/>
                 <xmlType name="win:TID" value="21" symbol="WINEVENT_OUT_TYPE_TID"/>
                 <xmlType name="win:Port" value="22" symbol="WINEVENT_OUT_TYPE_PORT"/>            
                 <xmlType name="win:IPv4" value="23" symbol="WINEVENT_OUT_TYPE_IPV4"/>
                 <xmlType name="win:IPv6" value="24" symbol="WINEVENT_OUT_TYPE_IPV6"/>             
                 <xmlType name="win:SocketAddress" value="25" symbol="WINEVENT_OUT_TYPE_SOCKET_ADDRESS"/>    
                 <xmlType name="win:CIMDateTime" value="26" symbol="WINEVENT_OUT_TYPE_CIMDATETIME"/>    
                 <xmlType name="win:ETWTIME" value="27" symbol="WINEVENT_OUT_TYPE_ETWTIME"/>
                 <xmlType name="win:Xml" value="28" symbol="WINEVENT_OUT_TYPE_XML"/>
                 <xmlType name="win:ErrorCode" value="29" symbol="WINEVENT_OUT_TYPE_ERROR_CODE"/>
            </xmlTypes>
            <inTypes>
                <inType name="win:UnicodeString" value="1" symbol="WINEVENT_TYPE_NULL_TERMINATED_STRING">
                    <description> A NULL-terminated UNICODE string. </description>
                    <outType default="true" xmlType="xs:string" />
                    <outType xmlType="win:Xml" />
                </inType>
                <inType name="win:AnsiString" value="2" symbol="WINEVENT_TYPE_NULL_TERMINATED_ANSI_STRING">
                    <description> A NULL-terminated ANSI string. </description>
                    <outType default="true" xmlType="xs:string" />
                    <outType xmlType="win:Xml" />                
                </inType>
                <inType name="win:Int8" value="3" symbol="WINEVENT_TYPE_INT8">
                    <description> A signed 8-bit integer. </description>
                    <outType default="true" xmlType="xs:byte" />
                </inType>
                <inType name="win:UInt8" value="4" symbol="WINEVENT_TYPE_UINT8">
                    <description> An unsigned 8-bit integer. </description>
                    <outType default="true" xmlType="xs:unsignedByte" />
                    <outType xmlType="win:HexInt8">An integer in hex format</outType>
                </inType>
                <inType name="win:Int16" value="5" symbol="WINEVENT_TYPE_INT16">
                    <description> A signed 16-bit integer.</description>
                    <outType default="true" xmlType="xs:short" />
                </inType>
                <inType name="win:UInt16" value="6" symbol="WINEVENT_TYPE_UINT16">
                    <description> An unsigned 16-bit integer </description>
                    <outType default="true" xmlType="xs:unsignedShort" />
                    <outType xmlType="win:Port" />
                    <outType xmlType="win:HexInt16">An integer in hex format</outType>
                </inType>
                <inType name="win:Int32" value="7" symbol="WINEVENT_TYPE_INT32">
                    <description> A signed 32-bit integer. </description>
                    <outType default="true" xmlType="xs:int" />
                </inType>
                <inType name="win:UInt32" value="8" symbol="WINEVENT_TYPE_UINT32">
                    <description> An unsigned 32-bit integer. </description>
                    <outType default="true" xmlType="xs:unsignedInt" />
                    <outType xmlType="win:PID" />
                    <outType xmlType="win:TID" />
                    <outType xmlType="win:IPv4" />
                    <outType xmlType="win:ETWTIME" />
                    <outType xmlType="win:ErrorCode"/>
                    <outType xmlType="win:HexInt32">An integer in hex format</outType>
                </inType>
                <inType name="win:Int64" value="9" symbol="WINEVENT_TYPE_INT64">
                    <description> A signed 64-bit integer. </description>
                    <outType default="true" xmlType="xs:long" />
                </inType>
                <inType name="win:UInt64" value="10" symbol="WINEVENT_TYPE_UINT64">
                    <description> An unsigned 64-bit integer. </description>
                    <outType default="true" xmlType="xs:unsignedLong" />
                    <outType xmlType="win:HexInt64">An integer in hex format</outType>
                </inType>
                <inType name="win:Float" value="11" symbol="WINEVENT_TYPE_FLOAT">
                    <description> An IEEE 4-byte floating-point value </description>
                    <outType default="true" xmlType="xs:float" />
                </inType>
                <inType name="win:Double" value="12" symbol="WINEVENT_TYPE_DOUBLE">
                    <description> An IEEE 8-byte floating-point value </description>
                    <outType default="true" xmlType="xs:double" />
                </inType>
                <inType name="win:Boolean" value="13" symbol="WINEVENT_TYPE_BOOL">
                    <description> A 32-bit value where 0 is false, 1 is true. </description>
                    <outType default="true" xmlType="xs:boolean"/>
                </inType>            
                <inType name="win:Binary" value="14" symbol="WINEVENT_TYPE_BINARY">
                    <description>Variable size binary data.</description>
                    <outType default="true" xmlType="xs:hexBinary"/>
                    <outType xmlType="win:IPv6"/>
                    <outType xmlType="win:SocketAddress"/>
                </inType>            
                <inType name="win:GUID" value="15" symbol="WINEVENT_TYPE_GUID">
                    <description> A DCE-compliant 128-bit UUID. XML spec: {12345678-1234-4667-1234-123456789abc}</description>
                    <outType default="true" xmlType="xs:GUID"/>
                </inType>
                <inType name="win:Pointer" value="16" symbol="WINEVENT_TYPE_POINTER">
                    <description> A pointer; sized to the current platform (32-bit or 64-bit). XML spec: hex representation of a pointer</description>
                    <outType default="true" xmlType="win:HexInt64"/>
                </inType>
                <inType name="win:FILETIME" value="17" symbol="WINEVENT_TYPE_FILETIME">
                    <description> A Windows FILETIME struct. </description>
                    <outType default="true" xmlType="xs:dateTime" />
                </inType>
                <inType name="win:SYSTEMTIME" value="18" symbol="WINEVENT_TYPE_SYSTEMTIME">
                    <description> A Windows SYSTEMTIME struct.</description>
                    <outType default="true" xmlType="xs:dateTime" />
                </inType>
                <inType name="win:SID" value="19" symbol="WINEVENT_TYPE_SID">
                    <description> A self-relative Windows SID structure. XML spec: S-1-0-0.</description>
                    <outType default="true" xmlType="xs:string"/>
                </inType>            
                <inType name="win:HexInt32" value="20" symbol="WINEVENT_TYPE_HEXINT32">
                    <description> A hexidecimal representation of an unsigned 32-bit integer. </description>
                    <outType default="true" xmlType="win:HexInt32"/>
                    <outType xmlType="win:ErrorCode"/>
                </inType>
                <inType name="win:HexInt64" value="21" symbol="WINEVENT_TYPE_HEXINT64">
                    <description> A hexidecimal representation of an unsigned 64-bit integer. </description>
                    <outType default="true" xmlType="win:HexInt64"/>
                </inType>
            </inTypes>
        </types>

        <messageTable>
            <!-- Categories for classic publishers -->
            <message value="1" message="$(string.category.Devices)"/>
            <message value="2" message="$(string.category.Disk)"/>
            <message value="3" message="$(string.category.Printers)"/>
            <message value="4" message="$(string.category.Services)"/>
            <message value="5" message="$(string.category.Shell)"/>
            <message value="6" message="$(string.category.SystemEvent)"/>
            <message value="7" message="$(string.category.Network)"/>

            <!-- Channel names for classic global logs -->
            <message value="256" message="$(string.channel.Application)"/>
            <message value="257" message="$(string.channel.Security)"/>
            <message value="258" message="$(string.channel.System)"/>
        </messageTable>

    </metadata>
    
    <localization>
        <resources culture="en-US">
            <stringTable>
                <!-- Categories for classic publishers.  THESE MUST START AT ENTRY 0! -->
                <string id="category.Reserved" value="Reserved"/>
                <string id="category.Devices" value="Devices"/>
                <string id="category.Disk" value="Disk"/>
                <string id="category.Printers" value="Printers"/>
                <string id="category.Services" value="Services"/>
                <string id="category.Shell" value="Shell"/>
                <string id="category.SystemEvent" value="System Event"/>
                <string id="category.Network" value="Network"/>

                <string id="level.LogAlways" value="Log Always"/>
                <string id="level.Critical" value="Critical"/>
                <string id="level.Error" value="Error"/>
                <string id="level.Warning" value="Warning"/>
                <string id="level.Informational" value="Information"/>
                <string id="level.Verbose" value="Verbose"/>

                <string id="opcode.Info" value="Info"/>
                <string id="opcode.Start" value="Start"/>
                <string id="opcode.Stop" value="Stop"/>
                <string id="opcode.DCStart" value="DCStart"/>
                <string id="opcode.DCStop" value="DCStop"/>
                <string id="opcode.Extension" value="Extension"/>
                <string id="opcode.Reply" value="Reply"/>
                <string id="opcode.Resume" value="Resume"/>
                <string id="opcode.Suspend" value="Suspend"/>
                <string id="opcode.Send" value="Send"/>
                <string id="opcode.Receive" value="Receive"/>
 
                <string id="task.None" value="None"/>

                <string id="keyword.AnyKeyword" value="AnyKeyword"/>
                <string id="keyword.WDIContext" value="WDI Context"/>
                <string id="keyword.WDIDiag" value="WDI Diag"/>
                <string id="keyword.SQM" value="SQM"/>
                <string id="keyword.AuditFailure" value="Audit Failure"/>
                <string id="keyword.AuditSuccess" value="Audit Success"/>
                <string id="keyword.CorrelationHint" value="Correlation Hint"/>
                <string id="keyword.Classic" value="Classic"/>

                <string id="channel.TraceClassic" value="TraceClassic"/>
                <string id="channel.System" value="System"/>
                <string id="channel.Application" value="Application"/>
                <string id="channel.Security" value="Security"/>
            </stringTable>
        </resources>
    </localization>

</instrumentationManifest>
=== C:/Users/treeman/Desktop/windows nt source code\xbox\Xbox Live Source\XONLINE_MAIN\public\ext\sdk\win2k8\sdk\lib\coffbase.txt ===
;
; This file defines the base virtual address for Dynamic Link Libraries (DLL)
; that are part of the Windows NT System.  The first token on a line is the name
; of the DLL and the second token is the base virtual address, in hexidecimal.
; The third token is the maximum size of the DLL image file, including symbols.
;
;  NOTE:  Unused areas are marked as _FREE_.
=== C:/Users/treeman/Desktop/windows nt source code\xbox\Xbox Live Source\XONLINE_MAIN\public\ext\sdk\win2k8\sdk\lib\nafxcw.lib.txt ===
The static link mfc libs are huge and not used by that many people.  To reduce space these
are being deleted.  If you need them in your depot, you could either grab them from CoreXT
SD history (sdv nafxcw.lib, sync the atl dir to a timestamp pre-delete, copy to your depot)
or you can pull them from the VC\atlmfc\lib drop of an SDK install.

For win2k8 here were the sizes and files removed:

(x86)
19,293,952 nafxcw.lib
22,866,120 nafxcwd.lib
19,604,856 uafxcw.lib
23,542,742 uafxcwd.lib
(amd64)
22,683,994 nafxcw.lib
28,444,476 nafxcwd.lib
22,823,590 uafxcw.lib
28,969,950 uafxcwd.lib
=== C:/Users/treeman/Desktop/windows nt source code\xbox\Xbox Live Source\XONLINE_MAIN\public\ext\sdk\win2k8\sdk\lib\nafxcwd.lib.txt ===
The static link mfc libs are huge and not used by that many people.  To reduce space these
are being deleted.  If you need them in your depot, you could either grab them from CoreXT
SD history (sdv nafxcw.lib, sync the atl dir to a timestamp pre-delete, copy to your depot)
or you can pull them from the VC\atlmfc\lib drop of an SDK install.

For win2k8 here were the sizes and files removed:

(x86)
19,293,952 nafxcw.lib
22,866,120 nafxcwd.lib
19,604,856 uafxcw.lib
23,542,742 uafxcwd.lib
(amd64)
22,683,994 nafxcw.lib
28,444,476 nafxcwd.lib
22,823,590 uafxcw.lib
28,969,950 uafxcwd.lib
=== C:/Users/treeman/Desktop/windows nt source code\xbox\Xbox Live Source\XONLINE_MAIN\public\ext\sdk\win2k8\sdk\lib\amd64\nafxcw.lib.txt ===
The static link mfc libs are huge and not used by that many people.  To reduce space these
are being deleted.  If you need them in your depot, you could either grab them from CoreXT
SD history (sdv nafxcw.lib, sync the atl dir to a timestamp pre-delete, copy to your depot)
or you can pull them from the VC\atlmfc\lib drop of an SDK install.

For win2k8 here were the sizes and files removed:

(x86)
19,293,952 nafxcw.lib
22,866,120 nafxcwd.lib
19,604,856 uafxcw.lib
23,542,742 uafxcwd.lib
(amd64)
22,683,994 nafxcw.lib
28,444,476 nafxcwd.lib
22,823,590 uafxcw.lib
28,969,950 uafxcwd.lib
=== C:/Users/treeman/Desktop/windows nt source code\xbox\Xbox Live Source\XONLINE_MAIN\public\ext\sdk\win2k8\sdk\lib\amd64\nafxcwd.lib.txt ===
The static link mfc libs are huge and not used by that many people.  To reduce space these
are being deleted.  If you need them in your depot, you could either grab them from CoreXT
SD history (sdv nafxcw.lib, sync the atl dir to a timestamp pre-delete, copy to your depot)
or you can pull them from the VC\atlmfc\lib drop of an SDK install.

For win2k8 here were the sizes and files removed:

(x86)
19,293,952 nafxcw.lib
22,866,120 nafxcwd.lib
19,604,856 uafxcw.lib
23,542,742 uafxcwd.lib
(amd64)
22,683,994 nafxcw.lib
28,444,476 nafxcwd.lib
22,823,590 uafxcw.lib
28,969,950 uafxcwd.lib
=== C:/Users/treeman/Desktop/windows nt source code\xbox\Xbox Live Source\XONLINE_MAIN\public\ext\sdk\win2k8\sdk\lib\amd64\uafxcw.lib.txt ===
The static link mfc libs are huge and not used by that many people.  To reduce space these
are being deleted.  If you need them in your depot, you could either grab them from CoreXT
SD history (sdv nafxcw.lib, sync the atl dir to a timestamp pre-delete, copy to your depot)
or you can pull them from the VC\atlmfc\lib drop of an SDK install.

For win2k8 here were the sizes and files removed:

(x86)
19,293,952 nafxcw.lib
22,866,120 nafxcwd.lib
19,604,856 uafxcw.lib
23,542,742 uafxcwd.lib
(amd64)
22,683,994 nafxcw.lib
28,444,476 nafxcwd.lib
22,823,590 uafxcw.lib
28,969,950 uafxcwd.lib
=== C:/Users/treeman/Desktop/windows nt source code\xbox\Xbox Live Source\XONLINE_MAIN\public\ext\sdk\win2k8\sdk\lib\amd64\uafxcwd.lib.txt ===
The static link mfc libs are huge and not used by that many people.  To reduce space these
are being deleted.  If you need them in your depot, you could either grab them from CoreXT
SD history (sdv nafxcw.lib, sync the atl dir to a timestamp pre-delete, copy to your depot)
or you can pull them from the VC\atlmfc\lib drop of an SDK install.

For win2k8 here were the sizes and files removed:

(x86)
19,293,952 nafxcw.lib
22,866,120 nafxcwd.lib
19,604,856 uafxcw.lib
23,542,742 uafxcwd.lib
(amd64)
22,683,994 nafxcw.lib
28,444,476 nafxcwd.lib
22,823,590 uafxcw.lib
28,969,950 uafxcwd.lib
=== C:/Users/treeman/Desktop/windows nt source code\xbox\Xbox Live Source\XONLINE_MAIN\public\ext\sdk\win7\public.log ===
asmmeta_makefile
assembly_identity.log-finished
crt
internal
lock
paths.inc
public.log
redist
sdk
version.txt
=== C:/Users/treeman/Desktop/windows nt source code\xbox\Xbox Live Source\XONLINE_MAIN\public\ext\sdk\win2k8\sdk\lib\uafxcw.lib.txt ===
The static link mfc libs are huge and not used by that many people.  To reduce space these
are being deleted.  If you need them in your depot, you could either grab them from CoreXT
SD history (sdv nafxcw.lib, sync the atl dir to a timestamp pre-delete, copy to your depot)
or you can pull them from the VC\atlmfc\lib drop of an SDK install.

For win2k8 here were the sizes and files removed:

(x86)
19,293,952 nafxcw.lib
22,866,120 nafxcwd.lib
19,604,856 uafxcw.lib
23,542,742 uafxcwd.lib
(amd64)
22,683,994 nafxcw.lib
28,444,476 nafxcwd.lib
22,823,590 uafxcw.lib
28,969,950 uafxcwd.lib
=== C:/Users/treeman/Desktop/windows nt source code\xbox\Xbox Live Source\XONLINE_MAIN\public\ext\sdk\win2k8\sdk\lib\uafxcwd.lib.txt ===
The static link mfc libs are huge and not used by that many people.  To reduce space these
are being deleted.  If you need them in your depot, you could either grab them from CoreXT
SD history (sdv nafxcw.lib, sync the atl dir to a timestamp pre-delete, copy to your depot)
or you can pull them from the VC\atlmfc\lib drop of an SDK install.

For win2k8 here were the sizes and files removed:

(x86)
19,293,952 nafxcw.lib
22,866,120 nafxcwd.lib
19,604,856 uafxcw.lib
23,542,742 uafxcwd.lib
(amd64)
22,683,994 nafxcw.lib
28,444,476 nafxcwd.lib
22,823,590 uafxcw.lib
28,969,950 uafxcwd.lib
=== C:/Users/treeman/Desktop/windows nt source code\xbox\Xbox Live Source\XONLINE_MAIN\public\ext\sdk\win7\version.txt ===
Platform SDK for Win7
http://www.microsoft.com/downloads/details.aspx?FamilyID=c17ba869-9671-4330-a63e-1fd44e0e2505&displaylang=en

SDK=Win7
CRT=VS9SP1


Layout:
  **(from the SDK install)
  include -> sdk\include
  lib     -> sdk\lib (do not copy the x64 folder)
  lib\x64 -> sdk\lib\amd64

  **(from the previous CRT drop -- i.e. VS9SP1)
  crt      -> crt
  redist   -> redist
  internal -> internal
  sdk\include\atl90      -> sdk\include\atl90
  sdk\include\suppress.h -> sdk\include\suppress.h
  sdk\include\warning.h  -> sdk\include\warning.h
  sdk\lib\atl*.lib  -> sdk\lib\atl*.lib
  sdk\lib\atl*.pdb  -> sdk\lib\atl*.pdb
  sdk\lib\ntdll.lib -> sdk\lib\ntdll.lib
  sdk\lib\amd64\atl*.lib     -> sdk\lib\amd64\atl*.lib
  sdk\lib\amd64\atl*.pdb     -> sdk\lib\amd64\atl*.pdb
  sdk\lib\amd64\ntdll.lib    -> sdk\lib\amd64\ntdll.lib
  sdk\lib\coffbase.txt       -> sdk\lib\coffbase.txt


  **(from the DDK install)
  <TODO>
  

Win7 -> CoreXT
  rem -- first, install the sdk on an amd64 box.  Ensure headers, x86, and amd64 libs install.
  rem -- this is primarily used for incremental refreshing a beta SDK drop

  @REM -- used when pulling from an internal intermediate drop
  @REM set droproot=\\winsdkbld\Drops\winsdk\Main\test\40605.00\enu\winsdk\Windows7\net\Setup
  @REM set sdkfolder=%droproot%\WinSDKBuild\layout\[ProgramFilesFolder]\Microsoft SDKs\Windows\v7.0

  set sdkfolder=C:\Program Files\Microsoft SDKs\Windows\v7.0
  set localsdk=%sdk_root%\win7
  set localcrt=%sdk_root%\VS9SP1

  pushd %localsdk%

  @REM -- used for updates when droproot is an intermediate internal drop
  @REM sd.exe edit ...

  call robocopy "%sdkfolder%\include" %localsdk%\sdk\include /MIR /E
  call robocopy "%sdkfolder%\lib" %localsdk%\sdk\lib /MIR /E /XD x64 ia64
  call robocopy "%sdkfolder%\lib\x64" %localsdk%\sdk\lib\amd64 /MIR /E

  @REM -- one time copies
  if not exist "%localsdk%\version.txt" (
    call copy "%localcrt%\paths.inc" %localsdk%
    call copy "%localcrt%\public.log" %localsdk%
    call robocopy "%localcrt%\crt" %localsdk%\crt /MIR /E
    call robocopy "%localcrt%\redist" %localsdk%\crt /MIR /E
    call robocopy "%localcrt%\internal" %localsdk%\internal /MIR /E
    call robocopy "%localcrt%\sdk\include\atl90" %localsdk%\sdk\include\atl90 /MIR /E
    call copy "%localcrt%\sdk\include\suppress.h" %localsdk%\sdk\include
    call copy "%localcrt%\sdk\include\warning.h" %localsdk%\sdk\include
    call copy "%localcrt%\sdk\lib\coffbase.txt" %localsdk%\sdk\lib
    call robocopy "%localcrt%\sdk\lib" %localsdk%\sdk\lib atl*.lib atl*.pdb ntdll.lib
    call robocopy "%localcrt%\sdk\lib\amd64" %localsdk%\sdk\lib\amd64 atl*.lib atl*.pdb ntdll.lib
  )

  sd.exe add ...
  sd.exe revert -a ...
  sd.exe revert %localsdk%\sdk\include\ntverp.h
  popd
=== C:/Users/treeman/Desktop/windows nt source code\xbox\Xbox Live Source\XONLINE_MAIN\public\ext\sdk\win7\sdk\include\AeroStyle.xml ===
<?xml version="1.0" encoding="us-ascii"?>
<!--

    Windows Vista Aero Style Guide Definition

    Created:    06-23-2005    Microsoft

-->

<visualstyleguide>
    <!-- 
    // 
    // Those XML schema files have a matching .H file 
    // that contains the symbol prefix for each class, part and state
    //
    -->
    <!-- Base types -->
    <symbolfile>vssym32.xml</symbolfile>
    <!-- Style classes and types -->
    <symbolfile>vsstyle.xml</symbolfile>

    <!--
    //
    // Globals
    //
    --> 
    <globals>
        <EdgeDkShadowColor> 100 100 100</EdgeDkShadowColor>
        <EdgeFillColor>     220 220 220</EdgeFillColor>
        <EdgeHighLightColor>244 247 252</EdgeHighLightColor>
        <EdgeLightColor>    180 180 180</EdgeLightColor>
        <EdgeShadowColor>   180 180 180</EdgeShadowColor>
        <GlowColor>         255 255 255</GlowColor>
    </globals>

    <!--
    //
    // System Metrics
    //
    -->
    <sysmetrics>
        <!-- Colors -->
        <ActiveBorder>           ##Globals.EdgeLightColor    </ActiveBorder>
        <ActiveCaption>          153 180 209                 </ActiveCaption>
        <AppWorkSpace>           171 171 171                 </AppWorkSpace>
        <Background>               0   0   0                 </Background>
        <Btnface>                240 240 240                 </Btnface>
        <BtnHighlight>           255 255 255                 </BtnHighlight>
        <BtnShadow>              160 160 160                 </BtnShadow>
        <BtnText>                  0   0   0                 </BtnText>
        <ButtonAlternateFace>      0   0   0                 </ButtonAlternateFace>
        <CaptionText>              0   0   0                 </CaptionText>
        <DkShadow3d>             105 105 105                 </DkShadow3d>
        <GradientActiveCaption>  185 209 234                 </GradientActiveCaption>
        <GradientInactiveCaption>215 228 242                 </GradientInactiveCaption>
        <GrayText>               109 109 109                 </GrayText>
        <Highlight>               51 153 255                 </Highlight>
        <HighlightText>          255 255 255                 </HighlightText>
        <HotTracking>              0 102 204                 </HotTracking>
        <InfoBk>                 255 255 225                 </InfoBk>
        <InfoText>                 0   0   0                 </InfoText>
        <InactiveBorder>         ##Globals.EdgeHighLightColor</InactiveBorder>
        <InactiveCaption>        191 205 219                 </InactiveCaption>
        <InactiveCaptionText>     67  78  84                 </InactiveCaptionText>
        <Light3d>                227 227 227                 </Light3d>
        <Menu>                   ##Sysmetrics.BtnFace        </Menu>
        <MenuBar>                ##Sysmetrics.BtnFace        </MenuBar>
        <MenuHilight>            ##Sysmetrics.Highlight      </MenuHilight>
        <MenuText>               ##Sysmetrics.BtnText        </MenuText>
        <Scrollbar>              200 200 200                 </Scrollbar>
        <Window>                 255 255 255                 </Window>
        <WindowFrame>            100 100 100                 </WindowFrame>
        <WindowText>               0   0   0                 </WindowText>

        <!-- Fonts -->
        <CaptionFont>     Segoe UI, 9, Quality:ClearType</CaptionFont>
        <IconTitleFont>   ##Sysmetrics.MenuFont         </IconTitleFont>
        <MenuFont>        Segoe UI, 9, Quality:ClearType</MenuFont>
        <MsgBoxFont>      ##Sysmetrics.MenuFont         </MsgBoxFont>
        <SmallCaptionFont>Segoe UI, 9, Quality:ClearType</SmallCaptionFont>
        <StatusFont>      ##Sysmetrics.MenuFont         </StatusFont>

        <!-- Metrics -->
        <CaptionBarWidth>   21</CaptionBarWidth>
        <CaptionBarHeight>  21</CaptionBarHeight>
        <MenuBarWidth>      19</MenuBarWidth>
        <MenuBarHeight>     19</MenuBarHeight>
        <ScrollbarHeight>   17</ScrollbarHeight>
        <ScrollbarWidth>    17</ScrollbarWidth>
        <SizingBorderWidth> 1 </SizingBorderWidth>
        <SMCaptionBarHeight>17</SMCaptionBarHeight>
        <SMCaptionBarWidth> 17</SMCaptionBarWidth>
        <PaddedBorderWidth> 4 </PaddedBorderWidth>
    </sysmetrics>

    <!--
    //
    // Class Data
    //
    -->

    <!-- 
    //
    //    Aero Wizard Style, implemented by AeroWizard
    //
    -->
    <class name="AeroWizardStyle">
        <part name="Titlebar">
            <caption>
                <Font>##Sysmetrics.CaptionFont</Font>
                <ClassicValue type="Font">CaptionFont</ClassicValue>
            </caption>
        </part>
        <part name="HeaderArea">
            <caption>
                <Font>##TextStyle.MainInstruction.Font</Font>
                <TextColor>##TextStyle.MainInstruction.TextColor</TextColor>
                <ClassicValue type="TextColor">##TextStyle.MainInstruction.ClassicTextColor</ClassicValue>
                <ClassicValue type="Font">##TextStyle.MainInstruction.ClassicFont</ClassicValue>
            </caption>
            <colorhints>
                <FillColorHint>255 255 255</FillColorHint>
                <ClassicValue type="FillColorHint">threedface</ClassicValue>
            </colorhints>
        </part>
        <part name="Button">
            <caption>
                <Font>##TextStyle.ControlLabel.Font</Font>
                <TextColor>##TextStyle.ControlLabel.TextColor</TextColor>
                <ClassicValue type="TextColor">##TextStyle.ControlLabel.ClassicTextColor</ClassicValue>
                <ClassicValue type="Font">##TextStyle.ControlLabel.ClassicFont</ClassicValue>
            </caption>
        </part>
        <part name="ContentArea">
            <caption>
                <TextColor>##TextStyle.BodyText.TextColor</TextColor>
                <Font>##TextStyle.BodyText.Font</Font>
                <ClassicValue type="TextColor">##TextStyle.BodyText.ClassicTextColor</ClassicValue>
                <ClassicValue type="Font">##TextStyle.BodyText.ClassicFont</ClassicValue>
            </caption>
            <colorhints>
                <FillColorHint>255 255 255</FillColorHint>
                <ClassicValue type="FillColorHint">threedface</ClassicValue>
            </colorhints>
        </part>
        <!-- part name="CommandArea"></part-->
    </class>

    <!-- 
    //
    //    Button Style, implemented by Button
    //
    -->
    <class name="ButtonStyle">
        <part name="Checkbox">
            <colorhints>
                <AccentColorHint>54 89 152</AccentColorHint>
                <BorderColorHint>142 143 143</BorderColorHint>
                <FillColorHint>244 244 244</FillColorHint>
            </colorhints>
        </part>
        <!-- part name="CommandLink" -->
        <part name="Groupbox">
            <colorhints>
                <BorderColorHint>213 223 229</BorderColorHint>
            </colorhints>
        </part>
        <part name="Pushbutton">
            <colorhints>
                <AccentColorHint>54 89 152</AccentColorHint>
                <BorderColorHint>142 143 143</BorderColorHint>
                <FillColorHint>244 244 244</FillColorHint>
            </colorhints>
            <state name="Defaulted">
                <colorhints>
                    <AccentColorHint>4 204 255</AccentColorHint>
                </colorhints>
            </state>
        </part>
        <part name="Radiobutton">
            <colorhints>
                <AccentColorHint>54 89 152</AccentColorHint>
                <BorderColorHint>142 143 143</BorderColorHint>
                <FillColorHint>244 244 244</FillColorHint>
            </colorhints>
        </part>
        <!-- part name="CommandLinkGlyph"></part-->
    </class>

    <!-- 
    //
    //    ComboBox Style, implemented by ComboBox
    //
    -->
    <class name="ComboboxStyle">
        <colorhints>
            <BorderColorHint>171 173 179</BorderColorHint>
        </colorhints>
        <part name="DropDownButton">
            <colorhints>
                <BorderColorHint>102 102 102</BorderColorHint>
                <FillColorHint>244 244 244</FillColorHint>
            </colorhints>
        </part>
        <part name="DropDownButtonRight">
            <colorhints>
                <BorderColorHint>102 102 102</BorderColorHint>
                <FillColorHint>244 244 244</FillColorHint>
            </colorhints>
        </part>
        <part name="DropDownButtonLeft">
            <colorhints>
                <BorderColorHint>102 102 102</BorderColorHint>
                <FillColorHint>244 244 244</FillColorHint>
            </colorhints>
        </part>
        <part name="ReadOnly">
            <colorhints>
                <BorderColorHint>102 102 102</BorderColorHint>
                <FillColorHint>216 216 216</FillColorHint>
            </colorhints>
        </part>
        <!-- part name="Border"></part-->
        <!-- part name="CueBanner"></part-->
    </class>
    
    <!-- 
    //
    // Control Panel Style, implemented by ControlPanel
    //
    -->
    <class name="ControlPanelStyle">
    
        <!-- Static text in Control Panel content pane -->
        <part name="ContentPaneLabel">
            <caption>
                <TextColor>##TextStyle.Label.TextColor</TextColor>
                <Font>##TextStyle.Label.Font</Font>
                <ClassicValue type="TextColor">##TextStyle.Label.ClassicTextColor</ClassicValue>
                <ClassicValue type="Font">##TextStyle.Label.ClassicFont</ClassicValue>
            </caption>
        </part>
        
        <!-- Static text in Control Panel navigation pane -->
        <part name="NavigationPaneLabel">
            <caption>
                <TextColor>21 28 85</TextColor>
                <Font>##TextStyle.BodyTitle.Font</Font>
                <ClassicValue type="TextColor">##TextStyle.BodyTitle.ClassicTextColor</ClassicValue>
                <ClassicValue type="Font">##TextStyle.BodyTitle.ClassicFont</ClassicValue>
            </caption>
        </part>
        
        <!-- Instruction text in Control Panel content pane -->
        <part name="Title">
            <caption>
                <TextColor>##TextStyle.MainInstruction.TextColor</TextColor>
                <Font>##TextStyle.MainInstruction.Font</Font>
                <ClassicValue type="TextColor">##TextStyle.MainInstruction.ClassicTextColor</ClassicValue>
                <ClassicValue type="Font">##TextStyle.MainInstruction.ClassicFont</ClassicValue>
            </caption>
        </part>

        <!-- Static text in Control Panel content pane -->
        <part name="BodyText">
            <caption>
                <TextColor>##TextStyle.BodyText.TextColor</TextColor>
                <Font>##TextStyle.BodyText.Font</Font>
                <ClassicValue type="TextColor">##TextStyle.BodyText.ClassicTextColor</ClassicValue>
                <ClassicValue type="Font">##TextStyle.BodyText.ClassicFont</ClassicValue>
            </caption>
        </part>
        
        <!-- Static bold text in Control Panel content pane -->
        <part name="BodyTitle">
            <caption>
                <TextColor>##TextStyle.BodyTitle.TextColor</TextColor>
                <Font>##TextStyle.BodyTitle.Font</Font>
                <ClassicValue type="TextColor">##TextStyle.BodyTitle.ClassicTextColor</ClassicValue>
                <ClassicValue type="Font">##TextStyle.BodyTitle.ClassicFont</ClassicValue>
            </caption>
        </part>

        <!-- Help link text in Control Panel content pane -->
        <part name="HelpLink">
            <caption>
                <TextColor>##TextStyle.HyperlinkText.TextColor</TextColor>
                <Font>##TextStyle.HyperlinkText.Font</Font>
                <ClassicValue type="TextColor">HotLight</ClassicValue>
                <ClassicValue type="Font">##TextStyle.HyperlinkText.Normal.ClassicFont</ClassicValue>
            </caption>
            <state name="Normal">
                <caption>
                    <ClassicValue type="TextColor">HotLight</ClassicValue>
                    <ClassicValue type="Font">##TextStyle.HyperlinkText.Normal.ClassicFont</ClassicValue>
                </caption>
            </state>
            <state name="Hot">
                <caption>
                    <TextColor>##TextStyle.HyperlinkText.Hot.TextColor</TextColor>
                    <Font>##TextStyle.HyperlinkText.Hot.Font</Font>
                    <ClassicValue type="TextColor">##TextStyle.HyperlinkText.Hot.ClassicTextColor</ClassicValue>
                    <ClassicValue type="Font">##TextStyle.HyperlinkText.Hot.ClassicFont</ClassicValue>
                </caption>
            </state>
            <state name="Pressed">
                <caption>
                    <TextColor>##TextStyle.HyperlinkText.Pressed.TextColor</TextColor>
                    <Font>##TextStyle.HyperlinkText.Pressed.Font</Font>
                    <ClassicValue type="TextColor">HotLight</ClassicValue>
                    <ClassicValue type="Font">##TextStyle.HyperlinkText.Pressed.ClassicFont</ClassicValue>
                </caption>
            </state>
            <state name="Disabled">
                 <caption>
                    <TextColor>##TextStyle.HyperlinkText.Disabled.TextColor</TextColor>
                    <Font>##TextStyle.HyperlinkText.Disabled.Font</Font>
                    <ClassicValue type="TextColor">##TextStyle.HyperlinkText.Disabled.ClassicTextColor</ClassicValue>
                    <ClassicValue type="Font">##TextStyle.HyperlinkText.Disabled.ClassicFont</ClassicValue>
                </caption>
            </state>
        </part>
        
        <!-- Content link text in Control Panel content pane -->
        <part name="ContentLink">
            <caption>
                <TextColor>##TextStyle.HyperlinkText.TextColor</TextColor>
                <Font>##TextStyle.HyperlinkText.Font</Font>
                <ClassicValue type="TextColor">HotLight</ClassicValue>
                <ClassicValue type="Font">##TextStyle.HyperlinkText.Normal.ClassicFont</ClassicValue>
            </caption>
            <state name="Normal">
                <caption>
                    <ClassicValue type="TextColor">HotLight</ClassicValue>
                    <ClassicValue type="Font">##TextStyle.HyperlinkText.Normal.ClassicFont</ClassicValue>
                </caption>
            </state>
            <state name="Hot">
                <caption>
                    <TextColor>##TextStyle.HyperlinkText.Hot.TextColor</TextColor>
                    <Font>##TextStyle.HyperlinkText.Hot.Font</Font>
                    <ClassicValue type="TextColor">##TextStyle.HyperlinkText.Hot.ClassicTextColor</ClassicValue>
                    <ClassicValue type="Font">##TextStyle.HyperlinkText.Hot.ClassicFont</ClassicValue>
                </caption>
            </state>
            <state name="Pressed">
                <caption>
                    <TextColor>##TextStyle.HyperlinkText.Pressed.TextColor</TextColor>
                    <Font>##TextStyle.HyperlinkText.Pressed.Font</Font>
                    <ClassicValue type="TextColor">HotLight</ClassicValue>
                    <ClassicValue type="Font">##TextStyle.HyperlinkText.Pressed.ClassicFont</ClassicValue>
                </caption>
            </state>
            <state name="Disabled">
                 <caption>
                    <TextColor>##TextStyle.HyperlinkText.Disabled.TextColor</TextColor>
                    <Font>##TextStyle.HyperlinkText.Disabled.Font</Font>
                    <ClassicValue type="TextColor">##TextStyle.HyperlinkText.Disabled.ClassicTextColor</ClassicValue>
                    <ClassicValue type="Font">##TextStyle.HyperlinkText.Disabled.ClassicFont</ClassicValue>
                </caption>
            </state>
        </part>
        
        <!-- Navigation link text in Control Panel navigation pane -->
        <part name="TaskLink">
            <caption>
                <TextColor>21 28 85</TextColor>
                <Font>##TextStyle.HyperlinkText.Font</Font>
                <ClassicValue type="TextColor">HotLight</ClassicValue>
                <ClassicValue type="Font">##TextStyle.HyperlinkText.Normal.ClassicFont</ClassicValue>
            </caption>
            <state name="Normal">
                <caption>
                    <ClassicValue type="TextColor">HotLight</ClassicValue>
                    <ClassicValue type="Font">##TextStyle.HyperlinkText.Normal.ClassicFont</ClassicValue>
                </caption>
            </state>
            <state name="Hot">
                <caption>
                    <TextColor>7 74 229</TextColor>
                    <Font>##TextStyle.HyperlinkText.Hot.Font</Font>
                    <ClassicValue type="TextColor">HotLight</ClassicValue>
                    <ClassicValue type="Font">##TextStyle.HyperlinkText.Hot.ClassicFont</ClassicValue>
                </caption>
            </state>
            <state name="Pressed">
                <caption>
                    <TextColor>7 74 229</TextColor>
                    <Font>##TextStyle.HyperlinkText.Pressed.Font</Font>
                    <ClassicValue type="TextColor">HotLight</ClassicValue>
                    <ClassicValue type="Font">##TextStyle.HyperlinkText.Pressed.ClassicFont</ClassicValue>
                </caption>
            </state>
            <state name="Disabled">
                <!-- Caution disabled navigation link text color must show over the NavigationPane Fill -->
                <caption>
                    <TextColor>128 128 128</TextColor>
                    <Font>##TextStyle.HyperlinkText.Disabled.Font</Font>
                    <ClassicValue type="TextColor">##TextStyle.HyperlinkText.Disabled.ClassicTextColor</ClassicValue>
                    <ClassicValue type="Font">##TextStyle.HyperlinkText.Disabled.ClassicFont</ClassicValue>
                </caption>
            </state>
            <state name="Page">
                <caption>
                    <TextColor>21 28 85</TextColor>
                    <Font>Segoe UI, 9, Bold, Quality:ClearType</Font>
                    <ClassicValue type="TextColor">WindowText</ClassicValue>
                    <ClassicValue type="Font">MenuFont;;bold</ClassicValue>
                </caption>
            </state>
        </part>

        <!-- Section title link text in Control Panel content pane -->
        <part name="SectionTitleLink">
            <caption>
                <TextColor>0 110 18</TextColor>
                <Font>Segoe UI, 12, Quality:ClearType</Font>
                <ClassicValue type="TextColor">HotLight</ClassicValue>
                <ClassicValue type="Font">CaptionFont</ClassicValue>
            </caption>
            <state name="Normal">
                <caption>
                    <ClassicValue type="TextColor">HotLight</ClassicValue>
                    <ClassicValue type="Font">CaptionFont</ClassicValue>
                </caption>
            </state>
            <state name="Hot">
                <caption>
                    <TextColor>0 174 29</TextColor>
                    <Font>Segoe UI, 12, Underline, Quality:ClearType</Font>
                    <ClassicValue type="TextColor">HotLight</ClassicValue>
                    <ClassicValue type="Font">CaptionFont;;;underline</ClassicValue>
                </caption>
            </state>
        </part>
        
        <!-- Grouping label text in Control Panel content pane -->
        <part name="GroupText">
            <caption>
                <TextColor>##TextStyle.BodyText.TextColor</TextColor>
                <Font>##TextStyle.BodyText.Font</Font>
                <ClassicValue type="TextColor">##TextStyle.BodyText.ClassicTextColor</ClassicValue>
                <ClassicValue type="Font">##TextStyle.BodyText.ClassicFont</ClassicValue>
            </caption>
        </part>
        
        <!-- Control Panel content pane -->
        <part name="ContentPane">
            <colorhints>
                <FillColorHint>255 255 255</FillColorHint>
                <ClassicValue type="FillColorHint">window</ClassicValue>
            </colorhints>
        </part>
        
        <!-- Control Panel content pane divider line -->
        <part name="ContentPaneLine">
            <colorhints>
                <FillColorHint>204 204 204</FillColorHint>
                <ClassicValue type="FillColorHint">buttonshadow</ClassicValue>
            </colorhints>
        </part>
        
        <!-- Control Panel banner background -->
        <part name="BannerArea">
            <colorhints>
                <FillColorHint>255 255 198</FillColorHint>
                <ClassicValue type="FillColorHint">window</ClassicValue>
            </colorhints>
        </part>
        
        <!-- Control Panel navigation pane -->
        <part name="NavigationPane">
            <colorhints>
                <FillColorHint>86 147 138</FillColorHint>
                <ClassicValue type="FillColorHint">window</ClassicValue>
            </colorhints>
        </part>
        
        <!-- Control Panel navigation pane divider line -->
        <part name="NavigationPaneLine">
            <colorhints>
                <FillColorHint>101 162 150</FillColorHint>
                <ClassicValue type="FillColorHint">buttonshadow</ClassicValue>
            </colorhints>
        </part>
        
        <!-- Control Panel command button area used with large content panes -->
        <part name="LargeCommandArea">
            <colorhints>
                <FillColorHint>240 240 240</FillColorHint>
                <ClassicValue type="FillColorHint">window</ClassicValue>
            </colorhints>
        </part>
        
        <!-- Control Panel command button area used with small content panes -->
        <part name="SmallCommandArea">
            <colorhints>
                <FillColorHint>255 255 255</FillColorHint>
                <ClassicValue type="FillColorHint">window</ClassicValue>
            </colorhints>
        </part>
        
        <!-- Control Panel pushbuttons -->
        <part name="Button">
            <caption>
                <TextColor>##TextStyle.ControlLabel.TextColor</TextColor>
                <Font>##TextStyle.ControlLabel.Font</Font>
                <ClassicValue type="TextColor">##TextStyle.ControlLabel.ClassicTextColor</ClassicValue>
                <ClassicValue type="Font">##TextStyle.ControlLabel.ClassicFont</ClassicValue>
            </caption>
        </part>

        <!-- Message text in Control Panel content pane -->
        <part name="MessageText">
            <caption>
                <TextColor>0 0 0</TextColor>
                <Font>##TextStyle.MainInstruction.Font</Font>
                <ClassicValue type="TextColor">##TextStyle.MainInstruction.ClassicTextColor</ClassicValue>
                <ClassicValue type="Font">##TextStyle.MainInstruction.ClassicFont</ClassicValue>
            </caption>
        </part>
    </class>
    
    <!-- 
    //
    //    DatePicker Style, implemented by DatePicker
    //
    -->
    <class name="DatePickerStyle">
        <part name="ShowCalendarButtonRight">
            <colorhints>
                <BorderColorHint>130 135 144</BorderColorHint>
                <FillColorHint>255 255 255</FillColorHint>
            </colorhints>
        </part>
        <!-- part name="ShowNoneCheckbox"></part-->
    </class>

    <!-- 
    //
    //    DragDrop Style, implemented by DragDrop
    //
    -->
    <class name="DragDropStyle">
        <part name="Copy">
            <colorhints>
                <BorderColorHint>255 255 255</BorderColorHint>
                <FillColorHint>0 103 205</FillColorHint>
            </colorhints>
        </part>
        <part name="Move">
            <colorhints>
                <BorderColorHint>255 255 255</BorderColorHint>
                <FillColorHint>0 103 205</FillColorHint>
            </colorhints>
        </part>
        <part name="UpdateMetaData">
            <colorhints>
                <BorderColorHint>255 255 255</BorderColorHint>
                <FillColorHint>0 103 205</FillColorHint>
            </colorhints>
        </part>
        <part name="CreateLink">
            <colorhints>
                <BorderColorHint>255 255 255</BorderColorHint>
                <FillColorHint>0 103 205</FillColorHint>
            </colorhints>
        </part>
        <part name="Warning">
            <colorhints>
                <BorderColorHint>255 255 255</BorderColorHint>
                <FillColorHint>249 199 0</FillColorHint>
            </colorhints>
        </part>
        <part name="None">
            <colorhints>
                <BorderColorHint>255 255 255</BorderColorHint>
                <FillColorHint>227 49 49</FillColorHint>
            </colorhints>
        </part>
    </class>

    <!-- 
    //
    //    Edit Style, implemented by Edit
    //
    -->
    <class name="EditStyle">
        <colorhints>
            <BorderColorHint>171 173 179</BorderColorHint>
            <FillColorHint>255 255 255</FillColorHint>
        </colorhints>
        <!-- part name="Background"></part-->
        <!-- part name="Edittext"></part-->
        <!-- part name="Password"></part-->
        <!-- part name="EditBorder_NoScroll"></part-->
        <!-- part name="EditBorder_HScroll"></part-->
        <!-- part name="EditBorder_VScroll"></part-->
        <!-- part name="EditBorder_HVScroll"></part-->
    </class>

    <!-- 
    //
    //    ExplorerBar Style, implemented by ExplorerBar
    //
    -->
    <class name="ExplorerBarStyle">
        <part name="HeaderBackground">
            <colorhints>
                <FillColorHint>140 140 140</FillColorHint>
            </colorhints>
        </part>
        <!-- part name="HeaderClose"></part-->
        <!-- part name="HeaderPin"></part-->
        <!-- part name="IEBarMenu"></part-->
        <!-- part name="NormalGroupBackground"></part-->
        <!-- part name="NormalGroupCollapse"></part-->
        <!-- part name="NormalGroupExpand"></part-->
        <!-- part name="NormalGroupHead"></part-->
        <!-- part name="SpecialGroupBackground"></part-->
        <!-- part name="SpecialGroupCollapse"></part-->
        <!-- part name="SpecialGroupExpand"></part-->
        <!-- part name="SpecialGroupHead"></part-->
    </class>

    <!-- 
    //
    //    Flyout Style, implemented by Flyout
    //
    -->
    <class name="FlyoutStyle">
         <part name="Header">
            <caption>
                <TextColor>0 0 0</TextColor>
                <Font>Segoe UI, 10, Quality:ClearType</Font>
                <ClassicValue type="TextColor">##TextStyle.BodyText.ClassicTextColor</ClassicValue>
                <ClassicValue type="Font">##TextStyle.BodyText.ClassicFont</ClassicValue>
            </caption>
        </part>
        <part name="Body">
            <caption>
                <TextColor>87 87 87</TextColor>
                <Font>##TextStyle.BodyText.Font</Font>
                <ClassicValue type="TextColor">##TextStyle.BodyText.ClassicTextColor</ClassicValue>
                <ClassicValue type="Font">##TextStyle.BodyText.ClassicFont</ClassicValue>
            </caption>
            <state name="Normal">
                <caption>
                    <ClassicValue type="TextColor">##TextStyle.BodyText.ClassicTextColor</ClassicValue>
                    <ClassicValue type="Font">##TextStyle.BodyText.ClassicFont</ClassicValue>
                </caption>
            </state>
            <state name="Emphasized">
                <caption>
                    <TextColor>0 0 0</TextColor>
                    <ClassicValue type="TextColor">##TextStyle.Label.ClassicTextColor</ClassicValue>
                    <ClassicValue type="Font">##TextStyle.Label.ClassicFont</ClassicValue>
                </caption>
            </state>
        </part>
        <part name="Label">
            <caption>
                <TextColor>##TextStyle.Label.TextColor</TextColor>
                <Font>##TextStyle.Label.Font</Font>
                <ClassicValue type="TextColor">##TextStyle.Label.ClassicTextColor</ClassicValue>
                <ClassicValue type="Font">##TextStyle.Label.ClassicFont</ClassicValue>
            </caption>
            <state name="Normal">
                <caption>
                    <ClassicValue type="TextColor">##TextStyle.Label.ClassicTextColor</ClassicValue>
                    <ClassicValue type="Font">##TextStyle.Label.ClassicFont</ClassicValue>
                </caption>
            </state>
            <state name="Selected">
            </state>
            <state name="Emphasized">
                <TextColor>19 112 171</TextColor>
                <ClassicValue type="TextColor">WindowText</ClassicValue>
            </state>
            <state name="Disabled">
                <TextColor>##SysMetrics.GrayText</TextColor>
                <ClassicValue type="TextColor">GrayText</ClassicValue>
            </state>
        </part>
        <part name="Link">
            <caption>
                <TextColor>0 102 204</TextColor>
                <Font>##TextStyle.HyperlinkText.Font</Font>
                <ClassicValue type="TextColor">##TextStyle.HyperlinkText.Normal.ClassicTextColor</ClassicValue>
                <ClassicValue type="Font">##TextStyle.HyperlinkText.Normal.ClassicFont</ClassicValue>
            </caption>
            <state name="Normal">
                <caption>
                    <ClassicValue type="TextColor">##TextStyle.HyperlinkText.Normal.ClassicTextColor</ClassicValue>
                    <ClassicValue type="Font">##TextStyle.HyperlinkText.Normal.ClassicFont</ClassicValue>
                </caption>
            </state>
            <state name="Hover">
                <caption>
                    <Font>##TextStyle.HyperlinkText.Hot.Font</Font>
                    <ClassicValue type="Font">##TextStyle.HyperlinkText.Hot.ClassicFont</ClassicValue>
                </caption>
            </state>
        </part>
        <part name="LinkHeader">
            <caption>
                <TextColor>##Flyoutstyle.Link.TextColor</TextColor>
                <Font>##FlyoutStyle.Header.Font</Font>
                <ClassicValue type="TextColor">##TextStyle.HyperlinkText.Normal.ClassicTextColor</ClassicValue>
                <ClassicValue type="Font">##TextStyle.HyperlinkText.Normal.ClassicFont</ClassicValue>
            </caption>
            <state name="Normal">
                <caption>
                    <ClassicValue type="TextColor">##TextStyle.HyperlinkText.Normal.ClassicTextColor</ClassicValue>
                    <ClassicValue type="Font">##TextStyle.HyperlinkText.Normal.ClassicFont</ClassicValue>
                </caption>
            </state>
            <state name="Hover">
                <caption>
                    <Font>##FlyoutStyle.Header.Font</Font>
                    <ClassicValue type="Font">##TextStyle.HyperlinkText.Hot.ClassicFont</ClassicValue>
                </caption>
            </state>
        </part>
        <part name="Window">
            <colorhints>
                <FillColorHint>255 255 255</FillColorHint>
                <BorderSize>0</BorderSize> 
            </colorhints>
        </part>
        <part name="LinkArea">
            <colorhints>
                <FillColorHint>241 245 251</FillColorHint>
            </colorhints>
        </part>
        <!-- part name="Divider"></part-->
    </class>

    <!-- 
    //
    //    Header Style, implemented by Header
    //
    -->
    <class name="HeaderStyle">
        <part name="HeaderItem">
            <colorhints>
                <AccentColorHint>102 188 225</AccentColorHint>
                <FillColorHint>244 244 244</FillColorHint>
            </colorhints>
        </part>
        <part name="HeaderDropDown">
            <colorhints>
                <AccentColorHint>191 191 191</AccentColorHint>
                <FillColorHint>244 244 244</FillColorHint>
            </colorhints>
        </part>
        <part name="HeaderOverflow">
            <colorhints>
                <AccentColorHint>191 191 191</AccentColorHint>
                <FillColorHint>244 244 244</FillColorHint>
            </colorhints>
        </part>
        <!-- part name="HeaderSortArrow"></part-->
    </class>

    <!-- 
    //
    //    ListBox Style, implemented by ListBox
    //
    -->
    <class name="ListboxStyle">
        <colorhints>
            <FillColorHint>255 255 255</FillColorHint>
            <BorderColorHint>130 135 144</BorderColorHint>
            <AccentColorHint>54 89 152</AccentColorHint>
        </colorhints>
        <!-- part name="Border_HScroll"></part-->
        <!-- part name="Border_HVScroll"></part-->
        <!-- part name="Border_NoScroll"></part-->
        <!-- part name="Border_VScroll"></part-->
    </class>

    <!-- 
    //
    //    Listview Style, implemented by Listview 
    //
    -->
    <class name="ListViewStyle">
        <part name="GroupHeader">
            <colorhints>
                <AccentColorHint>185 229 242</AccentColorHint>
                <FillColorHint>94 131 191</FillColorHint>
            </colorhints>
        </part>
        <!-- part name="GroupHeaderLine"></part-->
        <!-- part name="ExpandButton"></part-->
        <!-- part name="CollapseButton"></part-->
        <!-- part name="ColumnDetail"></part-->
    </class>
    <!-- 
    // Listitem implements the Explorer selection visuals,
    // use SetWindowTheme(hWndListView, L"Explorer") to get
    // this new appearance in your listview
    -->
    <!--class name="Explorer::Listview" inherits="Listview">
        <part name="Listitem"></part>
    </class-->

    <!-- 
    //
    //    Menu Style, implemented by Menu
    //
    -->
    <class name="MenuStyle">
        <part name="BarBackground">
            <colorhints>
                <FillColorHint>244 244 244</FillColorHint>
            </colorhints>
        </part>
        <part name="PopupBackground">
            <colorhints>
                <FillColorHint>244 244 244</FillColorHint>
            </colorhints>
        </part>
        <part name="PopupGutter">
            <colorhints>
                <FillColorHint>240 240 240</FillColorHint>
            </colorhints>
        </part>
        <!-- part name="BarItem"></part-->
        <!-- part name="PopupBorders"></part-->
        <!-- part name="PopupCheck"></part-->
        <!-- part name="PopupCheckBackground"></part-->
        <!-- part name="PopupItem"></part-->
        <!-- part name="PopupSeparator"></part-->
        <!-- part name="PopupSubmenu"></part-->
        <!-- part name="SystemClose"></part-->
        <!-- part name="SystemMaximize"></part-->
        <!-- part name="SystemMinimize"></part-->
        <!-- part name="SystemRestore"></part-->
    </class>

    <!-- 
    //
    //    Navigation class
    //
    //    This class has only bitmaps for now, so doesn't implement any style.
    //    Use DrawThemeBackground() or GetThemeBitmap() to retrieve the bitmaps.
    //
    -->
    <!--class name="Navigation"-->
        <!-- part name="BackButton"></part-->
        <!-- part name="ForwardButton"></part-->
        <!-- part name="MenuButton"></part-->
    <!--/class-->

    <!--
    //
    //    Progress Style, implemented by Progress
    //
    -->
    <class name="ProgressStyle">
        <part name="TransparentBar">
            <colorhints>
                <BorderColorHint>104 104 104</BorderColorHint>
                <FillColorHint>255 255 255</FillColorHint>
            </colorhints>
        </part>
        <part name="Fill">
            <colorhints>
                <FillColorHint>82 215 99</FillColorHint>
            </colorhints>
            <state name="Error">
                <colorhints>
                    <FillColorHint>228 0 33</FillColorHint>
                </colorhints>
            </state>
            <state name="Paused">
                <colorhints>
                    <FillColorHint>220 212 0</FillColorHint>
                </colorhints>
            </state>
            <state name="Partial">
                <colorhints>
                    <FillColorHint>0 148 173</FillColorHint>
                </colorhints>
            </state>
        </part>
        <!-- Bar and BarVert have been deprecated -->
        <!-- part name="Bar"></part-->
        <!-- part name="BarVert"></part-->
        <!-- Chunk and ChunkVert have been deprecated -->
        <!-- part name="Chunk"></part-->
        <!-- part name="ChunkVert"></part-->
        <!-- part name="FillVert"></part-->
        <!-- part name="MoveOverlay"></part-->
        <!-- part name="MoveOverlayVert"></part-->
        <!-- part name="PulseOverlay"></part-->
        <!-- part name="PulseOverlayVert"></part-->
        <!-- part name="TransparentBarVert"></part-->
    </class>

    <!-- 
    //
    //    Rebar Style, implemented by Rebar
    //
    -->
    <class name="RebarStyle">
        <colorhints>
            <FillColorHint>233 237 249</FillColorHint>
        </colorhints>
        <part name="Gripper">
            <colorhints>
                <FillColorHint>128 131 137</FillColorHint>
            </colorhints>
        </part>
        <part name="Chevron">
            <colorhints>
                <FillColorHint>0 0 0</FillColorHint>
            </colorhints>
        </part>
        <!-- part name="Background"></part-->
        <!-- part name="Band"></part-->
        <!-- part name="GripperVert"></part-->
        <!-- part name="ChevronVert"></part-->
        <!-- part name="Splitter"></part-->
        <!-- part name="SplitterVert"></part-->
    </class>

    <!-- 
    //
    //    Themed Experiences
    //
    //    Communications::Rebar implements a communication toolbar background
    //    Media::Rebar implements a Media toolbar background, coordinated with the MediaStyle
    //
    //    Use SetWindowTheme(hWndRebar, L"Communications") (or "Media") to apply
    //    those styles to your rebar, and use SetWindowTheme(hWnd, L"Alternate") on the toolbar
    //    to get white text instead of the default color.
    //
    -->
    
    <!-- 
    //
    //    Media Gradient Colors
    //
    -->
    <class name="MediaStyle">
        <colorhints>
            <FillColorHint>238 243 250</FillColorHint>
            <AccentColorHint>207 218 231</AccentColorHint>
        </colorhints>
    </class>

    <!-- 
    //
    //    Communications Gradient Colors
    //
    -->
    
    <class name="CommunicationsStyle">
        <part name="Tab">
            <state name="Normal">
                <colorhints>
                    <FillColorHint>10 76 134</FillColorHint>
                    <AccentColorHint>59 145 232</AccentColorHint>
                    <ClassicValue type="FillColorHint">ButtonShadow</ClassicValue>
                    <ClassicValue type="AccentColorHint">ButtonFace</ClassicValue>
                </colorhints>
            </state>
            <state name="Hot">
                <colorhints>
                   <FillColorHint>56 151 234</FillColorHint>
                   <AccentColorHint>148 201 254</AccentColorHint>
                   <ClassicValue type="FillColorHint">ButtonFace</ClassicValue>
                   <ClassicValue type="AccentColorHint">ButtonHighlight</ClassicValue>
                </colorhints>
             </state>
             <state name="Selected">
                 <colorhints>
                     <FillColorHint>1 37 69</FillColorHint>
                     <AccentColorHint>18 87 157</AccentColorHint>
                     <ClassicValue type="FillColorHint">ButtonShadow</ClassicValue>
                     <ClassicValue type="AccentColorHint">ButtonFace</ClassicValue>
                </colorhints>
             </state>

        </part>
    </class>
    

    <!-- 
    //
    //    Scrollbar Style, implemented by Scrollbar
    //
    -->
    <class name="ScrollbarStyle">
        <part name="ArrowBtn">
            <colorhints>
                <FillColorHint>244 244 244</FillColorHint>
                <BorderColorHint>130 135 144</BorderColorHint>
            </colorhints>
        </part>
        <part name="LowerTrackHorz">
            <colorhints>
                <FillColorHint>244 244 244</FillColorHint>
            </colorhints>
        </part>
        <part name="LowerTrackVert">
            <colorhints>
                <FillColorHint>244 244 244</FillColorHint>
            </colorhints>
        </part>
        <part name="SizeBox">
            <colorhints>
                <FillColorHint>120 120 120</FillColorHint>
            </colorhints>
        </part>
        <part name="ThumbBtnHorz">
            <colorhints>
                <BorderColorHint>255 255 255</BorderColorHint>
                <FillColorHint>171 175 218</FillColorHint>
            </colorhints>
        </part>
        <part name="ThumbBtnVert">
            <colorhints>
                <BorderColorHint>255 255 255</BorderColorHint>
                <FillColorHint>171 175 218</FillColorHint>
            </colorhints>
        </part>
        <part name="UpperTrackHorz">
            <colorhints>
                <FillColorHint>244 244 244</FillColorHint>
            </colorhints>
        </part>
        <part name="UpperTrackVert">
            <colorhints>
                <FillColorHint>244 244 244</FillColorHint>
            </colorhints>
        </part>
        <!-- part name="GripperHorz"></part-->
        <!-- part name="GripperVert"></part-->
    </class>

    <!-- 
    //
    //    Spin Style, implemented by Spin
    //
    -->
    <class name="SpinStyle">
        <part name="Down">
            <colorhints>
                <BorderColorHint>130 135 144</BorderColorHint>
                <FillColorHint>244 244 244</FillColorHint>
            </colorhints>
        </part>
        <part name="DownHorz">
            <colorhints>
                <BorderColorHint>130 135 144</BorderColorHint>
                <FillColorHint>244 244 244</FillColorHint>
            </colorhints>
        </part>
        <part name="Up">
            <colorhints>
                <BorderColorHint>130 135 144</BorderColorHint>
                <FillColorHint>244 244 244</FillColorHint>
            </colorhints>
        </part>
        <part name="UpHorz">
            <colorhints>
                <BorderColorHint>130 135 144</BorderColorHint>
                <FillColorHint>244 244 244</FillColorHint>
            </colorhints>
        </part>
    </class>

    <!-- 
    //
    //    Status Style, implemented by Status
    //
    -->
    <class name="StatusStyle">
        <part name="Gripper">
            <colorhints>
                <FillColorHint>119 119 192</FillColorHint>
            </colorhints>
        </part>
        <part name="Pane">
            <colorhints>
                <FillColorHint>119 119 92</FillColorHint>
            </colorhints>
        </part>
        <colorhints>
            <FillColorHint>177 183 187</FillColorHint>
        </colorhints>
        <!-- part name="GripperPane"></part-->
    </class>

    <!-- 
    //
    //    Tab Style, implemented by Tab
    //
    -->
    <class name="TabStyle">
        <part name="Body">
            <colorhints>
                <FillColorHint>244 244 244</FillColorHint>
            </colorhints>
        </part>
        <part name="AeroWizardBody">
            <colorhints>
                <FillColorHint>255 255 255</FillColorHint>
            </colorhints>
        </part>
        <part name="Pane">
            <colorhints>
                <BorderColorHint>145 155 156</BorderColorHint>
                <FillColorHint>247 247 249</FillColorHint>
            </colorhints>
        </part>
        <part name="TabItem">
            <colorhints>
                <AccentColorHint>255 200 60</AccentColorHint>
                <BorderColorHint>146 146 146</BorderColorHint>
                <FillColorHint>240 241 245</FillColorHint>
            </colorhints>
        </part>
        <!-- part name="TabItemBothEdge"></part-->
        <!-- part name="TabItemLeftEdge"></part-->
        <!-- part name="TabItemRightEdge"></part-->
        <!-- part name="TopTabItem"></part-->
        <!-- part name="TopTabItemBothEdge"></part-->
        <!-- part name="TopTabItemLeftEdge"></part-->
        <!-- part name="TopTabItemRightEdge"></part-->
    </class>

    <!-- 
      //
      //    Task Dialog Style, implemented by TaskDialog
      //
      -->
    <class name="TaskDialogStyle">
        <part name="MainInstructionPane">
            <Font>##TextStyle.MainInstruction.Font</Font>
            <TextColor>##TextStyle.MainInstruction.TextColor</TextColor>
            <ClassicValue type="Font">##TextStyle.MainInstruction.ClassicFont</ClassicValue>
            <ClassicValue type="TextColor">##TextStyle.MainInstruction.ClassicTextColor</ClassicValue>
        </part>
        <part name="ContentPane">
            <Font>##TextStyle.BodyText.Font</Font>
            <TextColor>##TextStyle.BodyText.TextColor</TextColor>
            <ClassicValue type="Font">##TextStyle.BodyText.ClassicFont</ClassicValue>
            <ClassicValue type="TextColor">##TextStyle.BodyText.ClassicTextColor</ClassicValue>
        </part>
        <part name="ExpandedContent">
            <Font>##TextStyle.BodyText.Font</Font>
            <TextColor>##TextStyle.BodyText.TextColor</TextColor>
            <ClassicValue type="Font">##TextStyle.BodyText.ClassicFont</ClassicValue>
            <ClassicValue type="TextColor">##TextStyle.BodyText.ClassicTextColor</ClassicValue>
        </part>
        <part name="ButtonSection">
            <Font>##TextStyle.BodyText.Font</Font>
            <TextColor>##TextStyle.BodyText.TextColor</TextColor>
            <ClassicValue type="Font">##TextStyle.BodyText.ClassicFont</ClassicValue>
            <ClassicValue type="TextColor">##TextStyle.BodyText.ClassicTextColor</ClassicValue>
        </part>
        <part name="ExpandoText">
            <Font>##TextStyle.BodyText.Font</Font>
            <TextColor>##TextStyle.BodyText.TextColor</TextColor>
            <ClassicValue type="Font">##TextStyle.BodyText.ClassicFont</ClassicValue>
            <ClassicValue type="TextColor">##TextStyle.BodyText.ClassicTextColor</ClassicValue>
        </part>
        <part name="ExpandedFooterArea">
            <Font>##TextStyle.BodyText.Font</Font>
            <TextColor>##TextStyle.BodyText.TextColor</TextColor>
            <ClassicValue type="Font">##TextStyle.BodyText.ClassicFont</ClassicValue>
            <ClassicValue type="TextColor">##TextStyle.BodyText.ClassicTextColor</ClassicValue>
        </part>
        <part name="VerificationText">
            <Font>##TextStyle.BodyText.Font</Font>
            <TextColor>##TextStyle.BodyText.TextColor</TextColor>
            <ClassicValue type="Font">##TextStyle.BodyText.ClassicFont</ClassicValue>
            <ClassicValue type="TextColor">##TextStyle.BodyText.ClassicTextColor</ClassicValue>
        </part>
        <part name="FootnotePane">
            <Font>##TextStyle.BodyText.Font</Font>
            <TextColor>##TextStyle.BodyText.TextColor</TextColor>
            <ClassicValue type="Font">##TextStyle.BodyText.ClassicFont</ClassicValue>
            <ClassicValue type="TextColor">##TextStyle.BodyText.ClassicTextColor</ClassicValue>
        </part>
        <part name="RadioButtonPane">
            <Caption>
                <Font>##TextStyle.BodyText.Font</Font>
                <TextColor>##TextStyle.BodyText.TextColor</TextColor>
                <ClassicValue type="Font">##TextStyle.BodyText.ClassicFont</ClassicValue>
                <ClassicValue type="TextColor">##TextStyle.BodyText.ClassicTextColor</ClassicValue>
            </Caption>
        </part>
      <!-- part name="PrimaryPanel"></part-->
      <!-- part name="MainIcon"></part-->
      <!-- part name="CommandLinkPane"></part-->
      <!-- part name="SecondaryPanel"></part-->
      <!-- part name="ControlPane"></part-->
      <!-- part name="ButtonWrapper"></part-->
      <!-- part name="ExpandoButton"></part-->
      <!-- part name="FootnoteSeparator"></part-->
      <!-- part name="ProgressBar"></part-->
      <!-- part name="ImageAlignment"></part-->
    </class>

    <!-- 
    //
    //    Abstract Text Style class
    //
    -->
    <class name="TextStyle">
        <part name="MainInstruction">
            <caption>
                <TextColor>0 51 153</TextColor>
                <Font>Segoe UI, 12, Quality:ClearType</Font>
                <ClassicValue type="TextColor">WindowText</ClassicValue>
                <ClassicValue type="Font">CaptionFont</ClassicValue>
            </caption>
        </part>
        <part name="Instruction">
            <caption>
                <TextColor>0 51 153</TextColor>
                <Font>Segoe UI, 9, Quality:ClearType</Font>
                <ClassicValue type="TextColor">WindowText</ClassicValue>
                <ClassicValue type="Font">MenuFont</ClassicValue>
            </caption>
        </part>
        <part name="BodyTitle">
            <caption>
                <TextColor>0 0 0</TextColor>
                <Font>Segoe UI, 9, Bold, Quality:ClearType</Font>
                <ClassicValue type="TextColor">WindowText</ClassicValue>
                <ClassicValue type="Font">MenuFont;;bold</ClassicValue>
            </caption>
        </part>
        <part name="BodyText">
            <caption>
                <TextColor>0 0 0</TextColor>
                <Font>Segoe UI, 9, Quality:ClearType</Font>
                <ClassicValue type="TextColor">WindowText</ClassicValue>
                <ClassicValue type="Font">MenuFont</ClassicValue>
            </caption>
        </part>
        <part name="SecondaryText">
            <caption>
                <TextColor>0 0 0</TextColor>
                <Font>Segoe UI, 9, Quality:ClearType</Font>
                <ClassicValue type="TextColor">WindowText</ClassicValue>
                <ClassicValue type="Font">MenuFont</ClassicValue>
            </caption>
        </part>
        <part name="HyperLinkText">
            <caption>
                <TextColor>0 102 204</TextColor>
                <Font>Segoe UI, 9, Quality:ClearType</Font>
                <ClassicValue type="TextColor">WindowText</ClassicValue>
                <ClassicValue type="Font">MenuFont</ClassicValue>
            </caption>
            <state name="Normal">
                <caption>
                    <ClassicValue type="TextColor">WindowText</ClassicValue>
                    <ClassicValue type="Font">MenuFont</ClassicValue>
                </caption>
            </state>
            <state name="Hot">
                <caption>
                    <TextColor>51 153 255</TextColor>
                    <Font>Segoe UI, 9, Underline, Quality:ClearType</Font>
                    <ClassicValue type="TextColor">HotLight</ClassicValue>
                    <ClassicValue type="Font">MenuFont;;;underline</ClassicValue>
                </caption>
            </state>
            <state name="Pressed">
                <caption>
                    <TextColor>51 153 255</TextColor>
                    <Font>Segoe UI, 9, Underline, Quality:ClearType</Font>
                    <ClassicValue type="TextColor">WindowText</ClassicValue>
                    <ClassicValue type="Font">MenuFont;;;underline</ClassicValue>
                </caption>
            </state>
            <state name="Disabled">
                <caption>
                    <TextColor>126 133 156</TextColor>
                    <Font>Segoe UI, 9, Quality:ClearType</Font>
                    <ClassicValue type="TextColor">GrayText</ClassicValue>
                    <ClassicValue type="Font">MenuFont</ClassicValue>
                </caption>
            </state>
        </part>
        <part name="Expanded">
            <caption>
                <TextColor>0 0 0</TextColor>
                <Font>Segoe UI, 9, Quality:ClearType</Font>
                <ClassicValue type="TextColor">WindowText</ClassicValue>
                <ClassicValue type="Font">MenuFont</ClassicValue>
            </caption>
        </part>
        <part name="Label">
            <caption>
                <TextColor>0 0 0</TextColor>
                <Font>Segoe UI, 9, Quality:ClearType</Font>
                <ClassicValue type="TextColor">WindowText</ClassicValue>
                <ClassicValue type="Font">MenuFont</ClassicValue>
            </caption>
        </part>
        <part name="ControlLabel">
            <caption>
                <TextColor>0 102 204</TextColor>
                <Font>Segoe UI, 9, Quality:ClearType</Font>
                <ClassicValue type="TextColor">WindowText</ClassicValue>
                <ClassicValue type="Font">MenuFont</ClassicValue>
            </caption>
            <state name="Disabled">
                <TextColor>126, 133, 156</TextColor>
                <ClassicValue type="TextColor">GrayText</ClassicValue>
            </state>
        </part>
    </class>

    <!-- 
    //
    //    Toolbar Style, implemented by Toolbar
    //
    -->
    <class name="ToolbarStyle">
        <part name="Button">
            <colorhints>
                <BorderColorHint>130 135 144</BorderColorHint>
                <FillColorHint>244 244 244</FillColorHint>
            </colorhints>
        </part>
        <part name="Separator">
            <colorhints>
                <FillColorHint>130 135 144</FillColorHint>
            </colorhints>
        </part>
        <part name="DropdownButton">
            <colorhints>
                <BorderColorHint>130 135 144</BorderColorHint>
                <FillColorHint>244 244 244</FillColorHint>
            </colorhints>
        </part>
        <part name="SplitButton">
            <colorhints>
                <BorderColorHint>119 119 92</BorderColorHint>
                <FillColorHint>240 241 245</FillColorHint>
            </colorhints>
        </part>
        <part name="SplitButtonDropdown">
            <colorhints>
                <BorderColorHint>119 119 92</BorderColorHint>
                <FillColorHint>240 241 245</FillColorHint>
            </colorhints>
        </part>
        <!-- part name="SeparatorVert"></part-->
        <!-- part name="DropdownButtonGlyph"></part-->
    </class>

    <!-- 
    //
    //    Tooltip Style, implemented by Tooltip
    //
    -->
    <class name="TooltipStyle">
        <part name="Standard">
            <caption>
                <Font>##TextStyle.BodyText.Font</Font>
                <TextColor>87 87 87</TextColor>
                <ClassicValue type="TextColor">##TextStyle.BodyText.ClassicTextColor</ClassicValue>
                <ClassicValue type="Font">##TextStyle.BodyText.ClassicFont</ClassicValue>
            </caption>
        </part>
        <part name="StandardTitle">
            <caption>
                <Font>##TextStyle.BodyTitle.Font</Font>
                <TextColor>87 87 87</TextColor>
                <ClassicValue type="TextColor">##TextStyle.BodyText.ClassicTextColor</ClassicValue>
                <ClassicValue type="Font">##TextStyle.BodyText.ClassicFont</ClassicValue>
            </caption>
        </part>
        <part name="Balloon">
            <caption>
                <Font>##TextStyle.BodyText.Font</Font>
                <TextColor>##TextStyle.BodyText.TextColor</TextColor>
                <ClassicValue type="TextColor">##TextStyle.BodyText.ClassicTextColor</ClassicValue>
                <ClassicValue type="Font">##TextStyle.BodyText.ClassicFont</ClassicValue>
            </caption>
            <colorhints>
                <BorderColorHint>130 135 144</BorderColorHint>
                <FillColorHint>233 233 244</FillColorHint>
            </colorhints>
        </part>
        <part name="BalloonTitle">
            <caption>
                <Font>##TextStyle.MainInstruction.Font</Font>
                <TextColor>##TextStyle.MainInstruction.TextColor</TextColor>
                <ClassicValue type="TextColor">##TextStyle.BodyText.ClassicTextColor</ClassicValue>
                <ClassicValue type="Font">##TextStyle.BodyText.ClassicFont</ClassicValue>
            </caption>
        </part>
        <!-- part name="Close"></part-->
        <!-- part name="BalloonStem"></part-->
        <!-- part name="Wrench"></part-->
    </class>

    <!-- 
    //
    //    Trackbar Style, implemented by Trackbar
    //
    -->
    <class name="TrackBarStyle">
        <part name="Thumb">
            <colorhints>
                <AccentColorHint>71 196 70</AccentColorHint>
                <BorderColorHint>118 118 118</BorderColorHint>
                <FillColorHint>244 244 244</FillColorHint>
            </colorhints>
        </part>
        <part name="Track">
            <colorhints>
                <BorderColorHint>118 118 118</BorderColorHint>
                <FillColorHint>244 244 244</FillColorHint>
            </colorhints>
        </part>
        <!-- part name="ThumbBottom"></part-->
        <!-- part name="ThumbLeft"></part-->
        <!-- part name="ThumbRight"></part-->
        <!-- part name="ThumbTop"></part-->
        <!-- part name="ThumbVert"></part-->
        <!-- part name="Tics"></part-->
        <!-- part name="TicsVert"></part-->
        <!-- part name="TrackVert"></part-->
    </class>

    <!-- 
    //
    //    Treeview Style, implemented by Treeview
    //
    -->
    <class name="TreeViewStyle">
        <part name="Glyph">
            <colorhints>
                <AccentColorHint>71 196 70</AccentColorHint>
                <BorderColorHint>118 118 118</BorderColorHint>
                <FillColorHint>244 244 244</FillColorHint>
            </colorhints>
        </part>
        <colorhints>
            <AccentColorHint>71 196 70</AccentColorHint>
            <BorderColorHint>118 118 118</BorderColorHint>
            <FillColorHint>244 244 244</FillColorHint>
        </colorhints>
    </class>
    <!-- Treeitem implements the Explorer selection visuals -->
    <!--class name="Explorer::Treeview" inherits="Treeview">
        <part name="TreeItem"></part>
    </class-->

    <!-- 
    //
    //    Window Style, implemented by Window
    //
    //    Note: CompositedWindow::Window is a subclass of Window that is used by external applications 
    //    that want to draw their own captions when compositing.  It defines Caption and MaxCaption 
    //    parts for use with DrawThemeText(Ex). It is not meant to be used directly with DrawThemeBackground 
    //    as it currently only contains text color information.
    // 
    -->
    <class name="WindowStyle">
        <part name="Caption">
            <colorhints>
                <BorderColorHint>215 228 242</BorderColorHint>
                <FillColorHint>185 209 234</FillColorHint>
            </colorhints>
        </part>
        <part name="CloseButton">
            <colorhints>
                <BorderColorHint>255 255 255</BorderColorHint>
                <FillColorHint>228 93 61</FillColorHint>
            </colorhints>
        </part>
        <part name="HelpButton">
            <colorhints>
                <BorderColorHint>255 255 255</BorderColorHint>
                <FillColorHint>177 183 187</FillColorHint>
            </colorhints>
        </part>
        <part name="MaxButton">
            <colorhints>
                <BorderColorHint>255 255 255</BorderColorHint>
                <FillColorHint>177 183 187</FillColorHint>
            </colorhints>
        </part>
        <part name="MaxCaption">
            <colorhints>
                <FillColorHint>0 0 0</FillColorHint>
            </colorhints>
        </part>
        <part name="MDICloseButton">
            <colorhints>
                <BorderColorHint>118 118 118</BorderColorHint>
                <FillColorHint>240 241 245</FillColorHint>
            </colorhints>
        </part>
        <part name="MDIRestoreButton">
            <colorhints>
                <BorderColorHint>118 118 118</BorderColorHint>
                <FillColorHint>240 241 245</FillColorHint>
            </colorhints>
        </part>
        <part name="MinButton">
            <colorhints>
                <BorderColorHint>255 255 255</BorderColorHint>
                <FillColorHint>177 183 187</FillColorHint>
            </colorhints>
        </part>
        <part name="MinCaption">
            <colorhints>
                <FillColorHint>192 200 217</FillColorHint>
            </colorhints>
        </part>
        <part name="RestoreButton">
            <colorhints>
                <BorderColorHint>255 255 255</BorderColorHint>
                <FillColorHint>177 183 187</FillColorHint>
            </colorhints>
        </part>
        <!-- part name="CaptionSizingTemplate"></part-->
        <!-- part name="Dialog"></part-->
        <!-- part name="FrameBottom"></part-->
        <!-- part name="FrameLeft"></part-->
        <!-- part name="FrameRight"></part-->
        <!-- part name="MDIMinButton"></part-->
        <!-- part name="SmallCaption"></part-->
        <!-- part name="SmallCaptionSizingTemplate"></part-->
        <!-- part name="SmallCloseButton"></part-->
        <!-- part name="SmallFrameBottom"></part-->
        <!-- part name="SmallFrameLeft"></part-->
        <!-- part name="SmallFrameRight"></part-->
    </class>

</visualstyleguide>
=== C:/Users/treeman/Desktop/windows nt source code\xbox\Xbox Live Source\XONLINE_MAIN\public\ext\sdk\win7\sdk\include\winmeta.xml ===
<instrumentationManifest
    xmlns="http://schemas.microsoft.com/win/2004/08/events" 
    xmlns:win="http://manifests.microsoft.com/win/2004/08/windows/events"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://schemas.microsoft.com/win/2004/08/events eventman.xsd"    
    >
    <metadata name="evt:meta/winTypes">
        <channels>
            <channel name="TraceClassic" type="Debug" symbol="WINEVENT_CHANNEL_CLASSIC_TRACE"
                value="0" message="$(string.channel.TraceClassic)">
              Events for Classic ETW tracing.
            </channel>
            <channel name="System" type="Admin" symbol="WINEVENT_CHANNEL_GLOBAL_SYSTEM"
                isolation="System" value="8" message="$(string.channel.System)">
              Events for all installed system services.  This channel is secured to applications running under
              system service accounts or user applications running under local adminstrator privileges.
            </channel>
            <channel name="Application" type="Admin" symbol="WINEVENT_CHANNEL_GLOBAL_APPLICATION"
                isolation="Application" value="9" message="$(string.channel.Application)">
              Events for all user-level applications.  This channel is not secured and open to any applications.
              Applications which log extensive information should define an application-specific channel.
            </channel>
            <channel name="Security" type="Admin" symbol="WINEVENT_CHANNEL_GLOBAL_SECURITY"
                isolation="System"  value="10" message="$(string.channel.Security)">
              The Windows Audit Log.  For exclusive use of the Windows Local Security Authority.  User events
              may appear as audits if supported by the underlying application.
            </channel>
        </channels>

        <!-- Standard Windows system reporting levels -->
        <levels>
            <level name="win:LogAlways" symbol="WINEVENT_LEVEL_LOG_ALWAYS" value="0" message="$(string.level.LogAlways)"> Log Always </level>
            <level name="win:Critical" symbol="WINEVENT_LEVEL_CRITICAL" value="1" message="$(string.level.Critical)"> Only critical errors </level>
            <level name="win:Error" symbol="WINEVENT_LEVEL_ERROR" value="2" message="$(string.level.Error)"> All errors, includes win:Critical </level>
            <level name="win:Warning" symbol="WINEVENT_LEVEL_WARNING" value="3" message="$(string.level.Warning)"> All warnings, includes win:Error </level>
            <level name="win:Informational" symbol="WINEVENT_LEVEL_INFO" value="4" message="$(string.level.Informational)"> All informational content, including win:Warning </level>
            <level name="win:Verbose" symbol="WINEVENT_LEVEL_VERBOSE" value="5" message="$(string.level.Verbose)"> All tracing, including previous levels </level>

            <!-- The following are unused.  They are place holders so that users dont accidentally use those values in their own definitions -->
            <level name="win:ReservedLevel6" symbol="WINEVENT_LEVEL_RESERVED_6" value="6"/>
            <level name="win:ReservedLevel7" symbol="WINEVENT_LEVEL_RESERVED_7" value="7"/>
            <level name="win:ReservedLevel8" symbol="WINEVENT_LEVEL_RESERVED_8" value="8"/>
            <level name="win:ReservedLevel9" symbol="WINEVENT_LEVEL_RESERVED_9" value="9"/>
            <level name="win:ReservedLevel10" symbol="WINEVENT_LEVEL_RESERVED_10" value="10"/>
            <level name="win:ReservedLevel11" symbol="WINEVENT_LEVEL_RESERVED_11" value="11"/>
            <level name="win:ReservedLevel12" symbol="WINEVENT_LEVEL_RESERVED_12" value="12"/>
            <level name="win:ReservedLevel13" symbol="WINEVENT_LEVEL_RESERVED_13" value="13"/>
            <level name="win:ReservedLevel14" symbol="WINEVENT_LEVEL_RESERVED_14" value="14"/>
            <level name="win:ReservedLevel15" symbol="WINEVENT_LEVEL_RESERVED_15" value="15"/>
            <!-- End of reserved values -->
        </levels>

        <!-- Standard Windows system tasks -->
        <tasks>
            <task name="win:None" value="0" symbol="WINEVENT_TASK_NONE" message="$(string.task.None)"> undefined task </task>
        </tasks>

        <!-- Standard Windows system opcodes -->
        <opcodes>    
            <opcode name="win:Info" value="0" symbol="WINEVENT_OPCODE_INFO" message="$(string.opcode.Info)"> An informational event </opcode>
            <opcode name="win:Start" value="1" symbol="WINEVENT_OPCODE_START" message="$(string.opcode.Start)"> An activity start event </opcode>
            <opcode name="win:Stop" value="2" symbol="WINEVENT_OPCODE_STOP" message="$(string.opcode.Stop)"> An activity end event </opcode>
            <opcode name="win:DC_Start" value="3" symbol="WINEVENT_OPCODE_DC_START" message="$(string.opcode.DCStart)"> A trace collection start event </opcode>
            <opcode name="win:DC_Stop" value="4" symbol="WINEVENT_OPCODE_DC_STOP" message="$(string.opcode.DCStop)"> A trace collection end event </opcode>
            <opcode name="win:Extension" value="5" symbol="WINEVENT_OPCODE_EXTENSION" message="$(string.opcode.Extension)"> An extensional event </opcode>
            <opcode name="win:Reply" value="6" symbol="WINEVENT_OPCODE_REPLY" message="$(string.opcode.Reply)"> A reply event </opcode>
            <opcode name="win:Resume" value="7" symbol="WINEVENT_OPCODE_RESUME" message="$(string.opcode.Resume)"> An event representing the activity resuming from the suspension </opcode>
            <opcode name="win:Suspend" value="8" symbol="WINEVENT_OPCODE_SUSPEND" message="$(string.opcode.Suspend)"> An event representing the activity is suspended, pending another activity's completion </opcode>
            <opcode name="win:Send" value="9" symbol="WINEVENT_OPCODE_SEND" message="$(string.opcode.Send)"> An event representing the activity is transferred to another component, and can continue to work </opcode>
            
            <!-- The following are unused.  They are place holders so that users dont accidentally use those values in their own definitions -->
            <opcode name="win:Receive" value="240" symbol="WINEVENT_OPCODE_RECEIVE" message="$(string.opcode.Receive)"> An event representing receiving an activity transfer from another component </opcode>
            <opcode name="win:ReservedOpcode241" symbol="WINEVENT_OPCODE_RESERVED_241" value="241"/>
            <opcode name="win:ReservedOpcode242" symbol="WINEVENT_OPCODE_RESERVED_242" value="242"/>
            <opcode name="win:ReservedOpcode243" symbol="WINEVENT_OPCODE_RESERVED_243" value="243"/>
            <opcode name="win:ReservedOpcode244" symbol="WINEVENT_OPCODE_RESERVED_244" value="244"/>
            <opcode name="win:ReservedOpcode245" symbol="WINEVENT_OPCODE_RESERVED_245" value="245"/>
            <opcode name="win:ReservedOpcode246" symbol="WINEVENT_OPCODE_RESERVED_246" value="246"/>
            <opcode name="win:ReservedOpcode247" symbol="WINEVENT_OPCODE_RESERVED_247" value="247"/>
            <opcode name="win:ReservedOpcode248" symbol="WINEVENT_OPCODE_RESERVED_248" value="248"/>
            <opcode name="win:ReservedOpcode249" symbol="WINEVENT_OPCODE_RESERVED_249" value="249"/>
            <opcode name="win:ReservedOpcode250" symbol="WINEVENT_OPCODE_RESERVED_250" value="250"/>
            <opcode name="win:ReservedOpcode251" symbol="WINEVENT_OPCODE_RESERVED_251" value="251"/>
            <opcode name="win:ReservedOpcode252" symbol="WINEVENT_OPCODE_RESERVED_252" value="252"/>
            <opcode name="win:ReservedOpcode253" symbol="WINEVENT_OPCODE_RESERVED_253" value="253"/>
            <opcode name="win:ReservedOpcode254" symbol="WINEVENT_OPCODE_RESERVED_254" value="254"/>
            <opcode name="win:ReservedOpcode255" symbol="WINEVENT_OPCODE_RESERVED_255" value="255"/> 
            <!-- End of reserved values -->
        </opcodes>

        <!-- Standard Windows system keywords -->
        <keywords>
            <keyword name="win:AnyKeyword" mask="0x0" symbol="WINEVT_KEYWORD_ANY" message="$(string.keyword.AnyKeyword)">
                 Wild card value
            </keyword>

            <keyword name="win:ResponseTime" mask="0x1000000000000" symbol="WINEVENT_KEYWORD_RESPONSE_TIME" message="$(string.keyword.ResponseTime)">
                 Attached to all events providing response time information
            </keyword>
            <keyword name="win:WDIContext" mask="0x2000000000000" symbol="WINEVENT_KEYWORD_WDI_CONTEXT" message="$(string.keyword.WDIContext)">
                 Attached to all WDI context events
            </keyword>
            <keyword name="win:WDIDiag" mask="0x4000000000000" symbol="WINEVENT_KEYWORD_WDI_DIAG" message="$(string.keyword.WDIDiag)">
                 Attached to all WDI diag events
            </keyword>
            <keyword name="win:SQM" mask="0x8000000000000" symbol="WINEVENT_KEYWORD_SQM" message="$(string.keyword.SQM)">
                 Attached to all SQM events
            </keyword>
            <keyword name="win:AuditFailure" mask="0x10000000000000" symbol="WINEVENT_KEYWORD_AUDIT_FAILURE" message="$(string.keyword.AuditFailure)">
                 Attached to all failed security audits
            </keyword>
            <keyword name="win:AuditSuccess" mask="0x20000000000000" symbol="WINEVENT_KEYWORD_AUDIT_SUCCESS" message="$(string.keyword.AuditSuccess)">
                 Attached to all successful security audits
            </keyword>
            <keyword name="win:CorrelationHint" mask="0x40000000000000" symbol="WINEVENT_KEYWORD_CORRELATION_HINT" message="$(string.keyword.CorrelationHint)">
                 Attached to transfer events where the related Activity ID is a computed value and not a GUID
            </keyword>
            <keyword name="win:EventlogClassic" mask="0x80000000000000" symbol="WINEVENT_KEYWORD_EVENTLOG_CLASSIC" message="$(string.keyword.Classic)">
                 Attached to events raised using classic eventlog API
            </keyword>

            <!-- The following are used to pass channel information.  They are place holders so that users dont accidentally use those values in their own definitions -->
            <keyword name="win:ReservedKeyword56" mask="0x100000000000000" symbol="WINEVENT_KEYWORD_RESERVED_56"/>
            <keyword name="win:ReservedKeyword57" mask="0x200000000000000" symbol="WINEVENT_KEYWORD_RESERVED_57"/>
            <keyword name="win:ReservedKeyword58" mask="0x400000000000000" symbol="WINEVENT_KEYWORD_RESERVED_58"/>
            <keyword name="win:ReservedKeyword59" mask="0x800000000000000" symbol="WINEVENT_KEYWORD_RESERVED_59"/>
            <keyword name="win:ReservedKeyword60" mask="0x1000000000000000" symbol="WINEVENT_KEYWORDE_RESERVED_60"/>
            <keyword name="win:ReservedKeyword61" mask="0x2000000000000000" symbol="WINEVENT_KEYWORD_RESERVED_61"/>
            <keyword name="win:ReservedKeyword62" mask="0x4000000000000000" symbol="WINEVENT_KEYWORD_RESERVED_62"/>
            <keyword name="win:ReservedKeyword63" mask="0x8000000000000000" symbol="WINEVENT_KEYWORD_RESERVED_63"/>
            <!-- End of reserved values -->
        </keywords>
        
        <!-- Standard Windows & CLR system types -->
        <types xmlns:xs="http://www.w3.org/2001/XMLSchema">
            <xmlTypes>
                 <xmlType name="xs:string" value="1" symbol="WINEVENT_OUT_TYPE_STRING"/>
                 <xmlType name="xs:dateTime" value="2" symbol="WINEVENT_OUT_TYPE_DATE_TIME"/>
                 <xmlType name="xs:byte" value="3" symbol="WINEVENT_OUT_TYPE_BYTE"/>
                 <xmlType name="xs:unsignedByte" value="4" symbol="WINEVENT_OUT_TYPE_UNSIGNED_BYTE"/>
                 <xmlType name="xs:short" value="5" symbol="WINEVENT_OUT_TYPE_SHORT"/>
                 <xmlType name="xs:unsignedShort" value="6" symbol="WINEVENT_OUT_TYPE_UNSIGNED_SHORT"/>
                 <xmlType name="xs:int" value="7" symbol="WINEVENT_OUT_TYPE_INT"/>
                 <xmlType name="xs:unsignedInt" value="8" symbol="WINEVENT_OUT_TYPE_UNSIGNED_INT"/>
                 <xmlType name="xs:long" value="9" symbol="WINEVENT_OUT_TYPE_LONG"/>
                 <xmlType name="xs:unsignedLong" value="10" symbol="WINEVENT_OUT_TYPE_UNSIGNED_LONG"/>
                 <xmlType name="xs:float" value="11" symbol="WINEVENT_OUT_TYPE_FLOAT"/>
                 <xmlType name="xs:double" value="12" symbol="WINEVENT_OUT_TYPE_DOUBLE"/>
                 <xmlType name="xs:boolean" value="13" symbol="WINEVENT_OUT_TYPE_BOOLEAN"/>
                 <xmlType name="xs:GUID" value="14" symbol="WINEVENT_OUT_TYPE_GUID"/>
                 <xmlType name="xs:hexBinary" value="15" symbol="WINEVENT_OUT_TYPE_HEXBINARY"/>
                 <xmlType name="win:HexInt8" value="16" symbol="WINEVENT_OUT_TYPE_HEX_INT8"/>
                 <xmlType name="win:HexInt16" value="17" symbol="WINEVENT_OUT_TYPE_HEX_INT16"/>
                 <xmlType name="win:HexInt32" value="18" symbol="WINEVENT_OUT_TYPE_HEX_INT32"/>
                 <xmlType name="win:HexInt64" value="19" symbol="WINEVENT_OUT_TYPE_HEX_INT64"/>
                 <xmlType name="win:PID" value="20" symbol="WINEVENT_OUT_TYPE_PID"/>
                 <xmlType name="win:TID" value="21" symbol="WINEVENT_OUT_TYPE_TID"/>
                 <xmlType name="win:Port" value="22" symbol="WINEVENT_OUT_TYPE_PORT"/>            
                 <xmlType name="win:IPv4" value="23" symbol="WINEVENT_OUT_TYPE_IPV4"/>
                 <xmlType name="win:IPv6" value="24" symbol="WINEVENT_OUT_TYPE_IPV6"/>             
                 <xmlType name="win:SocketAddress" value="25" symbol="WINEVENT_OUT_TYPE_SOCKET_ADDRESS"/>    
                 <xmlType name="win:CIMDateTime" value="26" symbol="WINEVENT_OUT_TYPE_CIMDATETIME"/>    
                 <xmlType name="win:ETWTIME" value="27" symbol="WINEVENT_OUT_TYPE_ETWTIME"/>
                 <xmlType name="win:Xml" value="28" symbol="WINEVENT_OUT_TYPE_XML"/>
                 <xmlType name="win:ErrorCode" value="29" symbol="WINEVENT_OUT_TYPE_ERROR_CODE"/>
                 <xmlType name="win:Win32Error" value="30" symbol="WINEVENT_OUT_TYPE_WIN32_ERROR"/>
                 <xmlType name="win:NTSTATUS" value="31" symbol="WINEVENT_OUT_TYPE_NTSTATUS_ERROR"/>
                 <xmlType name="win:HResult" value="32" symbol="WINEVENT_OUT_TYPE_HRESULT_ERROR"/>
                 <xmlType name="win:DateTimeCultureInsensitive" value="33" symbol="WINEVENT_OUT_TYPE_DATE_TIME_CULTURE_INSENSITIVE"/>
            </xmlTypes>
            <inTypes>
                <inType name="win:UnicodeString" value="1" symbol="WINEVENT_TYPE_NULL_TERMINATED_STRING">
                    <description> A NULL-terminated UNICODE string. </description>
                    <outType default="true" xmlType="xs:string" />
                    <outType xmlType="win:Xml" />
                </inType>
                <inType name="win:AnsiString" value="2" symbol="WINEVENT_TYPE_NULL_TERMINATED_ANSI_STRING">
                    <description> A NULL-terminated ANSI string. </description>
                    <outType default="true" xmlType="xs:string" />
                    <outType xmlType="win:Xml" />                
                </inType>
                <inType name="win:Int8" value="3" symbol="WINEVENT_TYPE_INT8">
                    <description> A signed 8-bit integer. </description>
                    <outType default="true" xmlType="xs:byte" />
                </inType>
                <inType name="win:UInt8" value="4" symbol="WINEVENT_TYPE_UINT8">
                    <description> An unsigned 8-bit integer. </description>
                    <outType default="true" xmlType="xs:unsignedByte" />
                    <outType xmlType="win:HexInt8">An integer in hex format</outType>
                </inType>
                <inType name="win:Int16" value="5" symbol="WINEVENT_TYPE_INT16">
                    <description> A signed 16-bit integer.</description>
                    <outType default="true" xmlType="xs:short" />
                </inType>
                <inType name="win:UInt16" value="6" symbol="WINEVENT_TYPE_UINT16">
                    <description> An unsigned 16-bit integer </description>
                    <outType default="true" xmlType="xs:unsignedShort" />
                    <outType xmlType="win:Port" />
                    <outType xmlType="win:HexInt16">An integer in hex format</outType>
                </inType>
                <inType name="win:Int32" value="7" symbol="WINEVENT_TYPE_INT32">
                    <description> A signed 32-bit integer. </description>
                    <outType default="true" xmlType="xs:int" />
                    <outType xmlType="win:HResult"> A message string corresponding to system HResult error code. </outType>
                </inType>
                <inType name="win:UInt32" value="8" symbol="WINEVENT_TYPE_UINT32">
                    <description> An unsigned 32-bit integer. </description>
                    <outType default="true" xmlType="xs:unsignedInt" />
                    <outType xmlType="win:PID" />
                    <outType xmlType="win:TID" />
                    <outType xmlType="win:IPv4" />
                    <outType xmlType="win:ETWTIME" />
                    <outType xmlType="win:ErrorCode"> Deprecated, same as win:HexInt32. </outType>
                    <outType xmlType="win:Win32Error"> A message string corresponding to system win32 error code. </outType>
                    <outType xmlType="win:NTSTATUS"> A message string corresponding to system NTSTATUS error code. </outType>
                    <outType xmlType="win:HexInt32">An integer in hex format</outType>
                </inType>
                <inType name="win:Int64" value="9" symbol="WINEVENT_TYPE_INT64">
                    <description> A signed 64-bit integer. </description>
                    <outType default="true" xmlType="xs:long" />
                </inType>
                <inType name="win:UInt64" value="10" symbol="WINEVENT_TYPE_UINT64">
                    <description> An unsigned 64-bit integer. </description>
                    <outType default="true" xmlType="xs:unsignedLong" />
                    <outType xmlType="win:ETWTIME" />
                    <outType xmlType="win:HexInt64">An integer in hex format</outType>
                </inType>
                <inType name="win:Float" value="11" symbol="WINEVENT_TYPE_FLOAT">
                    <description> An IEEE 4-byte floating-point value </description>
                    <outType default="true" xmlType="xs:float" />
                </inType>
                <inType name="win:Double" value="12" symbol="WINEVENT_TYPE_DOUBLE">
                    <description> An IEEE 8-byte floating-point value </description>
                    <outType default="true" xmlType="xs:double" />
                </inType>
                <inType name="win:Boolean" value="13" symbol="WINEVENT_TYPE_BOOL">
                    <description> A 32-bit value where 0 is false, 1 is true. </description>
                    <outType default="true" xmlType="xs:boolean"/>
                </inType>            
                <inType name="win:Binary" value="14" symbol="WINEVENT_TYPE_BINARY">
                    <description>Variable size binary data.</description>
                    <outType default="true" xmlType="xs:hexBinary"/>
                    <outType xmlType="win:IPv6"/>
                    <outType xmlType="win:SocketAddress"/>
                </inType>            
                <inType name="win:GUID" value="15" symbol="WINEVENT_TYPE_GUID">
                    <description> A DCE-compliant 128-bit UUID. XML spec: {12345678-1234-4667-1234-123456789abc}</description>
                    <outType default="true" xmlType="xs:GUID"/>
                </inType>
                <inType name="win:Pointer" value="16" symbol="WINEVENT_TYPE_POINTER">
                    <description> A pointer; sized to the current platform (32-bit or 64-bit). XML spec: hex representation of a pointer</description>
                    <outType default="true" xmlType="win:HexInt64"/>
                </inType>
                <inType name="win:FILETIME" value="17" symbol="WINEVENT_TYPE_FILETIME">
                    <description> A Windows FILETIME struct. </description>
                    <outType default="true" xmlType="xs:dateTime" />
                    <outType xmlType="win:DateTimeCultureInsensitive"> DateTime string without any marker related with culture. Ex) Left-To-Right</outType>
                </inType>
                <inType name="win:SYSTEMTIME" value="18" symbol="WINEVENT_TYPE_SYSTEMTIME">
                    <description> A Windows SYSTEMTIME struct.</description>
                    <outType default="true" xmlType="xs:dateTime" />
                    <outType xmlType="win:DateTimeCultureInsensitive"> DateTime string without any marker related with culture. Ex) Left-To-Right</outType>
                </inType>
                <inType name="win:SID" value="19" symbol="WINEVENT_TYPE_SID">
                    <description> A self-relative Windows SID structure. XML spec: S-1-0-0.</description>
                    <outType default="true" xmlType="xs:string"/>
                </inType>            
                <inType name="win:HexInt32" value="20" symbol="WINEVENT_TYPE_HEXINT32">
                    <description> A hexidecimal representation of an unsigned 32-bit integer. </description>
                    <outType default="true" xmlType="win:HexInt32"/>
                    <outType xmlType="win:ErrorCode"> Deprecated, same as win:HexInt32. </outType>
                    <outType xmlType="win:Win32Error"> A message string corresponding to system win32 error code. </outType>
                    <outType xmlType="win:NTSTATUS"> A message string corresponding to system NTSTATUS error code. </outType>
                </inType>
                <inType name="win:HexInt64" value="21" symbol="WINEVENT_TYPE_HEXINT64">
                    <description> A hexidecimal representation of an unsigned 64-bit integer. </description>
                    <outType default="true" xmlType="win:HexInt64"/>
                </inType>
            </inTypes>
        </types>

        <messageTable>
            <!-- Categories for classic publishers -->
            <message value="1" message="$(string.category.Devices)"/>
            <message value="2" message="$(string.category.Disk)"/>
            <message value="3" message="$(string.category.Printers)"/>
            <message value="4" message="$(string.category.Services)"/>
            <message value="5" message="$(string.category.Shell)"/>
            <message value="6" message="$(string.category.SystemEvent)"/>
            <message value="7" message="$(string.category.Network)"/>

            <!-- Channel names for classic global logs -->
            <message value="256" message="$(string.channel.Application)"/>
            <message value="257" message="$(string.channel.Security)"/>
            <message value="258" message="$(string.channel.System)"/>
        </messageTable>

    </metadata>
    
    <localization>
        <resources culture="en-US">
            <stringTable>
                <!-- Categories for classic publishers.  THESE MUST START AT ENTRY 0! -->
                <string id="category.Reserved" value="Reserved"/>
                <string id="category.Devices" value="Devices"/>
                <string id="category.Disk" value="Disk"/>
                <string id="category.Printers" value="Printers"/>
                <string id="category.Services" value="Services"/>
                <string id="category.Shell" value="Shell"/>
                <string id="category.SystemEvent" value="System Event"/>
                <string id="category.Network" value="Network"/>

                <string id="level.LogAlways" value="Log Always"/>
                <string id="level.Critical" value="Critical"/>
                <string id="level.Error" value="Error"/>
                <string id="level.Warning" value="Warning"/>
                <string id="level.Informational" value="Information"/>
                <string id="level.Verbose" value="Verbose"/>

                <string id="opcode.Info" value="Info"/>
                <string id="opcode.Start" value="Start"/>
                <string id="opcode.Stop" value="Stop"/>
                <string id="opcode.DCStart" value="DCStart"/>
                <string id="opcode.DCStop" value="DCStop"/>
                <string id="opcode.Extension" value="Extension"/>
                <string id="opcode.Reply" value="Reply"/>
                <string id="opcode.Resume" value="Resume"/>
                <string id="opcode.Suspend" value="Suspend"/>
                <string id="opcode.Send" value="Send"/>
                <string id="opcode.Receive" value="Receive"/>
 
                <string id="task.None" value="None"/>

                <string id="keyword.AnyKeyword" value="AnyKeyword"/>
                <string id="keyword.ResponseTime" value="Response Time"/>
                <string id="keyword.WDIContext" value="WDI Context"/>
                <string id="keyword.WDIDiag" value="WDI Diag"/>
                <string id="keyword.SQM" value="SQM"/>
                <string id="keyword.AuditFailure" value="Audit Failure"/>
                <string id="keyword.AuditSuccess" value="Audit Success"/>
                <string id="keyword.CorrelationHint" value="Correlation Hint"/>
                <string id="keyword.Classic" value="Classic"/>

                <string id="channel.TraceClassic" value="TraceClassic"/>
                <string id="channel.System" value="System"/>
                <string id="channel.Application" value="Application"/>
                <string id="channel.Security" value="Security"/>
            </stringTable>
        </resources>
    </localization>

</instrumentationManifest>
=== C:/Users/treeman/Desktop/windows nt source code\xbox\Xbox Live Source\XONLINE_MAIN\public\ext\sdk\win7\sdk\include\atl90\Aqua\Style.xml ===
<STYLE>
	<VERSION>
		<NUMBER>2007</NUMBER>
		<TYPE>11</TYPE>
		<ID_PREFIX>AQUA_</ID_PREFIX>
	</VERSION>
	<DESCRIPTION>
		<NAME>Aqua</NAME>
	</DESCRIPTION>
	<GLOBALS>
		<BarText>0, 21, 110</BarText>
		<BarFace>206, 212, 225</BarFace>
		<ActiveCaption>218, 223, 234</ActiveCaption>
		<CaptionText>21, 74, 147</CaptionText>
		<InactiveCaption>181, 189, 211</InactiveCaption>
		<InactiveCaptionText>21, 74, 147</InactiveCaptionText>
		<FloatToolBarBorder>141, 149, 173</FloatToolBarBorder>
		<BarShadow>177, 187, 198</BarShadow>
		<BarDkShadow>106, 112, 128</BarDkShadow>
		<BarLight>218, 223, 234</BarLight>
		<AutoPremultiply>TRUE</AutoPremultiply>
		<HighlightGradientDark>247, 192, 91</HighlightGradientDark>
		<HighlightGradientLight>255, 255, 220</HighlightGradientLight>
		<HighlightDnGradientDark>247, 218, 124</HighlightDnGradientDark>
		<HighlightDnGradientLight>232, 127, 8</HighlightDnGradientLight>
		<HighlightCheckedGradientDark>238, 149, 21</HighlightCheckedGradientDark>
		<HighlightCheckedGradientLight>251, 230, 148</HighlightCheckedGradientLight>
		<PressedButtonBorder></PressedButtonBorder>
		<Highlight>180, 201, 233</Highlight>
		<HighlightText>0, 0, 0</HighlightText>
		<TOOLTIP>
			<DRAW_SEPARATOR>FALSE</DRAW_SEPARATOR>
			<ROUNDED_CORNERS>TRUE</ROUNDED_CORNERS>
			<COLOR_FILL>255, 255, 255</COLOR_FILL>
			<COLOR_FILLGRADIENT>206, 212, 225</COLOR_FILLGRADIENT>
			<COLOR_TEXT>76, 76, 76</COLOR_TEXT>
			<COLOR_BORDER>118, 118, 118</COLOR_BORDER>
		</TOOLTIP>
	</GLOBALS>
	<MAINWND>
		<CAPTION>
			<ActiveStart>187, 186, 186</ActiveStart>
			<ActiveFinish>248, 248, 248</ActiveFinish>
			<InactiveStart>224, 224, 224</InactiveStart>
			<InactiveFinish>252, 252, 252</InactiveFinish>
			<ActiveText>69, 69, 69</ActiveText>
			<InactiveText>163, 163, 163</InactiveText>
			<ActiveTitleText>123, 123, 123</ActiveTitleText>
			<InactiveTitleText>183, 183, 183</InactiveTitleText>
			<TextCenter>FALSE</TextCenter>
			<BORDER>
				<SIZE>35, 31</SIZE>
				<CORNERS>14, 22, 14, 1</CORNERS>
				<SIDES>14, 2, 14, 1</SIDES>
			</BORDER>
			<BUTTONS>
				<NORMAL>
					<ConstSize>21, 21</ConstSize>
					<IconSize>21, 21</IconSize>
					<SIZE>21, 21</SIZE>
					<CORNERS>4, 4, 4, 4</CORNERS>
				</NORMAL>
				<SMALL>
					<ConstSize>16, 16</ConstSize>
					<IconSize>16, 14</IconSize>
					<SIZE>21, 21</SIZE>
					<CORNERS>4, 4, 4, 4</CORNERS>
				</SMALL>
			</BUTTONS>
		</CAPTION>
		<ROUND_BORDER>9, 9</ROUND_BORDER>
		<BORDER>
			<SIZE>35, 23</SIZE>
			<CORNERS>17, 0, 17, 22</CORNERS>
			<SIDES>17, 0, 17, 17</SIDES>
		</BORDER>
		<BORDER_MDICHILD>
			<SIZE>35, 23</SIZE>
			<CORNERS>17, 0, 17, 22</CORNERS>
			<SIDES>17, 0, 17, 17</SIDES>
		</BORDER_MDICHILD>
		<MainClientArea>181, 189, 211</MainClientArea>
	</MAINWND>
	<EDIT>
		<BorderHighlighted>148, 168, 198</BorderHighlighted>
	</EDIT>
	<COMBO>
		<BorderHighlighted>148, 168, 198</BorderHighlighted>
		<BorderPressed>148, 168, 198</BorderPressed>
		<BUTTON>
			<GradientStartNormal>231, 234, 241</GradientStartNormal>
			<GradientFinishNormal>231, 234, 241</GradientFinishNormal>
			<GradientStartHighlighted>211, 211, 211</GradientStartHighlighted>
			<GradientFinishHighlighted>246, 246, 245</GradientFinishHighlighted>
			<GradientStartPressed>230, 230, 230</GradientStartPressed>
			<GradientFinishPressed>197, 197, 197</GradientFinishPressed>
			<BtnBorderHighlighted>148, 168, 198</BtnBorderHighlighted>
			<BtnBorderPressed>148, 168, 198</BtnBorderPressed>
		</BUTTON>
	</COMBO>
	<MENU>
		<Light>245, 245, 245</Light>
		<Rarely>206, 212, 225</Rarely>
		<Border>125, 123, 123</Border>
		<Separator1>225, 225, 225</Separator1>
		<Separator2>255, 255, 255</Separator2>
		<ItemBorder>190, 202, 223</ItemBorder>
		<ItemBack>
			<SIZE>20, 20</SIZE>
			<CORNERS>2, 2, 2, 2</CORNERS>
		</ItemBack>
		<ItemCheck>
			<SIZE>10, 14</SIZE>
		</ItemCheck>
		<ItemRadio>
			<SIZE>10, 14</SIZE>
		</ItemRadio>
		<Highlighted>
			<SIZE>55, 22</SIZE>
			<CORNERS>5, 5, 5, 5</CORNERS>
			<SIDES>1, 5, 1, 5</SIDES>
		</Highlighted>
		<HighlightedDisabled>
			<SIZE>55, 22</SIZE>
			<CORNERS>5, 5, 5, 5</CORNERS>
			<SIDES>1, 5, 1, 5</SIDES>
		</HighlightedDisabled>
		<ScrollBtn_T>
			<SIZE>30, 12</SIZE>
			<CORNERS>2, 2, 2, 2</CORNERS>
		</ScrollBtn_T>
		<TextNormal>0, 21, 110</TextNormal>
		<TextHighlighted>0, 21, 110</TextHighlighted>
		<TextDisabled>167, 167, 167</TextDisabled>
		<ImagesColor>0, 21, 110</ImagesColor>
		<BorderSize>2</BorderSize>
	</MENU>
	<BARS>
		<DEFAULT>
			<Bkgnd>235, 235, 235</Bkgnd>
			<GradientLight>196, 202, 217</GradientLight>
			<GradientDark>196, 202, 217</GradientDark>
		</DEFAULT>
		<TOOLBAR>
			<GradientLight>225, 226, 236</GradientLight>
			<GradientDark>149, 147, 177</GradientDark>
			<GradientVertLight>225, 226, 236</GradientVertLight>
			<GradientVertDark>149, 147, 177</GradientVertDark>
			<CustomizeButtonGradientLight>179, 178, 200</CustomizeButtonGradientLight>
			<CustomizeButtonGradientDark>118, 116, 146</CustomizeButtonGradientDark>
			<BottomLineColor>124, 124, 148</BottomLineColor>
			<GRIPPER>
				<SIZE>4, 4</SIZE>
				<TRANSPARENT>255, 0, 255</TRANSPARENT>
			</GRIPPER>
			<TEAR>
				<SIZE>35, 3</SIZE>
				<TRANSPARENT>255, 0, 255</TRANSPARENT>
			</TEAR>
			<BUTTON>
				<SIZE>22, 22</SIZE>
				<CORNERS>2, 2, 2, 2</CORNERS>
			</BUTTON>
			<BORDER>
				<SIZE>7, 7</SIZE>
				<CORNERS>3, 3, 3, 3</CORNERS>
				<SIDES>1, 1, 1, 1</SIDES>
			</BORDER>
			<TextNormal>0, 21, 110</TextNormal>
			<TextHighlighted>0, 21, 110</TextHighlighted>
			<TextDisabled>159, 141, 154</TextDisabled>
		</TOOLBAR>
		<MENUBAR>
			<GradientLight>235, 235, 235</GradientLight>
			<GradientDark>196, 195, 195</GradientDark>
			<GradientVertLight>235, 235, 235</GradientVertLight>
			<GradientVertDark>196, 195, 195</GradientVertDark>
			<TextNormal>0, 21, 110</TextNormal>
			<TextHighlighted>0, 21, 110</TextHighlighted>
			<TextDisabled>159, 141, 154</TextDisabled>
			<BUTTON>
				<SIZE>22, 20</SIZE>
				<CORNERS>2, 2, 2, 2</CORNERS>
				<TRANSPARENT>255, 0, 255</TRANSPARENT>
			</BUTTON>
		</MENUBAR>
		<POPUPBAR>
			<ROUND_BORDER>3, 3</ROUND_BORDER>
			<BORDER>
				<SIZE>7, 7</SIZE>
				<CORNERS>3, 3, 3, 3</CORNERS>
				<SIDES>2, 2, 2, 2</SIDES>
				<TRANSPARENT>255, 0, 255</TRANSPARENT>
			</BORDER>
			<RESIZEBAR>
				<BACK>
					<SIZE>3, 11</SIZE>
					<CORNERS>1, 2, 1, 1</CORNERS>
				</BACK>
				<ICON_HV>
					<SIZE>9, 8</SIZE>
					<TRANSPARENT>255, 0, 255</TRANSPARENT>
				</ICON_HV>
				<ICON_HVT>
					<SIZE>9, 8</SIZE>
					<TRANSPARENT>255, 0, 255</TRANSPARENT>
				</ICON_HVT>
				<ICON_V>
					<SIZE>15, 3</SIZE>
					<TRANSPARENT>255, 0, 255</TRANSPARENT>
				</ICON_V>
			</RESIZEBAR>
		</POPUPBAR>
		<STATUSBAR>
			<BACK>
				<SIZE>35, 23</SIZE>
				<CORNERS>5, 8, 5, 5</CORNERS>
				<SIDES>1, 8, 1, 3</SIDES>
			</BACK>
			<BACK_EXT>
				<SIZE>35, 23</SIZE>
				<CORNERS>2, 8, 5, 5</CORNERS>
				<SIDES>2, 8, 1, 3</SIDES>
			</BACK_EXT>
			<PANEBORDER>
				<SIZE>2, 20</SIZE>
			</PANEBORDER>
			<SIZEBOX>
				<SIZE>11, 11</SIZE>
			</SIZEBOX>
			<TextNormal>0, 21, 110</TextNormal>
			<TextDisabled>159, 141, 154</TextDisabled>
		</STATUSBAR>
		<CAPTIONBAR>
			<GradientLight>243, 243, 247</GradientLight>
			<GradientDark>215, 215, 229</GradientDark>
			<TextNormal>0, 0, 0</TextNormal>
		</CAPTIONBAR>
		<SCROLLBAR>
			<HORZ>
				<BACK_1>
					<SIZE>17, 17</SIZE>
					<CORNERS>1, 1, 1, 1</CORNERS>
				</BACK_1>
				<ITEM_1>
					<SIZE>17, 17</SIZE>
					<CORNERS>3, 3, 3, 3</CORNERS>
				</ITEM_1>
				<THUMB_BACK_1>
					<SIZE>21, 17</SIZE>
					<CORNERS>2, 2, 2, 2</CORNERS>
				</THUMB_BACK_1>
				<THUMB_ICON_1>
					<SIZE>8, 7</SIZE>
				</THUMB_ICON_1>
				<BACK_2>
					<SIZE>17, 17</SIZE>
					<CORNERS>1, 1</CORNERS>
				</BACK_2>
				<ITEM_2>
					<SIZE>17, 17</SIZE>
					<CORNERS>3, 3, 3, 3</CORNERS>
				</ITEM_2>
				<THUMB_BACK_2>
					<SIZE>21, 17</SIZE>
					<CORNERS>2, 2, 2, 2</CORNERS>
				</THUMB_BACK_2>
				<THUMB_ICON_2>
					<SIZE>8, 7</SIZE>
				</THUMB_ICON_2>
			</HORZ>
			<VERT>
				<BACK_1>
					<SIZE>17, 17</SIZE>
					<CORNERS>1, 1, 1, 1</CORNERS>
				</BACK_1>
				<ITEM_1>
					<SIZE>17, 17</SIZE>
					<CORNERS>3, 3, 3, 3</CORNERS>
				</ITEM_1>
				<THUMB_BACK_1>
					<SIZE>17, 21</SIZE>
					<CORNERS>2, 2, 2, 2</CORNERS>
				</THUMB_BACK_1>
				<THUMB_ICON_1>
					<SIZE>7, 8</SIZE>
				</THUMB_ICON_1>
				<BACK_2>
					<SIZE>17, 17</SIZE>
					<CORNERS>1, 1</CORNERS>
				</BACK_2>
				<ITEM_2>
					<SIZE>17, 17</SIZE>
					<CORNERS>3, 3, 3, 3</CORNERS>
				</ITEM_2>
				<THUMB_BACK_2>
					<SIZE>17, 21</SIZE>
					<CORNERS>2, 2, 2, 2</CORNERS>
				</THUMB_BACK_2>
				<THUMB_ICON_2>
					<SIZE>7, 8</SIZE>
				</THUMB_ICON_2>
			</VERT>
		</SCROLLBAR>
	</BARS>
	<TASK>
		<GradientDark>196, 202, 217</GradientDark>
		<GradientLight>196, 202, 217</GradientLight>
		<GROUP>
			<NORMAL>
				<CAPTION>
					<DarkNormal>243, 243, 247</DarkNormal>
					<LightNormal>216, 216, 230</LightNormal>
					<DarkHighlighted>216, 216, 230</DarkHighlighted>
					<LightHighlighted>241, 241, 245</LightHighlighted>
					<TextNormal>0, 21, 110</TextNormal>
					<TextHighlighted>0, 21, 110</TextHighlighted>
				</CAPTION>
				<AREA>
					<DarkNormal>255, 255, 255</DarkNormal>
					<LightNormal>255, 255, 255</LightNormal>
				</AREA>
			</NORMAL>
			<SPECIAL>
				<CAPTION>
					<DarkNormal>243, 243, 247</DarkNormal>
					<LightNormal>216, 216, 230</LightNormal>
					<DarkHighlighted>216, 216, 230</DarkHighlighted>
					<LightHighlighted>241, 241, 245</LightHighlighted>
					<TextNormal>0, 21, 110</TextNormal>
					<TextHighlighted>0, 21, 110</TextHighlighted>
				</CAPTION>
				<AREA>
					<DarkNormal>255, 255, 255</DarkNormal>
					<LightNormal>255, 255, 255</LightNormal>
				</AREA>
			</SPECIAL>
			<BORDER>124, 124, 148</BORDER>
		</GROUP>
		<SCROLL_BUTTON>
			<SIZE>30, 12</SIZE>
			<CORNERS>2, 2, 2, 2</CORNERS>
		</SCROLL_BUTTON>
	</TASK>
	<TABS>
		<TextColorActive>0, 21, 110</TextColorActive>
		<TextColorInactive>0, 21, 110</TextColorInactive>
		<3D>
			<BUTTON>
				<SIZE>72, 25</SIZE>
				<CORNERS>4, 4, 4, 2</CORNERS>
			</BUTTON>
		</3D>
		<FLAT>
			<Black>136, 157, 194</Black>
			<Highlight>166, 175, 195</Highlight>
			<BUTTON>
				<SIZE>24, 15</SIZE>
				<CORNERS>4, 4, 0, 6</CORNERS>
				<TRANSPARENT>255, 0, 255</TRANSPARENT>
			</BUTTON>
			<BorderInnerNormal>240, 242, 246</BorderInnerNormal>
			<BorderInnerActive>240, 242, 246</BorderInnerActive>
			<BorderOuterNormal>136, 157, 194</BorderOuterNormal>
			<BorderOuterActive>136, 157, 194</BorderOuterActive>
		</FLAT>
	</TABS>
	<HEADER>
		<NormalStart>199, 208, 225</NormalStart>
		<NormalFinish>205, 213, 228</NormalFinish>
		<NormalBorder>143, 153, 181</NormalBorder>
		<HighlightedStart>168, 182, 211</HighlightedStart>
		<HighlightedFinish>154, 169, 203</HighlightedFinish>
		<HighlightedBorder>167, 175, 197</HighlightedBorder>
		<PressedStart>155, 173, 210</PressedStart>
		<PressedFinish>141, 162, 207</PressedFinish>
		<PressedBorder>233, 236, 243</PressedBorder>
	</HEADER>
	<RIBBON>
		<PANEL>
			<BACK>
				<TOP>
					<SIZE>100, 68</SIZE>
					<CORNERS>2, 0, 2, 0</CORNERS>
				</TOP>
				<BOTTOM>
					<SIZE>100, 17</SIZE>
					<CORNERS>2, 0, 2, 16</CORNERS>
				</BOTTOM>
			</BACK>
			<CAPTION>
				<LAUNCH_ICON>
					<SIZE>12, 12</SIZE>
				</LAUNCH_ICON>
				<TextNormal>255, 255, 255</TextNormal>
				<TextHighlighted>255, 255, 255</TextHighlighted>
			</CAPTION>
			<SEPARATOR>
				<SIZE>1, 46</SIZE>
			</SEPARATOR>
			<BUTTONS>
				<BUTTON_GROUP_F>
					<SIZE>22, 22</SIZE>
					<CORNERS>2, 2, 2, 2</CORNERS>
				</BUTTON_GROUP_F>
				<BUTTON_GROUP_M>
					<SIZE>22, 22</SIZE>
					<CORNERS>2, 2, 2, 2</CORNERS>
				</BUTTON_GROUP_M>
				<BUTTON_GROUP_L>
					<SIZE>22, 22</SIZE>
					<CORNERS>2, 2, 2, 2</CORNERS>
				</BUTTON_GROUP_L>
				<BUTTON_GROUP_S>
					<SIZE>22, 22</SIZE>
					<CORNERS>2, 2, 2, 2</CORNERS>
				</BUTTON_GROUP_S>
				<BUTTON_GROUPMENU_F_C>
					<SIZE>24, 22</SIZE>
					<CORNERS>2, 2, 2, 2</CORNERS>
				</BUTTON_GROUPMENU_F_C>
				<BUTTON_GROUPMENU_F_M>
					<SIZE>8, 22</SIZE>
					<CORNERS>0, 2, 1, 2</CORNERS>
				</BUTTON_GROUPMENU_F_M>
				<BUTTON_GROUPMENU_M_C>
					<SIZE>24, 22</SIZE>
					<CORNERS>2, 2, 2, 2</CORNERS>
				</BUTTON_GROUPMENU_M_C>
				<BUTTON_GROUPMENU_M_M>
					<SIZE>8, 22</SIZE>
					<CORNERS>0, 2, 1, 2</CORNERS>
				</BUTTON_GROUPMENU_M_M>
				<BUTTON_GROUPMENU_L_C>
					<SIZE>24, 22</SIZE>
					<CORNERS>2, 2, 2, 2</CORNERS>
				</BUTTON_GROUPMENU_L_C>
				<BUTTON_GROUPMENU_L_M>
					<SIZE>8, 22</SIZE>
					<CORNERS>0, 2, 2, 2</CORNERS>
				</BUTTON_GROUPMENU_L_M>
				<BUTTON_NORMAL_S>
					<SIZE>22, 22</SIZE>
					<CORNERS>4, 4, 4, 4</CORNERS>
				</BUTTON_NORMAL_S>
				<BUTTON_NORMAL_B>
					<SIZE>50, 66</SIZE>
					<CORNERS>2, 2, 2, 2</CORNERS>
				</BUTTON_NORMAL_B>
				<BUTTON_DEFAULT>
					<SIZE>52, 67</SIZE>
					<CORNERS>4, 4, 4, 4</CORNERS>
				</BUTTON_DEFAULT>
				<BUTTON_DEFAULT_IMAGE>
					<SIZE>15, 16</SIZE>
				</BUTTON_DEFAULT_IMAGE>
				<BUTTON_DEFAULT_QAT_ICON>
					<SIZE>20, 12</SIZE>
					<CORNERS>2, 2, 2, 2</CORNERS>
				</BUTTON_DEFAULT_QAT_ICON>
				<BUTTON_DEFAULT_QAT>
					<SIZE>24, 24</SIZE>
					<CORNERS>4, 4, 4, 4</CORNERS>
				</BUTTON_DEFAULT_QAT>
				<BUTTON_MENU_H_C>
					<SIZE>23, 22</SIZE>
					<CORNERS>2, 2, 2, 2</CORNERS>
				</BUTTON_MENU_H_C>
				<BUTTON_MENU_H_M>
					<SIZE>11, 22</SIZE>
					<CORNERS>0, 2, 2, 2</CORNERS>
				</BUTTON_MENU_H_M>
				<BUTTON_MENU_V_C>
					<SIZE>50, 39</SIZE>
					<CORNERS>2, 2, 2, 2</CORNERS>
				</BUTTON_MENU_V_C>
				<BUTTON_MENU_V_M>
					<SIZE>50, 27</SIZE>
					<CORNERS>2, 0, 2, 2</CORNERS>
				</BUTTON_MENU_V_M>
				<BUTTON_CHECK>
					<SIZE>13, 13</SIZE>
				</BUTTON_CHECK>
				<BUTTON_PNL_T>
					<SIZE>15, 21</SIZE>
					<CORNERS>3, 3, 3, 3</CORNERS>
				</BUTTON_PNL_T>
				<BUTTON_PNL_M>
					<SIZE>15, 19</SIZE>
					<CORNERS>3, 3, 3, 3</CORNERS>
				</BUTTON_PNL_M>
				<BUTTON_PNL_B>
					<SIZE>15, 20</SIZE>
					<CORNERS>3, 3, 3, 3</CORNERS>
				</BUTTON_PNL_B>
			</BUTTONS>
			<EDIT>
				<Normal>231, 234, 241</Normal>
				<Highlighted>255, 255, 255</Highlighted>
				<Disabled>239, 239, 239</Disabled>
				<Pressed>255, 255, 255</Pressed>
				<BorderNormal>177, 187, 198</BorderNormal>
				<BorderHighlighted>148, 168, 198</BorderHighlighted>
				<BorderDisabled>177, 187, 198</BorderDisabled>
				<BorderPressed>148, 168, 198</BorderPressed>
				<Selection>189, 207, 236</Selection>
				<BUTTON>
					<GradientStartNormal>231, 234, 241</GradientStartNormal>
					<GradientFinishNormal>231, 234, 241</GradientFinishNormal>
					<GradientStartHighlighted>211, 211, 211</GradientStartHighlighted>
					<GradientFinishHighlighted>246, 246, 245</GradientFinishHighlighted>
					<GradientStartDisabled>239, 239, 239</GradientStartDisabled>
					<GradientFinishDisabled>239, 239, 239</GradientFinishDisabled>
					<GradientStartPressed>230, 230, 230</GradientStartPressed>
					<GradientFinishPressed>197, 197, 197</GradientFinishPressed>
					<BtnBorderNormal>177, 187, 198</BtnBorderNormal>
					<BtnBorderHighlighted>148, 168, 198</BtnBorderHighlighted>
					<BtnBorderDisabled>177, 187, 198</BtnBorderDisabled>
					<BtnBorderPressed>148, 168, 198</BtnBorderPressed>
				</BUTTON>
			</EDIT>
			<TextNormal>0, 21, 110</TextNormal>
			<TextHighlighted>0, 21, 110</TextHighlighted>
		</PANEL>
		<CATEGORY>
			<BACK>
				<SIZE>80, 92</SIZE>
				<CORNERS>5, 5, 5, 5</CORNERS>
			</BACK>
			<TAB>
				<BUTTON>
					<SIZE>72, 25</SIZE>
					<CORNERS>4, 4, 4, 2</CORNERS>
				</BUTTON>
				<TextNormal>0, 21, 110</TextNormal>
				<TextHighlighted>0, 21, 110</TextHighlighted>
			</TAB>
			<BUTTON_PAGE_L>
				<SIZE>14, 82</SIZE>
				<CORNERS>2, 2, 2, 2</CORNERS>
			</BUTTON_PAGE_L>
			<BUTTON_PAGE_R>
				<SIZE>14, 82</SIZE>
				<CORNERS>2, 2, 2, 2</CORNERS>
			</BUTTON_PAGE_R>
		</CATEGORY>
		<CONTEXT>
			<CATEGORY>
				<BACK>
					<SIZE>80, 92</SIZE>
					<CORNERS>5, 5, 5, 5</CORNERS>
				</BACK>
				<TAB>
					<BUTTON>
						<SIZE>76, 25</SIZE>
						<CORNERS>7, 4, 7, 2</CORNERS>
					</BUTTON>
					<TextNormal>0, 21, 110</TextNormal>
					<TextHighlighted>0, 21, 110</TextHighlighted>
				</TAB>
				<CAPTION>
					<BACK>
						<SIZE>80, 19</SIZE>
						<CORNERS>1, 1, 1, 2</CORNERS>
					</BACK>
					<TextNormal>0, 21, 110</TextNormal>
				</CAPTION>
				<BUTTON_DEFAULT>
					<SIZE>52, 67</SIZE>
					<CORNERS>4, 4, 4, 4</CORNERS>
				</BUTTON_DEFAULT>
			</CATEGORY>
			<PANEL>
				<BACK>
					<TOP>
						<SIZE>100, 68</SIZE>
						<CORNERS>2, 0, 2, 0</CORNERS>
					</TOP>
					<BOTTOM>
						<SIZE>100, 17</SIZE>
						<CORNERS>2, 0, 2, 16</CORNERS>
					</BOTTOM>
				</BACK>
				<CAPTION>
					<TextNormal>255, 255, 255</TextNormal>
					<TextHighlighted>255, 255, 255</TextHighlighted>
				</CAPTION>
				<TextNormal>0, 21, 110</TextNormal>
				<TextHighlighted>0, 21, 110</TextHighlighted>
			</PANEL>
			<SEPARATOR>
				<SIZE>3, 26</SIZE>
				<CORNERS>1, 1, 1, 1</CORNERS>
			</SEPARATOR>
		</CONTEXT>
		<CAPTION>
			<QA>
				<SIZE>32, 26</SIZE>
				<CORNERS>15, 4, 12, 4</CORNERS>
			</QA>
			<QA_GLASS>
				<SIZE>32, 26</SIZE>
				<CORNERS>15, 4, 12, 4</CORNERS>
			</QA_GLASS>
		</CAPTION>
		<MAIN_BUTTON>
			<SIZE>38, 38</SIZE>
		</MAIN_BUTTON>
		<MAIN>
			<BUTTON>
				<SIZE>70, 22</SIZE>
				<CORNERS>2, 2, 2, 2</CORNERS>
			</BUTTON>
		</MAIN>
		<STATUS>
			<PANE_BUTTON>
				<SIZE>41, 18</SIZE>
				<CORNERS>2, 2, 2, 2</CORNERS>
			</PANE_BUTTON>
			<SLIDER>
				<THUMB>
					<SIZE>7, 13</SIZE>
					<CORNERS>0, 0, 0, 0</CORNERS>
				</THUMB>
				<PLUS>
					<SIZE>16, 16</SIZE>
					<CORNERS>0, 0, 0, 0</CORNERS>
				</PLUS>
				<MINUS>
					<SIZE>16, 16</SIZE>
					<CORNERS>0, 0, 0, 0</CORNERS>
				</MINUS>
			</SLIDER>
			<PROGRESS>
				<BACK>
					<SIZE>90, 12</SIZE>
					<CORNERS>2, 2, 2, 2</CORNERS>
				</BACK>
				<NORMAL>
					<SIZE>86, 8</SIZE>
					<CORNERS>1, 1, 1, 1</CORNERS>
				</NORMAL>
				<NORMAL_EXT>
					<SIZE>5, 8</SIZE>
				</NORMAL_EXT>
				<INFINITY>
					<SIZE>86, 8</SIZE>
					<CORNERS>1, 1, 1, 1</CORNERS>
				</INFINITY>
			</PROGRESS>
		</STATUS>
		<BORDERS>
			<FLOATY>
				<SIZE>7, 7</SIZE>
				<CORNERS>3, 3, 3, 3</CORNERS>
				<SIDES>2, 2, 2, 2</SIDES>
			</FLOATY>
		</BORDERS>
		<KEYTIP>
			<BACK>
				<SIZE>15, 15</SIZE>
				<CORNERS>2, 2, 2, 2</CORNERS>
				<SIDES>1, 1, 1, 1</SIDES>
			</BACK>
		</KEYTIP>
		<HYPERLINK>
			<Inactive>0, 102, 226</Inactive>
			<Active>0, 144, 255</Active>
		</HYPERLINK>
	</RIBBON>
	<PLANNER>
		<WorkColor>181, 189, 211</WorkColor>
		<NcAreaColor>206, 212, 225</NcAreaColor>
		<NcLineColor>0, 21, 110</NcLineColor>
		<NcTextColor>0, 21, 110</NcTextColor>
		<TODAY>
			<Caption1Start>247, 208, 112</Caption1Start>
			<Caption1Finish>251, 230, 148</Caption1Finish>
			<Caption2Start>239, 155,  30</Caption2Start>
			<Caption2Finish>250, 224, 139</Caption2Finish>
			<BorderColor>238, 147, 17</BorderColor>
		</TODAY>
	</PLANNER>
	<GRID>
		<ExpandBoxLight>144, 168, 192</ExpandBoxLight>
		<ExpandBoxDark>48, 72, 96</ExpandBoxDark>
	</GRID>
	<OUTLOOK>
		<CAPTION>
			<TextNormal>0, 0, 0</TextNormal>
			<TextHighlighted>0, 0, 0</TextHighlighted>
		</CAPTION>
		<PAGEBUTTON>
			<TextNormal>0, 0, 0</TextNormal>
			<TextHighlighted>0, 0, 0</TextHighlighted>
		</PAGEBUTTON>
	</OUTLOOK>
	<POPUP>
		<GradientFillDark>196, 202, 217</GradientFillDark>
		<GradientFillLight>218, 224, 239</GradientFillLight>
	</POPUP>
</STYLE>
=== C:/Users/treeman/Desktop/windows nt source code\xbox\Xbox Live Source\XONLINE_MAIN\public\ext\sdk\win7\sdk\include\atl90\Black\Style.xml ===
<STYLE>
	<VERSION>
		<NUMBER>2007</NUMBER>
		<TYPE>20</TYPE>
		<ID_PREFIX>BLACK_</ID_PREFIX>
	</VERSION>
	<DESCRIPTION>
		<NAME>Obsidian (black)</NAME>
	</DESCRIPTION>
	<GLOBALS>
		<BarText>0, 0, 0</BarText>
		<BarFace>235, 235, 235</BarFace>
		<ActiveCaption>233, 235, 237</ActiveCaption>
		<CaptionText>70, 70, 70</CaptionText>
		<InactiveCaption>158, 160, 160</InactiveCaption>
		<InactiveCaptionText>70, 70, 70</InactiveCaptionText>
		<FloatToolBarBorder>137, 137, 137</FloatToolBarBorder>
		<BarShadow>172, 172, 172</BarShadow>
		<BarDkShadow>129, 129, 129</BarDkShadow>
		<BarLight>233, 235, 237</BarLight>
		<AutoPremultiply>TRUE</AutoPremultiply>
		<HighlightGradientDark>255, 219, 117</HighlightGradientDark>
		<HighlightGradientLight>255, 245, 204</HighlightGradientLight>
		<HighlightDnGradientDark>255, 184, 94</HighlightDnGradientDark>
		<HighlightDnGradientLight>252, 151, 61</HighlightDnGradientLight>
		<HighlightCheckedGradientDark>255, 171, 63</HighlightCheckedGradientDark>
		<HighlightCheckedGradientLight>255, 207, 146</HighlightCheckedGradientLight>
		<PressedButtonBorder>251, 140, 60</PressedButtonBorder>
		<Highlight>180, 201, 233</Highlight>
		<HighlightText>0, 0, 0</HighlightText>
		<MenuShadowColor>50, 50, 50</MenuShadowColor>
		<TOOLTIP>
			<DRAW_SEPARATOR>FALSE</DRAW_SEPARATOR>
			<ROUNDED_CORNERS>TRUE</ROUNDED_CORNERS>
			<COLOR_FILL>255, 255, 255</COLOR_FILL>
			<COLOR_FILLGRADIENT>205, 208, 213</COLOR_FILLGRADIENT>
			<COLOR_TEXT>76, 76, 76</COLOR_TEXT>
			<COLOR_BORDER>118, 118, 118</COLOR_BORDER>
		</TOOLTIP>
	</GLOBALS>
	<MAINWND>
		<CAPTION>
			<FONT>
				<WEIGHT>NORMAL</WEIGHT>
				<QUALITY>CLEARTYPE</QUALITY>
			</FONT>
			<ActiveStart>62, 62, 62</ActiveStart>
			<ActiveFinish>47, 48, 48</ActiveFinish>
			<InactiveStart>153, 153, 153</InactiveStart>
			<InactiveFinish>146, 146, 146</InactiveFinish>
			<ActiveText>255, 255, 255</ActiveText>
			<InactiveText>225, 225, 225</InactiveText>
			<ActiveTitleText>174, 209, 255</ActiveTitleText>
			<InactiveTitleText>225, 225, 225</InactiveTitleText>
			<TextCenter>TRUE</TextCenter>
			<BORDER>
				<SIZE>35, 31</SIZE>
				<CORNERS>5, 10, 5, 3</CORNERS>
			</BORDER>
			<BUTTONS>
				<NORMAL>
					<ConstSize>23, 23</ConstSize>
					<IconSize>17, 16</IconSize>
					<SIZE>17, 16</SIZE>
					<CORNERS>2, 2, 2, 2</CORNERS>
				</NORMAL>
				<SMALL>
					<ConstSize>16, 16</ConstSize>
					<IconSize>13, 12</IconSize>
					<SIZE>17, 16</SIZE>
					<CORNERS>2, 2, 2, 2</CORNERS>
				</SMALL>
			</BUTTONS>
		</CAPTION>
		<ROUND_BORDER>9, 9</ROUND_BORDER>
		<BORDER>
			<SIZE>35, 23</SIZE>
			<CORNERS>17, 0, 17, 22</CORNERS>
			<SIDES>17, 0, 17, 17</SIDES>
		</BORDER>
		<BORDER_MDICHILD>
			<SIZE>35, 23</SIZE>
			<CORNERS>17, 0, 17, 22</CORNERS>
			<SIDES>17, 0, 17, 17</SIDES>
		</BORDER_MDICHILD>
		<MainClientArea>70, 70, 70</MainClientArea>
	</MAINWND>
	<EDIT>
		<BorderHighlighted>255, 189, 105</BorderHighlighted>
	</EDIT>
	<COMBO>
		<BorderHighlighted>255, 189, 105</BorderHighlighted>
		<BorderPressed>255, 189, 105</BorderPressed>
		<BUTTON>
			<GradientStartNormal>162, 169, 178</GradientStartNormal>
			<GradientFinishNormal>198, 202, 208</GradientFinishNormal>
			<GradientStartHighlighted>255, 220, 122</GradientStartHighlighted>
			<GradientFinishHighlighted>255, 244, 199</GradientFinishHighlighted>
			<BtnBorderHighlighted>255, 189, 105</BtnBorderHighlighted>
			<GradientStartPressed>255, 183, 91</GradientStartPressed>
			<GradientFinishPressed>252, 153, 61</GradientFinishPressed>
			<BtnBorderPressed>251, 140, 61</BtnBorderPressed>
		</BUTTON>
	</COMBO>
	<MENU>
		<Light>250, 250, 250</Light>
		<Rarely>195, 199, 205</Rarely>
		<Border>145, 153, 164</Border>
		<Separator1>197, 197, 197</Separator1>
		<Separator2>245, 245, 245</Separator2>
		<GroupBackground>235, 235, 235</GroupBackground>
		<ItemBorder>205, 181, 130</ItemBorder>
		<ItemBack>
			<SIZE>20, 20</SIZE>
			<CORNERS>2, 2, 2, 2</CORNERS>
		</ItemBack>
		<ItemCheck>
			<SIZE>10, 14</SIZE>
		</ItemCheck>
		<ItemRadio>
			<SIZE>10, 14</SIZE>
		</ItemRadio>
		<Highlighted>
			<SIZE>55, 22</SIZE>
			<CORNERS>2, 2, 2, 2</CORNERS>
		</Highlighted>
		<HighlightedDisabled>
			<SIZE>55, 22</SIZE>
			<CORNERS>2, 2, 2, 2</CORNERS>
		</HighlightedDisabled>
		<ScrollBtn_T>
			<SIZE>30, 12</SIZE>
			<CORNERS>2, 2, 2, 2</CORNERS>
		</ScrollBtn_T>
		<TextNormal>70, 70, 70</TextNormal>
		<TextHighlighted>70, 70, 70</TextHighlighted>
		<TextDisabled>167, 167, 167</TextDisabled>
		<COLORS>
			<Black>90, 90, 90</Black>
			<Black2>90, 90, 90</Black2>
		</COLORS>
		<BorderSize>2</BorderSize>
		<ButtonBorder>
			<SIZE>2, 19</SIZE>
		</ButtonBorder>
	</MENU>
	<BARS>
		<DEFAULT>
			<Bkgnd>239, 239, 239</Bkgnd>
			<GradientLight>83, 83, 83</GradientLight>
			<GradientDark>83, 83, 83</GradientDark>
		</DEFAULT>
		<TOOLBAR>
			<GradientLight>205, 208, 213</GradientLight>
			<GradientDark>148, 156, 166</GradientDark>
			<GradientVertLight>205, 208, 213</GradientVertLight>
			<GradientVertDark>148, 156, 166</GradientVertDark>
			<CustomizeButtonGradientLight>178, 183, 191</CustomizeButtonGradientLight>
			<CustomizeButtonGradientDark>76, 83, 92</CustomizeButtonGradientDark>
			<BottomLineColor>76, 83, 92</BottomLineColor>
			<GRIPPER>
				<SIZE>4, 4</SIZE>
				<TRANSPARENT>255, 0, 255</TRANSPARENT>
			</GRIPPER>
			<TEAR>
				<SIZE>35, 3</SIZE>
				<TRANSPARENT>255, 0, 255</TRANSPARENT>
			</TEAR>
			<BUTTON>
				<SIZE>22, 22</SIZE>
				<CORNERS>2, 3, 2, 2</CORNERS>
			</BUTTON>
			<BORDER>
				<SIZE>9, 9</SIZE>
				<CORNERS>4, 4, 4, 4</CORNERS>
				<SIDES>2, 2, 2, 2</SIDES>
			</BORDER>
			<TextNormal>0, 0, 0</TextNormal>
			<TextHighlighted>0, 0, 0</TextHighlighted>
			<TextDisabled>141, 141, 141</TextDisabled>
		</TOOLBAR>
		<MENUBAR>
			<GradientLight>83, 83, 83</GradientLight>
			<GradientDark>83, 83, 83</GradientDark>
			<GradientVertLight>83, 83, 83</GradientVertLight>
			<GradientVertDark>83, 83, 83</GradientVertDark>
			<TextNormal>255, 255, 255</TextNormal>
			<TextHighlighted>0, 0, 0</TextHighlighted>
			<TextDisabled>194, 194, 194</TextDisabled>
			<BUTTON>
				<SIZE>22, 19</SIZE>
				<CORNERS>1, 1, 1, 1</CORNERS>
				<TRANSPARENT>255, 0, 255</TRANSPARENT>
			</BUTTON>
		</MENUBAR>
		<POPUPBAR>
			<ROUND_BORDER>3, 3</ROUND_BORDER>
			<BORDER>
				<SIZE>7, 7</SIZE>
				<CORNERS>3, 3, 3, 3</CORNERS>
				<SIDES>2, 2, 2, 2</SIDES>
			</BORDER>
			<RESIZEBAR>
				<BACK>
					<SIZE>3, 11</SIZE>
					<CORNERS>1, 2, 1, 1</CORNERS>
				</BACK>
				<ICON_HV>
					<SIZE>9, 8</SIZE>
					<TRANSPARENT>255, 0, 255</TRANSPARENT>
				</ICON_HV>
				<ICON_HVT>
					<SIZE>9, 8</SIZE>
					<TRANSPARENT>255, 0, 255</TRANSPARENT>
				</ICON_HVT>
				<ICON_V>
					<SIZE>15, 3</SIZE>
					<TRANSPARENT>255, 0, 255</TRANSPARENT>
				</ICON_V>
			</RESIZEBAR>
		</POPUPBAR>
		<STATUSBAR>
			<BACK>
				<SIZE>35, 23</SIZE>
				<CORNERS>5, 8, 5, 5</CORNERS>
				<SIDES>1, 8, 1, 3</SIDES>
			</BACK>
			<BACK_EXT>
				<SIZE>35, 23</SIZE>
				<CORNERS>3, 8, 5, 5</CORNERS>
				<SIDES>3, 8, 1, 3</SIDES>
			</BACK_EXT>
			<PANEBORDER>
				<SIZE>2, 20</SIZE>
			</PANEBORDER>
			<SIZEBOX>
				<SIZE>11, 11</SIZE>
			</SIZEBOX>
			<TextNormal>255, 255, 255</TextNormal>
			<TextDisabled>141, 141, 141</TextDisabled>
			<TextExtendedDisabled>100, 100, 100</TextExtendedDisabled>
		</STATUSBAR>
		<CAPTIONBAR>
			<GradientLight>240, 241, 242</GradientLight>
			<GradientDark>189, 194, 200</GradientDark>
			<TextNormal>55, 60, 67</TextNormal>
		</CAPTIONBAR>
	</BARS>
	<TASK>
		<GradientDark>235, 235, 235</GradientDark>
		<GradientLight>255, 255, 255</GradientLight>
		<GROUP>
			<NORMAL>
				<CAPTION>
					<DarkNormal>221, 224, 227</DarkNormal>
					<LightNormal>240, 241, 242</LightNormal>
					<DarkHighlighted>232, 234, 236</DarkHighlighted>
					<LightHighlighted>255, 255, 255</LightHighlighted>
					<TextNormal>55, 60, 67</TextNormal>
					<TextHighlighted>55, 60, 67</TextHighlighted>
				</CAPTION>
				<AREA>
					<DarkNormal>255, 255, 255</DarkNormal>
					<LightNormal>255, 255, 255</LightNormal>
				</AREA>
			</NORMAL>
			<SPECIAL>
				<CAPTION>
					<DarkNormal>221, 224, 227</DarkNormal>
					<LightNormal>240, 241, 242</LightNormal>
					<DarkHighlighted>232, 234, 236</DarkHighlighted>
					<LightHighlighted>255, 255, 255</LightHighlighted>
					<TextNormal>55, 60, 67</TextNormal>
					<TextHighlighted>55, 60, 67</TextHighlighted>
				</CAPTION>
				<AREA>
					<DarkNormal>255, 255, 255</DarkNormal>
					<LightNormal>255, 255, 255</LightNormal>
				</AREA>
			</SPECIAL>
			<BORDER>76, 83, 92</BORDER>
		</GROUP>
		<SCROLL_BUTTON>
			<SIZE>30, 12</SIZE>
			<CORNERS>2, 2, 2, 2</CORNERS>
		</SCROLL_BUTTON>
	</TASK>
	<TABS>
		<TextColorActive>0, 0, 0</TextColorActive>
		<TextColorInactive>255, 255, 255</TextColorInactive>
		<3D>
			<BUTTON>
				<SIZE>57, 24</SIZE>
				<CORNERS>5, 5, 5, 2</CORNERS>
			</BUTTON>
		</3D>
		<FLAT>
			<Black>109, 109, 109</Black>
			<Highlight>73, 73, 73</Highlight>
			<BUTTON>
				<SIZE>24, 15</SIZE>
				<CORNERS>4, 4, 0, 6</CORNERS>
				<TRANSPARENT>255, 0, 255</TRANSPARENT>
			</BUTTON>
			<BorderInnerNormal>235, 235, 235</BorderInnerNormal>
			<BorderInnerActive>235, 235, 235</BorderInnerActive>
			<BorderOuterNormal>109, 109, 109</BorderOuterNormal>
			<BorderOuterActive>109, 109, 109</BorderOuterActive>
		</FLAT>
	</TABS>
	<HEADER>
		<NormalStart>247, 247, 247</NormalStart>
		<NormalFinish>222, 222, 222</NormalFinish>
		<NormalBorder>182, 182, 182</NormalBorder>
		<HighlightedStart>249, 216, 157</HighlightedStart>
		<HighlightedFinish>241, 193, 94</HighlightedFinish>
		<HighlightedBorder>242, 149, 54</HighlightedBorder>
		<PressedStart>255, 211, 139</PressedStart>
		<PressedFinish>242, 145, 56</PressedFinish>
		<PressedBorder>242, 149, 54</PressedBorder>
	</HEADER>
	<RIBBON>
		<PANEL>
			<BACK>
				<TOP>
					<SIZE>100, 68</SIZE>
					<CORNERS>3, 15, 3, 0</CORNERS>
				</TOP>
				<BOTTOM>
					<SIZE>100, 17</SIZE>
					<CORNERS>3, 0, 4, 4</CORNERS>
				</BOTTOM>
			</BACK>
			<CAPTION>
				<LAUNCH_BTN>
					<SIZE>15, 14</SIZE>
					<CORNERS>2, 2, 2, 2</CORNERS>
				</LAUNCH_BTN>
				<LAUNCH_ICON>
					<SIZE>8, 8</SIZE>
				</LAUNCH_ICON>
				<TextNormal>255, 255, 255</TextNormal>
				<TextHighlighted>255, 255, 255</TextHighlighted>
			</CAPTION>
			<SEPARATOR>
				<SIZE>2, 55</SIZE>
			</SEPARATOR>
			<QAT>
				<SIZE>11, 24</SIZE>
				<CORNERS>3, 3, 3, 3</CORNERS>
			</QAT>
			<BUTTONS>
				<BUTTON_GROUP_F>
					<SIZE>22, 22</SIZE>
					<CORNERS>2, 3, 2, 2</CORNERS>
				</BUTTON_GROUP_F>
				<BUTTON_GROUP_M>
					<SIZE>22, 22</SIZE>
					<CORNERS>2, 3, 2, 2</CORNERS>
				</BUTTON_GROUP_M>
				<BUTTON_GROUP_L>
					<SIZE>22, 22</SIZE>
					<CORNERS>2, 3, 2, 2</CORNERS>
				</BUTTON_GROUP_L>
				<BUTTON_GROUP_S>
					<SIZE>22, 22</SIZE>
					<CORNERS>2, 3, 2, 2</CORNERS>
				</BUTTON_GROUP_S>
				<BUTTON_GROUPMENU_F_C>
					<SIZE>23, 22</SIZE>
					<CORNERS>2, 3, 2, 2</CORNERS>
				</BUTTON_GROUPMENU_F_C>
				<BUTTON_GROUPMENU_F_M>
					<SIZE>9, 22</SIZE>
					<CORNERS>1, 3, 2, 2</CORNERS>
				</BUTTON_GROUPMENU_F_M>
				<BUTTON_GROUPMENU_M_C>
					<SIZE>23, 22</SIZE>
					<CORNERS>2, 3, 2, 2</CORNERS>
				</BUTTON_GROUPMENU_M_C>
				<BUTTON_GROUPMENU_M_M>
					<SIZE>9, 22</SIZE>
					<CORNERS>1, 3, 2, 2</CORNERS>
				</BUTTON_GROUPMENU_M_M>
				<BUTTON_GROUPMENU_L_C>
					<SIZE>23, 22</SIZE>
					<CORNERS>2, 3, 2, 2</CORNERS>
				</BUTTON_GROUPMENU_L_C>
				<BUTTON_GROUPMENU_L_M>
					<SIZE>10, 22</SIZE>
					<CORNERS>1, 3, 2, 2</CORNERS>
				</BUTTON_GROUPMENU_L_M>
				<BUTTON_NORMAL_S>
					<SIZE>22, 22</SIZE>
					<CORNERS>2, 2, 2, 2</CORNERS>
				</BUTTON_NORMAL_S>
				<BUTTON_NORMAL_B>
					<SIZE>43, 66</SIZE>
					<CORNERS>2, 2, 2, 2</CORNERS>
				</BUTTON_NORMAL_B>
				<BUTTON_DEFAULT>
					<SIZE>52, 84</SIZE>
					<CORNERS>2, 15, 2, 2</CORNERS>
				</BUTTON_DEFAULT>
				<BUTTON_DEFAULT_ICON>
					<SIZE>38, 38</SIZE>
					<CORNERS>7, 7, 8, 12</CORNERS>
				</BUTTON_DEFAULT_ICON>
				<BUTTON_DEFAULT_IMAGE>
					<SIZE>15, 16</SIZE>
				</BUTTON_DEFAULT_IMAGE>
				<BUTTON_DEFAULT_QAT_ICON>
					<SIZE>20, 12</SIZE>
					<CORNERS>3, 3, 3, 3</CORNERS>
				</BUTTON_DEFAULT_QAT_ICON>
				<BUTTON_DEFAULT_QAT>
					<SIZE>22, 22</SIZE>
					<CORNERS>3, 3, 3, 3</CORNERS>
				</BUTTON_DEFAULT_QAT>
				<BUTTON_MENU_H_C>
					<SIZE>22, 22</SIZE>
					<CORNERS>4, 4, 2, 1</CORNERS>
				</BUTTON_MENU_H_C>
				<BUTTON_MENU_H_M>
					<SIZE>11, 22</SIZE>
					<CORNERS>0, 4, 3, 2</CORNERS>
				</BUTTON_MENU_H_M>
				<BUTTON_MENU_V_C>
					<SIZE>43, 39</SIZE>
					<CORNERS>3, 6, 3, 2</CORNERS>
				</BUTTON_MENU_V_C>
				<BUTTON_MENU_V_M>
					<SIZE>43, 27</SIZE>
					<CORNERS>3, 0, 3, 2</CORNERS>
				</BUTTON_MENU_V_M>
				<BUTTON_CHECK>
					<SIZE>13, 13</SIZE>
				</BUTTON_CHECK>
				<BUTTON_PNL_T>
					<SIZE>15, 21</SIZE>
					<CORNERS>3, 3, 3, 3</CORNERS>
				</BUTTON_PNL_T>
				<BUTTON_PNL_M>
					<SIZE>15, 19</SIZE>
					<CORNERS>3, 3, 3, 3</CORNERS>
				</BUTTON_PNL_M>
				<BUTTON_PNL_B>
					<SIZE>15, 20</SIZE>
					<CORNERS>3, 3, 3, 3</CORNERS>
				</BUTTON_PNL_B>
			</BUTTONS>
			<EDIT>
				<Normal>232, 232, 232</Normal>
				<Highlighted>255, 255, 255</Highlighted>
				<Disabled>239, 239, 239</Disabled>
				<Pressed>255, 255, 255</Pressed>
				<BorderNormal>137, 137, 137</BorderNormal>
				<BorderHighlighted>137, 137, 137</BorderHighlighted>
				<BorderDisabled>204, 204, 204</BorderDisabled>
				<BorderPressed>137, 137, 137</BorderPressed>
				<Selection>174, 196, 232</Selection>
				<BUTTON>
					<IMAGE>
						<SIZE>12, 22</SIZE>
						<CORNERS>2, 3, 2, 2</CORNERS>
					</IMAGE>
				</BUTTON>
			</EDIT>
			<TextNormal>0, 0, 0</TextNormal>
			<TextHighlighted>0, 0, 0</TextHighlighted>
		</PANEL>
		<CATEGORY>
			<BACK>
				<SIZE>80, 92</SIZE>
				<CORNERS>5, 18, 4, 10</CORNERS>
			</BACK>
			<TAB>
				<BUTTON>
					<SIZE>57, 24</SIZE>
					<CORNERS>5, 5, 5, 2</CORNERS>
				</BUTTON>
				<TextNormal>255, 255, 255</TextNormal>
				<TextHighlighted>0, 0, 0</TextHighlighted>
			</TAB>
			<TAB_SEPARATOR>
				<SIZE>1, 23</SIZE>
			</TAB_SEPARATOR>
			<BUTTON_PAGE_L>
				<SIZE>14, 92</SIZE>
				<CORNERS>4, 18, 3, 6</CORNERS>
			</BUTTON_PAGE_L>
			<BUTTON_PAGE_R>
				<SIZE>14, 92</SIZE>
				<CORNERS>3, 18, 4, 6</CORNERS>
			</BUTTON_PAGE_R>
		</CATEGORY>
		<CONTEXT>
			<CATEGORY>
				<BACK>
					<SIZE>80, 92</SIZE>
					<CORNERS>5, 18, 4, 10</CORNERS>
				</BACK>
				<TAB>
					<BUTTON>
						<SIZE>57, 24</SIZE>
						<CORNERS>5, 5, 5, 2</CORNERS>
					</BUTTON>
					<TextNormal>255, 255, 255</TextNormal>
					<TextHighlighted>0, 0, 0</TextHighlighted>
				</TAB>
				<CAPTION>
					<BACK>
						<SIZE>80, 19</SIZE>
						<CORNERS>1, 1, 1, 2</CORNERS>
					</BACK>
					<TextNormal>255, 255, 255</TextNormal>
				</CAPTION>
				<BUTTON_DEFAULT>
					<SIZE>52, 84</SIZE>
					<CORNERS>2, 15, 2, 2</CORNERS>
				</BUTTON_DEFAULT>
			</CATEGORY>
			<PANEL>
				<BACK>
					<TOP>
						<SIZE>100, 68</SIZE>
						<CORNERS>3, 15, 3, 0</CORNERS>
					</TOP>
					<BOTTOM>
						<SIZE>100, 17</SIZE>
						<CORNERS>3, 0, 4, 4</CORNERS>
					</BOTTOM>
				</BACK>
				<CAPTION>
					<TextNormal>255, 255, 255</TextNormal>
					<TextHighlighted>255, 255, 255</TextHighlighted>
				</CAPTION>
				<TextNormal>0, 0, 0</TextNormal>
				<TextHighlighted>0, 0, 0</TextHighlighted>
			</PANEL>
			<SEPARATOR>
				<SIZE>3, 26</SIZE>
				<CORNERS>1, 1, 1, 1</CORNERS>
			</SEPARATOR>
		</CONTEXT>
		<CAPTION>
			<QA>
				<SIZE>32, 26</SIZE>
				<CORNERS>15, 4, 12, 4</CORNERS>
			</QA>
			<QA_GLASS>
				<SIZE>32, 26</SIZE>
				<CORNERS>15, 4, 12, 4</CORNERS>
			</QA_GLASS>
		</CAPTION>
		<MAIN_BUTTON>
			<SIZE>38, 38</SIZE>
		</MAIN_BUTTON>
		<MAIN>
			<BACK>
				<SIZE>9, 38</SIZE>
				<CORNERS>4, 10, 4, 27</CORNERS>
			</BACK>
			<BORDER>
				<SIZE>5, 5</SIZE>
				<CORNERS>2, 2, 2, 2</CORNERS>
			</BORDER>
			<BUTTON>
				<SIZE>54, 23</SIZE>
				<CORNERS>2, 3, 2, 2</CORNERS>
			</BUTTON>
		</MAIN>
		<STATUS>
			<PANE_BUTTON>
				<SIZE>22, 22</SIZE>
				<CORNERS>3, 4, 3, 3</CORNERS>
			</PANE_BUTTON>
			<SLIDER>
				<THUMB>
					<SIZE>11, 15</SIZE>
					<CORNERS>0, 0, 0, 0</CORNERS>
				</THUMB>
				<PLUS>
					<SIZE>18, 18</SIZE>
					<CORNERS>0, 0, 0, 0</CORNERS>
				</PLUS>
				<MINUS>
					<SIZE>18, 18</SIZE>
					<CORNERS>0, 0, 0, 0</CORNERS>
				</MINUS>
			</SLIDER>
			<PROGRESS>
				<BACK>
					<SIZE>90, 12</SIZE>
					<CORNERS>2, 2, 2, 2</CORNERS>
				</BACK>
				<NORMAL>
					<SIZE>86, 8</SIZE>
					<CORNERS>1, 1, 1, 1</CORNERS>
				</NORMAL>
				<NORMAL_EXT>
					<SIZE>5, 8</SIZE>
				</NORMAL_EXT>
				<INFINITY>
					<SIZE>86, 8</SIZE>
					<CORNERS>1, 1, 1, 1</CORNERS>
				</INFINITY>
			</PROGRESS>
		</STATUS>
		<BORDERS>
			<QAT>
				<SIZE>7, 7</SIZE>
				<CORNERS>3, 3, 3, 3</CORNERS>
				<SIDES>2, 2, 2, 2</SIDES>
			</QAT>
			<FLOATY>
				<SIZE>7, 7</SIZE>
				<CORNERS>3, 3, 3, 3</CORNERS>
				<SIDES>2, 2, 2, 2</SIDES>
			</FLOATY>
		</BORDERS>
		<KEYTIP>
			<BACK>
				<SIZE>15, 15</SIZE>
				<CORNERS>2, 2, 2, 2</CORNERS>
				<SIDES>1, 1, 1, 1</SIDES>
			</BACK>
		</KEYTIP>
		<HYPERLINK>
			<Inactive>43, 78, 117</Inactive>
			<Active>71, 193, 255</Active>
			<StatusbarInactive>127, 139, 155</StatusbarInactive>
			<StatusbarActive>71, 193, 255</StatusbarActive>
		</HYPERLINK>
	</RIBBON>
	<PLANNER>
		<WorkColor>176, 182, 190</WorkColor>
		<NcAreaColor>235, 235, 235</NcAreaColor>
		<NcLineColor>76, 83, 92</NcLineColor>
		<NcTextColor>76, 83, 92</NcTextColor>
		<TODAY>
			<Caption1Start>247, 208, 112</Caption1Start>
			<Caption1Finish>251, 230, 148</Caption1Finish>
			<Caption2Start>239, 155,  30</Caption2Start>
			<Caption2Finish>250, 224, 139</Caption2Finish>
			<BorderColor>238, 147, 17</BorderColor>
		</TODAY>
	</PLANNER>
	<GRID>
		<HEADER>
			<NormalStart>251, 253, 253</NormalStart>
			<NormalFinish>212, 214, 219</NormalFinish>
			<NormalBorder>76, 83, 92</NormalBorder>
			<Separator>145, 153, 164</Separator>
		</HEADER>
		<ExpandBoxLight>144, 168, 192</ExpandBoxLight>
		<ExpandBoxDark>48, 72, 96</ExpandBoxDark>
		<LeftOffset>232, 234, 236</LeftOffset>
		<GroupLine>145, 153, 164 </GroupLine>
		<GroupSubLine>227, 239, 255</GroupSubLine>
	</GRID>
	<OUTLOOK>
		<CAPTION>
			<TextNormal>55, 60, 67</TextNormal>
		</CAPTION>
		<PAGEBUTTON>
			<BACK>
				<SIZE>54, 31</SIZE>
			</BACK>
			<TextNormal>55, 60, 67</TextNormal>
			<TextHighlighted>55, 60, 67</TextHighlighted>
			<TextPressed>0, 0, 0</TextPressed>
		</PAGEBUTTON>
		<BAR>
			<BACK>
				<SIZE>54, 31</SIZE>
			</BACK>
		</BAR>
	</OUTLOOK>
	<POPUP>
		<GradientFillDark>189, 193, 200</GradientFillDark>
		<GradientFillLight>240, 241, 242</GradientFillLight>
	</POPUP>
</STYLE>
=== C:/Users/treeman/Desktop/windows nt source code\xbox\Xbox Live Source\XONLINE_MAIN\public\ext\sdk\win7\sdk\lib\coffbase.txt ===
;
; This file defines the base virtual address for Dynamic Link Libraries (DLL)
; that are part of the Windows NT System.  The first token on a line is the name
; of the DLL and the second token is the base virtual address, in hexidecimal.
; The third token is the maximum size of the DLL image file, including symbols.
;
;  NOTE:  Unused areas are marked as _FREE_.
=== C:/Users/treeman/Desktop/windows nt source code\xbox\Xbox Live Source\XONLINE_MAIN\public\ext\sdk\win7\sdk\include\atl90\Blue\Style.xml ===
<STYLE>
	<VERSION>
		<NUMBER>2007</NUMBER>
		<TYPE>20</TYPE>
		<ID_PREFIX>BLUE_</ID_PREFIX>
	</VERSION>
	<DESCRIPTION>
		<NAME>Luna (blue)</NAME>
	</DESCRIPTION>
	<GLOBALS>
		<BarText>21, 66, 139</BarText>
		<BarFace>213, 228, 242</BarFace>
		<ActiveCaption>231, 238, 246</ActiveCaption>
		<CaptionText>21, 74, 147</CaptionText>
		<InactiveCaption>184, 207, 233</InactiveCaption>
		<InactiveCaptionText>21, 74, 147</InactiveCaptionText>
		<FloatToolBarBorder>141, 178, 227</FloatToolBarBorder>
		<BarShadow>185, 208, 237</BarShadow>
		<BarDkShadow>157, 189, 216</BarDkShadow>
		<BarLight>231, 238, 246</BarLight>
		<AutoPremultiply>TRUE</AutoPremultiply>
		<HighlightGradientDark>255, 219, 117</HighlightGradientDark>
		<HighlightGradientLight>255, 245, 204</HighlightGradientLight>
		<HighlightDnGradientDark>255, 184, 94</HighlightDnGradientDark>
		<HighlightDnGradientLight>252, 151, 61</HighlightDnGradientLight>
		<HighlightCheckedGradientDark>255, 171, 63</HighlightCheckedGradientDark>
		<HighlightCheckedGradientLight>255, 207, 146</HighlightCheckedGradientLight>
		<PressedButtonBorder>251, 140, 60</PressedButtonBorder>
		<Highlight>180, 201, 233</Highlight>
		<HighlightText>0, 0, 0</HighlightText>
		<MenuShadowColor>90, 90, 90</MenuShadowColor>
		<TOOLTIP>
			<DRAW_SEPARATOR>FALSE</DRAW_SEPARATOR>
			<ROUNDED_CORNERS>TRUE</ROUNDED_CORNERS>
			<COLOR_FILL>255, 255, 255</COLOR_FILL>
			<COLOR_FILLGRADIENT>201, 217, 239</COLOR_FILLGRADIENT>
			<COLOR_TEXT>76, 76, 76</COLOR_TEXT>
			<COLOR_BORDER>118, 118, 118</COLOR_BORDER>
		</TOOLTIP>
	</GLOBALS>
	<MAINWND>
		<CAPTION>
			<FONT>
				<WEIGHT>NORMAL</WEIGHT>
				<QUALITY>CLEARTYPE</QUALITY>
			</FONT>
			<ActiveStart>228, 239, 253</ActiveStart>
			<ActiveFinish>202, 222, 247</ActiveFinish>
			<InactiveStart>227, 232, 239</InactiveStart>
			<InactiveFinish>216, 225, 236</InactiveFinish>
			<ActiveText>105, 112, 121</ActiveText>
			<InactiveText>160, 160, 160</InactiveText>
			<ActiveTitleText>62, 106, 170</ActiveTitleText>
			<InactiveTitleText>160, 160, 160</InactiveTitleText>
			<TextCenter>TRUE</TextCenter>
			<BORDER>
				<SIZE>35, 31</SIZE>
				<CORNERS>5, 9, 5, 3</CORNERS>
			</BORDER>
			<BUTTONS>
				<NORMAL>
					<ConstSize>23, 23</ConstSize>
					<IconSize>17, 16</IconSize>
					<SIZE>17, 16</SIZE>
					<CORNERS>2, 2, 2, 2</CORNERS>
				</NORMAL>
				<SMALL>
					<ConstSize>16, 16</ConstSize>
					<IconSize>13, 12</IconSize>
					<SIZE>17, 16</SIZE>
					<CORNERS>2, 2, 2, 2</CORNERS>
				</SMALL>
			</BUTTONS>
		</CAPTION>
		<ROUND_BORDER>9, 9</ROUND_BORDER>
		<BORDER>
			<SIZE>35, 23</SIZE>
			<CORNERS>17, 0, 17, 22</CORNERS>
			<SIDES>17, 0, 17, 17</SIDES>
		</BORDER>
		<BORDER_MDICHILD>
			<SIZE>35, 23</SIZE>
			<CORNERS>17, 0, 17, 22</CORNERS>
			<SIDES>17, 0, 17, 17</SIDES>
		</BORDER_MDICHILD>
		<MainClientArea>164, 195, 235</MainClientArea>
	</MAINWND>
	<EDIT>
		<BorderHighlighted>255, 189, 105</BorderHighlighted>
	</EDIT>
	<COMBO>
		<BorderHighlighted>255, 189, 105</BorderHighlighted>
		<BorderPressed>255, 189, 105</BorderPressed>
		<BUTTON>
			<GradientStartNormal>195, 221, 255</GradientStartNormal>
			<GradientFinishNormal>227, 239, 255</GradientFinishNormal>
			<GradientStartHighlighted>255, 220, 122</GradientStartHighlighted>
			<GradientFinishHighlighted>255, 244, 199</GradientFinishHighlighted>
			<BtnBorderHighlighted>255, 189, 105</BtnBorderHighlighted>
			<GradientStartPressed>255, 183, 91</GradientStartPressed>
			<GradientFinishPressed>252, 153, 61</GradientFinishPressed>
			<BtnBorderPressed>251, 140, 61</BtnBorderPressed>
		</BUTTON>
	</COMBO>
	<MENU>
		<Light>250, 250, 250</Light>
		<Rarely>215, 227, 234</Rarely>
    <Border>101, 147, 207</Border>
    <Separator1>197, 197, 197</Separator1>
		<Separator2>245, 245, 245</Separator2>
		<GroupBackground>222, 232, 239</GroupBackground>
		<ItemBorder>255, 189, 105</ItemBorder>
		<ItemBack>
			<SIZE>20, 20</SIZE>
			<CORNERS>2, 2, 2, 2</CORNERS>
		</ItemBack>
		<ItemCheck>
			<SIZE>10, 14</SIZE>
		</ItemCheck>
		<ItemRadio>
			<SIZE>10, 14</SIZE>
		</ItemRadio>
		<Highlighted>
			<SIZE>55, 22</SIZE>
			<CORNERS>2, 2, 2, 2</CORNERS>
		</Highlighted>
		<HighlightedDisabled>
			<SIZE>55, 22</SIZE>
			<CORNERS>2, 2, 2, 2</CORNERS>
		</HighlightedDisabled>
		<ScrollBtn_T>
			<SIZE>30, 12</SIZE>
			<CORNERS>2, 2, 2, 2</CORNERS>
		</ScrollBtn_T>
		<TextNormal>0, 21, 110</TextNormal>
		<TextHighlighted>0, 21, 110</TextHighlighted>
		<TextDisabled>167, 167, 167</TextDisabled>
		<COLORS>
			<Black>86, 125, 177</Black>
			<Black2>21, 66, 139</Black2>
		</COLORS>
		<BorderSize>2</BorderSize>
		<ButtonBorder>
			<SIZE>2, 19</SIZE>
		</ButtonBorder>
	</MENU>
	<BARS>
		<DEFAULT>
			<Bkgnd>233, 238, 238</Bkgnd>
			<GradientLight>191, 219, 255</GradientLight>
			<GradientDark>191, 219, 255</GradientDark>
		</DEFAULT>
		<TOOLBAR>
			<GradientLight>227, 239, 255</GradientLight>
			<GradientDark>177, 211, 255</GradientDark>
			<GradientVertLight>227, 239, 255</GradientVertLight>
			<GradientVertDark>177, 211, 255</GradientVertDark>
			<CustomizeButtonGradientLight>215, 232, 255</CustomizeButtonGradientLight>
			<CustomizeButtonGradientDark>111, 157, 217</CustomizeButtonGradientDark>
			<BottomLineColor>111, 157, 217</BottomLineColor>
			<GRIPPER>
				<SIZE>4, 4</SIZE>
				<TRANSPARENT>255, 0, 255</TRANSPARENT>
			</GRIPPER>
			<TEAR>
				<SIZE>35, 3</SIZE>
				<TRANSPARENT>255, 0, 255</TRANSPARENT>
			</TEAR>
			<BUTTON>
				<SIZE>22, 22</SIZE>
				<CORNERS>2, 3, 2, 2</CORNERS>
			</BUTTON>
			<BORDER>
				<SIZE>9, 9</SIZE>
				<CORNERS>4, 4, 4, 4</CORNERS>
				<SIDES>2, 2, 2, 2</SIDES>
			</BORDER>
			<TextNormal>0, 21, 110</TextNormal>
			<TextHighlighted>0, 21, 110</TextHighlighted>
			<TextDisabled>141, 141, 141</TextDisabled>
		</TOOLBAR>
		<MENUBAR>
			<GradientLight>191, 219, 255</GradientLight>
			<GradientDark>191, 219, 255</GradientDark>
			<GradientVertLight>191, 219, 255</GradientVertLight>
			<GradientVertDark>191, 219, 255</GradientVertDark>
			<TextNormal>21, 66, 139</TextNormal>
			<TextHighlighted>21, 66, 139</TextHighlighted>
			<TextDisabled>141, 141, 141</TextDisabled>
			<BUTTON>
				<SIZE>22, 19</SIZE>
				<CORNERS>1, 1, 1, 1</CORNERS>
				<TRANSPARENT>255, 0, 255</TRANSPARENT>
			</BUTTON>
		</MENUBAR>
		<POPUPBAR>
			<ROUND_BORDER>3, 3</ROUND_BORDER>
			<BORDER>
				<SIZE>7, 7</SIZE>
				<CORNERS>3, 3, 3, 3</CORNERS>
				<SIDES>2, 2, 2, 2</SIDES>
			</BORDER>
			<RESIZEBAR>
				<BACK>
					<SIZE>3, 11</SIZE>
					<CORNERS>1, 2, 1, 1</CORNERS>
				</BACK>
				<ICON_HV>
					<SIZE>9, 8</SIZE>
					<TRANSPARENT>255, 0, 255</TRANSPARENT>
				</ICON_HV>
				<ICON_HVT>
					<SIZE>9, 8</SIZE>
					<TRANSPARENT>255, 0, 255</TRANSPARENT>
				</ICON_HVT>
				<ICON_V>
					<SIZE>15, 3</SIZE>
					<TRANSPARENT>255, 0, 255</TRANSPARENT>
				</ICON_V>
			</RESIZEBAR>
		</POPUPBAR>
		<STATUSBAR>
			<BACK>
				<SIZE>35, 23</SIZE>
				<CORNERS>5, 8, 5, 5</CORNERS>
				<SIDES>1, 8, 1, 3</SIDES>
			</BACK>
			<BACK_EXT>
				<SIZE>35, 23</SIZE>
				<CORNERS>3, 8, 5, 5</CORNERS>
				<SIDES>3, 8, 1, 3</SIDES>
			</BACK_EXT>
			<PANEBORDER>
				<SIZE>2, 20</SIZE>
			</PANEBORDER>
			<SIZEBOX>
				<SIZE>11, 11</SIZE>
			</SIZEBOX>
			<TextNormal>21, 66, 139</TextNormal>
			<TextDisabled>141, 141, 141</TextDisabled>
		</STATUSBAR>
		<CAPTIONBAR>
			<GradientLight>227, 239, 255</GradientLight>
			<GradientDark>175, 210, 255</GradientDark>
			<TextNormal>8, 55, 114</TextNormal>
		</CAPTIONBAR>
	</BARS>
	<TASK>
		<GradientDark>213, 228, 242</GradientDark>
		<GradientLight>255, 255, 255</GradientLight>
		<GROUP>
			<NORMAL>
				<CAPTION>
					<DarkNormal>214, 232, 255</DarkNormal>
					<LightNormal>226, 238, 255</LightNormal>
					<DarkHighlighted>227, 239, 255</DarkHighlighted>
					<LightHighlighted>255, 255, 255</LightHighlighted>
					<TextNormal>8, 55, 114</TextNormal>
					<TextHighlighted>8, 55, 114</TextHighlighted>
				</CAPTION>
				<AREA>
					<DarkNormal>255, 255, 255</DarkNormal>
					<LightNormal>255, 255, 255</LightNormal>
				</AREA>
			</NORMAL>
			<SPECIAL>
				<CAPTION>
					<DarkNormal>214, 232, 255</DarkNormal>
					<LightNormal>226, 238, 255</LightNormal>
					<DarkHighlighted>227, 239, 255</DarkHighlighted>
					<LightHighlighted>255, 255, 255</LightHighlighted>
					<TextNormal>8, 55, 114</TextNormal>
					<TextHighlighted>8, 55, 114</TextHighlighted>
				</CAPTION>
				<AREA>
					<DarkNormal>255, 255, 255</DarkNormal>
					<LightNormal>255, 255, 255</LightNormal>
				</AREA>
			</SPECIAL>
			<BORDER>111, 157, 217</BORDER>
		</GROUP>
		<SCROLL_BUTTON>
			<SIZE>30, 12</SIZE>
			<CORNERS>2, 2, 2, 2</CORNERS>
		</SCROLL_BUTTON>
	</TASK>
	<TABS>
		<TextColorActive>0, 21, 110</TextColorActive>
		<TextColorInactive>0, 21, 110</TextColorInactive>
		<3D>
			<BUTTON>
				<SIZE>57, 24</SIZE>
				<CORNERS>5, 5, 5, 2</CORNERS>
			</BUTTON>
		</3D>
		<FLAT>
			<Black>146, 165, 199</Black>
			<Highlight>127, 161, 209</Highlight>
			<BUTTON>
				<SIZE>24, 15</SIZE>
				<CORNERS>4, 4, 0, 6</CORNERS>
				<TRANSPARENT>255, 0, 255</TRANSPARENT>
			</BUTTON>
			<BorderInnerNormal>243, 247, 253</BorderInnerNormal>
			<BorderInnerActive>243, 247, 253</BorderInnerActive>
			<BorderOuterNormal>146, 165, 199</BorderOuterNormal>
			<BorderOuterActive>146, 165, 199</BorderOuterActive>
		</FLAT>
	</TABS>
	<HEADER>
		<NormalStart>248, 251, 253</NormalStart>
		<NormalFinish>210, 219, 232</NormalFinish>
		<NormalBorder>158, 182, 206</NormalBorder>
		<HighlightedStart>249, 216, 157</HighlightedStart>
		<HighlightedFinish>241, 193, 94</HighlightedFinish>
		<HighlightedBorder>242, 149, 54</HighlightedBorder>
		<PressedStart>255, 211, 139</PressedStart>
		<PressedFinish>242, 145, 56</PressedFinish>
		<PressedBorder>242, 149, 54</PressedBorder>
	</HEADER>
	<RIBBON>
		<PANEL>
			<BACK>
				<TOP>
					<SIZE>100, 68</SIZE>
					<CORNERS>3, 15, 3, 0</CORNERS>
				</TOP>
				<BOTTOM>
					<SIZE>100, 17</SIZE>
					<CORNERS>3, 0, 4, 4</CORNERS>
				</BOTTOM>
			</BACK>
			<CAPTION>
				<LAUNCH_BTN>
					<SIZE>15, 14</SIZE>
					<CORNERS>2, 2, 2, 2</CORNERS>
				</LAUNCH_BTN>
				<LAUNCH_ICON>
					<SIZE>8, 8</SIZE>
				</LAUNCH_ICON>
				<TextNormal>62, 106, 170</TextNormal>
				<TextHighlighted>62, 106, 170</TextHighlighted>
			</CAPTION>
			<SEPARATOR>
				<SIZE>2, 55</SIZE>
			</SEPARATOR>
			<QAT>
				<SIZE>11, 24</SIZE>
				<CORNERS>3, 3, 3, 3</CORNERS>
			</QAT>
			<BUTTONS>
				<BUTTON_GROUP_F>
					<SIZE>22, 22</SIZE>
					<CORNERS>2, 3, 2, 2</CORNERS>
				</BUTTON_GROUP_F>
				<BUTTON_GROUP_M>
					<SIZE>22, 22</SIZE>
					<CORNERS>2, 3, 2, 2</CORNERS>
				</BUTTON_GROUP_M>
				<BUTTON_GROUP_L>
					<SIZE>22, 22</SIZE>
					<CORNERS>2, 3, 2, 2</CORNERS>
				</BUTTON_GROUP_L>
				<BUTTON_GROUP_S>
					<SIZE>22, 22</SIZE>
					<CORNERS>2, 3, 2, 2</CORNERS>
				</BUTTON_GROUP_S>
				<BUTTON_GROUPMENU_F_C>
					<SIZE>23, 22</SIZE>
					<CORNERS>2, 3, 2, 2</CORNERS>
				</BUTTON_GROUPMENU_F_C>
				<BUTTON_GROUPMENU_F_M>
					<SIZE>9, 22</SIZE>
					<CORNERS>1, 3, 2, 2</CORNERS>
				</BUTTON_GROUPMENU_F_M>
				<BUTTON_GROUPMENU_M_C>
					<SIZE>23, 22</SIZE>
					<CORNERS>2, 3, 2, 2</CORNERS>
				</BUTTON_GROUPMENU_M_C>
				<BUTTON_GROUPMENU_M_M>
					<SIZE>9, 22</SIZE>
					<CORNERS>1, 3, 2, 2</CORNERS>
				</BUTTON_GROUPMENU_M_M>
				<BUTTON_GROUPMENU_L_C>
					<SIZE>23, 22</SIZE>
					<CORNERS>2, 3, 2, 2</CORNERS>
				</BUTTON_GROUPMENU_L_C>
				<BUTTON_GROUPMENU_L_M>
					<SIZE>10, 22</SIZE>
					<CORNERS>1, 3, 2, 2</CORNERS>
				</BUTTON_GROUPMENU_L_M>
				<BUTTON_NORMAL_S>
					<SIZE>22, 22</SIZE>
					<CORNERS>2, 2, 2, 2</CORNERS>
				</BUTTON_NORMAL_S>
				<BUTTON_NORMAL_B>
					<SIZE>43, 66</SIZE>
					<CORNERS>2, 2, 2, 2</CORNERS>
				</BUTTON_NORMAL_B>
				<BUTTON_DEFAULT>
					<SIZE>52, 84</SIZE>
					<CORNERS>2, 15, 2, 2</CORNERS>
				</BUTTON_DEFAULT>
				<BUTTON_DEFAULT_ICON>
					<SIZE>38, 38</SIZE>
					<CORNERS>7, 7, 8, 12</CORNERS>
				</BUTTON_DEFAULT_ICON>
				<BUTTON_DEFAULT_IMAGE>
					<SIZE>15, 16</SIZE>
				</BUTTON_DEFAULT_IMAGE>
				<BUTTON_DEFAULT_QAT_ICON>
					<SIZE>20, 12</SIZE>
					<CORNERS>3, 3, 3, 3</CORNERS>
				</BUTTON_DEFAULT_QAT_ICON>
				<BUTTON_DEFAULT_QAT>
					<SIZE>22, 22</SIZE>
					<CORNERS>3, 3, 3, 3</CORNERS>
				</BUTTON_DEFAULT_QAT>
				<BUTTON_MENU_H_C>
					<SIZE>22, 22</SIZE>
					<CORNERS>4, 4, 1, 2</CORNERS>
				</BUTTON_MENU_H_C>
				<BUTTON_MENU_H_M>
					<SIZE>11, 22</SIZE>
					<CORNERS>0, 4, 3, 2</CORNERS>
				</BUTTON_MENU_H_M>
				<BUTTON_MENU_V_C>
					<SIZE>43, 39</SIZE>
					<CORNERS>3, 6, 3, 2</CORNERS>
				</BUTTON_MENU_V_C>
				<BUTTON_MENU_V_M>
					<SIZE>43, 27</SIZE>
					<CORNERS>3, 0, 3, 2</CORNERS>
				</BUTTON_MENU_V_M>
				<BUTTON_CHECK>
					<SIZE>13, 13</SIZE>
				</BUTTON_CHECK>
				<BUTTON_PNL_T>
					<SIZE>15, 21</SIZE>
					<CORNERS>3, 3, 3, 3</CORNERS>
				</BUTTON_PNL_T>
				<BUTTON_PNL_M>
					<SIZE>15, 19</SIZE>
					<CORNERS>3, 3, 3, 3</CORNERS>
				</BUTTON_PNL_M>
				<BUTTON_PNL_B>
					<SIZE>15, 20</SIZE>
					<CORNERS>3, 3, 3, 3</CORNERS>
				</BUTTON_PNL_B>
			</BUTTONS>
			<EDIT>
				<Normal>234, 242, 251</Normal>
				<Highlighted>255, 255, 255</Highlighted>
				<Disabled>239, 239, 239</Disabled>
				<Pressed>255, 255, 255</Pressed>
				<BorderNormal>171, 193, 222</BorderNormal>
				<BorderHighlighted>179, 199, 225</BorderHighlighted>
				<BorderDisabled>177, 187, 198</BorderDisabled>
				<BorderPressed>179, 199, 225</BorderPressed>
				<Selection>174, 196, 232</Selection>
				<BUTTON>
					<IMAGE>
						<SIZE>12, 22</SIZE>
						<CORNERS>2, 3, 2, 2</CORNERS>
					</IMAGE>
				</BUTTON>
			</EDIT>
			<TextNormal>21, 66, 139</TextNormal>
			<TextHighlighted>21, 66, 139</TextHighlighted>
		</PANEL>
		<CATEGORY>
			<BACK>
				<SIZE>80, 92</SIZE>
				<CORNERS>5, 18, 4, 10</CORNERS>
			</BACK>
			<TAB>
				<BUTTON>
					<SIZE>57, 24</SIZE>
					<CORNERS>5, 5, 5, 2</CORNERS>
				</BUTTON>
				<TextNormal>21, 66, 139</TextNormal>
				<TextHighlighted>21, 66, 139</TextHighlighted>
			</TAB>
			<TAB_SEPARATOR>
				<SIZE>1, 23</SIZE>
			</TAB_SEPARATOR>
			<BUTTON_PAGE_L>
				<SIZE>14, 92</SIZE>
				<CORNERS>4, 18, 3, 6</CORNERS>
			</BUTTON_PAGE_L>
			<BUTTON_PAGE_R>
				<SIZE>14, 92</SIZE>
				<CORNERS>3, 18, 4, 6</CORNERS>
			</BUTTON_PAGE_R>
		</CATEGORY>
		<CONTEXT>
			<CATEGORY>
				<BACK>
					<SIZE>80, 92</SIZE>
					<CORNERS>5, 18, 4, 10</CORNERS>
				</BACK>
				<TAB>
					<BUTTON>
						<SIZE>57, 24</SIZE>
						<CORNERS>5, 5, 5, 2</CORNERS>
					</BUTTON>
					<TextNormal>21, 66, 139</TextNormal>
					<TextHighlighted>21, 66, 139</TextHighlighted>
				</TAB>
				<CAPTION>
					<BACK>
						<SIZE>80, 19</SIZE>
						<CORNERS>1, 1, 1, 2</CORNERS>
					</BACK>
					<TextNormal>21, 66, 139</TextNormal>
				</CAPTION>
				<BUTTON_DEFAULT>
					<SIZE>52, 84</SIZE>
					<CORNERS>2, 15, 2, 2</CORNERS>
				</BUTTON_DEFAULT>
			</CATEGORY>
			<PANEL>
				<BACK>
					<TOP>
						<SIZE>100, 68</SIZE>
						<CORNERS>3, 15, 3, 0</CORNERS>
					</TOP>
					<BOTTOM>
						<SIZE>100, 17</SIZE>
						<CORNERS>3, 0, 4, 4</CORNERS>
					</BOTTOM>
				</BACK>
				<CAPTION>
					<TextNormal>62, 106, 170</TextNormal>
					<TextHighlighted>62, 106, 170</TextHighlighted>
				</CAPTION>
				<TextNormal>21, 66, 139</TextNormal>
				<TextHighlighted>21, 66, 139</TextHighlighted>
			</PANEL>
			<SEPARATOR>
				<SIZE>3, 26</SIZE>
				<CORNERS>1, 1, 1, 1</CORNERS>
			</SEPARATOR>
		</CONTEXT>
		<CAPTION>
			<QA>
				<SIZE>32, 26</SIZE>
				<CORNERS>15, 4, 12, 4</CORNERS>
			</QA>
			<QA_GLASS>
				<SIZE>32, 26</SIZE>
				<CORNERS>15, 4, 12, 4</CORNERS>
			</QA_GLASS>
		</CAPTION>
		<MAIN_BUTTON>
			<SIZE>38, 38</SIZE>
		</MAIN_BUTTON>
		<MAIN>
			<BACK>
				<SIZE>9, 38</SIZE>
				<CORNERS>4, 10, 4, 27</CORNERS>
			</BACK>
			<BORDER>
				<SIZE>5, 5</SIZE>
				<CORNERS>2, 2, 2, 2</CORNERS>
			</BORDER>
			<BUTTON>
				<SIZE>54, 23</SIZE>
				<CORNERS>2, 3, 2, 2</CORNERS>
			</BUTTON>
		</MAIN>
		<STATUS>
			<PANE_BUTTON>
				<SIZE>22, 22</SIZE>
				<CORNERS>3, 4, 3, 3</CORNERS>
			</PANE_BUTTON>
			<SLIDER>
				<THUMB>
					<SIZE>11, 15</SIZE>
					<CORNERS>0, 0, 0, 0</CORNERS>
				</THUMB>
				<PLUS>
					<SIZE>18, 18</SIZE>
					<CORNERS>0, 0, 0, 0</CORNERS>
				</PLUS>
				<MINUS>
					<SIZE>18, 18</SIZE>
					<CORNERS>0, 0, 0, 0</CORNERS>
				</MINUS>
			</SLIDER>
			<PROGRESS>
				<BACK>
					<SIZE>90, 12</SIZE>
					<CORNERS>2, 2, 2, 2</CORNERS>
				</BACK>
				<NORMAL>
					<SIZE>86, 8</SIZE>
					<CORNERS>1, 1, 1, 1</CORNERS>
				</NORMAL>
				<NORMAL_EXT>
					<SIZE>5, 8</SIZE>
				</NORMAL_EXT>
				<INFINITY>
					<SIZE>86, 8</SIZE>
					<CORNERS>1, 1, 1, 1</CORNERS>
				</INFINITY>
			</PROGRESS>
		</STATUS>
		<BORDERS>
			<QAT>
				<SIZE>7, 7</SIZE>
				<CORNERS>3, 3, 3, 3</CORNERS>
				<SIDES>2, 2, 2, 2</SIDES>
			</QAT>
			<FLOATY>
				<SIZE>7, 7</SIZE>
				<CORNERS>3, 3, 3, 3</CORNERS>
				<SIDES>2, 2, 2, 2</SIDES>
			</FLOATY>
		</BORDERS>
		<KEYTIP>
			<BACK>
				<SIZE>15, 15</SIZE>
				<CORNERS>2, 2, 2, 2</CORNERS>
				<SIDES>1, 1, 1, 1</SIDES>
			</BACK>
		</KEYTIP>
		<HYPERLINK>
			<Inactive>0, 102, 226</Inactive>
			<Active>0, 144, 255</Active>
		</HYPERLINK>
	</RIBBON>
	<PLANNER>
		<WorkColor>141, 174, 217</WorkColor>
		<NcAreaColor>213, 228, 242</NcAreaColor>
		<NcLineColor>101, 147, 207</NcLineColor>
		<NcTextColor>101, 147, 207</NcTextColor>
		<TODAY>
			<Caption1Start>247, 208, 112</Caption1Start>
			<Caption1Finish>251, 230, 148</Caption1Finish>
			<Caption2Start>239, 155,  30</Caption2Start>
			<Caption2Finish>250, 224, 139</Caption2Finish>
			<BorderColor>238, 147, 17</BorderColor>
		</TODAY>
	</PLANNER>
	<GRID>
		<HEADER>
			<NormalStart>251, 253, 255</NormalStart>
			<NormalFinish>196, 221, 255</NormalFinish>
			<NormalBorder>101, 147, 207</NormalBorder>
			<Separator>154, 197, 255</Separator>
		</HEADER>
		<ExpandBoxLight>144, 168, 192</ExpandBoxLight>
		<ExpandBoxDark>48, 72, 96</ExpandBoxDark>
		<LeftOffset>253, 238, 201</LeftOffset>
		<GroupLine>111, 157, 217</GroupLine>
		<GroupSubLine>227, 239, 255</GroupSubLine>
	</GRID>
	<OUTLOOK>
		<CAPTION>
			<TextNormal>8, 55, 114</TextNormal>
		</CAPTION>
		<PAGEBUTTON>
			<BACK>
				<SIZE>54, 31</SIZE>
			</BACK>
			<TextNormal>32, 77, 137</TextNormal>
			<TextHighlighted>32, 77, 137</TextHighlighted>
			<TextPressed>0, 0, 0</TextPressed>
		</PAGEBUTTON>
		<BAR>
			<BACK>
				<SIZE>54, 31</SIZE>
			</BACK>
		</BAR>
	</OUTLOOK>
	<POPUP>
		<GradientFillDark>169, 198, 238</GradientFillDark>
		<GradientFillLight>214, 231, 252</GradientFillLight>
	</POPUP>
</STYLE>
=== C:/Users/treeman/Desktop/windows nt source code\xbox\Xbox Live Source\XONLINE_MAIN\public\ext\sdk\win7\sdk\include\atl90\Silver\Style.xml ===
<STYLE>
	<VERSION>
		<NUMBER>2007</NUMBER>
		<TYPE>20</TYPE>
		<ID_PREFIX>SILVER_</ID_PREFIX>
	</VERSION>
	<DESCRIPTION>
		<NAME>Obsidian (black)</NAME>
	</DESCRIPTION>
	<GLOBALS>
		<BarText>0, 0, 0</BarText>
		<BarFace>233, 238, 247</BarFace>
		<ActiveCaption>233, 238, 247</ActiveCaption>
		<CaptionText>70, 70, 70</CaptionText>
		<InactiveCaption>186, 193, 202</InactiveCaption>
		<InactiveCaptionText>70, 70, 70</InactiveCaptionText>
		<FloatToolBarBorder>124, 124, 124</FloatToolBarBorder>
		<BarShadow>172, 175, 183</BarShadow>
		<BarDkShadow>124, 124, 124</BarDkShadow>
		<BarLight>233, 238, 247</BarLight>
		<AutoPremultiply>TRUE</AutoPremultiply>
		<HighlightGradientDark>255, 219, 117</HighlightGradientDark>
		<HighlightGradientLight>255, 245, 204</HighlightGradientLight>
		<HighlightDnGradientDark>255, 184, 94</HighlightDnGradientDark>
		<HighlightDnGradientLight>252, 151, 61</HighlightDnGradientLight>
		<HighlightCheckedGradientDark>255, 171, 63</HighlightCheckedGradientDark>
		<HighlightCheckedGradientLight>255, 207, 146</HighlightCheckedGradientLight>
		<PressedButtonBorder>251, 140, 60</PressedButtonBorder>
		<Highlight>180, 201, 233</Highlight>
		<HighlightText>0, 0, 0</HighlightText>
		<MenuShadowColor>240, 240, 240</MenuShadowColor>
		<TOOLTIP>
			<DRAW_SEPARATOR>FALSE</DRAW_SEPARATOR>
			<ROUNDED_CORNERS>TRUE</ROUNDED_CORNERS>
			<COLOR_FILL>255, 255, 255</COLOR_FILL>
			<COLOR_FILLGRADIENT>233, 238, 247</COLOR_FILLGRADIENT>
			<COLOR_TEXT>76, 76, 76</COLOR_TEXT>
			<COLOR_BORDER>118, 118, 118</COLOR_BORDER>
		</TOOLTIP>
	</GLOBALS>
	<MAINWND>
		<CAPTION>
			<FONT>
				<WEIGHT>NORMAL</WEIGHT>
				<QUALITY>CLEARTYPE</QUALITY>
			</FONT>
			<ActiveStart>62, 62, 62</ActiveStart>
			<ActiveFinish>47, 48, 48</ActiveFinish>
			<InactiveStart>153, 153, 153</InactiveStart>
			<InactiveFinish>146, 146, 146</InactiveFinish>
			<ActiveText>92, 98, 106</ActiveText>
			<InactiveText>138, 138, 138</InactiveText>
			<ActiveTitleText>53, 110, 170</ActiveTitleText>
			<InactiveTitleText>138, 138, 138</InactiveTitleText>
			<TextCenter>TRUE</TextCenter>
			<BORDER>
				<SIZE>35, 31</SIZE>
				<CORNERS>5, 9, 5, 3</CORNERS>
			</BORDER>
			<BUTTONS>
				<NORMAL>
					<ConstSize>23, 23</ConstSize>
					<IconSize>17, 16</IconSize>
					<SIZE>17, 16</SIZE>
					<CORNERS>2, 2, 2, 2</CORNERS>
				</NORMAL>
				<SMALL>
					<ConstSize>16, 16</ConstSize>
					<IconSize>13, 12</IconSize>
					<SIZE>17, 16</SIZE>
					<CORNERS>2, 2, 2, 2</CORNERS>
				</SMALL>
			</BUTTONS>
		</CAPTION>
		<ROUND_BORDER>9, 9</ROUND_BORDER>
		<BORDER>
			<SIZE>35, 23</SIZE>
			<CORNERS>17, 0, 17, 22</CORNERS>
			<SIDES>17, 0, 17, 17</SIDES>
		</BORDER>
		<BORDER_MDICHILD>
			<SIZE>35, 23</SIZE>
			<CORNERS>17, 0, 17, 22</CORNERS>
			<SIDES>17, 0, 17, 17</SIDES>
		</BORDER_MDICHILD>
		<MainClientArea>186, 193, 202</MainClientArea>
	</MAINWND>
	<EDIT>
		<BorderHighlighted>255, 189, 105</BorderHighlighted>
	</EDIT>
	<COMBO>
		<BorderHighlighted>255, 189, 105</BorderHighlighted>
		<BorderPressed>255, 189, 105</BorderPressed>
		<BUTTON>
			<GradientStartNormal>209, 214, 222</GradientStartNormal>
			<GradientFinishNormal>233, 238, 247</GradientFinishNormal>
			<GradientStartHighlighted>255, 220, 122</GradientStartHighlighted>
			<GradientFinishHighlighted>255, 244, 199</GradientFinishHighlighted>
			<BtnBorderHighlighted>255, 189, 105</BtnBorderHighlighted>
			<GradientStartPressed>255, 183, 91</GradientStartPressed>
			<GradientFinishPressed>252, 153, 61</GradientFinishPressed>
			<BtnBorderPressed>251, 140, 61</BtnBorderPressed>
		</BUTTON>
	</COMBO>
	<MENU>
		<Light>250, 250, 250</Light>
		<Rarely>195, 199, 205</Rarely>
    <Border>154, 154, 154</Border>
    <Separator1>197, 197, 197</Separator1>
		<Separator2>245, 245, 245</Separator2>
		<GroupBackground>235, 235, 235</GroupBackground>
		<ItemBorder>205, 181, 130</ItemBorder>
		<ItemBack>
			<SIZE>20, 20</SIZE>
			<CORNERS>2, 2, 2, 2</CORNERS>
		</ItemBack>
		<ItemCheck>
			<SIZE>10, 14</SIZE>
		</ItemCheck>
		<ItemRadio>
			<SIZE>10, 14</SIZE>
		</ItemRadio>
		<Highlighted>
			<SIZE>55, 22</SIZE>
			<CORNERS>2, 2, 2, 2</CORNERS>
		</Highlighted>
		<HighlightedDisabled>
			<SIZE>55, 22</SIZE>
			<CORNERS>2, 2, 2, 2</CORNERS>
		</HighlightedDisabled>
		<ScrollBtn_T>
			<SIZE>30, 12</SIZE>
			<CORNERS>2, 2, 2, 2</CORNERS>
		</ScrollBtn_T>
		<TextNormal>76, 83, 92</TextNormal>
		<TextHighlighted>76, 83, 92</TextHighlighted>
		<TextDisabled>167, 167, 167</TextDisabled>
		<COLORS>
			<Black>124, 124, 124</Black>
			<Black2>90, 90, 90</Black2>
		</COLORS>
		<BorderSize>2</BorderSize>
		<ButtonBorder>
			<SIZE>2, 19</SIZE>
		</ButtonBorder>
	</MENU>
	<BARS>
		<DEFAULT>
			<Bkgnd>233, 238, 247</Bkgnd>
			<GradientLight>208, 212, 221</GradientLight>
			<GradientDark>208, 212, 221</GradientDark>
		</DEFAULT>
		<TOOLBAR>
			<GradientLight>233, 238, 247</GradientLight>
			<GradientDark>209, 214, 222</GradientDark>
			<GradientVertLight>233, 238, 247</GradientVertLight>
			<GradientVertDark>209, 214, 222</GradientVertDark>
			<CustomizeButtonGradientLight>186, 193, 202</CustomizeButtonGradientLight>
			<CustomizeButtonGradientDark>172, 175, 183</CustomizeButtonGradientDark>
			<BottomLineColor>172, 175, 183</BottomLineColor>
			<GRIPPER>
				<SIZE>4, 4</SIZE>
				<TRANSPARENT>255, 0, 255</TRANSPARENT>
			</GRIPPER>
			<TEAR>
				<SIZE>35, 3</SIZE>
				<TRANSPARENT>255, 0, 255</TRANSPARENT>
			</TEAR>
			<BUTTON>
				<SIZE>22, 22</SIZE>
				<CORNERS>2, 3, 2, 2</CORNERS>
			</BUTTON>
			<BORDER>
				<SIZE>9, 9</SIZE>
				<CORNERS>4, 4, 4, 4</CORNERS>
				<SIDES>2, 2, 2, 2</SIDES>
			</BORDER>
			<TextNormal>76, 83, 92</TextNormal>
			<TextHighlighted>76, 83, 92</TextHighlighted>
			<TextDisabled>141, 141, 141</TextDisabled>
		</TOOLBAR>
		<MENUBAR>
			<GradientLight>208, 212, 221</GradientLight>
			<GradientDark>208, 212, 221</GradientDark>
			<GradientVertLight>208, 212, 221</GradientVertLight>
			<GradientVertDark>208, 212, 221</GradientVertDark>
			<TextNormal>76, 83, 92</TextNormal>
			<TextHighlighted>76, 83, 92</TextHighlighted>
			<TextDisabled>141, 141, 141</TextDisabled>
			<BUTTON>
				<SIZE>22, 19</SIZE>
				<CORNERS>1, 1, 1, 1</CORNERS>
				<TRANSPARENT>255, 0, 255</TRANSPARENT>
			</BUTTON>
		</MENUBAR>
		<POPUPBAR>
			<ROUND_BORDER>3, 3</ROUND_BORDER>
			<BORDER>
				<SIZE>7, 7</SIZE>
				<CORNERS>3, 3, 3, 3</CORNERS>
				<SIDES>2, 2, 2, 2</SIDES>
			</BORDER>
			<RESIZEBAR>
				<BACK>
					<SIZE>3, 11</SIZE>
					<CORNERS>1, 2, 1, 1</CORNERS>
				</BACK>
				<ICON_HV>
					<SIZE>9, 8</SIZE>
					<TRANSPARENT>255, 0, 255</TRANSPARENT>
				</ICON_HV>
				<ICON_HVT>
					<SIZE>9, 8</SIZE>
					<TRANSPARENT>255, 0, 255</TRANSPARENT>
				</ICON_HVT>
				<ICON_V>
					<SIZE>15, 3</SIZE>
					<TRANSPARENT>255, 0, 255</TRANSPARENT>
				</ICON_V>
			</RESIZEBAR>
		</POPUPBAR>
		<STATUSBAR>
			<BACK>
				<SIZE>35, 23</SIZE>
				<CORNERS>5, 8, 5, 5</CORNERS>
				<SIDES>1, 8, 1, 3</SIDES>
			</BACK>
			<BACK_EXT>
				<SIZE>35, 23</SIZE>
				<CORNERS>3, 8, 5, 5</CORNERS>
				<SIDES>3, 8, 1, 3</SIDES>
			</BACK_EXT>
			<PANEBORDER>
				<SIZE>2, 20</SIZE>
			</PANEBORDER>
			<SIZEBOX>
				<SIZE>11, 11</SIZE>
			</SIZEBOX>
			<TextNormal>35, 38, 42</TextNormal>
			<TextDisabled>141, 141, 141</TextDisabled>
		</STATUSBAR>
		<CAPTIONBAR>
			<GradientLight>233, 238, 247</GradientLight>
			<GradientDark>186, 193, 202</GradientDark>
			<TextNormal>55, 60, 67</TextNormal>
		</CAPTIONBAR>
	</BARS>
	<TASK>
		<GradientDark>233, 238, 247</GradientDark>
		<GradientLight>255, 255, 255</GradientLight>
		<GROUP>
			<NORMAL>
				<CAPTION>
					<DarkNormal>221, 224, 227</DarkNormal>
					<LightNormal>240, 241, 242</LightNormal>
					<DarkHighlighted>231, 232, 235</DarkHighlighted>
					<LightHighlighted>255, 255, 255</LightHighlighted>
					<TextNormal>55, 60, 67</TextNormal>
					<TextHighlighted>55, 60, 67</TextHighlighted>
				</CAPTION>
				<AREA>
					<DarkNormal>255, 255, 255</DarkNormal>
					<LightNormal>255, 255, 255</LightNormal>
				</AREA>
			</NORMAL>
			<SPECIAL>
				<CAPTION>
					<DarkNormal>221, 224, 227</DarkNormal>
					<LightNormal>240, 241, 242</LightNormal>
					<DarkHighlighted>231, 232, 235</DarkHighlighted>
					<LightHighlighted>255, 255, 255</LightHighlighted>
					<TextNormal>55, 60, 67</TextNormal>
					<TextHighlighted>55, 60, 67</TextHighlighted>
				</CAPTION>
				<AREA>
					<DarkNormal>255, 255, 255</DarkNormal>
					<LightNormal>255, 255, 255</LightNormal>
				</AREA>
			</SPECIAL>
			<BORDER>76, 83, 92</BORDER>
		</GROUP>
		<SCROLL_BUTTON>
			<SIZE>30, 12</SIZE>
			<CORNERS>2, 2, 2, 2</CORNERS>
		</SCROLL_BUTTON>
	</TASK>
	<TABS>
		<3D>
			<BUTTON>
				<SIZE>57, 24</SIZE>
				<CORNERS>5, 5, 5, 2</CORNERS>
			</BUTTON>
		</3D>
		<FLAT>
			<Black>109, 109, 109</Black>
			<Highlight>73, 73, 73</Highlight>
			<BUTTON>
				<SIZE>24, 15</SIZE>
				<CORNERS>4, 4, 0, 6</CORNERS>
				<TRANSPARENT>255, 0, 255</TRANSPARENT>
			</BUTTON>
			<BorderInnerNormal>233, 238, 247</BorderInnerNormal>
			<BorderInnerActive>233, 238, 247</BorderInnerActive>
			<BorderOuterNormal>109, 109, 109</BorderOuterNormal>
			<BorderOuterActive>109, 109, 109</BorderOuterActive>
		</FLAT>
	</TABS>
	<HEADER>
		<NormalStart>247, 247, 247</NormalStart>
		<NormalFinish>222, 222, 222</NormalFinish>
		<NormalBorder>182, 182, 182</NormalBorder>
		<HighlightedStart>249, 216, 157</HighlightedStart>
		<HighlightedFinish>241, 193, 94</HighlightedFinish>
		<HighlightedBorder>242, 149, 54</HighlightedBorder>
		<PressedStart>255, 211, 139</PressedStart>
		<PressedFinish>242, 145, 56</PressedFinish>
		<PressedBorder>242, 149, 54</PressedBorder>
	</HEADER>
	<RIBBON>
		<PANEL>
			<BACK>
				<TOP>
					<SIZE>100, 68</SIZE>
					<CORNERS>3, 15, 3, 0</CORNERS>
				</TOP>
				<BOTTOM>
					<SIZE>100, 17</SIZE>
					<CORNERS>3, 0, 4, 4</CORNERS>
				</BOTTOM>
			</BACK>
			<CAPTION>
				<LAUNCH_BTN>
					<SIZE>15, 14</SIZE>
					<CORNERS>2, 2, 2, 2</CORNERS>
				</LAUNCH_BTN>
				<LAUNCH_ICON>
					<SIZE>8, 8</SIZE>
				</LAUNCH_ICON>
				<TextNormal>83, 84, 89</TextNormal>
				<TextHighlighted>83, 84, 89</TextHighlighted>
			</CAPTION>
			<SEPARATOR>
				<SIZE>2, 55</SIZE>
			</SEPARATOR>
			<QAT>
				<SIZE>11, 24</SIZE>
				<CORNERS>3, 3, 3, 3</CORNERS>
			</QAT>
			<BUTTONS>
				<BUTTON_GROUP_F>
					<SIZE>22, 22</SIZE>
					<CORNERS>2, 3, 2, 2</CORNERS>
				</BUTTON_GROUP_F>
				<BUTTON_GROUP_M>
					<SIZE>22, 22</SIZE>
					<CORNERS>2, 3, 2, 2</CORNERS>
				</BUTTON_GROUP_M>
				<BUTTON_GROUP_L>
					<SIZE>22, 22</SIZE>
					<CORNERS>2, 3, 2, 2</CORNERS>
				</BUTTON_GROUP_L>
				<BUTTON_GROUP_S>
					<SIZE>22, 22</SIZE>
					<CORNERS>2, 3, 2, 2</CORNERS>
				</BUTTON_GROUP_S>
				<BUTTON_GROUPMENU_F_C>
					<SIZE>23, 22</SIZE>
					<CORNERS>2, 3, 2, 2</CORNERS>
				</BUTTON_GROUPMENU_F_C>
				<BUTTON_GROUPMENU_F_M>
					<SIZE>9, 22</SIZE>
					<CORNERS>1, 3, 2, 2</CORNERS>
				</BUTTON_GROUPMENU_F_M>
				<BUTTON_GROUPMENU_M_C>
					<SIZE>23, 22</SIZE>
					<CORNERS>2, 3, 2, 2</CORNERS>
				</BUTTON_GROUPMENU_M_C>
				<BUTTON_GROUPMENU_M_M>
					<SIZE>9, 22</SIZE>
					<CORNERS>1, 3, 2, 2</CORNERS>
				</BUTTON_GROUPMENU_M_M>
				<BUTTON_GROUPMENU_L_C>
					<SIZE>23, 22</SIZE>
					<CORNERS>2, 3, 2, 2</CORNERS>
				</BUTTON_GROUPMENU_L_C>
				<BUTTON_GROUPMENU_L_M>
					<SIZE>10, 22</SIZE>
					<CORNERS>1, 3, 2, 2</CORNERS>
				</BUTTON_GROUPMENU_L_M>
				<BUTTON_NORMAL_S>
					<SIZE>22, 22</SIZE>
					<CORNERS>2, 2, 2, 2</CORNERS>
				</BUTTON_NORMAL_S>
				<BUTTON_NORMAL_B>
					<SIZE>43, 66</SIZE>
					<CORNERS>2, 2, 2, 2</CORNERS>
				</BUTTON_NORMAL_B>
				<BUTTON_DEFAULT>
					<SIZE>52, 84</SIZE>
					<CORNERS>2, 15, 2, 2</CORNERS>
				</BUTTON_DEFAULT>
				<BUTTON_DEFAULT_ICON>
					<SIZE>38, 38</SIZE>
					<CORNERS>7, 7, 8, 12</CORNERS>
				</BUTTON_DEFAULT_ICON>
				<BUTTON_DEFAULT_IMAGE>
					<SIZE>15, 16</SIZE>
				</BUTTON_DEFAULT_IMAGE>
				<BUTTON_DEFAULT_QAT_ICON>
					<SIZE>20, 12</SIZE>
					<CORNERS>3, 3, 3, 3</CORNERS>
				</BUTTON_DEFAULT_QAT_ICON>
				<BUTTON_DEFAULT_QAT>
					<SIZE>22, 22</SIZE>
					<CORNERS>3, 3, 3, 3</CORNERS>
				</BUTTON_DEFAULT_QAT>
				<BUTTON_MENU_H_C>
					<SIZE>22, 22</SIZE>
					<CORNERS>4, 4, 2, 1</CORNERS>
				</BUTTON_MENU_H_C>
				<BUTTON_MENU_H_M>
					<SIZE>11, 22</SIZE>
					<CORNERS>0, 4, 3, 2</CORNERS>
				</BUTTON_MENU_H_M>
				<BUTTON_MENU_V_C>
					<SIZE>43, 39</SIZE>
					<CORNERS>3, 6, 3, 2</CORNERS>
				</BUTTON_MENU_V_C>
				<BUTTON_MENU_V_M>
					<SIZE>43, 27</SIZE>
					<CORNERS>3, 0, 3, 2</CORNERS>
				</BUTTON_MENU_V_M>
				<BUTTON_CHECK>
					<SIZE>13, 13</SIZE>
				</BUTTON_CHECK>
				<BUTTON_PNL_T>
					<SIZE>15, 21</SIZE>
					<CORNERS>3, 3, 3, 3</CORNERS>
				</BUTTON_PNL_T>
				<BUTTON_PNL_M>
					<SIZE>15, 19</SIZE>
					<CORNERS>3, 3, 3, 3</CORNERS>
				</BUTTON_PNL_M>
				<BUTTON_PNL_B>
					<SIZE>15, 20</SIZE>
					<CORNERS>3, 3, 3, 3</CORNERS>
				</BUTTON_PNL_B>
			</BUTTONS>
			<EDIT>
				<Normal>232, 234, 236</Normal>
				<Highlighted>255, 255, 255</Highlighted>
				<Disabled>239, 239, 239</Disabled>
				<Pressed>255, 255, 255</Pressed>
				<BorderNormal>169, 177, 184</BorderNormal>
				<BorderHighlighted>164, 164, 164</BorderHighlighted>
				<BorderDisabled>177, 187, 198</BorderDisabled>
				<BorderPressed>164, 164, 164</BorderPressed>
				<Selection>174, 196, 232</Selection>
				<BUTTON>
					<IMAGE>
						<SIZE>12, 22</SIZE>
						<CORNERS>2, 3, 2, 2</CORNERS>
					</IMAGE>
				</BUTTON>
			</EDIT>
			<TextNormal>76, 83, 92</TextNormal>
			<TextHighlighted>76, 83, 92</TextHighlighted>
		</PANEL>
		<CATEGORY>
			<BACK>
				<SIZE>80, 92</SIZE>
				<CORNERS>5, 18, 5, 10</CORNERS>
			</BACK>
			<TAB>
				<BUTTON>
					<SIZE>57, 24</SIZE>
					<CORNERS>5, 5, 5, 2</CORNERS>
				</BUTTON>
				<TextNormal>76, 83, 92</TextNormal>
				<TextHighlighted>76, 83, 92</TextHighlighted>
			</TAB>
			<TAB_SEPARATOR>
				<SIZE>1, 23</SIZE>
			</TAB_SEPARATOR>
			<BUTTON_PAGE_L>
				<SIZE>14, 92</SIZE>
				<CORNERS>4, 18, 3, 6</CORNERS>
			</BUTTON_PAGE_L>
			<BUTTON_PAGE_R>
				<SIZE>14, 92</SIZE>
				<CORNERS>3, 18, 4, 6</CORNERS>
			</BUTTON_PAGE_R>
		</CATEGORY>
		<CONTEXT>
			<CATEGORY>
				<BACK>
					<SIZE>80, 92</SIZE>
					<CORNERS>5, 18, 4, 10</CORNERS>
				</BACK>
				<TAB>
					<BUTTON>
						<SIZE>57, 24</SIZE>
						<CORNERS>5, 5, 5, 2</CORNERS>
					</BUTTON>
					<TextNormal>76, 83, 92</TextNormal>
					<TextHighlighted>76, 83, 92</TextHighlighted>
				</TAB>
				<CAPTION>
					<BACK>
						<SIZE>80, 19</SIZE>
						<CORNERS>1, 1, 1, 2</CORNERS>
					</BACK>
					<TextNormal>76, 83, 92</TextNormal>
				</CAPTION>
				<BUTTON_DEFAULT>
					<SIZE>52, 84</SIZE>
					<CORNERS>2, 15, 2, 2</CORNERS>
				</BUTTON_DEFAULT>
			</CATEGORY>
			<PANEL>
				<BACK>
					<TOP>
						<SIZE>100, 68</SIZE>
						<CORNERS>3, 15, 3, 0</CORNERS>
					</TOP>
					<BOTTOM>
						<SIZE>100, 17</SIZE>
						<CORNERS>3, 0, 4, 4</CORNERS>
					</BOTTOM>
				</BACK>
				<CAPTION>
					<TextNormal>83, 84, 89</TextNormal>
					<TextHighlighted>83, 84, 89</TextHighlighted>
				</CAPTION>
				<TextNormal>76, 83, 92</TextNormal>
				<TextHighlighted>76, 83, 92</TextHighlighted>
			</PANEL>
			<SEPARATOR>
				<SIZE>3, 26</SIZE>
				<CORNERS>1, 1, 1, 1</CORNERS>
			</SEPARATOR>
		</CONTEXT>
		<CAPTION>
			<QA>
				<SIZE>32, 26</SIZE>
				<CORNERS>15, 4, 12, 4</CORNERS>
			</QA>
			<QA_GLASS>
				<SIZE>32, 26</SIZE>
				<CORNERS>15, 4, 12, 4</CORNERS>
			</QA_GLASS>
		</CAPTION>
		<MAIN_BUTTON>
			<SIZE>38, 38</SIZE>
		</MAIN_BUTTON>
		<MAIN>
			<BACK>
				<SIZE>9, 38</SIZE>
				<CORNERS>4, 10, 4, 27</CORNERS>
			</BACK>
			<BORDER>
				<SIZE>5, 5</SIZE>
				<CORNERS>2, 2, 2, 2</CORNERS>
			</BORDER>
			<BUTTON>
				<SIZE>54, 23</SIZE>
				<CORNERS>2, 3, 2, 2</CORNERS>
			</BUTTON>
		</MAIN>
		<STATUS>
			<PANE_BUTTON>
				<SIZE>22, 22</SIZE>
				<CORNERS>3, 4, 3, 3</CORNERS>
			</PANE_BUTTON>
			<SLIDER>
				<THUMB>
					<SIZE>11, 15</SIZE>
					<CORNERS>0, 0, 0, 0</CORNERS>
				</THUMB>
				<PLUS>
					<SIZE>18, 18</SIZE>
					<CORNERS>0, 0, 0, 0</CORNERS>
				</PLUS>
				<MINUS>
					<SIZE>18, 18</SIZE>
					<CORNERS>0, 0, 0, 0</CORNERS>
				</MINUS>
			</SLIDER>
			<PROGRESS>
				<BACK>
					<SIZE>90, 12</SIZE>
					<CORNERS>2, 2, 2, 2</CORNERS>
				</BACK>
				<NORMAL>
					<SIZE>86, 8</SIZE>
					<CORNERS>1, 1, 1, 1</CORNERS>
				</NORMAL>
				<NORMAL_EXT>
					<SIZE>5, 8</SIZE>
				</NORMAL_EXT>
				<INFINITY>
					<SIZE>86, 8</SIZE>
					<CORNERS>1, 1, 1, 1</CORNERS>
				</INFINITY>
			</PROGRESS>
		</STATUS>
		<BORDERS>
			<QAT>
				<SIZE>7, 7</SIZE>
				<CORNERS>3, 3, 3, 3</CORNERS>
				<SIDES>2, 2, 2, 2</SIDES>
			</QAT>
			<FLOATY>
				<SIZE>7, 7</SIZE>
				<CORNERS>3, 3, 3, 3</CORNERS>
				<SIDES>2, 2, 2, 2</SIDES>
			</FLOATY>
		</BORDERS>
		<KEYTIP>
			<BACK>
				<SIZE>15, 15</SIZE>
				<CORNERS>2, 2, 2, 2</CORNERS>
				<SIDES>1, 1, 1, 1</SIDES>
			</BACK>
		</KEYTIP>
		<HYPERLINK>
			<Inactive>0, 102, 226</Inactive>
			<Active>0, 144, 255</Active>
		</HYPERLINK>
	</RIBBON>
	<PLANNER>
		<WorkColor>176, 182, 190</WorkColor>
		<NcAreaColor>233, 238, 247</NcAreaColor>
		<NcLineColor>76, 83, 92</NcLineColor>
		<NcTextColor>76, 83, 92</NcTextColor>
		<TODAY>
			<Caption1Start>247, 208, 112</Caption1Start>
			<Caption1Finish>251, 230, 148</Caption1Finish>
			<Caption2Start>239, 155,  30</Caption2Start>
			<Caption2Finish>250, 224, 139</Caption2Finish>
			<BorderColor>238, 147, 17</BorderColor>
		</TODAY>
	</PLANNER>
	<GRID>
		<HEADER>
			<NormalStart>251, 253, 253</NormalStart>
			<NormalFinish>212, 214, 219</NormalFinish>
			<NormalBorder>76, 83, 92</NormalBorder>
			<Separator>145, 153, 164</Separator>
		</HEADER>
		<ExpandBoxLight>144, 168, 192</ExpandBoxLight>
		<ExpandBoxDark>48, 72, 96</ExpandBoxDark>
		<LeftOffset>232, 234, 236</LeftOffset>
		<GroupLine>145, 153, 164 </GroupLine>
		<GroupSubLine>227, 239, 255</GroupSubLine>
	</GRID>
	<OUTLOOK>
		<CAPTION>
			<TextNormal>55, 60, 67</TextNormal>
		</CAPTION>
		<PAGEBUTTON>
			<BACK>
				<SIZE>54, 31</SIZE>
			</BACK>
			<TextNormal>55, 60, 67</TextNormal>
			<TextHighlighted>55, 60, 67</TextHighlighted>
			<TextPressed>0, 0, 0</TextPressed>
		</PAGEBUTTON>
		<BAR>
			<BACK>
				<SIZE>54, 31</SIZE>
			</BACK>
		</BAR>
	</OUTLOOK>
	<POPUP>
		<GradientFillDark>200, 203, 213</GradientFillDark>
		<GradientFillLight>229, 232, 244</GradientFillLight>
	</POPUP>
</STYLE>
=== C:/Users/treeman/Desktop/windows nt source code\xbox\Xbox Live Source\XONLINE_MAIN\public\ext\sdk\wm7\atl8\Include\license.txt ===
END-USER LICENSE AGREEMENT FOR MICROSOFT SOFTWARE

ACTIVEX(tm) TEMPLATE LIBRARY

IMPORTANT-READ CAREFULLY: This Microsoft End-User License Agreement ("EULA")
is a legal agreement between you (either an individual or a single entity) and
Microsoft Corporation for the Microsoft software product identified above,
which includes computer software and associated media and printed materials,
and may include "online" or electronic documentation ("SOFTWARE PRODUCT" or
"SOFTWARE"). By installing, copying, or otherwise using the SOFTWARE PRODUCT,
you agree to be bound by the terms of this EULA.
 
SOFTWARE PRODUCT LICENSE

The SOFTWARE PRODUCT is protected by copyright laws and international
copyright treaties, as well as other intellectual property laws and treaties.
The SOFTWARE PRODUCT is licensed, not sold.

1.  GRANT OF LICENSE. This EULA grants you the following rights:

a. You may use an unlimited number of copies of the Microsoft Software
 Product identified above on an unlimited number of  computers for your
 personal use.	The SOFTWARE is in "use" on a computer when it is loaded into
 temporary memory (i.e., RAM) or installed into permanent memory (e.g., hard
 disk, CD-ROM, or other storage device) of that computer. However,
 installation on a network server for the sole purpose of internal
 distribution to one or more other computer(s) shall not constitute "use" for
 which a separate license is required, provided you have a separate license
 for each computer to which the SOFTWARE is distributed.

b. Solely with respect to electronic documents included with the SOFTWARE,
you may make an unlimited number of copies (either in hardcopy or electronic
form), provided that such copies shall be used only for internal purposes and
are not republished or distributed to any third party.

2. OWNERSHIP.	Except as expressly licensed to you in this Agreement,
Microsoft retains all right, title and interest in and to the SOFTWARE
PRODUCT; provided, however, that, subject to the license grant in Section 1.a
and Microsoft's ownership of the underlying SOFTWARE PRODUCT, you shall own
all right, title and interest in and to any Derivative Technology of the
Product created by or for you.

3. COPYRIGHT. All title and copyrights in and to the SOFTWARE PRODUCT
(including but not limited to any images, photographs, animations, video,
audio, music, text, and "applets" incorporated into the SOFTWARE PRODUCT), the
accompanying printed materials, and any copies of the SOFTWARE PRODUCT are
owned by Microsoft or its suppliers. The SOFTWARE PRODUCT is protected by
copyright laws and international treaty provisions. Therefore, you must treat
the SOFTWARE PRODUCT like any other copyrighted material exce t that you may
either (a) make one copy of the SOFTWARE PRODUCT solely for backup or archival
purposes or (b) install the SOFTWARE PRODUCT on a single computer provided you
keep the original solely for backup or archival purposes. You may not copy the
printed materials accompanying the SOFTWARE PRODUCT.

4.  DESCRIPTION OF OTHER RIGHTS AND LIMITATIONS. 

a. Limitations on Reverse Engineering, Decompilation, and Disassembly.	You
may not reverse engineer, decompile, or disassemble the SOFTWARE, except and
only to the extent that such activity is expressly permitted by applicable law
notwithstanding this limitation.

b.  Rental. You may not rent or lease the SOFTWARE PRODUCT. 

c. Software Transfer. You may permanently transfer all of your rights under
this EULA, provided that you retain no copies, you transfer all of the
SOFTWARE PRODUCT (including all component parts, the media and printed
materials, any upgrades, this EULA, and, if applicable, the Certificate of
Authenticity), and the recipient agrees to the terms of this EULA.

d. Termination. Without prejudice to any other rights, Microsoft may
terminate this EULA if you fail to comply with the terms and conditions of
this EULA. In such event, you must destroy all copies of the SOFTWARE PRODUCT.

5.  REDISTRIBUTABLE COMPONENTS. 

a. Sample Code.  In addition to the rights granted in Section 1, Microsoft
grants you the right to use and modify the source code version of those
portions of the SOFTWARE designated as "Sample Code" ("SAMPLE CODE") for the
sole purposes of designing, developing, and testing your software product(s),
and to reproduce and distribute the SAMPLE CODE, along with any modifications
thereof, only in object code form , provided that you comply with Section 5.c.

b. Redistributable Code. In addition to the rights granted in Section 1,
Microsoft grants you a nonexclusive royalty-free right to reproduce and
distribute the object code version of any portion  of the SOFTWARE, along with
any modifications thereof, EXCEPT those files listed in the SOFTWARE file
NOREDIST.TXT ("REDISTRIBUTABLE SOFTWARE"), provided you comply with Section
5.c.

c. Redistribution Requirements. If you redistribute the SAMPLE CODE or
REDISTRIBUTABLE SOFTWARE (collectively, "REDISTRIBUTABLES") you agree to: (i)
distribute the REDISTRIBUTABLES in object code only in conjunction with and as
a part of a software application product developed by you which adds
significant and primary functionality to the SOFTWARE; (ii) not use
Microsoft's name, logo, or trademarks to market your software application
product; (iii) include a valid copyright notice on your software product ;
(iv) indemnify, hold harmless, and defend Microsoft from and against any
claims or lawsuits, including attorney's fees, that arise or result from the
use or distribution of your software application product; (v) not permit
further distribution of the REDISTRIBUTABLES by your end user. Contact
Microsoft for the applicable royalties due and other licensing terms for all
other uses and/or distribution of the REDISTRIBUTABLES.

6. U.S. GOVERNMENT RESTRICTED RIGHTS. THE SOFTWARE PRODUCT AND DOCUMENTATION
ARE PROVIDED WITH RESTRICTED RIGHTS. USE, DUPLICATION, OR DISCLOSURE BY THE
GOVERNMENT IS SUBJECT TO RESTRICTIONS AS SET FORTH IN SUBPARAGRAPH (C)(1)(II)
OF THE RIGHTS IN TECHNICAL DATA AND COMPUTER SOFTWARE CLAUSE AT DFARS
252.227-7013 OR SUBPARAGRAPHS (C)(1) AND (2) OF THE COMMERCIAL COMPUTER
SOFTWARE-RESTRICTED RIGHTS AT 48 CFR 52.227-19, AS APPLICABLE. MANUFACTURER IS
MICROSOFT CORPORATION/ONE MICROSOFT WAY/REDMOND, WA 98052-6 99.

MISCELLANEOUS

If you acquired this product in the United States, this EULA is governed by
the laws of the State of Washington. 

If you acquired this product in Canada, this EULA is governed by the laws of
the Province of Ontario, Canada. Each of the parties hereto irrevocably
attorns to the jurisdiction of the courts of the Province of Ontario and
further agrees to commence any litigation which may arise hereunder in the
courts located in the Judicial District of York, Province of Ontario. 

If this product was acquired outside the United States, then local law may
apply.

Should you have any questions concerning this EULA, or if you desire to
contact Microsoft for any reason, please contact the Microsoft subsidiary
serving your country, or write: Microsoft Sales Information Center/One
Microsoft Way/Redmond, WA 98052-6399.

If you have a specific question regarding the licensing of redistributables,
you may call the Microsoft Technical Sales Information Team at (800) 426-9400
(United States only) or send inquiries via fax to:	Microsoft Visual C++
Licensing Administrator, (206) 936-7329 (United States).[MAS1]

LIMITED WARRANTY

LIMITED WARRANTY. Except with respect to the REDISTRIBUTABLES, which are
provided "as is," without warranty of any kind, Microsoft warrants that (a)
the SOFTWARE PRODUCT will perform substantially in accordance with the
accompanying written materials for a period of ninety (90) days from the date
of receipt, and (b) any hardware accompanying the SOFTWARE PRODUCT will be
free from defects in materials and workmanship under normal use and service
for a period of one (1) year from the date of receipt. Some sta tes and
jurisdictions do not allow limitations on duration of an implied warranty, so
the above limitation may not apply to you. To the extent allowed by applicable
law, implied warranties on the SOFTWARE PRODUCT and hardware, if any, are
limited to ninety (90) days and one year, respectively.

CUSTOMER REMEDIES. Microsoft's and its suppliers' entire liability and your
exclusive remedy shall be, at Microsoft's option, either (a) return of the
price paid, or (b) repair or replacement of the SOFTWARE PRODUCT or hardware
that does not meet Microsoft's Limited Warranty and which is returned to
Microsoft with a copy of your receipt. This Limited Warranty is void if
failure of the SOFTWARE PRODUCT or hardware has resulted from accident, abuse,
or misapplication. Any replacement SOFTWARE PRODUCT or hardw are will be
warranted for the remainder of the original warranty period or thirty (30)
days, whichever is longer. Outside the United States, neither these remedies
nor any product support services offered by Microsoft are available without
proof of purchase from an authorized international source.

NO OTHER WARRANTIES. TO THE MAXIMUM EXTENT PERMITTED BY APPLICABLE LAW,
MICROSOFT AND ITS SUPPLIERS DISCLAIM ALL OTHER WARRANTIES, EITHER EXPRESS OR
IMPLIED, INCLUDING, BUT NOT LIMITED TO, IMPLIED WARRANTIES OF MERCHANTABILITY
AND FITNESS FOR A PARTICULAR PURPOSE, WITH REGARD TO THE SOFTWARE PRODUCT, AND
ANY ACCOMPANYING HARDWARE. THIS LIMITED WARRANTY GIVES YOU SPECIFIC LEGAL
RIGHTS. YOU MAY HAVE OTHERS, WHICH VARY FROM STATE/JURISDICTION TO
STATE/JURISDICTION.

NO LIABILITY FOR CONSEQUENTIAL DAMAGES. TO THE MAXIMUM EXTENT PERMITTED BY
APPLICABLE LAW, IN NO EVENT SHALL MICROSOFT OR ITS SUPPLIERS BE LIABLE FOR ANY
SPECIAL, INCIDENTAL, INDIRECT, OR CONSEQUENTIAL DAMAGES WHATSOEVER (INCLUDING,
WITHOUT LIMITATION, DAMAGES FOR LOSS OF BUSINESS PROFITS, BUSINESS
INTERRUPTION, LOSS OF BUSINESS INFORMATION, OR ANY OTHER PECUNIARY LOSS)
ARISING OUT OF THE USE OF OR INABILITY TO USE THE SOFTWARE PRODUCT, EVEN IF
MICROSOFT HAS BEEN ADVISED OF THE POSSIBILITY OF SUCH DAMAGES. BECAUSE SOME
STATES AND JURISDICTIONS DO NOT ALLOW THE EXCLUSION OR LIMITATION OF LIABILITY
FOR CONSEQUENTIAL OR INCIDENTAL DAMAGES, THE ABOVE LIMITATION MAY NOT APPLY TO
YOU.

Si vous avez acquis votre produit Microsoft au CANADA, la garantie limite
suivante vous concerne :

GARANTIE LIMITEE

GARANTIE LIMITEE - Sauf pour celles du REDISTRIBUTABLES, qui sont fournies
"comme telles", sans aucune garantie quelle qu'elle soit, Microsoft garantit
que (a) la performance du LOGICIEL sera substantiellement en conformit avec
le(s) manuel(s) de produits qui accompagne(nt) le LOGICIEL pour une priode de
quatre-vingt-dix (90) jours  compter de la date de rception ; et (b) tout
matriel fourni par Microsoft accompagnant le LOGICIEL sera exempt de dfaut
de matire premire ou de vice de fabrication dans des conditions normales
d'utilisation et d'entretien pour une priode d'un an  compter de la date de
rception. Toute garantie implicite concernant le LOGICIEL et le matriel est
limite  quatre-vingt-dix (90) jours et un (1) an, respectivement.

RECOURS DU CLIENT - La seule obligation de Microsoft et votre recours exclusif
seront, au choix de Microsoft, soit (a) le remboursement du prix pay ou (b)
la rparation ou le remplacement du LOGICIEL ou du matriel qui n'est pas
conforme  la Garantie Limite de Microsoft et qui est retourn  Microsoft
avec une copie de votre reu. Cette Garantie Limite est nulle si le dfaut du
LOGICIEL ou du matriel est caus par un accident, un traitement abusif ou une
mauvaise application. Tout LOGICIEL de remplacem ent sera garanti pour le
reste de la priode de garantie initiale ou pour trente (30) jours, selon
laquelle de ces deux priodes est la plus longue.

AUCUNE AUTRE GARANTIE - MICROSOFT DESAVOUE TOUTE AUTRE GARANTIE, EXPRESSE OU
IMPLICITE, Y COMPRIS MAIS NE SE LIMITANT PAS AUX GARANTIES IMPLICITES DU
CARACTERE ADEQUAT POUR LA COMMERCIALISATION OU UN USAGE PARTICULIER EN CE QUI
CONCERNE LE LOGICIEL, LE(S) MANUEL(S) DE PRODUITS, LA DOCUMENTATION ECRITE ET
TOUT MATERIEL QUI L'ACCOMPAGNENT. CETTE GARANTIE LIMITEE VOUS ACCORDE DES
DROITS JURIDIQUES SPECIFIQUES. PAS D'OBLIGATION POUR LES DOMMAGES INDIRECTS -
MICROSOFT OU SES FOURNISSEURS N'AURONT D'OBLIGATION EN AUCUNE CIRCONSTANCE
POUR TOUT AUTRE DOMMAGE QUEL QU'IL SOIT (Y COMPRIS, SANS LIMITATION, LES
DOMMAGES ENTRAINES PAR LA PERTE DE BENEFICES, L'INTERRUPTION DES AFFAIRES, LA
PERTE D'INFORMATION COMMERCIALE OU TOUTE AUTRE PERTE PECUNIAIRE) DECOULANT DE
L'UTILISATION OU DE L'IMPOSSIBILITE D'UTILISATION DE CE PRODUIT MICROSOFT, ET
CE, MEME SI MICROSOFT A ETE AVISE DE LA POSSIBILITE DE TELS DOMMAGES. EN TOUT
CAS, LA SEULE OBLIGATION DE MICROSOFT EN VERTU DE TOUTE DISPOSITION DE CETTE
CONVENTION SE LIMITERA AU MONTANT EN FAIT PAYE PAR VOUS POUR LE LOGICIEL.

La prsente Convention est rgie par les lois de la province d'Ontario,
Canada. Chacune des parties  la prsente reconnat irrvocablement la
comptence des tribunaux de la province d'Ontario et consent  instituer tout
litige qui pourrait dcouler de la prsente auprs des tribunaux situs dans
le district judiciaire de York, province d'Ontario.

Au cas o vous auriez des questions concernant cette licence ou que vous
dsiriez vous mettre en rapport avec Microsoft pour quelque raison que ce
soit, veuillez contacter la succursale Microsoft desservant votre pays, dont
l'adresse est fournie dans ce produit, ou crire  : Microsoft Sales
Information Center, One Microsoft Way, Redmond, Washington 98052-6399.
=== C:/Users/treeman/Desktop/windows nt source code\xbox\Xbox Live Source\XONLINE_MAIN\public\ext\sdk\wm7\SDK\Lib\coffbase.txt ===
;
; This file defines the base virtual address for Dynamic Link Libraries (DLL)
; that are part of the Windows NT System.  The first token on a line is the name
; of the DLL and the second token is the base virtual address, in hexidecimal.
; The third token is the maximum size of the DLL image file, including symbols.
;
;  NOTE:  Unused areas are marked as _FREE_.

usermode    0x00010000  0x02000000
=== C:/Users/treeman/Desktop/windows nt source code\xbox\Xbox Live Source\XONLINE_MAIN\public\ext\sdk\wm7\sfone7\Include\winmeta.xml ===
<instrumentationManifest
    xmlns="http://schemas.microsoft.com/win/2004/08/events" 
    xmlns:win="http://manifests.microsoft.com/win/2004/08/windows/events"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://schemas.microsoft.com/win/2004/08/events eventman.xsd"    
    >
    <metadata name="evt:meta/winTypes">
        <channels>
            <channel name="TraceClassic" type="Debug" symbol="WINEVENT_CHANNEL_CLASSIC_TRACE"
                value="0" message="$(string.channel.TraceClassic)">
              Events for Classic ETW tracing.
            </channel>
            <channel name="System" type="Admin" symbol="WINEVENT_CHANNEL_GLOBAL_SYSTEM"
                isolation="System" value="8" message="$(string.channel.System)">
              Events for all installed system services.  This channel is secured to applications running under
              system service accounts or user applications running under local adminstrator privileges.
            </channel>
            <channel name="Application" type="Admin" symbol="WINEVENT_CHANNEL_GLOBAL_APPLICATION"
                isolation="Application" value="9" message="$(string.channel.Application)">
              Events for all user-level applications.  This channel is not secured and open to any applications.
              Applications which log extensive information should define an application-specific channel.
            </channel>
            <channel name="Security" type="Admin" symbol="WINEVENT_CHANNEL_GLOBAL_SECURITY"
                isolation="System"  value="10" message="$(string.channel.Security)">
              The Windows Audit Log.  For exclusive use of the Windows Local Security Authority.  User events
              may appear as audits if supported by the underlying application.
            </channel>
        </channels>

        <!-- Standard Windows system reporting levels -->
        <levels>
            <level name="win:LogAlways" symbol="WINEVENT_LEVEL_LOG_ALWAYS" value="0" message="$(string.level.LogAlways)"> Log Always </level>
            <level name="win:Critical" symbol="WINEVENT_LEVEL_CRITICAL" value="1" message="$(string.level.Critical)"> Only critical errors </level>
            <level name="win:Error" symbol="WINEVENT_LEVEL_ERROR" value="2" message="$(string.level.Error)"> All errors, includes win:Critical </level>
            <level name="win:Warning" symbol="WINEVENT_LEVEL_WARNING" value="3" message="$(string.level.Warning)"> All warnings, includes win:Error </level>
            <level name="win:Informational" symbol="WINEVENT_LEVEL_INFO" value="4" message="$(string.level.Informational)"> All informational content, including win:Warning </level>
            <level name="win:Verbose" symbol="WINEVENT_LEVEL_VERBOSE" value="5" message="$(string.level.Verbose)"> All tracing, including previous levels </level>

            <!-- The following are unused.  They are place holders so that users dont accidentally use those values in their own definitions -->
            <level name="win:ReservedLevel6" symbol="WINEVENT_LEVEL_RESERVED_6" value="6"/>
            <level name="win:ReservedLevel7" symbol="WINEVENT_LEVEL_RESERVED_7" value="7"/>
            <level name="win:ReservedLevel8" symbol="WINEVENT_LEVEL_RESERVED_8" value="8"/>
            <level name="win:ReservedLevel9" symbol="WINEVENT_LEVEL_RESERVED_9" value="9"/>
            <level name="win:ReservedLevel10" symbol="WINEVENT_LEVEL_RESERVED_10" value="10"/>
            <level name="win:ReservedLevel11" symbol="WINEVENT_LEVEL_RESERVED_11" value="11"/>
            <level name="win:ReservedLevel12" symbol="WINEVENT_LEVEL_RESERVED_12" value="12"/>
            <level name="win:ReservedLevel13" symbol="WINEVENT_LEVEL_RESERVED_13" value="13"/>
            <level name="win:ReservedLevel14" symbol="WINEVENT_LEVEL_RESERVED_14" value="14"/>
            <level name="win:ReservedLevel15" symbol="WINEVENT_LEVEL_RESERVED_15" value="15"/>
            <!-- End of reserved values -->
        </levels>

        <!-- Standard Windows system tasks -->
        <tasks>
            <task name="win:None" value="0" symbol="WINEVENT_TASK_NONE" message="$(string.task.None)"> undefined task </task>
        </tasks>

        <!-- Standard Windows system opcodes -->
        <opcodes>    
            <opcode name="win:Info" value="0" symbol="WINEVENT_OPCODE_INFO" message="$(string.opcode.Info)"> An informational event </opcode>
            <opcode name="win:Start" value="1" symbol="WINEVENT_OPCODE_START" message="$(string.opcode.Start)"> An activity start event </opcode>
            <opcode name="win:Stop" value="2" symbol="WINEVENT_OPCODE_STOP" message="$(string.opcode.Stop)"> An activity end event </opcode>
            <opcode name="win:DC_Start" value="3" symbol="WINEVENT_OPCODE_DC_START" message="$(string.opcode.DCStart)"> A trace collection start event </opcode>
            <opcode name="win:DC_Stop" value="4" symbol="WINEVENT_OPCODE_DC_STOP" message="$(string.opcode.DCStop)"> A trace collection end event </opcode>
            <opcode name="win:Extension" value="5" symbol="WINEVENT_OPCODE_EXTENSION" message="$(string.opcode.Extension)"> An extensional event </opcode>
            <opcode name="win:Reply" value="6" symbol="WINEVENT_OPCODE_REPLY" message="$(string.opcode.Reply)"> A reply event </opcode>
            <opcode name="win:Resume" value="7" symbol="WINEVENT_OPCODE_RESUME" message="$(string.opcode.Resume)"> An event representing the activity resuming from the suspension </opcode>
            <opcode name="win:Suspend" value="8" symbol="WINEVENT_OPCODE_SUSPEND" message="$(string.opcode.Suspend)"> An event representing the activity is suspended, pending another activity's completion </opcode>
            <opcode name="win:Send" value="9" symbol="WINEVENT_OPCODE_SEND" message="$(string.opcode.Send)"> An event representing the activity is transferred to another component, and can continue to work </opcode>
            
            <!-- The following are unused.  They are place holders so that users dont accidentally use those values in their own definitions -->
            <opcode name="win:Receive" value="240" symbol="WINEVENT_OPCODE_RECEIVE" message="$(string.opcode.Receive)"> An event representing receiving an activity transfer from another component </opcode>
            <opcode name="win:ReservedOpcode241" symbol="WINEVENT_OPCODE_RESERVED_241" value="241"/>
            <opcode name="win:ReservedOpcode242" symbol="WINEVENT_OPCODE_RESERVED_242" value="242"/>
            <opcode name="win:ReservedOpcode243" symbol="WINEVENT_OPCODE_RESERVED_243" value="243"/>
            <opcode name="win:ReservedOpcode244" symbol="WINEVENT_OPCODE_RESERVED_244" value="244"/>
            <opcode name="win:ReservedOpcode245" symbol="WINEVENT_OPCODE_RESERVED_245" value="245"/>
            <opcode name="win:ReservedOpcode246" symbol="WINEVENT_OPCODE_RESERVED_246" value="246"/>
            <opcode name="win:ReservedOpcode247" symbol="WINEVENT_OPCODE_RESERVED_247" value="247"/>
            <opcode name="win:ReservedOpcode248" symbol="WINEVENT_OPCODE_RESERVED_248" value="248"/>
            <opcode name="win:ReservedOpcode249" symbol="WINEVENT_OPCODE_RESERVED_249" value="249"/>
            <opcode name="win:ReservedOpcode250" symbol="WINEVENT_OPCODE_RESERVED_250" value="250"/>
            <opcode name="win:ReservedOpcode251" symbol="WINEVENT_OPCODE_RESERVED_251" value="251"/>
            <opcode name="win:ReservedOpcode252" symbol="WINEVENT_OPCODE_RESERVED_252" value="252"/>
            <opcode name="win:ReservedOpcode253" symbol="WINEVENT_OPCODE_RESERVED_253" value="253"/>
            <opcode name="win:ReservedOpcode254" symbol="WINEVENT_OPCODE_RESERVED_254" value="254"/>
            <opcode name="win:ReservedOpcode255" symbol="WINEVENT_OPCODE_RESERVED_255" value="255"/> 
            <!-- End of reserved values -->
        </opcodes>

        <!-- Standard Windows system keywords -->
        <keywords>
            <keyword name="win:AnyKeyword" mask="0x0" symbol="WINEVT_KEYWORD_ANY" message="$(string.keyword.AnyKeyword)">
                 Wild card value
            </keyword>

            <!-- The following are unused.  They are place holders so that users dont accidentally use those values in their own definitions -->
            <keyword name="win:ReservedKeyword48" mask="0x1000000000000" symbol="WINEVENT_KEYWORD_RESERVED_48"/>
            <!-- End of reserved values -->

            <keyword name="win:WDIContext" mask="0x2000000000000" symbol="WINEVENT_KEYWORD_WDI_CONTEXT" message="$(string.keyword.WDIContext)">
                 Attached to all WDI context events
            </keyword>
            <keyword name="win:WDIDiag" mask="0x4000000000000" symbol="WINEVENT_KEYWORD_WDI_DIAG" message="$(string.keyword.WDIDiag)">
                 Attached to all WDI diag events
            </keyword>
            <keyword name="win:SQM" mask="0x8000000000000" symbol="WINEVENT_KEYWORD_SQM" message="$(string.keyword.SQM)">
                 Attached to all SQM events
            </keyword>
            <keyword name="win:AuditFailure" mask="0x10000000000000" symbol="WINEVENT_KEYWORD_AUDIT_FAILURE" message="$(string.keyword.AuditFailure)">
                 Attached to all failed security audits
            </keyword>
            <keyword name="win:AuditSuccess" mask="0x20000000000000" symbol="WINEVENT_KEYWORD_AUDIT_SUCCESS" message="$(string.keyword.AuditSuccess)">
                 Attached to all successful security audits
            </keyword>
            <keyword name="win:CorrelationHint" mask="0x40000000000000" symbol="WINEVENT_KEYWORD_CORRELATION_HINT" message="$(string.keyword.CorrelationHint)">
                 Attached to transfer events where the related Activity ID is a computed value and not a GUID
            </keyword>
            <keyword name="win:EventlogClassic" mask="0x80000000000000" symbol="WINEVENT_KEYWORD_EVENTLOG_CLASSIC" message="$(string.keyword.Classic)">
                 Attached to events raised using classic eventlog API
            </keyword>

            <!-- The following are used to pass channel information.  They are place holders so that users dont accidentally use those values in their own definitions -->
            <keyword name="win:ReservedKeyword56" mask="0x100000000000000" symbol="WINEVENT_KEYWORD_RESERVED_56"/>
            <keyword name="win:ReservedKeyword57" mask="0x200000000000000" symbol="WINEVENT_KEYWORD_RESERVED_57"/>
            <keyword name="win:ReservedKeyword58" mask="0x400000000000000" symbol="WINEVENT_KEYWORD_RESERVED_58"/>
            <keyword name="win:ReservedKeyword59" mask="0x800000000000000" symbol="WINEVENT_KEYWORD_RESERVED_59"/>
            <keyword name="win:ReservedKeyword60" mask="0x1000000000000000" symbol="WINEVENT_KEYWORDE_RESERVED_60"/>
            <keyword name="win:ReservedKeyword61" mask="0x2000000000000000" symbol="WINEVENT_KEYWORD_RESERVED_61"/>
            <keyword name="win:ReservedKeyword62" mask="0x4000000000000000" symbol="WINEVENT_KEYWORD_RESERVED_62"/>
            <keyword name="win:ReservedKeyword63" mask="0x8000000000000000" symbol="WINEVENT_KEYWORD_RESERVED_63"/>
            <!-- End of reserved values -->
        </keywords>
        
        <!-- Standard Windows & CLR system types -->
        <types xmlns:xs="http://www.w3.org/2001/XMLSchema">
            <xmlTypes>
                 <xmlType name="xs:string" value="1" symbol="WINEVENT_OUT_TYPE_STRING"/>
                 <xmlType name="xs:dateTime" value="2" symbol="WINEVENT_OUT_TYPE_DATE_TIME"/>
                 <xmlType name="xs:byte" value="3" symbol="WINEVENT_OUT_TYPE_BYTE"/>
                 <xmlType name="xs:unsignedByte" value="4" symbol="WINEVENT_OUT_TYPE_UNSIGNED_BYTE"/>
                 <xmlType name="xs:short" value="5" symbol="WINEVENT_OUT_TYPE_SHORT"/>
                 <xmlType name="xs:unsignedShort" value="6" symbol="WINEVENT_OUT_TYPE_UNSIGNED_SHORT"/>
                 <xmlType name="xs:int" value="7" symbol="WINEVENT_OUT_TYPE_INT"/>
                 <xmlType name="xs:unsignedInt" value="8" symbol="WINEVENT_OUT_TYPE_UNSIGNED_INT"/>
                 <xmlType name="xs:long" value="9" symbol="WINEVENT_OUT_TYPE_LONG"/>
                 <xmlType name="xs:unsignedLong" value="10" symbol="WINEVENT_OUT_TYPE_UNSIGNED_LONG"/>
                 <xmlType name="xs:float" value="11" symbol="WINEVENT_OUT_TYPE_FLOAT"/>
                 <xmlType name="xs:double" value="12" symbol="WINEVENT_OUT_TYPE_DOUBLE"/>
                 <xmlType name="xs:boolean" value="13" symbol="WINEVENT_OUT_TYPE_BOOLEAN"/>
                 <xmlType name="xs:GUID" value="14" symbol="WINEVENT_OUT_TYPE_GUID"/>
                 <xmlType name="xs:hexBinary" value="15" symbol="WINEVENT_OUT_TYPE_HEXBINARY"/>
                 <xmlType name="win:HexInt8" value="16" symbol="WINEVENT_OUT_TYPE_HEX_INT8"/>
                 <xmlType name="win:HexInt16" value="17" symbol="WINEVENT_OUT_TYPE_HEX_INT16"/>
                 <xmlType name="win:HexInt32" value="18" symbol="WINEVENT_OUT_TYPE_HEX_INT32"/>
                 <xmlType name="win:HexInt64" value="19" symbol="WINEVENT_OUT_TYPE_HEX_INT64"/>
                 <xmlType name="win:PID" value="20" symbol="WINEVENT_OUT_TYPE_PID"/>
                 <xmlType name="win:TID" value="21" symbol="WINEVENT_OUT_TYPE_TID"/>
                 <xmlType name="win:Port" value="22" symbol="WINEVENT_OUT_TYPE_PORT"/>            
                 <xmlType name="win:IPv4" value="23" symbol="WINEVENT_OUT_TYPE_IPV4"/>
                 <xmlType name="win:IPv6" value="24" symbol="WINEVENT_OUT_TYPE_IPV6"/>             
                 <xmlType name="win:SocketAddress" value="25" symbol="WINEVENT_OUT_TYPE_SOCKET_ADDRESS"/>    
                 <xmlType name="win:CIMDateTime" value="26" symbol="WINEVENT_OUT_TYPE_CIMDATETIME"/>    
                 <xmlType name="win:ETWTIME" value="27" symbol="WINEVENT_OUT_TYPE_ETWTIME"/>
                 <xmlType name="win:Xml" value="28" symbol="WINEVENT_OUT_TYPE_XML"/>
                 <xmlType name="win:ErrorCode" value="29" symbol="WINEVENT_OUT_TYPE_ERROR_CODE"/>
            </xmlTypes>
            <inTypes>
                <inType name="win:UnicodeString" value="1" symbol="WINEVENT_TYPE_NULL_TERMINATED_STRING">
                    <description> A NULL-terminated UNICODE string. </description>
                    <outType default="true" xmlType="xs:string" />
                    <outType xmlType="win:Xml" />
                </inType>
                <inType name="win:AnsiString" value="2" symbol="WINEVENT_TYPE_NULL_TERMINATED_ANSI_STRING">
                    <description> A NULL-terminated ANSI string. </description>
                    <outType default="true" xmlType="xs:string" />
                    <outType xmlType="win:Xml" />                
                </inType>
                <inType name="win:Int8" value="3" symbol="WINEVENT_TYPE_INT8">
                    <description> A signed 8-bit integer. </description>
                    <outType default="true" xmlType="xs:byte" />
                </inType>
                <inType name="win:UInt8" value="4" symbol="WINEVENT_TYPE_UINT8">
                    <description> An unsigned 8-bit integer. </description>
                    <outType default="true" xmlType="xs:unsignedByte" />
                    <outType xmlType="win:HexInt8">An integer in hex format</outType>
                </inType>
                <inType name="win:Int16" value="5" symbol="WINEVENT_TYPE_INT16">
                    <description> A signed 16-bit integer.</description>
                    <outType default="true" xmlType="xs:short" />
                </inType>
                <inType name="win:UInt16" value="6" symbol="WINEVENT_TYPE_UINT16">
                    <description> An unsigned 16-bit integer </description>
                    <outType default="true" xmlType="xs:unsignedShort" />
                    <outType xmlType="win:Port" />
                    <outType xmlType="win:HexInt16">An integer in hex format</outType>
                </inType>
                <inType name="win:Int32" value="7" symbol="WINEVENT_TYPE_INT32">
                    <description> A signed 32-bit integer. </description>
                    <outType default="true" xmlType="xs:int" />
                </inType>
                <inType name="win:UInt32" value="8" symbol="WINEVENT_TYPE_UINT32">
                    <description> An unsigned 32-bit integer. </description>
                    <outType default="true" xmlType="xs:unsignedInt" />
                    <outType xmlType="win:PID" />
                    <outType xmlType="win:TID" />
                    <outType xmlType="win:IPv4" />
                    <outType xmlType="win:ETWTIME" />
                    <outType xmlType="win:ErrorCode"/>
                    <outType xmlType="win:HexInt32">An integer in hex format</outType>
                </inType>
                <inType name="win:Int64" value="9" symbol="WINEVENT_TYPE_INT64">
                    <description> A signed 64-bit integer. </description>
                    <outType default="true" xmlType="xs:long" />
                </inType>
                <inType name="win:UInt64" value="10" symbol="WINEVENT_TYPE_UINT64">
                    <description> An unsigned 64-bit integer. </description>
                    <outType default="true" xmlType="xs:unsignedLong" />
                    <outType xmlType="win:HexInt64">An integer in hex format</outType>
                </inType>
                <inType name="win:Float" value="11" symbol="WINEVENT_TYPE_FLOAT">
                    <description> An IEEE 4-byte floating-point value </description>
                    <outType default="true" xmlType="xs:float" />
                </inType>
                <inType name="win:Double" value="12" symbol="WINEVENT_TYPE_DOUBLE">
                    <description> An IEEE 8-byte floating-point value </description>
                    <outType default="true" xmlType="xs:double" />
                </inType>
                <inType name="win:Boolean" value="13" symbol="WINEVENT_TYPE_BOOL">
                    <description> A 32-bit value where 0 is false, 1 is true. </description>
                    <outType default="true" xmlType="xs:boolean"/>
                </inType>            
                <inType name="win:Binary" value="14" symbol="WINEVENT_TYPE_BINARY">
                    <description>Variable size binary data.</description>
                    <outType default="true" xmlType="xs:hexBinary"/>
                    <outType xmlType="win:IPv6"/>
                    <outType xmlType="win:SocketAddress"/>
                </inType>            
                <inType name="win:GUID" value="15" symbol="WINEVENT_TYPE_GUID">
                    <description> A DCE-compliant 128-bit UUID. XML spec: {12345678-1234-4667-1234-123456789abc}</description>
                    <outType default="true" xmlType="xs:GUID"/>
                </inType>
                <inType name="win:Pointer" value="16" symbol="WINEVENT_TYPE_POINTER">
                    <description> A pointer; sized to the current platform (32-bit or 64-bit). XML spec: hex representation of a pointer</description>
                    <outType default="true" xmlType="win:HexInt64"/>
                </inType>
                <inType name="win:FILETIME" value="17" symbol="WINEVENT_TYPE_FILETIME">
                    <description> A Windows FILETIME struct. </description>
                    <outType default="true" xmlType="xs:dateTime" />
                </inType>
                <inType name="win:SYSTEMTIME" value="18" symbol="WINEVENT_TYPE_SYSTEMTIME">
                    <description> A Windows SYSTEMTIME struct.</description>
                    <outType default="true" xmlType="xs:dateTime" />
                </inType>
                <inType name="win:SID" value="19" symbol="WINEVENT_TYPE_SID">
                    <description> A self-relative Windows SID structure. XML spec: S-1-0-0.</description>
                    <outType default="true" xmlType="xs:string"/>
                </inType>            
                <inType name="win:HexInt32" value="20" symbol="WINEVENT_TYPE_HEXINT32">
                    <description> A hexidecimal representation of an unsigned 32-bit integer. </description>
                    <outType default="true" xmlType="win:HexInt32"/>
                    <outType xmlType="win:ErrorCode"/>
                </inType>
                <inType name="win:HexInt64" value="21" symbol="WINEVENT_TYPE_HEXINT64">
                    <description> A hexidecimal representation of an unsigned 64-bit integer. </description>
                    <outType default="true" xmlType="win:HexInt64"/>
                </inType>
            </inTypes>
        </types>

        <messageTable>
            <!-- Categories for classic publishers -->
            <message value="1" message="$(string.category.Devices)"/>
            <message value="2" message="$(string.category.Disk)"/>
            <message value="3" message="$(string.category.Printers)"/>
            <message value="4" message="$(string.category.Services)"/>
            <message value="5" message="$(string.category.Shell)"/>
            <message value="6" message="$(string.category.SystemEvent)"/>
            <message value="7" message="$(string.category.Network)"/>

            <!-- Channel names for classic global logs -->
            <message value="256" message="$(string.channel.Application)"/>
            <message value="257" message="$(string.channel.Security)"/>
            <message value="258" message="$(string.channel.System)"/>
        </messageTable>

    </metadata>
    
    <localization>
        <resources culture="en-US">
            <stringTable>
                <!-- Categories for classic publishers.  THESE MUST START AT ENTRY 0! -->
                <string id="category.Reserved" value="Reserved"/>
                <string id="category.Devices" value="Devices"/>
                <string id="category.Disk" value="Disk"/>
                <string id="category.Printers" value="Printers"/>
                <string id="category.Services" value="Services"/>
                <string id="category.Shell" value="Shell"/>
                <string id="category.SystemEvent" value="System Event"/>
                <string id="category.Network" value="Network"/>

                <string id="level.LogAlways" value="Log Always"/>
                <string id="level.Critical" value="Critical"/>
                <string id="level.Error" value="Error"/>
                <string id="level.Warning" value="Warning"/>
                <string id="level.Informational" value="Information"/>
                <string id="level.Verbose" value="Verbose"/>

                <string id="opcode.Info" value="Info"/>
                <string id="opcode.Start" value="Start"/>
                <string id="opcode.Stop" value="Stop"/>
                <string id="opcode.DCStart" value="DCStart"/>
                <string id="opcode.DCStop" value="DCStop"/>
                <string id="opcode.Extension" value="Extension"/>
                <string id="opcode.Reply" value="Reply"/>
                <string id="opcode.Resume" value="Resume"/>
                <string id="opcode.Suspend" value="Suspend"/>
                <string id="opcode.Send" value="Send"/>
                <string id="opcode.Receive" value="Receive"/>
 
                <string id="task.None" value="None"/>

                <string id="keyword.AnyKeyword" value="AnyKeyword"/>
                <string id="keyword.WDIContext" value="WDI Context"/>
                <string id="keyword.WDIDiag" value="WDI Diag"/>
                <string id="keyword.SQM" value="SQM"/>
                <string id="keyword.AuditFailure" value="Audit Failure"/>
                <string id="keyword.AuditSuccess" value="Audit Success"/>
                <string id="keyword.CorrelationHint" value="Correlation Hint"/>
                <string id="keyword.Classic" value="Classic"/>

                <string id="channel.TraceClassic" value="TraceClassic"/>
                <string id="channel.System" value="System"/>
                <string id="channel.Application" value="Application"/>
                <string id="channel.Security" value="Security"/>
            </stringTable>
        </resources>
    </localization>

</instrumentationManifest>
=== C:/Users/treeman/Desktop/windows nt source code\xbox\Xbox Live Source\XONLINE_MAIN\public\ext\sdk\wm7\sfone7\Managed Libraries\microsoft.windowsmobile.configuration.xml ===
<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Microsoft.WindowsMobile.Configuration</name>
    </assembly>
    <members>
        <member name="T:Microsoft.WindowsMobile.Configuration.ConfigurationManager">
            <summary>
            Provides methods for sending device configuration files to Configuration Manager for either complete processing, or just for testing.
            </summary>
        </member>
        <member name="M:Microsoft.WindowsMobile.Configuration.ConfigurationManager.#ctor">
            <summary>
            The private constructor for the <b>ConfigurationManager</b> class. This ensure that new <b>ConfigurationManager</b> objects are not instantiated from the public default constructor.
            </summary>
        </member>
        <member name="M:Microsoft.WindowsMobile.Configuration.ConfigurationManager.ProcessConfiguration(System.Xml.XmlDocument,System.Boolean)">
            <summary>
            Sends a device configuration file to Configuration Manager for processing.
            </summary>
            <param name="configDoc">The configuration document used to provision the device.</param>
            <param name="metadata">true to return metadata associated with the XML parm elements 
            in the new configuration; otherwise, false.</param>
            <returns>metadata associated with the XML parm elements in this configuration.</returns>
        </member>
        <member name="M:Microsoft.WindowsMobile.Configuration.ConfigurationManager.TestConfiguration(System.Xml.XmlDocument,System.Boolean)">
            <summary>
            Sends a device configuration file to Configuration Manager for testing.
            </summary>
            <remarks>
            Configuration Manager will not process the configuration file, but it can still return useful metadata associated with the XML parm elements.
            </remarks>
            <param name="configDoc">The configuration document used to provision the device.</param>
            <param name="metadata">true to return metadata associated with the XML parm elements 
            in the new configuration; otherwise, false.</param>
            <returns>metadata associated with the XML parm elements in this configuration.</returns>
        </member>
        <member name="M:Microsoft.WindowsMobile.Configuration.ConfigurationManager.MainConfigurator(System.Xml.XmlDocument,System.UInt32)">
            <summary>
            <b>MainConfigurator</b> calls <b>DMProcessConfigXML</b> directly, and manages the memory allocation of the result.
            </summary>
            <param name="configDoc">XMLDocument that will be used.</param>
            <param name="flags">Uses same flags as DMProcessConfigXML</param>
            <returns></returns>
        </member>
    </members>
</doc>
=== C:/Users/treeman/Desktop/windows nt source code\xbox\Xbox Live Source\XONLINE_MAIN\public\ext\sdk\wm7\sfone7\Managed Libraries\microsoft.windowsmobile.forms.xml ===
<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Microsoft.WindowsMobile.Forms</name>
    </assembly>
    <members>
        <member name="T:Microsoft.WindowsMobile.Forms.SortOrder">
            <summary>
            Specifies the sort order for files appearing in the form.
            </summary>
        </member>
        <member name="F:Microsoft.WindowsMobile.Forms.SortOrder.DateAscending">
            <summary>
            Picture files are sorted by date, in ascending order.
            </summary>
        </member>
        <member name="F:Microsoft.WindowsMobile.Forms.SortOrder.DateDescending">
            <summary>
            Picture files are sorted by date, in decending order.
            </summary>
        </member>
        <member name="F:Microsoft.WindowsMobile.Forms.SortOrder.NameAscending">
            <summary>
            Picture files are sorted by name, in ascending order.
            </summary>
        </member>
        <member name="F:Microsoft.WindowsMobile.Forms.SortOrder.NameDescending">
            <summary>
            Picture files are sorted by name, in decending order.
            </summary>
        </member>
        <member name="F:Microsoft.WindowsMobile.Forms.SortOrder.SizeAscending">
            <summary>
            Picture files are sorted by size, in ascending order.
            </summary>
        </member>
        <member name="F:Microsoft.WindowsMobile.Forms.SortOrder.SizeDescending">
            <summary>
            Picture files are sorted by size, in decending order.
            </summary>
        </member>
        <member name="T:Microsoft.WindowsMobile.Forms.SelectPictureDialog">
            <summary>
            Defines attributes and behaviors of a custom dialog box for selecting pictures.
            </summary>
        </member>
        <member name="M:Microsoft.WindowsMobile.Forms.SelectPictureDialog.ShowDialog">
            <summary>
            Displays the "Select Picture" dialog box.
            </summary>
            <remarks>
            This is a modal dialog box.
            </remarks>
            <returns>A <b>DialogResult</b> value.</returns>
            <example> 
            <para>
            This sample shows how to call and display the custom dialog box for selecting pictures. 
            The resulting dialog will:
            </para>
            <list type="bullet">
            <item>
            <description>Filter out image files by displaying only .JPG and .BMP files.</description>
            </item>
            <item>
            <description>
            Launch the dialog in the '\My Device\My Images' directory.
            </description>
            </item>
            <item>
            <description>
            Display a custom title.
            </description>
            </item>
            </list>
            <code>
            SelectPictureDialog pickerDialog = new SelectPictureDialog();
            
            pickerDialog.Filter = "Image Files(*.BMP;*.JPG)|*.BMP;*.JPG";
            pickerDialog.InitialDirectory = @"\My Device\My Images";
            pickerDialog.Title ="Select an image file";
            
            pickerDialog.ShowDialog();
            </code>
            </example>
        </member>
        <member name="M:Microsoft.WindowsMobile.Forms.SelectPictureDialog.#ctor">
            <summary>
            Initializes a new instance of the <b>SelectPictureDialog</b> class.
            </summary>
        </member>
        <member name="P:Microsoft.WindowsMobile.Forms.SelectPictureDialog.FileName">
            <summary>
            Gets the name of the selected picture file.
            </summary>
            <value></value>
        </member>
        <member name="P:Microsoft.WindowsMobile.Forms.SelectPictureDialog.Filter">
            <summary>
            Gets or sets the file types displayed in the Select Picture dialog box.  
            </summary>
            <value>A description of each
            filtering option, followed by the vertical Bar (|), followed by the filter pattern.
            Multiple filtering options are also separated by the vertical bar.  For example, "Bitmap Files|*.BMP|JPG Files|*.JPG"</value>
            <exception cref="T:System.ArgumentException">Thrown when attempting to set an invalid filter.</exception>
        </member>
        <member name="P:Microsoft.WindowsMobile.Forms.SelectPictureDialog.FilterIndex">
            <summary>
            Gets or sets the index of the currently selected filtering option.
            <seealso cref="P:Microsoft.WindowsMobile.Forms.SelectPictureDialog.Filter"/>
            </summary>
        </member>
        <member name="P:Microsoft.WindowsMobile.Forms.SelectPictureDialog.InitialDirectory">
            <summary>
            Gets or sets the directory displayed in the Select Picture dialog box.
            </summary>
            <remarks>
            If <b>null</b>, a default directory is used.
            </remarks>
        </member>
        <member name="P:Microsoft.WindowsMobile.Forms.SelectPictureDialog.LockDirectory">
            <summary>
            Not supported. Gets or sets a value indicating whether the user can browse to directories other than the <b>InitialDirectory</b>.
            </summary>
        </member>
        <member name="P:Microsoft.WindowsMobile.Forms.SelectPictureDialog.ShowDrmContent">
            <summary>
            Gets or sets a value indicating whether Digital Rights Management (DRM) protected files are displayed.
            </summary>
        </member>
        <member name="P:Microsoft.WindowsMobile.Forms.SelectPictureDialog.ShowForwardLockedContent">
            <summary>
            Gets or sets a value indicating whether Digital Rights Management (DRM) protected files that are protected such that they cannot be forwarded, are displayed.
            </summary>
        </member>
        <member name="P:Microsoft.WindowsMobile.Forms.SelectPictureDialog.MessagingFileCreate">
            <summary>
            Gets or sets a value indicating whether the user want captured picture or video is fitted into a Multimedia short message.
            </summary>
        </member>
        <member name="P:Microsoft.WindowsMobile.Forms.SelectPictureDialog.CameraCaptureVideoOnly">
            <summary>
            Gets or sets a value indicating whether the user want to capture video without audio.
            </summary>
        </member>
        <member name="P:Microsoft.WindowsMobile.Forms.SelectPictureDialog.CameraCaptureVideoWithAudio">
            <summary>
            Gets or sets a value indicating whether the user want to capture video with audio.
            </summary>
        </member>
        <member name="P:Microsoft.WindowsMobile.Forms.SelectPictureDialog.CameraCaptureVideoDefault">
            <summary>
            Gets or sets a value indicating the user wants to use the default audio setting when capture video.
            </summary>
        </member>
        <member name="P:Microsoft.WindowsMobile.Forms.SelectPictureDialog.Title">
            <summary>
            Gets or sets the title of the Select Picture dialog box.
            </summary>
            <value></value>
        </member>
        <member name="P:Microsoft.WindowsMobile.Forms.SelectPictureDialog.SortOrder">
            <summary>
            Gets or sets the order in which files are sorted in the Select Picture dialog box.
            </summary>
            For information on the SortOrder enumeration, <see cref="P:Microsoft.WindowsMobile.Forms.SelectPictureDialog.SortOrder"/>
            <value></value>
            <exception cref="T:System.ArgumentOutOfRangeException">Thrown when attempting to set a value that is out of range.</exception>
        </member>
        <member name="P:Microsoft.WindowsMobile.Forms.SelectPictureDialog.CameraAccess">
            <summary>
            Not supported. Gets or sets a value indicating whether the user is given access to the camera, from the Select Picture dialog box.
            </summary>
        </member>
        <member name="P:Microsoft.WindowsMobile.Forms.SelectPictureDialog.Owner">
            <summary>
            Gets or sets this control’s owner control.
            </summary>
            <value></value>
        </member>
        <member name="T:Microsoft.WindowsMobile.Forms.ChooseContactDialog">
            <summary>
            Defines the attributes and behaviors of a custom dialog box for choosing Contacts.
            </summary>
        </member>
        <member name="M:Microsoft.WindowsMobile.Forms.ChooseContactDialog.ShowDialog">
            <summary>
            Displays the Contact Chooser dialog box.
            </summary>
            <exception cref="T:System.ArgumentException">Thrown when <b>RequiredProperties</b> is not set, and <b>ChoosePropertyOnly</b> is true.</exception>
            <exception cref="T:System.ArgumentException">Thrown when <b>SelectedContact</b> is not a valid Contact object and <b>ChoosePropertyOnly</b> is true.</exception>
            <exception cref="T:System.ArgumentException">Thrown when there are any other argument errors.</exception>
            <returns>The dialog result for the form.
            For more information, see 
            <A HREF="http://msdn.microsoft.com/library/en-us/cpref/html/frlrfSystemWindowsFormsControlClassTopic.asp">Form.DialogResult Property</A> 
            in the .NET Framework Class Library on MSDN.
            </returns>
            <example>
            This example shows how to call and display a custom dialog box for choosing Contacts.
            The resulting dialog will also display a custom title.
            <code>
            ChooseContactDialog contactPicker = new ChooseContactDialog();
            
            contactPicker.Title = "Choose a Contact below:";
            contactPicker.ChooseContactOnly = true;
            contactPicker.ShowDialog();
            
            Console.WriteLine("The contact selected was {0}.", contactPicker.SelectedContactName);
            </code>
            </example>
        </member>
        <member name="M:Microsoft.WindowsMobile.Forms.ChooseContactDialog.#ctor">
            <summary>
            Initializes a new instance of the <b>ChooseContactDialog</b> class.
            </summary>    
        </member>
        <member name="P:Microsoft.WindowsMobile.Forms.ChooseContactDialog.Title">
            <summary>
            Gets or sets the title of the Contact Chooser dialog box.
            </summary>
        </member>
        <member name="P:Microsoft.WindowsMobile.Forms.ChooseContactDialog.ChoosePropertyText">
            <summary>
            Gets or sets the text label of the Property Chooser control.
            </summary>
        </member>
        <member name="P:Microsoft.WindowsMobile.Forms.ChooseContactDialog.RestrictContacts">
            <summary>
            Gets or sets the restriction string used to generate a filtered Contact list.
            </summary>
            <seealso cref="M:Microsoft.WindowsMobile.PocketOutlook.ContactCollection.Restrict(System.String)"/>
        </member>
        <member name="P:Microsoft.WindowsMobile.Forms.ChooseContactDialog.IncrementalFilter">
            <summary>
            Gets or sets the text of the incremental filter box.
            </summary>
            <remarks>
            The Incremental Filter box appears at the top of the Contact Chooser dialog box. The list of contacts in the dialog will be restricted to those matching this text.
            </remarks>
        </member>
        <member name="P:Microsoft.WindowsMobile.Forms.ChooseContactDialog.HideNew">
            <summary>
            Gets or sets a value indicating whether the user can create a new Contact.
            </summary>
        </member>
        <member name="P:Microsoft.WindowsMobile.Forms.ChooseContactDialog.ChooseContactOnly">
            <summary>
            Gets or sets a value indicating whether the user is limited to choosing just a Contact, or choosing a property of a specified Contact.
            </summary>
            <remarks>
            If <b>true</b>, the returned property is the first non-blank property in <b>RequiredProperties</b>.
            ChoosePropertyOnly and ChooseContactOnly cannot both be set to <b>true</b>.  In the event that both are
            set to <b>true</b>, setting ChooseContactOnly to <b>true</b> will automatically set 
            ChoosePropertyOnly to <b>false</b>
            </remarks>
        </member>
        <member name="P:Microsoft.WindowsMobile.Forms.ChooseContactDialog.ChoosePropertyOnly">
            <summary>
            Gets or sets a value indicating whether the user is limited to choosing just a property of a specified Contact, or choosing the Contact.
            </summary>
            <remarks>
            If <b>true</b>, <b>SelectedContact</b> must be set before calling <b>ShowDialog</b>.
            ChoosePropertyOnly and ChooseContactOnly cannot both be set to <b>true</b>.  In the event that both are
            set to <b>true</b>, setting ChoosePropertyOnly to <b>true </b>will automatically set 
            ChooseContactOnly to <b>false</b>
            </remarks>
        </member>
        <member name="P:Microsoft.WindowsMobile.Forms.ChooseContactDialog.FilterRequiredProperties">
            <summary>
            Gets or sets a value indicating whether the user wants to filter on certain properties.
            </summary>
        </member>
        <member name="P:Microsoft.WindowsMobile.Forms.ChooseContactDialog.NoUIOnSingleOrNoMatch">
            <summary>
            Gets or sets a value indicating whether the user wants to show  the Contact Chooser, 
            or the Property Chooser dialog boxes display for a single match, 
            or for no matches
            </summary>
        </member>
        <member name="P:Microsoft.WindowsMobile.Forms.ChooseContactDialog.NoUI">
            <summary>
            Gets or sets a value indicating whether the user wants to show the contact chooser
            or the property chooser dialogs.
            </summary>
        </member>
        <member name="P:Microsoft.WindowsMobile.Forms.ChooseContactDialog.EnableGlobalAddressListLookup">
            <summary>
            Gets or sets a value indicating whether the user wants to allow 
            Global Address List lookups.
            </summary>
        </member>
        <member name="P:Microsoft.WindowsMobile.Forms.ChooseContactDialog.AllowNewContactSelection">
            <summary>
            Gets or sets a value indicating whether the caller wants to allow
            the user to select 'New Contact' instead of a specific contact.
            </summary>
        </member>
        <member name="P:Microsoft.WindowsMobile.Forms.ChooseContactDialog.RequiredProperties">
            <summary>
            Gets or sets the <b>ContactProperty</b> array values that specify which properties a Contact must have in order to be shown in the Contact Chooser dialog box.
            </summary>      
        </member>
        <member name="P:Microsoft.WindowsMobile.Forms.ChooseContactDialog.SelectedContactName">
            <summary>
            Gets the selected Contact’s name.
            </summary>  
        </member>
        <member name="P:Microsoft.WindowsMobile.Forms.ChooseContactDialog.SelectedPropertyValue">
            <summary>
            Gets the selected property value.
            </summary>       
        </member>
        <member name="P:Microsoft.WindowsMobile.Forms.ChooseContactDialog.SelectedContact">
            <summary>
            Gets or sets the Contact.
            </summary>
            <remarks>
            If <b>ChoosePropertyOnly</b> is <b>true</b>, then <b>SelectedContact</b> sets the Contact from which the user selects a property.
            </remarks>
        </member>
        <member name="P:Microsoft.WindowsMobile.Forms.ChooseContactDialog.SelectedProperty">
            <summary>
            Gets the selected property.
            </summary>     
        </member>
        <member name="P:Microsoft.WindowsMobile.Forms.ChooseContactDialog.Owner">
            <summary>
            Gets or sets the owner control.
            </summary>  
        </member>
        <member name="T:Microsoft.WindowsMobile.Forms.ChooseContactDialog.ChooseContactDialogFlags">
            <summary>
            Specifies Contact Chooser options.
            </summary>
        </member>
        <member name="F:Microsoft.WindowsMobile.Forms.ChooseContactDialog.ChooseContactDialogFlags.Default">
            <summary>
            Default view
            </summary>
        </member>
        <member name="F:Microsoft.WindowsMobile.Forms.ChooseContactDialog.ChooseContactDialogFlags.HideNew">
            <summary>
            Allows the user to disable create a new Contact from the Contact Chooser control
            </summary>
        </member>
        <member name="F:Microsoft.WindowsMobile.Forms.ChooseContactDialog.ChooseContactDialogFlags.ChooseContactOnly">
            <summary>
            Select the first non empty item for multiple matches
            </summary>
        </member>
        <member name="F:Microsoft.WindowsMobile.Forms.ChooseContactDialog.ChooseContactDialogFlags.ChoosePropertyOnly">
            <summary>
            When set, the Contact Chooser dialog box does not appear.
            The OID of the Contact to use is retrieved from the oidContactID property
            </summary>
        </member>
        <member name="F:Microsoft.WindowsMobile.Forms.ChooseContactDialog.ChooseContactDialogFlags.ReturnContactName">
            <summary>
            The Contact name is returned in the bstrContactName property
            </summary>
        </member>
        <member name="F:Microsoft.WindowsMobile.Forms.ChooseContactDialog.ChooseContactDialogFlags.ReturnPropertyValue">
            <summary>
            The property value is returned in the bstrPropertyValueSelected property
            </summary>
        </member>
        <member name="F:Microsoft.WindowsMobile.Forms.ChooseContactDialog.ChooseContactDialogFlags.FilterRequiredProperties">
            <summary>
            Filter required properties
            </summary>
        </member>
        <member name="F:Microsoft.WindowsMobile.Forms.ChooseContactDialog.ChooseContactDialogFlags.NoUIOnSingleOrNoMatch">
            <summary>
            Neither the Contact Chooser, nor the Property Chooser dialog boxes display for a single match, 
            or for no matches
            </summary>
        </member>
        <member name="F:Microsoft.WindowsMobile.Forms.ChooseContactDialog.ChooseContactDialogFlags.NoUI">
            <summary>
            Neither the Contact Chooser, nor the Property Chooser dialog boxes display
            </summary>
        </member>
        <member name="F:Microsoft.WindowsMobile.Forms.ChooseContactDialog.ChooseContactDialogFlags.EnableGlobalAddressListLookup">
            <summary>
            Enable the "Find Online" option to perform Global Address List lookup.
            </summary>
        </member>
        <member name="F:Microsoft.WindowsMobile.Forms.ChooseContactDialog.ChooseContactDialogFlags.AllowNewContactSelection">
            <summary>
            Allow the user to select 'New Contact' instead of a specific contact.
            </summary>
        </member>
        <member name="T:Microsoft.WindowsMobile.Forms.CameraCaptureMode">
            <summary>
            The <b>CameraCaptureMode</b> enumeration specifies the camera mode used for image capture.
            <seealso cref="T:Microsoft.WindowsMobile.Forms.CameraCaptureDialog"/>
            <seealso cref="T:Microsoft.WindowsMobile.Forms.CameraCaptureStillQuality"/>
            <seealso cref="T:Microsoft.WindowsMobile.Forms.CameraCaptureVideoTypes"/>
            </summary>
        </member>
        <member name="F:Microsoft.WindowsMobile.Forms.CameraCaptureMode.Still">
            <summary>
            Capture a still image. This is the default. Value = 0.
            </summary>
        </member>
        <member name="F:Microsoft.WindowsMobile.Forms.CameraCaptureMode.VideoOnly">
            <summary>
            Capture a video clip without audio.
            </summary>
        </member>
        <member name="F:Microsoft.WindowsMobile.Forms.CameraCaptureMode.VideoWithAudio">
            <summary>
            Capture a video clip with audio.
            </summary>
        </member>
        <member name="T:Microsoft.WindowsMobile.Forms.CameraCaptureStillQuality">
            <summary>
            The <b>CameraCaptureStillQuality</b> enumeration specifies the compression level used for still image capture.
            </summary>
            <seealso cref="T:Microsoft.WindowsMobile.Forms.CameraCaptureDialog"/>
            <seealso cref="T:Microsoft.WindowsMobile.Forms.CameraCaptureMode"/>
            <seealso cref="T:Microsoft.WindowsMobile.Forms.CameraCaptureVideoTypes"/>
        </member>
        <member name="F:Microsoft.WindowsMobile.Forms.CameraCaptureStillQuality.Default">
            <summary>
            Capture a still image using the default compression level. 
            This is the quality last selected by the user in <b>Picture &amp; Video</b> &gt; <b>Camera Options</b> &gt; <b>Still image compression level:</b>. 
            This is the default value.  Value = 0.
            </summary>
        </member>
        <member name="F:Microsoft.WindowsMobile.Forms.CameraCaptureStillQuality.Low">
            <summary>
            Capture a still image using the <b>Low Quality</b> compression level.
            </summary>
        </member>
        <member name="F:Microsoft.WindowsMobile.Forms.CameraCaptureStillQuality.Normal">
            <summary>
            Capture a still image using the <b>Normal Quality</b> compression level.
            </summary>
        </member>
        <member name="F:Microsoft.WindowsMobile.Forms.CameraCaptureStillQuality.High">
            <summary>
            Capture a still image using the <b>High Quality</b> compression level.
            </summary>
        </member>
        <member name="T:Microsoft.WindowsMobile.Forms.CameraCaptureVideoTypes">
            <summary>
            The <b>CameraCaptureVideoTypes</b> enumeration defines the purpose of the video.
            </summary>
            <remarks>
            Multimedia Messaging Service (MMS) applications must be able to capture video 
            that meets criteria specific to multimedia messaging. 
            To accommodate this, it is up to the mobile device Original Equipment Manufacturer (OEM) 
            to register Video Profiles for each of the Video Types (All, Standard, and Messaging). 
            To be compliant, you just need to create a <see cref="T:Microsoft.WindowsMobile.Forms.CameraCaptureDialog"/> object  
            with a Video Type and video resolution that matches one of the Video Profiles.
            <para>
            <ul>
            <li>
            <b>Video Type</b> specifies whether the video should be recorded in a format 
            that is compatible with video messaging (usually encoded in either <A HREF="http://www.m4if.org/mpeg4/?frame=false">MPEG4</A> 
            format or <A HREF="http://www.itu.int/home/?frame=true">H.263</A> format), 
            or for use in home videos and e-mail messaging (usually encoded in Windows Media Video 
            (<A HREF="http://www.microsoft.com/windows/windowsmedia/default.aspx">WMV</A>) format).
            </li>
            <li>
            <b>Video Profiles</b> are registry settings that contain a combination of Video Type, video encoder, 
            video resolution, and a profile name.
            </li>
            </ul>
            </para>
            <para>
            When you ceate a <see cref="T:Microsoft.WindowsMobile.Forms.CameraCaptureDialog"/> object, the Video Type and video resolution that you specify 
            are matched to a corresponding Video Profile to determine which Video Profile is used to initialize video capture mode. 
            Your <see cref="P:Microsoft.WindowsMobile.Forms.CameraCaptureDialog.VideoTypes"/> value is logically ANDed (&amp;) with the <b>VideoType</b> value 
            in each registered profile (e.g., "VideoType:DWORD = 0x0002" for messaging). 
            Of those that produce a 1, the video resolutions are then compared. 
            If a matching Video Profile is found, then it is used to initialize video capture mode. 
            If one cannot be found, then an <b>System.ArgumentException</b> exception is raised. 
            In this case, you should just create a <see cref="T:Microsoft.WindowsMobile.Forms.CameraCaptureDialog"/> object again, 
            this time with a <b>VideoTypes</b> value of <b>All</b> (0xFFFF), and no specified video resolution; 
            the first supported video resolution will then be used.
            </para>
            <para>
            <b>Note</b>   For more information on defining Video Profiles, 
            see the section on <b>Video Profiles</b> in <b>Camera, Pictures and Videos Registry Settings</b>.
            </para>
            <example>
            The following example demonstrates a typical video profile registration.
            <code>
            HKEY_LOCAL_MACHINE\Software\Microsoft\Pictures\Camera\OEM\VideoProfile\1
            ItemString:String = "MMS (174x144)"
            VideoType:DWORD = 0x0002 ; For messaging
            Width:DWORD = 176
            Height:DWORD = 144
            </code>
            </example>
            <para>
            You can estimate the video file size that meets the time-limit restriction by specifying a particular video resolution.
            </para>
            <para>
            Each Video Profile is listed as an option for the user in <b>Pictures &amp; Video</b> &gt; <b>Menu</b> &gt; <b>Quality</b>.
            </para>
            </remarks>
            <seealso cref="T:Microsoft.WindowsMobile.Forms.CameraCaptureDialog"/>
            <seealso cref="T:Microsoft.WindowsMobile.Forms.CameraCaptureMode"/>
            <seealso cref="T:Microsoft.WindowsMobile.Forms.CameraCaptureStillQuality"/>
        </member>
        <member name="F:Microsoft.WindowsMobile.Forms.CameraCaptureVideoTypes.All">
            <summary>
            Only the resolution is used when matching video profiles.
            If resolution width and height both equal 0, and a <b>CameraCaptureVideoTypes</b> value of <b>All</b> is used, 
            then the user's last selected resolution is used. 
            Value = 0xFFFF.
            </summary>
        </member>
        <member name="F:Microsoft.WindowsMobile.Forms.CameraCaptureVideoTypes.Standard">
            <summary>
            Produces high-quality video clips used for home movies and e-mail video messaging, 
            using a video encoder such as the Windows Media encoder. 
            For a <b>CameraCaptureVideoTypes</b> value of <b>Standard</b>, 
            neither resolution width nor height can equal 0.
            Value = 1.
            </summary>
        </member>
        <member name="F:Microsoft.WindowsMobile.Forms.CameraCaptureVideoTypes.Messaging">
            <summary>
            Produces video clips used for Multimedia Messaging Service (MMS) video messaging, 
            which require a video encoder that conforms to the 
            <A HREF="http://www.3gpp.org/?frame=true">3rd Generation Partnership Project (3GPP)</A> specification. 
            For a <b>CameraCaptureVideoTypes</b> value of <b>Messaging</b>, 
            neither resolution width nor height can equal 0.
            Value = 2.
            </summary>
        </member>
        <member name="T:Microsoft.WindowsMobile.Forms.CameraCaptureDialog">
            <summary>
            The <b>CameraCaptureDialog</b> class launches the Camera Capture dialog box, 
            which allows the user to capture still images and video clips.
            </summary>
            <seealso cref="M:Microsoft.WindowsMobile.Forms.CameraCaptureDialog.ShowDialog"/>
            <seealso cref="T:Microsoft.WindowsMobile.Forms.CameraCaptureMode"/>
            <seealso cref="T:Microsoft.WindowsMobile.Forms.CameraCaptureStillQuality"/>
            <seealso cref="T:Microsoft.WindowsMobile.Forms.CameraCaptureVideoTypes"/>
        </member>
        <member name="M:Microsoft.WindowsMobile.Forms.CameraCaptureDialog.#ctor">
            <summary>
            Initializes a new instance of <b>CameraCaptureDialog</b> class.
            </summary>
            <seealso cref="T:Microsoft.WindowsMobile.Forms.CameraCaptureDialog"/>
            <seealso cref="M:Microsoft.WindowsMobile.Forms.CameraCaptureDialog.ShowDialog"/>
            <seealso cref="T:Microsoft.WindowsMobile.Forms.CameraCaptureMode"/>
            <seealso cref="T:Microsoft.WindowsMobile.Forms.CameraCaptureStillQuality"/>
            <seealso cref="T:Microsoft.WindowsMobile.Forms.CameraCaptureVideoTypes"/>
        </member>
        <member name="M:Microsoft.WindowsMobile.Forms.CameraCaptureDialog.AllocUnmanagedBuffer(System.Int32)">
            <summary>
            Allocates unmanaged buffer of the specified number of bytes.
            </summary>
            <param name="bytes">Number of bytes to allocate.</param>
            <returns>Unmanaged buffer allocated with specified length.</returns>
            <exception cref="T:System.ArgumentException">Thrown when attempting to allocate an invalid number of bytes.</exception>
            <exception cref="T:System.OutOfMemoryException">Thrown when the attempt to allocate the unmanaged buffer, fails.</exception>
        </member>
        <member name="M:Microsoft.WindowsMobile.Forms.CameraCaptureDialog.ToUnmanagedString(System.String)">
            <summary>
            Allocates unmanaged buffer for the specified managed string.
            </summary>
            <param name="str">Managed string.</param>
            <returns>Unmanaged buffer allocated for the specified managed string.</returns>
        </member>
        <member name="M:Microsoft.WindowsMobile.Forms.CameraCaptureDialog.LaunchCameraCaptureDialog(System.IntPtr)">
            <summary>
            Call SHCameraCapture to launch camera capture dialog.
            </summary>
            <param name="ptrStruct">Struct parameter for unmanaged camera capture API.</param>
            <returns>One of the DialogResult values.</returns>
            <exception cref="T:System.OutOfMemoryException">Thrown when the operation runs out of memory.</exception>
            <exception cref="T:System.ArgumentException">Thrown when an invalid argument is specified.</exception>
            <exception cref="T:System.InvalidOperationException">Thrown when an unknown error occurrs.</exception>
        </member>
        <member name="M:Microsoft.WindowsMobile.Forms.CameraCaptureDialog.ShowDialog">
             <summary>
             Displays the "Camera Capture" dialog box,
             which allows the user to capture still images and video clips.        
             </summary>
             <returns>One of the <b>DialogResult</b> values (either <b>OK</b> or <b>Cancel</b>).</returns>
             <exception cref="T:System.OutOfMemoryException">Thrown when operation ran out of memory.</exception>
             <exception cref="T:System.ArgumentException">
             Thrown when an invalid argument was specified.
             <b>Note</b>: There is only one valid video resolution on Smartphone. 
             As a result, a value of <b>CameraCapturevideoTypes.Messaging</b> can produce 
             an <b>ArgumentException</b> exception on Smartphone.
             </exception>
             <exception cref="T:System.InvalidOperationException">Thrown when an unknown error occurred.</exception>
             <remarks>
             This is a modal dialog box.
             </remarks>
             <example>
             This example shows how to call and display a dialog box for taking a picture or video.
             <code>
             CameraCaptureDialog cameraCapture = new CameraCaptureDialog();
            
             cameraCapture.Owner = null;
             cameraCapture.InitialDirectory = @"\My Documents";
             cameraCapture.DefaultFileName = @"test.3gp";
             cameraCapture.Title = "Camera Demo";
             cameraCapture.VideoTypes = CameraCaptureVideoTypes.Messaging;
             cameraCapture.Resolution = new Size(176, 144);
             cameraCapture.VideoTimeLimit = new TimeSpan(0, 0, 15);  // Limited to 15 seconds of video.
             cameraCapture.Mode = CameraCaptureMode.VideoWithAudio;
            
             if (DialogResult.OK == cameraCapture.ShowDialog())
             {
                 Console.WriteLine("The picture or video has been successfully captured to:\n{0}", cameraCapture.FileName);
             }
             </code>
             </example>
             <seealso cref="T:Microsoft.WindowsMobile.Forms.CameraCaptureDialog"/>
             <seealso cref="T:Microsoft.WindowsMobile.Forms.CameraCaptureMode"/>
             <seealso cref="T:Microsoft.WindowsMobile.Forms.CameraCaptureStillQuality"/>
             <seealso cref="T:Microsoft.WindowsMobile.Forms.CameraCaptureVideoTypes"/>  
        </member>
        <member name="P:Microsoft.WindowsMobile.Forms.CameraCaptureDialog.Owner">
            <summary>
            Gets or sets the control that owns the <b>CameraCaptureDialog</b> component.
            </summary>
            <value>A control object that owns this component.</value>
            <remarks>
            The value of <b>Owner</b> can be NULL.
            </remarks>
            <seealso cref="T:Microsoft.WindowsMobile.Forms.CameraCaptureDialog"/>
            <seealso cref="M:Microsoft.WindowsMobile.Forms.CameraCaptureDialog.ShowDialog"/>
            <seealso cref="T:Microsoft.WindowsMobile.Forms.CameraCaptureMode"/>
            <seealso cref="T:Microsoft.WindowsMobile.Forms.CameraCaptureStillQuality"/>
            <seealso cref="T:Microsoft.WindowsMobile.Forms.CameraCaptureVideoTypes"/>
            <seealso cref="P:Microsoft.WindowsMobile.Forms.CameraCaptureDialog.FileName"/>
            <seealso cref="P:Microsoft.WindowsMobile.Forms.CameraCaptureDialog.InitialDirectory"/>
            <seealso cref="P:Microsoft.WindowsMobile.Forms.CameraCaptureDialog.DefaultFileName"/>        
            <seealso cref="P:Microsoft.WindowsMobile.Forms.CameraCaptureDialog.Title"/>
            <seealso cref="P:Microsoft.WindowsMobile.Forms.CameraCaptureDialog.StillQuality"/>
            <seealso cref="P:Microsoft.WindowsMobile.Forms.CameraCaptureDialog.VideoTypes"/>
            <seealso cref="P:Microsoft.WindowsMobile.Forms.CameraCaptureDialog.Resolution"/>
            <seealso cref="P:Microsoft.WindowsMobile.Forms.CameraCaptureDialog.VideoTimeLimit"/>
            <seealso cref="P:Microsoft.WindowsMobile.Forms.CameraCaptureDialog.Mode"/>
        </member>
        <member name="P:Microsoft.WindowsMobile.Forms.CameraCaptureDialog.FileName">
            <summary>
            Gets the fully-qualified pathname of the image file or video file.
            </summary>
            <value>The fully-qualified pathname of the image file or video file.</value>
            <remarks>
            If the <b>ShowDialog</b> method returns <b>DialogResult.OK</b>, 
            then <b>FileName</b> is set to the fully-qualified pathname of the captured still image or video clip.
            Up to 260 characters can be returned.
            </remarks>
            <seealso cref="T:Microsoft.WindowsMobile.Forms.CameraCaptureDialog"/>
            <seealso cref="M:Microsoft.WindowsMobile.Forms.CameraCaptureDialog.ShowDialog"/>
            <seealso cref="T:Microsoft.WindowsMobile.Forms.CameraCaptureMode"/>
            <seealso cref="T:Microsoft.WindowsMobile.Forms.CameraCaptureStillQuality"/>
            <seealso cref="T:Microsoft.WindowsMobile.Forms.CameraCaptureVideoTypes"/>
            <seealso cref="P:Microsoft.WindowsMobile.Forms.CameraCaptureDialog.Owner"/>
            <seealso cref="P:Microsoft.WindowsMobile.Forms.CameraCaptureDialog.InitialDirectory"/>
            <seealso cref="P:Microsoft.WindowsMobile.Forms.CameraCaptureDialog.DefaultFileName"/>        
            <seealso cref="P:Microsoft.WindowsMobile.Forms.CameraCaptureDialog.Title"/>
            <seealso cref="P:Microsoft.WindowsMobile.Forms.CameraCaptureDialog.StillQuality"/>
            <seealso cref="P:Microsoft.WindowsMobile.Forms.CameraCaptureDialog.VideoTypes"/>
            <seealso cref="P:Microsoft.WindowsMobile.Forms.CameraCaptureDialog.Resolution"/>
            <seealso cref="P:Microsoft.WindowsMobile.Forms.CameraCaptureDialog.VideoTimeLimit"/>
            <seealso cref="P:Microsoft.WindowsMobile.Forms.CameraCaptureDialog.Mode"/>
        </member>
        <member name="P:Microsoft.WindowsMobile.Forms.CameraCaptureDialog.InitialDirectory">
            <summary>
            Gets or sets the name of the directory for storing the captured image or video file.
            </summary>
            <value>Specifies the name of the directory for storing the captured image or video file.</value>
            <remarks>
            If <b>NULL</b>, the image or video file is stored in the directory specified in 
            <b>Picture &amp; Video</b> &gt; <b>Camera Options</b> &gt; <b>Save files to:</b>.
            If the directory does not exist, a <b>System.ArgumentException</b> exception is raised.
            </remarks>
            <seealso cref="T:Microsoft.WindowsMobile.Forms.CameraCaptureDialog"/>
            <seealso cref="M:Microsoft.WindowsMobile.Forms.CameraCaptureDialog.ShowDialog"/>
            <seealso cref="T:Microsoft.WindowsMobile.Forms.CameraCaptureMode"/>
            <seealso cref="T:Microsoft.WindowsMobile.Forms.CameraCaptureStillQuality"/>
            <seealso cref="T:Microsoft.WindowsMobile.Forms.CameraCaptureVideoTypes"/>
            <seealso cref="P:Microsoft.WindowsMobile.Forms.CameraCaptureDialog.Owner"/>
            <seealso cref="P:Microsoft.WindowsMobile.Forms.CameraCaptureDialog.DefaultFileName"/>        
            <seealso cref="P:Microsoft.WindowsMobile.Forms.CameraCaptureDialog.Title"/>
            <seealso cref="P:Microsoft.WindowsMobile.Forms.CameraCaptureDialog.StillQuality"/>
            <seealso cref="P:Microsoft.WindowsMobile.Forms.CameraCaptureDialog.VideoTypes"/>
            <seealso cref="P:Microsoft.WindowsMobile.Forms.CameraCaptureDialog.Resolution"/>
            <seealso cref="P:Microsoft.WindowsMobile.Forms.CameraCaptureDialog.VideoTimeLimit"/>
            <seealso cref="P:Microsoft.WindowsMobile.Forms.CameraCaptureDialog.Mode"/>
        </member>
        <member name="P:Microsoft.WindowsMobile.Forms.CameraCaptureDialog.DefaultFileName">
            <summary>
            Gets or sets the still image or video image file name.
            </summary>
            <value>The file name used to store the captured still image or video image.</value>
            <remarks>
            Still images on Windows Mobile devices conform to the <A HREF="http://www.jpeg.org/?frame=false">JPEG</A> standard. 
            As a result, file names for still images must end in <i>*.jpg</i>. 
            There is no restriction for naming video files, other than the file format must be supported 
            by <A HREF="http://www.microsoft.com/windows/windowsmedia/player/windowsmobile/default.aspx?frame=false">Windows Media Player Mobile</A>. 
            Since different video encoders can use differing naming conventions, it is important that the file name has the correct extension. 
            To be safe, you can simply use NULL when naming Video files.
            If <b>DefaultFileName</b> is NULL, then the file name specified in <b>Picture &amp; Video</b> &gt; <b>Camera Options</b> &gt; <b>Type filename prefix:</b> is used. 
            If the file already exists, it is overwritten. 
            The combination of <b>InitialDirectory</b> and <b>DefaultFileName</b> must not exceed 256 characters.
            </remarks>
            <seealso cref="T:Microsoft.WindowsMobile.Forms.CameraCaptureDialog"/>
            <seealso cref="M:Microsoft.WindowsMobile.Forms.CameraCaptureDialog.ShowDialog"/>
            <seealso cref="T:Microsoft.WindowsMobile.Forms.CameraCaptureMode"/>
            <seealso cref="T:Microsoft.WindowsMobile.Forms.CameraCaptureStillQuality"/>
            <seealso cref="T:Microsoft.WindowsMobile.Forms.CameraCaptureVideoTypes"/>
            <seealso cref="P:Microsoft.WindowsMobile.Forms.CameraCaptureDialog.Owner"/>
            <seealso cref="P:Microsoft.WindowsMobile.Forms.CameraCaptureDialog.InitialDirectory"/>
            <seealso cref="P:Microsoft.WindowsMobile.Forms.CameraCaptureDialog.Title"/>
            <seealso cref="P:Microsoft.WindowsMobile.Forms.CameraCaptureDialog.StillQuality"/>
            <seealso cref="P:Microsoft.WindowsMobile.Forms.CameraCaptureDialog.VideoTypes"/>
            <seealso cref="P:Microsoft.WindowsMobile.Forms.CameraCaptureDialog.Resolution"/>
            <seealso cref="P:Microsoft.WindowsMobile.Forms.CameraCaptureDialog.VideoTimeLimit"/>
            <seealso cref="P:Microsoft.WindowsMobile.Forms.CameraCaptureDialog.Mode"/>
        </member>
        <member name="P:Microsoft.WindowsMobile.Forms.CameraCaptureDialog.Title">
            <summary>
            Gets or sets the title of the Camera Capture dialog box.
            </summary>
            <value>The title of the Camera Capture dialog box.</value>
            <remarks>
            If <b>NULL</b>, a default title is displayed. The default title is "Camera".
            <p>On Smartphone, the first time the user enters the Camera View, 
            the title bar displays the text specified with the <b>CameraCaptureDialog.Title</b> property.</p>
            <p>On Pocket PC, the title bar should be the name of the calling application. 
            However, the settings header text displays the text specified with the <b>CameraCaptureDialog.Title</b> property.</p>
            </remarks>
            <seealso cref="T:Microsoft.WindowsMobile.Forms.CameraCaptureDialog"/>
            <seealso cref="M:Microsoft.WindowsMobile.Forms.CameraCaptureDialog.ShowDialog"/>
            <seealso cref="T:Microsoft.WindowsMobile.Forms.CameraCaptureMode"/>
            <seealso cref="T:Microsoft.WindowsMobile.Forms.CameraCaptureStillQuality"/>
            <seealso cref="T:Microsoft.WindowsMobile.Forms.CameraCaptureVideoTypes"/>
            <seealso cref="P:Microsoft.WindowsMobile.Forms.CameraCaptureDialog.Owner"/>
            <seealso cref="P:Microsoft.WindowsMobile.Forms.CameraCaptureDialog.InitialDirectory"/>
            <seealso cref="P:Microsoft.WindowsMobile.Forms.CameraCaptureDialog.DefaultFileName"/>        
            <seealso cref="P:Microsoft.WindowsMobile.Forms.CameraCaptureDialog.StillQuality"/>
            <seealso cref="P:Microsoft.WindowsMobile.Forms.CameraCaptureDialog.VideoTypes"/>
            <seealso cref="P:Microsoft.WindowsMobile.Forms.CameraCaptureDialog.Resolution"/>
            <seealso cref="P:Microsoft.WindowsMobile.Forms.CameraCaptureDialog.VideoTimeLimit"/>
            <seealso cref="P:Microsoft.WindowsMobile.Forms.CameraCaptureDialog.Mode"/>
        </member>
        <member name="P:Microsoft.WindowsMobile.Forms.CameraCaptureDialog.StillQuality">
            <summary>
            Gets or sets the still image quality.
            </summary>
            <value>
            One of the <b>CameraCaptureStillQuality</b> enumeration values, which specifies the compression level used for still image capture. 
            For more information, see <see cref="T:Microsoft.WindowsMobile.Forms.CameraCaptureStillQuality"/>.
            </value>
            <remarks>
            The default value is <b>CameraCaptureStillQuality::Default</b>, which is the quality last selected by the user in 
            <b>Picture &amp; Video</b> &gt; <b>Camera Options</b> &gt; <b>Still image compression level:</b>.
            <p>If the value is not defined in <b>CameraCaptureStillQuality</b> enumeration, <b>System.ArgumentException</b> is raised.</p>
            </remarks>
            <exception cref="T:System.ArgumentException">Thrown when attempting to set an invalid camera capture still quality.</exception>
            <seealso cref="T:Microsoft.WindowsMobile.Forms.CameraCaptureDialog"/>
            <seealso cref="M:Microsoft.WindowsMobile.Forms.CameraCaptureDialog.ShowDialog"/>
            <seealso cref="T:Microsoft.WindowsMobile.Forms.CameraCaptureMode"/>
            <seealso cref="T:Microsoft.WindowsMobile.Forms.CameraCaptureStillQuality"/>
            <seealso cref="T:Microsoft.WindowsMobile.Forms.CameraCaptureVideoTypes"/>
            <seealso cref="P:Microsoft.WindowsMobile.Forms.CameraCaptureDialog.Owner"/>
            <seealso cref="P:Microsoft.WindowsMobile.Forms.CameraCaptureDialog.InitialDirectory"/>
            <seealso cref="P:Microsoft.WindowsMobile.Forms.CameraCaptureDialog.DefaultFileName"/>        
            <seealso cref="P:Microsoft.WindowsMobile.Forms.CameraCaptureDialog.Title"/>
            <seealso cref="P:Microsoft.WindowsMobile.Forms.CameraCaptureDialog.VideoTypes"/>
            <seealso cref="P:Microsoft.WindowsMobile.Forms.CameraCaptureDialog.Resolution"/>
            <seealso cref="P:Microsoft.WindowsMobile.Forms.CameraCaptureDialog.VideoTimeLimit"/>
            <seealso cref="P:Microsoft.WindowsMobile.Forms.CameraCaptureDialog.Mode"/>
        </member>
        <member name="P:Microsoft.WindowsMobile.Forms.CameraCaptureDialog.VideoTypes">
            <summary>
            Gets or sets the video type.
            </summary>
            <value>
            One of the <b>CameraCaptureVideoTypes</b> enumeration values, which specifies a video quality profile (i.e., whether the video clip is to be used by a Multimedia Messaging Service (MMS) application).
            For more information, see <see cref="T:Microsoft.WindowsMobile.Forms.CameraCaptureVideoTypes"/>.
            </value>
            <remarks>
            The default value is <b>CameraCaptureVideoTypes::All</b>.
            <p>If the value is not defined in <b>CameraCaptureVideoTypes</b> enumeration, <b>System.ArgumentException</b> is raised.</p>
            </remarks>
            <exception cref="T:System.ArgumentException">Thrown when attempting to set an invalid camera capture video type.</exception>
            <seealso cref="T:Microsoft.WindowsMobile.Forms.CameraCaptureDialog"/>
            <seealso cref="M:Microsoft.WindowsMobile.Forms.CameraCaptureDialog.ShowDialog"/>
            <seealso cref="T:Microsoft.WindowsMobile.Forms.CameraCaptureMode"/>
            <seealso cref="T:Microsoft.WindowsMobile.Forms.CameraCaptureStillQuality"/>
            <seealso cref="P:Microsoft.WindowsMobile.Forms.CameraCaptureDialog.Owner"/>
            <seealso cref="P:Microsoft.WindowsMobile.Forms.CameraCaptureDialog.InitialDirectory"/>
            <seealso cref="P:Microsoft.WindowsMobile.Forms.CameraCaptureDialog.DefaultFileName"/>        
            <seealso cref="P:Microsoft.WindowsMobile.Forms.CameraCaptureDialog.Title"/>
            <seealso cref="P:Microsoft.WindowsMobile.Forms.CameraCaptureDialog.StillQuality"/>
            <seealso cref="P:Microsoft.WindowsMobile.Forms.CameraCaptureDialog.Resolution"/>
            <seealso cref="P:Microsoft.WindowsMobile.Forms.CameraCaptureDialog.VideoTimeLimit"/>
            <seealso cref="P:Microsoft.WindowsMobile.Forms.CameraCaptureDialog.Mode"/>
        </member>
        <member name="P:Microsoft.WindowsMobile.Forms.CameraCaptureDialog.Resolution">
            <summary>
            Gets or sets the image resolution.
            </summary>
            <value>The image resolution, as a (width, height) value pair, in pixels.</value>
            <remarks>
            The default is (0, 0).
            For video clips, if either Width or Height is 0, only <b>VideoTypes</b> will be considered when selecting video profile (i.e., <b>Resolution</b> is ignored).
            </remarks>
            <seealso cref="T:Microsoft.WindowsMobile.Forms.CameraCaptureDialog"/>
            <seealso cref="M:Microsoft.WindowsMobile.Forms.CameraCaptureDialog.ShowDialog"/>
            <seealso cref="T:Microsoft.WindowsMobile.Forms.CameraCaptureMode"/>
            <seealso cref="T:Microsoft.WindowsMobile.Forms.CameraCaptureStillQuality"/>
            <seealso cref="T:Microsoft.WindowsMobile.Forms.CameraCaptureVideoTypes"/> 
            <seealso cref="P:Microsoft.WindowsMobile.Forms.CameraCaptureDialog.Owner"/>
            <seealso cref="P:Microsoft.WindowsMobile.Forms.CameraCaptureDialog.InitialDirectory"/>
            <seealso cref="P:Microsoft.WindowsMobile.Forms.CameraCaptureDialog.DefaultFileName"/>        
            <seealso cref="P:Microsoft.WindowsMobile.Forms.CameraCaptureDialog.Title"/>
            <seealso cref="P:Microsoft.WindowsMobile.Forms.CameraCaptureDialog.StillQuality"/>
            <seealso cref="P:Microsoft.WindowsMobile.Forms.CameraCaptureDialog.VideoTypes"/>
            <seealso cref="P:Microsoft.WindowsMobile.Forms.CameraCaptureDialog.VideoTimeLimit"/>
            <seealso cref="P:Microsoft.WindowsMobile.Forms.CameraCaptureDialog.Mode"/>
        </member>
        <member name="P:Microsoft.WindowsMobile.Forms.CameraCaptureDialog.VideoTimeLimit">
            <summary>
            Gets or sets the time-limit for video clips.
            </summary>
            <value>The maximum length of time in seconds, allowed for a video clip.</value>
            <remarks>
            <b>VideoTimeLimit</b> is a time-interval represented by a <b>TimeSpan</b> object.  
            For more information, see 
            <A HREF="http://msdn.microsoft.com/library/en-us/cpref/html/frlrfsystemtimespanclasstopic.asp">TimeSpan Structure</A> on MSDN.
            <p>A time limit of 0 indicates that there is no limitation. The default is 0 (no limit).</p>
            </remarks>
            <seealso cref="T:Microsoft.WindowsMobile.Forms.CameraCaptureDialog"/>
            <seealso cref="M:Microsoft.WindowsMobile.Forms.CameraCaptureDialog.ShowDialog"/>
            <seealso cref="T:Microsoft.WindowsMobile.Forms.CameraCaptureMode"/>
            <seealso cref="T:Microsoft.WindowsMobile.Forms.CameraCaptureStillQuality"/>
            <seealso cref="T:Microsoft.WindowsMobile.Forms.CameraCaptureVideoTypes"/>
            <seealso cref="P:Microsoft.WindowsMobile.Forms.CameraCaptureDialog.Owner"/>
            <seealso cref="P:Microsoft.WindowsMobile.Forms.CameraCaptureDialog.InitialDirectory"/>
            <seealso cref="P:Microsoft.WindowsMobile.Forms.CameraCaptureDialog.DefaultFileName"/>        
            <seealso cref="P:Microsoft.WindowsMobile.Forms.CameraCaptureDialog.Title"/>
            <seealso cref="P:Microsoft.WindowsMobile.Forms.CameraCaptureDialog.StillQuality"/>
            <seealso cref="P:Microsoft.WindowsMobile.Forms.CameraCaptureDialog.VideoTypes"/>
            <seealso cref="P:Microsoft.WindowsMobile.Forms.CameraCaptureDialog.Resolution"/>
            <seealso cref="P:Microsoft.WindowsMobile.Forms.CameraCaptureDialog.Mode"/>
        </member>
        <member name="P:Microsoft.WindowsMobile.Forms.CameraCaptureDialog.Mode">
            <summary>
            Gets or sets the image capture mode.
            </summary>
            <value>
            One of the <b>CameraCaptureMode</b> enumeration values, which specifies the camera mode used to initialize the Camera Capture function.
            For more information, see <see cref="T:Microsoft.WindowsMobile.Forms.CameraCaptureMode"/>.
            </value>
            <remarks>
            The default value is <b>Still</b>.
            If the value is not defined in the <b>CameraCaptureMode</b> enumeration, then a <b>System.ArgumentException</b> exception is raised.
            </remarks>
            <exception cref="T:System.ArgumentException">Thrown when attempting to set an invalid camera capture mode.</exception>
            <seealso cref="T:Microsoft.WindowsMobile.Forms.CameraCaptureDialog"/>
            <seealso cref="M:Microsoft.WindowsMobile.Forms.CameraCaptureDialog.ShowDialog"/>
            <seealso cref="T:Microsoft.WindowsMobile.Forms.CameraCaptureMode"/>
            <seealso cref="T:Microsoft.WindowsMobile.Forms.CameraCaptureStillQuality"/>
            <seealso cref="T:Microsoft.WindowsMobile.Forms.CameraCaptureVideoTypes"/>
            <seealso cref="P:Microsoft.WindowsMobile.Forms.CameraCaptureDialog.Owner"/>
            <seealso cref="P:Microsoft.WindowsMobile.Forms.CameraCaptureDialog.InitialDirectory"/>
            <seealso cref="P:Microsoft.WindowsMobile.Forms.CameraCaptureDialog.DefaultFileName"/>        
            <seealso cref="P:Microsoft.WindowsMobile.Forms.CameraCaptureDialog.Title"/>
            <seealso cref="P:Microsoft.WindowsMobile.Forms.CameraCaptureDialog.StillQuality"/>
            <seealso cref="P:Microsoft.WindowsMobile.Forms.CameraCaptureDialog.VideoTypes"/>
            <seealso cref="P:Microsoft.WindowsMobile.Forms.CameraCaptureDialog.Resolution"/>
            <seealso cref="P:Microsoft.WindowsMobile.Forms.CameraCaptureDialog.VideoTimeLimit"/>
        </member>
    </members>
</doc>
=== C:/Users/treeman/Desktop/windows nt source code\xbox\Xbox Live Source\XONLINE_MAIN\public\ext\sdk\wm7\sfone7\Managed Libraries\microsoft.windowsmobile.status.xml ===
<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Microsoft.WindowsMobile.Status</name>
    </assembly>
    <members>
        <member name="M:Microsoft.WindowsMobile.Status.SafeNativeMethods.#ctor">
            <summary>
            The constructor exists so that the default constructor is not created (since all methods are static).
            </summary>
        </member>
        <member name="T:Microsoft.WindowsMobile.Status.RegistryState">
            <summary>
            Defines the state of a registry key (that is, the key name, the names of its values, and the data contained in its values).
            </summary>
            <remarks>
            When defining an instance of RegistryState that is going to handle the Changed
            event, make sure that the instance is defined globally in the class where the event will be handled.
            If it is defined in a method, it will be up for garbage collection after it goes out of scope. 
            <code>
            public class MyClass
            {
                RegistryState state; // defined globally to class
                private void Form1_Load(object sender, EventArgs e)
                {
                    // SystemState state;  // This instance will go out of scope if defined here
                    
                    RegistryState state = new RegistryState("HKEY_LOCAL_MACHINE\\MyKey", "MyValue");
                    state.Changed += new ChangeEventHandler(state_Changed);
                }
            }
            </code>
            </remarks>
        </member>
        <member name="T:Microsoft.WindowsMobile.Status.StateBase">
            <summary>
            The abstract base of a <b>State</b> class.  You can use <b>State</b> classes to query system state values, and then be notified when changes occur.
            </summary>
        </member>
        <member name="M:Microsoft.WindowsMobile.Status.StateBase.#ctor">
            <summary>
            Initializes a new instance of the <b>StateBase</b> class.
            </summary>
        </member>
        <member name="M:Microsoft.WindowsMobile.Status.StateBase.EnableApplicationLauncher(System.String,System.String,System.String)">
            <summary>
            Enables the Application Launcher for this object, using it’s unique ID, the fully qualified path-name of the application to launch, and any arguments it requires.
            </summary>
            <param name="applicationLaunchId">The ID of the Application Launcher.</param>
            <param name="applicationFileName">The fully qualified path-name of the application to launch.</param>
            <param name="arguments">A string containing the arguments to pass to the application.</param>
        </member>
        <member name="M:Microsoft.WindowsMobile.Status.StateBase.EnableApplicationLauncher(System.String,System.String)">
            <summary>
            Enables the Application Launcher for this object, using it’s unique ID, and the fully qualified path-name of the application to launch.
            </summary>
            <param name="applicationLaunchId">The ID of the Application Launcher.</param>
            <param name="applicationFileName">The fully qualified path-name of the application to launch.</param>
        </member>
        <member name="M:Microsoft.WindowsMobile.Status.StateBase.EnableApplicationLauncher(System.String)">
            <summary>
            Enables the Application Launcher for this object, using it’s unique ID.
            </summary>
            <param name="applicationLaunchId">The ID of the Application Launcher.</param>
        </member>
        <member name="M:Microsoft.WindowsMobile.Status.StateBase.DisableApplicationLauncher">
            <summary>
            Disables the Application Launcher for this instance.  It will no longer launch the application that it was associated with.
            </summary>
        </member>
        <member name="P:Microsoft.WindowsMobile.Status.StateBase.CurrentValue">
            <summary>
            Gets and sets the current value of the system state.
            </summary>
        </member>
        <member name="P:Microsoft.WindowsMobile.Status.StateBase.ComparisonType">
            <summary>
            Gets and sets the type of comparison operation used to generate state condition notifications.
            </summary>
        </member>
        <member name="P:Microsoft.WindowsMobile.Status.StateBase.ComparisonValue">
            <summary>
            Gets and sets the comparion value that is used in the generation of Status events. The event occurs when the result of the comparison is <b>true</b>.
            </summary>
            <remarks>
            You must initialize <b>ComparisonValue</b> with either an integer or a string value.
            To initialize it with an enumeration value, you must cast the value as either (int) or (string).
            </remarks>
        </member>
        <member name="P:Microsoft.WindowsMobile.Status.StateBase.BitMask">
            <summary>
            Gets and sets the optional bitmask used in Integer comparisons.
            </summary>
        </member>
        <member name="E:Microsoft.WindowsMobile.Status.StateBase.Changed">
            <summary>
            Occurs when the system state changes.
            </summary>
        </member>
        <member name="P:Microsoft.WindowsMobile.Status.StateBase.ApplicationArguments">
            <summary>
            Gets the arguments passed to the application. <b>Note</b>: The Application Launcher must be enabled.
            </summary>
        </member>
        <member name="P:Microsoft.WindowsMobile.Status.StateBase.ApplicationToLaunch">
            <summary>
            The string name of the application to launch. <b>Note</b>: The Application Launcher must be enabled.
            </summary>
        </member>
        <member name="P:Microsoft.WindowsMobile.Status.StateBase.ApplicationLaunchId">
            <summary>
            Unique id for the SystemState
            </summary>
        </member>
        <member name="F:Microsoft.WindowsMobile.Status.RegistryState.NotificationRegistryLocation">
            <summary>
            The location in the registry where statstor registration is maintained.
            </summary>
        </member>
        <member name="M:Microsoft.WindowsMobile.Status.RegistryState.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <b>RegistryState</b> class, using an existing <b>RegistryState</b> object that has the Application Launcher enabled.
            </summary>
            <param name="applicationLaunchId">The unique ID of the <b>RegistryState</b> to load.</param>
        </member>
        <member name="M:Microsoft.WindowsMobile.Status.RegistryState.#ctor(System.String,System.Boolean)">
            <summary>
            Creates a new instance of the <b>RegistryState</b> class, using persisted (saved) state values of a previous instance. This persisted <b>RegistryState</b> object is uniquely identified by the <b>applicationLaunchId</b>.
            </summary>
            <remarks>
            Use the application’s form thread if you want to manipulate the user interface using an event.
            </remarks>
            <param name="applicationLaunchId">The unique ID of the <b>RegistryState</b> to load.</param>
            <param name="useFormThread">A value indicating whether to use the application's form thread for event processing. If your application does not contain a form, then set this value to <b>false</b>.
            </param>
        </member>
        <member name="M:Microsoft.WindowsMobile.Status.RegistryState.#ctor(System.String,System.String)">
            <summary>
            Initializes a new instance of the <b>RegistryState</b> class, using the key name, the names of its values.
            </summary>
            <param name="key">The string value of the registry key.</param>
            <param name="valueName">The string name of the value.</param>
        </member>
        <member name="M:Microsoft.WindowsMobile.Status.RegistryState.#ctor(System.String,System.String,System.Boolean)">
            <summary>
            Initializes a new instance of the <b>RegistryState</b> class, using the key name, the names of its values, and a value indicating whether to use the application’s form thread to process the events.
            </summary>
            <remarks>
            Use the application’s form thread if you want to manipulate the user interface using an event.
            </remarks>
            <param name="key">The string value of the registry key.</param>
            <param name="valueName">The string name of the value.</param>
            <param name="useFormThread">A value indicating whether to use the application's form thread for event processing. If your application does not contain a form, then set this value to <b>false</b>.
            </param>
        </member>
        <member name="M:Microsoft.WindowsMobile.Status.RegistryState.Finalize">
            <summary>
            Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources, and performs other cleanup operations before garbage collection is performed.
            </summary>
        </member>
        <member name="M:Microsoft.WindowsMobile.Status.RegistryState.CreateConditionPointers(System.IntPtr@,System.IntPtr@)">
            <summary>
            Creates the pointer for conditionals. Used on the native side.
            </summary>
            <param name="condition">pointer to the condition on the native side</param>
            <param name="allocatedString">pointer to the string allocated in the condition.  
            This is so we can free this later</param>
        </member>
        <member name="M:Microsoft.WindowsMobile.Status.RegistryState.CleanupConditionPointers(System.IntPtr@,System.IntPtr@)">
            <summary>
            Cleans up the pointers received from <b>CreateConditionPointers</b>.
            </summary>
            <param name="condition">the pointer to the native condition</param>
            <param name="allocatedString">the pointer to the native allocated string.  this can be NULL</param>
        </member>
        <member name="M:Microsoft.WindowsMobile.Status.RegistryState.RegisterTransient">
            <summary>
            Enable the event.
            </summary>
        </member>
        <member name="M:Microsoft.WindowsMobile.Status.RegistryState.UnregisterTransient">
            <summary>
            Disable the event.
            </summary>
        </member>
        <member name="M:Microsoft.WindowsMobile.Status.RegistryState.RegisterPersistent(System.String,System.String,System.String)">
            <summary>
            Enable the event.
            </summary>
        </member>
        <member name="M:Microsoft.WindowsMobile.Status.RegistryState.UnregisterPersistent(System.String)">
            <summary>
            Disable the event.
            </summary>
        </member>
        <member name="M:Microsoft.WindowsMobile.Status.RegistryState.GetRootAndSubkey(System.IntPtr@,System.String@)">
            <summary>
            Given the current Key and ValueName, gets the pointer to the root Key and the string of the subkey underneath.
            </summary>
            <param name="rootKey">Pointer to the root key</param>
            <param name="subKey">the subkey under that root key</param>
        </member>
        <member name="M:Microsoft.WindowsMobile.Status.RegistryState.GetRegistryValue">
            <summary>
            Returns the value from the registry represented by the key and value name of this instance.
            </summary>
            <returns>value of the registry</returns>
        </member>
        <member name="M:Microsoft.WindowsMobile.Status.RegistryState.ValidateChangeableComparisonState">
            <summary>
            This method should be called whenever the comparison condition changes.
            It will throw an exception if the registry state is already persistent or 
            transient. 
            </summary>
            <exception cref="T:Microsoft.WindowsMobile.Status.StateException">
            Thrown if ValidateChangeableComparisonState is called after calling 
            EnableApplicationLauncher or after
            registering an event handler with the Changed event.
            </exception> 
        </member>
        <member name="M:Microsoft.WindowsMobile.Status.RegistryState.Dispose">
            <summary>
            Disposes a <b>RegistryState</b>.
            </summary>
            <remarks>
            Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources. Disables finalization by the garbage collector by a calling <b>GC.SuppressFinalize(this)</b>.
            </remarks>
        </member>
        <member name="M:Microsoft.WindowsMobile.Status.RegistryState.IsApplicationLauncherEnabled(System.String)">
            <summary>
            Gets a value indicating whether the Application Launcher has been enabled for the specified Application Launch ID.
            </summary>
            <param name="applicationLaunchId">id of the ApplicationLauncher to enquire about.</param>
            <returns>True: enabled, False: not enabled</returns>
        </member>
        <member name="M:Microsoft.WindowsMobile.Status.RegistryState.DisableApplicationLauncher(System.String)">
            <summary>
            Disables the Application Launcher with the specified Application Launch ID.
            </summary>
            <remarks>
            It will no longer launch the application that it was associated with.
            </remarks>
            <param name="applicationLaunchId">The ID of the ApplicationLauncher.</param>
        </member>
        <member name="M:Microsoft.WindowsMobile.Status.RegistryState.EnableApplicationLauncher(System.String,System.String,System.String)">
            <summary>
            Enables the Application Launcher with the specified Application Launch ID, file name, and argument list.
            </summary>
            <remarks>
            When the event occurs, the application is launched.
            </remarks>
            <param name="applicationLaunchId">The ID of the Application Launcher.</param>
            <param name="applicationFileName">The fully qualified path-name of the application to launch.</param>
            <param name="arguments">A string of any arguments to pass to the application.</param>
        </member>
        <member name="M:Microsoft.WindowsMobile.Status.RegistryState.EnableApplicationLauncher(System.String,System.String)">
            <summary>
            Enables the Application Launcher with the specified Application Launch ID and file name.
            </summary>
            <remarks>
            When the event occurs, the application launches with <i>/notify 'applicationLaunchId'</i> passed as its command-line parameter.
            </remarks>
            <param name="applicationLaunchId">The ID of the Application Launcher.</param>
            <param name="applicationFileName">The fully qualified path-name of the application to launch.</param>
        </member>
        <member name="M:Microsoft.WindowsMobile.Status.RegistryState.EnableApplicationLauncher(System.String)">
            <summary>
            Enables the Application Launcher with the specified Application Launch ID.
            </summary>
            <remarks>
            When the event occurs, the application launches with <i>/notify 'applicationLaunchId'</i> passed as its command-line parameter.
            </remarks>
            <param name="applicationLaunchId">The ID of the Application Launcher.</param>
        </member>
        <member name="M:Microsoft.WindowsMobile.Status.RegistryState.DisableApplicationLauncher">
            <summary>
            Disables the Application Launcher for this instance.
            </summary>
            <remarks>
            The Application Launcher will no longer launch the application that it was associated with.
            </remarks>
        </member>
        <member name="P:Microsoft.WindowsMobile.Status.RegistryState.Key">
            <summary>
            Gets the string value of the registry key (for example, <b>HKEY_LOCAL_MACHINE\SOFTWARE</b>).
            </summary>
        </member>
        <member name="P:Microsoft.WindowsMobile.Status.RegistryState.ValueName">
            <summary>
            Gets the string name of the value under the key.
            </summary>
        </member>
        <member name="P:Microsoft.WindowsMobile.Status.RegistryState.CurrentValue">
            <summary>
            Gets or sets the current value of the registry key and value pair.
            </summary>
        </member>
        <member name="P:Microsoft.WindowsMobile.Status.RegistryState.ComparisonType">
             <summary>
             Gets or sets the type of comparison operation.
             </summary>
             <exception cref="T:Microsoft.WindowsMobile.Status.StateException">
             The exception that is thrown when <b>ComparisonType</b> is set after calling <b>EnableApplicationLauncher</b>, or after
             registering an event handler with the <b>Changed</b> event.
             </exception>             
             <example>
             The following example shows how to enable the Changed event to be raised when 
             "MyValue" under "HKEY_LOCAL_MACHINE\\MyKey" changes and is greater than 50:
             <code>
             RegistryState myState = new RegistryState("HKEY_LOCAL_MACHINE\\MyKey", "MyValue");
            
             private void Form1_Load(object sender, EventArgs e)
             {
                  myState.ComparisonType = StatusComparisonType.Greater;
                  myState.ComparisonValue = 50;
                  myState.Changed += new ChangeEventHandler(myState_Changed);
            
             }
             </code>
             </example>
        </member>
        <member name="P:Microsoft.WindowsMobile.Status.RegistryState.ComparisonValue">
             <summary>
             Gets or sets the comparison value.
             </summary>
             <remarks>
             You must initialize <b>ComparisonValue</b> with either an integer or a string value. 
             To initialize it with an enumeration value, you must cast the value as either (int) or (string).
             </remarks>
             <exception cref="T:Microsoft.WindowsMobile.Status.StateException">
             The exception that is thrown when <b>ComparisonValue</b> is set after calling <b>EnableApplicationLauncher</b>, or after
             registering an event handler with the <b>Changed</b> event.
             </exception> 
             <example>
             The following example shows how to enable the Changed event to be raised when 
             "MyValue" under "HKEY_LOCAL_MACHINE\\MyKey" changes and is greater than 50:
             <code>
             RegistryState myState = new RegistryState("HKEY_LOCAL_MACHINE\\MyKey", "MyValue");
            
             private void Form1_Load(object sender, EventArgs e)
             {
                  myState.ComparisonType = StatusComparisonType.Greater;
                  myState.ComparisonValue = 50;
                  myState.Changed += new ChangeEventHandler(myState_Changed);
            
             }
             </code>
             </example>
        </member>
        <member name="P:Microsoft.WindowsMobile.Status.RegistryState.BitMask">
            <summary>
            Gets or sets the optional bitmask to use for an integer comparison.
            </summary>
            <exception cref="T:Microsoft.WindowsMobile.Status.StateException">
            Thrown if BitMask is set after calling EnableApplicationLauncher or after
            registering an event handler with the Changed event.
            </exception> 
        </member>
        <member name="E:Microsoft.WindowsMobile.Status.RegistryState.Changed">
             <summary>
             Event that is raised when a value changes.
             </summary>
             <example>
             The following example shows how to enable the Changed event to be raised when the value "MyValue"
             changes under the key "HKEY_LOCAL_MACHINE\\MyKey": 
             <code>
            RegistryState myState = new RegistryState("HKEY_LOCAL_MACHINE\\MyKey", "MyValue");
            
            private void Form1_Load(object sender, EventArgs e)
            {
                myState.Changed += new ChangeEventHandler(myState_Changed);
            
            }
            
            void myState_Changed(object sender, ChangeEventArgs args)
            {
                object myStateValue = args.NewValue;
            }
             </code>
             </example>
        </member>
        <member name="P:Microsoft.WindowsMobile.Status.RegistryState.ApplicationArguments">
            <summary>
            Gets the arguments passed to the application if the Application Launcher is enabled.
            </summary>
        </member>
        <member name="P:Microsoft.WindowsMobile.Status.RegistryState.ApplicationToLaunch">
            <summary>
            Gets the name of the application to launch if the Application Launcher is enabled.
            </summary>
        </member>
        <member name="P:Microsoft.WindowsMobile.Status.RegistryState.ApplicationLaunchId">
            <summary>
            Gets the unique ID for the <b>RegistryState</b>.
            </summary>
        </member>
        <member name="T:Microsoft.WindowsMobile.Status.RegistryState.RegistrationResult">
            <summary>
            Specifies the error codes returned from the <b>RegExt</b> functions.
            </summary>
        </member>
        <member name="T:Microsoft.WindowsMobile.Status.RegistryValuePath">
            <summary>
             Represents a key and value name
            </summary>
        </member>
        <member name="T:Microsoft.WindowsMobile.Status.SystemProperty">
            <summary>
             Specifies the device-wide system properties
            </summary>  
        </member>
        <member name="F:Microsoft.WindowsMobile.Status.SystemProperty.ActiveApplication">
            <summary>
             Gets the name of the application that was previously active and the name of the application that is currently active, separated by the 'Escape' character ('\e').
            </summary>    
        </member>
        <member name="F:Microsoft.WindowsMobile.Status.SystemProperty.DisplayRotation">
            <summary>
             Gets the orientation of the display, specified as the number of degrees, ranging from 0 to 360. Portrait = 0. Landscape = 90 or -90. 
            </summary>    
        </member>
        <member name="F:Microsoft.WindowsMobile.Status.SystemProperty.KeyboardPresent">
            <summary>
             Gets a value indicating whether a keyboard is attached and enabled. 
            </summary>    
        </member>
        <member name="F:Microsoft.WindowsMobile.Status.SystemProperty.CradlePresent">
            <summary>
             Gets a value indicating whether the device is connected to a cradle. 
            </summary>    
        </member>
        <member name="F:Microsoft.WindowsMobile.Status.SystemProperty.CameraPresent">
            <summary>
             Gets a value indicating whether a camera is attached. 
            </summary>    
        </member>
        <member name="F:Microsoft.WindowsMobile.Status.SystemProperty.MessagingSmsUnread">
            <summary>
             Gets the number of unread SMS messages. 
            </summary>    
        </member>
        <member name="F:Microsoft.WindowsMobile.Status.SystemProperty.MessagingMmsUnread">
            <summary>
             Gets the number of unread MMS messages 
            </summary>    
        </member>
        <member name="F:Microsoft.WindowsMobile.Status.SystemProperty.MessagingVoiceMailTotalUnread">
            <summary>
             Gets the number of unplayed voice mail messages. 
            </summary>    
        </member>
        <member name="F:Microsoft.WindowsMobile.Status.SystemProperty.MessagingVoiceMail1Unread">
            <summary>
             Gets the number of unplayed voice mail messages for line 1. 
            </summary>    
        </member>
        <member name="F:Microsoft.WindowsMobile.Status.SystemProperty.MessagingVoiceMail2Unread">
            <summary>
             Gets the number of unplayed voice mail messages for line 2 
            </summary>    
        </member>
        <member name="F:Microsoft.WindowsMobile.Status.SystemProperty.MessagingActiveSyncEmailUnread">
            <summary>
             Gets the number of unread ActiveSync e-mail messages. 
            </summary>    
        </member>
        <member name="F:Microsoft.WindowsMobile.Status.SystemProperty.MessagingTotalEmailUnread">
            <summary>
             Gets the total number of unread e-mail messages from all POP3/IMAP accounts. 
            </summary>    
        </member>
        <member name="F:Microsoft.WindowsMobile.Status.SystemProperty.MessagingOtherEmailUnread">
            <summary>
             Gets the number of unread e-mail messages from all non-ActiveSync messaging accounts. 
            </summary>    
        </member>
        <member name="F:Microsoft.WindowsMobile.Status.SystemProperty.MessagingLastEmailAccountName">
            <summary>
             Gets the name of the e-mail account that was last active. 
            </summary>    
        </member>
        <member name="F:Microsoft.WindowsMobile.Status.SystemProperty.MessagingSmsAccountName">
            <summary>
             Gets the name of the SMS messaging account. 
            </summary>    
        </member>
        <member name="F:Microsoft.WindowsMobile.Status.SystemProperty.MessagingMmsAccountName">
            <summary>
             Gets the name of the MMS messaging account. 
            </summary>    
        </member>
        <member name="F:Microsoft.WindowsMobile.Status.SystemProperty.MessagingActiveSyncAccountName">
            <summary>
             Get the name of the Outlook e-mail messaging account. 
            </summary>    
        </member>
        <member name="F:Microsoft.WindowsMobile.Status.SystemProperty.TasksActive">
            <summary>
             Gets the number of active tasks.  
            </summary>    
        </member>
        <member name="F:Microsoft.WindowsMobile.Status.SystemProperty.TasksHighPriority">
            <summary>
             Gets the number of high priority tasks that are currently active. 
            </summary>    
        </member>
        <member name="F:Microsoft.WindowsMobile.Status.SystemProperty.TasksDueToday">
            <summary>
             Gets the number of active tasks that are due today.  
            </summary>    
        </member>
        <member name="F:Microsoft.WindowsMobile.Status.SystemProperty.TasksOverdue">
            <summary>
             Gets the number of overdue tasks.  
            </summary>    
        </member>
        <member name="F:Microsoft.WindowsMobile.Status.SystemProperty.CalendarNextAppointmentSubject">
            <summary>
             Gets the subject of the next Appointment. 
            </summary>    
        </member>
        <member name="F:Microsoft.WindowsMobile.Status.SystemProperty.CalendarNextAppointmentLocation">
            <summary>
             Gets the location of the next Appointment. 
            </summary>    
        </member>
        <member name="F:Microsoft.WindowsMobile.Status.SystemProperty.CalendarNextAppointmentStart">
            <summary>
             Gets the starting time of the next Appointment. 
            </summary>    
        </member>
        <member name="F:Microsoft.WindowsMobile.Status.SystemProperty.CalendarNextAppointmentEnd">
            <summary>
             Gets the ending time of the next Appointment. 
            </summary>    
        </member>
        <member name="F:Microsoft.WindowsMobile.Status.SystemProperty.MediaPlayerAlbumArtist">
            <summary>
             Gets the album artist's name of the currently playing track in Windows Media Player. 
            </summary>    
        </member>
        <member name="F:Microsoft.WindowsMobile.Status.SystemProperty.MediaPlayerTrackBitrate">
            <summary>
             Gets the title of the track currently playing in Windows Media Player. For example, "128Kbps" 
            </summary>    
        </member>
        <member name="F:Microsoft.WindowsMobile.Status.SystemProperty.MediaPlayerTrackTitle">
            <summary>
             Gets the title of the track currently playing in Windows Media Player. 
            </summary>    
        </member>
        <member name="F:Microsoft.WindowsMobile.Status.SystemProperty.MediaPlayerAlbumTitle">
            <summary>
             Gets the album title of the currently playing track in Windows Media Player. 
            </summary>    
        </member>
        <member name="F:Microsoft.WindowsMobile.Status.SystemProperty.MediaPlayerTrackArtist">
            <summary>
             Gets the artist's name of the currently playing track in Windows Media Player. 
            </summary>    
        </member>
        <member name="F:Microsoft.WindowsMobile.Status.SystemProperty.MediaPlayerTrackNumber">
            <summary>
             Gets the number of the current track playing in Windows Media Player. 
            </summary>    
        </member>
        <member name="F:Microsoft.WindowsMobile.Status.SystemProperty.MediaPlayerTrackGenre">
            <summary>
             Gets the genre of the currently playing track in Windows Media Player. 
            </summary>    
        </member>
        <member name="F:Microsoft.WindowsMobile.Status.SystemProperty.MediaPlayerTrackTimeElapsed">
            <summary>
             Gets the elapsed time (in milliseconds) of the currently playing track in Windows Media Player. 
            </summary>    
        </member>
        <member name="F:Microsoft.WindowsMobile.Status.SystemProperty.PowerBatteryStrength">
            <summary>
             Gets the remaining battery power level, expressed as a percentage of <i>fully charged</i>. 
            </summary>    
        </member>
        <member name="F:Microsoft.WindowsMobile.Status.SystemProperty.PowerBatteryState">
            <summary>
             Gets the current battery state (for example, it is low, and charging). This enumeration allows a bitwise combination of its member values. 
            </summary>    
        </member>
        <member name="F:Microsoft.WindowsMobile.Status.SystemProperty.PowerBatteryBackupStrength">
            <summary>
             Gets the remaining backup battery power level, expressed as a percentage of <i>fully charged</i>. 
            </summary>    
        </member>
        <member name="F:Microsoft.WindowsMobile.Status.SystemProperty.PowerBatteryBackupState">
            <summary>
             Gets the current backup battery state (for example, it is low, and charging). This enumeration allows a bitwise combination of its member values. 
            </summary>    
        </member>
        <member name="F:Microsoft.WindowsMobile.Status.SystemProperty.Time">
            <summary>
             Gets the current time. This Date/Time value updates once per minute. 
            </summary>    
        </member>
        <member name="F:Microsoft.WindowsMobile.Status.SystemProperty.Date">
            <summary>
             Gets the current date. This Date/Time value changes once per day. Monitor this property to perform actions on a daily basis. <b>Note</b>: Do not use <b>Date</b> to get an accurate clock time; instead, use <b>Time</b>. 
            </summary>    
        </member>
        <member name="F:Microsoft.WindowsMobile.Status.SystemProperty.PhoneSignalStrength">
            <summary>
             Get the phone signal strength, expressed as a percentage of full strength. 
            </summary>    
        </member>
        <member name="F:Microsoft.WindowsMobile.Status.SystemProperty.PhoneOperatorName">
            <summary>
              Gets the name of the mobile operator (i.e., the mobile phone company, or carrier). 
            </summary>    
        </member>
        <member name="F:Microsoft.WindowsMobile.Status.SystemProperty.PhoneTalkingCallerName">
            <summary>
             Gets the name of the person you are talking to on the phone. This value is not set when you are talking on a conference call. 
            </summary>    
        </member>
        <member name="F:Microsoft.WindowsMobile.Status.SystemProperty.PhoneActiveCallCount">
            <summary>
              Gets the number of active phone calls. 
            </summary>    
        </member>
        <member name="F:Microsoft.WindowsMobile.Status.SystemProperty.PhoneProfileName">
            <summary>
             Gets the localized name of the current sound profile. (Smartphone only) 
            </summary>    
        </member>
        <member name="F:Microsoft.WindowsMobile.Status.SystemProperty.PhoneProfile">
            <summary>
             Gets the non-localized name of the current sound profile. For example, "Normal", "Silent", "Car", "Headset", "Loud", "Meeting", or "Speakerphone". (Smartphone only) 
            </summary>    
        </member>
        <member name="F:Microsoft.WindowsMobile.Status.SystemProperty.PhoneCellBroadcast">
            <summary>
             Gets the cell broadcast message 
            </summary>    
        </member>
        <member name="F:Microsoft.WindowsMobile.Status.SystemProperty.CalendarNextAppointmentHasConflict">
            <summary>
             Gets a value indicating whether there is a conflict with the next Appointment. 
            </summary>    
        </member>
        <member name="F:Microsoft.WindowsMobile.Status.SystemProperty.OwnerName">
            <summary>
              Gets the mobile device owner's name. 
            </summary>    
        </member>
        <member name="F:Microsoft.WindowsMobile.Status.SystemProperty.OwnerPhoneNumber">
            <summary>
              Gets the mobile device owner's phone number. 
            </summary>    
        </member>
        <member name="F:Microsoft.WindowsMobile.Status.SystemProperty.OwnerEmail">
            <summary>
             Gets the mobile device owner's e-mail address. 
            </summary>    
        </member>
        <member name="F:Microsoft.WindowsMobile.Status.SystemProperty.OwnerNotes">
            <summary>
              Gets the text notes entered by the owner of the mobile device. 
            </summary>    
        </member>
        <member name="F:Microsoft.WindowsMobile.Status.SystemProperty.ActiveSyncStatus">
            <summary>
             Gets ActiveSync's current synchronization state. 
            </summary>    
        </member>
        <member name="F:Microsoft.WindowsMobile.Status.SystemProperty.PhoneMissedCalls">
            <summary>
             Gets the number of missed phone calls. 
            </summary>    
        </member>
        <member name="F:Microsoft.WindowsMobile.Status.SystemProperty.HeadsetPresent">
            <summary>
              Gets a value indicating whether a headset is present 
            </summary>    
        </member>
        <member name="F:Microsoft.WindowsMobile.Status.SystemProperty.CarKitPresent">
            <summary>
              Gets a value indicating whether a car kit is present 
            </summary>    
        </member>
        <member name="F:Microsoft.WindowsMobile.Status.SystemProperty.SpeakerPhoneActive">
            <summary>
              Gets a value indicating whether the speakerphone is active 
            </summary>    
        </member>
        <member name="F:Microsoft.WindowsMobile.Status.SystemProperty.PhoneMultiLine">
            <summary>
             Gets a value indicating whether the phone supports multiple lines. 
            </summary>    
        </member>
        <member name="F:Microsoft.WindowsMobile.Status.SystemProperty.PhoneSimFull">
            <summary>
              Gets a value indicating whether the Subscriber Identity Module (SIM) memory is full. 
            </summary>    
        </member>
        <member name="F:Microsoft.WindowsMobile.Status.SystemProperty.PhoneNoSim">
            <summary>
              Gets a value indicating whether the Subscriber Identity Module (SIM) is installed in the mobile device. 
            </summary>    
        </member>
        <member name="F:Microsoft.WindowsMobile.Status.SystemProperty.PhoneInvalidSim">
            <summary>
              Gets a value indicating whether the Subscriber Identity Module (SIM) is invalid. 
            </summary>    
        </member>
        <member name="F:Microsoft.WindowsMobile.Status.SystemProperty.PhoneBlockedSim">
            <summary>
              Gets a value indicating whether the Subscriber Identity Module (SIM) is blocked. 
            </summary>    
        </member>
        <member name="F:Microsoft.WindowsMobile.Status.SystemProperty.PhoneRadioOff">
            <summary>
             Gets a value indicating whether the phone's radio is turned off. 
            </summary>    
        </member>
        <member name="F:Microsoft.WindowsMobile.Status.SystemProperty.PhoneRadioPresent">
            <summary>
              Gets a value indicating whether the mobile device has a phone. 
            </summary>    
        </member>
        <member name="F:Microsoft.WindowsMobile.Status.SystemProperty.PhoneRingerOff">
            <summary>
             Gets a value indicating whether the phone's ringer is off (i.e., if it rings and/or vibrates). 
            </summary>    
        </member>
        <member name="F:Microsoft.WindowsMobile.Status.SystemProperty.PhoneLine1Selected">
            <summary>
              Gets a value indicating whether line 1 is selected. 
            </summary>    
        </member>
        <member name="F:Microsoft.WindowsMobile.Status.SystemProperty.PhoneLine2Selected">
            <summary>
              Gets a value indicating whether line 2 is selected. 
            </summary>    
        </member>
        <member name="F:Microsoft.WindowsMobile.Status.SystemProperty.PhoneRoaming">
            <summary>
              Gets a value indicating whether the phone is currently in roaming mode. 
            </summary>    
        </member>
        <member name="F:Microsoft.WindowsMobile.Status.SystemProperty.PhoneCallForwardingOnLine1">
            <summary>
              Gets a value indicating whether call forwarding is enabled on line 1. 
            </summary>    
        </member>
        <member name="F:Microsoft.WindowsMobile.Status.SystemProperty.PhoneMissedCall">
            <summary>
              Gets a value indicating whether there was a new missed call. 
            </summary>    
        </member>
        <member name="F:Microsoft.WindowsMobile.Status.SystemProperty.PhoneActiveDataCall">
            <summary>
              Gets a value indicating whether the phone has an active cellular data connection. 
            </summary>    
        </member>
        <member name="F:Microsoft.WindowsMobile.Status.SystemProperty.PhoneCallBarring">
            <summary>
              Gets a value indicating whether the call barring feature is enabled. 
            </summary>    
        </member>
        <member name="F:Microsoft.WindowsMobile.Status.SystemProperty.PhoneCallOnHold">
            <summary>
             Gets a value indicating whether a phone call is currently on hold. 
            </summary>    
        </member>
        <member name="F:Microsoft.WindowsMobile.Status.SystemProperty.PhoneConferenceCall">
            <summary>
              Gets a value indicating whether a conference call is currently in progress. 
            </summary>    
        </member>
        <member name="F:Microsoft.WindowsMobile.Status.SystemProperty.PhoneIncomingCall">
            <summary>
              Gets a value indicating whether there is an incoming (ringing) call. 
            </summary>    
        </member>
        <member name="F:Microsoft.WindowsMobile.Status.SystemProperty.PhoneCallCalling">
            <summary>
             Gets a value indicating whether the phone is currently attempting to connect an outgoing call. 
            </summary>    
        </member>
        <member name="F:Microsoft.WindowsMobile.Status.SystemProperty.PhoneGprsCoverage">
            <summary>
              Gets a value indicating whether the phone currently has GPRS coverage. 
            </summary>    
        </member>
        <member name="F:Microsoft.WindowsMobile.Status.SystemProperty.PhoneNoService">
            <summary>
              Gets a value indicating whether the phone is not currently connected to a network. 
            </summary>    
        </member>
        <member name="F:Microsoft.WindowsMobile.Status.SystemProperty.PhoneSearchingForService">
            <summary>
              Gets a value indicating whether the phone is currently searching for service on a network. 
            </summary>    
        </member>
        <member name="F:Microsoft.WindowsMobile.Status.SystemProperty.PhoneHomeService">
            <summary>
              Gets a value indicating whether the phone is currently registered on its home network. 
            </summary>    
        </member>
        <member name="F:Microsoft.WindowsMobile.Status.SystemProperty.Phone1xRttCoverage">
            <summary>
              Gets a value indicating whether the phone currently has 1xRTT coverage. 
            </summary>    
        </member>
        <member name="F:Microsoft.WindowsMobile.Status.SystemProperty.PhoneCallTalking">
            <summary>
              Gets a value indicating whether there is currently a phone call in the talking state. 
            </summary>    
        </member>
        <member name="F:Microsoft.WindowsMobile.Status.SystemProperty.PhoneCallForwardingOnLine2">
            <summary>
              Gets a value indicating whether call forwarding is currently active on line 2. 
            </summary>    
        </member>
        <member name="F:Microsoft.WindowsMobile.Status.SystemProperty.CalendarNextAppointment">
            <summary>
             Gets the next Appointment. 
            </summary>    
        </member>
        <member name="F:Microsoft.WindowsMobile.Status.SystemProperty.CalendarNextAppointmentBusyStatus">
            <summary>
             Gets the user's availability (e.g., Free, Busy, Tenative, Out of Office) status for the next Appointment. 
            </summary>    
        </member>
        <member name="F:Microsoft.WindowsMobile.Status.SystemProperty.CalendarNextAppointmentCategories">
            <summary>
             Gets the next Appointment's categories. 
            </summary>    
        </member>
        <member name="F:Microsoft.WindowsMobile.Status.SystemProperty.CalendarAppointment">
            <summary>
             Gets the current Appointment. 
            </summary>    
        </member>
        <member name="F:Microsoft.WindowsMobile.Status.SystemProperty.CalendarAppointmentSubject">
            <summary>
             Gets the current Appointment's subject. 
            </summary>    
        </member>
        <member name="F:Microsoft.WindowsMobile.Status.SystemProperty.CalendarAppointmentLocation">
            <summary>
             Gets the current Appointment's location. 
            </summary>    
        </member>
        <member name="F:Microsoft.WindowsMobile.Status.SystemProperty.CalendarAppointmentStartTime">
            <summary>
             Gets the current Appointment's starting time. 
            </summary>    
        </member>
        <member name="F:Microsoft.WindowsMobile.Status.SystemProperty.CalendarAppointmentEndTime">
            <summary>
             Gets the current Appointment's ending time. 
            </summary>    
        </member>
        <member name="F:Microsoft.WindowsMobile.Status.SystemProperty.CalendarAppointmentHasConflict">
            <summary>
             Gets a value indicating whether the current Appointment has a scheduling conflict with an existing Appointment. 
            </summary>    
        </member>
        <member name="F:Microsoft.WindowsMobile.Status.SystemProperty.CalendarAppointmentBusyStatus">
            <summary>
             Gets the user's availability (free/busy status) for the time-slot taken by the current Appointment. 
            </summary>    
        </member>
        <member name="F:Microsoft.WindowsMobile.Status.SystemProperty.CalendarAppointmentCategories">
            <summary>
             Gets the current Appointment's categories. 
            </summary>    
        </member>
        <member name="F:Microsoft.WindowsMobile.Status.SystemProperty.CalendarHomeScreenAppointment">
            <summary>
             Gets the Appointment that is currently displayed on the Home Screen. 
            </summary>    
        </member>
        <member name="F:Microsoft.WindowsMobile.Status.SystemProperty.CalendarHomeScreenAppointmentSubject">
            <summary>
             Gets the subject of the Appointment that is currently displayed on the Home Screen. 
            </summary>    
        </member>
        <member name="F:Microsoft.WindowsMobile.Status.SystemProperty.CalendarHomeScreenAppointmentLocation">
            <summary>
             Gets the location of the Appointment that is currently displayed on the Home Screen. 
            </summary>    
        </member>
        <member name="F:Microsoft.WindowsMobile.Status.SystemProperty.CalendarHomeScreenAppointmentStartTime">
            <summary>
             Gets the starting time of the Appointment that is currently displayed on the Home Screen. 
            </summary>    
        </member>
        <member name="F:Microsoft.WindowsMobile.Status.SystemProperty.CalendarHomeScreenAppointmentEndTime">
            <summary>
             Gets the ending time of the Appointment that is currently displayed on the Home Screen. 
            </summary>    
        </member>
        <member name="F:Microsoft.WindowsMobile.Status.SystemProperty.CalendarHomeScreenAppointmentHasConflict">
            <summary>
             Gets a value indicating whether the Appointment that is currently displayed on the Home Screen has a scheduling conflict. 
            </summary>    
        </member>
        <member name="F:Microsoft.WindowsMobile.Status.SystemProperty.CalendarHomeScreenAppointmentBusyStatus">
            <summary>
             Gets the user's availability (free/busy status) for the Appointment displayed on the Home Screen. 
            </summary>    
        </member>
        <member name="F:Microsoft.WindowsMobile.Status.SystemProperty.CalendarHomeScreenAppointmentCategories">
            <summary>
             Gets the categories of the Appointment that is currently displayed on the Home Screen. 
            </summary>    
        </member>
        <member name="F:Microsoft.WindowsMobile.Status.SystemProperty.PhoneIncomingCallerName">
            <summary>
             Gets the name of the person who is currently placing the incoming call. 
            </summary>    
        </member>
        <member name="F:Microsoft.WindowsMobile.Status.SystemProperty.PhoneLastIncomingCallerName">
            <summary>
             Gets the name of the last caller to place an incoming call. 
            </summary>    
        </member>
        <member name="F:Microsoft.WindowsMobile.Status.SystemProperty.PhoneIncomingCallerNumber">
            <summary>
             Gets the incoming call's phone number (Caller ID). 
            </summary>    
        </member>
        <member name="F:Microsoft.WindowsMobile.Status.SystemProperty.PhoneLastIncomingCallerNumber">
            <summary>
             Gets the last incoming call's phone number (Caller ID). 
            </summary>    
        </member>
        <member name="F:Microsoft.WindowsMobile.Status.SystemProperty.PhoneIncomingCallerContactPropertyName">
            <summary>
             Gets the name of the property that matches the Caller ID, e.g. "h" for "Home Telephone". 
            </summary>    
        </member>
        <member name="F:Microsoft.WindowsMobile.Status.SystemProperty.PhoneLastIncomingCallerContactPropertyName">
            <summary>
             Gets the name of the property that matches the last Caller ID, e.g. "h" for "Home Telephone". 
            </summary>    
        </member>
        <member name="F:Microsoft.WindowsMobile.Status.SystemProperty.PhoneIncomingCallerContactPropertyID">
            <summary>
             Gets the CEPROPID of the property that matches the Caller ID, for example, PIMPR_HOME_TELEPHONE_NUMBER. 
            </summary>    
        </member>
        <member name="F:Microsoft.WindowsMobile.Status.SystemProperty.PhoneLastIncomingCallerContactPropertyID">
            <summary>
             Gets the CEPROPID of the property that matches the last Caller ID, for example, PIMPR_HOME_TELEPHONE_NUMBER. 
            </summary>    
        </member>
        <member name="F:Microsoft.WindowsMobile.Status.SystemProperty.PhoneIncomingCallerContact">
            <summary>
             Gets the Contact that matches the Caller ID. 
            </summary>    
        </member>
        <member name="F:Microsoft.WindowsMobile.Status.SystemProperty.PhoneLastIncomingCallerContact">
            <summary>
             Gets the Contact that matches the last Caller ID. 
            </summary>    
        </member>
        <member name="F:Microsoft.WindowsMobile.Status.SystemProperty.PhoneTalkingCallerNumber">
            <summary>
             Gets the currently connected caller's phone number. 
            </summary>    
        </member>
        <member name="F:Microsoft.WindowsMobile.Status.SystemProperty.PhoneTalkingCallerContactPropertyName">
            <summary>
             Gets the name of the property of the contact who is on the active phone call, e.g. "h" for "Home Telephone". 
            </summary>    
        </member>
        <member name="F:Microsoft.WindowsMobile.Status.SystemProperty.PhoneTalkingCallerContactPropertyID">
            <summary>
             Gets the CEPROPID of the property of the contact who is on the active phone call, for example, PIMPR_HOME_TELEPHONE_NUMBER. 
            </summary>    
        </member>
        <member name="F:Microsoft.WindowsMobile.Status.SystemProperty.PhoneTalkingCallerContact">
            <summary>
             Gets the contact who is on the active phone call. 
            </summary>    
        </member>
        <member name="F:Microsoft.WindowsMobile.Status.SystemProperty.ConnectionsCount">
            <summary>
             Gets a value indicating the number of connections that are currently connected. 
            </summary>    
        </member>
        <member name="F:Microsoft.WindowsMobile.Status.SystemProperty.ConnectionsBluetoothCount">
            <summary>
             Gets a value indicating the number of Bluetooth connections that are currently connected. 
            </summary>    
        </member>
        <member name="F:Microsoft.WindowsMobile.Status.SystemProperty.ConnectionsBluetoothDescriptions">
            <summary>
             Gets a semicolon delimited string containing the description of each of the Bluetooth connections. 
            </summary>    
        </member>
        <member name="F:Microsoft.WindowsMobile.Status.SystemProperty.ConnectionsCellularCount">
            <summary>
             Gets a value indicating the number of cellular connections that are currently connected. 
            </summary>    
        </member>
        <member name="F:Microsoft.WindowsMobile.Status.SystemProperty.ConnectionsCellularDescriptions">
            <summary>
             Gets a semicolon delimited string containing the description of each cellular connection. 
            </summary>    
        </member>
        <member name="F:Microsoft.WindowsMobile.Status.SystemProperty.ConnectionsNetworkCount">
            <summary>
             Gets a value indicating the number of network connections that are currently connected. 
            </summary>    
        </member>
        <member name="F:Microsoft.WindowsMobile.Status.SystemProperty.ConnectionsNetworkDescriptions">
            <summary>
             Gets a semicolon delimited string containing the description of each network connection. 
            </summary>    
        </member>
        <member name="F:Microsoft.WindowsMobile.Status.SystemProperty.ConnectionsNetworkAdapters">
            <summary>
             Gets a semicolon delimited string containing the adapter name of each network connection. 
            </summary>    
        </member>
        <member name="F:Microsoft.WindowsMobile.Status.SystemProperty.ConnectionsDesktopCount">
            <summary>
             Gets a value indicating the number of desktop connections that are currently connected. 
            </summary>    
        </member>
        <member name="F:Microsoft.WindowsMobile.Status.SystemProperty.ConnectionsDesktopDescriptions">
            <summary>
             Gets a semicolon delimited string containing the description of each desktop connection. 
            </summary>    
        </member>
        <member name="F:Microsoft.WindowsMobile.Status.SystemProperty.ConnectionsProxyCount">
            <summary>
             Gets a value indicating the number of network connections that are currently connected. 
            </summary>    
        </member>
        <member name="F:Microsoft.WindowsMobile.Status.SystemProperty.ConnectionsProxyDescriptions">
            <summary>
             Gets a semicolon delimited string containing the description of each proxy connection. 
            </summary>    
        </member>
        <member name="F:Microsoft.WindowsMobile.Status.SystemProperty.ConnectionsModemCount">
            <summary>
             Gets a value indicating the number of modem connections that are currently connected. 
            </summary>    
        </member>
        <member name="F:Microsoft.WindowsMobile.Status.SystemProperty.ConnectionsModemDescriptions">
            <summary>
             Gets a semicolon delimited string containing the description of each modem connection. 
            </summary>    
        </member>
        <member name="F:Microsoft.WindowsMobile.Status.SystemProperty.ConnectionsUnknownCount">
            <summary>
             Gets a value indicating the number of connections of unknown type that are currently connected. 
            </summary>    
        </member>
        <member name="F:Microsoft.WindowsMobile.Status.SystemProperty.ConnectionsUnknownDescriptions">
            <summary>
             Gets a semicolon delimited string containing the description of each connections of unknown type. 
            </summary>    
        </member>
        <member name="F:Microsoft.WindowsMobile.Status.SystemProperty.ConnectionsVpnCount">
            <summary>
             Gets a value indicating the number of virtual private network connections that are currently connected. 
            </summary>    
        </member>
        <member name="F:Microsoft.WindowsMobile.Status.SystemProperty.ConnectionsVpnDescriptions">
            <summary>
             Gets a semicolon delimited string containing the description of each virtual private network connection. 
            </summary>    
        </member>
        <member name="F:Microsoft.WindowsMobile.Status.SystemProperty.CalendarEvent">
            <summary>
             Gets the current "All Day Event" Appointment. 
            </summary>
        </member>
        <member name="F:Microsoft.WindowsMobile.Status.SystemProperty.CalendarEventSubject">
            <summary>
             Gets the subject of the current "All Day Event" Appointment. 
            </summary>    
        </member>
        <member name="F:Microsoft.WindowsMobile.Status.SystemProperty.CalendarEventLocation">
            <summary>
             Gets the location of the current "All Day Event" Appointment. 
            </summary>    
        </member>
        <member name="F:Microsoft.WindowsMobile.Status.SystemProperty.CalendarEventStartTime">
            <summary>
             Gets the starting time of the current "All Day Event" Appointment. This will be the starting day of an Appointment Event that spans multiple days. 
            </summary>    
        </member>
        <member name="F:Microsoft.WindowsMobile.Status.SystemProperty.CalendarEventEndTime">
            <summary>
             Gets the ending time of the current "All Day Event" Appointment. This will be the starting day of an Appointment Event that spans multiple days. 
            </summary>    
        </member>
        <member name="F:Microsoft.WindowsMobile.Status.SystemProperty.CalendarEventHasConflict">
            <summary>
             Gets a value indicating whether the user's availability (free/busy) status conflicts with the current "All Day Event". 
            </summary>    
        </member>
        <member name="F:Microsoft.WindowsMobile.Status.SystemProperty.CalendarEventBusyStatus">
            <summary>
             Gets the user's availability (free/busy status) for the current "All Day Event". 
            </summary>    
        </member>
        <member name="F:Microsoft.WindowsMobile.Status.SystemProperty.CalendarEventCategories">
            <summary>
             Gets the categories for the current "All Day Event". 
            </summary>    
        </member>
        <member name="F:Microsoft.WindowsMobile.Status.SystemProperty.WiFiStatePowerOn">
            <summary>
             Gets a value indicating whether Wi-Fi is powered on.
            </summary>
        </member>
        <member name="F:Microsoft.WindowsMobile.Status.SystemProperty.WiFiStateConnecting">
            <summary>
             Gets a value indicating whether Wi-Fi is connecting to a network.
            </summary>
        </member>
        <member name="F:Microsoft.WindowsMobile.Status.SystemProperty.WiFiStateConnected">
            <summary>
             Gets a value indicating whether Wi-Fi is connected to a network.
            </summary>
        </member>
        <member name="F:Microsoft.WindowsMobile.Status.SystemProperty.WiFiStateNetworksAvailable">
            <summary>
             Gets a value indicating whether Wi-Fi networks are available.
            </summary>
        </member>
        <member name="F:Microsoft.WindowsMobile.Status.SystemProperty.WiFiStateHardwarePresent">
            <summary>
             Gets a value indicating whether Wi-Fi hardware is present.
            </summary>
        </member>
        <member name="F:Microsoft.WindowsMobile.Status.SystemProperty.BluetoothStatePowerOn">
            <summary>
             Gets a value indicating whether Bluetooth is powered on
            </summary>
        </member>
        <member name="F:Microsoft.WindowsMobile.Status.SystemProperty.BluetoothStateDiscoverable">
            <summary>
             Gets a value indicating whether Bluetooth is discoverable
            </summary>
        </member>
        <member name="F:Microsoft.WindowsMobile.Status.SystemProperty.BluetoothStateA2DPConnected">
            <summary>
             Gets a value indicating whether Bluetooth A2DP is connected
            </summary>
        </member>
        <member name="F:Microsoft.WindowsMobile.Status.SystemProperty.BluetoothStateHardwarePresent">
            <summary>
             Gets a value indicating whether Bluetooth hardware is present
            </summary>
        </member>
        <member name="F:Microsoft.WindowsMobile.Status.SystemProperty.BluetoothStateHandsFreeControl">
            <summary>
             Gets a value indicating whether device is under Bluetooth Hands Free Control
            </summary>
        </member>
        <member name="F:Microsoft.WindowsMobile.Status.SystemProperty.BluetoothStateHandsFreeAudio">
            <summary>
             Gets a value indicating whether device us under Bluetooth handsfree audio and control
            </summary>
        </member>
        <member name="F:Microsoft.WindowsMobile.Status.SystemProperty.CellularSystemConnectedGprs">
            <summary>
             Gets a value indicating whether network connection type is GPRS
            </summary>
        </member>
        <member name="F:Microsoft.WindowsMobile.Status.SystemProperty.CellularSystemConnectedUmts">
            <summary>
             Gets a value indicating whether network connection type is UMTS
            </summary>
        </member>
        <member name="F:Microsoft.WindowsMobile.Status.SystemProperty.CellularSystemConnectedEdge">
            <summary>
             Gets a value indicating whether network connection type is EDGE
            </summary>
        </member>
        <member name="F:Microsoft.WindowsMobile.Status.SystemProperty.CellularSystemConnected1xrtt">
            <summary>
             Gets a value indicating whether network connection type is 1XRTT
            </summary>
        </member>
        <member name="F:Microsoft.WindowsMobile.Status.SystemProperty.CellularSystemConnectedEvdo">
            <summary>
             Gets a value indicating whether network connection type is EVDO
            </summary>
        </member>
        <member name="F:Microsoft.WindowsMobile.Status.SystemProperty.CellularSystemConnectedEvdv">
            <summary>
             Gets a value indicating whether network connection type is Evdv
            </summary>
        </member>
        <member name="F:Microsoft.WindowsMobile.Status.SystemProperty.CellularSystemConnectedHsdpa">
            <summary>
             Gets a value indicating whether network connection type is Hsdpa
            </summary>
        </member>
        <member name="F:Microsoft.WindowsMobile.Status.SystemProperty.CellularSystemConnectedCsd">
            <summary>
             Gets a value indicating whether network connection type is CSD
            </summary>
        </member>
        <member name="F:Microsoft.WindowsMobile.Status.SystemProperty.CellularSystemAvailableGprs">
            <summary>
             Gets a value indicating whether GPRS is available
            </summary>
        </member>
        <member name="F:Microsoft.WindowsMobile.Status.SystemProperty.CellularSystemAvailableUmts">
            <summary>
             Gets a value indicating whether UMTS is available
            </summary>
        </member>
        <member name="F:Microsoft.WindowsMobile.Status.SystemProperty.CellularSystemAvailableEdge">
            <summary>
             Gets a value indicating whether EDGE is available
            </summary>
        </member>
        <member name="F:Microsoft.WindowsMobile.Status.SystemProperty.CellularSystemAvailable1xrtt">
            <summary>
             Gets a value indicating whether 1XRTT is available
            </summary>
        </member>
        <member name="F:Microsoft.WindowsMobile.Status.SystemProperty.CellularSystemAvailableEvdo">
            <summary>
             Gets a value indicating whether EVDO is available
            </summary>
        </member>
        <member name="F:Microsoft.WindowsMobile.Status.SystemProperty.CellularSystemAvailableEvdv">
            <summary>
             Gets a value indicating whether Evdv is available
            </summary>
        </member>
        <member name="F:Microsoft.WindowsMobile.Status.SystemProperty.CellularSystemAvailableHsdpa">
            <summary>
             Gets a value indicating whether Hsdpa is available
            </summary>
        </member>
        <member name="F:Microsoft.WindowsMobile.Status.SystemProperty.ClamshellClosed">
            <summary>
             Gets a value indicating whether Clamshell is closed or not
            </summary>
        </member>
        <member name="F:Microsoft.WindowsMobile.Status.SystemProperty.PhoneTalkingCallStartTime">
            <summary>
            Gets the time of the current active call
            </summary>
        </member>
        <member name="F:Microsoft.WindowsMobile.Status.SystemProperty.CameraEnabled">
            <summary>
             Gets a value indicating whether a camera is enabled. 
            </summary>    
        </member>
        <member name="F:Microsoft.WindowsMobile.Status.SystemProperty.LockStates">
            <summary>
             Gets a value indicating the mobile device's lock states.
            </summary>    
        </member>
        <member name="F:Microsoft.WindowsMobile.Status.SystemProperty.SimLocked">
            <summary>
             Gets a value indicating whether the SIM is currently locked.
            </summary>    
        </member>
        <member name="F:Microsoft.WindowsMobile.Status.SystemProperty.DeviceLocked">
            <summary>
             Gets a value indicating whether the device is currently locked (e.g. with password).
            </summary>    
        </member>
        <member name="F:Microsoft.WindowsMobile.Status.SystemProperty.KeyLocked">
            <summary>
             Gets a value indicating whether the device is currently key locked.
            </summary>    
        </member>
        <member name="T:Microsoft.WindowsMobile.Status.BatteryLevel">
            <summary>
             This enum is used with SystemProperty.PowerBatteryStrength 
            </summary>    
        </member>
        <member name="F:Microsoft.WindowsMobile.Status.BatteryLevel.VeryLow">
            <summary>
            0-20%
            </summary>
        </member>
        <member name="F:Microsoft.WindowsMobile.Status.BatteryLevel.Low">
            <summary>
            21-40%
            </summary>
        </member>
        <member name="F:Microsoft.WindowsMobile.Status.BatteryLevel.Medium">
            <summary>
            41-60%
            </summary>
        </member>
        <member name="F:Microsoft.WindowsMobile.Status.BatteryLevel.High">
            <summary>
            61-80%
            </summary>
        </member>
        <member name="F:Microsoft.WindowsMobile.Status.BatteryLevel.VeryHigh">
            <summary>
            81-100%
            </summary>
        </member>
        <member name="T:Microsoft.WindowsMobile.Status.BatteryState">
            <summary>
             This enum is used with SystemProperty.PowerBatteryState 
            </summary>    
        </member>
        <member name="F:Microsoft.WindowsMobile.Status.BatteryState.Normal">
            <summary>
            Normal
            </summary>
        </member>
        <member name="F:Microsoft.WindowsMobile.Status.BatteryState.NotPresent">
            <summary>
            NotPresent
            </summary>
        </member>
        <member name="F:Microsoft.WindowsMobile.Status.BatteryState.Charging">
            <summary>
            Charging
            </summary>
        </member>
        <member name="F:Microsoft.WindowsMobile.Status.BatteryState.Low">
            <summary>
            Low
            </summary>
        </member>
        <member name="F:Microsoft.WindowsMobile.Status.BatteryState.Critical">
            <summary>
            Critical
            </summary>
        </member>
        <member name="T:Microsoft.WindowsMobile.Status.ActiveSyncStatus">
            <summary>
             This enum is used with SystemProperty.ActiveSyncStatus 
            </summary>    
        </member>
        <member name="F:Microsoft.WindowsMobile.Status.ActiveSyncStatus.None">
            <summary>
            None
            </summary>
        </member>
        <member name="F:Microsoft.WindowsMobile.Status.ActiveSyncStatus.Synchronizing">
            <summary>
            Synchronizing
            </summary>
        </member>
        <member name="F:Microsoft.WindowsMobile.Status.ActiveSyncStatus.Error">
            <summary>
            Error
            </summary>
        </member>
        <member name="T:Microsoft.WindowsMobile.Status.LockStates">
            <summary>
             This enum is used with SystemProperty.LockStates.
            </summary>    
        </member>
        <member name="F:Microsoft.WindowsMobile.Status.LockStates.None">
            <summary>
            None
            </summary>
        </member>
        <member name="F:Microsoft.WindowsMobile.Status.LockStates.DeviceLock">
            <summary>
            Device Locked
            </summary>
        </member>
        <member name="F:Microsoft.WindowsMobile.Status.LockStates.KeyLock">
            <summary>
            Key Locked
            </summary>
        </member>
        <member name="F:Microsoft.WindowsMobile.Status.LockStates.SimLock">
            <summary>
            SIM Locked
            </summary>
        </member>
        <member name="T:Microsoft.WindowsMobile.Status.SystemState">
            <summary>
             Gives the ability to get the current value of a system state as well
             as the ability to be notified when that state changes
            </summary>
             <remarks>
             When defining an instance of SystemState that is going to handle the Changed
             event, make sure that the instance is defined globally in the class where the event will be handled.
             If it is defined in a method, it will be up for garbage collection after it goes out of scope. 
             <code>
             public class MyClass
             {
                 SystemState state; // defined globally to class
                 private void Form1_Load(object sender, EventArgs e)
                 {
                     // SystemState state;  // This instance will go out of scope if defined here
                     
                     state =  new SystemState(SystemProperty.OwnerName);
                     state.Changed += new ChangeEventHandler(state_Changed);
                 }
             }
             </code>
             </remarks>
        </member>
        <member name="M:Microsoft.WindowsMobile.Status.SystemState.InitSystemTable">
            <summary>
             Initializes all the property enums with the actual registry keys and values that represent them
            </summary>
        </member>
        <member name="M:Microsoft.WindowsMobile.Status.SystemState.#ctor(Microsoft.WindowsMobile.Status.SystemProperty)">
            <summary>
             Constructs a SystemState object that gives read-only access to the 
             property.
            </summary>
            <param name="property">property of interest</param>
        </member>
        <member name="M:Microsoft.WindowsMobile.Status.SystemState.#ctor(System.String)">
            <summary>
            Load the settings for a SystemState that has had the Application Launcher enabled
            </summary>
            <param name="applicationLaunchId">id for the SystemState to load</param>
        </member>
        <member name="M:Microsoft.WindowsMobile.Status.SystemState.#ctor(System.String,System.Boolean)">
            <summary>
            Load the settings for a SystemState that has had the Application Launcher enabled
            </summary>
            <param name="applicationLaunchId">id for the SystemState to load</param>
            <param name="useFormThread">Use the application's Form thread to process events. You need to use 
            the application's Form thread to be able to manipulate UI from within an event. If your application
            does not contain a form, then this should be set to false. </param>
        </member>
        <member name="M:Microsoft.WindowsMobile.Status.SystemState.#ctor(Microsoft.WindowsMobile.Status.SystemProperty,System.Boolean)">
            <summary>
             Constructs a SystemState object that gives read-only access to the 
             property.
            </summary>
            <param name="property">property of interest</param>
            <param name="useFormThread">Use the application's Form thread to process events. You need to use 
             the application's Form thread to be able to manipulate UI from within an event. If your application
             does not contain a form, then this should be set to false. </param>
        </member>
        <member name="M:Microsoft.WindowsMobile.Status.SystemState.Finalize">
            <summary>
             Call dispose on the object when we are destructed.
             The client should have called Dispose on this instance, but
             we do here just incase since it doesn't hurt.
            </summary>
        </member>
        <member name="M:Microsoft.WindowsMobile.Status.SystemState.GetValue(Microsoft.WindowsMobile.Status.SystemProperty)">
            <summary>
             Get's the value of a system property
            </summary>
            <param name="property">System Property to retrieve the value for</param>
            <returns>either an int, string, or byte[] representing the value of the property. 
             You can use the 'is' operator to determine which type it is.
            </returns>
            <example>
            The following example shows how to query the battery strength of the device:
            <code>
             BatteryLevel batteryLevel = SystemState.PowerBatteryStrength;
            </code>
            The following example shows how to query a system state via a variable: 
            <code>
             SystemProperty property = SystemProperty.PowerBatteryStrength;
             BatteryLevel batteryLevel = (BatteryLevel)SystemState.GetValue(property);
            </code>
            </example>
        </member>
        <member name="M:Microsoft.WindowsMobile.Status.SystemState.ApplyBitMask(System.Object,System.Int32)">
            <summary>
             Applies a bit mask to an int
            </summary>
            <param name="val">the object to be masked, must be an int</param>
            <param name="bitMask">the bit mask</param>
            <returns>(val &amp; bitMask), right-shifted</returns>
        </member>
        <member name="M:Microsoft.WindowsMobile.Status.SystemState.Dispose">
            <summary>
             Disposes resources used by the SystemState
            </summary>
        </member>
        <member name="M:Microsoft.WindowsMobile.Status.SystemState.IsApplicationLauncherEnabled(System.String)">
            <summary>
            Tests to see if the Application Launcher has been enabled for the given id.
            </summary>
            <param name="applicationLaunchId">id of the SystemState to enquire about.</param>
            <returns>True: enabled, False: not enabled</returns>
        </member>
        <member name="M:Microsoft.WindowsMobile.Status.SystemState.DisableApplicationLauncher(System.String)">
            <summary>
            Disables the Application Launcher for the given id.  It will no longer launch the
            application that it was associated with
            </summary>
            <param name="applicationLaunchId">id of the SystemState to enquire about.</param>
        </member>
        <member name="M:Microsoft.WindowsMobile.Status.SystemState.EnableApplicationLauncher(System.String,System.String,System.String)">
            <summary>
            Enable the Application Launcher for this object.  When your event is raised,
            your app will be launched.
            
            When your app is launched, "/notify 'applicationLaunchId'" (no quotes) will be passed
            on the command line.
            </summary>
            <param name="applicationLaunchId">id of the SystemState to enable</param>
            <param name="applicationFileName">full path to the application to launch</param>
            <param name="arguments">arguments to pass to the application</param>
        </member>
        <member name="M:Microsoft.WindowsMobile.Status.SystemState.EnableApplicationLauncher(System.String,System.String)">
            <summary>
            Enable the Application Launcher for this object.  When your event is raised,
            your app will be launched.
            
            When your app is launched, "/notify 'applicationLaunchId'" (no quotes) will be passed
            on the command line.
            </summary>
            <param name="applicationLaunchId">id of the SystemState to enable</param>
            <param name="applicationFileName">full path to the application to launch</param>
        </member>
        <member name="M:Microsoft.WindowsMobile.Status.SystemState.EnableApplicationLauncher(System.String)">
            <summary>
            Enable the Application Launcher for this object.  When your event is raised,
            your app will be launched.
            
            When your app is launched, "/notify 'applicationLaunchId'" (no quotes) will be passed
            on the command line.
            </summary>
            <param name="applicationLaunchId">id of the SystemState to enable</param>
        </member>
        <member name="M:Microsoft.WindowsMobile.Status.SystemState.DisableApplicationLauncher">
            <summary>
            Disables the Application Launcher for this instance.  It will no longer launch the
            application that it was associated with
            </summary>
        </member>
        <member name="P:Microsoft.WindowsMobile.Status.SystemState.ActiveApplication">
            <summary>
             Gets the name of the application that was previously active and the name of the application that is currently active, separated by the 'Escape' character ('\e').
            </summary>    
        </member>
        <member name="P:Microsoft.WindowsMobile.Status.SystemState.DisplayRotation">
            <summary>
             Gets the orientation of the display, specified as the number of degrees, ranging from 0 to 360. Portrait = 0. Landscape = 90 or -90. 
            </summary>    
        </member>
        <member name="P:Microsoft.WindowsMobile.Status.SystemState.KeyboardPresent">
            <summary>
             Gets a value indicating whether a keyboard is attached and enabled. 
            </summary>    
        </member>
        <member name="P:Microsoft.WindowsMobile.Status.SystemState.CradlePresent">
            <summary>
             Gets a value indicating whether the device is connected to a cradle. 
            </summary>    
        </member>
        <member name="P:Microsoft.WindowsMobile.Status.SystemState.CameraPresent">
            <summary>
             Gets a value indicating whether a camera is attached. 
            </summary>    
        </member>
        <member name="P:Microsoft.WindowsMobile.Status.SystemState.CameraEnabled">
            <summary>
             Gets a value indicating whether a camera is enabled. 
            </summary>    
        </member>
        <member name="P:Microsoft.WindowsMobile.Status.SystemState.MessagingSmsUnread">
            <summary>
             Gets the number of unread SMS messages. 
            </summary>    
        </member>
        <member name="P:Microsoft.WindowsMobile.Status.SystemState.MessagingMmsUnread">
            <summary>
             Gets the number of unread MMS messages 
            </summary>    
        </member>
        <member name="P:Microsoft.WindowsMobile.Status.SystemState.MessagingVoiceMailTotalUnread">
            <summary>
             Gets the number of unplayed voice mail messages. 
            </summary>    
        </member>
        <member name="P:Microsoft.WindowsMobile.Status.SystemState.MessagingVoiceMail1Unread">
            <summary>
             Gets the number of unplayed voice mail messages for line 1. 
            </summary>    
        </member>
        <member name="P:Microsoft.WindowsMobile.Status.SystemState.MessagingVoiceMail2Unread">
            <summary>
             Gets the number of unplayed voice mail messages for line 2 
            </summary>    
        </member>
        <member name="P:Microsoft.WindowsMobile.Status.SystemState.MessagingActiveSyncEmailUnread">
            <summary>
             Gets the number of unread ActiveSync e-mail messages. 
            </summary>    
        </member>
        <member name="P:Microsoft.WindowsMobile.Status.SystemState.MessagingTotalEmailUnread">
            <summary>
             Gets the total number of unread e-mail messages from all POP3/IMAP accounts. 
            </summary>    
        </member>
        <member name="P:Microsoft.WindowsMobile.Status.SystemState.MessagingOtherEmailUnread">
            <summary>
             Gets the number of unread e-mail messages from all non-ActiveSync messaging accounts. 
            </summary>    
        </member>
        <member name="P:Microsoft.WindowsMobile.Status.SystemState.MessagingLastEmailAccountName">
            <summary>
             Gets the name of the e-mail account that was last active. 
            </summary>    
        </member>
        <member name="P:Microsoft.WindowsMobile.Status.SystemState.MessagingSmsAccountName">
            <summary>
             Gets the name of the SMS messaging account. 
            </summary>    
        </member>
        <member name="P:Microsoft.WindowsMobile.Status.SystemState.MessagingMmsAccountName">
            <summary>
             Gets the name of the MMS messaging account. 
            </summary>    
        </member>
        <member name="P:Microsoft.WindowsMobile.Status.SystemState.MessagingActiveSyncAccountName">
            <summary>
             Get the name of the Outlook e-mail messaging account. 
            </summary>    
        </member>
        <member name="P:Microsoft.WindowsMobile.Status.SystemState.TasksActive">
            <summary>
             Gets the number of active tasks.  
            </summary>    
        </member>
        <member name="P:Microsoft.WindowsMobile.Status.SystemState.TasksHighPriority">
            <summary>
             Gets the number of high priority tasks that are currently active. 
            </summary>    
        </member>
        <member name="P:Microsoft.WindowsMobile.Status.SystemState.TasksDueToday">
            <summary>
             Gets the number of active tasks that are due today.  
            </summary>    
        </member>
        <member name="P:Microsoft.WindowsMobile.Status.SystemState.TasksOverdue">
            <summary>
             Gets the number of overdue tasks.  
            </summary>    
        </member>
        <member name="P:Microsoft.WindowsMobile.Status.SystemState.CalendarNextAppointmentSubject">
            <summary>
             Gets the subject of the next Appointment. 
            </summary>    
        </member>
        <member name="P:Microsoft.WindowsMobile.Status.SystemState.CalendarNextAppointmentLocation">
            <summary>
             Gets the location of the next Appointment. 
            </summary>    
        </member>
        <member name="P:Microsoft.WindowsMobile.Status.SystemState.CalendarNextAppointmentStart">
            <summary>
             Gets the starting time of the next Appointment. 
            </summary>    
        </member>
        <member name="P:Microsoft.WindowsMobile.Status.SystemState.CalendarNextAppointmentEnd">
            <summary>
             Gets the ending time of the next Appointment. 
            </summary>    
        </member>
        <member name="P:Microsoft.WindowsMobile.Status.SystemState.MediaPlayerAlbumArtist">
            <summary>
             Gets the album artist's name of the currently playing track in Windows Media Player. 
            </summary>    
        </member>
        <member name="P:Microsoft.WindowsMobile.Status.SystemState.MediaPlayerTrackBitrate">
            <summary>
             Gets the title of the track currently playing in Windows Media Player. For example, "128Kbps" 
            </summary>    
        </member>
        <member name="P:Microsoft.WindowsMobile.Status.SystemState.MediaPlayerTrackTitle">
            <summary>
             Gets the title of the track currently playing in Windows Media Player. 
            </summary>    
        </member>
        <member name="P:Microsoft.WindowsMobile.Status.SystemState.MediaPlayerAlbumTitle">
            <summary>
             Gets the album title of the currently playing track in Windows Media Player. 
            </summary>    
        </member>
        <member name="P:Microsoft.WindowsMobile.Status.SystemState.MediaPlayerTrackArtist">
            <summary>
             Gets the artist's name of the currently playing track in Windows Media Player. 
            </summary>    
        </member>
        <member name="P:Microsoft.WindowsMobile.Status.SystemState.MediaPlayerTrackNumber">
            <summary>
             Gets the number of the current track playing in Windows Media Player. 
            </summary>    
        </member>
        <member name="P:Microsoft.WindowsMobile.Status.SystemState.MediaPlayerTrackGenre">
            <summary>
             Gets the genre of the currently playing track in Windows Media Player. 
            </summary>    
        </member>
        <member name="P:Microsoft.WindowsMobile.Status.SystemState.MediaPlayerTrackTimeElapsed">
            <summary>
             Gets the elapsed time (in milliseconds) of the currently playing track in Windows Media Player. 
            </summary>    
        </member>
        <member name="P:Microsoft.WindowsMobile.Status.SystemState.PowerBatteryStrength">
            <summary>
             Gets the remaining battery power level, expressed as a percentage of <i>fully charged</i>. 
            </summary>    
        </member>
        <member name="P:Microsoft.WindowsMobile.Status.SystemState.PowerBatteryState">
            <summary>
             Gets the current battery state (for example, it is low, and charging). This enumeration allows a bitwise combination of its member values. 
            </summary>    
        </member>
        <member name="P:Microsoft.WindowsMobile.Status.SystemState.CellularSystemConnectedGprs">
            <summary>
             Gets connected GPRS network status
            </summary>
        </member>
        <member name="P:Microsoft.WindowsMobile.Status.SystemState.CellularSystemConnectedUmts">
            <summary>
             Gets connected UMTS network status
            </summary>
        </member>
        <member name="P:Microsoft.WindowsMobile.Status.SystemState.CellularSystemConnectedEdge">
            <summary>
             Gets connected EDGE network status
            </summary>
        </member>
        <member name="P:Microsoft.WindowsMobile.Status.SystemState.CellularSystemConnectedEvdo">
            <summary>
             Gets connected EVDO network status
            </summary>
        </member>
        <member name="P:Microsoft.WindowsMobile.Status.SystemState.CellularSystemConnectedEvdv">
            <summary>
             Gets connected Evdv network status
            </summary>
        </member>
        <member name="P:Microsoft.WindowsMobile.Status.SystemState.CellularSystemConnectedHsdpa">
            <summary>
             Gets connected Hsdpa network status
            </summary>
        </member>
        <member name="P:Microsoft.WindowsMobile.Status.SystemState.CellularSystemConnected1xrtt">
            <summary>
             Gets connected 1XRTT network status
            </summary>
        </member>
        <member name="P:Microsoft.WindowsMobile.Status.SystemState.CellularSystemConnectedCsd">
            <summary>
             Gets connected CSD network status
            </summary>
        </member>
        <member name="P:Microsoft.WindowsMobile.Status.SystemState.CellularSystemAvailableGprs">
            <summary>
             Gets Available GPRS network status
            </summary>
        </member>
        <member name="P:Microsoft.WindowsMobile.Status.SystemState.CellularSystemAvailableUmts">
            <summary>
             Gets Available UMTS network status
            </summary>
        </member>
        <member name="P:Microsoft.WindowsMobile.Status.SystemState.CellularSystemAvailableEdge">
            <summary>
             Gets Available EDGE network status
            </summary>
        </member>
        <member name="P:Microsoft.WindowsMobile.Status.SystemState.CellularSystemAvailableEvdo">
            <summary>
             Gets Available EVDO network status
            </summary>
        </member>
        <member name="P:Microsoft.WindowsMobile.Status.SystemState.CellularSystemAvailableEvdv">
            <summary>
             Gets Available evdv network status
            </summary>
        </member>
        <member name="P:Microsoft.WindowsMobile.Status.SystemState.CellularSystemAvailableHsdpa">
            <summary>
             Gets Available Hsdpa network status
            </summary>
        </member>
        <member name="P:Microsoft.WindowsMobile.Status.SystemState.CellularSystemAvailable1xrtt">
            <summary>
             Gets Available 1XRTT network status
            </summary>
        </member>
        <member name="P:Microsoft.WindowsMobile.Status.SystemState.PowerBatteryBackupStrength">
            <summary>
             Gets the remaining backup battery power level, expressed as a percentage of <i>fully charged</i>. 
            </summary>    
        </member>
        <member name="P:Microsoft.WindowsMobile.Status.SystemState.PowerBatteryBackupState">
            <summary>
             Gets the current backup battery state (for example, it is low, and charging). This enumeration allows a bitwise combination of its member values. 
            </summary>    
        </member>
        <member name="P:Microsoft.WindowsMobile.Status.SystemState.Time">
            <summary>
             Gets the current time. This Date/Time value updates once per minute. 
            </summary>    
        </member>
        <member name="P:Microsoft.WindowsMobile.Status.SystemState.Date">
            <summary>
             Gets the current date. This Date/Time value changes once per day. Monitor this property to perform actions on a daily basis. <b>Note</b>: Do not use <b>Date</b> to get an accurate clock time; instead, use <b>Time</b>. 
            </summary>    
        </member>
        <member name="P:Microsoft.WindowsMobile.Status.SystemState.PhoneSignalStrength">
            <summary>
             Get the phone signal strength, expressed as a percentage of full strength. 
            </summary>    
        </member>
        <member name="P:Microsoft.WindowsMobile.Status.SystemState.PhoneOperatorName">
            <summary>
              Gets the name of the mobile operator (i.e., the mobile phone company, or carrier). 
            </summary>    
        </member>
        <member name="P:Microsoft.WindowsMobile.Status.SystemState.PhoneTalkingCallerName">
            <summary>
             Gets the name of the person you are talking to on the phone. This value is not set when you are talking on a conference call. 
            </summary>    
        </member>
        <member name="P:Microsoft.WindowsMobile.Status.SystemState.PhoneTalkingCallStartTime">
            <summary>
            Gets the time of the current active call
            </summary>
        </member>
        <member name="P:Microsoft.WindowsMobile.Status.SystemState.PhoneActiveCallCount">
            <summary>
              Gets the number of active phone calls. 
            </summary>    
        </member>
        <member name="P:Microsoft.WindowsMobile.Status.SystemState.PhoneProfileName">
            <summary>
             Gets the localized name of the current sound profile. (Smartphone only) 
            </summary>    
        </member>
        <member name="P:Microsoft.WindowsMobile.Status.SystemState.PhoneProfile">
            <summary>
             Gets the non-localized name of the current sound profile. For example, "Normal", "Silent", "Car", "Headset", "Loud", "Meeting", or "Speakerphone". (Smartphone only) 
            </summary>    
        </member>
        <member name="P:Microsoft.WindowsMobile.Status.SystemState.PhoneCellBroadcast">
            <summary>
             Gets the cell broadcast message 
            </summary>    
        </member>
        <member name="P:Microsoft.WindowsMobile.Status.SystemState.CalendarNextAppointmentHasConflict">
            <summary>
             Gets a value indicating whether there is a conflict with the next Appointment. 
            </summary>    
        </member>
        <member name="P:Microsoft.WindowsMobile.Status.SystemState.OwnerName">
            <summary>
              Gets the mobile device owner's name. 
            </summary>    
        </member>
        <member name="P:Microsoft.WindowsMobile.Status.SystemState.OwnerPhoneNumber">
            <summary>
              Gets the mobile device owner's phone number. 
            </summary>    
        </member>
        <member name="P:Microsoft.WindowsMobile.Status.SystemState.OwnerEmail">
            <summary>
             Gets the mobile device owner's e-mail address. 
            </summary>    
        </member>
        <member name="P:Microsoft.WindowsMobile.Status.SystemState.OwnerNotes">
            <summary>
              Gets the text notes entered by the owner of the mobile device. 
            </summary>    
        </member>
        <member name="P:Microsoft.WindowsMobile.Status.SystemState.ActiveSyncStatus">
            <summary>
             Gets ActiveSync's current synchronization state. 
            </summary>
            <remarks>This property will never have the value <b>ActiveSyncStatus.Error</b> (2). For more information, see <see cref="T:Microsoft.WindowsMobile.Status.ActiveSyncStatus"/></remarks>
            <seealso cref="T:Microsoft.WindowsMobile.Status.ActiveSyncStatus"/>
        </member>
        <member name="P:Microsoft.WindowsMobile.Status.SystemState.PhoneMissedCalls">
            <summary>
             Gets the number of missed phone calls. 
            </summary>    
        </member>
        <member name="P:Microsoft.WindowsMobile.Status.SystemState.HeadsetPresent">
            <summary>
              Gets a value indicating whether a headset is present 
            </summary>    
        </member>
        <member name="P:Microsoft.WindowsMobile.Status.SystemState.CarKitPresent">
            <summary>
              Gets a value indicating whether a car kit is present 
            </summary>    
        </member>
        <member name="P:Microsoft.WindowsMobile.Status.SystemState.SpeakerPhoneActive">
            <summary>
              Gets a value indicating whether the speakerphone is active 
            </summary>    
        </member>
        <member name="P:Microsoft.WindowsMobile.Status.SystemState.PhoneMultiLine">
            <summary>
             Gets a value indicating whether the phone supports multiple lines. 
            </summary>    
        </member>
        <member name="P:Microsoft.WindowsMobile.Status.SystemState.PhoneSimFull">
            <summary>
              Gets a value indicating whether the Subscriber Identity Module (SIM) memory is full. 
            </summary>    
        </member>
        <member name="P:Microsoft.WindowsMobile.Status.SystemState.PhoneNoSim">
            <summary>
              Gets a value indicating whether the Subscriber Identity Module (SIM) is installed in the mobile device. 
            </summary>    
        </member>
        <member name="P:Microsoft.WindowsMobile.Status.SystemState.PhoneInvalidSim">
            <summary>
              Gets a value indicating whether the Subscriber Identity Module (SIM) is invalid. 
            </summary>    
        </member>
        <member name="P:Microsoft.WindowsMobile.Status.SystemState.PhoneBlockedSim">
            <summary>
              Gets a value indicating whether the Subscriber Identity Module (SIM) is blocked. 
            </summary>    
        </member>
        <member name="P:Microsoft.WindowsMobile.Status.SystemState.PhoneRadioOff">
            <summary>
             Gets a value indicating whether the phone's radio is turned off. 
            </summary>    
        </member>
        <member name="P:Microsoft.WindowsMobile.Status.SystemState.PhoneRadioPresent">
            <summary>
              Gets a value indicating whether the mobile device has a phone. 
            </summary>    
        </member>
        <member name="P:Microsoft.WindowsMobile.Status.SystemState.PhoneRingerOff">
            <summary>
             Gets a value indicating whether the phone's ringer is off (i.e., if it rings and/or vibrates). 
            </summary>    
        </member>
        <member name="P:Microsoft.WindowsMobile.Status.SystemState.PhoneLine1Selected">
            <summary>
              Gets a value indicating whether line 1 is selected. 
            </summary>    
        </member>
        <member name="P:Microsoft.WindowsMobile.Status.SystemState.PhoneLine2Selected">
            <summary>
              Gets a value indicating whether line 2 is selected. 
            </summary>    
        </member>
        <member name="P:Microsoft.WindowsMobile.Status.SystemState.PhoneRoaming">
            <summary>
              Gets a value indicating whether the phone is currently in roaming mode. 
            </summary>    
        </member>
        <member name="P:Microsoft.WindowsMobile.Status.SystemState.PhoneCallForwardingOnLine1">
            <summary>
              Gets a value indicating whether call forwarding is enabled on line 1. 
            </summary>    
        </member>
        <member name="P:Microsoft.WindowsMobile.Status.SystemState.PhoneMissedCall">
            <summary>
              Gets a value indicating whether there was a new missed call. 
            </summary>    
        </member>
        <member name="P:Microsoft.WindowsMobile.Status.SystemState.PhoneActiveDataCall">
            <summary>
              Gets a value indicating whether the phone has an active cellular data connection. 
            </summary>    
        </member>
        <member name="P:Microsoft.WindowsMobile.Status.SystemState.PhoneCallBarring">
            <summary>
              Gets a value indicating whether the call barring feature is enabled. 
            </summary>    
        </member>
        <member name="P:Microsoft.WindowsMobile.Status.SystemState.PhoneCallOnHold">
            <summary>
             Gets a value indicating whether a phone call is currently on hold. 
            </summary>    
        </member>
        <member name="P:Microsoft.WindowsMobile.Status.SystemState.PhoneConferenceCall">
            <summary>
              Gets a value indicating whether a conference call is currently in progress. 
            </summary>    
        </member>
        <member name="P:Microsoft.WindowsMobile.Status.SystemState.PhoneIncomingCall">
            <summary>
              Gets a value indicating whether there is an incoming (ringing) call. 
            </summary>    
        </member>
        <member name="P:Microsoft.WindowsMobile.Status.SystemState.PhoneCallCalling">
            <summary>
             Gets a value indicating whether the phone is currently attempting to connect an outgoing call. 
            </summary>    
        </member>
        <member name="P:Microsoft.WindowsMobile.Status.SystemState.PhoneGprsCoverage">
            <summary>
              Gets a value indicating whether the phone currently has GPRS coverage. 
            </summary>    
        </member>
        <member name="P:Microsoft.WindowsMobile.Status.SystemState.PhoneNoService">
            <summary>
              Gets a value indicating whether the phone is not currently connected to a network. 
            </summary>    
        </member>
        <member name="P:Microsoft.WindowsMobile.Status.SystemState.PhoneSearchingForService">
            <summary>
              Gets a value indicating whether the phone is currently searching for service on a network. 
            </summary>    
        </member>
        <member name="P:Microsoft.WindowsMobile.Status.SystemState.PhoneHomeService">
            <summary>
              Gets a value indicating whether the phone is currently registered on its home network. 
            </summary>    
        </member>
        <member name="P:Microsoft.WindowsMobile.Status.SystemState.Phone1xRttCoverage">
            <summary>
              Gets a value indicating whether the phone currently has 1xRTT coverage. 
            </summary>    
        </member>
        <member name="P:Microsoft.WindowsMobile.Status.SystemState.PhoneCallTalking">
            <summary>
              Gets a value indicating whether there is currently a phone call in the talking state. 
            </summary>    
        </member>
        <member name="P:Microsoft.WindowsMobile.Status.SystemState.PhoneCallForwardingOnLine2">
            <summary>
              Gets a value indicating whether call forwarding is currently active on line 2. 
            </summary>    
        </member>
        <member name="P:Microsoft.WindowsMobile.Status.SystemState.CalendarNextAppointment">
            <summary>
             Gets the next Appointment. 
            </summary>    
        </member>
        <member name="P:Microsoft.WindowsMobile.Status.SystemState.CalendarNextAppointmentBusyStatus">
            <summary>
             Gets the user's availability (e.g., Free, Busy, Tenative, Out of Office) status for the next Appointment. 
            </summary>    
        </member>
        <member name="P:Microsoft.WindowsMobile.Status.SystemState.CalendarNextAppointmentCategories">
            <summary>
             Gets the next Appointment's categories. 
            </summary>    
        </member>
        <member name="P:Microsoft.WindowsMobile.Status.SystemState.CalendarAppointment">
            <summary>
             Gets the current Appointment. 
            </summary>    
        </member>
        <member name="P:Microsoft.WindowsMobile.Status.SystemState.CalendarAppointmentSubject">
            <summary>
             Gets the current Appointment's subject. 
            </summary>    
        </member>
        <member name="P:Microsoft.WindowsMobile.Status.SystemState.CalendarAppointmentLocation">
            <summary>
             Gets the current Appointment's location. 
            </summary>    
        </member>
        <member name="P:Microsoft.WindowsMobile.Status.SystemState.CalendarAppointmentStartTime">
            <summary>
             Gets the current Appointment's starting time. 
            </summary>    
        </member>
        <member name="P:Microsoft.WindowsMobile.Status.SystemState.CalendarAppointmentEndTime">
            <summary>
             Gets the current Appointment's ending time. 
            </summary>    
        </member>
        <member name="P:Microsoft.WindowsMobile.Status.SystemState.CalendarAppointmentHasConflict">
            <summary>
             Gets a value indicating whether the current Appointment has a scheduling conflict with an existing Appointment. 
            </summary>    
        </member>
        <member name="P:Microsoft.WindowsMobile.Status.SystemState.CalendarAppointmentBusyStatus">
            <summary>
             Gets the user's availability (free/busy status) for the time-slot taken by the current Appointment. 
            </summary>    
        </member>
        <member name="P:Microsoft.WindowsMobile.Status.SystemState.CalendarAppointmentCategories">
            <summary>
             Gets the current Appointment's categories. 
            </summary>    
        </member>
        <member name="P:Microsoft.WindowsMobile.Status.SystemState.CalendarHomeScreenAppointment">
            <summary>
             Gets the Appointment that is currently displayed on the Home Screen. 
            </summary>    
        </member>
        <member name="P:Microsoft.WindowsMobile.Status.SystemState.CalendarHomeScreenAppointmentSubject">
            <summary>
             Gets the subject of the Appointment that is currently displayed on the Home Screen. 
            </summary>    
        </member>
        <member name="P:Microsoft.WindowsMobile.Status.SystemState.CalendarHomeScreenAppointmentLocation">
            <summary>
             Gets the location of the Appointment that is currently displayed on the Home Screen. 
            </summary>    
        </member>
        <member name="P:Microsoft.WindowsMobile.Status.SystemState.CalendarHomeScreenAppointmentStartTime">
            <summary>
             Gets the starting time of the Appointment that is currently displayed on the Home Screen. 
            </summary>    
        </member>
        <member name="P:Microsoft.WindowsMobile.Status.SystemState.CalendarHomeScreenAppointmentEndTime">
            <summary>
             Gets the ending time of the Appointment that is currently displayed on the Home Screen. 
            </summary>    
        </member>
        <member name="P:Microsoft.WindowsMobile.Status.SystemState.CalendarHomeScreenAppointmentHasConflict">
            <summary>
             Gets a value indicating whether the Appointment that is currently displayed on the Home Screen has a scheduling conflict. 
            </summary>    
        </member>
        <member name="P:Microsoft.WindowsMobile.Status.SystemState.CalendarHomeScreenAppointmentBusyStatus">
            <summary>
             Gets the user's availability (free/busy status) for the Appointment displayed on the Home Screen. 
            </summary>    
        </member>
        <member name="P:Microsoft.WindowsMobile.Status.SystemState.CalendarHomeScreenAppointmentCategories">
            <summary>
             Gets the categories of the Appointment that is currently displayed on the Home Screen. 
            </summary>    
        </member>
        <member name="P:Microsoft.WindowsMobile.Status.SystemState.PhoneIncomingCallerName">
            <summary>
             Gets the name of the person who is currently placing the incoming call. 
            </summary>    
        </member>
        <member name="P:Microsoft.WindowsMobile.Status.SystemState.PhoneLastIncomingCallerName">
            <summary>
             Gets the name of the last caller to place an incoming call. 
            </summary>    
        </member>
        <member name="P:Microsoft.WindowsMobile.Status.SystemState.PhoneIncomingCallerNumber">
            <summary>
             Gets the incoming call's phone number (Caller ID). 
            </summary>    
        </member>
        <member name="P:Microsoft.WindowsMobile.Status.SystemState.PhoneLastIncomingCallerNumber">
            <summary>
             Gets the last incoming call's phone number (Caller ID). 
            </summary>    
        </member>
        <member name="P:Microsoft.WindowsMobile.Status.SystemState.PhoneIncomingCallerContactPropertyName">
            <summary>
             Gets the name of the property that matches the Caller ID, e.g. "h" for "Home Telephone". 
            </summary>    
        </member>
        <member name="P:Microsoft.WindowsMobile.Status.SystemState.PhoneLastIncomingCallerContactPropertyName">
            <summary>
             Gets the name of the property that matches the last Caller ID, e.g. "h" for "Home Telephone". 
            </summary>    
        </member>
        <member name="P:Microsoft.WindowsMobile.Status.SystemState.PhoneIncomingCallerContactPropertyID">
            <summary>
             Gets the CEPROPID of the property that matches the Caller ID, for example, PIMPR_HOME_TELEPHONE_NUMBER. 
            </summary>    
        </member>
        <member name="P:Microsoft.WindowsMobile.Status.SystemState.PhoneLastIncomingCallerContactPropertyID">
            <summary>
             Gets the CEPROPID of the property that matches the last Caller ID, for example, PIMPR_HOME_TELEPHONE_NUMBER. 
            </summary>    
        </member>
        <member name="P:Microsoft.WindowsMobile.Status.SystemState.PhoneIncomingCallerContact">
            <summary>
             Gets the Contact that matches the Caller ID. 
            </summary>    
        </member>
        <member name="P:Microsoft.WindowsMobile.Status.SystemState.PhoneLastIncomingCallerContact">
            <summary>
             Gets the Contact that matches the last Caller ID. 
            </summary>    
        </member>
        <member name="P:Microsoft.WindowsMobile.Status.SystemState.PhoneTalkingCallerNumber">
            <summary>
             Gets the currently connected caller's phone number. 
            </summary>    
        </member>
        <member name="P:Microsoft.WindowsMobile.Status.SystemState.PhoneTalkingCallerContactPropertyName">
            <summary>
             Gets the name of the property of the contact who is on the active phone call, e.g. "h" for "Home Telephone". 
            </summary>    
        </member>
        <member name="P:Microsoft.WindowsMobile.Status.SystemState.PhoneTalkingCallerContactPropertyID">
            <summary>
             Gets the CEPROPID of the property of the contact who is on the active phone call, for example, PIMPR_HOME_TELEPHONE_NUMBER. 
            </summary>    
        </member>
        <member name="P:Microsoft.WindowsMobile.Status.SystemState.PhoneTalkingCallerContact">
            <summary>
             Gets the contact who is on the active phone call. 
            </summary>    
        </member>
        <member name="P:Microsoft.WindowsMobile.Status.SystemState.ConnectionsCount">
            <summary>
             Gets a value indicating the number of connections that are currently connected. 
            </summary>    
        </member>
        <member name="P:Microsoft.WindowsMobile.Status.SystemState.ConnectionsBluetoothCount">
            <summary>
             Gets a value indicating the number of Bluetooth connections that are currently connected. 
            </summary>    
        </member>
        <member name="P:Microsoft.WindowsMobile.Status.SystemState.ConnectionsBluetoothDescriptions">
            <summary>
             Gets a semicolon delimited string containing the description of each of the Bluetooth connections. 
            </summary>    
        </member>
        <member name="P:Microsoft.WindowsMobile.Status.SystemState.ConnectionsCellularCount">
            <summary>
             Gets a value indicating the number of cellular connections that are currently connected. 
            </summary>    
        </member>
        <member name="P:Microsoft.WindowsMobile.Status.SystemState.ConnectionsCellularDescriptions">
            <summary>
             Gets a semicolon delimited string containing the description of each cellular connection. 
            </summary>    
        </member>
        <member name="P:Microsoft.WindowsMobile.Status.SystemState.ConnectionsNetworkCount">
            <summary>
             Gets a value indicating the number of network connections that are currently connected. 
            </summary>    
        </member>
        <member name="P:Microsoft.WindowsMobile.Status.SystemState.ConnectionsNetworkDescriptions">
            <summary>
             Gets a semicolon delimited string containing the description of each network connection. 
            </summary>    
        </member>
        <member name="P:Microsoft.WindowsMobile.Status.SystemState.ConnectionsNetworkAdapters">
            <summary>
             Gets a semicolon delimited string containing the adapter name of each network connection. 
            </summary>    
        </member>
        <member name="P:Microsoft.WindowsMobile.Status.SystemState.ConnectionsDesktopCount">
            <summary>
             Gets a value indicating the number of desktop connections that are currently connected. 
            </summary>    
        </member>
        <member name="P:Microsoft.WindowsMobile.Status.SystemState.ConnectionsDesktopDescriptions">
            <summary>
             Gets a semicolon delimited string containing the description of each desktop connection. 
            </summary>    
        </member>
        <member name="P:Microsoft.WindowsMobile.Status.SystemState.ConnectionsProxyCount">
            <summary>
             Gets a value indicating the number of network connections that are currently connected. 
            </summary>    
        </member>
        <member name="P:Microsoft.WindowsMobile.Status.SystemState.ConnectionsProxyDescriptions">
            <summary>
             Gets a semicolon delimited string containing the description of each proxy connection. 
            </summary>    
        </member>
        <member name="P:Microsoft.WindowsMobile.Status.SystemState.ConnectionsModemCount">
            <summary>
             Gets a value indicating the number of modem connections that are currently connected. 
            </summary>    
        </member>
        <member name="P:Microsoft.WindowsMobile.Status.SystemState.ConnectionsModemDescriptions">
            <summary>
             Gets a semicolon delimited string containing the description of each modem connection. 
            </summary>    
        </member>
        <member name="P:Microsoft.WindowsMobile.Status.SystemState.ConnectionsUnknownCount">
            <summary>
             Gets a value indicating the number of connections of unknown type that are currently connected. 
            </summary>    
        </member>
        <member name="P:Microsoft.WindowsMobile.Status.SystemState.ConnectionsUnknownDescriptions">
            <summary>
             Gets a semicolon delimited string containing the description of each connections of unknown type. 
            </summary>    
        </member>
        <member name="P:Microsoft.WindowsMobile.Status.SystemState.ConnectionsVpnCount">
            <summary>
             Gets a value indicating the number of virtual private network connections that are currently connected. 
            </summary>    
        </member>
        <member name="P:Microsoft.WindowsMobile.Status.SystemState.ConnectionsVpnDescriptions">
            <summary>
             Gets a semicolon delimited string containing the description of each virtual private network connection. 
            </summary>    
        </member>
        <member name="P:Microsoft.WindowsMobile.Status.SystemState.WiFiStatePowerOn">
            <summary>
             Gets a value indicating whether Wi-Fi is powered on.
            </summary>
        </member>
        <member name="P:Microsoft.WindowsMobile.Status.SystemState.WiFiStateConnecting">
            <summary>
             Gets a value indicating whether Wi-Fi is connecting to a network.
            </summary>
        </member>
        <member name="P:Microsoft.WindowsMobile.Status.SystemState.WiFiStateConnected">
            <summary>
             Gets a value indicating whether Wi-Fi is connected to a network.
            </summary>
        </member>
        <member name="P:Microsoft.WindowsMobile.Status.SystemState.WiFiStateNetworksAvailable">
            <summary>
             Gets a value indicating whether Wi-Fi networks are available.
            </summary>
        </member>
        <member name="P:Microsoft.WindowsMobile.Status.SystemState.WiFiStateHardwarePresent">
            <summary>
             Gets a value indicating whether Wi-Fi hardware is present.
            </summary>
        </member>
        <member name="P:Microsoft.WindowsMobile.Status.SystemState.BluetoothStatePowerOn">
            <summary>
             Gets a value indicating whether Bluetooth is powered on
            </summary>
        </member>
        <member name="P:Microsoft.WindowsMobile.Status.SystemState.BluetoothStateDiscoverable">
            <summary>
             Gets a value indicating whether Bluetooth is discoverable
            </summary>
        </member>
        <member name="P:Microsoft.WindowsMobile.Status.SystemState.BluetoothStateA2DPConnected">
            <summary>
             Gets a value indicating whether Bluetooth A2DP is connected
            </summary>
        </member>
        <member name="P:Microsoft.WindowsMobile.Status.SystemState.BluetoothStateHardwarePresent">
            <summary>
             Gets a value indicating whether Bluetooth hardware is present
            </summary>
        </member>
        <member name="P:Microsoft.WindowsMobile.Status.SystemState.BluetoothStateHandsFreeControl">
            <summary>
             Gets a value indicating whether device is under Bluetooth Hands Free Control
            </summary>
        </member>
        <member name="P:Microsoft.WindowsMobile.Status.SystemState.BluetoothStateHandsFreeAudio">
            <summary>
             Gets a value indicating whether device us under Bluetooth handsfree audio and control
            </summary>
        </member>
        <member name="P:Microsoft.WindowsMobile.Status.SystemState.ClamshellClosed">
            <summary>
             Gets a value indicating whether Clamshell is closed or not
            </summary>    
        </member>
        <member name="P:Microsoft.WindowsMobile.Status.SystemState.CalendarEvent">
            <summary>
             Gets the current "All Day Event" Appointment. 
            </summary>    
        </member>
        <member name="P:Microsoft.WindowsMobile.Status.SystemState.CalendarEventSubject">
            <summary>
             Gets the subject of the current "All Day Event" Appointment. 
            </summary>    
        </member>
        <member name="P:Microsoft.WindowsMobile.Status.SystemState.CalendarEventLocation">
            <summary>
             Gets the location of the current "All Day Event" Appointment. 
            </summary>    
        </member>
        <member name="P:Microsoft.WindowsMobile.Status.SystemState.CalendarEventStartTime">
            <summary>
             Gets the starting time of the current "All Day Event" Appointment. This will be the starting day of an Appointment Event that spans multiple days. 
            </summary>    
        </member>
        <member name="P:Microsoft.WindowsMobile.Status.SystemState.CalendarEventEndTime">
            <summary>
             Gets the ending time of the current "All Day Event" Appointment. This will be the starting day of an Appointment Event that spans multiple days. 
            </summary>    
        </member>
        <member name="P:Microsoft.WindowsMobile.Status.SystemState.CalendarEventHasConflict">
            <summary>
             Gets a value indicating whether the user's availability (free/busy) status conflicts with the current "All Day Event". 
            </summary>    
        </member>
        <member name="P:Microsoft.WindowsMobile.Status.SystemState.CalendarEventBusyStatus">
            <summary>
             Gets the user's availability (free/busy status) for the current "All Day Event". 
            </summary>    
        </member>
        <member name="P:Microsoft.WindowsMobile.Status.SystemState.CalendarEventCategories">
            <summary>
             Gets the categories for the current "All Day Event". 
            </summary>    
        </member>
        <member name="P:Microsoft.WindowsMobile.Status.SystemState.LockStates">
            <summary>
             Gets the mobile device's lock state. 
            </summary>    
        </member>
        <member name="P:Microsoft.WindowsMobile.Status.SystemState.SimLocked">
            <summary>
             Determines if SIM is currently locked.
            </summary>    
        </member>
        <member name="P:Microsoft.WindowsMobile.Status.SystemState.DeviceLocked">
            <summary>
             Determines if the device is currently key locked.
            </summary>    
        </member>
        <member name="P:Microsoft.WindowsMobile.Status.SystemState.KeyLocked">
            <summary>
             Determines if the device is currently locked (e.g. with password).
            </summary>    
        </member>
        <member name="P:Microsoft.WindowsMobile.Status.SystemState.Property">
            <summary>
             system property to monitor
            </summary>
        </member>
        <member name="P:Microsoft.WindowsMobile.Status.SystemState.CurrentValue">
            <summary>
             Gets the current value of this system property.
             <remarks> 
             Does not apply bitmasking.  You can use the CurrentMaskedValue property 
             to get the masked and right-shifted value.
             </remarks>
            </summary>
        </member>
        <member name="P:Microsoft.WindowsMobile.Status.SystemState.CurrentMaskedValue">
            <summary>
             Gets the current value of this system property masked and right-shifted.
            </summary>
        </member>
        <member name="E:Microsoft.WindowsMobile.Status.SystemState.Changed">
            <summary>
             Event that is raised when the state changes.
            </summary>
            <remarks>This event will be raised only during the lifetime of the SystemState object. </remarks>
            <example>
            The following example shows how to enable the Changed event to be raised 
            when the battery strength changes:
            <code>
            SystemState batteryStrength = new SystemState(SystemProperty.PowerBatteryStrength);
            
            private void Form1_Load(object sender, EventArgs e)
            {
                batteryStrength.Changed += new ChangeEventHandler(batteryStrength_Changed);
            }
            
            void batteryStrength_Changed(object sender, ChangeEventArgs args)
            {
                BatteryLevel batteryLevel = (BatteryLevel)args.NewValue;
            }
            </code>
            </example>
        </member>
        <member name="P:Microsoft.WindowsMobile.Status.SystemState.ApplicationArguments">
            <summary>
            Arguments passed to the application if application launcher is enabled
            </summary>
        </member>
        <member name="P:Microsoft.WindowsMobile.Status.SystemState.ApplicationToLaunch">
            <summary>
            Application to launch if application launcher is enabled
            </summary>
        </member>
        <member name="P:Microsoft.WindowsMobile.Status.SystemState.ApplicationLaunchId">
            <summary>
            Unique id for the SystemState
            </summary>
        </member>
        <member name="P:Microsoft.WindowsMobile.Status.SystemState.BitMask">
            <summary>
            Not Supported
            </summary>
        </member>
        <member name="P:Microsoft.WindowsMobile.Status.SystemState.ComparisonType">
             <summary>
             Type of comparison operation to perform if you want your event to be raised
             only under a specific condition
             </summary>
             <example>
             The following example shows how to enable the Changed event to be raised when
             the number of active tasks is greater than 3:
             <code>
             SystemState activeTasks = new SystemState(SystemProperty.TasksActive);
            
             private void Form1_Load(object sender, EventArgs e)
             {
                 activeTasks.ComparisonType = StatusComparisonType.Greater;
                 activeTasks.ComparisonValue = 3;
                 activeTasks.Changed += new ChangeEventHandler(activeTasks_Changed);
             }
            </code>
            </example>
        </member>
        <member name="P:Microsoft.WindowsMobile.Status.SystemState.ComparisonValue">
             <summary>
             The value to compare against
             </summary>
             <remarks>
             You must initialize <b>ComparisonValue</b> with either an integer or a string value. 
             To initialize it with an enumeration value, you must cast the value as either (int) or (string).
             </remarks>        
             <example>
             The following example shows how to enable the Changed event to be raised when
             the number of active tasks is greater than 3:
             <code>
             SystemState activeTasks = new SystemState(SystemProperty.TasksActive);
            
             private void Form1_Load(object sender, EventArgs e)
             {
                 activeTasks.ComparisonType = StatusComparisonType.Greater;
                 activeTasks.ComparisonValue = 3;
                 activeTasks.Changed += new ChangeEventHandler(activeTasks_Changed);
             }
            </code>
            </example>
        </member>
        <member name="T:Microsoft.WindowsMobile.Status.StatusComparisonType">
            <summary>
            Specifies the types of comparison operations used in status events.
            </summary>
        </member>
        <member name="F:Microsoft.WindowsMobile.Status.StatusComparisonType.AnyChange">
            <summary>
            Any state change. This is the default value.
            </summary>
        </member>
        <member name="F:Microsoft.WindowsMobile.Status.StatusComparisonType.Equal">
            <summary>
            The state values are equal.
            </summary>
        </member>
        <member name="F:Microsoft.WindowsMobile.Status.StatusComparisonType.NotEqual">
            <summary>
            The state values are not equal.
            </summary>
        </member>
        <member name="F:Microsoft.WindowsMobile.Status.StatusComparisonType.Greater">
            <summary>
            The comparison value is <i>greater than</i> the state value.
            </summary>
        </member>
        <member name="F:Microsoft.WindowsMobile.Status.StatusComparisonType.GreaterOrEqual">
            <summary>
            The comparison value is <i>greater than</i> or <i>equal to</i> the state value.
            </summary>
        </member>
        <member name="F:Microsoft.WindowsMobile.Status.StatusComparisonType.Less">
            <summary>
            The comparison value is <i>less than</i> the state value.
            </summary>
        </member>
        <member name="F:Microsoft.WindowsMobile.Status.StatusComparisonType.LessOrEqual">
            <summary>
            The comparison value is <i>less than</i> or <i>equal to</i> the state value.
            </summary>
        </member>
        <member name="F:Microsoft.WindowsMobile.Status.StatusComparisonType.Contains">
            <summary>
            The state value contains the comparison value (strings only).
            </summary>
        </member>
        <member name="F:Microsoft.WindowsMobile.Status.StatusComparisonType.StartsWith">
            <summary>
            The state value begins with the comparison value (strings only).
            </summary>
        </member>
        <member name="F:Microsoft.WindowsMobile.Status.StatusComparisonType.EndsWith">
            <summary>
            The state value ends with the comparison value (strings only).
            </summary>
        </member>
        <member name="T:Microsoft.WindowsMobile.Status.ChangeEventHandler">
            <summary>
            Represents the method that will handle the <b>Change</b> event.
            </summary>
            <remarks>
            When you create a <b>ChangeEventHandler</b> delegate, you identify the method that will handle the event. To associate the event with your event handler, add an instance of the delegate to the event. The event handler is called whenever the event occurs, unless you remove the delegate.
            </remarks>
        </member>
        <member name="T:Microsoft.WindowsMobile.Status.ChangeEventArgs">
            <summary>
            Arguments used when a <b>Change</b> event occurs.
            </summary>
        </member>
        <member name="P:Microsoft.WindowsMobile.Status.ChangeEventArgs.NewValue">
            <summary>
            Gets the new value when a state value changes.
            </summary>
        </member>
        <member name="T:Microsoft.WindowsMobile.Status.StateException">
            <summary>
            The exception that is thrown when an attempt to change a registry value fails (that is, when <b>Change Registration</b> fails).
            </summary>
        </member>
        <member name="M:Microsoft.WindowsMobile.Status.StateException.#ctor">
            <summary>
            Initializes a new instance of the <b>StateException</b> class.
            </summary>
        </member>
        <member name="M:Microsoft.WindowsMobile.Status.StateException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <b>StateException</b> class, using the specified exception text message.
            </summary>
            <param name="message">The text message in the exception.</param>
        </member>
        <member name="M:Microsoft.WindowsMobile.Status.StateException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes a new instance of the <b>StateException</b> class, using the specified exception text message and inner exception.
            </summary>
            <param name="message">The text message in the exception.</param>
            <param name="inner">The exception’s inner exception.</param>
        </member>
        <member name="T:Microsoft.WindowsMobile.Status.NotificationWindow">
            <summary>
            Represents the Window CE message window.
            </summary>
        </member>
        <member name="M:Microsoft.WindowsMobile.Status.NotificationWindow.Create(System.Boolean)">
            <summary>
            Creates a message window, and sets up a message pump for it. Called as a separate thread.
            </summary>
        </member>
        <member name="M:Microsoft.WindowsMobile.Status.NotificationWindow.Finalize">
            <summary>
            Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources, and performs other cleanup operations before garbage collection is performed.
            </summary>
        </member>
        <member name="M:Microsoft.WindowsMobile.Status.NotificationWindow.MessagePump">
            <summary>
            Creates a message window and sets up a message pump for it. Called as a separate thread.
            </summary>
        </member>
    </members>
</doc>
=== C:/Users/treeman/Desktop/windows nt source code\xbox\Xbox Live Source\XONLINE_MAIN\public\ext\sdk\wm7\sfone7\Managed Libraries\microsoft.windowsmobile.telephony.xml ===
<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Microsoft.WindowsMobile.Telephony</name>
    </assembly>
    <members>
        <member name="T:Microsoft.WindowsMobile.Telephony.PhoneMakeCallInfo">
            <summary>
            This structure mimics the <b>PhoneMakeCallInfo</b> structure on the native side. 
            </summary>
        </member>
        <member name="F:Microsoft.WindowsMobile.Telephony.PhoneMakeCallInfo.cbSize">
            <summary>
            The size of the structure.
            </summary>
        </member>
        <member name="F:Microsoft.WindowsMobile.Telephony.PhoneMakeCallInfo.dwFlags">
            <summary>
            A set of flags indication whether to show the dialog.
            </summary>
        </member>
        <member name="M:Microsoft.WindowsMobile.Telephony.PhoneMakeCallInfo.ToNativePointer">
            <summary>
            Extracts the contents of the managed structure, and allocates memory for it on the native side. 
            </summary>
            <returns>Pointer to the allocated struct on the native side. This must be freed.</returns>
        </member>
        <member name="P:Microsoft.WindowsMobile.Telephony.PhoneMakeCallInfo.Address">
            <summary>
            The phone number to dial.
            </summary>
        </member>
        <member name="T:Microsoft.WindowsMobile.Telephony.Phone">
            <summary>
            Defines methods for placing phone calls.
            </summary>
            <remarks>
            If the mobile device is a Pocket PC, then to use this class, it must be the Phone Edition.
            </remarks>
        </member>
        <member name="M:Microsoft.WindowsMobile.Telephony.Phone.#ctor">
            <summary>
            Initializes a new instance of the <b>Phone</b> class. 
            </summary>
        </member>
        <member name="M:Microsoft.WindowsMobile.Telephony.Phone.Talk(System.String)">
            <summary>
            Places the phone call, using the specified string phone number.
            </summary>
            <param name="number">The phone number to dial</param>
        </member>
        <member name="M:Microsoft.WindowsMobile.Telephony.Phone.Talk(System.String,System.Boolean)">
            <summary>
            Places the phone call, using the specified phone number, with a precautionary prompt for verification to proceed (a last chance to make sure you’ve got the right number).
            </summary>
            <param name="number">The phone number to dial</param>
            <param name="showPrompt">A bolean value indicating whether to prompt the user, asking for permission to proceed with placing the call.</param>
        </member>
        <member name="M:Microsoft.WindowsMobile.Telephony.Phone.Call(System.String,System.Boolean)">
            <summary>
            Places the phone call, using the specified phone number, with a precautionary prompt for verification to proceed (a last chance to make sure you’ve got the right number).
            </summary>
            <param name="number">The number to dial.</param>
            <param name="showPrompt">A bolean value indicating whether to prompt the user, asking for permission to proceed with placing the call.</param>
        </member>
    </members>
</doc>
=== C:/Users/treeman/Desktop/windows nt source code\xbox\Xbox Live Source\XONLINE_MAIN\public\ext\sdk\wm7\sfone7\Managed Libraries\microsoft.windowsmobile.xml ===
<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Microsoft.WindowsMobile</name>
    </assembly>
    <members>
        <member name="T:Microsoft.WindowsMobile.IApplicationLauncher">
            <summary>
            Defines the properties, methods, and events that are shared by any object that can have an application launched.
            </summary>
        </member>
        <member name="M:Microsoft.WindowsMobile.IApplicationLauncher.EnableApplicationLauncher(System.String)">
            <summary>
            Enables an application to be launched.
            </summary>
            <remarks>
            <b>EnableApplicationLauncher</b> attempts to learn the application file name; if it cannot, then an exception is thrown.
            </remarks>
        </member>
        <member name="M:Microsoft.WindowsMobile.IApplicationLauncher.EnableApplicationLauncher(System.String,System.String)">
            <summary>
            Enables an application to be launched, using its launch ID and file name.
            </summary>
            <param name="applicationLaunchId">The Application Launch ID.</param>
            <param name="applicationFileName">The path to executable to launch.</param>
        </member>
        <member name="M:Microsoft.WindowsMobile.IApplicationLauncher.EnableApplicationLauncher(System.String,System.String,System.String)">
            <summary>
            Enables an application to be launched; using its launch ID, its file name, and the list of any parameters it might need.
            </summary>
            <param name="applicationLaunchId">The Application Launch ID.</param>
            <param name="applicationFileName">The path to executable to launch.</param>
            <param name="arguments">The string of parameters to pass to launched application.</param>
        </member>
        <member name="M:Microsoft.WindowsMobile.IApplicationLauncher.DisableApplicationLauncher">
            <summary>
            Disables the application from being launched.
            </summary>
        </member>
        <member name="P:Microsoft.WindowsMobile.IApplicationLauncher.ApplicationLaunchId">
            <summary>
            Gets the ID that uniquely identifies a particular application launch request.
            </summary>
            <remarks>
            An application can have multiple application launch requests, but their ID's must all be unique.
            </remarks>
        </member>
        <member name="P:Microsoft.WindowsMobile.IApplicationLauncher.ApplicationToLaunch">
            <summary>
            Gets the fully qualified path-name of the application (the executable) to launch.
            </summary>
        </member>
        <member name="P:Microsoft.WindowsMobile.IApplicationLauncher.ApplicationArguments">
            <summary>
            Gets optional params to pass to the application to launch.
            </summary>
        </member>
        <member name="T:Microsoft.WindowsMobile.ApplicationLauncherEnableException">
            <summary>
            The exception that is thrown when Application Launcher Registration fails.
            </summary>
        </member>
        <member name="M:Microsoft.WindowsMobile.ApplicationLauncherEnableException.#ctor">
            <summary>
            Initializes a new instance of the <b>ApplicationLauncherEnableException</b> class.
            </summary>
        </member>
        <member name="M:Microsoft.WindowsMobile.ApplicationLauncherEnableException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <b>ApplicationLauncherEnableException</b> class, using an error message containing additional details about the failure.
            </summary>
            <param name="message">A string containing further details about the exception.</param>
        </member>
        <member name="M:Microsoft.WindowsMobile.ApplicationLauncherEnableException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes a new instance of the <b>ApplicationLauncherEnableException</b> class, using an error message containing additional details about the failure, and an inner exception.
            </summary>
            <param name="message">A string containing further details about the exception.</param>
            <param name="inner">An inner exception.</param>
        </member>
    </members>
</doc>
=== C:/Users/treeman/Desktop/windows nt source code\xbox\Xbox Live Source\XONLINE_MAIN\public\ext\sdk\wm7\sfone7\Managed Libraries\microsoft.windowsmobile.pocketoutlook.xml ===
<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Microsoft.WindowsMobile.PocketOutlook</name>
    </assembly>
    <members>
        <member name="T:Microsoft.WindowsMobile.PocketOutlook.Account">
            <summary>
            Defines a generic messaging account. This is the base class for EmailAccount and SmsAccount.
            <remarks>
            Normally you would not work with this class directly. You would use one of the derived classes instead, which provide access to the folders and messages they contain.
            A message store serves as a local archive for storing messages on Windows Mobile devices. One message store is present for each messaging account, and each messaging account is associated with one message transport. For example, you might use a Pocket PC to service three POP3 e-mail accounts. In this scenario, you might have four message stores: one for Outlook e-mail transferred through ActiveSync, two for Outlook e-mail transferred via POP3, and one for text messages transferred via SMS.
            </remarks>
            </summary>
        </member>
        <member name="M:Microsoft.WindowsMobile.PocketOutlook.Account.#ctor(System.IntPtr,Microsoft.WindowsMobile.PocketOutlook.ItemId,Microsoft.WindowsMobile.PocketOutlook.MailStore)">
            <summary>
            Initializes a new instance of the Account class with the specified account pointer, account ID, and mail store. 
            </summary>
        </member>
        <member name="M:Microsoft.WindowsMobile.PocketOutlook.Account.Finalize">
            <summary>
            The Account class destructor. Disposes an Account by calling this.Dispose(false).
            This method overrides System.Object.Finalize. Application code should not call this method; an object's Finalize method is automatically invoked during garbage collection, unless finalization by the garbage collector has been disabled by a call to the GC.SuppressFinalize method. 
            For more information, see cpconFinalizeMethodscDestructors, cpconCleaningUpUnmanagedResources, and cpconOverridingFinalizeMethod.
            </summary>
        </member>
        <member name="M:Microsoft.WindowsMobile.PocketOutlook.Account.Dispose">
            <summary>
            Disposes an Account. Disables finalization by the garbage collector by a calling GC.SuppressFinalize(this). 
            </summary>
        </member>
        <member name="M:Microsoft.WindowsMobile.PocketOutlook.Account.Dispose(System.Boolean)">
            <summary>
            Invalidates the Account, and releases its COM pointer.
            </summary>
            <remarks>
            The parentStore disposes of itself automatically.
            Throws an exception if the Account has already been disposed of.
            </remarks>
            <param name="disposing">
            Must be TRUE if called from the Dispose() method.
            </param>
        </member>
        <member name="P:Microsoft.WindowsMobile.PocketOutlook.Account.IsValid">
            <summary>
            Gets or sets a value indicating whether the current Account can be used. FALSE if the Account has beed deleted or is no longer valid.
            </summary>
        </member>
        <member name="P:Microsoft.WindowsMobile.PocketOutlook.Account.Disposed">
            <summary>
            Gets or sets a value indicating whether this Account has been disposed of.
            </summary>
        </member>
        <member name="P:Microsoft.WindowsMobile.PocketOutlook.Account.Name">
            <summary>
            Gets the name of the Account.
            </summary>
        </member>
        <member name="P:Microsoft.WindowsMobile.PocketOutlook.Account.Id">
            <summary>
            Gets the Account ID.
            </summary>
        </member>
        <member name="T:Microsoft.WindowsMobile.PocketOutlook.MessageInterception.AccountField">
            <summary>
            Possible account fields that can be used with conditions
            </summary>
        </member>
        <member name="F:Microsoft.WindowsMobile.PocketOutlook.MessageInterception.AccountField.DisplayName">
            <summary>
            The display name of the account
            </summary>
        </member>
        <member name="F:Microsoft.WindowsMobile.PocketOutlook.MessageInterception.AccountField.TransportName">
            <summary>
            The transport name of the account
            </summary>
        </member>
        <member name="T:Microsoft.WindowsMobile.PocketOutlook.MessageInterception.AccountCondition">
            <summary>
            Condition based on the type of the account the message belongs to
            </summary>
        </member>
        <member name="T:Microsoft.WindowsMobile.PocketOutlook.MessageInterception.MessagingCondition">
            <summary>
            Defines the comparison value and comparison type used for the filter criteria in message interception.
            </summary>
        </member>
        <member name="M:Microsoft.WindowsMobile.PocketOutlook.MessageInterception.MessagingCondition.#ctor">
            <summary>
            Initializes a new instance of the <b>MessagingCondition</b> class. The default constructor.
            </summary>
        </member>
        <member name="M:Microsoft.WindowsMobile.PocketOutlook.MessageInterception.MessagingCondition.#ctor(Microsoft.WindowsMobile.PocketOutlook.MessageInterception.MessagePropertyComparisonType,System.Boolean,System.String)">
            <summary>
            Initializes a new instance of the <b>MessagingCondition</b> class; using a comparison string, the comparison type, and a value indicating whether the match is case sensitive.
            </summary>
            <param name="comparisonType">The matching operation to use.</param>
            <param name="caseSensitive">Whether the match is case sensitive.</param>
            <param name="comparisonValue">The comparison string to match.</param>
        </member>
        <member name="M:Microsoft.WindowsMobile.PocketOutlook.MessageInterception.MessagingCondition.OnChange">
            <summary>
            This method is required in order to let derived classes call OnChangeHandler.
            </summary>
        </member>
        <member name="M:Microsoft.WindowsMobile.PocketOutlook.MessageInterception.MessagingCondition.Register(System.IntPtr)">
            <summary>
            This method does the actual registration for this object
            </summary>
            <param name="key">key to register under</param>
        </member>
        <member name="E:Microsoft.WindowsMobile.PocketOutlook.MessageInterception.MessagingCondition.OnChangeHandler">
            <summary>
            Raised when the Condition is changed.
            </summary>
        </member>
        <member name="P:Microsoft.WindowsMobile.PocketOutlook.MessageInterception.MessagingCondition.ComparisonType">
            <summary>
            Gets and sets the message property comparison type. 
            </summary>
        </member>
        <member name="P:Microsoft.WindowsMobile.PocketOutlook.MessageInterception.MessagingCondition.CaseSensitive">
            <summary>
            Gets and sets a value indicating whether the comparison is case sensitive.
            </summary>
        </member>
        <member name="P:Microsoft.WindowsMobile.PocketOutlook.MessageInterception.MessagingCondition.ComparisonValue">
            <summary>
            Gets and sets the message property filter criteria.
            </summary>
        </member>
        <member name="M:Microsoft.WindowsMobile.PocketOutlook.MessageInterception.AccountCondition.#ctor">
            <summary>
            Default constructor.
            Default Field is "DisplayName"
            Defaults to case sensitive, "Equal" operation
            </summary>
        </member>
        <member name="M:Microsoft.WindowsMobile.PocketOutlook.MessageInterception.AccountCondition.#ctor(Microsoft.WindowsMobile.PocketOutlook.MessageInterception.AccountField,System.String)">
            <summary>
            Constructs an AccountCondition used to define a condition operation on Account type.
            This constructor defines a "Contains" **for consistency**, case sensitive condition
            </summary>
            <param name="field">Field to apply the comparison to</param>
            <param name="match">string to match in account type</param>
        </member>
        <member name="M:Microsoft.WindowsMobile.PocketOutlook.MessageInterception.AccountCondition.#ctor(Microsoft.WindowsMobile.PocketOutlook.MessageInterception.AccountField,Microsoft.WindowsMobile.PocketOutlook.MessageInterception.MessagePropertyComparisonType,System.String)">
            <summary>
            Constructs an AccountCondition used to define a condition operation on Account type.
            </summary>
            <param name="field">Field to apply the comparison to</param>
            <param name="comparisonType">Type of match operation to use</param>
            <param name="match">string to match in account type</param>
        </member>
        <member name="M:Microsoft.WindowsMobile.PocketOutlook.MessageInterception.AccountCondition.#ctor(Microsoft.WindowsMobile.PocketOutlook.MessageInterception.AccountField,Microsoft.WindowsMobile.PocketOutlook.MessageInterception.MessagePropertyComparisonType,System.String,System.Boolean)">
            <summary>
            Constructs an AccountCondition used to define a condition operation on Account type.
            </summary>
            <param name="field">Field to apply the comparison to</param>
            <param name="comparisonType">Type of match operation to use</param>
            <param name="match">string to match in account type</param>
            <param name="caseSensitive">case sensitive or not</param>
        </member>
        <member name="P:Microsoft.WindowsMobile.PocketOutlook.MessageInterception.AccountCondition.Field">
            <summary>
            Account Field to apply the condition on.
            </summary>
        </member>
        <member name="T:Microsoft.WindowsMobile.PocketOutlook.Sensitivity">
            <summary>
            Specifies the sensitivity level assigned to Appointment and Task items. The default value is Normal.
            </summary>
        </member>
        <member name="F:Microsoft.WindowsMobile.PocketOutlook.Sensitivity.Normal">
            <summary>
            The normal sensitivity level.
            </summary>
        </member>
        <member name="F:Microsoft.WindowsMobile.PocketOutlook.Sensitivity.Personal">
            <summary>
            The personal sensitivity level. 
            </summary>
        </member>
        <member name="F:Microsoft.WindowsMobile.PocketOutlook.Sensitivity.Private">
            <summary>
            The private sensitivity level. 
            </summary>
        </member>
        <member name="F:Microsoft.WindowsMobile.PocketOutlook.Sensitivity.Confidential">
            <summary>
            The confidential sensitivity level. 
            </summary>
        </member>
        <member name="T:Microsoft.WindowsMobile.PocketOutlook.BusyStatus">
            <summary>
            Specifies a Contact's availability in the period of time spanned by an Appointment or Meeting. The default value is Busy.
            </summary>
        </member>
        <member name="F:Microsoft.WindowsMobile.PocketOutlook.BusyStatus.Free">
            <summary>
            The time-slot remains available for additonal scheduling requests. The Appointment will not conflict with another one that is scheduled for the same time-slot.
            </summary>
        </member>
        <member name="F:Microsoft.WindowsMobile.PocketOutlook.BusyStatus.Tentative">
            <summary>
            The time-slot remains available for additonal scheduling requests, but there is a chance that it will become unavailable (change to Busy). The Appointment will not conflict with another one that is scheduled for the same time-slot.
            </summary>
        </member>
        <member name="F:Microsoft.WindowsMobile.PocketOutlook.BusyStatus.Busy">
            <summary>
            The Busy status shows as busy. The time-slot is reserved, and therefore is unavailable for additonal scheduling. The Appointment will conflict with any other Appointment that is scheduled for the same time-slot.
            </summary>
        </member>
        <member name="F:Microsoft.WindowsMobile.PocketOutlook.BusyStatus.OutOfOffice">
            <summary>
            The time-slot is unavailable for any and all scheduling requests. This flag is used to indicate that a Contact will be unavailable for an extended period of time, and will not be accepting Meeting requests. The Appointment will conflict with another one that is scheduled for any time-slot that is spanned by this Appointment.
            </summary>
        </member>
        <member name="T:Microsoft.WindowsMobile.PocketOutlook.MeetingStatus">
            <summary>
            Specifies whether an Appointment is a Meeting, and if so, specifies its status. The default value is NotMeeting (just an Appointment).
            </summary>
        </member>
        <member name="F:Microsoft.WindowsMobile.PocketOutlook.MeetingStatus.NotMeeting">
            <summary>
            The Appointment is not a Meeting. It was created and saved without sending it to one or more Recipients.
            </summary>
            <value>0</value>
        </member>
        <member name="F:Microsoft.WindowsMobile.PocketOutlook.MeetingStatus.Meeting">
            <summary>
            The Appointment is a Meeting. It was created and sent to one or more Recipients.
            </summary>
            <value>1</value>
        </member>
        <member name="F:Microsoft.WindowsMobile.PocketOutlook.MeetingStatus.MeetingAccepted">
            <summary>
            The Appointment is a Meeting. The user has accepted the meeting request.
            </summary>
            <value>3</value>
        </member>
        <member name="F:Microsoft.WindowsMobile.PocketOutlook.MeetingStatus.MeetingCanceled">
            <summary>
            The Appointment is a Meeting, but it was cancelled by the meeting organizer.
            </summary>
            <value>7</value>
        </member>
        <member name="T:Microsoft.WindowsMobile.PocketOutlook.Appointment">
            <summary>
            Defines an Appointment item in the Appointment collection. Appointments are blocks of time that appear in the Outlook calendar. They can have beginning and ending times, can repeat, can have a location; and become Meetings when scheduled (sent) to recipients (Contacts).
            </summary>
            <remarks>
            An <b>Appointment</b> is a specialized <b>PimItem</b>. Use the <b>AppoitmentCollection</b> to add and retrieve Appointments to and from the Appointment (Calendar) folder.
            </remarks>
        </member>
        <member name="T:Microsoft.WindowsMobile.PocketOutlook.PimItem">
            <summary>
            Defines information about each PIM item in the Outlook session, such as the ItemID property that uniquely identifies PimItems.
            </summary>
            <remarks>
            The Appointment, Task, and Contact classes are based on this class.
            </remarks>
        </member>
        <member name="M:Microsoft.WindowsMobile.PocketOutlook.PimItem.#ctor(Microsoft.WindowsMobile.PocketOutlook.ItemId,Microsoft.WindowsMobile.PocketOutlook.FolderType)">
            <summary>
            Creates a new PimItem using the ID of an existing PIM item, along with its folder type.
            </summary>
            <param name="itemId">Identifier of the item to be retrieved</param>
            <param name="itemExpectedType">The type of item that should be constructed.</param>
            <exception cref="T:Microsoft.WindowsMobile.PocketOutlook.PocketOutlookException">Thrown when there is an error getting the PimItem type.</exception>
            <exception cref="T:System.ArgumentException">Thrown when the ItemId is not of the expected type.</exception>
        </member>
        <member name="M:Microsoft.WindowsMobile.PocketOutlook.PimItem.Finalize">
            <summary>
            The PimItem class destructor.
            </summary>
            <remarks>
            Disposes an PimItem object by calling this.Dispose(false). This method overrides System.Object.Finalize.
            <para>Application code should not call this method; an object's Finalize method is automatically invoked during garbage collection, unless finalization by the garbage collector has been disabled by a call to the GC.SuppressFinalize method.</para>
            <para>For more information, see <see>cpconFinalizeMethodscDestructors</see>, <see>cpconCleaningUpUnmanagedResources</see>, and <see>cpconOverridingFinalizeMethod</see>.</para>
            </remarks>
        </member>
        <member name="M:Microsoft.WindowsMobile.PocketOutlook.PimItem.ShowDialog">
            <summary>
            Opens the PIM item’s standard summary card.
            </summary>
        </member>
        <member name="M:Microsoft.WindowsMobile.PocketOutlook.PimItem.Update">
            <summary>
            Updates the PIM item store by saving changes made to a PIM item.
            </summary>
            <exception cref="T:Microsoft.WindowsMobile.PocketOutlook.PocketOutlookException">The item has not been added to a folder.</exception>
        </member>
        <member name="M:Microsoft.WindowsMobile.PocketOutlook.PimItem.Delete(System.Int32)">
            <summary>
            Occurs when the PIM item was deleted.
            </summary>
            <param name="index">index of the item that was deleted.</param>
            <remarks>
            Does not actually delete the item though.
            </remarks>
        </member>
        <member name="P:Microsoft.WindowsMobile.PocketOutlook.PimItem.Properties">
            <summary>
            Gets the PimPropertySet. This object is used for creating custom PIM item properties.
            </summary>
            <example>
            You can use Properties to access information on the PimItem or its folder.
            In this example, a few properties in a contact are set, and then some properties
            are read.
            <code>
            using (OutlookSession mySession = new OutlookSession())
            {
              // Create a contact in the Business Category.
              Contact myContact = new Contact();
              myContact.Properties[ContactProperty.FirstName] = "Eric";
              myContact.Properties[ContactProperty.LastName] = "Parkinson";
              myContact.Properties[ContactProperty.Categories] = "Business";
              mySession.Contacts.Items.Add(myContact);
            
              // Get the contact's first name.
              string contactFirstName = myContact.Properties[ContactProperty.FirstName].ToString();
                           
              // Get the contact's categories, in this case "Business".
              string contactCategory = myContact.Properties[ContactProperty.Categories].ToString();
                    
              // Get the contacts folder categories.
              // This will include all the categories in the contacts folder.
              string contactFolderCategories = myContact.Properties[ContactProperty.FolderCategories].ToString();
            }
            </code>
            </example>
        </member>
        <member name="P:Microsoft.WindowsMobile.PocketOutlook.PimItem.ItemId">
            <summary>
            Gets the PIM item’s ID.
            </summary>
        </member>
        <member name="T:Microsoft.WindowsMobile.PocketOutlook.PimItem.PimItemState">
            <summary>
            Enumeration that will be used if we want to place restrictions on the operations that can be made according to the way a message was intercepted.
            </summary>
        </member>
        <member name="F:Microsoft.WindowsMobile.PocketOutlook.PimItem.PimItemState.NotYetAdded">
            <summary>
            Not yet added to the collection. (Created like new Contact())
            </summary>
        </member>
        <member name="F:Microsoft.WindowsMobile.PocketOutlook.PimItem.PimItemState.Added">
            <summary>
            The item has already been added to the collection or was in the collection to start with. (i.e. contactCollection[3]);
            </summary>
        </member>
        <member name="F:Microsoft.WindowsMobile.PocketOutlook.PimItem.PimItemState.Deleted">
            <summary>
            The Item has been deleted and is not usable anymore.
            </summary>
        </member>
        <member name="M:Microsoft.WindowsMobile.PocketOutlook.Appointment.#ctor">
            <summary>
            Initializes a new instance of the Appointment class.
            </summary>
            <remarks>A new Appointment is created in a specified Folder. You must later add the Appointment to a collection using AppointmentCollection.Add().
            </remarks>
            <example>
            OutlookSession s;
            using (s = new OutlookSession()) 
            {
                Appointment a = new Appointment();
                // Set properties on "a" here.
                s.Appointments.Items.Add(a);
                a.Update();
            }
            </example>
        </member>
        <member name="M:Microsoft.WindowsMobile.PocketOutlook.Appointment.#ctor(Microsoft.WindowsMobile.PocketOutlook.ItemId)">
            <summary>
            Initializes a new instance of the Appointment class that references the item ID of an existing Appointment item.
            <remarks>
            An exception is thrown if the item ID does not belong to an Appointment.
            </remarks>
            </summary>
            <param name="itemId">The ItemID of an existing Appointment item.</param>
        </member>
        <member name="M:Microsoft.WindowsMobile.PocketOutlook.Appointment.Update">
            <summary>
            Updates the Appointment by saving the changes made to it.
            </summary>
            <exception cref="T:Microsoft.WindowsMobile.PocketOutlook.PocketOutlookException">The appointment has not been added to a folder.</exception>
        </member>
        <member name="M:Microsoft.WindowsMobile.PocketOutlook.Appointment.Delete">
             <summary>
             Deletes an Appointment item by removing it from the Appointment collection.
             </summary>
            
             <remarks>
             <b>Delete</b> throws a <b>Win32Exception</b> if the  delete operation is not successful.
             For example, this can happen when deleting a <b>Appointment</b> item that has not been 
             added to the <see cref="T:Microsoft.WindowsMobile.PocketOutlook.AppointmentCollection"/>.
             </remarks>
        </member>
        <member name="M:Microsoft.WindowsMobile.PocketOutlook.Appointment.Send">
            <summary>
            Sends (e-mails) a Meeting request to one or more Recipients.
            </summary>
        </member>
        <member name="M:Microsoft.WindowsMobile.PocketOutlook.Appointment.Cancel">
            <summary>
            Cancels a Meeting. Removes the Meeting from the calendar.
            <remarks>
            Cancel is available only if MeetingStatus is set to Meeting.
            </remarks>
            </summary>
        </member>
        <member name="M:Microsoft.WindowsMobile.PocketOutlook.Appointment.Copy">
            <summary>
            Creates a copy of the current Appointment in the Appointment collection.
            </summary>
            <exception cref="T:Microsoft.WindowsMobile.PocketOutlook.PocketOutlookException">Thrown when the appointment has not been added to the collection before calling the Copy method.</exception>
        </member>
        <member name="M:Microsoft.WindowsMobile.PocketOutlook.Appointment.ToString">
            <summary>
            Gets the subject of an Appointment.
            </summary>
            <returns>The subject of the Appointment.</returns>
        </member>
        <member name="E:Microsoft.WindowsMobile.PocketOutlook.Appointment.SubjectChanged">
            <summary>
            Occurs when an Appointment's Subject changes.
            </summary>
        </member>
        <member name="E:Microsoft.WindowsMobile.PocketOutlook.Appointment.LocationChanged">
            <summary>
            Occurs when an Appointment's Location changes.
            </summary>
        </member>
        <member name="E:Microsoft.WindowsMobile.PocketOutlook.Appointment.CategoriesChanged">
            <summary>
            Occurs when an Appointment's Categories change.
         