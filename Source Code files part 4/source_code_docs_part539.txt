
    </member>
    <member name="T:System.Web.UI.WebControls.SiteMapDataSource">
      <summary>Provides a data source control that Web server controls and other controls can use to bind to hierarchical site map data.</summary>
    </member>
    <member name="M:System.Web.UI.WebControls.SiteMapDataSource.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Web.UI.WebControls.SiteMapDataSource" /> class. </summary>
    </member>
    <member name="P:System.Web.UI.WebControls.SiteMapDataSource.ContainsListCollection">
      <summary>Gets a value indicating whether the data source control contains a collection of data source view objects.</summary>
      <returns>true if the data source control contains a collection of data source view objects; otherwise, false.</returns>
    </member>
    <member name="M:System.Web.UI.WebControls.SiteMapDataSource.GetHierarchicalView(System.String)">
      <summary>Retrieves a single view on the site map data for the <see cref="T:System.Web.SiteMapProvider" /> object according to the starting node and other properties of the data source.</summary>
      <returns>A <see cref="T:System.Web.UI.HierarchicalDataSourceView" /> helper object on the site map data, starting with the node that is identified by the <see cref="P:System.Web.UI.WebControls.SiteMapDataSource.StartingNodeUrl" /> or its child, if the <see cref="P:System.Web.UI.WebControls.SiteMapDataSource.ShowStartingNode" /> is false.</returns>
      <param name="viewPath">The URL of the starting node, specified by the <see cref="P:System.Web.UI.WebControls.SiteMapDataSource.StartingNodeUrl" />. </param>
      <exception cref="T:System.Web.HttpException">No <see cref="T:System.Web.SiteMapProvider" /> is configured or available for the site. </exception>
      <exception cref="T:System.InvalidOperationException">The <see cref="P:System.Web.UI.WebControls.SiteMapDataSource.StartFromCurrentNode" /> is true but the <see cref="P:System.Web.UI.WebControls.SiteMapDataSource.StartingNodeUrl" /> is set.</exception>
      <exception cref="T:System.ArgumentException">The <see cref="P:System.Web.UI.WebControls.SiteMapDataSource.StartingNodeUrl" /> is set but the <see cref="T:System.Web.UI.WebControls.SiteMapDataSource" /> cannot resolve a node for the specified URL.</exception>
    </member>
    <member name="M:System.Web.UI.WebControls.SiteMapDataSource.GetList">
      <summary>Retrieves a list of data source controls that can be used as sources of lists of data.</summary>
      <returns>An <see cref="T:System.Collections.IList" /> of data source controls that can be used as sources of lists of data.</returns>
    </member>
    <member name="M:System.Web.UI.WebControls.SiteMapDataSource.GetView(System.String)">
      <summary>Retrieves a named view on the site map data of the site map provider according to the starting node and other properties of the data source.</summary>
      <returns>A <see cref="T:System.Web.UI.HierarchicalDataSourceView" /> helper object on the site map data, according to the starting node that is identified by the <see cref="P:System.Web.UI.WebControls.SiteMapDataSource.StartingNodeUrl" /> property or its child, if the <see cref="P:System.Web.UI.WebControls.SiteMapDataSource.ShowStartingNode" /> is false.</returns>
      <param name="viewName">The name of the data source view to retrieve.</param>
      <exception cref="T:System.Web.HttpException">The <see cref="P:System.Web.UI.WebControls.SiteMapDataSource.Provider" /> is null.</exception>
      <exception cref="T:System.InvalidOperationException">The <see cref="P:System.Web.UI.WebControls.SiteMapDataSource.StartFromCurrentNode" /> is true but the <see cref="P:System.Web.UI.WebControls.SiteMapDataSource.StartingNodeUrl" /> is set.</exception>
      <exception cref="T:System.ArgumentException">The <see cref="P:System.Web.UI.WebControls.SiteMapDataSource.StartingNodeUrl" /> is set but the <see cref="T:System.Web.UI.WebControls.SiteMapDataSource" /> cannot resolve a node for the specified URL.</exception>
    </member>
    <member name="M:System.Web.UI.WebControls.SiteMapDataSource.GetViewNames">
      <summary>Retrieves a collection of named views for the data source control.</summary>
      <returns>An <see cref="T:System.Collections.ICollection" /> of named <see cref="T:System.Web.UI.WebControls.SiteMapDataSourceView" /> objects associated with the <see cref="T:System.Web.UI.WebControls.SiteMapDataSource" />. Because the <see cref="T:System.Web.UI.WebControls.SiteMapDataSource" /> supports only one named view, the <see cref="M:System.Web.UI.WebControls.SiteMapDataSource.GetViewNames" /> method returns an <see cref="T:System.Collections.ICollection" /> with one <see cref="F:System.String.Empty" /> element.</returns>
    </member>
    <member name="P:System.Web.UI.WebControls.SiteMapDataSource.Provider">
      <summary>Gets or sets a <see cref="T:System.Web.SiteMapProvider" /> object that is associated with the data source control.</summary>
      <returns>A <see cref="T:System.Web.SiteMapProvider" /> that is associated with the data source control; otherwise, if no provider is explicitly set, the default site map provider.</returns>
      <exception cref="T:System.Web.HttpException">The provider named by the <see cref="P:System.Web.UI.WebControls.SiteMapDataSource.SiteMapProvider" /> is not available.- or -No default provider is configured for the site.</exception>
    </member>
    <member name="P:System.Web.UI.WebControls.SiteMapDataSource.ShowStartingNode">
      <summary>Gets or sets a value indicating whether the starting node is retrieved and displayed. </summary>
      <returns>true if the starting node is displayed; otherwise, false. The default is true.</returns>
    </member>
    <member name="P:System.Web.UI.WebControls.SiteMapDataSource.SiteMapProvider">
      <summary>Gets or sets the name of the site map provider that the data source binds to.</summary>
      <returns>The name of the site map provider that the <see cref="T:System.Web.UI.WebControls.SiteMapDataSource" /> binds to. By default, the value is <see cref="F:System.String.Empty" />, and the default site map provider for the site is used.</returns>
    </member>
    <member name="P:System.Web.UI.WebControls.SiteMapDataSource.StartFromCurrentNode">
      <summary>Gets or sets a value indicating whether the site map node tree is retrieved using the node that represents the current page.</summary>
      <returns>true if the node tree is retrieved relative to the current page; otherwise, false. The default is false. </returns>
    </member>
    <member name="P:System.Web.UI.WebControls.SiteMapDataSource.StartingNodeOffset">
      <summary>Gets or sets a positive or negative integer offset from the starting node that determines the root hierarchy that is exposed by the data source control.</summary>
      <returns>The default is 0, which indicates that the root hierarchy exposed by the <see cref="T:System.Web.UI.WebControls.SiteMapDataSource" /> is the same as the starting node.</returns>
    </member>
    <member name="P:System.Web.UI.WebControls.SiteMapDataSource.StartingNodeUrl">
      <summary>Gets or sets a node in the site map that the data source then uses as a reference point to retrieve nodes from a hierarchical site map.</summary>
      <returns>The URL of a node in the site map. The <see cref="T:System.Web.UI.WebControls.SiteMapDataSource" /> retrieves the identified <see cref="T:System.Web.SiteMapNode" /> and any child nodes from the site map. The default is an <see cref="F:System.String.Empty" />.</returns>
    </member>
    <member name="P:System.Web.UI.WebControls.SiteMapDataSource.System#ComponentModel#IListSource#ContainsListCollection">
      <summary>Gets a value that indicates whether the collection is a collection of <see cref="T:System.Collections.IList" /> objects.</summary>
      <returns>true if the <see cref="T:System.Web.UI.WebControls.SiteMapDataSource" /> is associated with one or more <see cref="T:System.Web.UI.WebControls.SiteMapDataSourceView" /> objects; otherwise, false.</returns>
    </member>
    <member name="M:System.Web.UI.WebControls.SiteMapDataSource.System#ComponentModel#IListSource#GetList">
      <summary>For a description of this member, see <see cref="M:System.ComponentModel.IListSource.GetList" />.</summary>
      <returns>An <see cref="T:System.Collections.IList" /> of data source controls that can be used as sources of lists of data.</returns>
    </member>
    <member name="E:System.Web.UI.WebControls.SiteMapDataSource.System#Web#UI#IDataSource#DataSourceChanged">
      <summary>Occurs when a data source control has changed in some way that affects data-bound controls.</summary>
    </member>
    <member name="M:System.Web.UI.WebControls.SiteMapDataSource.System#Web#UI#IDataSource#GetView(System.String)">
      <summary>For a description of this member, see <see cref="M:System.Web.UI.IDataSource.GetView(System.String)" />.</summary>
      <returns>A <see cref="T:System.Web.UI.HierarchicalDataSourceView" /> helper object on the site map data, according to the starting node identified by the <see cref="P:System.Web.UI.WebControls.SiteMapDataSource.StartingNodeUrl" /> property or its child, if the <see cref="P:System.Web.UI.WebControls.SiteMapDataSource.ShowStartingNode" /> is false.</returns>
      <param name="viewName">The URL of the root node of the view. </param>
      <exception cref="T:System.Web.HttpException">No <see cref="T:System.Web.SiteMapProvider" /> is configured or available for the site. </exception>
    </member>
    <member name="M:System.Web.UI.WebControls.SiteMapDataSource.System#Web#UI#IDataSource#GetViewNames">
      <summary>For a description of this member, see <see cref="M:System.Web.UI.IDataSource.GetViewNames" />.</summary>
      <returns>An <see cref="T:System.Collections.ICollection" /> of named <see cref="T:System.Web.UI.WebControls.SiteMapDataSourceView" /> objects associated with the <see cref="T:System.Web.UI.WebControls.SiteMapDataSource" />. Because the <see cref="T:System.Web.UI.WebControls.SiteMapDataSource" /> supports only one named view, the <see cref="M:System.Web.UI.WebControls.SiteMapDataSource.GetViewNames" /> returns a collection containing one element set to <see cref="F:System.String.Empty" />.</returns>
    </member>
    <member name="T:System.Web.UI.WebControls.SiteMapDataSourceView">
      <summary>Provides a strongly typed <see cref="T:System.Web.UI.HierarchicalDataSourceView" /> object for the <see cref="T:System.Web.UI.WebControls.SiteMapDataSource" /> control.</summary>
    </member>
    <member name="M:System.Web.UI.WebControls.SiteMapDataSourceView.#ctor(System.Web.UI.WebControls.SiteMapDataSource,System.String,System.Web.SiteMapNode)">
      <summary>Initializes a new named instance of the <see cref="T:System.Web.UI.WebControls.SiteMapDataSourceView" /> class, adding the single specified node to the internal collection of nodes.</summary>
      <param name="owner">The <see cref="T:System.Web.UI.WebControls.SiteMapDataSource" /> that the <see cref="T:System.Web.UI.WebControls.SiteMapDataSourceView" /> is associated with.</param>
      <param name="name">The name of the view.</param>
      <param name="node">The <see cref="T:System.Web.SiteMapNode" /> to add to the internal <see cref="T:System.Web.SiteMapNodeCollection" />. </param>
    </member>
    <member name="M:System.Web.UI.WebControls.SiteMapDataSourceView.#ctor(System.Web.UI.WebControls.SiteMapDataSource,System.String,System.Web.SiteMapNodeCollection)">
      <summary>Initializes a new named instance of the <see cref="T:System.Web.UI.WebControls.SiteMapDataSourceView" /> class, setting the internal collection of nodes to the specified node collection.</summary>
      <param name="owner">The <see cref="T:System.Web.UI.WebControls.SiteMapDataSource" /> that the <see cref="T:System.Web.UI.WebControls.SiteMapDataSourceView" /> is associated with.</param>
      <param name="name">The name of the view.</param>
      <param name="collection">A <see cref="T:System.Web.SiteMapNodeCollection" /> of nodes that the <see cref="T:System.Web.UI.WebControls.SiteMapDataSourceView" /> provides a view of. </param>
    </member>
    <member name="M:System.Web.UI.WebControls.SiteMapDataSourceView.ExecuteSelect(System.Web.UI.DataSourceSelectArguments)">
      <summary>Gets the collection of the <see cref="T:System.Web.SiteMapNode" /> objects that represents the site navigation structure for the current user.</summary>
      <returns>A <see cref="T:System.Web.SiteMapNodeCollection" /> that represents the site navigation structure for the current user.</returns>
      <param name="arguments">A <see cref="T:System.Web.UI.DataSourceSelectArguments" /> that is used to request operations on the data beyond basic data retrieval.</param>
      <exception cref="T:System.NotSupportedException">The <paramref name="arguments" /> passed to the <see cref="M:System.Web.UI.WebControls.SiteMapDataSourceView.Select(System.Web.UI.DataSourceSelectArguments)" /> specify that the data source should perform some additional work while retrieving data to enable paging or sorting through the retrieved data, but the data source control does not support the requested capability.</exception>
    </member>
    <member name="M:System.Web.UI.WebControls.SiteMapDataSourceView.OnDataSourceViewChanged(System.EventArgs)">
      <param name="e">An <see cref="T:System.EventArgs" /> object.</param>
    </member>
    <member name="M:System.Web.UI.WebControls.SiteMapDataSourceView.Select(System.Web.UI.DataSourceSelectArguments)">
      <summary>Gets the collection of the <see cref="T:System.Web.SiteMapNode" /> objects that represents the site navigation structure for the current user.</summary>
      <returns>A <see cref="T:System.Web.SiteMapNodeCollection" /> that represents the site navigation structure for the current user. </returns>
      <param name="arguments">A <see cref="T:System.Web.UI.DataSourceSelectArguments" /> that is used to request operations on the data beyond basic data retrieval.</param>
      <exception cref="T:System.NotSupportedException">The <paramref name="arguments" /> passed to the <see cref="M:System.Web.UI.WebControls.SiteMapDataSourceView.Select(System.Web.UI.DataSourceSelectArguments)" /> specify that the data source should perform some additional work while retrieving data to enable paging or sorting through the retrieved data, but the data source control does not support the requested capability.</exception>
    </member>
    <member name="T:System.Web.UI.WebControls.SiteMapHierarchicalDataSourceView">
      <summary>Represents a data view on a site map node or collection of nodes for a <see cref="T:System.Web.UI.WebControls.SiteMapDataSource" /> control.</summary>
    </member>
    <member name="M:System.Web.UI.WebControls.SiteMapHierarchicalDataSourceView.#ctor(System.Web.SiteMapNode)">
      <summary>Initializes a new instance of the <see cref="T:System.Web.UI.WebControls.SiteMapHierarchicalDataSourceView" /> class, adding the specified node to the <see cref="T:System.Web.UI.IHierarchicalEnumerable" /> collection that the data source view maintains.</summary>
      <param name="node">A <see cref="T:System.Web.SiteMapNode" /> that the data source view represents.</param>
    </member>
    <member name="M:System.Web.UI.WebControls.SiteMapHierarchicalDataSourceView.#ctor(System.Web.SiteMapNodeCollection)">
      <summary>Initializes a new instance of the <see cref="T:System.Web.UI.WebControls.SiteMapHierarchicalDataSourceView" /> class, setting the specified collection to the <see cref="T:System.Web.UI.IHierarchicalEnumerable" /> collection that the data source view maintains.</summary>
      <param name="collection">A <see cref="T:System.Web.SiteMapNodeCollection" /> that the data source view represents.</param>
    </member>
    <member name="M:System.Web.UI.WebControls.SiteMapHierarchicalDataSourceView.Select">
      <summary>Gets the collection of the <see cref="T:System.Web.SiteMapNode" /> objects that represents the site navigation structure for the current user.</summary>
      <returns>An <see cref="T:System.Web.UI.IHierarchicalEnumerable" /> collection of site map nodes.</returns>
    </member>
    <member name="T:System.Web.UI.WebControls.SiteMapNodeItem">
      <summary>The <see cref="T:System.Web.UI.WebControls.SiteMapNodeItem" /> class is used by the <see cref="T:System.Web.UI.WebControls.SiteMapPath" /> control to functionally represent a <see cref="T:System.Web.SiteMapNode" />.</summary>
    </member>
    <member name="M:System.Web.UI.WebControls.SiteMapNodeItem.#ctor(System.Int32,System.Web.UI.WebControls.SiteMapNodeItemType)">
      <summary>Initializes a new instance of the <see cref="T:System.Web.UI.WebControls.SiteMapNodeItem" /> class, using the specified index and <see cref="T:System.Web.UI.WebControls.SiteMapNodeItemType" />.</summary>
      <param name="itemIndex">The index in the <see cref="P:System.Web.UI.Control.Controls" /> collection that the <see cref="T:System.Web.UI.WebControls.SiteMapPath" /> control uses to track the <see cref="T:System.Web.UI.WebControls.SiteMapNodeItem" /> object. </param>
      <param name="itemType">The functional type of <see cref="T:System.Web.SiteMapNode" /> that this <see cref="T:System.Web.UI.WebControls.SiteMapNodeItem" /> represents. </param>
    </member>
    <member name="P:System.Web.UI.WebControls.SiteMapNodeItem.ItemIndex">
      <summary>Retrieves the index that the <see cref="T:System.Web.UI.WebControls.SiteMapPath" /> control uses to track and manage the <see cref="T:System.Web.UI.WebControls.SiteMapNodeItem" /> in its internal collections.</summary>
      <returns>An integer that represents the location of the <see cref="T:System.Web.UI.WebControls.SiteMapNodeItem" /> in the <see cref="T:System.Web.UI.WebControls.SiteMapPath" /> control's internal collections.</returns>
    </member>
    <member name="P:System.Web.UI.WebControls.SiteMapNodeItem.ItemType">
      <summary>Retrieves the functional type of the <see cref="T:System.Web.UI.WebControls.SiteMapNodeItem" />.</summary>
      <returns>A member of the <see cref="T:System.Web.UI.WebControls.SiteMapNodeItemType" /> enumeration that indicates the functional role of the node item in the navigation path hierarchy.</returns>
    </member>
    <member name="M:System.Web.UI.WebControls.SiteMapNodeItem.SetItemType(System.Web.UI.WebControls.SiteMapNodeItemType)">
      <summary>Sets the current <see cref="T:System.Web.UI.WebControls.SiteMapNodeItem" /><see cref="P:System.Web.UI.WebControls.SiteMapNodeItem.ItemType" /> property.</summary>
      <param name="itemType">One of the <see cref="T:System.Web.UI.WebControls.SiteMapNodeItemType" /> values. </param>
    </member>
    <member name="P:System.Web.UI.WebControls.SiteMapNodeItem.SiteMapNode">
      <summary>Gets or sets the <see cref="T:System.Web.SiteMapNode" /> object that the <see cref="T:System.Web.UI.WebControls.SiteMapNodeItem" /> represents.</summary>
      <returns>A <see cref="T:System.Web.SiteMapNode" /> object that the <see cref="T:System.Web.UI.WebControls.SiteMapPath" /> control uses to display a site navigation user interface.</returns>
    </member>
    <member name="P:System.Web.UI.WebControls.SiteMapNodeItem.System#Web#UI#IDataItemContainer#DataItem">
      <summary>Gets an object that is used in simplified data-binding operations.</summary>
      <returns>An object that represents the value to use when data-binding operations are performed.</returns>
    </member>
    <member name="P:System.Web.UI.WebControls.SiteMapNodeItem.System#Web#UI#IDataItemContainer#DataItemIndex">
      <summary>Gets the index of the data item that is bound to the control.</summary>
      <returns>An integer that represents the location of the data item in the <see cref="T:System.Web.UI.WebControls.SiteMapPath" /> control's internal collections.</returns>
    </member>
    <member name="P:System.Web.UI.WebControls.SiteMapNodeItem.System#Web#UI#IDataItemContainer#DisplayIndex">
      <summary>Gets the position of the data item as displayed in the control.</summary>
      <returns>An integer that represents the location of the data item in the <see cref="T:System.Web.UI.WebControls.SiteMapPath" /> control's internal collections.</returns>
    </member>
    <member name="T:System.Web.UI.WebControls.SiteMapNodeItemEventArgs">
      <summary>Provides data for the <see cref="E:System.Web.UI.WebControls.SiteMapPath.ItemCreated" /> and <see cref="E:System.Web.UI.WebControls.SiteMapPath.ItemDataBound" /> events.</summary>
    </member>
    <member name="M:System.Web.UI.WebControls.SiteMapNodeItemEventArgs.#ctor(System.Web.UI.WebControls.SiteMapNodeItem)">
      <summary>Initializes a new instance of the <see cref="T:System.Web.UI.WebControls.SiteMapNodeItemEventArgs" /> class, setting the specified <see cref="T:System.Web.UI.WebControls.SiteMapNodeItem" /> object as the source of the event.</summary>
      <param name="item">A <see cref="T:System.Web.UI.WebControls.SiteMapNodeItem" /> that is the source of the event. </param>
    </member>
    <member name="P:System.Web.UI.WebControls.SiteMapNodeItemEventArgs.Item">
      <summary>Gets the node item that is the source of the event.</summary>
      <returns>The <see cref="T:System.Web.UI.WebControls.SiteMapNodeItem" /> that is the source of the event.</returns>
    </member>
    <member name="T:System.Web.UI.WebControls.SiteMapNodeItemEventHandler">
      <summary>Represents the method that will handle the <see cref="E:System.Web.UI.WebControls.SiteMapPath.ItemCreated" /> and <see cref="E:System.Web.UI.WebControls.SiteMapPath.ItemDataBound" /> events for the <see cref="T:System.Web.UI.WebControls.SiteMapNodeItem" /> class.</summary>
      <param name="sender">The source of the event. </param>
      <param name="e">A <see cref="T:System.Web.UI.WebControls.SiteMapNodeItemEventArgs" /> that contains the event data. </param>
    </member>
    <member name="T:System.Web.UI.WebControls.SiteMapNodeItemType">
      <summary>The <see cref="T:System.Web.UI.WebControls.SiteMapNodeItemType" /> enumeration is used by the <see cref="T:System.Web.UI.WebControls.SiteMapPath" /> control to identify the type of a <see cref="T:System.Web.UI.WebControls.SiteMapNodeItem" /> node within a node hierarchy.</summary>
    </member>
    <member name="F:System.Web.UI.WebControls.SiteMapNodeItemType.Root">
      <summary>The top node of the site navigation hierarchy. There can be only one root node.</summary>
    </member>
    <member name="F:System.Web.UI.WebControls.SiteMapNodeItemType.Parent">
      <summary>A parent node of the currently viewed page in the site navigation path. A parent node is any node that is found between the root node and the current node in the navigation hierarchy.</summary>
    </member>
    <member name="F:System.Web.UI.WebControls.SiteMapNodeItemType.Current">
      <summary>The currently viewed page in the site navigation path.</summary>
    </member>
    <member name="F:System.Web.UI.WebControls.SiteMapNodeItemType.PathSeparator">
      <summary>A site map navigation path separator. The default separator for the <see cref="T:System.Web.UI.WebControls.SiteMapPath" /> control is the "&gt;" character.</summary>
    </member>
    <member name="T:System.Web.UI.WebControls.SiteMapPath">
      <summary>Displays a set of text or image hyperlinks that enable users to more easily navigate a Web site, while taking a minimal amount of page space.</summary>
    </member>
    <member name="M:System.Web.UI.WebControls.SiteMapPath.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Web.UI.WebControls.SiteMapPath" /> class.</summary>
    </member>
    <member name="M:System.Web.UI.WebControls.SiteMapPath.CreateChildControls">
      <summary>Clears the current child controls collection, and rebuilds it by calling the <see cref="M:System.Web.UI.WebControls.SiteMapPath.CreateControlHierarchy" /> method.</summary>
    </member>
    <member name="M:System.Web.UI.WebControls.SiteMapPath.CreateControlHierarchy">
      <summary>Examines the site map structure provided by the <see cref="P:System.Web.UI.WebControls.SiteMapPath.SiteMapProvider" /> and builds a child controls collection based on the styles and templates defined for the functional nodes.</summary>
      <exception cref="T:System.Web.HttpException">No <see cref="P:System.Web.UI.WebControls.SiteMapPath.SiteMapProvider" /> is available to the <see cref="T:System.Web.UI.WebControls.SiteMapPath" /> control. </exception>
    </member>
    <member name="P:System.Web.UI.WebControls.SiteMapPath.CurrentNodeStyle">
      <summary>Gets the style used for the display text for the current node.</summary>
      <returns>The <see cref="T:System.Web.UI.WebControls.Style" /> that contains the style settings for the display text for the current node of the <see cref="T:System.Web.UI.WebControls.SiteMapPath" /> control.</returns>
    </member>
    <member name="P:System.Web.UI.WebControls.SiteMapPath.CurrentNodeTemplate">
      <summary>Gets or sets a control template to use for the node of a site navigation path that represents the currently displayed page.</summary>
      <returns>An <see cref="T:System.Web.UI.ITemplate" /> object that implements the <see cref="M:System.Web.UI.ITemplate.InstantiateIn(System.Web.UI.Control)" /> method, to render custom content for the navigation path node that represents the currently displayed page.</returns>
    </member>
    <member name="M:System.Web.UI.WebControls.SiteMapPath.DataBind">
      <summary>Binds a data source to the <see cref="T:System.Web.UI.WebControls.SiteMapPath" /> control and its child controls.</summary>
    </member>
    <member name="M:System.Web.UI.WebControls.SiteMapPath.InitializeItem(System.Web.UI.WebControls.SiteMapNodeItem)">
      <summary>Populates a <see cref="T:System.Web.UI.WebControls.SiteMapNodeItem" />, which is a Web server control that represents a <see cref="T:System.Web.SiteMapNode" />, with a set of child controls based on the node's function and the specified templates and styles for the node.</summary>
      <param name="item">The <see cref="T:System.Web.UI.WebControls.SiteMapNodeItem" /> to initialize. </param>
    </member>
    <member name="E:System.Web.UI.WebControls.SiteMapPath.ItemCreated">
      <summary>Occurs when a <see cref="T:System.Web.UI.WebControls.SiteMapNodeItem" /> is created by the <see cref="T:System.Web.UI.WebControls.SiteMapPath" /> and is associated with its corresponding <see cref="T:System.Web.SiteMapNode" />. This event is raised by the <see cref="M:System.Web.UI.WebControls.SiteMapPath.OnItemCreated(System.Web.UI.WebControls.SiteMapNodeItemEventArgs)" /> method.</summary>
    </member>
    <member name="E:System.Web.UI.WebControls.SiteMapPath.ItemDataBound">
      <summary>Occurs after a <see cref="T:System.Web.UI.WebControls.SiteMapNodeItem" /> has been bound to its underlying <see cref="T:System.Web.SiteMapNode" /> data by the <see cref="T:System.Web.UI.WebControls.SiteMapPath" />. This event is raised by the <see cref="M:System.Web.UI.WebControls.SiteMapPath.OnItemDataBound(System.Web.UI.WebControls.SiteMapNodeItemEventArgs)" /> method.</summary>
    </member>
    <member name="M:System.Web.UI.WebControls.SiteMapPath.LoadViewState(System.Object)">
      <summary>Restores view-state information from a previous request that was saved with the <see cref="M:System.Web.UI.WebControls.SiteMapPath.SaveViewState" /> method.</summary>
      <param name="savedState">An <see cref="T:System.Object" /> that represents the control state to be restored. </param>
    </member>
    <member name="P:System.Web.UI.WebControls.SiteMapPath.NodeStyle">
      <summary>Gets the style used for the display text for all nodes in the site navigation path.</summary>
      <returns>The <see cref="T:System.Web.UI.WebControls.Style" /> that contains the style settings for the display text in the <see cref="T:System.Web.UI.WebControls.SiteMapPath" /> control.</returns>
    </member>
    <member name="P:System.Web.UI.WebControls.SiteMapPath.NodeTemplate">
      <summary>Gets or sets a control template to use for all functional nodes of a site navigation path.</summary>
      <returns>An <see cref="T:System.Web.UI.ITemplate" /> object that implements the <see cref="M:System.Web.UI.ITemplate.InstantiateIn(System.Web.UI.Control)" /> method, to render custom content for each node of a navigation path.</returns>
    </member>
    <member name="M:System.Web.UI.WebControls.SiteMapPath.OnDataBinding(System.EventArgs)">
      <summary>Overrides the <see cref="M:System.Web.UI.Control.OnDataBinding(System.EventArgs)" /> method of the <see cref="T:System.Web.UI.WebControls.CompositeControl" /> class and raises the <see cref="E:System.Web.UI.Control.DataBinding" /> event.</summary>
      <param name="e">An <see cref="T:System.EventArgs" /> that contains event data. </param>
    </member>
    <member name="M:System.Web.UI.WebControls.SiteMapPath.OnItemCreated(System.Web.UI.WebControls.SiteMapNodeItemEventArgs)">
      <summary>Raises the <see cref="E:System.Web.UI.WebControls.SiteMapPath.ItemCreated" /> event of the <see cref="T:System.Web.UI.WebControls.SiteMapPath" /> control.</summary>
      <param name="e">A <see cref="T:System.Web.UI.WebControls.SiteMapNodeItemEventArgs" /> that contains event data. </param>
    </member>
    <member name="M:System.Web.UI.WebControls.SiteMapPath.OnItemDataBound(System.Web.UI.WebControls.SiteMapNodeItemEventArgs)">
      <summary>Raises the <see cref="E:System.Web.UI.WebControls.SiteMapPath.ItemDataBound" /> event of the <see cref="T:System.Web.UI.WebControls.SiteMapPath" /> control.</summary>
      <param name="e">A <see cref="T:System.Web.UI.WebControls.SiteMapNodeItemEventArgs" /> that contains event data. </param>
    </member>
    <member name="P:System.Web.UI.WebControls.SiteMapPath.ParentLevelsDisplayed">
      <summary>Gets or sets the number of levels of parent nodes the control displays, relative to the currently displayed node.</summary>
      <returns>An integer that specifies the number of levels of parent nodes displayed, relative to the current context node. The default value is -1, which indicates no restriction on the number of parent levels that the control displays.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">The value for <see cref="P:System.Web.UI.WebControls.SiteMapPath.ParentLevelsDisplayed" /> is less than -1.</exception>
    </member>
    <member name="P:System.Web.UI.WebControls.SiteMapPath.PathDirection">
      <summary>Gets or sets the order that the navigation path nodes are rendered in.</summary>
      <returns>A <see cref="T:System.Web.UI.WebControls.PathDirection" /> that indicates the hierarchical order that navigation nodes are rendered in. The default is <see cref="F:System.Web.UI.WebControls.PathDirection.RootToCurrent" />, which indicates that the nodes are rendered in hierarchical order from the top-most node to the current node, from left to right.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">The value for <see cref="P:System.Web.UI.WebControls.SiteMapPath.PathDirection" /> is not one of the base <see cref="T:System.Web.UI.WebControls.PathDirection" /> enumerations. </exception>
    </member>
    <member name="P:System.Web.UI.WebControls.SiteMapPath.PathSeparator">
      <summary>Gets or sets the string that delimits <see cref="T:System.Web.UI.WebControls.SiteMapPath" /> nodes in the rendered navigation path.</summary>
      <returns>A string that represents the delimiter for the nodes in a navigation path. The default is " &gt; ", which is a character pointing from left to right, and corresponds to the default <see cref="T:System.Web.UI.WebControls.PathDirection" />, which is set to <see cref="F:System.Web.UI.WebControls.PathDirection.RootToCurrent" />.</returns>
    </member>
    <member name="P:System.Web.UI.WebControls.SiteMapPath.PathSeparatorStyle">
      <summary>Gets the style used for the <see cref="P:System.Web.UI.WebControls.SiteMapPath.PathSeparator" /> string.</summary>
      <returns>The <see cref="T:System.Web.UI.WebControls.Style" /> that contains the style settings of the <see cref="T:System.Web.UI.WebControls.SiteMapPath" /> control's <see cref="P:System.Web.UI.WebControls.SiteMapPath.PathSeparator" /> text.</returns>
    </member>
    <member name="P:System.Web.UI.WebControls.SiteMapPath.PathSeparatorTemplate">
      <summary>Gets or sets a control template to use for the path delimiter of a site navigation path.</summary>
      <returns>An <see cref="T:System.Web.UI.ITemplate" /> object that implements the <see cref="M:System.Web.UI.ITemplate.InstantiateIn(System.Web.UI.Control)" /> method, to render custom content for the path delimiter of a navigation path.</returns>
    </member>
    <member name="P:System.Web.UI.WebControls.SiteMapPath.Provider">
      <summary>Gets or sets a <see cref="T:System.Web.SiteMapProvider" /> that is associated with the Web server control.</summary>
      <returns>A <see cref="T:System.Web.SiteMapProvider" /> instance that is associated with the control. If no provider is explicitly set, the default site map provider is used.</returns>
      <exception cref="T:System.Web.HttpException">The provider named by the <see cref="P:System.Web.UI.WebControls.SiteMapDataSource.SiteMapProvider" /> property is not available.- or -There is no default provider configured for the site.</exception>
    </member>
    <member name="M:System.Web.UI.WebControls.SiteMapPath.Render(System.Web.UI.HtmlTextWriter)">
      <param name="writer">An <see cref="T:System.Web.UI.HtmlTextWriter" /> that represents the output stream to render HTML content on the client.</param>
    </member>
    <member name="M:System.Web.UI.WebControls.SiteMapPath.RenderContents(System.Web.UI.HtmlTextWriter)">
      <summary>Renders the nodes in the <see cref="T:System.Web.UI.WebControls.SiteMapPath" /> control.</summary>
      <param name="writer">The <see cref="T:System.Web.UI.HtmlTextWriter" /> that represents the output stream used to write content to a Web page.</param>
    </member>
    <member name="P:System.Web.UI.WebControls.SiteMapPath.RenderCurrentNodeAsLink">
      <summary>Indicates whether the site navigation node that represents the currently displayed page is rendered as a hyperlink.</summary>
      <returns>true if the node that represents the current page is rendered as a hyperlink; otherwise, false. The default value is false.</returns>
    </member>
    <member name="P:System.Web.UI.WebControls.SiteMapPath.RootNodeStyle">
      <summary>Gets the style for the root node display text.</summary>
      <returns>The <see cref="T:System.Web.UI.WebControls.Style" /> that contains the style settings for the <see cref="T:System.Web.UI.WebControls.SiteMapPath" /> control root node display text.</returns>
    </member>
    <member name="P:System.Web.UI.WebControls.SiteMapPath.RootNodeTemplate">
      <summary>Gets or sets a control template to use for the root node of a site navigation path.</summary>
      <returns>An <see cref="T:System.Web.UI.ITemplate" /> object that implements the <see cref="M:System.Web.UI.ITemplate.InstantiateIn(System.Web.UI.Control)" /> method, to render custom content for the root node of a navigation path.</returns>
    </member>
    <member name="M:System.Web.UI.WebControls.SiteMapPath.SaveViewState">
      <summary>Saves changes to view state for the <see cref="T:System.Web.UI.WebControls.SiteMapPath" /> control.</summary>
      <returns>Returns the server control's current view state. If there is no view state associated with the control, this method returns null.</returns>
    </member>
    <member name="P:System.Web.UI.WebControls.SiteMapPath.ShowToolTips">
      <summary>Gets or sets a value indicating whether the <see cref="T:System.Web.UI.WebControls.SiteMapPath" /> control writes an additional hyperlink attribute for hyperlinked navigation nodes. Depending on client support, when a mouse hovers over a hyperlink that has the additional attribute set, a ToolTip is displayed.</summary>
      <returns>true if alternate text should be written for hyperlinked navigation nodes; otherwise, false. The default value is true.</returns>
    </member>
    <member name="P:System.Web.UI.WebControls.SiteMapPath.SiteMapProvider">
      <summary>Gets or sets the name of the <see cref="T:System.Web.SiteMapProvider" /> used to render the site navigation control.</summary>
      <returns>The name of a <see cref="T:System.Web.SiteMapProvider" /> that defines the navigation structure for the <see cref="T:System.Web.UI.WebControls.SiteMapPath" /> to display. All available providers are contained in the <see cref="P:System.Web.SiteMap.Providers" /> collection, and can be enumerated and retrieved by name using the <see cref="P:System.Web.SiteMapProviderCollection.Item(System.String)" /> property.</returns>
    </member>
    <member name="P:System.Web.UI.WebControls.SiteMapPath.SkipLinkText">
      <summary>Gets or sets a value that is used to render alternate text for screen readers to skip the control's content.</summary>
      <returns>A string that the <see cref="T:System.Web.UI.WebControls.SiteMapPath" /> control renders as alternate text with an invisible image, as a hint to screen readers. The default value is "Skip Navigation Links". </returns>
    </member>
    <member name="M:System.Web.UI.WebControls.SiteMapPath.TrackViewState">
      <summary>Tracks changes to the <see cref="T:System.Web.UI.WebControls.SiteMapPath" /> control's view state.</summary>
    </member>
    <member name="T:System.Web.UI.WebControls.SortDirection">
      <summary>Specifies the direction in which to sort a list of items.</summary>
    </member>
    <member name="F:System.Web.UI.WebControls.SortDirection.Ascending">
      <summary>Sort from smallest to largest. For example, from A to Z.</summary>
    </member>
    <member name="F:System.Web.UI.WebControls.SortDirection.Descending">
      <summary>Sort from largest to smallest. For example, from Z to A.</summary>
    </member>
    <member name="T:System.Web.UI.WebControls.SqlDataSource">
      <summary>Represents an SQL database to data-bound controls.</summary>
    </member>
    <member name="M:System.Web.UI.WebControls.SqlDataSource.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Web.UI.WebControls.SqlDataSource" /> class.</summary>
    </member>
    <member name="M:System.Web.UI.WebControls.SqlDataSource.#ctor(System.String,System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.Web.UI.WebControls.SqlDataSource" /> class with the specified connection string and Select command.</summary>
      <param name="connectionString">The connection string used to connect to the underlying database. </param>
      <param name="selectCommand">The SQL query used to retrieve data from the underlying database. If the SQL query is a parameterized SQL string, you might need to add <see cref="T:System.Web.UI.WebControls.Parameter" /> objects to the <see cref="P:System.Web.UI.WebControls.SqlDataSource.SelectParameters" /> collection. </param>
    </member>
    <member name="M:System.Web.UI.WebControls.SqlDataSource.#ctor(System.String,System.String,System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.Web.UI.WebControls.SqlDataSource" /> class with the specified connection string and Select command.</summary>
      <param name="providerName">The name of the data provider that the <see cref="T:System.Web.UI.WebControls.SqlDataSource" /> uses. If no provider is set, the <see cref="T:System.Web.UI.WebControls.SqlDataSource" /> uses the ADO.NET provider for Microsoft SQL Server, by default. </param>
      <param name="connectionString">The connection string used to connect to the underlying database. </param>
      <param name="selectCommand">The SQL query used to retrieve data from the underlying database. If the SQL query is a parameterized SQL string, you might need to add <see cref="T:System.Web.UI.WebControls.Parameter" /> objects to the <see cref="P:System.Web.UI.WebControls.SqlDataSource.SelectParameters" /> collection. </param>
    </member>
    <member name="P:System.Web.UI.WebControls.SqlDataSource.CacheDuration">
      <summary>Gets or sets the length of time, in seconds, that the data source control caches data that is retrieved by the <see cref="M:System.Web.UI.WebControls.SqlDataSource.Select(System.Web.UI.DataSourceSelectArguments)" /> method.</summary>
      <returns>The number of seconds that the <see cref="T:System.Web.UI.WebControls.SqlDataSource" /> caches the results of a <see cref="M:System.Web.UI.WebControls.SqlDataSource.Select(System.Web.UI.DataSourceSelectArguments)" /> operation. The default is 0. The value cannot be negative.</returns>
    </member>
    <member name="P:System.Web.UI.WebControls.SqlDataSource.CacheExpirationPolicy">
      <summary>Gets or sets the cache expiration behavior that, when combined with the duration, describes the behavior of the cache that the data source control uses.</summary>
      <returns>One of the <see cref="T:System.Web.UI.DataSourceCacheExpiry" /> values. The default is the <see cref="F:System.Web.UI.DataSourceCacheExpiry.Absolute" /> value.</returns>
    </member>
    <member name="P:System.Web.UI.WebControls.SqlDataSource.CacheKeyDependency">
      <summary>Gets or sets a user-defined key dependency that is linked to all data cache objects that are created by the data source control. All cache objects are explicitly expired when the key is expired.</summary>
      <returns>A key that identifies all cache objects created by the <see cref="T:System.Web.UI.WebControls.SqlDataSource" />.</returns>
    </member>
    <member name="P:System.Web.UI.WebControls.SqlDataSource.CancelSelectOnNullParameter">
      <summary>Gets or sets a value indicating whether a data retrieval operation is canceled when any parameter that is contained in the <see cref="P:System.Web.UI.WebControls.SqlDataSource.SelectParameters" /> collection evaluates to null.</summary>
      <returns>true if a data retrieval operation is canceled when a parameter contained in the <see cref="P:System.Web.UI.WebControls.SqlDataSource.SelectParameters" /> collection evaluated to null; otherwise, false. The default is true.</returns>
    </member>
    <member name="P:System.Web.UI.WebControls.SqlDataSource.ConflictDetection">
      <summary>Gets or sets the value indicating how the <see cref="T:System.Web.UI.WebControls.SqlDataSource" /> control performs updates and deletes when data in a row in the underlying database changes during the time of the operation.</summary>
      <returns>One of the <see cref="T:System.Web.UI.ConflictOptions" /> values. The default is the <see cref="F:System.Web.UI.ConflictOptions.OverwriteChanges" /> value.</returns>
    </member>
    <member name="P:System.Web.UI.WebControls.SqlDataSource.ConnectionString">
      <summary>Gets or sets the ADO.NET provider–specific connection string that the <see cref="T:System.Web.UI.WebControls.SqlDataSource" /> control uses to connect to an underlying database.</summary>
      <returns>A .NET Framework data provider–specific string that the <see cref="T:System.Web.UI.WebControls.SqlDataSource" /> uses to connect to the SQL database that it represents. The default is an empty string ("").</returns>
    </member>
    <member name="M:System.Web.UI.WebControls.SqlDataSource.CreateDataSourceView(System.String)">
      <summary>Creates a data source view object that is associated with the data source control.</summary>
      <returns>A <see cref="T:System.Web.UI.WebControls.SqlDataSourceView" /> that is associated with the <see cref="T:System.Web.UI.WebControls.SqlDataSource" />.</returns>
      <param name="viewName">The name of the data source view. </param>
    </member>
    <member name="P:System.Web.UI.WebControls.SqlDataSource.DataSourceMode">
      <summary>Gets or sets the data retrieval mode that the <see cref="T:System.Web.UI.WebControls.SqlDataSource" /> control uses to fetch data.</summary>
      <returns>One of the <see cref="T:System.Web.UI.WebControls.SqlDataSourceMode" /> values. The default is the  <see cref="F:System.Web.UI.WebControls.SqlDataSourceMode.DataSet" /> value.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">The <see cref="P:System.Web.UI.WebControls.SqlDataSource.DataSourceMode" /> property is not one of the values defined in the <see cref="T:System.Web.UI.WebControls.SqlDataSourceMode" />. </exception>
    </member>
    <member name="M:System.Web.UI.WebControls.SqlDataSource.Delete">
      <summary>Performs a delete operation using the <see cref="P:System.Web.UI.WebControls.SqlDataSource.DeleteCommand" /> SQL string and any parameters that are in the <see cref="P:System.Web.UI.WebControls.SqlDataSource.DeleteParameters" /> collection.</summary>
      <returns>A value that represents the number of rows deleted from the underlying database.</returns>
      <exception cref="T:System.InvalidOperationException">The <see cref="T:System.Web.UI.WebControls.SqlDataSource" /> cannot establish a connection with the underlying data source. </exception>
    </member>
    <member name="P:System.Web.UI.WebControls.SqlDataSource.DeleteCommand">
      <summary>Gets or sets the SQL string that the <see cref="T:System.Web.UI.WebControls.SqlDataSource" /> control uses to delete data from the underlying database.</summary>
      <returns>An SQL string that the <see cref="T:System.Web.UI.WebControls.SqlDataSource" /> uses to delete data.</returns>
    </member>
    <member name="P:System.Web.UI.WebControls.SqlDataSource.DeleteCommandType">
      <summary>Gets or sets a value indicating whether the text in the <see cref="P:System.Web.UI.WebControls.SqlDataSource.DeleteCommand" /> property is an SQL statement or the name of a stored procedure.</summary>
      <returns>One of the <see cref="T:System.Web.UI.WebControls.SqlDataSourceCommandType" /> values. The default is the <see cref="F:System.Web.UI.WebControls.SqlDataSourceCommandType.Text" /> value.</returns>
    </member>
    <member name="E:System.Web.UI.WebControls.SqlDataSource.Deleted">
      <summary>Occurs when a delete operation has completed.</summary>
    </member>
    <member name="P:System.Web.UI.WebControls.SqlDataSource.DeleteParameters">
      <summary>Gets the parameters collection that contains the parameters that are used by the <see cref="P:System.Web.UI.WebControls.SqlDataSource.DeleteCommand" /> property from the <see cref="T:System.Web.UI.WebControls.SqlDataSourceView" /> object that is associated with the <see cref="T:System.Web.UI.WebControls.SqlDataSource" /> control.</summary>
      <returns>A <see cref="T:System.Web.UI.WebControls.ParameterCollection" /> that contains the parameters used by the <see cref="P:System.Web.UI.WebControls.SqlDataSource.DeleteCommand" /> property.</returns>
    </member>
    <member name="E:System.Web.UI.WebControls.SqlDataSource.Deleting">
      <summary>Occurs before a delete operation.</summary>
    </member>
    <member name="P:System.Web.UI.WebControls.SqlDataSource.EnableCaching">
      <summary>Gets or sets a value indicating whether the <see cref="T:System.Web.UI.WebControls.SqlDataSource" /> control has data caching enabled.</summary>
      <returns>true if data caching is enabled for the data source control; otherwise, false. The default is false.</returns>
      <exception cref="T:System.NotSupportedException">The <see cref="P:System.Web.UI.WebControls.SqlDataSource.EnableCaching" /> property is set to true when caching is not supported by the <see cref="T:System.Web.UI.WebControls.SqlDataSource" />. </exception>
    </member>
    <member name="P:System.Web.UI.WebControls.SqlDataSource.FilterExpression">
      <summary>Gets or sets a filtering expression that is applied when the <see cref="M:System.Web.UI.WebControls.SqlDataSource.Select(System.Web.UI.DataSourceSelectArguments)" /> method is called.</summary>
      <returns>A string that represents a filtering expression applied when data is retrieved using the <see cref="M:System.Web.UI.WebControls.SqlDataSource.Select(System.Web.UI.DataSourceSelectArguments)" /> method.</returns>
      <exception cref="T:System.NotSupportedException">The <see cref="P:System.Web.UI.WebControls.SqlDataSource.FilterExpression" /> property was set and the <see cref="T:System.Web.UI.WebControls.SqlDataSource" /> is in <see cref="F:System.Web.UI.WebControls.SqlDataSourceMode.DataReader" /> mode. </exception>
    </member>
    <member name="E:System.Web.UI.WebControls.SqlDataSource.Filtering">
      <summary>Occurs before a filter operation.</summary>
    </member>
    <member name="P:System.Web.UI.WebControls.SqlDataSource.FilterParameters">
      <summary>Gets a collection of parameters that are associated with any parameter placeholders that are in the <see cref="P:System.Web.UI.WebControls.SqlDataSource.FilterExpression" /> string.</summary>
      <returns>A <see cref="T:System.Web.UI.WebControls.ParameterCollection" /> that contains a set of parameters associated with any parameter placeholders found in the <see cref="P:System.Web.UI.WebControls.SqlDataSource.FilterExpression" /> property.</returns>
    </member>
    <member name="M:System.Web.UI.WebControls.SqlDataSource.GetDbProviderFactory">
      <summary>Returns the <see cref="T:System.Data.Common.DbProviderFactory" /> object that is associated with the ADO.NET provider that is identified by the <see cref="P:System.Web.UI.WebControls.SqlDataSource.ProviderName" /> property.</summary>
      <returns>A <see cref="T:System.Data.Common.DbProviderFactory" /> that represents the identified ADO.NET provider; otherwise, and instance of the <see cref="N:System.Data.SqlClient" />, if no provider is set.</returns>
    </member>
    <member name="M:System.Web.UI.WebControls.SqlDataSource.GetView(System.String)">
      <summary>Gets the named data source view that is associated with the data source control.</summary>
      <returns>The <see cref="T:System.Web.UI.WebControls.SqlDataSourceView" /> named "Table" that is associated with the <see cref="T:System.Web.UI.WebControls.SqlDataSource" />.</returns>
      <param name="viewName">The name of the view to retrieve. Because the <see cref="T:System.Web.UI.WebControls.SqlDataSource" /> supports only one view, <paramref name="viewName" /> is ignored. </param>
      <exception cref="T:System.ArgumentException">
        <paramref name="viewName" /> is null or something other than Table. </exception>
    </member>
    <member name="M:System.Web.UI.WebControls.SqlDataSource.GetViewNames">
      <summary>Gets a collection of names representing the list of view objects that are associated with the <see cref="T:System.Web.UI.WebControls.SqlDataSource" /> control.</summary>
      <returns>An <see cref="T:System.Collections.ICollection" /> that contains the names of the views associated with the <see cref="T:System.Web.UI.WebControls.SqlDataSource" />.</returns>
    </member>
    <member name="M:System.Web.UI.WebControls.SqlDataSource.Insert">
      <summary>Performs an insert operation using the <see cref="P:System.Web.UI.WebControls.SqlDataSource.InsertCommand" /> SQL string and any parameters that are in the <see cref="P:System.Web.UI.WebControls.SqlDataSource.InsertParameters" /> collection.</summary>
      <returns>A value that represents the number of rows inserted into the underlying database.</returns>
      <exception cref="T:System.InvalidOperationException">The <see cref="T:System.Web.UI.WebControls.SqlDataSource" /> cannot establish a connection with the underlying data source. </exception>
    </member>
    <member name="P:System.Web.UI.WebControls.SqlDataSource.InsertCommand">
      <summary>Gets or sets the SQL string that the <see cref="T:System.Web.UI.WebControls.SqlDataSource" /> control uses to insert data into the underlying database.</summary>
      <returns>An SQL string that the <see cref="T:System.Web.UI.WebControls.SqlDataSource" /> uses to insert data.</returns>
    </member>
    <member name="P:System.Web.UI.WebControls.SqlDataSource.InsertCommandType">
      <summary>Gets or sets a value indicating whether the text in the <see cref="P:System.Web.UI.WebControls.SqlDataSource.InsertCommand" /> property is an SQL statement or the name of a stored procedure. </summary>
      <returns>One of the <see cref="T:System.Web.UI.WebControls.SqlDataSourceCommandType" /> values. The default is the <see cref="F:System.Web.UI.WebControls.SqlDataSourceCommandType.Text" /> value.</returns>
    </member>
    <member name="E:System.Web.UI.WebControls.SqlDataSource.Inserted">
      <summary>Occurs when an insert operation has completed.</summary>
    </member>
    <member name="E:System.Web.UI.WebControls.SqlDataSource.Inserting">
      <summary>Occurs before an insert operation.</summary>
    </member>
    <member name="P:System.Web.UI.WebControls.SqlDataSource.InsertParameters">
      <summary>Gets the parameters collection that contains the parameters that are used by the <see cref="P:System.Web.UI.WebControls.SqlDataSource.InsertCommand" /> property from the <see cref="T:System.Web.UI.WebControls.SqlDataSourceView" /> object that is associated with the <see cref="T:System.Web.UI.WebControls.SqlDataSource" /> control.</summary>
      <returns>A <see cref="T:System.Web.UI.WebControls.ParameterCollection" /> that contains the parameters used by the <see cref="P:System.Web.UI.WebControls.SqlDataSource.InsertCommand" /> property.</returns>
    </member>
    <member name="M:System.Web.UI.WebControls.SqlDataSource.LoadViewState(System.Object)">
      <summary>Loads the state of the properties in the <see cref="T:System.Web.UI.WebControls.SqlDataSource" /> control that need to be persisted.</summary>
      <param name="savedState">An object that represents the state of the <see cref="T:System.Web.UI.WebControls.SqlDataSource" />.</param>
    </member>
    <member name="P:System.Web.UI.WebControls.SqlDataSource.OldValuesParameterFormatString">
      <summary>Gets or sets a format string to apply to the names of any parameters that are passed to the <see cref="M:System.Web.UI.WebControls.SqlDataSource.Delete" /> or <see cref="M:System.Web.UI.WebControls.SqlDataSource.Update" /> method.</summary>
      <returns>A string that represents a format string applied to the names of any <paramref name="oldValues" /> parameters passed to the <see cref="M:System.Web.UI.WebControls.SqlDataSource.Delete" /> or <see cref="M:System.Web.UI.WebControls.SqlDataSource.Update" /> methods. The default is "{0}".</returns>
    </member>
    <member name="M:System.Web.UI.WebControls.SqlDataSource.OnInit(System.EventArgs)">
      <summary>Adds a <see cref="E:System.Web.UI.Page.LoadComplete" /> event handler to the <see cref="T:System.Web.UI.Page" /> control that contains the <see cref="T:System.Web.UI.WebControls.SqlDataSource" /> control.</summary>
      <param name="e">An <see cref="T:System.EventArgs" /> that contains the event data. </param>
    </member>
    <member name="P:System.Web.UI.WebControls.SqlDataSource.ProviderName">
      <summary>Gets or sets the name of the .NET Framework data provider that the <see cref="T:System.Web.UI.WebControls.SqlDataSource" /> control uses to connect to an underlying data source.</summary>
      <returns>The name of the data provider that the <see cref="T:System.Web.UI.WebControls.SqlDataSource" /> uses; otherwise, the ADO.NET provider for Microsoft SQL Server, if no provider is set. The default is the ADO.NET provider for Microsoft SQL Server.</returns>
    </member>
    <member name="M:System.Web.UI.WebControls.SqlDataSource.SaveViewState">
      <summary>Saves the current view state of the <see cref="T:System.Web.UI.WebControls.SqlDataSource" /> control.</summary>
      <returns>An object that contains the saved state of the <see cref="T:System.Web.UI.WebControls.SqlDataSource" />.</returns>
    </member>
    <member name="M:System.Web.UI.WebControls.SqlDataSource.Select(System.Web.UI.DataSourceSelectArguments)">
      <summary>Retrieves data from the underlying database by using the <see cref="P:System.Web.UI.WebControls.SqlDataSource.SelectCommand" /> SQL string and any parameters that are in the <see cref="P:System.Web.UI.WebControls.SqlDataSource.SelectParameters" /> collection.</summary>
      <returns>An <see cref="T:System.Collections.IEnumerable" /> list of data rows.</returns>
      <param name="arguments">A <see cref="T:System.Web.UI.DataSourceSelectArguments" /> object that is used to request operations on the data beyond basic data retrieval.</param>
      <exception cref="T:System.InvalidOperationException">The <see cref="T:System.Web.UI.WebControls.SqlDataSource" /> object cannot establish a connection with the underlying data source. </exception>
    </member>
    <member name="P:System.Web.UI.WebControls.SqlDataSource.SelectCommand">
      <summary>Gets or sets the SQL string that the <see cref="T:System.Web.UI.WebControls.SqlDataSource" /> control uses to retrieve data from the underlying database.</summary>
      <returns>An SQL string or the name of a stored procedure that the <see cref="T:System.Web.UI.WebControls.SqlDataSource" /> uses to retrieve data.</returns>
    </member>
    <member name="P:System.Web.UI.WebControls.SqlDataSource.SelectCommandType">
      <summary>Gets or sets a value indicating whether the text in the <see cref="P:System.Web.UI.WebControls.SqlDataSource.SelectCommand" /> property is an SQL query or the name of a stored procedure.</summary>
      <returns>One of the <see cref="T:System.Web.UI.WebControls.SqlDataSourceCommandType" /> values. The default is the <see cref="F:System.Web.UI.WebControls.SqlDataSourceCommandType.Text" /> value.</returns>
    </member>
    <member name="E:System.Web.UI.WebControls.SqlDataSource.Selected">
      <summary>Occurs when a data retrieval operation has completed.</summary>
    </member>
    <member name="E:System.Web.UI.WebControls.SqlDataSource.Selecting">
      <summary>Occurs before a data retrieval operation.</summary>
    </member>
    <member name="P:System.Web.UI.WebControls.SqlDataSource.SelectParameters">
      <summary>Gets the parameters collection that contains the parameters that are used by the <see cref="P:System.Web.UI.WebControls.SqlDataSource.SelectCommand" /> property from the <see cref="T:System.Web.UI.WebControls.SqlDataSourceView" /> object that is associated with the <see cref="T:System.Web.UI.WebControls.SqlDataSource" /> control.</summary>
      <returns>A <see cref="T:System.Web.UI.WebControls.ParameterCollection" /> that contains the parameters used by the <see cref="P:System.Web.UI.WebControls.SqlDataSource.SelectCommand" /> property.</returns>
    </member>
    <member name="P:System.Web.UI.WebControls.SqlDataSource.SortParameterName">
      <summary>Gets or sets the name of a stored procedure parameter that is used to sort retrieved data when data retrieval is performed using a stored procedure.</summary>
      <returns>The name of a stored procedure parameter used to sort retrieved data when data retrieval is performed using a stored procedure.</returns>
    </member>
    <member name="P:System.Web.UI.WebControls.SqlDataSource.SqlCacheDependency">
      <summary>Gets or sets a semicolon-delimited string that indicates which databases and tables to use for the Microsoft SQL Server cache dependency.</summary>
      <returns>A string that indicates which databases and tables to use for the SQL Server cache dependency.</returns>
    </member>
    <member name="M:System.Web.UI.WebControls.SqlDataSource.TrackViewState">
      <summary>Tracks view state changes to the <see cref="T:System.Web.UI.WebControls.SqlDataSource" /> control so that the changes can be stored in the <see cref="T:System.Web.UI.StateBag" /> object for the control.</summary>
    </member>
    <member name="M:System.Web.UI.WebControls.SqlDataSource.Update">
      <summary>Performs an update operation using the <see cref="P:System.Web.UI.WebControls.SqlDataSource.UpdateCommand" /> SQL string and any parameters that are in the <see cref="P:System.Web.UI.WebControls.SqlDataSource.UpdateParameters" /> collection.</summary>
      <returns>A value that represents the number of rows updated in the underlying database.</returns>
      <exception cref="T:System.InvalidOperationException">The <see cref="T:System.Web.UI.WebControls.SqlDataSource" /> cannot establish a connection with the underlying data source. </exception>
    </member>
    <member name="P:System.Web.UI.WebControls.SqlDataSource.UpdateCommand">
      <summary>Gets or sets the SQL string that the <see cref="T:System.Web.UI.WebControls.SqlDataSource" /> control uses to update data in the underlying database.</summary>
      <returns>An SQL string that the <see cref="T:System.Web.UI.WebControls.SqlDataSource" /> uses to update data.</returns>
    </member>
    <member name="P:System.Web.UI.WebControls.SqlDataSource.UpdateCommandType">
      <summary>Gets or sets a value indicating whether the text in the <see cref="P:System.Web.UI.WebControls.SqlDataSource.UpdateCommand" /> property is an SQL statement or the name of a stored procedure.</summary>
      <returns>One of the <see cref="T:System.Web.UI.WebControls.SqlDataSourceCommandType" /> values. The default is the <see cref="F:System.Web.UI.WebControls.SqlDataSourceCommandType.Text" /> value.</returns>
    </member>
    <member name="E:System.Web.UI.WebControls.SqlDataSource.Updated">
      <summary>Occurs when an update operation has completed.</summary>
    </member>
    <member name="P:System.Web.UI.WebControls.SqlDataSource.UpdateParameters">
      <summary>Gets the parameters collection that contains the parameters that are used by the <see cref="P:System.Web.UI.WebControls.SqlDataSource.UpdateCommand" /> property from the <see cref="T:System.Web.UI.WebControls.SqlDataSourceView" /> control that is associated with the <see cref="T:System.Web.UI.WebControls.SqlDataSource" /> control.</summary>
      <returns>A <see cref="T:System.Web.UI.WebControls.ParameterCollection" /> that contains the parameters used by the <see cref="P:System.Web.UI.WebControls.SqlDataSource.UpdateCommand" /> property.</returns>
    </member>
    <member name="E:System.Web.UI.WebControls.SqlDataSource.Updating">
      <summary>Occurs before an update operation.</summary>
    </member>
    <member name="T:System.Web.UI.WebControls.SqlDataSourceCommandEventArgs">
      <summary>Provides data for the <see cref="E:System.Web.UI.WebControls.SqlDataSource.Updating" />, <see cref="E:System.Web.UI.WebControls.SqlDataSource.Deleting" /> and <see cref="E:System.Web.UI.WebControls.SqlDataSource.Inserting" /> events of the <see cref="T:System.Web.UI.WebControls.SqlDataSource" /> control.</summary>
    </member>
    <member name="M:System.Web.UI.WebControls.SqlDataSourceCommandEventArgs.#ctor(System.Data.Common.DbCommand)">
      <summary>Initializes a new instance of the <see cref="T:System.Web.UI.WebControls.SqlDataSourceCommandEventArgs" /> class, using the specified database command object.</summary>
      <param name="command">An <see cref="T:System.Data.Common.DbCommand" /> object that represents the cancelable <see cref="M:System.Web.UI.WebControls.SqlDataSource.Update" />, <see cref="M:System.Web.UI.WebControls.SqlDataSource.Insert" />, or <see cref="M:System.Web.UI.WebControls.SqlDataSource.Delete" /> command. </param>
    </member>
    <member name="P:System.Web.UI.WebControls.SqlDataSourceCommandEventArgs.Command">
      <summary>Gets the pending database command.</summary>
      <returns>An <see cref="T:System.Data.Common.DbCommand" /> object that represents the pending database command.</returns>
    </member>
    <member name="T:System.Web.UI.WebControls.SqlDataSourceCommandEventHandler">
      <summary>Represents the method that will handle the <see cref="E:System.Web.UI.WebControls.SqlDataSource.Updating" />, <see cref="E:System.Web.UI.WebControls.SqlDataSource.Inserting" />, and <see cref="E:System.Web.UI.WebControls.SqlDataSource.Deleting" /> events of the <see cref="T:System.Web.UI.WebControls.SqlDataSource" /> control.</summary>
      <param name="sender">The source of the event, the <see cref="T:System.Web.UI.WebControls.SqlDataSource" /> control. </param>
      <param name="e">A <see cref="T:System.Web.UI.WebControls.SqlDataSourceCommandEventArgs" /> that contains the event data. </param>
    </member>
    <member name="T:System.Web.UI.WebControls.SqlDataSourceCommandType">
      <summary>Describes the type of SQL command used by the <see cref="T:System.Web.UI.WebControls.SqlDataSource" /> and <see cref="T:System.Web.UI.WebControls.AccessDataSource" /> controls when performing a database operation.</summary>
    </member>
    <member name="F:System.Web.UI.WebControls.SqlDataSourceCommandType.Text">
      <summary>The text contained in a corresponding text property is a SQL query or command.</summary>
    </member>
    <member name="F:System.Web.UI.WebControls.SqlDataSourceCommandType.StoredProcedure">
      <summary>The text contained in a corresponding text property is the name of a stored procedure.</summary>
    </member>
    <member name="T:System.Web.UI.WebControls.SqlDataSourceFilteringEventArgs">
      <summary>Provides data for the <see cref="E:System.Web.UI.WebControls.SqlDataSource.Filtering" /> event of the <see cref="T:System.Web.UI.WebControls.SqlDataSource" /> control.</summary>
    </member>
    <member name="M:System.Web.UI.WebControls.SqlDataSourceFilteringEventArgs.#ctor(System.Collections.Specialized.IOrderedDictionary)">
      <summary>Initializes a new instance of the <see cref="T:System.Web.UI.WebControls.SqlDataSourceFilteringEventArgs" /> class by using the specified object.</summary>
      <param name="parameterValues">An <see cref="T:System.Collections.Specialized.IOrderedDictionary" /> of <see cref="T:System.Web.UI.WebControls.Parameter" /> objects.</param>
    </member>
    <member name="P:System.Web.UI.WebControls.SqlDataSourceFilteringEventArgs.ParameterValues">
      <summary>Gets an <see cref="T:System.Collections.Specialized.IOrderedDictionary" /> object that provides access to the <see cref="T:System.Web.UI.WebControls.Parameter" /> objects of the <see cref="T:System.Web.UI.WebControls.SqlDataSource" /> class.</summary>
      <returns>An <see cref="T:System.Collections.Specialized.IOrderedDictionary" /> of <see cref="T:System.Web.UI.WebControls.Parameter" /> objects.</returns>
    </member>
    <member name="T:System.Web.UI.WebControls.SqlDataSourceFilteringEventHandler">
      <summary>Represents the method that will handle the <see cref="E:System.Web.UI.WebControls.SqlDataSource.Filtering" /> event of the <see cref="T:System.Web.UI.WebControls.SqlDataSource" /> control.</summary>
      <param name="sender">The source of the event, a <see cref="T:System.Web.UI.WebControls.SqlDataSource" />.</param>
      <param name="e">An <see cref="T:System.Web.UI.WebControls.SqlDataSourceFilteringEventArgs" /> that contains the event data.</param>
    </member>
    <member name="T:System.Web.UI.WebControls.SqlDataSourceMode">
      <summary>Specifies whether a <see cref="T:System.Web.UI.WebControls.SqlDataSource" /> or <see cref="T:System.Web.UI.WebControls.AccessDataSource" /> control retrieves data as a <see cref="T:System.Data.IDataReader" /> or <see cref="T:System.Data.DataSet" />.</summary>
    </member>
    <member name="F:System.Web.UI.WebControls.SqlDataSourceMode.DataReader">
      <summary>Retrieves data from the underlying data storage as an <see cref="T:System.Data.IDataReader" /></summary>
    </member>
    <member name="F:System.Web.UI.WebControls.SqlDataSourceMode.DataSet">
      <summary>Retrieves data from the underlying data storage into a <see cref="T:System.Data.DataSet" /> structure.</summary>
    </member>
    <member name="T:System.Web.UI.WebControls.SqlDataSourceSelectingEventArgs">
      <summary>Provides data for the <see cref="E:System.Web.UI.WebControls.SqlDataSource.Selecting" /> event of the <see cref="T:System.Web.UI.WebControls.SqlDataSource" /> control.</summary>
    </member>
    <member name="M:System.Web.UI.WebControls.SqlDataSourceSelectingEventArgs.#ctor(System.Data.Common.DbCommand,System.Web.UI.DataSourceSelectArguments)">
      <summary>Initializes a new instance of the <see cref="T:System.Web.UI.WebControls.SqlDataSourceSelectingEventArgs" /> class, using the specified <see cref="T:System.Data.Common.DbCommand" /> object and any <see cref="T:System.Web.UI.DataSourceSelectArguments" /> passed to the <see cref="M:System.Web.UI.WebControls.SqlDataSource.Select(System.Web.UI.DataSourceSelectArguments)" /> method.</summary>
      <param name="command">An <see cref="T:System.Data.Common.DbCommand" /> object that represents the cancelable <see cref="M:System.Web.UI.WebControls.SqlDataSource.Select(System.Web.UI.DataSourceSelectArguments)" /> query.</param>
      <param name="arguments">The <see cref="T:System.Web.UI.DataSourceSelectArguments" /> object passed to the <see cref="M:System.Web.UI.WebControls.SqlDataSource.Select(System.Web.UI.DataSourceSelectArguments)" /> method.</param>
    </member>
    <member name="P:System.Web.UI.WebControls.SqlDataSourceSelectingEventArgs.Arguments">
      <summary>Gets the <see cref="T:System.Web.UI.DataSourceSelectArguments" /> object passed to the <see cref="M:System.Web.UI.WebControls.SqlDataSource.Select(System.Web.UI.DataSourceSelectArguments)" /> method.</summary>
      <returns>A <see cref="T:System.Web.UI.DataSourceSelectArguments" /> object, or null if no <see cref="T:System.Web.UI.DataSourceSelectArguments" /> object is specified during <see cref="T:System.Web.UI.WebControls.SqlDataSourceSelectingEventArgs" /> creation.</returns>
    </member>
    <member name="T:System.Web.UI.WebControls.SqlDataSourceSelectingEventHandler">
      <summary>Represents the method that will handle the <see cref="E:System.Web.UI.WebControls.SqlDataSource.Selecting" /> event of the <see cref="T:System.Web.UI.WebControls.SqlDataSource" /> control.</summary>
      <param name="sender">The source of the event, the <see cref="T:System.Web.UI.WebControls.SqlDataSource" /> control. </param>
      <param name="e">A <see cref="T:System.Web.UI.WebControls.SqlDataSourceSelectingEventArgs" /> that contains the event data. </param>
    </member>
    <member name="T:System.Web.UI.WebControls.SqlDataSourceStatusEventArgs">
      <summary>Provides data for an event that is raised by the <see cref="T:System.Web.UI.WebControls.SqlDataSource" /> control after a data operation has completed.</summary>
    </member>
    <member name="M:System.Web.UI.WebControls.SqlDataSourceStatusEventArgs.#ctor(System.Data.Common.DbCommand,System.Int32,System.Exception)">
      <summary>Initializes a new instance of the <see cref="T:System.Web.UI.WebControls.SqlDataSourceStatusEventArgs" /> class, using the specified output parameters, return value, and number of rows affected by the database operation.</summary>
      <param name="command">The <see cref="T:System.Data.Common.DbCommand" /> that represents the database query, command, or stored procedure that is submitted to the database by the <see cref="T:System.Web.UI.WebControls.SqlDataSource" /> control. </param>
      <param name="affectedRows">The number of rows affected by the database operation, if applicable. </param>
      <param name="exception">An <see cref="T:System.Exception" /> thrown by the database operation, if applicable.</param>
    </member>
    <member name="P:System.Web.UI.WebControls.SqlDataSourceStatusEventArgs.AffectedRows">
      <summary>Gets the number of rows affected by a database operation.</summary>
      <returns>The number of rows affected by a database operation. The default value is -1.</returns>
    </member>
    <member name="P:System.Web.UI.WebControls.SqlDataSourceStatusEventArgs.Command">
      <summary>Gets the database command submitted to the database.</summary>
      <returns>The <see cref="T:System.Data.Common.DbCommand" /> object that represents the database command submitted to the database.</returns>
    </member>
    <member name="P:System.Web.UI.WebControls.SqlDataSourceStatusEventArgs.Exception">
      <summary>Gets a wrapper for any exceptions thrown by the database during a data operation.</summary>
      <returns>An <see cref="T:System.Exception" /> that wraps any exceptions thrown by the database in its <see cref="P:System.Exception.InnerException" /> property.</returns>
    </member>
    <member name="P:System.Web.UI.WebControls.SqlDataSourceStatusEventArgs.ExceptionHandled">
      <summary>Gets or sets a value indicating whether an exception thrown by the database has been handled.</summary>
      <returns>true if an exception thrown by the database has been handled and should not be thrown by the <see cref="T:System.Web.UI.WebControls.SqlDataSource" /> control; otherwise, false.</returns>
    </member>
    <member name="T:System.Web.UI.WebControls.SqlDataSourceStatusEventHandler">
      <summary>Represents the method that will handle the <see cref="E:System.Web.UI.WebControls.SqlDataSource.Selected" />, <see cref="E:System.Web.UI.WebControls.SqlDataSource.Updated" />, <see cref="E:System.Web.UI.WebControls.SqlDataSource.Inserted" />, and <see cref="E:System.Web.UI.WebControls.SqlDataSource.Deleted" /> events of the <see cref="T:System.Web.UI.WebControls.SqlDataSource" /> control.</summary>
      <param name="sender">The source of the event, the <see cref="T:System.Web.UI.WebControls.SqlDataSource" /> control. </param>
      <param name="e">A <see cref="T:System.Web.UI.WebControls.SqlDataSourceStatusEventArgs" /> that contains the event data. </param>
    </member>
    <member name="T:System.Web.UI.WebControls.SqlDataSourceView">
      <summary>Supports the <see cref="T:System.Web.UI.WebControls.SqlDataSource" /> control and provides an interface for data-bound controls to perform SQL data operations against relational databases.</summary>
    </member>
    <member name="M:System.Web.UI.WebControls.SqlDataSourceView.#ctor(System.Web.UI.WebControls.SqlDataSource,System.String,System.Web.HttpContext)">
      <summary>Initializes a new instance of the <see cref="T:System.Web.UI.WebControls.SqlDataSourceView" /> class setting the specified <see cref="T:System.Web.UI.WebControls.SqlDataSource" /> control as the owner of the current view.</summary>
      <param name="owner">The data source control with which the <see cref="T:System.Web.UI.WebControls.SqlDataSourceView" /> is associated. </param>
      <param name="name">A unique name for the data source view, within the scope of the data source control that owns it. </param>
      <param name="context">The current <see cref="T:System.Web.HttpContext" />.</param>
    </member>
    <member name="P:System.Web.UI.WebControls.SqlDataSourceView.CancelSelectOnNullParameter">
      <summary>Gets or sets a value indicating whether a data retrieval operation is canceled when any parameter that is contained in the <see cref="P:System.Web.UI.WebControls.SqlDataSourceView.SelectParameters" /> collection evaluates to null.</summary>
      <returns>true, if a data retrieval operation is canceled when a parameter contained in the <see cref="P:System.Web.UI.WebControls.SqlDataSourceView.SelectParameters" /> collection evaluated to null; otherwise, false. The default is true.</returns>
    </member>
    <member name="P:System.Web.UI.WebControls.SqlDataSourceView.CanDelete">
      <summary>Gets a value indicating whether the <see cref="T:System.Web.UI.WebControls.SqlDataSourceView" /> object that is associated with the current <see cref="T:System.Web.UI.WebControls.SqlDataSource" /> control supports the delete operation.</summary>
      <returns>true, if the operation is supported; otherwise, false.</returns>
    </member>
    <member name="P:System.Web.UI.WebControls.SqlDataSourceView.CanInsert">
      <summary>Gets a value indicating whether the <see cref="T:System.Web.UI.WebControls.SqlDataSourceView" /> object that is associated with the current <see cref="T:System.Web.UI.WebControls.SqlDataSource" /> control supports the insert operation.</summary>
      <returns>true, if the operation is supported; otherwise, false.</returns>
    </member>
    <member name="P:System.Web.UI.WebControls.SqlDataSourceView.CanPage">
      <summary>Gets a value indicating whether the <see cref="T:System.Web.UI.WebControls.SqlDataSourceView" /> object that is associated with the current <see cref="T:System.Web.UI.WebControls.SqlDataSource" /> control supports the paging of retrieved data.</summary>
      <returns>false in all cases.</returns>
    </member>
    <member name="P:System.Web.UI.WebControls.SqlDataSourceView.CanRetrieveTotalRowCount">
      <summary>Gets a value indicating whether the <see cref="T:System.Web.UI.WebControls.SqlDataSourceView" /> object that is associated with the current <see cref="T:System.Web.UI.WebControls.SqlDataSource" /> control supports retrieving the total number of data rows, in addition to the set of data.</summary>
      <returns>false in all cases.</returns>
    </member>
    <member name="P:System.Web.UI.WebControls.SqlDataSourceView.CanSort">
      <summary>Gets a value indicating whether the <see cref="T:System.Web.UI.WebControls.SqlDataSourceView" /> object that is associated with the current <see cref="T:System.Web.UI.WebControls.SqlDataSource" /> control supports a sorted view on the retrieved data.</summary>
      <returns>true, if sorting is supported; otherwise, false.</returns>
    </member>
    <member name="P:System.Web.UI.WebControls.SqlDataSourceView.CanUpdate">
      <summary>Gets a value indicating whether the <see cref="T:System.Web.UI.WebControls.SqlDataSourceView" /> object that is associated with the current <see cref="T:System.Web.UI.WebControls.SqlDataSource" /> control supports the update operation.</summary>
      <returns>true, if the operation is supported; otherwise, false.</returns>
    </member>
    <member name="P:System.Web.UI.WebControls.SqlDataSourceView.ConflictDetection">
      <summary>Gets or sets the value indicating how the <see cref="T:System.Web.UI.WebControls.SqlDataSource" /> control performs updates and deletes when data in a row in the underlying database changes during the time of the operation.</summary>
      <returns>One of the <see cref="T:System.Web.UI.ConflictOptions" /> values. The default is the <see cref="F:System.Web.UI.ConflictOptions.OverwriteChanges" /> value.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">The selected value is not one of the <see cref="T:System.Web.UI.ConflictOptions" /> values.</exception>
    </member>
    <member name="M:System.Web.UI.WebControls.SqlDataSourceView.Delete(System.Collections.IDictionary,System.Collections.IDictionary)">
      <summary>Performs a delete operation using the <see cref="P:System.Web.UI.WebControls.SqlDataSourceView.DeleteCommand" /> SQL string, any parameters that are specified in the <see cref="P:System.Web.UI.WebControls.SqlDataSourceView.DeleteParameters" /> collection, and the values that are in the specified <paramref name="keys" /> and <paramref name="oldValues" /> collections.</summary>
      <returns>A value that represents the number of rows deleted from the underlying database.</returns>
      <param name="keys">An <see cref="T:System.Collections.IDictionary" /> of object or row key values for the <see cref="M:System.Web.UI.WebControls.SqlDataSourceView.ExecuteDelete(System.Collections.IDictionary,System.Collections.IDictionary)" /> operation to delete.</param>
      <param name="oldValues">An <see cref="T:System.Collections.IDictionary" /> that contains row values that are evaluated only if the <see cref="P:System.Web.UI.WebControls.SqlDataSourceView.ConflictDetection" /> property is set to the <see cref="F:System.Web.UI.ConflictOptions.CompareAllValues" /> value.</param>
      <exception cref="T:System.InvalidOperationException">The <see cref="T:System.Web.UI.WebControls.SqlDataSource" /> cannot establish a connection with the underlying data source. - or -The <see cref="P:System.Web.UI.WebControls.SqlDataSourceView.ConflictDetection" /> property is set to the <see cref="F:System.Web.UI.ConflictOptions.CompareAllValues" /> value and no <paramref name="oldValues" /> parameters are passed.</exception>
      <exception cref="T:System.NotSupportedException">The <see cref="P:System.Web.UI.WebControls.SqlDataSourceView.CanDelete" /> property is false. </exception>
    </member>
    <member name="P:System.Web.UI.WebControls.SqlDataSourceView.DeleteCommand">
      <summary>Gets or sets the SQL string that the <see cref="T:System.Web.UI.WebControls.SqlDataSourceView" /> uses to delete data from the underlying database.</summary>
      <returns>An SQL string that the <see cref="T:System.Web.UI.WebControls.SqlDataSourceView" /> uses to delete data.</returns>
    </member>
    <member name="P:System.Web.UI.WebControls.SqlDataSourceView.DeleteCommandType">
      <summary>Gets or sets a value indicating whether the text in the <see cref="P:System.Web.UI.WebControls.SqlDataSourceView.DeleteCommand" /> property is a SQL statement or the name of a stored procedure.</summary>
      <returns>One of the <see cref="T:System.Web.UI.WebControls.SqlDataSourceCommandType" /> values. The default is the <see cref="F:System.Web.UI.WebControls.SqlDataSourceCommandType.Text" /> value.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">The selected value is not one of the <see cref="T:System.Web.UI.WebControls.SqlDataSourceCommandType" /> values.</exception>
    </member>
    <member name="E:System.Web.UI.WebControls.SqlDataSourceView.Deleted">
      <summary>Occurs when a delete operation has completed.</summary>
    </member>
    <member name="P:System.Web.UI.WebControls.SqlDataSourceView.DeleteParameters">
      <summary>Gets the parameters collection containing the parameters that are used by the <see cref="P:System.Web.UI.WebControls.SqlDataSourceView.DeleteCommand" /> property.</summary>
      <returns>A <see cref="T:System.Web.UI.WebControls.ParameterCollection" /> that contains the parameters used by the <see cref="P:System.Web.UI.WebControls.SqlDataSourceView.DeleteCommand" /> property.</returns>
    </member>
    <member name="E:System.Web.UI.WebControls.SqlDataSourceView.Deleting">
      <summary>Occurs before a delete operation.</summary>
    </member>
    <member name="M:System.Web.UI.WebControls.SqlDataSourceView.ExecuteDelete(System.Collections.IDictionary,System.Collections.IDictionary)">
      <summary>Performs a delete operation using the <see cref="P:System.Web.UI.WebControls.SqlDataSourceView.DeleteCommand" /> SQL string, any parameters that are specified in the <see cref="P:System.Web.UI.WebControls.SqlDataSourceView.DeleteParameters" /> collection, and the values that are in the specified <paramref name="keys" /> and <paramref name="oldValues" /> collections.</summary>
      <returns>A value that represents the number of rows deleted from the underlying database.</returns>
      <param name="keys">An <see cref="T:System.Collections.IDictionary" /> of object or row key values for the <see cref="M:System.Web.UI.WebControls.SqlDataSourceView.ExecuteDelete(System.Collections.IDictionary,System.Collections.IDictionary)" /> operation to delete.</param>
      <param name="oldValues">An <see cref="T:System.Collections.IDictionary" /> that contains row values that are evaluated only if the <see cref="P:System.Web.UI.WebControls.SqlDataSourceView.ConflictDetection" /> property is set to the <see cref="F:System.Web.UI.ConflictOptions.CompareAllValues" /> value.</param>
      <exception cref="T:System.InvalidOperationException">The <see cref="T:System.Web.UI.WebControls.SqlDataSource" /> cannot establish a connection with the underlying data source. - or -The <see cref="P:System.Web.UI.WebControls.SqlDataSourceView.ConflictDetection" /> property is set to the <see cref="F:System.Web.UI.ConflictOptions.CompareAllValues" /> value and no <paramref name="oldValues" /> parameters are passed. </exception>
      <exception cref="T:System.Web.HttpException">The current user does not have the correct permissions to access to the database.- or -The instance of the control is an <see cref="T:System.Web.UI.WebControls.AccessDataSource" /> control and access is denied to the path specified for the <see cref="P:System.Web.UI.WebControls.AccessDataSource.DataFile" /> property.</exception>
      <exception cref="T:System.NotSupportedException">The <see cref="P:System.Web.UI.WebControls.SqlDataSourceView.CanDelete" /> property is false. - or -A design-time relative path was not mapped correctly by the designer before using an instance of the <see cref="T:System.Web.UI.WebControls.AccessDataSource" /> control.</exception>
    </member>
    <member name="M:System.Web.UI.WebControls.SqlDataSourceView.ExecuteInsert(System.Collections.IDictionary)">
      <summary>Performs an insert operation using the <see cref="P:System.Web.UI.WebControls.SqlDataSourceView.InsertCommand" /> SQL string, any parameters that are specified in the <see cref="P:System.Web.UI.WebControls.SqlDataSourceView.InsertParameters" /> collection, and the values that are in the specified <paramref name="values" /> collection.</summary>
      <returns>A value that represents the number of rows inserted into the underlying database.</returns>
      <param name="values">An <see cref="T:System.Collections.IDictionary" /> of values used with the <see cref="P:System.Web.UI.WebControls.SqlDataSourceView.InsertCommand" /> property to perform the insert database operation. If there are no parameters associated with the query or if the <see cref="P:System.Web.UI.WebControls.SqlDataSourceView.InsertCommand" /> property is not a parameterized SQL query, pass null.</param>
      <exception cref="T:System.InvalidOperationException">The <see cref="T:System.Web.UI.WebControls.SqlDataSource" /> cannot establish a connection with the underlying data source. </exception>
      <exception cref="T:System.Web.HttpException">The current user does not have the correct permissions to gain access to the database.</exception>
      <exception cref="T:System.NotSupportedException">The <see cref="P:System.Web.UI.WebControls.SqlDataSourceView.CanInsert" /> property is false. </exception>
    </member>
    <member name="M:System.Web.UI.WebControls.SqlDataSourceView.ExecuteSelect(System.Web.UI.DataSourceSelectArguments)">
      <summary>Retrieves data from the underlying database using the <see cref="P:System.Web.UI.WebControls.SqlDataSourceView.SelectCommand" /> SQL string and any parameters that are in the <see cref="P:System.Web.UI.WebControls.SqlDataSourceView.SelectParameters" /> collection.</summary>
      <returns>An <see cref="T:System.Collections.IEnumerable" /> list of data rows.</returns>
      <param name="arguments">A <see cref="T:System.Web.UI.DataSourceSelectArguments" /> object used to request operations on the data beyond basic data retrieval.</param>
      <exception cref="T:System.NotSupportedException">The <paramref name="arguments" /> passed to the <see cref="M:System.Web.UI.WebControls.SqlDataSourceView.ExecuteSelect(System.Web.UI.DataSourceSelectArguments)" /> method specify that the data source should perform some additional work while retrieving data to enable paging or sorting through the retrieved data, but the data source control does not support the requested capability.- or -Caching is enabled but the <see cref="P:System.Web.UI.WebControls.SqlDataSource.DataSourceMode" /> property of the data source is not set to <see cref="F:System.Web.UI.WebControls.SqlDataSourceMode.DataSet" />.- or -The <see cref="P:System.Web.UI.WebControls.SqlDataSourceView.SortParameterName" /> property is set but <see cref="P:System.Data.SqlClient.SqlCommand.CommandType" /> is not set to <see cref="F:System.Data.CommandType.StoredProcedure" />. </exception>
      <exception cref="T:System.InvalidOperationException">The data source cannot create a database connection.- or -Caching is enabled but the internal cache and command types do not match.</exception>
    </member>
    <member name="M:System.Web.UI.WebControls.SqlDataSourceView.ExecuteUpdate(System.Collections.IDictionary,System.Collections.IDictionary,System.Collections.IDictionary)">
      <summary>Performs an update operation using the <see cref="P:System.Web.UI.WebControls.SqlDataSourceView.UpdateCommand" /> SQL string, any parameters that are in the <see cref="P:System.Web.UI.WebControls.SqlDataSourceView.UpdateParameters" /> collection, and the values that are in the specified <paramref name="keys" />, <paramref name="values" />, and <paramref name="oldValues" /> collections.</summary>
      <returns>A value that represents the number of rows updated in the underlying database.</returns>
      <param name="keys">An <see cref="T:System.Collections.IDictionary" /> of primary keys to use with the <see cref="P:System.Web.UI.WebControls.SqlDataSourceView.UpdateCommand" /> property to perform the update database operation. If there are no keys associated with the query or if the <see cref="P:System.Web.UI.WebControls.SqlDataSourceView.UpdateCommand" /> property is not a parameterized SQL query, pass null.</param>
      <param name="values">An <see cref="T:System.Collections.IDictionary" /> of values to use with the <see cref="P:System.Web.UI.WebControls.SqlDataSourceView.UpdateCommand" /> property to perform the update database operation. If there are no parameters associated with the query or if the <see cref="P:System.Web.UI.WebControls.SqlDataSourceView.UpdateCommand" /> is not a parameterized SQL query, pass null. </param>
      <param name="oldValues">An <see cref="T:System.Collections.IDictionary" /> that represents the original values in the database. If there are no parameters associated with the query or if the <see cref="P:System.Web.UI.WebControls.SqlDataSourceView.UpdateCommand" /> property is not a parameterized SQL query, pass null.</param>
      <exception cref="T:System.InvalidOperationException">The <see cref="T:System.Web.UI.WebControls.SqlDataSource" /> cannot establish a connection with the underlying data source. - or -The <see cref="P:System.Web.UI.WebControls.SqlDataSourceView.ConflictDetection" /> property is set to the <see cref="F:System.Web.UI.ConflictOptions.CompareAllValues" /> value and no <paramref name="oldValues" /> parameters are passed.</exception>
      <exception cref="T:System.Web.HttpException">The current user does not have the correct permissions to gain access to the database.</exception>
      <exception cref="T:System.NotSupportedException">The <see cref="P:System.Web.UI.WebControls.SqlDataSourceView.CanUpdate" /> property is false. </exception>
    </member>
    <member name="P:System.Web.UI.WebControls.SqlDataSourceView.FilterExpression">
      <summary>Gets or sets a filtering expression that is applied when the <see cref="Overload:System.Web.UI.WebControls.SqlDataSourceView.Select" /> method is called.</summary>
      <returns>A string that represents a filtering expression applied when data is retrieved using the <see cref="M:System.Web.UI.WebControls.SqlDataSource.Select(System.Web.UI.DataSourceSelectArguments)" /> method.</returns>
      <exception cref="T:System.NotSupportedException">The <see cref="P:System.Web.UI.WebControls.SqlDataSourceView.FilterExpression" /> property was set when the <see cref="T:System.Web.UI.WebControls.SqlDataSource" /> is in the <see cref="F:System.Web.UI.WebControls.SqlDataSourceMode.DataReader" /> mode. </exception>
    </member>
    <member name="E:System.Web.UI.WebControls.SqlDataSourceView.Filtering">
      <summary>Occurs before a filter operation.</summary>
    </member>
    <member name="P:System.Web.UI.WebControls.SqlDataSourceView.FilterParameters">
      <summary>Gets a collection of parameters that are associated with any parameter placeholders in the <see cref="P:System.Web.UI.WebControls.SqlDataSourceView.FilterExpression" /> string.</summary>
      <returns>A <see cref="T:System.Web.UI.WebControls.ParameterCollection" /> that contains a set of parameters associated with any parameter placeholders found in the <see cref="P:System.Web.UI.WebControls.SqlDataSourceView.FilterExpression" /> property.</returns>
    </member>
    <member name="M:System.Web.UI.WebControls.SqlDataSourceView.Insert(System.Collections.IDictionary)">
      <summary>Performs an insert operation using the <see cref="P:System.Web.UI.WebControls.SqlDataSourceView.InsertCommand" /> SQL string, any parameters that are specified in the <see cref="P:System.Web.UI.WebControls.SqlDataSourceView.InsertParameters" /> collection, and the values that are in the specified <paramref name="values" /> collection.</summary>
      <returns>A value that represents the number of rows inserted into the underlying database.</returns>
      <param name="values">An <see cref="T:System.Collections.IDictionary" /> of parameters for the <see cref="P:System.Web.UI.WebControls.SqlDataSourceView.InsertCommand" /> property to use to perform the insert database operation. If there are no parameters associated with the query or if the <see cref="P:System.Web.UI.WebControls.SqlDataSourceView.InsertCommand" /> is not a parameterized SQL query, pass null. </param>
      <exception cref="T:System.InvalidOperationException">The <see cref="T:System.Web.UI.WebControls.SqlDataSource" /> cannot establish a connection with the underlying data source. </exception>
      <exception cref="T:System.NotSupportedException">The <see cref="P:System.Web.UI.WebControls.SqlDataSourceView.CanInsert" /> property is false. </exception>
    </member>
    <member name="P:System.Web.UI.WebControls.SqlDataSourceView.InsertCommand">
      <summary>Gets or sets the SQL string that the <see cref="T:System.Web.UI.WebControls.SqlDataSourceView" /> object uses to insert data into the underlying database.</summary>
      <returns>An SQL string that the <see cref="T:System.Web.UI.WebControls.SqlDataSourceView" /> uses to insert data.</returns>
    </member>
    <member name="P:System.Web.UI.WebControls.SqlDataSourceView.InsertCommandType">
      <summary>Gets or sets a value indicating whether the text in the <see cref="P:System.Web.UI.WebControls.SqlDataSourceView.InsertCommand" /> property is a SQL statement or the name of a stored procedure.</summary>
      <returns>One of the <see cref="T:System.Web.UI.WebControls.SqlDataSourceCommandType" /> values. The value is the <see cref="F:System.Web.UI.WebControls.SqlDataSourceCommandType.Text" /> value.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">The selected value is not one of the <see cref="T:System.Web.UI.WebControls.SqlDataSourceCommandType" /> values.</exception>
    </member>
    <member name="E:System.Web.UI.WebControls.SqlDataSourceView.Inserted">
      <summary>Occurs when an insert operation has completed.</summary>
    </member>
    <member name="E:System.Web.UI.WebControls.SqlDataSourceView.Inserting">
      <summary>Occurs before an insert operation.</summary>
    </member>
    <member name="P:System.Web.UI.WebControls.SqlDataSourceView.InsertParameters">
      <summary>Gets the parameters collection containing the parameters that are used by the <see cref="P:System.Web.UI.WebControls.SqlDataSourceView.InsertCommand" /> property.</summary>
      <returns>A <see cref="T:System.Web.UI.WebControls.ParameterCollection" /> that contains the parameters used by the <see cref="P:System.Web.UI.WebControls.SqlDataSourceView.InsertCommand" /> property.</returns>
    </member>
    <member name="P:System.Web.UI.WebControls.SqlDataSourceView.IsTrackingViewState">
      <summary>Gets a value indicating whether the <see cref="T:System.Web.UI.WebControls.SqlDataSourceView" /> object is saving changes to its view state.</summary>
      <returns>true, if the data source view is marked to save its state; otherwise, false.</returns>
    </member>
    <member name="M:System.Web.UI.WebControls.SqlDataSourceView.LoadViewState(System.Object)">
      <summary>Restores the previously saved view state for the data source view.</summary>
      <param name="savedState">An object that represents the <see cref="T:System.Web.UI.WebControls.SqlDataSourceView" /> state to restore. </param>
    </member>
    <member name="P:System.Web.UI.WebControls.SqlDataSourceView.OldValuesParameterFormatString">
      <summary>Gets or sets a format string to apply to the names of any parameters that are passed to the <see cref="Overload:System.Web.UI.WebControls.SqlDataSourceView.Delete" /> or <see cref="Overload:System.Web.UI.WebControls.SqlDataSourceView.Update" /> method. </summary>
      <returns>A string that represents a format string applied to the names of any <paramref name="oldValues" /> parameters passed to the <see cref="Overload:System.Web.UI.WebControls.SqlDataSourceView.Delete" /> or <see cref="Overload:System.Web.UI.WebControls.SqlDataSourceView.Update" /> methods. The default is "{0}".</returns>
    </member>
    <member name="M:System.Web.UI.WebControls.SqlDataSourceView.OnDeleted(System.Web.UI.WebControls.SqlDataSourceStatusEventArgs)">
      <summary>Raises the <see cref="E:System.Web.UI.WebControls.SqlDataSourceView.Deleted" /> event after the <see cref="T:System.Web.UI.WebControls.SqlDataSource" /> control has completed a delete operation.</summary>
      <param name="e">A <see cref="T:System.Web.UI.WebControls.SqlDataSourceStatusEventArgs" /> that contains the event data. </param>
    </member>
    <member name="M:System.Web.UI.WebControls.SqlDataSourceView.OnDeleting(System.Web.UI.WebControls.SqlDataSourceCommandEventArgs)">
      <summary>Raises the <see cref="E:System.Web.UI.WebControls.SqlDataSourceView.Deleting" /> event before the <see cref="T:System.Web.UI.WebControls.SqlDataSource" /> control attempts a delete operation.</summary>
      <param name="e">A <see cref="T:System.Web.UI.WebControls.SqlDataSourceCommandEventArgs" /> that contains the event data. </param>
    </member>
    <member name="M:System.Web.UI.WebControls.SqlDataSourceView.OnFiltering(System.Web.UI.WebControls.SqlDataSourceFilteringEventArgs)">
      <summary>Raises the <see cref="E:System.Web.UI.WebControls.SqlDataSourceView.Filtering" /> event before the <see cref="T:System.Web.UI.WebControls.SqlDataSource" /> control filters the results of a select operation.</summary>
      <param name="e">A <see cref="T:System.Web.UI.WebControls.SqlDataSourceFilteringEventArgs" /> that contains the event data. </param>
    </member>
    <member name="M:System.Web.UI.WebControls.SqlDataSourceView.OnInserted(System.Web.UI.WebControls.SqlDataSourceStatusEventArgs)">
      <summary>Raises the <see cref="E:System.Web.UI.WebControls.SqlDataSourceView.Inserted" /> event after the <see cref="T:System.Web.UI.WebControls.SqlDataSource" /> control has completed an insert operation.</summary>
      <param name="e">A <see cref="T:System.Web.UI.WebControls.SqlDataSourceStatusEventArgs" /> that contains the event data. </param>
    </member>
    <member name="M:System.Web.UI.WebControls.SqlDataSourceView.OnInserting(System.Web.UI.WebControls.SqlDataSourceCommandEventArgs)">
      <summary>Raises the <see cref="E:System.Web.UI.WebControls.SqlDataSourceView.Inserting" /> event before the <see cref="T:System.Web.UI.WebControls.SqlDataSource" /> control attempts an insert operation.</summary>
      <param name="e">A <see cref="T:System.Web.UI.WebControls.SqlDataSourceCommandEventArgs" /> that contains the event data. </param>
    </member>
    <member name="M:System.Web.UI.WebControls.SqlDataSourceView.OnSelected(System.Web.UI.WebControls.SqlDataSourceStatusEventArgs)">
      <summary>Raises the <see cref="E:System.Web.UI.WebControls.SqlDataSourceView.Selected" /> event after the <see cref="T:System.Web.UI.WebControls.SqlDataSource" /> control has completed a data retrieval operation.</summary>
      <param name="e">A <see cref="T:System.Web.UI.WebControls.SqlDataSourceStatusEventArgs" /> that contains the event data. </param>
    </member>
    <member name="M:System.Web.UI.WebControls.SqlDataSourceView.OnSelecting(System.Web.UI.WebControls.SqlDataSourceSelectingEventArgs)">
      <summary>Raises the <see cref="E:System.Web.UI.WebControls.SqlDataSourceView.Selecting" /> event before the <see cref="T:System.Web.UI.WebControls.SqlDataSource" /> control attempts a data retrieval operation.</summary>
      <param name="e">A <see cref="T:System.Web.UI.WebControls.SqlDataSourceSelectingEventArgs" /> that contains the event data. </param>
    </member>
    <member name="M:System.Web.UI.WebControls.SqlDataSourceView.OnUpdated(System.Web.UI.WebControls.SqlDataSourceStatusEventArgs)">
      <summary>Raises the <see cref="E:System.Web.UI.WebControls.SqlDataSourceView.Updated" /> event after the <see cref="T:System.Web.UI.WebControls.SqlDataSource" /> control has completed an update operation.</summary>
      <param name="e">A <see cref="T:System.Web.UI.WebControls.SqlDataSourceStatusEventArgs" /> that contains the event data. </param>
    </member>
    <member name="M:System.Web.UI.WebControls.SqlDataSourceView.OnUpdating(System.Web.UI.WebControls.SqlDataSourceCommandEventArgs)">
      <summary>Raises the <see cref="E:System.Web.UI.WebControls.SqlDataSourceView.Updating" /> event before the <see cref="T:System.Web.UI.WebControls.SqlDataSource" /> control attempts an update operation.</summary>
      <param name="e">A <see cref="T:System.Web.UI.WebControls.SqlDataSourceCommandEventArgs" /> that contains the event data. </param>
    </member>
    <member name="P:System.Web.UI.WebControls.SqlDataSourceView.ParameterPrefix">
      <summary>Gets the string that is used to prefix a parameter placeholder in a parameterized SQL query.</summary>
      <returns>The "@" string.</returns>
    </member>
    <member name="M:System.Web.UI.WebControls.SqlDataSourceView.RaiseUnsupportedCapabilityError(System.Web.UI.DataSourceCapabilities)">
      <summary>Compares the capabilities that are requested for an <see cref="M:System.Web.UI.WebControls.SqlDataSourceView.ExecuteSelect(System.Web.UI.DataSourceSelectArguments)" /> operation against those that the view supports and is called by the <see cref="M:System.Web.UI.DataSourceSelectArguments.RaiseUnsupportedCapabilitiesError(System.Web.UI.DataSourceView)" /> method.</summary>
      <param name="capability">One of the <see cref="T:System.Web.UI.DataSourceCapabilities" /> values that is compared against the capabilities that the view supports.</param>
      <exception cref="T:System.NotSupportedException">The data source does not have the selected <paramref name="capability" /> enabled.</exception>
    </member>
    <member name="M:System.Web.UI.WebControls.SqlDataSourceView.SaveViewState">
      <summary>Saves the changes to the view state for the  <see cref="T:System.Web.UI.WebControls.SqlDataSourceView" /> control since the time that the page was posted back to the server.</summary>
      <returns>The object that contains the changes to the <see cref="T:System.Web.UI.WebControls.SqlDataSourceView" /> view state; otherwise, null, if there is no view state associated with the object.</returns>
    </member>
    <member name="M:System.Web.UI.WebControls.SqlDataSourceView.Select(System.Web.UI.DataSourceSelectArguments)">
      <summary>Retrieves data from the underlying database using the <see cref="P:System.Web.UI.WebControls.SqlDataSourceView.SelectCommand" /> SQL string and any parameters that are in the <see cref="P:System.Web.UI.WebControls.SqlDataSourceView.SelectParameters" /> collection.</summary>
      <returns>An <see cref="T:System.Collections.IEnumerable" /> list of data rows.</returns>
      <param name="arguments">A <see cref="T:System.Web.UI.DataSourceSelectArguments" /> used to request operations on the data beyond basic data retrieval.</param>
      <exception cref="T:System.NotSupportedException">The <paramref name="selectArgs" /> passed to the <see cref="M:System.Web.UI.WebControls.SqlDataSourceView.Select(System.Web.UI.DataSourceSelectArguments)" /> method specify that the data source should perform some additional work while retrieving data to enable paging or sorting through the retrieved data, but the data source control does not support the requested capability.</exception>
      <exception cref="T:System.InvalidOperationException">The <see cref="T:System.Web.UI.WebControls.SqlDataSource" /> cannot establish a connection with the underlying data source. </exception>
    </member>
    <member name="P:System.Web.UI.WebControls.SqlDataSourceView.SelectCommand">
      <summary>Gets or sets the SQL string that the <see cref="T:System.Web.UI.WebControls.SqlDataSourceView" /> object uses to retrieve data from the underlying database.</summary>
      <returns>An SQL string that the <see cref="T:System.Web.UI.WebControls.SqlDataSourceView" /> uses to retrieve data.</returns>
    </member>
    <member name="P:System.Web.UI.WebControls.SqlDataSourceView.SelectCommandType">
      <summary>Gets or sets a value indicating whether the text in the <see cref="P:System.Web.UI.WebControls.SqlDataSourceView.SelectCommand" /> property is a SQL query or the name of a stored procedure.</summary>
      <returns>One of the <see cref="T:System.Web.UI.WebControls.SqlDataSourceCommandType" /> values. The default is the <see cref="F:System.Web.UI.WebControls.SqlDataSourceCommandType.Text" /> value.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">The selected value is not one of the <see cref="T:System.Web.UI.WebControls.SqlDataSourceCommandType" /> values.</exception>
    </member>
    <member name="E:System.Web.UI.WebControls.SqlDataSourceView.Selected">
      <summary>Occurs when a data retrieval operation has completed.</summary>
    </member>
    <member name="E:System.Web.UI.WebControls.SqlDataSourceView.Selecting">
      <summary>Occurs before a data retrieval operation.</summary>
    </member>
    <member name="P:System.Web.UI.WebControls.SqlDataSourceView.SelectParameters">
      <summary>Gets the parameters collection containing the parameters that are used by the <see cref="P:System.Web.UI.WebControls.SqlDataSourceView.SelectCommand" /> property.</summary>
      <returns>A <see cref="T:System.Web.UI.WebControls.ParameterCollection" /> that contains the parameters used by the <see cref="P:System.Web.UI.WebControls.SqlDataSourceView.SelectCommand" /> property.</returns>
    </member>
    <member name="P:System.Web.UI.WebControls.SqlDataSourceView.SortParameterName">
      <summary>Gets or sets the name of a stored procedure parameter that is used to sort retrieved data when data retrieval is performed using a stored procedure.</summary>
      <returns>The name of a stored procedure parameter used to sort retrieved data when data retrieval is performed using a stored procedure.</returns>
    </member>
    <member name="P:System.Web.UI.WebControls.SqlDataSourceView.System#Web#UI#IStateManager#IsTrackingViewState">
      <summary>For a description of this member, see <see cref="P:System.Web.UI.IStateManager.IsTrackingViewState" />.</summary>
      <returns>true, if the data source view is marked to save its state; otherwise, false.</returns>
    </member>
    <member name="M:System.Web.UI.WebControls.SqlDataSourceView.System#Web#UI#IStateManager#LoadViewState(System.Object)">
      <summary>For a description of this member, see <see cref="M:System.Web.UI.IStateManager.LoadViewState(System.Object)" />.</summary>
      <param name="savedState">An object that represents the <see cref="T:System.Web.UI.WebControls.SqlDataSourceView" /> state to restore.</param>
    </member>
    <member name="M:System.Web.UI.WebControls.SqlDataSourceView.System#Web#UI#IStateManager#SaveViewState">
      <summary>For a description of this member, see <see cref="M:System.Web.UI.IStateManager.SaveViewState" />.</summary>
      <returns>The object that contains the changes to the <see cref="T:System.Web.UI.WebControls.SqlDataSourceView" /> view state; otherwise, null, if there is no view state associated with the object.</returns>
    </member>
    <member name="M:System.Web.UI.WebControls.SqlDataSourceView.System#Web#UI#IStateManager#TrackViewState">
      <summary>For a description of this member, see <see cref="M:System.Web.UI.IStateManager.TrackViewState" />.</summary>
    </member>
    <member name="M:System.Web.UI.WebControls.SqlDataSourceView.TrackViewState">
      <summary>Causes the <see cref="T:System.Web.UI.WebControls.SqlDataSourceView" /> object to track changes to its view state so that the changes can be stored in the <see cref="T:System.Web.UI.StateBag" /> object for the control and persisted across requests for the same page.</summary>
    </member>
    <member name="M:System.Web.UI.WebControls.SqlDataSourceView.Update(System.Collections.IDictionary,System.Collections.IDictionary,System.Collections.IDictionary)">
      <summary>Performs an update operation using the <see cref="P:System.Web.UI.WebControls.SqlDataSourceView.UpdateCommand" /> SQL string, any parameters that are in the <see cref="P:System.Web.UI.WebControls.SqlDataSourceView.UpdateParameters" /> collection, and the values that are in the specified <paramref name="keys" />, <paramref name="values" />, and <paramref name="oldValues" /> collections.</summary>
      <returns>A value that represents the number of rows updated in the underlying database.</returns>
      <param name="keys">An <see cref="T:System.Collections.IDictionary" /> of primary keys to use with the <see cref="P:System.Web.UI.WebControls.SqlDataSourceView.UpdateCommand" /> property to perform the update database operation. If there are no keys associated with the query or if the <see cref="P:System.Web.UI.WebControls.SqlDataSourceView.UpdateCommand" /> is not a parameterized SQL query, pass null.</param>
      <param name="values">An <see cref="T:System.Collections.IDictionary" /> of values to use with the <see cref="P:System.Web.UI.WebControls.SqlDataSourceView.UpdateCommand" /> property to perform the update database operation. If there are no parameters associated with the query or if the <see cref="P:System.Web.UI.WebControls.SqlDataSourceView.UpdateCommand" /> is not a parameterized SQL query, pass null. </param>
      <param name="oldValues">An <see cref="T:System.Collections.IDictionary" /> that represents the original values in the database. If there are no parameters associated with the query or if the <see cref="P:System.Web.UI.WebControls.SqlDataSourceView.UpdateCommand" /> is not a parameterized SQL query, pass null.</param>
      <exception cref="T:System.InvalidOperationException">The <see cref="T:System.Web.UI.WebControls.SqlDataSource" /> cannot establish a connection with the underlying data source. </exception>
      <exception cref="T:System.NotSupportedException">The <see cref="P:System.Web.UI.WebControls.SqlDataSourceView.CanUpdate" /> property is false. </exception>
    </member>
    <member name="P:System.Web.UI.WebControls.SqlDataSourceView.UpdateCommand">
      <summary>Gets or sets the SQL string that the <see cref="T:System.Web.UI.WebControls.SqlDataSourceView" /> object uses to update data in the underlying database.</summary>
      <returns>A SQL string that the <see cref="T:System.Web.UI.WebControls.SqlDataSourceView" /> uses to update data.</returns>
    </member>
    <member name="P:System.Web.UI.WebControls.SqlDataSourceView.UpdateCommandType">
      <summary>Gets or sets a value indicating whether the text in the <see cref="P:System.Web.UI.WebControls.SqlDataSourceView.UpdateCommand" /> property is a SQL statement or the name of a stored procedure.</summary>
      <returns>One of the <see cref="T:System.Web.UI.WebControls.SqlDataSourceCommandType" /> values. The default is the <see cref="F:System.Web.UI.WebControls.SqlDataSourceCommandType.Text" /> value.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">The selected value is not one of the <see cref="T:System.Web.UI.WebControls.SqlDataSourceCommandType" /> values.</exception>
    </member>
    <member name="E:System.Web.UI.WebControls.SqlDataSourceView.Updated">
      <summary>Occurs when an update operation has completed.</summary>
    </member>
    <member name="P:System.Web.UI.WebControls.SqlDataSourceView.UpdateParameters">
      <summary>Gets the parameters collection containing the parameters that are used by the <see cref="P:System.Web.UI.WebControls.SqlDataSourceView.UpdateCommand" /> property.</summary>
      <returns>A <see cref="T:System.Web.UI.WebControls.ParameterCollection" /> that contains the parameters used by the <see cref="P:System.Web.UI.WebControls.SqlDataSourceView.UpdateCommand" /> property.</returns>
    </member>
    <member name="E:System.Web.UI.WebControls.SqlDataSourceView.Updating">
      <summary>Occurs before an update operation.</summary>
    </member>
    <member name="T:System.Web.UI.WebControls.StringArrayConverter">
      <summary>Provides a type converter to convert a string of comma-separated values to and from an array of strings.</summary>
    </member>
    <member name="M:System.Web.UI.WebControls.StringArrayConverter.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Web.UI.WebControls.StringArrayConverter" /> class.</summary>
    </member>
    <member name="M:System.Web.UI.WebControls.StringArrayConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)">
      <summary>Determines whether the <see cref="T:System.Web.UI.WebControls.StringArrayConverter" /> can convert the specified source type to an array of strings.</summary>
      <returns>true if the converter can perform the operation; otherwise, false.</returns>
      <param name="context">An <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> object that provides a format context that can be used to extract additional information about the environment from which this converter is invoked. This parameter or properties of this parameter can be null.</param>
      <param name="sourceType">The <see cref="T:System.Type" /> to convert.</param>
    </member>
    <member name="M:System.Web.UI.WebControls.StringArrayConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
      <summary>Converts the specified comma-separated string into an array of strings.</summary>
      <returns>An <see cref="T:System.Object" /> that represents the converted <paramref name="value" />.</returns>
      <param name="context">An <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> object that provides a format context that can be used to extract additional information about the environment from which this converter is invoked. This parameter or properties of this parameter can be null.</param>
      <param name="culture">A <see cref="T:System.Globalization.CultureInfo" /> object. If null, the current culture is used.</param>
      <param name="value">The <see cref="T:System.Object" /> to convert.</param>
      <exception cref="M:System.ComponentModel.TypeConverter.GetConvertFromException(System.Object)">The conversion cannot be performed because <paramref name="value" /> is not a string.</exception>
    </member>
    <member name="M:System.Web.UI.WebControls.StringArrayConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
      <summary>Converts an array of strings into a string of values separated by commas.</summary>
      <returns>An <see cref="T:System.Object" /> instance that represents the converted <paramref name="value" />.</returns>
      <param name="context">An <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> object that provides a format context that can be used to extract additional information about the environment from which this converter is invoked. This parameter or properties of this parameter can be null.</param>
      <param name="culture">A <see cref="T:System.Globalization.CultureInfo" /> object. If null, the current culture is used.</param>
      <param name="value">The <see cref="T:System.Object" /> to convert.</param>
      <param name="destinationType">The <see cref="T:System.Type" /> to convert <paramref name="value" /> to.</param>
      <exception cref="M:System.ComponentModel.TypeConverter.GetConvertToException(System.Object,System.Type)">
        <paramref name="destinationType" /> is not of type <see cref="T:System.String" />.</exception>
    </member>
    <member name="T:System.Web.UI.WebControls.Style">
      <summary>Represents the style of a Web server control.</summary>
    </member>
    <member name="M:System.Web.UI.WebControls.Style.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Web.UI.WebControls.Style" /> class using default values.</summary>
    </member>
    <member name="M:System.Web.UI.WebControls.Style.#ctor(System.Web.UI.StateBag)">
      <summary>Initializes a new instance of the <see cref="T:System.Web.UI.WebControls.Style" /> class with the specified state bag information.</summary>
      <param name="bag">A <see cref="T:System.Web.UI.StateBag" /> that represents the state bag in which to store style information. </param>
    </member>
    <member name="M:System.Web.UI.WebControls.Style.AddAttributesToRender(System.Web.UI.HtmlTextWriter)">
      <summary>Adds HTML attributes and styles that need to be rendered to the specified <see cref="T:System.Web.UI.HtmlTextWriter" />. This method is primarily used by control developers.</summary>
      <param name="writer">A <see cref="T:System.Web.UI.HtmlTextWriter" /> that represents the output stream to render HTML content on the client. </param>
    </member>
    <member name="M:System.Web.UI.WebControls.Style.AddAttributesToRender(System.Web.UI.HtmlTextWriter,System.Web.UI.WebControls.WebControl)">
      <summary>Adds HTML attributes and styles that need to be rendered to the specified <see cref="T:System.Web.UI.HtmlTextWriter" /> and Web server control. This method is primarily used by control developers.</summary>
      <param name="writer">An <see cref="T:System.Web.UI.HtmlTextWriter" /> that represents the output stream to render HTML content on the client. </param>
      <param name="owner">A <see cref="T:System.Web.UI.WebControls.WebControl" /> or <see cref="T:System.Web.UI.WebControls.WebControl" /> derived object that represents the Web server control associated with the <see cref="T:System.Web.UI.WebControls.Style" />. </param>
    </member>
    <member name="P:System.Web.UI.WebControls.Style.BackColor">
      <summary>Gets or sets the background color of the Web server control.</summary>
      <returns>A <see cref="T:System.Drawing.Color" /> that represents the background color of the control. The default is <see cref="F:System.Drawing.Color.Empty" />, which indicates that this property is not set.</returns>
    </member>
    <member name="P:System.Web.UI.WebControls.Style.BorderColor">
      <summary>Gets or sets the border color of the Web server control.</summary>
      <returns>A <see cref="T:System.Drawing.Color" /> that represents the border color of the control. The default is <see cref="F:System.Drawing.Color.Empty" />, which indicates that this property is not set.</returns>
    </member>
    <member name="P:System.Web.UI.WebControls.Style.BorderStyle">
      <summary>Gets or sets the border style of the Web server control.</summary>
      <returns>One of the <see cref="T:System.Web.UI.WebControls.BorderStyle" /> enumeration values. The default is NotSet.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">The selected value is not one of the <see cref="T:System.Web.UI.WebControls.BorderStyle" /> enumeration values.</exception>
    </member>
    <member name="P:System.Web.UI.WebControls.Style.BorderWidth">
      <summary>Gets or sets the border width of the Web server control.</summary>
      <returns>A <see cref="T:System.Web.UI.WebControls.Unit" /> that represents the border width of a Web server control. The default value is <see cref="F:System.Web.UI.WebControls.Unit.Empty" />, which indicates that this property is not set.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">The specified border width is a negative value. </exception>
    </member>
    <member name="M:System.Web.UI.WebControls.Style.CopyFrom(System.Web.UI.WebControls.Style)">
      <summary>Duplicates the style properties of the specified <see cref="T:System.Web.UI.WebControls.Style" /> into the instance of the <see cref="T:System.Web.UI.WebControls.Style" /> class that this method is called from.</summary>
      <param name="s">A <see cref="T:System.Web.UI.WebControls.Style" /> that represents the style to copy. </param>
      <exception cref="T:System.InvalidOperationException">
        <see cref="P:System.Web.UI.WebControls.Style.RegisteredCssClass" /> has been set.</exception>
    </member>
    <member name="P:System.Web.UI.WebControls.Style.CssClass">
      <summary>Gets or sets the cascading style sheet (CSS) class rendered by the Web server control on the client.</summary>
      <returns>The CSS class rendered by the Web server control on the client. The default is <see cref="F:System.String.Empty" />.</returns>
    </member>
    <member name="M:System.Web.UI.WebControls.Style.FillStyleAttributes(System.Web.UI.CssStyleCollection,System.Web.UI.IUrlResolutionService)">
      <summary>Adds the specified object's style properties to a <see cref="T:System.Web.UI.CssStyleCollection" /> object.</summary>
      <param name="attributes">The <see cref="T:System.Web.UI.CssStyleCollection" /> object to which to add the style properties. </param>
      <param name="urlResolver">A <see cref="T:System.Web.UI.IUrlResolutionService" /> -implemented object that contains the context information for the current location (URL). </param>
    </member>
    <member name="P:System.Web.UI.WebControls.Style.Font">
      <summary>Gets the font properties associated with the Web server control.</summary>
      <returns>A <see cref="T:System.Web.UI.WebControls.FontInfo" /> that represents the font properties of the Web server control.</returns>
    </member>
    <member name="P:System.Web.UI.WebControls.Style.ForeColor">
      <summary>Gets or sets the foreground color (typically the color of the text) of the Web server control.</summary>
      <returns>A <see cref="T:System.Drawing.Color" /> that represents the foreground color of the control. The default is <see cref="F:System.Drawing.Color.Empty" />.</returns>
    </member>
    <member name="M:System.Web.UI.WebControls.Style.GetStyleAttributes(System.Web.UI.IUrlResolutionService)">
      <summary>Retrieves the <see cref="T:System.Web.UI.CssStyleCollection" /> object for the specified <see cref="T:System.Web.UI.IUrlResolutionService" />-implemented object.</summary>
      <returns>A <see cref="T:System.Web.UI.CssStyleCollection" /> object.</returns>
      <param name="urlResolver">A <see cref="T:System.Web.UI.IUrlResolutionService" />-implemented object that contains the context information for the current location (URL). </param>
    </member>
    <member name="P:System.Web.UI.WebControls.Style.Height">
      <summary>Gets or sets the height of the Web server control.</summary>
      <returns>A <see cref="T:System.Web.UI.WebControls.Unit" /> that represents the height of the Web server control. The default is <see cref="F:System.Web.UI.WebControls.Unit.Empty" />, which indicates that this property is not set.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">The <see cref="P:System.Web.UI.WebControls.Unit.Value" /> property of the <see cref="T:System.Web.UI.WebControls.Unit" /> is negative. </exception>
    </member>
    <member name="P:System.Web.UI.WebControls.Style.IsEmpty">
      <summary>A protected property. Gets a value indicating whether any style elements have been defined in the state bag.</summary>
      <returns>true if the state bag has no style elements defined; otherwise, false.</returns>
    </member>
    <member name="P:System.Web.UI.WebControls.Style.IsTrackingViewState">
      <summary>Returns a value indicating whether any style elements have been defined in the state bag.</summary>
      <returns>true if there are style elements defined in the state bag; otherwise, false.</returns>
    </member>
    <member name="M:System.Web.UI.WebControls.Style.LoadViewState(System.Object)">
      <summary>Loads the previously saved state.</summary>
      <param name="state">The previously saved state. </param>
    </member>
    <member name="M:System.Web.UI.WebControls.Style.MergeWith(System.Web.UI.WebControls.Style)">
      <summary>Combines the style properties of the specified <see cref="T:System.Web.UI.WebControls.Style" /> with the instance of the <see cref="T:System.Web.UI.WebControls.Style" /> class that this method is called from.</summary>
      <param name="s">A <see cref="T:System.Web.UI.WebControls.Style" /> that represents the style to combine. </param>
      <exception cref="T:System.InvalidOperationException">
        <see cref="P:System.Web.UI.WebControls.Style.RegisteredCssClass" /> has been set.</exception>
    </member>
    <member name="P:System.Web.UI.WebControls.Style.RegisteredCssClass">
      <summary>Gets the cascading style sheet (CSS) class that is registered with the control.</summary>
      <returns>The CSS class name with which the current instance was registered on the page.</returns>
    </member>
    <member name="M:System.Web.UI.WebControls.Style.Reset">
      <summary>Removes any defined style elements from the state bag.</summary>
    </member>
    <member name="M:System.Web.UI.WebControls.Style.SaveViewState">
      <summary>A protected method. Saves any state that has been modified after the <see cref="M:System.Web.UI.WebControls.Style.TrackViewState" /> method was invoked.</summary>
      <returns>An object that represents the saved state. The default is null.</returns>
    </member>
    <member name="M:System.Web.UI.WebControls.Style.SetBit(System.Int32)">
      <summary>A protected internal method. Sets an internal bitmask field that indicates the style properties that are stored in the state bag.</summary>
      <param name="bit">A bitmask value.</param>
    </member>
    <member name="M:System.Web.UI.WebControls.Style.SetDirty">
      <summary>Marks the <see cref="T:System.Web.UI.WebControls.Style" /> so that its state will be recorded in view state.</summary>
    </member>
    <member name="P:System.Web.UI.WebControls.Style.System#Web#UI#IStateManager#IsTrackingViewState">
      <summary>Gets a value that indicates whether a server control is tracking its view state changes.</summary>
      <returns>true if there are style elements defined in the view state bag; otherwise, false.</returns>
    </member>
    <member name="M:System.Web.UI.WebControls.Style.System#Web#UI#IStateManager#LoadViewState(System.Object)">
      <summary>Loads the previously saved state.</summary>
      <param name="state">The previously saved state.</param>
    </member>
    <member name="M:System.Web.UI.WebControls.Style.System#Web#UI#IStateManager#SaveViewState">
      <summary>Returns the object containing state changes.</summary>
      <returns>An object that represents the saved state. The default is null.</returns>
    </member>
    <member name="M:System.Web.UI.WebControls.Style.System#Web#UI#IStateManager#TrackViewState">
      <summary>Starts tracking state changes.</summary>
    </member>
    <member name="M:System.Web.UI.WebControls.Style.TrackViewState">
      <summary>A protected method. Marks the beginning for tracking state changes on the control. Any changes made after tracking has begun will be tracked and saved as part of the control view state.</summary>
    </member>
    <member name="P:System.Web.UI.WebControls.Style.ViewState">
      <summary>Gets the state bag that holds the style elements.</summary>
      <returns>A state bag that holds the style elements defined in it.</returns>
    </member>
    <member name="P:System.Web.UI.WebControls.Style.Width">
      <summary>Gets or sets the width of the Web server control.</summary>
      <returns>A <see cref="T:System.Web.UI.WebControls.Unit" /> that represents the width of the Web server control. The default is <see cref="F:System.Web.UI.WebControls.Unit.Empty" />, which indicates that this property is not set.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">The <see cref="P:System.Web.UI.WebControls.Unit.Value" /> property of the <see cref="T:System.Web.UI.WebControls.Unit" /> is negative. </exception>
    </member>
    <member name="T:System.Web.UI.WebControls.StyleCollection">
      <summary>Represents a collection of <see cref="T:System.Web.UI.WebControls.Style" /> objects.</summary>
    </member>
    <member name="M:System.Web.UI.WebControls.StyleCollection.Add(System.Web.UI.WebControls.Style)">
      <summary>Appends a specified <see cref="T:System.Web.UI.WebControls.Style" /> object to the end of the <see cref="T:System.Web.UI.WebControls.StyleCollection" /> object.</summary>
      <returns>The index at which the style was added to the collection.</returns>
      <param name="style">The <see cref="T:System.Web.UI.WebControls.Style" /> object to add to the collection.</param>
    </member>
    <member name="M:System.Web.UI.WebControls.StyleCollection.Contains(System.Web.UI.WebControls.Style)">
      <summary>Determines whether the specified style is contained within the collection.</summary>
      <returns>true if the style is in the collection; otherwise, false.</returns>
      <param name="style">The <see cref="T:System.Web.UI.WebControls.Style" /> to locate within the collection.</param>
    </member>
    <member name="M:System.Web.UI.WebControls.StyleCollection.CopyTo(System.Web.UI.WebControls.Style[],System.Int32)">
      <summary>Copies the elements of the <see cref="T:System.Web.UI.WebControls.StyleCollection" /> to a one-dimensional <see cref="T:System.Web.UI.WebControls.Style" /> array, starting at the specified index of the target array.</summary>
      <param name="styleArray">The <see cref="T:System.Array" /> that is the destination of the copied styles. The <see cref="T:System.Array" /> must have zero-based indexing.</param>
      <param name="index">The zero-based index in <paramref name="styleArray" /> at which copying begins.</param>
    </member>
    <member name="M:System.Web.UI.WebControls.StyleCollection.CreateKnownType(System.Int32)">
      <summary>Creates an instance of the <see cref="T:System.Web.UI.WebControls.Style" /> class, based on the single element collection returned by the <see cref="M:System.Web.UI.WebControls.StyleCollection.GetKnownTypes" /> method.</summary>
      <returns>An instance of the <see cref="T:System.Web.UI.WebControls.Style" /> class.</returns>
      <param name="index">The index, from the ordered list of types returned by <see cref="M:System.Web.UI.WebControls.StyleCollection.GetKnownTypes" />, of the type of the <see cref="T:System.Web.UI.IStateManager" /> object to create. Because the <see cref="M:System.Web.UI.WebControls.StyleCollection.GetKnownTypes" /> method of <see cref="T:System.Web.UI.WebControls.StyleCollection" /> returns a list with only one type, the input <paramref name="index" /> is ignored.</param>
    </member>
    <member name="M:System.Web.UI.WebControls.StyleCollection.GetKnownTypes">
      <summary>Gets an array of the <see cref="T:System.Web.UI.IStateManager" /> types that the <see cref="T:System.Web.UI.WebControls.StyleCollection" /> can contain.</summary>
      <returns>An array containing one <see cref="T:System.Type" /> object for the <see cref="T:System.Web.UI.WebControls.Style" /> class, which indicates that the <see cref="T:System.Web.UI.WebControls.StyleCollection" /> can contain <see cref="T:System.Web.UI.WebControls.Style" /> objects.</returns>
    </member>
    <member name="M:System.Web.UI.WebControls.StyleCollection.IndexOf(System.Web.UI.WebControls.Style)">
      <summary>Returns the index of the specified <see cref="T:System.Web.UI.WebControls.Style" /> object within the collection.</summary>
      <returns>The zero-based index of the first occurrence of <paramref name="style" /> within the collection; otherwise, -1 if the style is not in the collection.</returns>
      <param name="style">The <see cref="T:System.Web.UI.WebControls.Style" /> to locate within the collection.</param>
    </member>
    <member name="M:System.Web.UI.WebControls.StyleCollection.Insert(System.Int32,System.Web.UI.WebControls.Style)">
      <summary>Inserts a specified <see cref="T:System.Web.UI.WebControls.Style" /> object into the <see cref="T:System.Web.UI.WebControls.StyleCollection" /> at the specified index location.</summary>
      <param name="index">The zero-based index location at which to insert the <see cref="T:System.Web.UI.WebControls.Style" /> object. </param>
      <param name="style">The <see cref="T:System.Web.UI.WebControls.Style" /> object to insert into the collection. </param>
    </member>
    <member name="P:System.Web.UI.WebControls.StyleCollection.Item(System.Int32)">
      <summary>Gets the <see cref="T:System.Web.UI.WebControls.Style" /> object at the specified index location in the <see cref="T:System.Web.UI.WebControls.StyleCollection" /> object.</summary>
      <returns>A <see cref="T:System.Web.UI.WebControls.Style" /> object at the specified index in the <see cref="T:System.Web.UI.WebControls.StyleCollection" />.</returns>
      <param name="i">The zero-based index location of the <see cref="T:System.Web.UI.WebControls.Style" /> object in the <see cref="T:System.Web.UI.WebControls.StyleCollection" />. </param>
    </member>
    <member name="M:System.Web.UI.WebControls.StyleCollection.Remove(System.Web.UI.WebControls.Style)">
      <summary>Removes the specified <see cref="T:System.Web.UI.WebControls.Style" /> object from the <see cref="T:System.Web.UI.WebControls.StyleCollection" /> object.</summary>
      <param name="style">The <see cref="T:System.Web.UI.WebControls.Style" /> object to remove from the collection. </param>
    </member>
    <member name="M:System.Web.UI.WebControls.StyleCollection.RemoveAt(System.Int32)">
      <summary>Removes the <see cref="T:System.Web.UI.WebControls.Style" /> object at the specified index location from the <see cref="T:System.Web.UI.WebControls.StyleCollection" /> object.</summary>
      <param name="index">The zero-based index location of the <see cref="T:System.Web.UI.WebControls.Style" /> object to remove. </param>
    </member>
    <member name="M:System.Web.UI.WebControls.StyleCollection.SetDirtyObject(System.Object)">
      <summary>Instructs the input <see cref="T:System.Web.UI.WebControls.Style" /> object contained in the collection to record its entire state to view state, rather than recording only change information.</summary>
      <param name="o">The <see cref="T:System.Web.UI.WebControls.Style" /> object that should serialize itself completely.</param>
    </member>
    <member name="T:System.Web.UI.WebControls.SubMenuStyle">
      <summary>Represents the style of a submenu in a <see cref="T:System.Web.UI.WebControls.Menu" /> control.</summary>
    </member>
    <member name="M:System.Web.UI.WebControls.SubMenuStyle.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Web.UI.WebControls.SubMenuStyle" /> class. </summary>
    </member>
    <member name="M:System.Web.UI.WebControls.SubMenuStyle.#ctor(System.Web.UI.StateBag)">
      <summary>Initializes a new instance of the <see cref="T:System.Web.UI.WebControls.SubMenuStyle" /> class with the specified view-state information. </summary>
      <param name="bag">The view-state information of the current request.</param>
    </member>
    <member name="M:System.Web.UI.WebControls.SubMenuStyle.CopyFrom(System.Web.UI.WebControls.Style)">
      <summary>Copies the style properties of the specified <see cref="T:System.Web.UI.WebControls.Style" /> object into the current instance of the <see cref="T:System.Web.UI.WebControls.SubMenuStyle" /> class.</summary>
      <param name="s">The <see cref="T:System.Web.UI.WebControls.Style" /> object to copy.</param>
    </member>
    <member name="M:System.Web.UI.WebControls.SubMenuStyle.FillStyleAttributes(System.Web.UI.CssStyleCollection,System.Web.UI.IUrlResolutionService)">
      <summary>Adds the style properties of the <see cref="T:System.Web.UI.WebControls.SubMenuStyle" /> object to the specified <see cref="T:System.Web.UI.CssStyleCollection" /> object.</summary>
      <param name="attributes">The <see cref="T:System.Web.UI.CssStyleCollection" /> object to which to add the style properties.</param>
      <param name="urlResolver">The <see cref="T:System.Web.UI.IUrlResolutionService" />-implemented object that contains the context information for the current location (URL).</param>
    </member>
    <member name="P:System.Web.UI.WebControls.SubMenuStyle.HorizontalPadding">
      <summary>Gets or sets the amount of space to the left and right of a submenu.</summary>
      <returns>The amount of space to the left and right of the text of a submenu. The default is 0.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">The selected value is of <see cref="P:System.Web.UI.WebControls.Unit.Type" /><see cref="F:System.Web.UI.WebControls.UnitType.Percentage" /> or is less than 0.</exception>
    </member>
    <member name="M:System.Web.UI.WebControls.SubMenuStyle.MergeWith(System.Web.UI.WebControls.Style)">
      <summary>Combines the style properties of the specified <see cref="T:System.Web.UI.WebControls.Style" /> object with those of the current instance of the <see cref="T:System.Web.UI.WebControls.SubMenuStyle" /> class.</summary>
      <param name="s">The <see cref="T:System.Web.UI.WebControls.Style" /> object to combine settings with.</param>
    </member>
    <member name="M:System.Web.UI.WebControls.SubMenuStyle.Reset">
      <summary>Returns the current instance of the <see cref="T:System.Web.UI.WebControls.SubMenuStyle" /> class to its original state.</summary>
    </member>
    <member name="M:System.Web.UI.WebControls.SubMenuStyle.System#ComponentModel#ICustomTypeDescriptor#GetAttributes">
      <summary>For a description of this member, see <see cref="M:System.ComponentModel.ICustomTypeDescriptor.GetAttributes" />.</summary>
      <returns>An <see cref="T:System.ComponentModel.AttributeCollection" /> containing the attributes for this object.</returns>
    </member>
    <member name="M:System.Web.UI.WebControls.SubMenuStyle.System#ComponentModel#ICustomTypeDescriptor#GetClassName">
      <summary>For a description of this member, see <see cref="M:System.ComponentModel.ICustomTypeDescriptor.GetClassName" />.</summary>
      <returns>The class name of the object, or null if the class does not have a name.</returns>
    </member>
    <member name="M:System.Web.UI.WebControls.SubMenuStyle.System#ComponentModel#ICustomTypeDescriptor#GetComponentName">
      <summary>For a description of this member, see <see cref="M:System.ComponentModel.ICustomTypeDescriptor.GetComponentName" />.</summary>
      <returns>The name of the object, or null if the object does not have a name.</returns>
    </member>
    <member name="M:System.Web.UI.WebControls.SubMenuStyle.System#ComponentModel#ICustomTypeDescriptor#GetConverter">
      <summary>For a description of this member, see <see cref="M:System.ComponentModel.ICustomTypeDescriptor.GetConverter" />.</summary>
      <returns>A <see cref="T:System.ComponentModel.TypeConverter" /> that is the converter for this object, or null if there is no <see cref="T:System.ComponentModel.TypeConverter" /> for this object.</returns>
    </member>
    <member name="M:System.Web.UI.WebControls.SubMenuStyle.System#ComponentModel#ICustomTypeDescriptor#GetDefaultEvent">
      <summary>For a description of this member, see <see cref="M:System.ComponentModel.ICustomTypeDescriptor.GetDefaultEvent" />.</summary>
      <returns>An <see cref="T:System.ComponentModel.EventDescriptor" /> object that represents the default event for the object, or null if the object has no events.</returns>
    </member>
    <member name="M:System.Web.UI.WebControls.SubMenuStyle.System#ComponentModel#ICustomTypeDescriptor#GetDefaultProperty">
      <summary>For a description of this member, see <see cref="M:System.ComponentModel.ICustomTypeDescriptor.GetDefaultProperty" />.</summary>
      <returns>A <see cref="T:System.ComponentModel.PropertyDescriptor" /> object that represents the default property for this object, or null if the object does not have properties.</returns>
    </member>
    <member name="M:System.Web.UI.WebControls.SubMenuStyle.System#ComponentModel#ICustomTypeDescriptor#GetEditor(System.Type)">
      <summary>For a description of this member, see <see cref="M:System.ComponentModel.ICustomTypeDescriptor.GetEditor(System.Type)" />.</summary>
      <returns>An <see cref="T:System.Object" /> of the specified type that is the editor for this object, or null if the editor cannot be found.</returns>
      <param name="editorBaseType">A <see cref="T:System.Type" /> that represents the editor for this object.</param>
    </member>
    <member name="M:System.Web.UI.WebControls.SubMenuStyle.System#ComponentModel#ICustomTypeDescriptor#GetEvents">
      <summary>For a description of this member, see <see cref="M:System.ComponentModel.ICustomTypeDescriptor.GetEvents" />.</summary>
      <returns>An <see cref="T:System.ComponentModel.EventDescriptorCollection" /> that contains the events for this instance.</returns>
    </member>
    <member name="M:System.Web.UI.WebControls.SubMenuStyle.System#ComponentModel#ICustomTypeDescriptor#GetEvents(System.Attribute[])">
      <summary>For a description of this member, see <see cref="M:System.ComponentModel.ICustomTypeDescriptor.GetEvents(System.Attribute[])" />.</summary>
      <returns>An <see cref="T:System.ComponentModel.EventDescriptorCollection" /> that contains the filtered events for this instance.</returns>
      <param name="attributes">An array of type <see cref="T:System.Attribute" /> that is used as a filter.</param>
    </member>
    <member name="M:System.Web.UI.WebControls.SubMenuStyle.System#ComponentModel#ICustomTypeDescriptor#GetProperties">
      <summary>For a description of this member, see <see cref="M:System.ComponentModel.ICustomTypeDescriptor.GetProperties" />.</summary>
      <returns>A <see cref="T:System.ComponentModel.PropertyDescriptorCollection" /> that contains the properties for this instance.</returns>
    </member>
    <member name="M:System.Web.UI.WebControls.SubMenuStyle.System#ComponentModel#ICustomTypeDescriptor#GetProperties(System.Attribute[])">
      <summary>For a description of this member, see <see cref="M:System.ComponentModel.ICustomTypeDescriptor.GetProperties(System.Attribute[])" />.</summary>
      <returns>A <see cref="T:System.ComponentModel.PropertyDescriptorCollection" /> object that contains the filtered properties for this instance.</returns>
      <param name="attributes">An array of type <see cref="T:System.Attribute" /> that is used as a filter.</param>
    </member>
    <member name="M:System.Web.UI.WebControls.SubMenuStyle.System#ComponentModel#ICustomTypeDescriptor#GetPropertyOwner(System.ComponentModel.PropertyDescriptor)">
      <summary>For a description of this member, see <see cref="M:System.ComponentModel.ICustomTypeDescriptor.GetPropertyOwner(System.ComponentModel.PropertyDescriptor)" />.</summary>
      <returns>An <see cref="T:System.Object" /> that represents the owner of the specified property.</returns>
      <param name="pd">A <see cref="T:System.ComponentModel.PropertyDescriptor" /> that represents the property whose owner is to be found.</param>
    </member>
    <member name="P:System.Web.UI.WebControls.SubMenuStyle.VerticalPadding">
      <summary>Gets or sets the amount of space above and below a submenu.</summary>
      <returns>The amount of space above and below a submenu. The default is 0.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">The selected value is of <see cref="P:System.Web.UI.WebControls.Unit.Type" /><see cref="F:System.Web.UI.WebControls.UnitType.Percentage" /> or is less than 0.</exception>
    </member>
    <member name="T:System.Web.UI.WebControls.SubMenuStyleCollection">
      <summary>Represents a collection of <see cref="T:System.Web.UI.WebControls.SubMenuStyle" /> objects in a <see cref="T:System.Web.UI.WebControls.Menu" /> control.</summary>
    </member>
    <member name="M:System.Web.UI.WebControls.SubMenuStyleCollection.Add(System.Web.UI.WebControls.SubMenuStyle)">
      <summary>Adds a submenu style to the <see cref="T:System.Web.UI.WebControls.SubMenuStyleCollection" /> collection.</summary>
      <returns>The position in the collection at which the <see cref="T:System.Web.UI.WebControls.SubMenuStyle" /> instance was inserted.</returns>
      <param name="style">The <see cref="T:System.Web.UI.WebControls.SubMenuStyle" /> instance to add to the collection.</param>
    </member>
    <member name="M:System.Web.UI.WebControls.SubMenuStyleCollection.Contains(System.Web.UI.WebControls.SubMenuStyle)">
      <summary>Determines whether a <see cref="T:System.Web.UI.WebControls.SubMenuStyleCollection" /> collection contains a specific <see cref="T:System.Web.UI.WebControls.SubMenuStyle" /> instance.</summary>
      <returns>true if the <see cref="T:System.Web.UI.WebControls.SubMenuStyle" /> instance is found in the <see cref="T:System.Web.UI.WebControls.SubMenuStyleCollection" /> collection; otherwise, false. If null is passed as the <paramref name="style" /> parameter, false is returned.</returns>
      <param name="style">The <see cref="T:System.Web.UI.WebControls.SubMenuStyle" /> instance to locate in the <see cref="T:System.Web.UI.WebControls.SubMenuStyleCollection" /> collection.</param>
    </member>
    <member name="M:System.Web.UI.WebControls.SubMenuStyleCollection.CopyTo(System.Web.UI.WebControls.SubMenuStyle[],System.Int32)">
      <summary>Copies the contents of a <see cref="T:System.Web.UI.WebControls.SubMenuStyleCollection" /> collection to an array, starting at a specified array index.</summary>
      <param name="styleArray">The one-dimensional array that is the destination of the <see cref="T:System.Web.UI.WebControls.SubMenuStyle" /> objects copied from the <see cref="T:System.Web.UI.WebControls.SubMenuStyleCollection" /> collection. The <paramref name="array" /> must have zero-based indexing.</param>
      <param name="index">The zero-based index in <paramref name="array" /> at which copying begins.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="array" /> is null.</exception>
      <exception cref="T:System.IndexOutOfRangeException">
        <paramref name="index" /> is less than zero.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="array" /> is multidimensional- or -<paramref name="index" /> is greater than or equal to the length of <paramref name="array" />.- or -The number of <see cref="T:System.Web.UI.WebControls.SubMenuStyle" /> objects in the source <see cref="T:System.Web.UI.WebControls.SubMenuStyleCollection" /> collection is greater than the available space from the <paramref name="index" /> to the end of the destination <paramref name="array" />.</exception>
    </member>
    <member name="M:System.Web.UI.WebControls.SubMenuStyleCollection.CreateKnownType(System.Int32)">
      <summary>Creates an <see cref="T:System.Object" /> of the data type that corresponds to the specified index.</summary>
      <returns>Always returns an empty <see cref="T:System.Web.UI.WebControls.SubMenuStyle" /> object.</returns>
      <param name="index">The index of the data type to create. This parameter is not used in this implementation of the method; therefore, you should always pass in null.</param>
    </member>
    <member name="M:System.Web.UI.WebControls.SubMenuStyleCollection.GetKnownTypes">
      <summary>Creates an array of <see cref="T:System.Type" /> objects that contains the supported data types of the <see cref="T:System.Web.UI.WebControls.SubMenuStyleCollection" /> class.</summary>
      <returns>An array of <see cref="T:System.Type" /> objects that contains the data types supported by the <see cref="T:System.Web.UI.WebControls.SubMenuStyleCollection" /> class.</returns>
    </member>
    <member name="M:System.Web.UI.WebControls.SubMenuStyleCollection.IndexOf(System.Web.UI.WebControls.SubMenuStyle)">
      <summary>Determines the location of a specified <see cref="T:System.Web.UI.WebControls.SubMenuStyle" /> object in the <see cref="T:System.Web.UI.WebControls.SubMenuStyleCollection" /> collection.</summary>
      <returns>The index of the specified <see cref="T:System.Web.UI.WebControls.SubMenuStyle" /> object if it is found in the list; otherwise, -1.</returns>
      <param name="style">The <see cref="T:System.Web.UI.WebControls.SubMenuStyle" /> object to locate in the <see cref="T:System.Web.UI.WebControls.SubMenuStyleCollection" /> collection.</param>
    </member>
    <member name="M:System.Web.UI.WebControls.SubMenuStyleCollection.Insert(System.Int32,System.Web.UI.WebControls.SubMenuStyle)">
      <summary>Inserts a <see cref="T:System.Web.UI.WebControls.SubMenuStyle" /> object into the <see cref="T:System.Web.UI.WebControls.SubMenuStyleCollection" /> collection at the specified index.</summary>
      <param name="index">The zero-based index at which the <see cref="T:System.Web.UI.WebControls.SubMenuStyle" /> object should be inserted.</param>
      <param name="style">The <see cref="T:System.Web.UI.WebControls.SubMenuStyle" /> object to insert into the <see cref="T:System.Web.UI.WebControls.SubMenuStyleCollection" /> collection.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">The specified <paramref name="index" /> is outside the range of the collection.</exception>
      <exception cref="T:System.NotSupportedException">The <see cref="T:System.Web.UI.WebControls.SubMenuStyleCollection" /> collection is read-only.</exception>
      <exception cref="T:System.ArgumentNullException">The specified <paramref name="style" /> is null.</exception>
    </member>
    <member name="P:System.Web.UI.WebControls.SubMenuStyleCollection.Item(System.Int32)">
      <summary>Gets a reference to the <see cref="T:System.Web.UI.WebControls.SubMenuStyle" /> object at the specified index in the <see cref="T:System.Web.UI.WebControls.SubMenuStyleCollection" /> collection object.</summary>
      <returns>A reference to the <see cref="T:System.Web.UI.WebControls.SubMenuStyle" /> object.</returns>
      <param name="i">The location of the <see cref="T:System.Web.UI.WebControls.SubMenuStyle" /> object in the <see cref="T:System.Web.UI.WebControls.SubMenuStyleCollection" /> collection.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">The index parameter is less than zero or greater than or equal to the <see cref="P:System.Web.UI.StateManagedCollection.Count" /> property value.</exception>
    </member>
    <member name="M:System.Web.UI.WebControls.SubMenuStyleCollection.OnInsert(System.Int32,System.Object)">
      <summary>Called before the <see cref="M:System.Web.UI.WebControls.SubMenuStyleCollection.Add(System.Web.UI.WebControls.SubMenuStyle)" /> and <see cref="M:System.Web.UI.WebControls.SubMenuStyleCollection.Insert(System.Int32,System.Web.UI.WebControls.SubMenuStyle)" /> methods.</summary>
      <param name="index">The zero-based index at which <paramref name="value" /> should be inserted.</param>
      <param name="value">The object to insert into the <see cref="T:System.Web.UI.WebControls.SubMenuStyleCollection" /> collection.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="value" /> is not of type <see cref="T:System.Web.UI.WebControls.SubMenuStyle" />.</exception>
    </member>
    <member name="M:System.Web.UI.WebControls.SubMenuStyleCollection.Remove(System.Web.UI.WebControls.SubMenuStyle)">
      <summary>Removes the first occurrence of the specified <see cref="T:System.Web.UI.WebControls.SubMenuStyle" /> object from the <see cref="T:System.Web.UI.WebControls.SubMenuStyleCollection" /> collection.</summary>
      <param name="style">The <see cref="T:System.Web.UI.WebControls.SubMenuStyle" /> object to remove from the collection.</param>
      <exception cref="T:System.NotSupportedException">The <see cref="T:System.Web.UI.WebControls.SubMenuStyleCollection" /> collection is read-only.</exception>
    </member>
    <member name="M:System.Web.UI.WebControls.SubMenuStyleCollection.RemoveAt(System.Int32)">
      <summary>Removes the <see cref="T:System.Web.UI.WebControls.SubMenuStyle" /> object at the specified location.</summary>
      <param name="index">The zero-based index location of the <see cref="T:System.Web.UI.WebControls.SubMenuStyle" /> object to remove from the collection.</param>
      <exception cref="T:System.NotSupportedException">The <see cref="T:System.Web.UI.WebControls.SubMenuStyleCollection" /> collection is read-only.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> is less than zero.- or -<paramref name="index" /> is equal to or greater than <see cref="P:System.Web.UI.StateManagedCollection.Count" />.</exception>
    </member>
    <member name="M:System.Web.UI.WebControls.SubMenuStyleCollection.SetDirtyObject(System.Object)">
      <summary>Instructs a <see cref="T:System.Web.UI.WebControls.SubMenuStyle" /> object contained by the <see cref="T:System.Web.UI.WebControls.SubMenuStyleCollection" /> collection to record its entire state to view state.</summary>
      <param name="o">The object that should serialize itself completely.</param>
    </member>
    <member name="T:System.Web.UI.WebControls.Substitution">
      <summary>Specifies a section on an output-cached Web page that is exempt from caching. At this location, dynamic content is retrieved and substituted for the <see cref="T:System.Web.UI.WebControls.Substitution" /> control.</summary>
    </member>
    <member name="M:System.Web.UI.WebControls.Substitution.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Web.UI.WebControls.Substitution" /> class.</summary>
    </member>
    <member name="M:System.Web.UI.WebControls.Substitution.CreateControlCollection">
      <summary>Returns an <see cref="T:System.Web.UI.EmptyControlCollection" /> object, indicating that the <see cref="T:System.Web.UI.WebControls.Substitution" /> control does not support child controls.</summary>
      <returns>An <see cref="T:System.Web.UI.EmptyControlCollection" />, indicating that the control does not support child controls.</returns>
    </member>
    <member name="P:System.Web.UI.WebControls.Substitution.MethodName">
      <summary>Gets or sets the name of the callback method to invoke when the <see cref="T:System.Web.UI.WebControls.Substitution" /> control executes.</summary>
      <returns>A string that represents the name of the method to invoke when the <see cref="T:System.Web.UI.WebControls.Substitution" /> control executes.</returns>
    </member>
    <member name="M:System.Web.UI.WebControls.Substitution.OnPreRender(System.EventArgs)">
      <param name="e">An <see cref="T:System.EventArgs" /> object that contains the event data. </param>
      <exception cref="T:System.Web.HttpException">The parent control or master page is cached.</exception>
    </member>
    <member name="M:System.Web.UI.WebControls.Substitution.Render(System.Web.UI.HtmlTextWriter)">
      <param name="writer">The <see cref="T:System.Web.UI.HtmlTextWriter" /> object that receives the server control content. </param>
    </member>
    <member name="T:System.Web.UI.WebControls.Table">
      <summary>Displays a table on a Web page.</summary>
    </member>
    <member name="M:System.Web.UI.WebControls.Table.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Web.UI.WebControls.Table" /> class.</summary>
    </member>
    <member name="M:System.Web.UI.WebControls.Table.AddAttributesToRender(System.Web.UI.HtmlTextWriter)">
      <summary>Adds HTML attributes and styles that need to be rendered to the specified <see cref="T:System.Web.UI.HtmlTextWriter" />.</summary>
      <param name="writer">The output stream that renders HTML content to the client. </param>
    </member>
    <member name="P:System.Web.UI.WebControls.Table.BackImageUrl">
      <summary>Gets or sets the URL of the background image to display behind the <see cref="T:System.Web.UI.WebControls.Table" /> control.</summary>
      <returns>The URL of the background image for the <see cref="T:System.Web.UI.WebControls.Table" /> control. The default value is <see cref="F:System.String.Empty" />.</returns>
    </member>
    <member name="P:System.Web.UI.WebControls.Table.Caption">
      <summary>Gets or sets the text to render in an HTML caption element in a <see cref="T:System.Web.UI.WebControls.Table" /> control. This property is provided to make the control more accessible to users of Assistive Technology devices.</summary>
      <returns>A string that represents the text to render in an HTML caption element in a <see cref="T:System.Web.UI.WebControls.Table" /> control. The default value is an empty string ("").</returns>
    </member>
    <member name="P:System.Web.UI.WebControls.Table.CaptionAlign">
      <summary>Gets or sets the horizontal or vertical position of the HTML caption element in a <see cref="T:System.Web.UI.WebControls.Table" /> control. This property is provided to make the control more accessible to users of Assistive Technology devices.</summary>
      <returns>One of the <see cref="T:System.Web.UI.WebControls.TableCaptionAlign" /> enumeration values. The default value is NotSet.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">The specified type is not one of the <see cref="T:System.Web.UI.WebControls.TableCaptionAlign" /> enumeration values. </exception>
    </member>
    <member name="P:System.Web.UI.WebControls.Table.CellPadding">
      <summary>Gets or sets the amount of space between the contents of a cell and the cell's border. </summary>
      <returns>The amount of space, in pixels, between the contents of a cell and the cell's border. The default value is -1, which indicates that the property has not been set.</returns>
    </member>
    <member name="P:System.Web.UI.WebControls.Table.CellSpacing">
      <summary>Gets or sets the amount of space between cells. </summary>
      <returns>The amount of space, in pixels, between cells. The default value is -1, which indicates that the property has not been set.</returns>
    </member>
    <member name="M:System.Web.UI.WebControls.Table.CreateControlCollection">
      <summary>Creates a new <see cref="T:System.Web.UI.ControlCollection" /> object to hold the <see cref="T:System.Web.UI.WebControls.TableRow" /> controls of the current <see cref="T:System.Web.UI.WebControls.Table" /> control.</summary>
      <returns>A <see cref="T:System.Web.UI.ControlCollection" /> object to contain the <see cref="T:System.Web.UI.WebControls.TableRow" /> controls of the current <see cref="T:System.Web.UI.WebControls.Table" /> control.</returns>
    </member>
    <member name="M:System.Web.UI.WebControls.Table.CreateControlStyle">
      <summary>Gets a reference to a collection of properties that define the appearance of a <see cref="T:System.Web.UI.WebControls.Table" /> control.</summary>
      <returns>A reference to the <see cref="T:System.Web.UI.WebControls.Style" /> object that contains the properties that define the appearance of the <see cref="T:System.Web.UI.WebControls.Table" /> control.</returns>
    </member>
    <member name="P:System.Web.UI.WebControls.Table.GridLines">
      <summary>Gets or sets the grid line style to display in the <see cref="T:System.Web.UI.WebControls.Table" /> control. </summary>
      <returns>One of the <see cref="T:System.Web.UI.WebControls.GridLines" /> enumeration values. The default value is None.</returns>
    </member>
    <member name="P:System.Web.UI.WebControls.Table.HorizontalAlign">
      <summary>Gets or sets the horizontal alignment of the <see cref="T:System.Web.UI.WebControls.Table" /> control on the page.</summary>
      <returns>One of the <see cref="T:System.Web.UI.WebControls.HorizontalAlign" /> enumeration values. The default value is NotSet.</returns>
    </member>
    <member name="M:System.Web.UI.WebControls.Table.RaisePostBackEvent(System.String)">
      <summary>Raises events for the <see cref="T:System.Web.UI.WebControls.Table" /> control when a form is posted back to the server.</summary>
      <param name="argument">A <see cref="T:System.String" /> that represents the argument for the event. </param>
    </member>
    <member name="M:System.Web.UI.WebControls.Table.RenderBeginTag(System.Web.UI.HtmlTextWriter)">
      <summary>Renders the HTML opening tag of the <see cref="T:System.Web.UI.WebControls.Table" /> control to the specified writer. </summary>
      <param name="writer">An <see cref="T:System.Web.UI.HtmlTextWriter" /> that represents the output stream to render HTML content on the client.</param>
    </member>
    <member name="M:System.Web.UI.WebControls.Table.RenderContents(System.Web.UI.HtmlTextWriter)">
      <summary>Renders the rows in the table control to the specified writer.</summary>
      <param name="writer">An <see cref="T:System.Web.UI.HtmlTextWriter" /> that represents the output stream to render HTML content on the client. </param>
      <exception cref="T:System.Web.HttpException">The table sections are not in order.</exception>
    </member>
    <member name="P:System.Web.UI.WebControls.Table.Rows">
      <summary>Gets the collection of rows in the <see cref="T:System.Web.UI.WebControls.Table" /> control.</summary>
      <returns>A <see cref="T:System.Web.UI.WebControls.TableRowCollection" /> that contains the <see cref="T:System.Web.UI.WebControls.TableRow" /> objects in the <see cref="T:System.Web.UI.WebControls.Table" /> control.</returns>
    </member>
    <member name="P:System.Web.UI.WebControls.Table.SupportsDisabledAttribute">
      <summary>Gets a value that indicates whether the control should set the disabled attribute of the rendered HTML element to "disabled" when the control's <see cref="P:System.Web.UI.WebControls.WebControl.IsEnabled" /> property is false.</summary>
      <returns>true if the <see cref="P:System.Web.UI.Control.RenderingCompatibility" /> property indicates an ASP.NET version lower than 4.0; otherwise, false.</returns>
    </member>
    <member name="M:System.Web.UI.WebControls.Table.System#Web#UI#IPostBackEventHandler#RaisePostBackEvent(System.String)">
      <summary>For a description of this member, see <see cref="M:System.Web.UI.IPostBackEventHandler.RaisePostBackEvent(System.String)" />.</summary>
      <param name="eventArgument">The argument for the event.</param>
    </member>
    <member name="T:System.Web.UI.WebControls.Table.RowControlCollection">
      <summary>Represents the collection of <see cref="T:System.Web.UI.WebControls.TableRow" /> objects in a <see cref="T:System.Web.UI.WebControls.Table" /> control.</summary>
    </member>
    <member name="M:System.Web.UI.WebControls.Table.RowControlCollection.Add(System.Web.UI.Control)">
      <summary>Adds the specified <see cref="T:System.Web.UI.Control" /> object to the <see cref="T:System.Web.UI.WebControls.Table.RowControlCollection" /> collection.</summary>
      <param name="child">The <see cref="T:System.Web.UI.Control" /> to add to the <see cref="T:System.Web.UI.WebControls.Table.RowControlCollection" />. </param>
      <exception cref="T:System.ArgumentException">The object specified by <paramref name="child" /> is not a <see cref="T:System.Web.UI.WebControls.TableRow" />. </exception>
    </member>
    <member name="M:System.Web.UI.WebControls.Table.RowControlCollection.AddAt(System.Int32,System.Web.UI.Control)">
      <summary>Adds the specified <see cref="T:System.Web.UI.Control" /> object to the <see cref="T:System.Web.UI.WebControls.Table.RowControlCollection" /> collection. The new control is added to the array at the specified index location.</summary>
      <param name="index">The location in the array at which to add the child control. </param>
      <param name="child">The Control object to add to the <see cref="T:System.Web.UI.WebControls.Table.RowControlCollection" />. </param>
      <exception cref="T:System.Web.HttpException">The control does not allow child controls. </exception>
      <exception cref="T:System.ArgumentException">The child value is null. -or- The object is not a <see cref="T:System.Web.UI.WebControls.TableRow" />.</exception>
    </member>
    <member name="T:System.Web.UI.WebControls.TableCaptionAlign">
      <summary>Specifies the horizontal or vertical placement of the text to render as the HTML caption element.</summary>
    </member>
    <member name="F:System.Web.UI.WebControls.TableCaptionAlign.NotSet">
      <summary>The caption alignment is not set. The browser that renders the caption determines where to align the caption.</summary>
    </member>
    <member name="F:System.Web.UI.WebControls.TableCaptionAlign.Top">
      <summary>The caption element is aligned with the top of the table.</summary>
    </member>
    <member name="F:System.Web.UI.WebControls.TableCaptionAlign.Bottom">
      <summary>The caption element is aligned with the bottom of the table.</summary>
    </member>
    <member name="F:System.Web.UI.WebControls.TableCaptionAlign.Left">
      <summary>The caption element is aligned with the left side of the table.</summary>
    </member>
    <member name="F:System.Web.UI.WebControls.TableCaptionAlign.Right">
      <summary>The caption element is aligned with the right side of the table.</summary>
    </member>
    <member name="T:System.Web.UI.WebControls.TableCell">
      <summary>Represents a cell in a <see cref="T:System.Web.UI.WebControls.Table" /> control.</summary>
    </member>
    <member name="M:System.Web.UI.WebControls.TableCell.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Web.UI.WebControls.TableCell" /> class.</summary>
    </member>
    <member name="M:System.Web.UI.WebControls.TableCell.AddAttributesToRender(System.Web.UI.HtmlTextWriter)">
      <summary>Adds properties specific to the <see cref="T:System.Web.UI.WebControls.TableCell" /> control to the list of attributes to render.</summary>
      <param name="writer">The output stream that renders HTML content to the client. </param>
      <exception cref="T:System.Web.HttpException">A cell listed as an associated header cell was not found.</exception>
    </member>
    <member name="M:System.Web.UI.WebControls.TableCell.AddParsedSubObject(System.Object)">
      <summary>Adds a parsed child control to the <see cref="T:System.Web.UI.WebControls.TableCell" /> control.</summary>
      <param name="obj">An <see cref="T:System.Object" /> that represents the parsed element</param>
    </member>
    <member name="P:System.Web.UI.WebControls.TableCell.AssociatedHeaderCellID">
      <summary>Gets or sets a space-separated list of table header cells associated with the <see cref="T:System.Web.UI.WebControls.TableCell" /> control.</summary>
      <returns>An array of strings containing the identifiers of the associated table header cells.</returns>
    </member>
    <member name="P:System.Web.UI.WebControls.TableCell.ColumnSpan">
      <summary>Gets or sets the number of columns in the <see cref="T:System.Web.UI.WebControls.Table" /> control that the cell spans.</summary>
      <returns>The number of columns in the rendered table that the cell spans. The default value is 0, which indicates that this property is not set.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">The selected value is less than 0.</exception>
    </member>
    <member name="M:System.Web.UI.WebControls.TableCell.CreateControlStyle">
      <summary>Creates a <see cref="T:System.Web.UI.WebControls.TableItemStyle" /> for the <see cref="T:System.Web.UI.WebControls.TableCell" /> control.</summary>
      <returns>A <see cref="T:System.Web.UI.WebControls.Style" /> that represents the <see cref="T:System.Web.UI.WebControls.TableItemStyle" /> for the <see cref="T:System.Web.UI.WebControls.TableCell" /> control. </returns>
    </member>
    <member name="P:System.Web.UI.WebControls.TableCell.HorizontalAlign">
      <summary>Gets or sets the horizontal alignment of the contents in the cell.</summary>
      <returns>One of the <see cref="T:System.Web.UI.WebControls.HorizontalAlign" /> enumeration values. The default is NotSet.</returns>
    </member>
    <member name="M:System.Web.UI.WebControls.TableCell.RenderContents(System.Web.UI.HtmlTextWriter)">
      <summary>Renders the <see cref="T:System.Web.UI.WebControls.TableCell" /> contents to the specified <see cref="T:System.Web.UI.HtmlTextWriter" /> object. </summary>
      <param name="writer">The output stream that renders HTML content to the client. </param>
    </member>
    <member name="P:System.Web.UI.WebControls.TableCell.RowSpan">
      <summary>Gets or sets the number of rows in the <see cref="T:System.Web.UI.WebControls.Table" /> control that the cell spans.</summary>
      <returns>The number of rows in the rendered table that the cell spans. The default value is 0, which indicates that this property is not set.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">The selected value is less than 0.</exception>
    </member>
    <member name="P:System.Web.UI.WebControls.TableCell.SupportsDisabledAttribute">
      <summary>Gets a value that indicates whether the control should set the disabled attribute of the rendered HTML element to "disabled" when the control's <see cref="P:System.Web.UI.WebControls.WebControl.IsEnabled" /> property is false.</summary>
      <returns>true if the <see cref="P:System.Web.UI.Control.RenderingCompatibility" /> property indicates an ASP.NET version lower than 4.0; otherwise, false.</returns>
    </member>
    <member name="P:System.Web.UI.WebControls.TableCell.Text">
      <summary>Gets or sets the text contents of the cell.</summary>
      <returns>The text contents of the cell. The default value is <see cref="F:System.String.Empty" />.</returns>
    </member>
    <member name="P:System.Web.UI.WebControls.TableCell.VerticalAlign">
      <summary>Gets or sets the vertical alignment of the contents in the cell.</summary>
      <returns>One of the <see cref="T:System.Web.UI.WebControls.VerticalAlign" /> enumeration values. The default is NotSet.</returns>
    </member>
    <member name="P:System.Web.UI.WebControls.TableCell.Wrap">
      <summary>Gets or sets a value that indicating whether the contents of the cell wrap.</summary>
      <returns>true if the contents of the cell wrap in the cell; otherwise, false. The default is true.</returns>
    </member>
    <member name="T:System.Web.UI.WebControls.TableCellCollection">
      <summary>Encapsulates a collection of <see cref="T:System.Web.UI.WebControls.TableHeaderCell" /> and <see cref="T:System.Web.UI.WebControls.TableCell" /> objects that make up a row in a <see cref="T:System.Web.UI.WebControls.Table" /> control. This class cannot be inherited.</summary>
    </member>
    <member name="M:System.Web.UI.WebControls.TableCellCollection.Add(System.Web.UI.WebControls.TableCell)">
      <summary>Appends the specified <see cref="T:System.Web.UI.WebControls.TableCell" /> to the end of the <see cref="T:System.Web.UI.WebControls.TableCellCollection" />.</summary>
      <returns>The index number of the <see cref="T:System.Web.UI.WebControls.TableCell" />.</returns>
      <param name="cell">The <see cref="T:System.Web.UI.WebControls.TableCell" /> to add to the collection. </param>
    </member>
    <member name="M:System.Web.UI.WebControls.TableCellCollection.AddAt(System.Int32,System.Web.UI.WebControls.TableCell)">
      <summary>Adds the specified <see cref="T:System.Web.UI.WebControls.TableCell" /> to the <see cref="T:System.Web.UI.WebControls.TableCellCollection" /> at the specified index location.</summary>
      <param name="index">The location in the <see cref="T:System.Web.UI.WebControls.TableCellCollection" /> at which to add the <see cref="T:System.Web.UI.WebControls.TableCell" />. </param>
      <param name="cell">The <see cref="T:System.Web.UI.WebControls.TableCell" /> to add to the <see cref="T:System.Web.UI.WebControls.TableCellCollection" />. </param>
    </member>
    <member name="M:System.Web.UI.WebControls.TableCellCollection.AddRange(System.Web.UI.WebControls.TableCell[])">
      <summary>Appends the <see cref="T:System.Web.UI.WebControls.TableCell" /> objects from the specified array to the end of the collection.</summary>
      <param name="cells">The array containing the <see cref="T:System.Web.UI.WebControls.TableCell" /> objects to add to the collection. </param>
      <exception cref="T:System.ArgumentNullException">The value of the <paramref name="cells" /> parameter is null. </exception>
    </member>
    <member name="M:System.Web.UI.WebControls.TableCellCollection.Clear">
      <summary>Removes all <see cref="T:System.Web.UI.WebControls.TableCell" /> objects from the <see cref="T:System.Web.UI.WebControls.TableCellCollection" />.</summary>
    </member>
    <member name="M:System.Web.UI.WebControls.TableCellCollection.CopyTo(System.Array,System.Int32)">
      <summary>Copies the items from the <see cref="T:System.Web.UI.WebControls.TableCellCollection" /> to the specified <see cref="T:System.Array" />, starting with the specified index in the <see cref="T:System.Array" />.</summary>
      <param name="array">A zero-based <see cref="T:System.Array" /> that receives the copied items from the <see cref="T:System.Web.UI.WebControls.TableCellCollection" />. </param>
      <param name="index">The first index in the specified <see cref="T:System.Array" /> to receive the items. </param>
    </member>
    <member name="P:System.Web.UI.WebControls.TableCellCollection.Count">
      <summary>Gets the number of <see cref="T:System.Web.UI.WebControls.TableCell" /> objects in the <see cref="T:System.Web.UI.WebControls.TableCellCollection" />.</summary>
      <returns>The number of <see cref="T:System.Web.UI.WebControls.TableCell" /> objects in the <see cref="T:System.Web.UI.WebControls.TableCellCollection" />. The default is 0.</returns>
    </member>
    <member name="M:System.Web.UI.WebControls.TableCellCollection.GetCellIndex(System.Web.UI.WebControls.TableCell)">
      <summary>Returns a value that represents the index of the specified <see cref="T:System.Web.UI.WebControls.TableCell" /> from the <see cref="T:System.Web.UI.WebControls.TableCellCollection" />.</summary>
      <returns>The index of the specified <see cref="T:System.Web.UI.WebControls.TableCell" /> within the <see cref="T:System.Web.UI.WebControls.TableCellCollection" />. The default is -1, which indicates that a match has not been found.</returns>
      <param name="cell">The <see cref="T:System.Web.UI.WebControls.TableCell" /> to get the index of in the <see cref="T:System.Web.UI.WebControls.TableCellCollection" />. </param>
    </member>
    <member name="M:System.Web.UI.WebControls.TableCellCollection.GetEnumerator">
      <summary>Returns a <see cref="T:System.Collections.IEnumerator" /> implemented object that contains all <see cref="T:System.Web.UI.WebControls.TableCell" /> objects in the <see cref="T:System.Web.UI.WebControls.TableCellCollection" />.</summary>
      <returns>A <see cref="T:System.Collections.IEnumerator" /> implemented object that contains all <see cref="T:System.Web.UI.WebControls.TableCell" /> objects within the <see cref="T:System.Web.UI.WebControls.TableCellCollection" />.</returns>
    </member>
    <member name="P:System.Web.UI.WebControls.TableCellCollection.IsReadOnly">
      <summary>Gets a value indicating whether the <see cref="T:System.Web.UI.WebControls.TableCellCollection" /> is read-only.</summary>
      <returns>false for all cases.</returns>
    </member>
    <member name="P:System.Web.UI.WebControls.TableCellCollection.IsSynchronized">
      <summary>Gets a value indicating whether access to the <see cref="T:System.Web.UI.WebControls.TableCellCollection" /> is synchronized (thread-safe).</summary>
      <returns>false for all cases.</returns>
    </member>
    <member name="P:System.Web.UI.WebControls.TableCellCollection.Item(System.Int32)">
      <summary>Gets a <see cref="T:System.Web.UI.WebControls.TableCell" /> from the <see cref="T:System.Web.UI.WebControls.TableCellCollection" /> at the specified index.</summary>
      <returns>A <see cref="T:System.Web.UI.WebControls.TableCell" /> that represents an element in the <see cref="T:System.Web.UI.WebControls.TableCellCollection" />.</returns>
      <param name="index">An ordinal index value that specifies the <see cref="T:System.Web.UI.WebControls.TableCell" /> to return. </param>
    </member>
    <member name="M:System.Web.UI.WebControls.TableCellCollection.Remove(System.Web.UI.WebControls.TableCell)">
      <summary>Removes the specified <see cref="T:System.Web.UI.WebControls.TableCell" /> from the <see cref="T:System.Web.UI.WebControls.TableCellCollection" />.</summary>
      <param name="cell">The <see cref="T:System.Web.UI.WebControls.TableCell" /> to remove from the <see cref="T:System.Web.UI.WebControls.TableCellCollection" />. </param>
    </member>
    <member name="M:System.Web.UI.WebControls.TableCellCollection.RemoveAt(System.Int32)">
      <summary>Removes a <see cref="T:System.Web.UI.WebControls.TableCell" /> from the <see cref="T:System.Web.UI.WebControls.TableCellCollection" /> at the specified index.</summary>
      <param name="index">The index of the <see cref="T:System.Web.UI.WebControls.TableCell" /> to remove from the <see cref="T:System.Web.UI.WebControls.TableCellCollection" />. </param>
    </member>
    <member name="P:System.Web.UI.WebControls.TableCellCollection.SyncRoot">
      <summary>Gets the object that can be used to synchronize access to the <see cref="T:System.Web.UI.WebControls.TableCellCollection" />.</summary>
      <returns>An object that can be used to synchronize access to the collection.</returns>
    </member>
    <member name="M:System.Web.UI.WebControls.TableCellCollection.System#Collections#IList#Add(System.Object)">
      <summary>Adds an object to the collection.</summary>
      <returns>The index at which the object was added to the collection.</returns>
      <param name="o">The object to add to the collection.</param>
    </member>
    <member name="M:System.Web.UI.WebControls.TableCellCollection.System#Collections#IList#Contains(System.Object)">
      <summary>Determines whether the specified object is contained within the collection.</summary>
      <returns>true if the object is in the collection; otherwise, false.</returns>
      <param name="o">The object to locate within the collection.</param>
    </member>
    <member name="M:System.Web.UI.WebControls.TableCellCollection.System#Collections#IList#IndexOf(System.Object)">
      <summary>Searches for the specified object and returns the zero-based index of the first occurrence within the collection.</summary>
      <returns>The zero-based index of the first occurrence of the object within the collection; otherwise, -1 if the object is not in the collection.</returns>
      <param name="o">The object to locate within the collection.</param>
    </member>
    <member name="M:System.Web.UI.WebControls.TableCellCollection.System#Collections#IList#Insert(System.Int32,System.Object)">
      <summary>Inserts an object into the collection at the specified index.</summary>
      <param name="index">The zero-based index within the collection at which to insert the object.</param>
      <param name="o">The object to insert into the collection.</param>
    </member>
    <member name="P:System.Web.UI.WebControls.TableCellCollection.System#Collections#IList#IsFixedSize">
      <summary>For a description of this member, see <see cref="P:System.Collections.IList.IsFixedSize" />.</summary>
      <returns>true if the list has a fixed size; otherwise, false</returns>
    </member>
    <member name="P:System.Web.UI.WebControls.TableCellCollection.System#Collections#IList#Item(System.Int32)">
      <summary>For a description of this member, see <see cref="P:System.Collections.IList.Item(System.Int32)" />.</summary>
      <returns>The element at the specified index.</returns>
      <param name="index">The zero-based index of the element to get or set. </param>
    </member>
    <member name="M:System.Web.UI.WebControls.TableCellCollection.System#Collections#IList#Remove(System.Object)">
      <summary>Removes an object from the collection.</summary>
      <param name="o">The object to remove from the collection.</param>
    </member>
    <member name="T:System.Web.UI.WebControls.TableCellControlBuilder">
      <summary>Interacts with the parser to build a <see cref="T:System.Web.UI.WebControls.TableCell" /> control.</summary>
    </member>
    <member name="M:System.Web.UI.WebControls.TableCellControlBuilder.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Web.UI.WebControls.TableCellControlBuilder" /> class. </summary>
    </member>
    <member name="M:System.Web.UI.WebControls.TableCellControlBuilder.AllowWhitespaceLiterals">
      <summary>Specifies whether white space literals are allowed.</summary>
      <returns>false.</returns>
    </member>
    <member name="T:System.Web.UI.WebControls.TableFooterRow">
      <summary>Represents a footer row in a <see cref="T:System.Web.UI.WebControls.Table" /> control.</summary>
    </member>
    <member name="M:System.Web.UI.WebControls.TableFooterRow.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Web.UI.WebControls.TableFooterRow" /> class. </summary>
    </member>
    <member name="T:System.Web.UI.WebControls.TableHeaderCell">
      <summary>Represents a heading cell within a <see cref="T:System.Web.UI.WebControls.Table" /> control.</summary>
    </member>
    <member name="M:System.Web.UI.WebControls.TableHeaderCell.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Web.UI.WebControls.TableHeaderCell" /> class.</summary>
    </member>
    <member name="P:System.Web.UI.WebControls.TableHeaderCell.AbbreviatedText">
      <summary>Gets or sets the abbr attribute of the HTML th element for the <see cref="T:System.Web.UI.WebControls.TableHeaderCell" /> control.</summary>
      <returns>A string representing the abbreviated text. The default is an empty string ("").</returns>
    </member>
    <member name="M:System.Web.UI.WebControls.TableHeaderCell.AddAttributesToRender(System.Web.UI.HtmlTextWriter)">
      <summary>Applies attributes to render to the <see cref="T:System.Web.UI.WebControls.TableHeaderCell" /> control.</summary>
      <param name="writer">An <see cref="T:System.Web.UI.HtmlTextWriter" /> that receives the rendered content.</param>
    </member>
    <member name="P:System.Web.UI.WebControls.TableHeaderCell.CategoryText">
      <summary>Gets or sets the axis attribute of the HTML th element for the <see cref="T:System.Web.UI.WebControls.TableHeaderCell" /> control.</summary>
      <returns>An array of string values representing the <see cref="T:System.Web.UI.WebControls.TableHeaderCell" /> categories. </returns>
    </member>
    <member name="P:System.Web.UI.WebControls.TableHeaderCell.Scope">
      <summary>Gets or sets the scope of the <see cref="T:System.Web.UI.WebControls.TableHeaderCell" /> control when it is rendered.</summary>
      <returns>A <see cref="T:System.Web.UI.WebControls.TableHeaderScope" /> value. The default is <see cref="F:System.Web.UI.WebControls.TableHeaderScope.NotSet" />. </returns>
    </member>
    <member name="T:System.Web.UI.WebControls.TableHeaderRow">
      <summary>Represents a heading row in a <see cref="T:System.Web.UI.WebControls.Table" /> control.</summary>
    </member>
    <member name="M:System.Web.UI.WebControls.TableHeaderRow.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Web.UI.WebControls.TableHeaderRow" /> class. </summary>
    </member>
    <member name="T:System.Web.UI.WebControls.TableHeaderScope">
      <summary>Represents the HTML scope attribute for classes that represent header cells in a table. </summary>
    </member>
    <member name="F:System.Web.UI.WebControls.TableHeaderScope.NotSet">
      <summary>The scope attribute is not rendered for the header cell.</summary>
    </member>
    <member name="F:System.Web.UI.WebControls.TableHeaderScope.Row">
      <summary>The object that represents a header cell of a table is rendered with the scope attribute set to "Row".</summary>
    </member>
    <member name="F:System.Web.UI.WebControls.TableHeaderScope.Column">
      <summary>The object that represents a header cell of a table is rendered with the scope attribute set to "Column".</summary>
    </member>
    <member name="T:System.Web.UI.WebControls.TableItemStyle">
      <summary>Represents the style properties for an element of a control that renders as a <see cref="T:System.Web.UI.WebControls.TableRow" /> or <see cref="T:System.Web.UI.WebControls.TableCell" />.</summary>
    </member>
    <member name="M:System.Web.UI.WebControls.TableItemStyle.#ctor">
      <summary>Creates a new instance of the <see cref="T:System.Web.UI.WebControls.TableItemStyle" /> class using default values.</summary>
    </member>
    <member name="M:System.Web.UI.WebControls.TableItemStyle.#ctor(System.Web.UI.StateBag)">
      <summary>Creates a new instance of the <see cref="T:System.Web.UI.WebControls.TableItemStyle" /> class with the specified state bag.</summary>
      <param name="bag">A <see cref="T:System.Web.UI.StateBag" /> that represents the state bag in which to store style information. </param>
    </member>
    <member name="M:System.Web.UI.WebControls.TableItemStyle.AddAttributesToRender(System.Web.UI.HtmlTextWriter,System.Web.UI.WebControls.WebControl)">
      <summary>Adds information about horizontal alignment, vertical alignment, and wrap to the list of attributes to render.</summary>
      <param name="writer">The output stream that renders HTML content to the client. </param>
      <param name="owner">The control that the style refers to. </param>
    </member>
    <member name="M:System.Web.UI.WebControls.TableItemStyle.CopyFrom(System.Web.UI.WebControls.Style)">
      <summary>Duplicates the non-empty style properties of the specified <see cref="T:System.Web.UI.WebControls.Style" /> into the instance of the <see cref="T:System.Web.UI.WebControls.TableItemStyle" /> class that this method is called from.</summary>
      <param name="s">A <see cref="T:System.Web.UI.WebControls.Style" /> that represents the style to copy. </param>
    </member>
    <member name="P:System.Web.UI.WebControls.TableItemStyle.HorizontalAlign">
      <summary>Gets or sets the horizontal alignment of the contents in a cell.</summary>
      <returns>One of the <see cref="T:System.Web.UI.WebControls.HorizontalAlign" /> enumeration values. The default is NotSet.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">The specified horizontal alignment is not one of the <see cref="T:System.Web.UI.WebControls.HorizontalAlign" /> enumeration values. </exception>
    </member>
    <member name="M:System.Web.UI.WebControls.TableItemStyle.MergeWith(System.Web.UI.WebControls.Style)">
      <summary>Combines the style properties of the specified <see cref="T:System.Web.UI.WebControls.Style" /> into the instance of the <see cref="T:System.Web.UI.WebControls.TableItemStyle" /> class that this method is called from.</summary>
      <param name="s">A <see cref="T:System.Web.UI.WebControls.Style" /> that represents the style to combine. </param>
    </member>
    <member name="M:System.Web.UI.WebControls.TableItemStyle.Reset">
      <summary>Removes any defined style elements from the style.</summary>
    </member>
    <member name="P:System.Web.UI.WebControls.TableItemStyle.VerticalAlign">
      <summary>Gets or sets the vertical alignment of the contents in a cell.</summary>
      <returns>One of the <see cref="T:System.Web.UI.WebControls.VerticalAlign" /> enumeration values. The default is NotSet.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">The specified vertical alignment was not one of the <see cref="T:System.Web.UI.WebControls.VerticalAlign" /> enumeration values. </exception>
    </member>
    <member name="P:System.Web.UI.WebControls.TableItemStyle.Wrap">
      <summary>Gets or sets a value indicating whether the contents of a cell wrap in the cell.</summary>
      <returns>true if the contents of the cell wrap in the cell; otherwise, false. The default is true.</returns>
    </member>
    <member name="T:System.Web.UI.WebControls.TableRow">
      <summary>Represents a row in a <see cref="T:System.Web.UI.WebControls.Table" /> control.</summary>
    </member>
    <member name="M:System.Web.UI.WebControls.TableRow.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Web.UI.WebControls.TableRow" /> class.</summary>
    </member>
    <member name="P:System.Web.UI.WebControls.TableRow.Cells">
      <summary>Gets a collection of <see cref="T:System.Web.UI.WebControls.TableCell" /> objects that represent the cells of a row in a <see cref="T:System.Web.UI.WebControls.Table" /> control.</summary>
      <returns>A <see cref="T:System.Web.UI.WebControls.TableCellCollection" /> object that represents a collection of cells from a row of a <see cref="T:System.Web.UI.WebControls.Table" /> control.</returns>
    </member>
    <member name="M:System.Web.UI.WebControls.TableRow.CreateControlCollection">
      <summary>Creates a new <see cref="T:System.Web.UI.ControlCollection" /> object for the <see cref="T:System.Web.UI.WebControls.TableRow" /> control. </summary>
      <returns>A <see cref="T:System.Web.UI.ControlCollection" /> object that contains the <see cref="T:System.Web.UI.WebControls.TableRow" /> control's child server controls.</returns>
    </member>
    <member name="M:System.Web.UI.WebControls.TableRow.CreateControlStyle">
      <summary>Creates a <see cref="T:System.Web.UI.WebControls.TableItemStyle" /> object for the <see cref="T:System.Web.UI.WebControls.TableRow" /> control.</summary>
      <returns>A <see cref="T:System.Web.UI.WebControls.Style" /> object that specifies the style properties for the <see cref="T:System.Web.UI.WebControls.TableRow" /> control.The <see cref="M:System.Web.UI.WebControls.TableRow.CreateControlCollection" /> method is primarily of interest to control developers extending the functionality of the <see cref="T:System.Web.UI.WebControls.TableRow" /> control.</returns>
    </member>
    <member name="P:System.Web.UI.WebControls.TableRow.HorizontalAlign">
      <summary>Gets or sets the horizontal alignment of the contents in the row.</summary>
      <returns>One of the <see cref="T:System.Web.UI.WebControls.HorizontalAlign" /> values. The default value is NotSet.</returns>
    </member>
    <member name="P:System.Web.UI.WebControls.TableRow.SupportsDisabledAttribute">
      <summary>Gets a value that indicates whether the control should set the disabled attribute of the rendered HTML element to "disabled" when the control's <see cref="P:System.Web.UI.WebControls.WebControl.IsEnabled" /> property is false.</summary>
      <returns>true if the <see cref="P:System.Web.UI.Control.RenderingCompatibility" /> property indicates an ASP.NET version lower than 4.0; otherwise, false.</returns>
    </member>
    <member name="P:System.Web.UI.WebControls.TableRow.TableSection">
      <summary>Gets or sets the location for a <see cref="T:System.Web.UI.WebControls.TableRow" /> object in a <see cref="T:System.Web.UI.WebControls.Table" /> control.</summary>
      <returns>A <see cref="T:System.Web.UI.WebControls.TableRowSection" /> value. The default is <see cref="F:System.Web.UI.WebControls.TableRowSection.TableBody" />.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">The <see cref="T:System.Web.UI.WebControls.TableRowSection" /> is not valid.</exception>
    </member>
    <member name="P:System.Web.UI.WebControls.TableRow.VerticalAlign">
      <summary>Gets or sets the vertical alignment of the contents in the row.</summary>
      <returns>One of the <see cref="T:System.Web.UI.WebControls.VerticalAlign" /> values. The default value is NotSet.</returns>
    </member>
    <member name="T:System.Web.UI.WebControls.TableRow.CellControlCollection">
      <summary>Represents a collection of <see cref="T:System.Web.UI.WebControls.TableCell" /> objects that are the cells of a <see cref="T:System.Web.UI.WebControls.TableRow" /> control. </summary>
    </member>
    <member name="M:System.Web.UI.WebControls.TableRow.CellControlCollection.Add(System.Web.UI.Control)">
      <summary>Adds the specified <see cref="T:System.Web.UI.Control" /> object to the <see cref="T:System.Web.UI.WebControls.TableRow.CellControlCollection" /> collection.</summary>
      <param name="child">The <see cref="T:System.Web.UI.Control" /> to add to the <see cref="T:System.Web.UI.WebControls.TableRow.CellControlCollection" />. </param>
      <exception cref="T:System.ArgumentException">The added <see cref="T:System.Web.UI.Control" /> must be of the type <see cref="T:System.Web.UI.WebControls.TableCell" />. </exception>
    </member>
    <member name="M:System.Web.UI.WebControls.TableRow.CellControlCollection.AddAt(System.Int32,System.Web.UI.Control)">
      <summary>Adds the specified <see cref="T:System.Web.UI.Control" /> object to the <see cref="T:System.Web.UI.WebControls.TableRow.CellControlCollection" /> collection. The new control is added to the array at the specified index location.</summary>
      <param name="index">The location in the array to add the child control. </param>
      <param name="child">The <see cref="T:System.Web.UI.Control" /> to add to the <see cref="T:System.Web.UI.WebControls.TableRow.CellControlCollection" />. </param>
      <exception cref="T:System.ArgumentException">The added <see cref="T:System.Web.UI.Control" /> must be of the type <see cref="T:System.Web.UI.WebControls.TableCell" />.</exception>
    </member>
    <member name="T:System.Web.UI.WebControls.TableRowCollection">
      <summary>Encapsulates a collection of <see cref="T:System.Web.UI.WebControls.TableRow" /> objects that represent a single row in a <see cref="T:System.Web.UI.WebControls.Table" /> control. This class cannot be inherited.</summary>
    </member>
    <member name="M:System.Web.UI.WebControls.TableRowCollection.Add(System.Web.UI.WebControls.TableRow)">
      <summary>Appends the specified <see cref="T:System.Web.UI.WebControls.TableRow" /> object to the end of the <see cref="T:System.Web.UI.WebControls.TableRowCollection" />.</summary>
      <returns>The index of the <see cref="T:System.Web.UI.WebControls.TableRow" />.</returns>
      <param name="row">The <see cref="T:System.Web.UI.WebControls.TableRow" /> object to add to the <see cref="T:System.Web.UI.WebControls.TableRowCollection" />. </param>
    </member>
    <member name="M:System.Web.UI.WebControls.TableRowCollection.AddAt(System.Int32,System.Web.UI.WebControls.TableRow)">
      <summary>Adds the specified <see cref="T:System.Web.UI.WebControls.TableRow" /> object to the <see cref="T:System.Web.UI.WebControls.TableRowCollection" /> at the specified index location.</summary>
      <param name="index">The location in the <see cref="T:System.Web.UI.WebControls.TableRowCollection" /> at which to add the <see cref="T:System.Web.UI.WebControls.TableRow" />. </param>
      <param name="row">The <see cref="T:System.Web.UI.WebControls.TableRow" /> object to add to the <see cref="T:System.Web.UI.WebControls.TableRowCollection" />. </param>
    </member>
    <member name="M:System.Web.UI.WebControls.TableRowCollection.AddRange(System.Web.UI.WebControls.TableRow[])">
      <summary>Appends the <see cref="T:System.Web.UI.WebControls.TableRow" /> objects from the specified array to the end of the collection.</summary>
      <param name="rows">The array containing the <see cref="T:System.Web.UI.WebControls.TableRow" /> objects to add to the collection. </param>
      <exception cref="T:System.ArgumentNullException">The value of the <paramref name="rows" /> parameter is null. </exception>
    </member>
    <member name="M:System.Web.UI.WebControls.TableRowCollection.Clear">
      <summary>Removes all <see cref="T:System.Web.UI.WebControls.TableRow" /> controls from the <see cref="T:System.Web.UI.WebControls.TableRowCollection" />.</summary>
    </member>
    <member name="M:System.Web.UI.WebControls.TableRowCollection.CopyTo(System.Array,System.Int32)">
      <summary>Copies the items from the <see cref="T:System.Web.UI.WebControls.TableRowCollection" /> to the specified <see cref="T:System.Array" />, starting with the specified index in the <see cref="T:System.Array" />.</summary>
      <param name="array">A zero-based <see cref="T:System.Array" /> that receives the copied items from the <see cref="T:System.Web.UI.WebControls.TableRowCollection" />. </param>
      <param name="index">The first position in the specified <see cref="T:System.Array" /> to receive copied contents. </param>
    </member>
    <member name="P:System.Web.UI.WebControls.TableRowCollection.Count">
      <summary>Gets the number of <see cref="T:System.Web.UI.WebControls.TableRow" /> objects in the <see cref="T:System.Web.UI.WebControls.TableRowCollection" />.</summary>
      <returns>The number of <see cref="T:System.Web.UI.WebControls.TableRow" /> objects in the <see cref="T:System.Web.UI.WebControls.TableRowCollection" />. The default is 0.</returns>
    </member>
    <member name="M:System.Web.UI.WebControls.TableRowCollection.GetEnumerator">
      <summary>Returns a <see cref="T:System.Collections.IEnumerator" /> implemented object that contains all <see cref="T:System.Web.UI.WebControls.TableRow" /> objects within the <see cref="T:System.Web.UI.WebControls.TableRowCollection" />.</summary>
      <returns>A <see cref="T:System.Collections.IEnumerator" /> implemented object that contains all <see cref="T:System.Web.UI.WebControls.TableRow" /> objects within the <see cref="T:System.Web.UI.WebControls.TableRowCollection" />.</returns>
    </member>
    <member name="M:System.Web.UI.WebControls.TableRowCollection.GetRowIndex(System.Web.UI.WebControls.TableRow)">
      <summary>Returns a value that represents the index of the specified <see cref="T:System.Web.UI.WebControls.TableRow" /> from the <see cref="T:System.Web.UI.WebControls.TableRowCollection" />.</summary>
      <returns>The ordinal index position of the specified <see cref="T:System.Web.UI.WebControls.TableRow" /> within the collection. The default is -1, which indicates that the specified <see cref="T:System.Web.UI.WebControls.TableRow" /> has not been found.</returns>
      <param name="row">The <see cref="T:System.Web.UI.WebControls.TableRow" /> object to search for in the <see cref="T:System.Web.UI.WebControls.TableRowCollection" />. </param>
    </member>
    <member name="P:System.Web.UI.WebControls.TableRowCollection.IsReadOnly">
      <summary>Gets a value indicating whether the <see cref="T:System.Web.UI.WebControls.TableRowCollection" /> is read-only.</summary>
      <returns>false for all cases.</returns>
    </member>
    <member name="P:System.Web.UI.WebControls.TableRowCollection.IsSynchronized">
      <summary>Gets a value indicating whether access to the <see cref="T:System.Web.UI.WebControls.TableRowCollection" /> is synchronized (thread-safe).</summary>
      <returns>false for all cases.</returns>
    </member>
    <member name="P:System.Web.UI.WebControls.TableRowCollection.Item(System.Int32)">
      <summary>Gets a <see cref="T:System.Web.UI.WebControls.TableRow" /> from the <see cref="T:System.Web.UI.WebControls.TableRowCollection" /> at the specified index.</summary>
      <returns>A <see cref="T:System.Web.UI.WebControls.TableRow" /> that represents an element in the <see cref="T:System.Web.UI.WebControls.TableRowCollection" />.</returns>
      <param name="index">An ordinal index value that specifies which <see cref="T:System.Web.UI.WebControls.TableRow" /> object to return. This index is zero-based.</param>
    </member>
    <member name="M:System.Web.UI.WebControls.TableRowCollection.Remove(System.Web.UI.WebControls.TableRow)">
      <summary>Removes the specified <see cref="T:System.Web.UI.WebControls.TableRow" /> from the <see cref="T:System.Web.UI.WebControls.TableRowCollection" />.</summary>
      <param name="row">The <see cref="T:System.Web.UI.WebControls.TableRow" /> object to remove from the <see cref="T:System.Web.UI.WebControls.TableRowCollection" />. </param>
    </member>
    <member name="M:System.Web.UI.WebControls.TableRowCollection.RemoveAt(System.Int32)">
      <summary>Removes a <see cref="T:System.Web.UI.WebControls.TableRow" /> from the <see cref="T:System.Web.UI.WebControls.TableRowCollection" /> at the specified index.</summary>
      <param name="index">The index of the <see cref="T:System.Web.UI.WebControls.TableRow" /> object to remove from the <see cref="T:System.Web.UI.WebControls.TableRowCollection" />. </param>
    </member>
    <member name="P:System.Web.UI.WebControls.TableRowCollection.SyncRoot">
      <summary>Gets the object that can be used to synchronize access to the <see cref="T:System.Web.UI.WebControls.TableRowCollection" />.</summary>
      <returns>An object that can be used to synchronize access to the collection.</returns>
    </member>
    <member name="M:System.Web.UI.WebControls.TableRowCollection.System#Collections#IList#Add(System.Object)">
      <summary>Adds an object to the collection.</summary>
      <returns>The index at which the object was added to the collection.</returns>
      <param name="o">The object to add to the collection.</param>
    </member>
    <member name="M:System.Web.UI.WebControls.TableRowCollection.System#Collections#IList#Contains(System.Object)">
      <summary>Determines whether the specified object is contained within the collection.</summary>
      <returns>true if the object is in the collection; otherwise, false.</returns>
      <param name="o">The object to locate within the collection.</param>
    </member>
    <member name="M:System.Web.UI.WebControls.TableRowCollection.System#Collections#IList#IndexOf(System.Object)">
      <summary>Searches for the specified object and returns the zero-based index of the first occurrence within the collection.</summary>
      <returns>The zero-based index of the first occurrence of the object within the collection; otherwise, -1 if the object is not in the collection.</returns>
      <param name="o">The object to locate within the collection.</param>
    </member>
    <member name="M:System.Web.UI.WebControls.TableRowCollection.System#Collections#IList#Insert(System.Int32,System.Object)">
      <summary>Inserts an object into the collection at the specified index.</summary>
      <param name="index">The zero-based index within the collection at which to insert the object.</param>
      <param name="o">The object to insert into the collection.</param>
    </member>
    <member name="P:System.Web.UI.WebControls.TableRowCollection.System#Collections#IList#IsFixedSize">
      <summary>For a description of this member, see <see cref="P:System.Collections.IList.IsFixedSize" />.</summary>
      <returns>true if the list has a fixed size; otherwise, false</returns>
    </member>
    <member name="P:System.Web.UI.WebControls.TableRowCollection.System#Collections#IList#Item(System.Int32)">
      <summary>For a description of this member, see <see cref="P:System.Collections.IList.Item(System.Int32)" />.</summary>
      <returns>The element at the specified index.</returns>
      <param name="index">The zero-based index of the element to get or set. </param>
    </member>
    <member name="M:System.Web.UI.WebControls.TableRowCollection.System#Collections#IList#Remove(System.Object)">
      <summary>Removes an object from the collection.</summary>
      <param name="o">The object to remove from the collection.</param>
    </member>
    <member name="T:System.Web.UI.WebControls.TableRowSection">
      <summary>Specifies where a <see cref="T:System.Web.UI.WebControls.TableRow" /> object is placed in a <see cref="T:System.Web.UI.WebControls.Table" /> control.</summary>
    </member>
    <member name="F:System.Web.UI.WebControls.TableRowSection.TableHeader">
      <summary>The <see cref="T:System.Web.UI.WebControls.TableRow" /> is placed in the header of the <see cref="T:System.Web.UI.WebControls.Table" />.</summary>
    </member>
    <member name="F:System.Web.UI.WebControls.TableRowSection.TableBody">
      <summary>The <see cref="T:System.Web.UI.WebControls.TableRow" /> is placed in the body of the <see cref="T:System.Web.UI.WebControls.Table" />.</summary>
    </member>
    <member name="F:System.Web.UI.WebControls.TableRowSection.TableFooter">
      <summary>The <see cref="T:System.Web.UI.WebControls.TableRow" /> is placed in the footer of the <see cref="T:System.Web.UI.WebControls.Table" />.</summary>
    </member>
    <member name="T:System.Web.UI.WebControls.TableSectionStyle">
      <summary>Represents the style for a section of a <see cref="T:System.Web.UI.WebControls.Table" /> control.</summary>
    </member>
    <member name="M:System.Web.UI.WebControls.TableSectionStyle.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Web.UI.WebControls.TableSectionStyle" /> class. </summary>
    </member>
    <member name="P:System.Web.UI.WebControls.TableSectionStyle.Visible">
      <summary>Gets or sets a value indicating whether the table section is displayed.</summary>
      <returns>true if the table section is displayed; otherwise, false. The default is true.</returns>
    </member>
    <member name="T:System.Web.UI.WebControls.TableStyle">
      <summary>Represents the style for the <see cref="T:System.Web.UI.WebControls.Table" /> control and some Web Parts.</summary>
    </member>
    <member name="M:System.Web.UI.WebControls.TableStyle.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Web.UI.WebControls.TableStyle" /> class using default values.</summary>
    </member>
    <member name="M:System.Web.UI.WebControls.TableStyle.#ctor(System.Web.UI.StateBag)">
      <summary>Initializes a new instance of the <see cref="T:System.Web.UI.WebControls.TableStyle" /> class with the specified state bag information.</summary>
      <param name="bag">A <see cref="T:System.Web.UI.StateBag" /> that represents the state bag in which to store style information. </param>
    </member>
    <member name="M:System.Web.UI.WebControls.TableStyle.AddAttributesToRender(System.Web.UI.HtmlTextWriter,System.Web.UI.WebControls.WebControl)">
      <summary>Adds information about the background image, cell spacing, cell padding, gridlines, and alignment to the list of attributes to render.</summary>
      <param name="writer">The output stream that renders HTML content to the client. </param>
      <param name="owner">The control associated with the style. </param>
    </member>
    <member name="P:System.Web.UI.WebControls.TableStyle.BackImageUrl">
      <summary>Gets or sets the URL of an image to display in the background of a table control.</summary>
      <returns>The URL of an image to display in the background of a table control. The default is <see cref="F:System.String.Empty" />.</returns>
      <exception cref="T:System.ArgumentNullException">The URL of the background image was set to null. </exception>
    </member>
    <member name="P:System.Web.UI.WebControls.TableStyle.CellPadding">
      <summary>Gets or sets the amount of space between the contents of the cell and the cell's border.</summary>
      <returns>The distance (in pixels) between the contents of a cell and the cell's border. The default is -1, which indicates that this property is not set.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">The specified distance is set to a value less than -1. </exception>
    </member>
    <member name="P:System.Web.UI.WebControls.TableStyle.CellSpacing">
      <summary>Gets or sets the distance between table cells.</summary>
      <returns>The distance (in pixels) between table cells. The default is -1, which indicates that this property is not set.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">The specified distance is set to a value less than -1. </exception>
    </member>
    <member name="M:System.Web.UI.WebControls.TableStyle.CopyFrom(System.Web.UI.WebControls.Style)">
      <summary>Copies non-blank elements from the specified style, overwriting existing style elements if necessary.</summary>
      <param name="s">The style to copy. </param>
    </member>
    <member name="M:System.Web.UI.WebControls.TableStyle.FillStyleAttributes(System.Web.UI.CssStyleCollection,System.Web.UI.IUrlResolutionService)">
      <summary>Adds the style properties of the <see cref="T:System.Web.UI.WebControls.TableStyle" /> object to the specified <see cref="T:System.Web.UI.CssStyleCollection" /> collection.</summary>
      <param name="attributes">The <see cref="T:System.Web.UI.CssStyleCollection" /> to which to add the style properties. </param>
      <param name="urlResolver">An object implemented by the <see cref="T:System.Web.UI.IUrlResolutionService" /> that contains the context information for the current location (URL). </param>
    </member>
    <member name="P:System.Web.UI.WebControls.TableStyle.GridLines">
      <summary>Gets or sets a value that specifies whether the border between the cells of the table control is displayed.</summary>
      <returns>One of the <see cref="T:System.Web.UI.WebControls.GridLines" /> enumeration values. The default is Both.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">The specified value is not one of the <see cref="T:System.Web.UI.WebControls.GridLines" /> enumeration values. </exception>
    </member>
    <member name="P:System.Web.UI.WebControls.TableStyle.HorizontalAlign">
      <summary>Gets or sets the horizontal alignment of the table within its container.</summary>
      <returns>One of the <see cref="T:System.Web.UI.WebControls.HorizontalAlign" /> enumeration values. The default is NotSet.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">The specified horizontal alignment is not one of the <see cref="T:System.Web.UI.WebControls.HorizontalAlign" /> enumeration values. </exception>
    </member>
    <member name="M:System.Web.UI.WebControls.TableStyle.MergeWith(System.Web.UI.WebControls.Style)">
      <summary>Copies non-blank elements from the specified style, but will not overwrite any existing style elements.</summary>
      <param name="s">The style to copy. </param>
    </member>
    <member name="M:System.Web.UI.WebControls.TableStyle.Reset">
      <summary>Clears any defined style elements of the style.</summary>
    </member>
    <member name="T:System.Web.UI.WebControls.TargetConverter">
      <summary>Converts a value that represents the location (target) in which to display the content resulting from a Web navigation to a string. This class also converts a string to a target value.</summary>
    </member>
    <member name="M:System.Web.UI.WebControls.TargetConverter.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Web.UI.WebControls.TargetConverter" /> class. </summary>
    </member>
    <member name="M:System.Web.UI.WebControls.TargetConverter.GetStandardValues(System.ComponentModel.ITypeDescriptorContext)">
      <summary>Returns a collection of standard values from the default context for the data type this type converter is designed for.</summary>
      <returns>A <see cref="T:System.ComponentModel.TypeConverter.StandardValuesCollection" /> containing a standard set of valid values, or null if the data type does not support a standard set of values.</returns>
      <param name="context">An <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> that provides a format context.</param>
    </member>
    <member name="M:System.Web.UI.WebControls.TargetConverter.GetStandardValuesExclusive(System.ComponentModel.ITypeDescriptorContext)">
      <summary>Returns a value that indicates whether the collection of standard values returned from the <see cref="M:System.Web.UI.WebControls.TargetConverter.GetStandardValues(System.ComponentModel.ITypeDescriptorContext)" /> method is an exclusive list.</summary>
      <returns>true if the <see cref="T:System.ComponentModel.TypeConverter.StandardValuesCollection" /> returned from <see cref="M:System.Web.UI.WebControls.TargetConverter.GetStandardValues(System.ComponentModel.ITypeDescriptorContext)" /> is an exhaustive list of possible values; false if other values are possible.</returns>
      <param name="context">An <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> that provides a format context.</param>
    </member>
    <member name="M:System.Web.UI.WebControls.TargetConverter.GetStandardValuesSupported(System.ComponentModel.ITypeDescriptorContext)">
      <summary>Returns a value that indicates whether this object supports a standard set of values that can be picked from a list, using the specified context.</summary>
      <returns>true if <see cref="M:System.Web.UI.WebControls.TargetConverter.GetStandardValues(System.ComponentModel.ITypeDescriptorContext)" /> should be called to find a common set of values the object supports; otherwise, false.</returns>
      <param name="context">An <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> that provides a format context.</param>
    </member>
    <member name="T:System.Web.UI.WebControls.TemplateColumn">
      <summary>Represents a column type for the <see cref="T:System.Web.UI.WebControls.DataGrid" /> control that allows you to customize the layout of controls in the column.</summary>
    </member>
    <member name="M:System.Web.UI.WebControls.TemplateColumn.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Web.UI.WebControls.TemplateColumn" /> class.</summary>
    </member>
    <member name="P:System.Web.UI.WebControls.TemplateColumn.EditItemTemplate">
      <summary>Gets or sets the template for displaying the item selected for editing in a <see cref="T:System.Web.UI.WebControls.TemplateColumn" /> object.</summary>
      <returns>A <see cref="T:System.Web.UI.ITemplate" />-implemented object that contains the template for displaying the item being edited in the <see cref="T:System.Web.UI.WebControls.TemplateColumn" />. The default value is null, which indicates that this property is not set.</returns>
    </member>
    <member name="P:System.Web.UI.WebControls.TemplateColumn.FooterTemplate">
      <summary>Gets or sets the template for displaying the footer section of the <see cref="T:System.Web.UI.WebControls.TemplateColumn" /> object.</summary>
      <returns>A <see cref="T:System.Web.UI.ITemplate" />-implemented object that contains the template for displaying the footer section of the <see cref="T:System.Web.UI.WebControls.TemplateColumn" />. The default value is null, which indicates that this property is not set.</returns>
    </member>
    <member name="P:System.Web.UI.WebControls.TemplateColumn.HeaderTemplate">
      <summary>Gets or sets the template for displaying the heading section of the <see cref="T:System.Web.UI.WebControls.TemplateColumn" /> object.</summary>
      <returns>A <see cref="T:System.Web.UI.ITemplate" />-implemented object that contains the template for displaying the heading section of the <see cref="T:System.Web.UI.WebControls.TemplateColumn" />. The default value is null, which indicates that this property is not set.</returns>
    </member>
    <member name="M:System.Web.UI.WebControls.TemplateColumn.InitializeCell(System.Web.UI.WebControls.TableCell,System.Int32,System.Web.UI.WebControls.ListItemType)">
      <summary>Calls a <see cref="T:System.Web.UI.WebControls.TableCell" /> object's base class to initialize the instance and then applies a <see cref="T:System.Web.UI.WebControls.ListItemType" /> to the cell.</summary>
      <param name="cell">A <see cref="T:System.Web.UI.WebControls.TableCell" /> object that represents the cell to reset.</param>
      <param name="columnIndex">The column number where the cell is located.</param>
      <param name="itemType">One of the <see cref="T:System.Web.UI.WebControls.ListItemType" /> values. </param>
    </member>
    <member name="P:System.Web.UI.WebControls.TemplateColumn.ItemTemplate">
      <summary>Gets or sets the template for displaying a data item in a <see cref="T:System.Web.UI.WebControls.TemplateColumn" /> object.</summary>
      <returns>A <see cref="T:System.Web.UI.ITemplate" />-implemented object that contains the template for displaying a data item in the <see cref="T:System.Web.UI.WebControls.TemplateColumn" />. The default value is null, which indicates that this property is not set.</returns>
    </member>
    <member name="T:System.Web.UI.WebControls.TemplatedWizardStep">
      <summary>Represents a step in a wizard control that can be customized through the use of templates.</summary>
    </member>
    <member name="M:System.Web.UI.WebControls.TemplatedWizardStep.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Web.UI.WebControls.TemplatedWizardStep" /> class. </summary>
    </member>
    <member name="P:System.Web.UI.WebControls.TemplatedWizardStep.ContentTemplate">
      <summary>Gets or sets the template for displaying the content of a step in a <see cref="T:System.Web.UI.WebControls.Wizard" /> control.</summary>
      <returns>An <see cref="T:System.Web.UI.ITemplate" /> object that contains the template for displaying the content of a step in a <see cref="T:System.Web.UI.WebControls.Wizard" /> control.</returns>
    </member>
    <member name="P:System.Web.UI.WebControls.TemplatedWizardStep.ContentTemplateContainer">
      <summary>Gets the container that a <see cref="T:System.Web.UI.WebControls.Wizard" /> control uses to create a <see cref="P:System.Web.UI.WebControls.TemplatedWizardStep.ContentTemplate" /> template for a step.</summary>
      <returns>A <see cref="T:System.Web.UI.Control" /> that contains the <see cref="P:System.Web.UI.WebControls.TemplatedWizardStep.ContentTemplate" /> template for a step.</returns>
    </member>
    <member name="P:System.Web.UI.WebControls.TemplatedWizardStep.CustomNavigationTemplate">
      <summary>Gets or sets the template for displaying the navigation user interface (UI) of a step in a <see cref="T:System.Web.UI.WebControls.Wizard" /> control.</summary>
      <returns>An <see cref="T:System.Web.UI.ITemplate" /> object that contains the template for displaying the navigation UI of a step in a <see cref="T:System.Web.UI.WebControls.Wizard" /> control.</returns>
    </member>
    <member name="P:System.Web.UI.WebControls.TemplatedWizardStep.CustomNavigationTemplateContainer">
      <summary>Gets the container that a <see cref="T:System.Web.UI.WebControls.Wizard" /> control uses to create a <see cref="P:System.Web.UI.WebControls.TemplatedWizardStep.CustomNavigationTemplate" /> template for a step.</summary>
      <returns>A <see cref="T:System.Web.UI.Control" /> that contains the <see cref="P:System.Web.UI.WebControls.TemplatedWizardStep.CustomNavigationTemplate" /> template for a step.</returns>
      <exception cref="T:System.NullReferenceException">If <see cref="P:System.Web.UI.WebControls.TemplatedWizardStep.CustomNavigationTemplate" /> has no content.</exception>
    </member>
    <member name="P:System.Web.UI.WebControls.TemplatedWizardStep.SkinID">
      <summary>Gets the skin to apply to the <see cref="T:System.Web.UI.WebControls.TemplatedWizardStep" />.</summary>
    </member>
    <member name="T:System.Web.UI.WebControls.TemplateField">
      <summary>Represents a field that displays custom content in a data-bound control.</summary>
    </member>
    <member name="M:System.Web.UI.WebControls.TemplateField.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Web.UI.WebControls.TemplateField" /> class.</summary>
    </member>
    <member name="P:System.Web.UI.WebControls.TemplateField.AlternatingItemTemplate">
      <summary>Gets or sets the template for displaying the alternating items in a <see cref="T:System.Web.UI.WebControls.TemplateField" /> object.</summary>
      <returns>A <see cref="T:System.Web.UI.ITemplate" />-implemented object that contains the template for displaying the alternating items in a <see cref="T:System.Web.UI.WebControls.TemplateField" />. The default is null, which indicates that this property is not set.</returns>
    </member>
    <member name="P:System.Web.UI.WebControls.TemplateField.ConvertEmptyStringToNull">
      <summary>Gets or sets a value indicating whether the value that the <see cref="T:System.Web.UI.WebControls.TemplateField" /> object is bound to should be converted to null if it is <see cref="F:System.String.Empty" />.</summary>
      <returns>true if the value that the <see cref="T:System.Web.UI.WebControls.TemplateField" /> is bound to should be converted to null when it is <see cref="F:System.String.Empty" />; otherwise, false. The default value is false.</returns>
    </member>
    <member name="M:System.Web.UI.WebControls.TemplateField.CopyProperties(System.Web.UI.WebControls.DataControlField)">
      <summary>Copies the properties of the current <see cref="T:System.Web.UI.WebControls.TemplateField" />-derived object to the specified <see cref="T:System.Web.UI.WebControls.DataControlField" /> object.</summary>
      <param name="newField">The <see cref="T:System.Web.UI.WebControls.DataControlField" /> to copy the properties of the current <see cref="T:System.Web.UI.WebControls.TemplateField" /> to.</param>
    </member>
    <member name="M:System.Web.UI.WebControls.TemplateField.CreateField">
      <summary>Creates a new <see cref="T:System.Web.UI.WebControls.TemplateField" /> object.</summary>
      <returns>Always returns a new <see cref="T:System.Web.UI.WebControls.TemplateField" />.</returns>
    </member>
    <member name="P:System.Web.UI.WebControls.TemplateField.EditItemTemplate">
      <summary>Gets or sets the template for displaying an item in edit mode in a <see cref="T:System.Web.UI.WebControls.TemplateField" /> object.</summary>
      <returns>A <see cref="T:System.Web.UI.ITemplate" />-implemented object that contains the template for displaying an item in edit mode in a <see cref="T:System.Web.UI.WebControls.TemplateField" />. The default is null, which indicates that this property is not set.</returns>
    </member>
    <member name="M:System.Web.UI.WebControls.TemplateField.ExtractValuesFromCell(System.Collections.Specialized.IOrderedDictionary,System.Web.UI.WebControls.DataControlFieldCell,System.Web.UI.WebControls.DataControlRowState,System.Boolean)">
      <summary>Extracts the value of the data control fields as specified by one or more two-way binding statements (DataBind) from the current table cell and adds the values to the specified <see cref="T:System.Collections.Specialized.IOrderedDictionary" /> collection.</summary>
      <param name="dictionary">An <see cref="T:System.Collections.Specialized.IOrderedDictionary" />.</param>
      <param name="cell">A <see cref="T:System.Web.UI.WebControls.DataControlFieldCell" /> that contains the text or controls of the <see cref="T:System.Web.UI.WebControls.TemplateField" />.</param>
      <param name="rowState">One of the <see cref="T:System.Web.UI.WebControls.DataControlRowState" /> values.</param>
      <param name="includeReadOnly">true to indicate that the values of read-only fields are included in the <paramref name="dictionary" /> collection; otherwise, false.</param>
    </member>
    <member name="P:System.Web.UI.WebControls.TemplateField.FooterTemplate">
      <summary>Gets or sets the template for displaying the footer section of a <see cref="T:System.Web.UI.WebControls.TemplateField" /> object.</summary>
      <returns>A <see cref="T:System.Web.UI.ITemplate" />-implemented object that contains the template for displaying the footer section of a <see cref="T:System.Web.UI.WebControls.TemplateField" />. The default is null, which indicates that this property is not set.</returns>
    </member>
    <member name="P:System.Web.UI.WebControls.TemplateField.HeaderTemplate">
      <summary>Gets or sets the template for displaying the header section of a <see cref="T:System.Web.UI.WebControls.TemplateField" /> object.</summary>
      <returns>A <see cref="T:System.Web.UI.ITemplate" />-implemented object that contains the template for displaying the header section of a <see cref="T:System.Web.UI.WebControls.TemplateField" /> in a data-bound control. The default is null, which indicates that this property is not set.</returns>
    </member>
    <member name="M:System.Web.UI.WebControls.TemplateField.InitializeCell(System.Web.UI.WebControls.DataControlFieldCell,System.Web.UI.WebControls.DataControlCellType,System.Web.UI.WebControls.DataControlRowState,System.Int32)">
      <summary>Adds text or controls to a cell's controls collection.</summary>
      <param name="cell">A <see cref="T:System.Web.UI.WebControls.DataControlFieldCell" /> that contains the text or controls of the <see cref="T:System.Web.UI.WebControls.DataControlField" />.</param>
      <param name="cellType">One of the <see cref="T:System.Web.UI.WebControls.DataControlCellType" /> values.</param>
      <param name="rowState">One of the <see cref="T:System.Web.UI.WebControls.DataControlRowState" /> values, specifying the state of the row that contains the <see cref="T:System.Web.UI.WebControls.DataControlFieldCell" />.</param>
      <param name="rowIndex">The index of the row that the <see cref="T:System.Web.UI.WebControls.DataControlFieldCell" /> is contained in.</param>
    </member>
    <member name="P:System.Web.UI.WebControls.TemplateField.InsertItemTemplate">
      <summary>Gets or sets the template for displaying an item in insert mode in a <see cref="T:System.Web.UI.WebControls.TemplateField" /> object.</summary>
      <returns>A <see cref="T:System.Web.UI.ITemplate" />-implemented object that contains the template for displaying an item in insert mode in a <see cref="T:System.Web.UI.WebControls.TemplateField" />. The default is null, which indicates that this property is not set.</returns>
    </member>
    <member name="P:System.Web.UI.WebControls.TemplateField.ItemTemplate">
      <summary>Gets or sets the template for displaying an item in a data-bound control.</summary>
      <returns>A <see cref="T:System.Web.UI.ITemplate" />-implemented object that contains the template for displaying an item in a <see cref="T:System.Web.UI.WebControls.TemplateField" />. The default is null, which indicates that this property is not set.</returns>
    </member>
    <member name="M:System.Web.UI.WebControls.TemplateField.ValidateSupportsCallback">
      <summary>Determines whether the controls contained in a <see cref="T:System.Web.UI.WebControls.TemplateField" /> object support page callbacks.</summary>
      <exception cref="T:System.NotSupportedException">The default implementation of this method is called. </exception>
    </member>
    <member name="T:System.Web.UI.WebControls.TextAlign">
      <summary>Specifies whether the text associated with a check box or radio button control appears to the left or to the right of the control.</summary>
    </member>
    <member name="F:System.Web.UI.WebControls.TextAlign.Left">
      <summary>Text associated with a check box or radio button control appears to the left of the control.</summary>
    </member>
    <member name="F:System.Web.UI.WebControls.TextAlign.Right">
      <summary>Text associated with a check box or radio button control appears to the right of the control.</summary>
    </member>
    <member name="T:System.Web.UI.WebControls.TextBox">
      <summary>Displays a text box control for user input.</summary>
    </member>
    <member name="M:System.Web.UI.WebControls.TextBox.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Web.UI.WebControls.TextBox" /> class.</summary>
    </member>
    <member name="M:System.Web.UI.WebControls.TextBox.AddAttributesToRender(System.Web.UI.HtmlTextWriter)">
      <summary>Adds HTML attributes and styles that need to be rendered to the specified <see cref="T:System.Web.UI.HtmlTextWriter" /> instance.</summary>
      <param name="writer">An <see cref="T:System.Web.UI.HtmlTextWriter" /> that represents the output stream to render HTML content on the client.</param>
    </member>
    <member name="M:System.Web.UI.WebControls.TextBox.AddParsedSubObject(System.Object)">
      <summary>Overridden to allow only literal controls to be added as the <see cref="P:System.Web.UI.WebControls.TextBox.Text" /> property.</summary>
      <param name="obj">An <see cref="T:System.Object" /> that represents the parsed element.</param>
      <exception cref="T:System.Web.HttpException">
        <paramref name="obj" /> is not of type <see cref="T:System.Web.UI.LiteralControl" />.</exception>
    </member>
    <member name="P:System.Web.UI.WebControls.TextBox.AutoCompleteType">
      <summary>Gets or sets a value that indicates the AutoComplete behavior of the <see cref="T:System.Web.UI.WebControls.TextBox" /> control</summary>
      <returns>One of the <see cref="T:System.Web.UI.WebControls.AutoCompleteType" /> enumeration values, indicating the AutoComplete behavior for the <see cref="T:System.Web.UI.WebControls.TextBox" /> control. The default value is <see cref="F:System.Web.UI.WebControls.AutoCompleteType.None" />.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">The selected value is not one of the <see cref="T:System.Web.UI.WebControls.AutoCompleteType" /> enumeration values.</exception>
    </member>
    <member name="P:System.Web.UI.WebControls.TextBox.AutoPostBack">
      <summary>Gets or sets a value that indicates whether an automatic postback to the server occurs when the <see cref="T:System.Web.UI.WebControls.TextBox" /> control loses focus.</summary>
      <returns>true if an automatic postback occurs when the <see cref="T:System.Web.UI.WebControls.TextBox" /> control loses focus; otherwise, false. The default is false.</returns>
    </member>
    <member name="P:System.Web.UI.WebControls.TextBox.CausesValidation">
      <summary>Gets or sets a value indicating whether validation is performed when the <see cref="T:System.Web.UI.WebControls.TextBox" /> control is set to validate when a postback occurs.</summary>
      <returns>true if validation is performed when the <see cref="T:System.Web.UI.WebControls.TextBox" /> control is set to validate when a postback occurs; otherwise, false. The default value is false.</returns>
    </member>
    <member name="P:System.Web.UI.WebControls.TextBox.Columns">
      <summary>Gets or sets the display width of the text box in characters.</summary>
      <returns>The display width, in characters, of the text box. The default is 0, which indicates that the property is not set.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">The specified width is less than 0. </exception>
    </member>
    <member name="M:System.Web.UI.WebControls.TextBox.LoadPostData(System.String,System.Collections.Specialized.NameValueCollection)">
      <summary>Processes the postback data for the <see cref="T:System.Web.UI.WebControls.TextBox" /> control.</summary>
      <returns>true if the posted content is different from the last posting; otherwise, false. </returns>
      <param name="postDataKey">The index within the posted collection that references the content to load. </param>
      <param name="postCollection">The collection posted to the server. </param>
    </member>
    <member name="P:System.Web.UI.WebControls.TextBox.MaxLength">
      <summary>Gets or sets the maximum number of characters allowed in the text box.</summary>
      <returns>The maximum number of characters allowed in the text box. The default is 0, which indicates that the property is not set.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">The specified width is less than 0. </exception>
    </member>
    <member name="M:System.Web.UI.WebControls.TextBox.OnPreRender(System.EventArgs)">
      <summary>Registers client script for generating postback events prior to rendering on the client, if <see cref="P:System.Web.UI.WebControls.TextBox.AutoPostBack" /> is true.</summary>
      <param name="e">An <see cref="T:System.EventArgs" /> that contains the event data.</param>
    </member>
    <member name="M:System.Web.UI.WebControls.TextBox.OnTextChanged(System.EventArgs)">
      <summary>Raises the <see cref="E:System.Web.UI.WebControls.TextBox.TextChanged" /> event. This allows you to handle the event directly.</summary>
      <param name="e">A <see cref="T:System.EventArgs" /> that contains event information. </param>
    </member>
    <member name="M:System.Web.UI.WebControls.TextBox.RaisePostDataChangedEvent">
      <summary>Invokes the <see cref="M:System.Web.UI.WebControls.TextBox.OnTextChanged(System.EventArgs)" /> method when the posted data for the <see cref="T:System.Web.UI.WebControls.TextBox" /> control has changed.</summary>
    </member>
    <member name="P:System.Web.UI.WebControls.TextBox.ReadOnly">
      <summary>Gets or sets a value indicating whether the contents of the <see cref="T:System.Web.UI.WebControls.TextBox" /> control can be changed.</summary>
      <returns>true if the contents of the <see cref="T:System.Web.UI.WebControls.TextBox" /> control cannot be changed; otherwise, false. The default value is false.</returns>
    </member>
    <member name="M:System.Web.UI.WebControls.TextBox.Render(System.Web.UI.HtmlTextWriter)">
      <summary>Renders the <see cref="T:System.Web.UI.WebControls.TextBox" /> control to the specified <see cref="T:System.Web.UI.HtmlTextWriter" /> object.</summary>
      <param name="writer">The <see cref="T:System.Web.UI.HtmlTextWriter" /> that receives the rendered output.</param>
    </member>
    <member name="P:System.Web.UI.WebControls.TextBox.Rows">
      <summary>Gets or sets the number of rows displayed in a multiline text box.</summary>
      <returns>The number of rows in a multiline text box. The default is 0, which displays a two-line text box.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">The selected value is less than 0.</exception>
    </member>
    <member name="M:System.Web.UI.WebControls.TextBox.SaveViewState">
      <summary>Saves the changes to the text box view state since the time the page was posted back to the server.</summary>
      <returns>The <see cref="T:System.Object" /> that contains the changes to the <see cref="T:System.Web.UI.WebControls.TextBox" /> view state. If no view state is associated with the object, this method returns null.</returns>
    </member>
    <member name="M:System.Web.UI.WebControls.TextBox.System#Web#UI#IPostBackDataHandler#LoadPostData(System.String,System.Collections.Specialized.NameValueCollection)">
      <summary>Loads the posted text box content if it is different from the last posting. </summary>
      <returns>true if the posted content is different from the last posting; otherwise, false.</returns>
      <param name="postDataKey">The index within the posted collection that references the content to load. </param>
      <param name="postCollection">The collection posted to the server. </param>
    </member>
    <member name="M:System.Web.UI.WebControls.TextBox.System#Web#UI#IPostBackDataHandler#RaisePostDataChangedEvent">
      <summary>Invokes the <see cref="M:System.Web.UI.WebControls.TextBox.OnTextChanged(System.EventArgs)" /> method whenever posted data for the text box has changed. </summary>
    </member>
    <member name="P:System.Web.UI.WebControls.TextBox.TagKey">
      <summary>Gets the HTML tag for the text box control. This property is protected.</summary>
      <returns>
        <see cref="F:System.Web.UI.HtmlTextWriterTag.Textarea" /> if the text box is multiline; otherwise, <see cref="F:System.Web.UI.HtmlTextWriterTag.Input" />.</returns>
    </member>
    <member name="P:System.Web.UI.WebControls.TextBox.Text">
      <summary>Gets or sets the text content of the <see cref="T:System.Web.UI.WebControls.TextBox" /> control.</summary>
      <returns>The text displayed in the <see cref="T:System.Web.UI.WebControls.TextBox" /> control. The default is an empty string ("").</returns>
    </member>
    <member name="E:System.Web.UI.WebControls.TextBox.TextChanged">
      <summary>Occurs when the content of the text box changes between posts to the server.</summary>
    </member>
    <member name="P:System.Web.UI.WebControls.TextBox.TextMode">
      <summary>Gets or sets the behavior mode (single-line, multiline, or password) of the <see cref="T:System.Web.UI.WebControls.TextBox" /> control.</summary>
      <returns>One of the <see cref="T:System.Web.UI.WebControls.TextBoxMode" /> enumeration values. The default value is SingleLine.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">The specified mode is not one of the <see cref="T:System.Web.UI.WebControls.TextBoxMode" /> enumeration values. </exception>
    </member>
    <member name="P:System.Web.UI.WebControls.TextBox.ValidationGroup">
      <summary>Gets or sets the group of controls for which the <see cref="T:System.Web.UI.WebControls.TextBox" /> control causes validation when it posts back to the server. </summary>
      <returns>The group of controls for which the <see cref="T:System.Web.UI.WebControls.TextBox" /> control causes validation when it posts back to the server. The default value is an empty string ("").</returns>
    </member>
    <member name="P:System.Web.UI.WebControls.TextBox.Wrap">
      <summary>Gets or sets a value indicating whether the text content wraps within a multiline text box.</summary>
      <returns>true if the text content wraps within a multiline text box; otherwise, false. The default is true.</returns>
    </member>
    <member name="T:System.Web.UI.WebControls.TextBoxControlBuilder">
      <summary>Interacts with the parser to build a <see cref="T:System.Web.UI.WebControls.TextBox" /> control.</summary>
    </member>
    <member name="M:System.Web.UI.WebControls.TextBoxControlBuilder.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Web.UI.WebControls.TextBoxControlBuilder" /> class. </summary>
    </member>
    <member name="M:System.Web.UI.WebControls.TextBoxControlBuilder.AllowWhitespaceLiterals">
      <summary>Specifies whether white-space literals are allowed.</summary>
      <returns>false in all cases.</returns>
    </member>
    <member name="M:System.Web.UI.WebControls.TextBoxControlBuilder.HtmlDecodeLiterals">
      <summary>Determines whether the literal string of the <see cref="T:System.Web.UI.WebControls.TextBox" /> control must be HTML decoded.</summary>
      <returns>true in all cases.</returns>
    </member>
    <member name="T:System.Web.UI.WebControls.TextBoxMode">
      <summary>Specifies the behavior mode of the text box.</summary>
    </member>
    <member name="F:System.Web.UI.WebControls.TextBoxMode.SingleLine">
      <summary>Represents single-line entry mode.</summary>
    </member>
    <member name="F:System.Web.UI.WebControls.TextBoxMode.MultiLine">
      <summary>Represents multiline entry mode.</summary>
    </member>
    <member name="F:System.Web.UI.WebControls.TextBoxMode.Password">
      <summary>Represents password entry mode.</summary>
    </member>
    <member name="T:System.Web.UI.WebControls.TitleFormat">
      <summary>Specifies the title format for the displayed month in the <see cref="T:System.Web.UI.WebControls.Calendar" /> control.</summary>
    </member>
    <member name="F:System.Web.UI.WebControls.TitleFormat.Month">
      <summary>Displays the title with the month but not the year (for example, "January").</summary>
    </member>
    <member name="F:System.Web.UI.WebControls.TitleFormat.MonthYear">
      <summary>Displays the title with both the month and the year (for example, "January 2000").</summary>
    </member>
    <member name="T:System.Web.UI.WebControls.TreeNode">
      <summary>Represents a node in the <see cref="T:System.Web.UI.WebControls.TreeView" /> control.</summary>
    </member>
    <member name="M:System.Web.UI.WebControls.TreeNode.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Web.UI.WebControls.TreeNode" /> class without text or a value.</summary>
    </member>
    <member name="M:System.Web.UI.WebControls.TreeNode.#ctor(System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.Web.UI.WebControls.TreeNode" /> class using the specified text.</summary>
      <param name="text">The text that is displayed in the <see cref="T:System.Web.UI.WebControls.TreeView" /> control for the node. </param>
    </member>
    <member name="M:System.Web.UI.WebControls.TreeNode.#ctor(System.String,System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.Web.UI.WebControls.TreeNode" /> class using the specified text and value.</summary>
      <param name="text">The text that is displayed in the <see cref="T:System.Web.UI.WebControls.TreeView" /> control for the node. </param>
      <param name="value">The supplemental data associated with the node, such as data used for handling postback events. </param>
    </member>
    <member name="M:System.Web.UI.WebControls.TreeNode.#ctor(System.String,System.String,System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.Web.UI.WebControls.TreeNode" /> class using the specified text, value, and image URL.</summary>
      <param name="text">The text that is displayed in the <see cref="T:System.Web.UI.WebControls.TreeView" /> control for the node. </param>
      <param name="value">The supplemental data associated with the node, such as data used for handling postback events. </param>
      <param name="imageUrl">The URL to an image that is displayed next to the node. </param>
    </member>
    <member name="M:System.Web.UI.WebControls.TreeNode.#ctor(System.String,System.String,System.String,System.String,System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.Web.UI.WebControls.TreeNode" /> class using the specified text, value, image URL, navigation URL, and target.</summary>
      <param name="text">The text that is displayed in the <see cref="T:System.Web.UI.WebControls.TreeView" /> control for the node. </param>
      <param name="value">The supplemental data associated with the node, such as data used for handling postback events. </param>
      <param name="imageUrl">The URL to an image that is displayed next to the node. </param>
      <param name="navigateUrl">The URL to link to when the node is clicked. </param>
      <param name="target">The target window or frame in which to display the Web page content linked to when the node is clicked. </param>
    </member>
    <member name="M:System.Web.UI.WebControls.TreeNode.#ctor(System.Web.UI.WebControls.TreeView,System.Boolean)">
      <summary>Initializes a new instance of the <see cref="T:System.Web.UI.WebControls.TreeNode" /> class using the specified owner.</summary>
      <param name="owner">The <see cref="T:System.Web.UI.WebControls.TreeView" /> that will contain the new <see cref="T:System.Web.UI.WebControls.TreeNode" />.</param>
      <param name="isRoot">true if the <see cref="T:System.Web.UI.WebControls.TreeNode" /> is a root node; otherwise, false.</param>
    </member>
    <member name="P:System.Web.UI.WebControls.TreeNode.Checked">
      <summary>Gets or sets a value that indicates whether the node's check box is selected.</summary>
      <returns>true if the node's check box is selected; otherwise, false. The default is false.</returns>
    </member>
    <member name="P:System.Web.UI.WebControls.TreeNode.ChildNodes">
      <summary>Gets a <see cref="T:System.Web.UI.WebControls.TreeNodeCollection" /> collection that contains the first-level child nodes of the current node.</summary>
      <returns>A <see cref="T:System.Web.UI.WebControls.TreeNodeCollection" /> that contains the first-level child nodes of the current node.</returns>
    </member>
    <member name="M:System.Web.UI.WebControls.TreeNode.Clone">
      <summary>Creates a new instance of the <see cref="T:System.Web.UI.WebControls.TreeNode" /> class with the properties of the current <see cref="T:System.Web.UI.WebControls.TreeNode" /> instance.</summary>
      <returns>A new instance of <see cref="T:System.Web.UI.WebControls.TreeNode" /> with the properties of the current <see cref="T:System.Web.UI.WebControls.TreeNode" /> instance.</returns>
    </member>
    <member name="M:System.Web.UI.WebControls.TreeNode.Collapse">
      <summary>Collapses the current tree node.</summary>
    </member>
    <member name="M:System.Web.UI.WebControls.TreeNode.CollapseAll">
      <summary>Collapses the current node and all its child nodes.</summary>
    </member>
    <member name="P:System.Web.UI.WebControls.TreeNode.DataBound">
      <summary>Gets a value that indicates whether the node was created through data binding.</summary>
      <returns>true if the node was created through data binding; otherwise, false.</returns>
    </member>
    <member name="P:System.Web.UI.WebControls.TreeNode.DataItem">
      <summary>Gets the data item that is bound to the control.</summary>
      <returns>A <see cref="T:System.Object" /> that represents the data item that is bound to the control. The default value is null, which indicates that the node is not bound to any data item.</returns>
    </member>
    <member name="P:System.Web.UI.WebControls.TreeNode.DataPath">
      <summary>Gets the path to the data bound to the node.</summary>
      <returns>The path to the data bound to the node. This value comes from the hierarchical data source control to which the <see cref="T:System.Web.UI.WebControls.TreeView" /> control is bound. The default value is an empty string ("").</returns>
    </member>
    <member name="P:System.Web.UI.WebControls.TreeNode.Depth">
      <summary>Gets the depth of the node.</summary>
      <returns>The depth of the node.</returns>
    </member>
    <member name="M:System.Web.UI.WebControls.TreeNode.Expand">
      <summary>Expands the current tree node.</summary>
    </member>
    <member name="M:System.Web.UI.WebControls.TreeNode.ExpandAll">
      <summary>Expands the current node and all its child nodes.</summary>
    </member>
    <member name="P:System.Web.UI.WebControls.TreeNode.Expanded">
      <summary>Gets or sets a value that indicates whether the node is expanded.</summary>
      <returns>true if the node is expanded, false if the node is not expanded, or null.</returns>
    </member>
    <member name="P:System.Web.UI.WebControls.TreeNode.ImageToolTip">
      <summary>Gets or sets the ToolTip text for the image displayed next to a node.</summary>
      <returns>The ToolTip text for the image displayed next to a node. The default is an empty string (""), which indicates that this property is not set.</returns>
    </member>
    <member name="P:System.Web.UI.WebControls.TreeNode.ImageUrl">
      <summary>Gets or sets the URL to an image that is displayed next to the node.</summary>
      <returns>The URL to a custom image that is displayed next to the node. The default value is an empty string (""), which indicates that this property is not set.</returns>
    </member>
    <member name="P:System.Web.UI.WebControls.TreeNode.IsTrackingViewState">
      <summary>Gets a value that indicates whether the node is saving changes to its view state. </summary>
      <returns>true if the control is marked to save its state; otherwise, false. </returns>
    </member>
    <member name="M:System.Web.UI.WebControls.TreeNode.LoadViewState(System.Object)">
      <summary>Loads the previously saved view state of the node. </summary>
      <param name="state">An <see cref="T:System.Object" /> that represents the state of the node.</param>
    </member>
    <member name="P:System.Web.UI.WebControls.TreeNode.NavigateUrl">
      <summary>Gets or sets the URL to navigate to when the node is clicked.</summary>
      <returns>The URL to navigate to when the node is clicked. The default value is an empty string (""), which indicates that this property is not set.</returns>
    </member>
    <member name="P:System.Web.UI.WebControls.TreeNode.Parent">
      <summary>Gets the parent node of the current node.</summary>
      <returns>A <see cref="T:System.Web.UI.WebControls.TreeNode" /> that represents the parent node of the current node.</returns>
    </member>
    <member name="P:System.Web.UI.WebControls.TreeNode.PopulateOnDemand">
      <summary>Gets or sets a value that indicates whether the node is populated dynamically.</summary>
      <returns>true to populate the node dynamically; otherwise, false. The default is false.</returns>
    </member>
    <member name="M:System.Web.UI.WebControls.TreeNode.RenderPostText(System.Web.UI.HtmlTextWriter)">
      <summary>Allows control developers to add additional rendering to the node.</summary>
      <param name="writer">The <see cref="T:System.Web.UI.HtmlTextWriter" /> that represents the output stream used to write content to a Web page. </param>
    </member>
    <member name="M:System.Web.UI.WebControls.TreeNode.RenderPreText(System.Web.UI.HtmlTextWriter)">
      <summary>Allows control developers to add additional rendering to the node.</summary>
      <param name="writer">The <see cref="T:System.Web.UI.HtmlTextWriter" /> that represents the output stream used to write content to a Web page.</param>
    </member>
    <member name="M:System.Web.UI.WebControls.TreeNode.SaveViewState">
      <summary>Saves the current view state of the node. </summary>
      <returns>An <see cref="T:System.Object" /> that contains the saved state of the node. </returns>
    </member>
    <member name="M:System.Web.UI.WebControls.TreeNode.Select">
      <summary>Selects the current node in the <see cref="T:System.Web.UI.WebControls.TreeView" /> control.</summary>
    </member>
    <member name="P:System.Web.UI.WebControls.TreeNode.SelectAction">
      <summary>Gets or sets the event or events to raise when a node is selected.</summary>
      <returns>One of the <see cref="T:System.Web.UI.WebControls.TreeNodeSelectAction" /> values. The default is TreeNodeSelectAction.Select.</returns>
    </member>
    <member name="P:System.Web.UI.WebControls.TreeNode.Selected">
      <summary>Gets or sets a value that indicates whether the node is selected.</summary>
      <returns>true if the node is selected; otherwise, false. The default is false.</returns>
    </member>
    <member name="P:System.Web.UI.WebControls.TreeNode.ShowCheckBox">
      <summary>Gets or sets a value that indicates whether a check box is displayed next to the node.</summary>
      <returns>true to display the check box; otherwise, false.</returns>
    </member>
    <member name="M:System.Web.UI.WebControls.TreeNode.System#ICloneable#Clone">
      <summary>Creates a copy of the <see cref="T:System.Web.UI.WebControls.TreeNode" /> object.</summary>
      <returns>An <see cref="T:System.Object" /> that represents a copy of the <see cref="T:System.Web.UI.WebControls.TreeNode" /> object.</returns>
    </member>
    <member name="P:System.Web.UI.WebControls.TreeNode.System#Web#UI#IStateManager#IsTrackingViewState">
      <summary>For a description of this member, see <see cref="P:System.Web.UI.IStateManager.IsTrackingViewState" />.</summary>
      <returns>A value that indicates whether the node is saving changes to its view state. </returns>
    </member>
    <member name="M:System.Web.UI.WebControls.TreeNode.System#Web#UI#IStateManager#LoadViewState(System.Object)">
      <summary>Loads the node's previously saved view state.</summary>
      <param name="state">A <see cref="T:System.Object" /> that contains the saved view state values. </param>
    </member>
    <member name="M:System.Web.UI.WebControls.TreeNode.System#Web#UI#IStateManager#SaveViewState">
      <summary>Saves the view state changes to a <see cref="T:System.Object" />.</summary>
      <returns>The <see cref="T:System.Object" /> that contains the view state changes.</returns>
    </member>
    <member name="M:System.Web.UI.WebControls.TreeNode.System#Web#UI#IStateManager#TrackViewState">
      <summary>Instructs the <see cref="T:System.Web.UI.WebControls.TreeNode" /> object to track changes to its view state.</summary>
    </member>
    <member name="P:System.Web.UI.WebControls.TreeNode.Target">
      <summary>Gets or sets the target window or frame in which to display the Web page content associated with a node.</summary>
      <returns>The target window or frame in which to display the linked Web page content. Values must begin with a letter in the range of A through Z (case-insensitive), except for certain special values that begin with an underscore, as shown in the following table.Target value Description _blankRenders the content in a new window without frames. _parentRenders the content in the immediate frameset parent. _searchRenders the content in the search pane._selfRenders the content in the frame with focus. _topRenders the content in the full window without frames. NoteCheck your browser documentation to determine whether the _search value is supported. For example, Microsoft Internet Explorer 5.0 and later support the _search target value.The default value is an empty string (""), which refreshes the window or frame with focus.</returns>
    </member>
    <member name="P:System.Web.UI.WebControls.TreeNode.Text">
      <summary>Gets or sets the text displayed for the node in the <see cref="T:System.Web.UI.WebControls.TreeView" /> control.</summary>
      <returns>The text displayed for the node in the <see cref="T:System.Web.UI.WebControls.TreeView" /> control. The default is an empty string ("").</returns>
    </member>
    <member name="M:System.Web.UI.WebControls.TreeNode.ToggleExpandState">
      <summary>Alternates between the expanded and collapsed state of the node.</summary>
    </member>
    <member name="P:System.Web.UI.WebControls.TreeNode.ToolTip">
      <summary>Gets or sets the ToolTip text for the node.</summary>
      <returns>The ToolTip text for the node. The default is an empty string ("").</returns>
    </member>
    <member name="M:System.Web.UI.WebControls.TreeNode.TrackViewState">
      <summary>Marks the starting point at which to begin tracking and saving view state changes to the node. </summary>
    </member>
    <member name="P:System.Web.UI.WebControls.TreeNode.Value">
      <summary>Gets or sets a non-displayed value used to store any additional data about the node, such as data used for handling postback events.</summary>
      <returns>Supplemental data about the node that is not displayed. The default value is an empty string ("").</returns>
    </member>
    <member name="P:System.Web.UI.WebControls.TreeNode.ValuePath">
      <summary>Gets the path from the root node to the current node.</summary>
      <returns>A delimiter-separated list of node values that form a path from the root node to the current node.</returns>
    </member>
    <member name="T:System.Web.UI.WebControls.TreeNodeBinding">
      <summary>Defines the relationship between a data item and the node it is binding to in a <see cref="T:System.Web.UI.WebControls.TreeView" /> control.</summary>
    </member>
    <member name="M:System.Web.UI.WebControls.TreeNodeBinding.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Web.UI.WebControls.TreeNodeBinding" /> class.</summary>
    </member>
    <member name="P:System.Web.UI.WebControls.TreeNodeBinding.DataMember">
      <summary>Gets or sets the value to match against a <see cref="P:System.Web.UI.IHierarchyData.Type" /> property for a data item to determine whether to apply the tree node binding.</summary>
      <returns>The value to match against a data item's <see cref="P:System.Web.UI.IHierarchyData.Type" /> property to determine whether to apply the tree node binding. The default is an empty string (""), which indicates that the <see cref="P:System.Web.UI.WebControls.TreeNodeBinding.DataMember" /> property is not set.</returns>
    </member>
    <member name="P:System.Web.UI.WebControls.TreeNodeBinding.Depth">
      <summary>Gets or sets the node depth at which the <see cref="T:System.Web.UI.WebControls.TreeNodeBinding" /> object is applied.</summary>
      <returns>The node depth at which the <see cref="T:System.Web.UI.WebControls.TreeNodeBinding" /> object is applied. The default is -1, indicating that the <see cref="P:System.Web.UI.WebControls.TreeNodeBinding.Depth" /> property is not set.</returns>
    </member>
    <member name="P:System.Web.UI.WebControls.TreeNodeBinding.FormatString">
      <summary>Gets or sets the string that specifies the display format for the text of a node to which the <see cref="T:System.Web.UI.WebControls.TreeNodeBinding" /> object is applied.</summary>
      <returns>A formatting string that specifies the display format for the text of a node to which the <see cref="T:System.Web.UI.WebControls.TreeNodeBinding" /> object is applied. The default is an empty string (""), which indicates that the <see cref="P:System.Web.UI.WebControls.TreeNodeBinding.FormatString" /> property is not set.</returns>
    </member>
    <member name="P:System.Web.UI.WebControls.TreeNodeBinding.ImageToolTip">
      <summary>Gets or sets the ToolTip text for the image that is displayed next to a node to which the <see cref="T:System.Web.UI.WebControls.TreeNodeBinding" /> object is applied.</summary>
      <returns>The ToolTip text for the image that is displayed next to a node to which the <see cref="T:System.Web.UI.WebControls.TreeNodeBinding" /> object is applied. The default is an empty string (""), which indicates that the P:System.Web.UI.WebControls.TreeNodeBinding.ImageToolTip property is not set.</returns>
    </member>
    <member name="P:System.Web.UI.WebControls.TreeNodeBinding.ImageToolTipField">
      <summary>Gets or sets the name of the field from the data source to bind to the <see cref="P:System.Web.UI.WebControls.TreeNode.ImageToolTip" /> property of a <see cref="T:System.Web.UI.WebControls.TreeNode" /> object to which the <see cref="T:System.Web.UI.WebControls.TreeNodeBinding" /> object is applied.</summary>
      <returns>The name of the field to bind to the <see cref="P:System.Web.UI.WebControls.TreeNode.ImageToolTip" /> property of a <see cref="T:System.Web.UI.WebControls.TreeNode" /> object to which the <see cref="T:System.Web.UI.WebControls.TreeNodeBinding" /> object is applied. The default is an empty string (""), which indicates that the <see cref="P:System.Web.UI.WebControls.TreeNodeBinding.ImageToolTipField" /> property is not set.</returns>
    </member>
    <member name="P:System.Web.UI.WebControls.TreeNodeBinding.ImageUrl">
      <summary>Gets or sets the URL to an image that is displayed next to a node to which the <see cref="T:System.Web.UI.WebControls.TreeNodeBinding" /> object is applied.</summary>
      <returns>The URL to an image that is displayed next to a node to which the <see cref="T:System.Web.UI.WebControls.TreeNodeBinding" /> object is applied. The <see cref="P:System.Web.UI.WebControls.TreeNodeBinding.ImageUrl" /> property is not set.</returns>
    </member>
    <member name="P:System.Web.UI.WebControls.TreeNodeBinding.ImageUrlField">
      <summary>Gets or sets the name of the field from the data source to bind to the <see cref="P:System.Web.UI.WebControls.TreeNode.ImageUrl" /> property of a <see cref="T:System.Web.UI.WebControls.TreeNode" /> object to which the <see cref="T:System.Web.UI.WebControls.TreeNodeBinding" /> object is applied.</summary>
      <returns>The name of the field to bind to the <see cref="P:System.Web.UI.WebControls.TreeNode.ImageUrl" /> property of a <see cref="T:System.Web.UI.WebControls.TreeNode" /> object to which the <see cref="T:System.Web.UI.WebControls.TreeNodeBinding" /> object is applied. The default is an empty string (""), which indicates that the <see cref="P:System.Web.UI.WebControls.TreeNodeBinding.ImageUrlField" /> property is not set.</returns>
    </member>
    <member name="P:System.Web.UI.WebControls.TreeNodeBinding.NavigateUrl">
      <summary>Gets or sets the URL to link to when a node to which the <see cref="T:System.Web.UI.WebControls.TreeNodeBinding" /> object is applied is clicked.</summary>
      <returns>The URL to link to when a node to which the <see cref="T:System.Web.UI.WebControls.TreeNodeBinding" /> object is applied is clicked. The default is an empty string (""), which indicates that the <see cref="P:System.Web.UI.WebControls.TreeNodeBinding.NavigateUrl" /> property is not set.</returns>
    </member>
    <member name="P:System.Web.UI.WebControls.TreeNodeBinding.NavigateUrlField">
      <summary>Gets or sets the name of the field from the data source to bind to the <see cref="P:System.Web.UI.WebControls.TreeNode.NavigateUrl" /> property of a <see cref="T:System.Web.UI.WebControls.TreeNode" /> object to which the <see cref="T:System.Web.UI.WebControls.TreeNodeBinding" /> object is applied.</summary>
      <returns>The name of the field to bind to the <see cref="P:System.Web.UI.WebControls.TreeNode.NavigateUrl" /> property of a <see cref="T:System.Web.UI.WebControls.TreeNode" /> object to which the <see cref="T:System.Web.UI.WebControls.TreeNodeBinding" /> object is applied. The default is an empty string (""), which indicates that the <see cref="P:System.Web.UI.WebControls.TreeNodeBinding.NavigateUrlField" /> property is not set.</returns>
    </member>
    <member name="P:System.Web.UI.WebControls.TreeNodeBinding.PopulateOnDemand">
      <summary>Gets or sets a value indicating whether the node to which the <see cref="T:System.Web.UI.WebControls.TreeNodeBinding" /> object is applied is populated dynamically.</summary>
      <returns>true to populate the node to which the <see cref="T:System.Web.UI.WebControls.TreeNodeBinding" /> object is applied dynamically; otherwise, false. The default is false.</returns>
    </member>
    <member name="P:System.Web.UI.WebControls.TreeNodeBinding.SelectAction">
      <summary>Gets or sets the event or events to raise when a node to which the <see cref="T:System.Web.UI.WebControls.TreeNodeBinding" /> object is applied is selected.</summary>
      <returns>One of the <see cref="T:System.Web.UI.WebControls.TreeNodeSelectAction" /> values. The default is TreeNodeSelectAction.Select.</returns>
    </member>
    <member name="P:System.Web.UI.WebControls.TreeNodeBinding.ShowCheckBox">
      <summary>Gets or sets a value indicating whether a check box is displayed next to a node to which the <see cref="T:System.Web.UI.WebControls.TreeNodeBinding" /> object is applied.</summary>
      <returns>true to display a check box next to a node to which the <see cref="T:System.Web.UI.WebControls.TreeNodeBinding" /> object is applied; otherwise, false. The default is false.</returns>
    </member>
    <member name="M:System.Web.UI.WebControls.TreeNodeBinding.System#ICloneable#Clone">
      <summary>Creates a copy of the <see cref="T:System.Web.UI.WebControls.TreeNodeBinding" /> object.</summary>
      <returns>An object that represents a copy of the <see cref="T:System.Web.UI.WebControls.TreeNodeBinding" /> object.</returns>
    </member>
    <member name="P:System.Web.UI.WebControls.TreeNodeBinding.System#Web#UI#IDataSourceViewSchemaAccessor#DataSourceViewSchema">
      <summary>For a description of this member, see <see cref="P:System.Web.UI.IDataSourceViewSchemaAccessor.DataSourceViewSchema" />.</summary>
      <returns>An object that represents the schema that is associated with the <see cref="T:System.Web.UI.WebControls.TreeNodeBinding" /> object.</returns>
    </member>
    <member name="P:System.Web.UI.WebControls.TreeNodeBinding.System#Web#UI#IStateManager#IsTrackingViewState">
      <summary>For a description of this member, see <see cref="P:System.Web.UI.IStateManager.IsTrackingViewState" />.</summary>
      <returns>true, if the control is marked to save its state; otherwise, false.</returns>
    </member>
    <member name="M:System.Web.UI.WebControls.TreeNodeBinding.System#Web#UI#IStateManager#LoadViewState(System.Object)">
      <summary>Loads the previously saved view state for the node.</summary>
      <param name="state">A <see cref="T:System.Object" /> that contains the saved view state values. </param>
    </member>
    <member name="M:System.Web.UI.WebControls.TreeNodeBinding.System#Web#UI#IStateManager#SaveViewState">
      <summary>Saves the view state changes to an object.</summary>
      <returns>The object that contains the view state changes.</returns>
    </member>
    <member name="M:System.Web.UI.WebControls.TreeNodeBinding.System#Web#UI#IStateManager#TrackViewState">
      <summary>Instructs the <see cref="T:System.Web.UI.WebControls.TreeNode" /> object to track changes to its view state.</summary>
    </member>
    <member name="P:System.Web.UI.WebControls.TreeNodeBinding.Target">
      <summary>Gets or sets the target window or frame in which to display the Web page content that is associated with a node to which the <see cref="T:System.Web.UI.WebControls.TreeNodeBinding" /> object is applied.</summary>
      <returns>The target window or frame in which to display the linked Web page content. Values must begin with a letter in the range of A through Z (case insensitive), except for certain special values that begin with an underscore, as shown in the following table.Target value Description _blankRenders the content in a new window without frames. _parentRenders the content in the immediate frameset parent. _searchRenders the content in the search pane._selfRenders the content in the frame with focus. _topRenders the content in the full window without frames. NoteCheck your browser documentation to determine if the _search value is supported.  For example, Microsoft Internet Explorer version 5.0 and later supports the _search target value.The default is an empty string (""), which refreshes the window or frame with focus.</returns>
    </member>
    <member name="P:System.Web.UI.WebControls.TreeNodeBinding.TargetField">
      <summary>Gets or sets the name of the field from the data source to bind to the <see cref="P:System.Web.UI.WebControls.TreeNode.Target" /> property of a <see cref="T:System.Web.UI.WebControls.TreeNode" /> object to which the <see cref="T:System.Web.UI.WebControls.TreeNodeBinding" /> object is applied.</summary>
      <returns>The name of the field to bind to the <see cref="P:System.Web.UI.WebControls.TreeNode.Target" /> property of a <see cref="T:System.Web.UI.WebControls.TreeNode" /> object to which the <see cref="T:System.Web.UI.WebControls.TreeNodeBinding" /> object is applied. The default is an empty string (""), which indicates that the <see cref="P:System.Web.UI.WebControls.TreeNodeBinding.TargetField" /> property is not set.</returns>
    </member>
    <member name="P:System.Web.UI.WebControls.TreeNodeBinding.Text">
      <summary>Gets or sets the text that is displayed for the node to which the <see cref="T:System.Web.UI.WebControls.TreeNodeBinding" /> object is applied.</summary>
      <returns>The text displayed for the node to which the <see cref="T:System.Web.UI.WebControls.TreeNodeBinding" /> object is applied. The default is an empty string ("").</returns>
    </member>
    <member name="P:System.Web.UI.WebControls.TreeNodeBinding.TextField">
      <summary>Gets or sets the name of the field from the data source to bind to the <see cref="P:System.Web.UI.WebControls.TreeNode.Text" /> property of a <see cref="T:System.Web.UI.WebControls.TreeNode" /> object to which the <see cref="T:System.Web.UI.WebControls.TreeNodeBinding" /> object is applied.</summary>
      <returns>The name of the field to bind to the <see cref="P:System.Web.UI.WebControls.TreeNode.Text" /> property of a <see cref="T:System.Web.UI.WebControls.TreeNode" /> object to which the <see cref="T:System.Web.UI.WebControls.TreeNodeBinding" /> object is applied. The default is an empty string (""), which indicates that the <see cref="P:System.Web.UI.WebControls.TreeNodeBinding.TextField" /> property is not set.</returns>
    </member>
    <member name="P:System.Web.UI.WebControls.TreeNodeBinding.ToolTip">
      <summary>Gets or sets the ToolTip text for a node to which the <see cref="T:System.Web.UI.WebControls.TreeNodeBinding" /> object is applied.</summary>
      <returns>The ToolTip text for a node to which the <see cref="T:System.Web.UI.WebControls.TreeNodeBinding" /> object is applied. The default is an empty string (""), which indicates that the <see cref="P:System.Web.UI.WebControls.TreeNodeBinding.ToolTip" /> property is not set.</returns>
    </member>
    <member name="P:System.Web.UI.WebControls.TreeNodeBinding.ToolTipField">
      <summary>Gets or sets the name of the field from the data source to bind to the <see cref="P:System.Web.UI.WebControls.TreeNode.ToolTip" /> property of a <see cref="T:System.Web.UI.WebControls.TreeNode" /> object to which the <see cref="T:System.Web.UI.WebControls.TreeNodeBinding" /> object is applied.</summary>
      <returns>The name of the field to bind to the <see cref="P:System.Web.UI.WebControls.TreeNode.ToolTip" /> property of a <see cref="T:System.Web.UI.WebControls.TreeNode" /> object to which the <see cref="T:System.Web.UI.WebControls.TreeNodeBinding" /> object is applied. The default is an empty string (""), which indicates that the <see cref="P:System.Web.UI.WebControls.TreeNodeBinding.ToolTipField" /> property is not set.</returns>
    </member>
    <member name="M:System.Web.UI.WebControls.TreeNodeBinding.ToString">
      <summary>Returns the <see cref="P:System.Web.UI.WebControls.TreeNodeBinding.DataMember" /> property.</summary>
      <returns>Returns the <see cref="P:System.Web.UI.WebControls.TreeNodeBinding.DataMember" /> property. If the <see cref="P:System.Web.UI.WebControls.TreeNodeBinding.DataMember" /> property is null or an empty string (""), (Empty) is returned.</returns>
    </member>
    <member name="P:System.Web.UI.WebControls.TreeNodeBinding.Value">
      <summary>Gets or sets a displayed value that is not displayed but is used to store any additional data about a node to which the <see cref="T:System.Web.UI.WebControls.TreeNodeBinding" /> object is applied, such as data used for handling postback events.</summary>
      <returns>Supplemental data about a node to which the <see cref="T:System.Web.UI.WebControls.TreeNodeBinding" /> object is applied; this data is not displayed. The default is an empty string ("").</returns>
    </member>
    <member name="P:System.Web.UI.WebControls.TreeNodeBinding.ValueField">
      <summary>Gets or sets the name of the field from the data source to bind to the <see cref="P:System.Web.UI.WebControls.TreeNode.Value" /> property of a <see cref="T:System.Web.UI.WebControls.TreeNode" /> object to which the <see cref="T:System.Web.UI.WebControls.TreeNodeBinding" /> object is applied.</summary>
      <returns>The name of the field to bind to the <see cref="P:System.Web.UI.WebControls.TreeNode.Value" /> property of a <see cref="T:System.Web.UI.WebControls.TreeNode" /> object to which the <see cref="T:System.Web.UI.WebControls.TreeNodeBinding" /> object is applied. The default is an empty string (""), which indicates that the <see cref="P:System.Web.UI.WebControls.TreeNodeBinding.ValueField" /> property is not set.</returns>
    </member>
    <member name="T:System.Web.UI.WebControls.TreeNodeBindingCollection">
      <summary>Represents a collection of <see cref="T:System.Web.UI.WebControls.TreeNodeBinding" /> objects in the <see cref="T:System.Web.UI.WebControls.TreeView" /> control. This class cannot be inherited.</summary>
    </member>
    <member name="M:System.Web.UI.WebControls.TreeNodeBindingCollection.Add(System.Web.UI.WebControls.TreeNodeBinding)">
      <summary>Appends the specified <see cref="T:System.Web.UI.WebControls.TreeNodeBinding" /> object to the end of the <see cref="T:System.Web.UI.WebControls.TreeNodeBindingCollection" /> object.</summary>
      <returns>The zero-based index of the location of the added <see cref="T:System.Web.UI.WebControls.TreeNodeBinding" /> in the <see cref="T:System.Web.UI.WebControls.TreeNodeBindingCollection" />.</returns>
      <param name="binding">The <see cref="T:System.Web.UI.WebControls.TreeNodeBinding" /> to append. </param>
    </member>
    <member name="M:System.Web.UI.WebControls.TreeNodeBindingCollection.Contains(System.Web.UI.WebControls.TreeNodeBinding)">
      <summary>Determines whether the specified <see cref="T:System.Web.UI.WebControls.TreeNodeBinding" /> object is in the collection.</summary>
      <returns>true if the <see cref="T:System.Web.UI.WebControls.TreeNodeBinding" /> is in the collection; otherwise, false.</returns>
      <param name="binding">The <see cref="T:System.Web.UI.WebControls.TreeNodeBinding" /> to find.</param>
    </member>
    <member name="M:System.Web.UI.WebControls.TreeNodeBindingCollection.CopyTo(System.Web.UI.WebControls.TreeNodeBinding[],System.Int32)">
      <summary>Copies all the items from the <see cref="T:System.Web.UI.WebControls.TreeNodeBindingCollection" /> object to a compatible one-dimensional array of <see cref="T:System.Web.UI.WebControls.TreeNodeBinding" /> objects, starting at the specified index in the target array.</summary>
      <param name="bindingArray">A zero-based array of <see cref="T:System.Web.UI.WebControls.TreeNodeBinding" /> objects that receives the copied items from the <see cref="T:System.Web.UI.WebControls.TreeNodeBindingCollection" />.</param>
      <param name="index">The position in <paramref name="bindingArray" /> at which to start receiving the copied content.</param>
    </member>
    <member name="M:System.Web.UI.WebControls.TreeNodeBindingCollection.IndexOf(System.Web.UI.WebControls.TreeNodeBinding)">
      <summary>Determines the index of the specified <see cref="T:System.Web.UI.WebControls.TreeNodeBinding" /> object in the collection.</summary>
      <returns>The zero-based index of the first occurrence of <paramref name="binding" /> within the <see cref="T:System.Web.UI.WebControls.TreeNodeBindingCollection" />, if found; otherwise, -1.</returns>
      <param name="binding">The <see cref="T:System.Web.UI.WebControls.TreeNodeBinding" /> to locate.</param>
    </member>
    <member name="M:System.Web.UI.WebControls.TreeNodeBindingCollection.Insert(System.Int32,System.Web.UI.WebControls.TreeNodeBinding)">
      <summary>Inserts the specified <see cref="T:System.Web.UI.WebControls.TreeNodeBinding" /> object into the <see cref="T:System.Web.UI.WebControls.TreeNodeBindingCollection" /> object at the specified index location.</summary>
      <param name="index">The zero-based index location at which to insert the <see cref="T:System.Web.UI.WebControls.TreeNodeBinding" />. </param>
      <param name="binding">The <see cref="T:System.Web.UI.WebControls.TreeNodeBinding" /> to insert. </param>
    </member>
    <member name="P:System.Web.UI.WebControls.TreeNodeBindingCollection.Item(System.Int32)">
      <summary>Gets or sets the <see cref="T:System.Web.UI.WebControls.TreeNodeBinding" /> object at the specified index in the <see cref="T:System.Web.UI.WebControls.TreeNodeBindingCollection" /> object.</summary>
      <returns>The <see cref="T:System.Web.UI.WebControls.TreeNodeBinding" /> at the specified index in the <see cref="T:System.Web.UI.WebControls.TreeNodeBindingCollection" />.</returns>
      <param name="i">The zero-based index of the <see cref="T:System.Web.UI.WebControls.TreeNodeBinding" /> to retrieve. </param>
    </member>
    <member name="M:System.Web.UI.WebControls.TreeNodeBindingCollection.Remove(System.Web.UI.WebControls.TreeNodeBinding)">
      <summary>Removes the specified <see cref="T:System.Web.UI.WebControls.TreeNodeBinding" /> object from the <see cref="T:System.Web.UI.WebControls.TreeNodeBindingCollection" /> object.</summary>
      <param name="binding">The <see cref="T:System.Web.UI.WebControls.TreeNodeBinding" /> to remove. </param>
    </member>
    <member name="M:System.Web.UI.WebControls.TreeNodeBindingCollection.RemoveAt(System.Int32)">
      <summary>Removes the <see cref="T:System.Web.UI.WebControls.TreeNodeBinding" /> object at the specified index location from the <see cref="T:System.Web.UI.WebControls.TreeNodeBindingCollection" /> object.</summary>
      <param name="index">The zero-based index location of the <see cref="T:System.Web.UI.WebControls.TreeNodeBinding" /> to remove. </param>
    </member>
    <member name="T:System.Web.UI.WebControls.TreeNodeCollection">
      <summary>Represents a collection of <see cref="T:System.Web.UI.WebControls.TreeNode" /> objects in the <see cref="T:System.Web.UI.WebControls.TreeView" /> control. This class cannot be inherited.</summary>
    </member>
    <member name="M:System.Web.UI.WebControls.TreeNodeCollection.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Web.UI.WebControls.TreeNodeCollection" /> class using the default values.</summary>
    </member>
    <member name="M:System.Web.UI.WebControls.TreeNodeCollection.#ctor(System.Web.UI.WebControls.TreeNode)">
      <summary>Initializes a new instance of the <see cref="T:System.Web.UI.WebControls.TreeNodeCollection" /> class using the specified parent node (or owner).</summary>
      <param name="owner">The <see cref="T:System.Web.UI.WebControls.TreeNode" /> object that represents the parent node of the collection. </param>
    </member>
    <member name="M:System.Web.UI.WebControls.TreeNodeCollection.Add(System.Web.UI.WebControls.TreeNode)">
      <summary>Appends the specified <see cref="T:System.Web.UI.WebControls.TreeNode" /> object to the end of the <see cref="T:System.Web.UI.WebControls.TreeNodeCollection" /> object.</summary>
      <param name="child">The <see cref="T:System.Web.UI.WebControls.TreeNode" /> object to append. </param>
    </member>
    <member name="M:System.Web.UI.WebControls.TreeNodeCollection.AddAt(System.Int32,System.Web.UI.WebControls.TreeNode)">
      <summary>Inserts the specified <see cref="T:System.Web.UI.WebControls.TreeNode" /> object in a <see cref="T:System.Web.UI.WebControls.TreeNodeCollection" /> object at the specified index location.</summary>
      <param name="index">The zero-based index location at which to insert the <see cref="T:System.Web.UI.WebControls.TreeNode" /> object. </param>
      <param name="child">The <see cref="T:System.Web.UI.WebControls.TreeNode" /> object to add. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="child" /> is null.</exception>
    </member>
    <member name="M:System.Web.UI.WebControls.TreeNodeCollection.Clear">
      <summary>Empties the <see cref="T:System.Web.UI.WebControls.TreeNodeCollection" /> object.</summary>
    </member>
    <member name="M:System.Web.UI.WebControls.TreeNodeCollection.Contains(System.Web.UI.WebControls.TreeNode)">
      <summary>Determines whether the specified <see cref="T:System.Web.UI.WebControls.TreeNode" /> object is in the collection.</summary>
      <returns>true if the specified <see cref="T:System.Web.UI.WebControls.TreeNode" /> object is contained in the collection; otherwise, false.</returns>
      <param name="c">The <see cref="T:System.Web.UI.WebControls.TreeNode" /> object to find. </param>
    </member>
    <member name="M:System.Web.UI.WebControls.TreeNodeCollection.CopyTo(System.Web.UI.WebControls.TreeNode[],System.Int32)">
      <summary>Copies all the items from the <see cref="T:System.Web.UI.WebControls.TreeNodeCollection" /> object to a compatible one-dimensional array of <see cref="T:System.Web.UI.WebControls.TreeNode" /> objects, starting at the specified index in the target array.</summary>
      <param name="nodeArray">A zero-based array of <see cref="T:System.Web.UI.WebControls.TreeNode" /> objects that receives the copied items from the <see cref="T:System.Web.UI.WebControls.TreeNodeCollection" />.</param>
      <param name="index">The position in the target array at which to start receiving the copied content.</param>
    </member>
    <member name="P:System.Web.UI.WebControls.TreeNodeCollection.Count">
      <summary>Gets the number of items in the <see cref="T:System.Web.UI.WebControls.TreeNodeCollection" /> object.</summary>
      <returns>The number of items in the <see cref="T:System.Web.UI.WebControls.TreeNodeCollection" />.</returns>
    </member>
    <member name="M:System.Web.UI.WebControls.TreeNodeCollection.GetEnumerator">
      <summary>Returns an enumerator that can be used to iterate through a <see cref="T:System.Web.UI.WebControls.TreeNodeCollection" /> object.</summary>
      <returns>An enumerator that can be used to iterate through the <see cref="T:System.Web.UI.WebControls.TreeNodeCollection" />.</returns>
    </member>
    <member name="M:System.Web.UI.WebControls.TreeNodeCollection.IndexOf(System.Web.UI.WebControls.TreeNode)">
      <summary>Determines the index of the specified <see cref="T:System.Web.UI.WebControls.TreeNode" /> object.</summary>
      <returns>The zero-based index of the first occurrence of <paramref name="value" /> within the <see cref="T:System.Web.UI.WebControls.TreeNodeCollection" />, if found; otherwise, -1.</returns>
      <param name="value">The <see cref="T:System.Web.UI.WebControls.TreeNode" /> object to locate. </param>
    </member>
    <member name="P:System.Web.UI.WebControls.TreeNodeCollection.IsSynchronized">
      <summary>Gets a value indicating whether access to the <see cref="T:System.Web.UI.WebControls.TreeNodeCollection" /> is synchronized (thread safe).</summary>
      <returns>false.</returns>
    </member>
    <member name="P:System.Web.UI.WebControls.TreeNodeCollection.Item(System.Int32)">
      <summary>Gets the <see cref="T:System.Web.UI.WebControls.TreeNode" /> object at the specified index in the <see cref="T:System.Web.UI.WebControls.TreeNodeCollection" /> object.</summary>
      <returns>The <see cref="T:System.Web.UI.WebControls.TreeNode" /> object at the specified index in the <see cref="T:System.Web.UI.WebControls.TreeNodeCollection" />.</returns>
      <param name="index">The zero-based index of the <see cref="T:System.Web.UI.WebControls.TreeNode" /> object to retrieve. </param>
    </member>
    <member name="M:System.Web.UI.WebControls.TreeNodeCollection.Remove(System.Web.UI.WebControls.TreeNode)">
      <summary>Removes the specified <see cref="T:System.Web.UI.WebControls.TreeNode" /> object from the <see cref="T:System.Web.UI.WebControls.TreeNodeCollection" /> object.</summary>
      <param name="value">The <see cref="T:System.Web.UI.WebControls.TreeNode" /> object to remove. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="value" /> is null.</exception>
    </member>
    <member name="M:System.Web.UI.WebControls.TreeNodeCollection.RemoveAt(System.Int32)">
      <summary>Removes the <see cref="T:System.Web.UI.WebControls.TreeNode" /> object at the specified index location from the <see cref="T:System.Web.UI.WebControls.TreeNodeCollection" /> object.</summary>
      <param name="index">The zero-based index location of the node to remove. </param>
    </member>
    <member name="P:System.Web.UI.WebControls.TreeNodeCollection.SyncRoot">
      <summary>Gets an object that can be used to synchronize access to the <see cref="T:System.Web.UI.WebControls.TreeNodeCollection" /> object.</summary>
      <returns>A <see cref="T:System.Object" /> that can be used to synchronize access to the <see cref="T:System.Web.UI.WebControls.TreeNodeCollection" />.</returns>
    </member>
    <member name="M:System.Web.UI.WebControls.TreeNodeCollection.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
      <summary>Copies all the items from the <see cref="T:System.Web.UI.WebControls.TreeNodeCollection" /> object to a compatible one-dimensional <see cref="T:System.Array" />, starting at the specified index in the target array.</summary>
      <param name="array">A zero-based <see cref="T:System.Array" /> object that receives the copied items from the <see cref="T:System.Web.UI.WebControls.TreeNodeCollection" />. </param>
      <param name="index">The position in the target array at which to start receiving the copied content. </param>
      <exception cref="T:System.ArgumentException">
        <paramref name="array" /> is not an array of <see cref="T:System.Web.UI.WebControls.TreeNode" /> objects.</exception>
    </member>
    <member name="P:System.Web.UI.WebControls.TreeNodeCollection.System#Web#UI#IStateManager#IsTrackingViewState">
      <summary>Gets a value indicating whether the <see cref="T:System.Web.UI.WebControls.TreeNodeCollection" /> object is saving changes to its view state.</summary>
      <returns>true if the control is marked to save its state; otherwise, false.</returns>
    </member>
    <member name="M:System.Web.UI.WebControls.TreeNodeCollection.System#Web#UI#IStateManager#LoadViewState(System.Object)">
      <summary>Loads the <see cref="T:System.Web.UI.WebControls.TreeNodeCollection" /> object's previously saved view state.</summary>
      <param name="state">A <see cref="T:System.Object" /> that contains the saved view state values. </param>
    </member>
    <member name="M:System.Web.UI.WebControls.TreeNodeCollection.System#Web#UI#IStateManager#SaveViewState">
      <summary>Saves the changes to view state to a <see cref="T:System.Object" />.</summary>
      <returns>The <see cref="T:System.Object" /> that contains the view state changes.</returns>
    </member>
    <member name="M:System.Web.UI.WebControls.TreeNodeCollection.System#Web#UI#IStateManager#TrackViewState">
      <summary>Instructs the <see cref="T:System.Web.UI.WebControls.TreeNodeCollection" /> to track changes to its view state.</summary>
    </member>
    <member name="T:System.Web.UI.WebControls.TreeNodeEventArgs">
      <summary>Provides data for the <see cref="E:System.Web.UI.WebControls.TreeView.TreeNodeCheckChanged" />, <see cref="E:System.Web.UI.WebControls.TreeView.TreeNodeCollapsed" />, <see cref="E:System.Web.UI.WebControls.TreeView.TreeNodeDataBound" />, <see cref="E:System.Web.UI.WebControls.TreeView.TreeNodeExpanded" />, and <see cref="E:System.Web.UI.WebControls.TreeView.TreeNodePopulate" /> events of the <see cref="T:System.Web.UI.WebControls.TreeView" /> control. This class cannot be inherited.</summary>
    </member>
    <member name="M:System.Web.UI.WebControls.TreeNodeEventArgs.#ctor(System.Web.UI.WebControls.TreeNode)">
      <summary>Initializes a new instance of the <see cref="T:System.Web.UI.WebControls.TreeNodeEventArgs" /> class using the specified <see cref="T:System.Web.UI.WebControls.TreeNode" /> object.</summary>
      <param name="node">A <see cref="T:System.Web.UI.WebControls.TreeNode" /> that represents the current node when the event is raised. </param>
    </member>
    <member name="P:System.Web.UI.WebControls.TreeNodeEventArgs.Node">
      <summary>Gets the node that raised the event.</summary>
      <returns>A <see cref="T:System.Web.UI.WebControls.TreeNode" /> that represents the node that raised the event.</returns>
    </member>
    <member name="T:System.Web.UI.WebControls.TreeNodeEventHandler">
      <summary>Represents the method that will handle the <see cref="E:System.Web.UI.WebControls.TreeView.TreeNodeCollapsed" />, <see cref="E:System.Web.UI.WebControls.TreeView.TreeNodeDataBound" />, <see cref="E:System.Web.UI.WebControls.TreeView.TreeNodeExpanded" />, or <see cref="E:System.Web.UI.WebControls.TreeView.TreeNodePopulate" /> event of the <see cref="T:System.Web.UI.WebControls.TreeView" /> control.</summary>
      <param name="sender">The source of the event.</param>
      <param name="e">A <see cref="T:System.Web.UI.WebControls.TreeNodeEventArgs" /> that contains the event data.</param>
    </member>
    <member name="T:System.Web.UI.WebControls.TreeNodeSelectAction">
      <summary>Represents the event or events to raise when a node in the <see cref="T:System.Web.UI.WebControls.TreeView" /> control is selected.</summary>
    </member>
    <member name="F:System.Web.UI.WebControls.TreeNodeSelectAction.Select">
      <summary>Raises the <see cref="E:System.Web.UI.WebControls.TreeView.SelectedNodeChanged" /> event when a node is selected.</summary>
    </member>
    <member name="F:System.Web.UI.WebControls.TreeNodeSelectAction.Expand">
      <summary>Raises the <see cref="E:System.Web.UI.WebControls.TreeView.TreeNodeExpanded" /> event when a node is selected.</summary>
    </member>
    <member name="F:System.Web.UI.WebControls.TreeNodeSelectAction.SelectExpand">
      <summary>Raises both the <see cref="E:System.Web.UI.WebControls.TreeView.SelectedNodeChanged" /> and <see cref="E:System.Web.UI.WebControls.TreeView.TreeNodeExpanded" /> events when a node is selected.</summary>
    </member>
    <member name="F:System.Web.UI.WebControls.TreeNodeSelectAction.None">
      <summary>Raises no events when a node is selected.</summary>
    </member>
    <member name="T:System.Web.UI.WebControls.TreeNodeStyle">
      <summary>Represents the style of a node in the <see cref="T:System.Web.UI.WebControls.TreeView" /> control.</summary>
    </member>
    <member name="M:System.Web.UI.WebControls.TreeNodeStyle.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Web.UI.WebControls.TreeNodeStyle" /> class.</summary>
    </member>
    <member name="M:System.Web.UI.WebControls.TreeNodeStyle.#ctor(System.Web.UI.StateBag)">
      <summary>Initializes a new instance of the <see cref="T:System.Web.UI.WebControls.TreeNodeStyle" /> class with the specified <see cref="T:System.Web.UI.StateBag" /> object information.</summary>
      <param name="bag">A <see cref="T:System.Web.UI.StateBag" /> that stores the style information.</param>
    </member>
    <member name="P:System.Web.UI.WebControls.TreeNodeStyle.ChildNodesPadding">
      <summary>Gets or sets the amount of space between a parent node and a child node to which the <see cref="T:System.Web.UI.WebControls.TreeNodeStyle" /> class is applied.</summary>
      <returns>The amount of space, in pixels, that is above and below the child nodes section of a parent node. The default is 0 pixels.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">The selected value is of type <see cref="F:System.Web.UI.WebControls.UnitType.Percentage" /> or is less than 0.</exception>
    </member>
    <member name="M:System.Web.UI.WebControls.TreeNodeStyle.CopyFrom(System.Web.UI.WebControls.Style)">
      <summary>Copies the style properties of the specified <see cref="T:System.Web.UI.WebControls.Style" /> object into the current <see cref="T:System.Web.UI.WebControls.TreeNodeStyle" /> object.</summary>
      <param name="s">The <see cref="T:System.Web.UI.WebControls.Style" /> to copy. </param>
    </member>
    <member name="P:System.Web.UI.WebControls.TreeNodeStyle.HorizontalPadding">
      <summary>Gets or sets the amount of space to the left and right of the text in the node.</summary>
      <returns>The amount of space, in pixels, that is to the left and right of the node's text. The default is 0 pixels.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">The selected value is of type <see cref="F:System.Web.UI.WebControls.UnitType.Percentage" /> or is less than 0.</exception>
    </member>
    <member name="P:System.Web.UI.WebControls.TreeNodeStyle.ImageUrl">
      <summary>Gets or sets the URL to an image that is displayed next to the node.</summary>
      <returns>The URL to a custom image that is displayed next to the node. The default is an empty string (""), which indicates that the <see cref="P:System.Web.UI.WebControls.TreeNodeStyle.ImageUrl" /> property is not set.</returns>
      <exception cref="T:System.ArgumentNullException">The selected value is null.</exception>
    </member>
    <member name="M:System.Web.UI.WebControls.TreeNodeStyle.MergeWith(System.Web.UI.WebControls.Style)">
      <summary>Combines the style properties of the specified <see cref="T:System.Web.UI.WebControls.Style" /> object with the style properties of the current <see cref="T:System.Web.UI.WebControls.TreeNodeStyle" /> object.</summary>
      <param name="s">The <see cref="T:System.Web.UI.WebControls.Style" /> that will merge with the current node's settings. </param>
    </member>
    <member name="P:System.Web.UI.WebControls.TreeNodeStyle.NodeSpacing">
      <summary>Gets or sets the amount of vertical spacing between the node to which the <see cref="T:System.Web.UI.WebControls.TreeNodeStyle" /> object is applied and its adjacent nodes.</summary>
      <returns>The amount of vertical space, in pixels, between the node to which the <see cref="T:System.Web.UI.WebControls.TreeNodeStyle" /> is applied and its adjacent nodes at the same level. The default is 0 pixels.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">The selected value is of type <see cref="F:System.Web.UI.WebControls.UnitType.Percentage" /> or is less than 0.</exception>
    </member>
    <member name="M:System.Web.UI.WebControls.TreeNodeStyle.Reset">
      <summary>Returns the <see cref="T:System.Web.UI.WebControls.TreeNodeStyle" /> object to its original state.</summary>
    </member>
    <member name="P:System.Web.UI.WebControls.TreeNodeStyle.VerticalPadding">
      <summary>Gets or sets the amount of space above and below the text for a node.</summary>
      <returns>The amount of space, in pixels, above and below a node's text. The default is 0 pixels.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">The selected value is of type <see cref="F:System.Web.UI.WebControls.UnitType.Percentage" /> or is less than 0.</exception>
    </member>
    <member name="T:System.Web.UI.WebControls.TreeNodeStyleCollection">
      <summary>Represents a collection of <see cref="T:System.Web.UI.WebControls.TreeNodeStyle" /> objects that is in a <see cref="T:System.Web.UI.WebControls.TreeView" /> control.</summary>
    </member>
    <member name="M:System.Web.UI.WebControls.TreeNodeStyleCollection.Add(System.Web.UI.WebControls.TreeNodeStyle)">
      <summary>Appends the specified <see cref="T:System.Web.UI.WebControls.TreeNodeStyle" /> object to the end of the <see cref="T:System.Web.UI.WebControls.TreeNodeStyleCollection" /> object.</summary>
      <returns>The position into which the new <see cref="T:System.Web.UI.WebControls.TreeNodeStyle" /> was inserted.</returns>
      <param name="style">The <see cref="T:System.Web.UI.WebControls.TreeNodeStyle" /> to append. </param>
    </member>
    <member name="M:System.Web.UI.WebControls.TreeNodeStyleCollection.Contains(System.Web.UI.WebControls.TreeNodeStyle)">
      <summary>Determines whether the specified <see cref="T:System.Web.UI.WebControls.TreeNodeStyle" /> object is in the collection.</summary>
      <returns>true, if the specified <see cref="T:System.Web.UI.WebControls.TreeNodeStyle" /> object is contained in the collection; otherwise, false.</returns>
      <param name="style">The <see cref="T:System.Web.UI.WebControls.TreeNodeStyle" /> to find. </param>
    </member>
    <member name="M:System.Web.UI.WebControls.TreeNodeStyleCollection.CopyTo(System.Web.UI.WebControls.TreeNodeStyle[],System.Int32)">
      <summary>Copies all the items from the <see cref="T:System.Web.UI.WebControls.TreeNodeStyleCollection" /> object to a compatible one-dimensional array of <see cref="T:System.Web.UI.WebControls.TreeNodeStyle" /> objects, starting at the specified index in the target array.</summary>
      <param name="styleArray">A zero-based array of <see cref="T:System.Web.UI.WebControls.TreeNodeStyle" /> objects that receives the copied items from the <see cref="T:System.Web.UI.WebControls.TreeNodeStyleCollection" />.</param>
      <param name="index">The position in the target array at which to start receiving the copied content.</param>
    </member>
    <member name="M:System.Web.UI.WebControls.TreeNodeStyleCollection.IndexOf(System.Web.UI.WebControls.TreeNodeStyle)">
      <summary>Determines the index of the specified <see cref="T:System.Web.UI.WebControls.TreeNodeStyle" /> object in the collection.</summary>
      <returns>The zero-based index of the first occurrence of <paramref name="style" /> within the <see cref="T:System.Web.UI.WebControls.TreeNodeStyleCollection" />, if found; otherwise, -1.</returns>
      <param name="style">The <see cref="T:System.Web.UI.WebControls.TreeNodeStyle" /> to locate.</param>
    </member>
    <member name="M:System.Web.UI.WebControls.TreeNodeStyleCollection.Insert(System.Int32,System.Web.UI.WebControls.TreeNodeStyle)">
      <summary>Inserts the specified <see cref="T:System.Web.UI.WebControls.TreeNodeStyle" /> object into the <see cref="T:System.Web.UI.WebControls.TreeNodeStyleCollection" /> object at the specified index location.</summary>
      <param name="index">The zero-based index location at which to insert the <see cref="T:System.Web.UI.WebControls.TreeNodeStyle" />. </param>
      <param name="style">The <see cref="T:System.Web.UI.WebControls.TreeNodeStyle" /> to insert. </param>
    </member>
    <member name="P:System.Web.UI.WebControls.TreeNodeStyleCollection.Item(System.Int32)">
      <summary>Gets or sets the <see cref="T:System.Web.UI.WebControls.TreeNodeStyle" /> object at the specified index in the <see cref="T:System.Web.UI.WebControls.TreeNodeStyleCollection" /> object.</summary>
      <returns>The <see cref="T:System.Web.UI.WebControls.TreeNodeStyle" /> at the specified index in the <see cref="T:System.Web.UI.WebControls.TreeNodeStyleCollection" />.</returns>
      <param name="i">The zero-based index of the <see cref="T:System.Web.UI.WebControls.TreeNodeStyle" /> to retrieve. </param>
    </member>
    <member name="M:System.Web.UI.WebControls.TreeNodeStyleCollection.Remove(System.Web.UI.WebControls.TreeNodeStyle)">
      <summary>Removes the specified <see cref="T:System.Web.UI.WebControls.TreeNodeStyle" /> object from the <see cref="T:System.Web.UI.WebControls.TreeNodeStyleCollection" /> object.</summary>
      <param name="style">The <see cref="T:System.Web.UI.WebControls.TreeNodeStyle" /> to remove. </param>
    </member>
    <member name="M:System.Web.UI.WebControls.TreeNodeStyleCollection.RemoveAt(System.Int32)">
      <summary>Removes the <see cref="T:System.Web.UI.WebControls.TreeNodeStyle" /> object at the specified index location from the <see cref="T:System.Web.UI.WebControls.TreeNodeStyleCollection" /> object.</summary>
      <param name="index">The zero-based index location of the <see cref="T:System.Web.UI.WebControls.TreeNodeStyle" /> to remove. </param>
    </member>
    <member name="T:System.Web.UI.WebControls.TreeNodeTypes">
      <summary>Represents the different node types (leaf, parent, and root) in the <see cref="T:System.Web.UI.WebControls.TreeView" /> control.</summary>
    </member>
    <member name="F:System.Web.UI.WebControls.TreeNodeTypes.None">
      <summary>No nodes.</summary>
    </member>
    <member name="F:System.Web.UI.WebControls.TreeNodeTypes.Root">
      <summary>A node with no parent node and one or more child nodes.</summary>
    </member>
    <member name="F:System.Web.UI.WebControls.TreeNodeTypes.Parent">
      <summary>A node with a parent node and one or more child nodes.</summary>
    </member>
    <member name="F:System.Web.UI.WebControls.TreeNodeTypes.Leaf">
      <summary>A node with no child nodes.</summary>
    </member>
    <member name="F:System.Web.UI.WebControls.TreeNodeTypes.All">
      <summary>All nodes.</summary>
    </member>
    <member name="T:System.Web.UI.WebControls.TreeView">
      <summary>Displays hierarchical data, such as a table of contents, in a tree structure.</summary>
    </member>
    <member name="M:System.Web.UI.WebControls.TreeView.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Web.UI.WebControls.TreeView" /> class.</summary>
    </member>
    <member name="M:System.Web.UI.WebControls.TreeView.AddAttributesToRender(System.Web.UI.HtmlTextWriter)">
      <summary>Adds HTML attributes and styles that need to be rendered to the specified <see cref="T:System.Web.UI.HtmlTextWriter" /> control.</summary>
      <param name="writer">An <see cref="T:System.Web.UI.HtmlTextWriter" /> that represents the output stream to render HTML content on the client. </param>
    </member>
    <member name="P:System.Web.UI.WebControls.TreeView.AutoGenerateDataBindings">
      <summary>Gets or sets a value indicating whether the <see cref="T:System.Web.UI.WebControls.TreeView" /> control automatically generates tree node bindings.</summary>
      <returns>true to have the <see cref="T:System.Web.UI.WebControls.TreeView" /> control automatically generate tree node bindings; otherwise, false. The default is true.</returns>
    </member>
    <member name="P:System.Web.UI.WebControls.TreeView.CheckedNodes">
      <summary>Gets a collection of <see cref="T:System.Web.UI.WebControls.TreeNode" /> objects that represent the nodes in the <see cref="T:System.Web.UI.WebControls.TreeView" /> control that display a selected check box.</summary>
      <returns>A <see cref="T:System.Web.UI.WebControls.TreeNodeCollection" /> that contains the nodes in the <see cref="T:System.Web.UI.WebControls.TreeView" /> that display a selected check box.</returns>
    </member>
    <member name="M:System.Web.UI.WebControls.TreeView.CollapseAll">
      <summary>Closes every node in the tree.</summary>
    </member>
    <member name="P:System.Web.UI.WebControls.TreeView.CollapseImageToolTip">
      <summary>Gets or sets the ToolTip for the image that is displayed for the collapsible node indicator.</summary>
      <returns>The ToolTip for the image displayed for the collapsible node indicator.</returns>
    </member>
    <member name="P:System.Web.UI.WebControls.TreeView.CollapseImageUrl">
      <summary>Gets or sets the URL to a custom image for the collapsible node indicator.</summary>
      <returns>The URL to a custom image to display for collapsible nodes. The default is an empty string (""), which displays the default minus sign (-) image.</returns>
    </member>
    <member name="M:System.Web.UI.WebControls.TreeView.CreateControlCollection">
      <summary>Creates a collection to store child controls.</summary>
      <returns>Always returns an <see cref="T:System.Web.UI.EmptyControlCollection" />.</returns>
    </member>
    <member name="M:System.Web.UI.WebControls.TreeView.CreateNode">
      <summary>Returns a new instance of the <see cref="T:System.Web.UI.WebControls.TreeNode" /> class. The <see cref="M:System.Web.UI.WebControls.TreeView.CreateNode" /> is a helper method.</summary>
      <returns>A new instance of the <see cref="T:System.Web.UI.WebControls.TreeNode" />.</returns>
    </member>
    <member name="M:System.Web.UI.WebControls.TreeView.DataBind">
      <summary>Calls the <see cref="M:System.Web.UI.WebControls.BaseDataBoundControl.DataBind" /> method of the base class. </summary>
    </member>
    <member name="P:System.Web.UI.WebControls.TreeView.DataBindings">
      <summary>Gets a collection of <see cref="T:System.Web.UI.WebControls.TreeNodeBinding" /> objects that define the relationship between a data item and the node that it is binding to.</summary>
      <returns>A <see cref="T:System.Web.UI.WebControls.TreeNodeBindingCollection" /> that represents the relationship between a data item and the node that it is binding to.</returns>
    </member>
    <member name="P:System.Web.UI.WebControls.TreeView.EnableClientScript">
      <summary>Gets or sets a value indicating whether the <see cref="T:System.Web.UI.WebControls.TreeView" /> control renders client-side script to handle expanding and collapsing events.</summary>
      <returns>true to render the client-side script on compatible browsers; otherwise, false. The default is true.</returns>
    </member>
    <member name="M:System.Web.UI.WebControls.TreeView.ExpandAll">
      <summary>Opens every node in the tree.</summary>
    </member>
    <member name="P:System.Web.UI.WebControls.TreeView.ExpandDepth">
      <summary>Gets or sets the number of levels that are expanded when a <see cref="T:System.Web.UI.WebControls.TreeView" /> control is displayed for the first time.</summary>
      <returns>The depth to display when the <see cref="T:System.Web.UI.WebControls.TreeView" /> is initially displayed. The default is -1, which displays all the nodes.</returns>
    </member>
    <member name="P:System.Web.UI.WebControls.TreeView.ExpandImageToolTip">
      <summary>Gets or sets the ToolTip for the image that is displayed for the expandable node indicator.</summary>
      <returns>The ToolTip for the image displayed for the expandable node indicator.</returns>
    </member>
    <member name="P:System.Web.UI.WebControls.TreeView.ExpandImageUrl">
      <summary>Gets or sets the URL to a custom image for the expandable node indicator.</summary>
      <returns>The URL to a custom image to display for expandable nodes. The default is an empty string (""), which displays the default plus sign (+) image.</returns>
    </member>
    <member name="M:System.Web.UI.WebControls.TreeView.FindNode(System.String)">
      <summary>Retrieves the <see cref="T:System.Web.UI.WebControls.TreeNode" /> object in the <see cref="T:System.Web.UI.WebControls.TreeView" /> control at the specified value path.</summary>
      <returns>The <see cref="T:System.Web.UI.WebControls.TreeNode" /> at the specified value path.</returns>
      <param name="valuePath">The value path of a node. </param>
    </member>
    <member name="M:System.Web.UI.WebControls.TreeView.GetCallbackResult">
      <summary>Returns the result of a callback event that targets a control.</summary>
      <returns>The results of the callback.</returns>
    </member>
    <member name="P:System.Web.UI.WebControls.TreeView.HoverNodeStyle">
      <summary>Gets a reference to the <see cref="T:System.Web.UI.WebControls.TreeNodeStyle" /> object that allows you to set the appearance of a node when the mouse pointer is positioned over it.</summary>
      <returns>A reference to the <see cref="T:System.Web.UI.WebControls.TreeNodeStyle" /> that represents the style of a node when the mouse pointer is positioned over it.</returns>
    </member>
    <member name="P:System.Web.UI.WebControls.TreeView.ImageSet">
      <summary>Gets or sets the group of images to use for the <see cref="T:System.Web.UI.WebControls.TreeView" /> control.</summary>
      <returns>One of the <see cref="T:System.Web.UI.WebControls.TreeViewImageSet" /> values. The default is TreeViewImageSet.Custom.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">The specified image set is not one of the <see cref="T:System.Web.UI.WebControls.TreeViewImageSet" /> values. </exception>
    </member>
    <member name="P:System.Web.UI.WebControls.TreeView.LeafNodeStyle">
      <summary>Gets a reference to the <see cref="T:System.Web.UI.WebControls.TreeNodeStyle" /> object that allows you to set the appearance of leaf nodes.</summary>
      <returns>A reference to the <see cref="T:System.Web.UI.WebControls.TreeNodeStyle" /> that represents the style of the leaf nodes in the <see cref="T:System.Web.UI.WebControls.TreeView" />.</returns>
    </member>
    <member name="P:System.Web.UI.WebControls.TreeView.LevelStyles">
      <summary>Gets a collection of <see cref="T:System.Web.UI.WebControls.Style" /> objects that represent the node styles at the individual levels of the tree.</summary>
      <returns>A <see cref="T:System.Web.UI.WebControls.StyleCollection" /> that represents the node styles at the individual levels of the tree. </returns>
    </member>
    <member name="P:System.Web.UI.WebControls.TreeView.LineImagesFolder">
      <summary>Gets or sets the path to a folder that contains the line images that are used to connect child nodes to parent nodes.</summary>
      <returns>The path to a folder that contains the line images used to connect nodes. The default is an empty string (""), which indicates that the <see cref="P:System.Web.UI.WebControls.TreeView.LineImagesFolder" /> property is not set.</returns>
    </member>
    <member name="M:System.Web.UI.WebControls.TreeView.LoadPostData(System.String,System.Collections.Specialized.NameValueCollection)">
      <summary>Processes postback data for the <see cref="T:System.Web.UI.WebControls.TreeView" /> control.</summary>
      <returns>true, if the <see cref="T:System.Web.UI.WebControls.TreeView" /> control's state changes as a result of the postback event; otherwise, false.</returns>
      <param name="postDataKey">The key identifier for the control. </param>
      <param name="postCollection">The collection of all incoming name values. </param>
    </member>
    <member name="M:System.Web.UI.WebControls.TreeView.LoadViewState(System.Object)">
      <summary>Loads the previously saved view state of the <see cref="T:System.Web.UI.WebControls.TreeView" /> control.</summary>
      <param name="state">A object that contains the saved view state values for the control. </param>
    </member>
    <member name="P:System.Web.UI.WebControls.TreeView.MaxDataBindDepth">
      <summary>Gets or sets the maximum number of tree levels to bind to the <see cref="T:System.Web.UI.WebControls.TreeView" /> control.</summary>
      <returns>The maximum number of tree levels to bind to the <see cref="T:System.Web.UI.WebControls.TreeView" /> control. The default is -1, which binds all the tree levels in the data source to the control.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">The selected value is less than -1.</exception>
    </member>
    <member name="P:System.Web.UI.WebControls.TreeView.NodeIndent">
      <summary>Gets or sets the indentation amount (in pixels) for the child nodes of the <see cref="T:System.Web.UI.WebControls.TreeView" /> control.</summary>
      <returns>The amount of space (in pixels) between a child node's left edge and its parent node's left edge. The default is 20.</returns>
    </member>
    <member name="P:System.Web.UI.WebControls.TreeView.Nodes">
      <summary>Gets a collection of <see cref="T:System.Web.UI.WebControls.TreeNode" /> objects that represents the root nodes in the <see cref="T:System.Web.UI.WebControls.TreeView" /> control.</summary>
      <returns>A <see cref="T:System.Web.UI.WebControls.TreeNodeCollection" /> that contains the root nodes in the <see cref="T:System.Web.UI.WebControls.TreeView" />.</returns>
    </member>
    <member name="P:System.Web.UI.WebControls.TreeView.NodeStyle">
      <summary>Gets a reference to the <see cref="T:System.Web.UI.WebControls.TreeNodeStyle" /> object that allows you to set the default appearance of the nodes in the <see cref="T:System.Web.UI.WebControls.TreeView" /> control.</summary>
      <returns>A reference to the <see cref="T:System.Web.UI.WebControls.TreeNodeStyle" /> that represents the default style of a node.</returns>
    </member>
    <member name="P:System.Web.UI.WebControls.TreeView.NodeWrap">
      <summary>Gets or sets a value indicating whether text wraps in a node when the node runs out of space.</summary>
      <returns>true to wrap the text; otherwise, false. The default is false.</returns>
    </member>
    <member name="P:System.Web.UI.WebControls.TreeView.NoExpandImageUrl">
      <summary>Gets or sets the URL to a custom image for the non-expandable node indicator.</summary>
      <returns>The URL to a custom image to display for non-expandable nodes. The default is an empty string (""), which displays the default blank image.</returns>
    </member>
    <member name="M:System.Web.UI.WebControls.TreeView.OnInit(System.EventArgs)">
      <summary>Raises the <see cref="E:System.Web.UI.Control.Init" /> event.</summary>
      <param name="e">An <see cref="T:System.EventArgs" /> that contains the event data.</param>
    </member>
    <member name="M:System.Web.UI.WebControls.TreeView.OnPreRender(System.EventArgs)">
      <summary>Raises the <see cref="E:System.Web.UI.Control.PreRender" /> event.</summary>
      <param name="e">An <see cref="T:System.EventArgs" /> that contains event data. </param>
    </member>
    <member name="M:System.Web.UI.WebControls.TreeView.OnSelectedNodeChanged(System.EventArgs)">
      <summary>Raises the <see cref="E:System.Web.UI.WebControls.TreeView.SelectedNodeChanged" /> event of the <see cref="T:System.Web.UI.WebControls.TreeView" /> control.</summary>
      <param name="e">An <see cref="T:System.EventArgs" /> that contains event data. </param>
    </member>
    <member name="M:System.Web.UI.WebControls.TreeView.OnTreeNodeCheckChanged(System.Web.UI.WebControls.TreeNodeEventArgs)">
      <summary>Raises the <see cref="E:System.Web.UI.WebControls.TreeView.TreeNodeCheckChanged" /> event of the <see cref="T:System.Web.UI.WebControls.TreeView" /> control.</summary>
      <param name="e">A <see cref="T:System.Web.UI.WebControls.TreeNodeEventArgs" /> that contains event data. </param>
    </member>
    <member name="M:System.Web.UI.WebControls.TreeView.OnTreeNodeCollapsed(System.Web.UI.WebControls.TreeNodeEventArgs)">
      <summary>Raises the <see cref="E:System.Web.UI.WebControls.TreeView.TreeNodeCollapsed" /> event of the <see cref="T:System.Web.UI.WebControls.TreeView" /> control.</summary>
      <param name="e">A <see cref="T:System.Web.UI.WebControls.TreeNodeEventArgs" /> that contains event data. </param>
    </member>
    <member name="M:System.Web.UI.WebControls.TreeView.OnTreeNodeDataBound(System.Web.UI.WebControls.TreeNodeEventArgs)">
      <summary>Raises the <see cref="E:System.Web.UI.WebControls.TreeView.TreeNodeDataBound" /> event of the <see cref="T:System.Web.UI.WebControls.TreeView" /> control.</summary>
      <param name="e">A <see cref="T:System.Web.UI.WebControls.TreeNodeEventArgs" /> that contains event data. </param>
    </member>
    <member name="M:System.Web.UI.WebControls.TreeView.OnTreeNodeExpanded(System.Web.UI.WebControls.TreeNodeEventArgs)">
      <summary>Raises the <see cref="E:System.Web.UI.WebControls.TreeView.TreeNodeExpanded" /> event of the <see cref="T:System.Web.UI.WebControls.TreeView" /> control.</summary>
      <param name="e">A <see cref="T:System.Web.UI.WebControls.TreeNodeEventArgs" /> that contains event data. </param>
    </member>
    <member name="M:System.Web.UI.WebControls.TreeView.OnTreeNodePopulate(System.Web.UI.WebControls.TreeNodeEventArgs)">
      <summary>Raises the <see cref="E:System.Web.UI.WebControls.TreeView.TreeNodePopulate" /> event of the <see cref="T:System.Web.UI.WebControls.TreeView" /> control.</summary>
      <param name="e">A <see cref="T:System.Web.UI.WebControls.TreeNodeEventArgs" /> that contains event data. </param>
    </member>
    <member name="P:System.Web.UI.WebControls.TreeView.ParentNodeStyle">
      <summary>Gets a reference to the <see cref="T:System.Web.UI.WebControls.TreeNodeStyle" /> object that allows you to set the appearance of parent nodes in the <see cref="T:System.Web.UI.WebControls.TreeView" /> control.</summary>
      <returns>A reference to the <see cref="T:System.Web.UI.WebControls.TreeNodeStyle" /> that represents the style of the parent nodes in the <see cref="T:System.Web.UI.WebControls.TreeView" />.</returns>
    </member>
    <member name="P:System.Web.UI.WebControls.TreeView.PathSeparator">
      <summary>Gets or sets the character that is used to delimit the node values that are specified by the <see cref="P:System.Web.UI.WebControls.TreeNode.ValuePath" /> property.</summary>
      <returns>The character used to delimit the node values specified in the <see cref="P:System.Web.UI.WebControls.TreeNode.ValuePath" /> property. The default is a slash mark (/).</returns>
    </member>
    <member name="M:System.Web.UI.WebControls.TreeView.PerformDataBinding">
      <summary>Creates all the nodes based on the data source.</summary>
    </member>
    <member name="P:System.Web.UI.WebControls.TreeView.PopulateNodesFromClient">
      <summary>Gets or sets a value indicating whether node data is populated on demand from the client.</summary>
      <returns>true to populate tree node data on demand from the client; otherwise, false. The default is true.</returns>
    </member>
    <member name="M:System.Web.UI.WebControls.TreeView.RaiseCallbackEvent(System.String)">
      <summary>Raises the callback event using the specified arguments. </summary>
      <param name="eventArgument">A string that represents an optional event argument to pass to the event handler.</param>
    </member>
    <member name="M:System.Web.UI.WebControls.TreeView.RaisePostBackEvent(System.String)">
      <summary>Enables the <see cref="T:System.Web.UI.WebControls.TreeView" /> control to process an event that is raised when a form is posted to the server. The <see cref="M:System.Web.UI.WebControls.TreeView.RaisePostBackEvent(System.String)" /> method is a helper method for the <see cref="M:System.Web.UI.WebControls.TreeView.System#Web#UI#ICallbackEventHandler#RaiseCallbackEvent(System.String)" /> method.</summary>
      <param name="eventArgument">A string that represents an optional event argument to pass to the event handler. </param>
    </member>
    <member name="M:System.Web.UI.WebControls.TreeView.RaisePostDataChangedEvent">
      <summary>Signals the <see cref="T:System.Web.UI.WebControls.TreeView" /> control to notify the ASP.NET application that the state of the control has changed.</summary>
    </member>
    <member name="M:System.Web.UI.WebControls.TreeView.RenderBeginTag(System.Web.UI.HtmlTextWriter)">
      <summary>Renders the HTML opening tag of the control to the specified writer.  </summary>
      <param name="writer">An <see cref="T:System.Web.UI.HtmlTextWriter" /> that represents the output stream to render HTML content on the client. </param>
    </member>
    <member name="M:System.Web.UI.WebControls.TreeView.RenderContents(System.Web.UI.HtmlTextWriter)">
      <summary>Renders the nodes in the <see cref="T:System.Web.UI.WebControls.TreeView" /> control.</summary>
      <param name="writer">The <see cref="T:System.Web.UI.HtmlTextWriter" /> that represents the output stream used to write content to a Web page. </param>
    </member>
    <member name="M:System.Web.UI.WebControls.TreeView.RenderEndTag(System.Web.UI.HtmlTextWriter)">
      <summary>Renders the HTML closing tag of the control to the specified writer.</summary>
      <param name="writer">An <see cref="T:System.Web.UI.HtmlTextWriter" /> that represents the output stream to render HTML content on the client. </param>
    </member>
    <member name="P:System.Web.UI.WebControls.TreeView.RootNodeStyle">
      <summary>Gets a reference to the <see cref="T:System.Web.UI.WebControls.TreeNodeStyle" /> object that allows you to set the appearance of the root node in the <see cref="T:System.Web.UI.WebControls.TreeView" /> control.</summary>
      <returns>A reference to the <see cref="T:System.Web.UI.WebControls.TreeNodeStyle" /> that represents the style of the root node in the <see cref="T:System.Web.UI.WebControls.TreeView" />.</returns>
    </member>
    <member name="M:System.Web.UI.WebControls.TreeView.SaveViewState">
      <summary>Saves the state of the <see cref="T:System.Web.UI.WebControls.TreeView" /> control.</summary>
      <returns>The server control's current view state; otherwise, null, if there is no view state associated with the control.</returns>
    </member>
    <member name="P:System.Web.UI.WebControls.TreeView.SelectedNode">
      <summary>Gets a <see cref="T:System.Web.UI.WebControls.TreeNode" /> object that represents the selected node in the <see cref="T:System.Web.UI.WebControls.TreeView" /> control.</summary>
      <returns>A <see cref="T:System.Web.UI.WebControls.TreeNode" /> that represents the selected node in the <see cref="T:System.Web.UI.WebControls.TreeView" />.</returns>
    </member>
    <member name="E:System.Web.UI.WebControls.TreeView.SelectedNodeChanged">
      <summary>Occurs when a node is selected in the <see cref="T:System.Web.UI.WebControls.TreeView" /> control.</summary>
    </member>
    <member name="P:System.Web.UI.WebControls.TreeView.SelectedNodeStyle">
      <summary>Gets the <see cref="T:System.Web.UI.WebControls.TreeNodeStyle" /> object that controls the appearance of the selected node in the <see cref="T:System.Web.UI.WebControls.TreeView" /> control.</summary>
      <returns>A <see cref="T:System.Web.UI.WebControls.TreeNodeStyle" /> that represents the style of the selected node in the <see cref="T:System.Web.UI.WebControls.TreeView" /> control. The default is null, which indicates that the <see cref="P:System.Web.UI.WebControls.TreeView.SelectedNodeStyle" /> property is not set.</returns>
    </member>
    <member name="P:System.Web.UI.WebControls.TreeView.SelectedValue">
      <summary>Gets the value of the selected node.</summary>
      <returns>The value of the selected node.</returns>
    </member>
    <member name="M:System.Web.UI.WebControls.TreeView.SetNodeDataBound(System.Web.UI.WebControls.TreeNode,System.Boolean)">
      <summary>Allows a derived class to set whether the specified <see cref="T:System.Web.UI.WebControls.TreeNode" /> control is data-bound.</summary>
      <param name="node">The <see cref="T:System.Web.UI.WebControls.TreeNode" /> to set. </param>
      <param name="dataBound">true to set the node as data-bound; otherwise, false. </param>
    </member>
    <member name="M:System.Web.UI.WebControls.TreeView.SetNodeDataItem(System.Web.UI.WebControls.TreeNode,System.Object)">
      <summary>Allows a derived class to set the data item for the specified <see cref="T:System.Web.UI.WebControls.TreeNode" /> control.</summary>
      <param name="node">The <see cref="T:System.Web.UI.WebControls.TreeNode" /> to set. </param>
      <param name="dataItem">The data item for the <see cref="T:System.Web.UI.WebControls.TreeNode" />. </param>
    </member>
    <member name="M:System.Web.UI.WebControls.TreeView.SetNodeDataPath(System.Web.UI.WebControls.TreeNode,System.String)">
      <summary>Allows a derived class to set the data path for the specified <see cref="T:System.Web.UI.WebControls.TreeNode" /> control.</summary>
      <param name="node">The <see cref="T:System.Web.UI.WebControls.TreeNode" /> to set. </param>
      <param name="dataPath">The data path for the <see cref="T:System.Web.UI.WebControls.TreeNode" />. </param>
    </member>
    <member name="P:System.Web.UI.WebControls.TreeView.ShowCheckBoxes">
      <summary>Gets or sets a value indicating which node types will display a check box in the <see cref="T:System.Web.UI.WebControls.TreeView" /> control.</summary>
      <returns>A bitwise combination of the <see cref="T:System.Web.UI.WebControls.TreeNodeTypes" /> values. The default is TreeNodeType.None.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">The bitwise combination value is outside the range of the <see cref="T:System.Web.UI.WebControls.TreeNodeTypes" /> enumeration. </exception>
    </member>
    <member name="P:System.Web.UI.WebControls.TreeView.ShowExpandCollapse">
      <summary>Gets or sets a value indicating whether expansion node indicators are displayed.</summary>
      <returns>true to show the expansion node indicators; otherwise, false. The default is true.</returns>
    </member>
    <member name="P:System.Web.UI.WebControls.TreeView.ShowLines">
      <summary>Gets or sets a value indicating whether lines connecting child nodes to parent nodes are displayed.</summary>
      <returns>true to display lines connecting nodes; otherwise, false. The default is false.</returns>
    </member>
    <member name="P:System.Web.UI.WebControls.TreeView.SkipLinkText">
      <summary>Gets or sets a value that is used to render alternate text for screen readers to skip the content for the control. </summary>
      <returns>A string that the <see cref="T:System.Web.UI.WebControls.TreeView" /> renders as alternate text with an invisible image as a hint to screen readers. The default is "Skip Navigation Links." </returns>
    </member>
    <member name="M:System.Web.UI.WebControls.TreeView.System#Web#UI#ICallbackEventHandler#GetCallbackResult">
      <summary>Returns the result of a callback event that targets a control.</summary>
      <returns>The results of the callback.</returns>
    </member>
    <member name="M:System.Web.UI.WebControls.TreeView.System#Web#UI#ICallbackEventHandler#RaiseCallbackEvent(System.String)">
      <summary>Raises the callback event using the specified arguments.</summary>
      <param name="eventArgument">A string that represents an optional event argument to pass to the event handler.</param>
    </member>
    <member name="M:System.Web.UI.WebControls.TreeView.System#Web#UI#IPostBackDataHandler#LoadPostData(System.String,System.Collections.Specialized.NameValueCollection)">
      <summary>Processes postback data for the <see cref="T:System.Web.UI.WebControls.TreeView" /> control.</summary>
      <returns>true, if the <see cref="T:System.Web.UI.WebControls.TreeView" /> control's state changes as a result of the postback event; otherwise, false.</returns>
      <param name="postDataKey">The key identifier for the control. </param>
      <param name="postCollection">The collection of all incoming name values. </param>
    </member>
    <member name="M:System.Web.UI.WebControls.TreeView.System#Web#UI#IPostBackDataHandler#RaisePostDataChangedEvent">
      <summary>Signals the <see cref="T:System.Web.UI.WebControls.TreeView" /> control to notify the ASP.NET application that the state of the control has changed.</summary>
    </member>
    <member name="M:System.Web.UI.WebControls.TreeView.System#Web#UI#IPostBackEventHandler#RaisePostBackEvent(System.String)">
      <summary>Enables the <see cref="T:System.Web.UI.WebControls.TreeView" /> control to process an event that is raised when a form is posted to the server.</summary>
      <param name="eventArgument">A string that represents an optional event argument to pass to the event handler. </param>
    </member>
    <member name="P:System.Web.UI.WebControls.TreeView.TagKey">
      <summary>Gets the <see cref="T:System.Web.UI.HtmlTextWriterTag" /> value for the <see cref="T:System.Web.UI.WebControls.TreeView" /> control.</summary>
      <returns>Always returns a <see cref="F:System.Web.UI.HtmlTextWriterTag.Div" /> value.</returns>
    </member>
    <member name="P:System.Web.UI.WebControls.TreeView.Target">
      <summary>Gets or sets the target window or frame in which to display the Web page content that is associated with a node.</summary>
      <returns>The target window or frame in which to display the linked Web page content. Values must begin with a letter in the range of A through Z (case insensitive), except for certain special values that begin with an underscore, as shown in the following table.Target value Renders the content in _blankA new window without frames. _parentThe immediate frameset parent. _searchThe search pane._selfThe frame with focus. _topThe full window without frames. NoteCheck your browser documentation to determine if the _search value is supported.  For example, Microsoft Internet Explorer 5.0 and later supports the _search target value.The default is an empty string (""), which refreshes the window or frame with focus.</returns>
    </member>
    <member name="M:System.Web.UI.WebControls.TreeView.TrackViewState">
      <summary>Tracks view-state changes to the <see cref="T:System.Web.UI.WebControls.TreeView" /> control so that they can be stored in the <see cref="T:System.Web.UI.StateBag" /> object for the control. This <see cref="T:System.Web.UI.StateBag" /> is accessible through the <see cref="P:System.Web.UI.Control.ViewState" /> property.</summary>
    </member>
    <member name="E:System.Web.UI.WebControls.TreeView.TreeNodeCheckChanged">
      <summary>Occurs when a check box in the <see cref="T:System.Web.UI.WebControls.TreeView" /> control changes state between posts to the server.</summary>
    </member>
    <member name="E:System.Web.UI.WebControls.TreeView.TreeNodeCollapsed">
      <summary>Occurs when a node is collapsed in the <see cref="T:System.Web.UI.WebControls.TreeView" /> control.</summary>
    </member>
    <member name="E:System.Web.UI.WebControls.TreeView.TreeNodeDataBound">
      <summary>Occurs when a data item is bound to a node in the <see cref="T:System.Web.UI.WebControls.TreeView" /> control.</summary>
    </member>
    <member name="E:System.Web.UI.WebControls.TreeView.TreeNodeExpanded">
      <summary>Occurs when a node is expanded in the <see cref="T:System.Web.UI.WebControls.TreeView" /> control.</summary>
    </member>
    <member name="E:System.Web.UI.WebControls.TreeView.TreeNodePopulate">
      <summary>Occurs when a node with its <see cref="P:System.Web.UI.WebControls.TreeNode.PopulateOnDemand" /> property set to true is expanded in the <see cref="T:System.Web.UI.WebControls.TreeView" /> control.</summary>
    </member>
    <member name="P:System.Web.UI.WebControls.TreeView.Visible">
      <summary>Gets or sets a value indicating whether the control is rendered as UI on the page. </summary>
      <returns>true, if the control is visible on the page; otherwise, false. </returns>
    </member>
    <member name="T:System.Web.UI.WebControls.TreeViewImageSet">
      <summary>Represents an image set to use in the <see cref="T:System.Web.UI.WebControls.TreeView" /> control.</summary>
    </member>
    <member name="F:System.Web.UI.WebControls.TreeViewImageSet.Custom">
      <summary>A user-defined set of images. This is the default value of the <see cref="P:System.Web.UI.WebControls.TreeView.ImageSet" />.</summary>
    </member>
    <member name="F:System.Web.UI.WebControls.TreeViewImageSet.XPFileExplorer">
      <summary>A predefined set of Windows Explorer for Microsoft Windows XP–styled images.</summary>
    </member>
    <member name="F:System.Web.UI.WebControls.TreeViewImageSet.Msdn">
      <summary>A predefined set of Microsoft MSDN developer program–styled images.</summary>
    </member>
    <member name="F:System.Web.UI.WebControls.TreeViewImageSet.WindowsHelp">
      <summary>A predefined set of Microsoft Windows Help–styled images.</summary>
    </member>
    <member name="F:System.Web.UI.WebControls.TreeViewImageSet.Simple">
      <summary>A predefined set of simple-shaped outline images.</summary>
    </member>
    <member name="F:System.Web.UI.WebControls.TreeViewImageSet.Simple2">
      <summary>A predefined set of filled simple-shaped images.</summary>
    </member>
    <member name="F:System.Web.UI.WebControls.TreeViewImageSet.BulletedList">
      <summary>A predefined set of diamond-shaped bullet images.</summary>
    </member>
    <member name="F:System.Web.UI.WebControls.TreeViewImageSet.BulletedList2">
      <summary>A predefined set of square-shaped bullet images.</summary>
    </member>
    <member name="F:System.Web.UI.WebControls.TreeViewImageSet.BulletedList3">
      <summary>A predefined set of sectioned, diamond shaped bullet images.</summary>
    </member>
    <member name="F:System.Web.UI.WebControls.TreeViewImageSet.BulletedList4">
      <summary>A predefined set of alternate sectioned, diamond shaped bullet images in sizes that vary by level.</summary>
    </member>
    <member name="F:System.Web.UI.WebControls.TreeViewImageSet.Arrows">
      <summary>A predefined set of arrow images.</summary>
    </member>
    <member name="F:System.Web.UI.WebControls.TreeViewImageSet.News">
      <summary>A predefined set of newsgroup-styled images.</summary>
    </member>
    <member name="F:System.Web.UI.WebControls.TreeViewImageSet.Contacts">
      <summary>A predefined set of MSN Messenger–styled images.</summary>
    </member>
    <member name="F:System.Web.UI.WebControls.TreeViewImageSet.Inbox">
      <summary>A predefined set of e-mail–styled images.</summary>
    </member>
    <member name="F:System.Web.UI.WebControls.TreeViewImageSet.Events">
      <summary>A predefined set of event log–styled images.</summary>
    </member>
    <member name="F:System.Web.UI.WebControls.TreeViewImageSet.Faq">
      <summary>A predefined set of FAQ-styled images.</summary>
    </member>
    <member name="T:System.Web.UI.WebControls.Unit">
      <summary>Represents a length measurement.</summary>
    </member>
    <member name="M:System.Web.UI.WebControls.Unit.#ctor(System.Double)">
      <summary>Initializes a new instance of the <see cref="T:System.Web.UI.WebControls.Unit" /> structure with the specified double precision floating point number.</summary>
      <param name="value">A double precision floating point number that represents the length of the <see cref="T:System.Web.UI.WebControls.Unit" /> in pixels. </param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="value" /> is not between -32768 and 32767. </exception>
    </member>
    <member name="M:System.Web.UI.WebControls.Unit.#ctor(System.Double,System.Web.UI.WebControls.UnitType)">
      <summary>Initializes a new instance of the <see cref="T:System.Web.UI.WebControls.Unit" /> structure with the specified double precision floating point number and <see cref="T:System.Web.UI.WebControls.UnitType" />.</summary>
      <param name="value">A double precision floating point number that represents the length of the <see cref="T:System.Web.UI.WebControls.Unit" />. </param>
      <param name="type">One of the <see cref="T:System.Web.UI.WebControls.UnitType" /> enumeration values. </param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="value" /> is not between -32768 and 32767. </exception>
    </member>
    <member name="M:System.Web.UI.WebControls.Unit.#ctor(System.Int32)">
      <summary>Initializes a new instance of the <see cref="T:System.Web.UI.WebControls.Unit" /> structure with the specified 32-bit signed integer.</summary>
      <param name="value">A 32-bit signed integer that represents the length of the <see cref="T:System.Web.UI.WebControls.Unit" /> in pixels. </param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="value" /> is not between -32768 and 32767. </exception>
    </member>
    <member name="M:System.Web.UI.WebControls.Unit.#ctor(System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.Web.UI.WebControls.Unit" /> structure with the specified length.</summary>
      <param name="value">A string that represents the length of the <see cref="T:System.Web.UI.WebControls.Unit" />. </param>
      <exception cref="T:System.ArgumentOutOfRangeException">The specified length is not between -32768 and 32767. </exception>
      <exception cref="T:System.FormatException">
        <paramref name="value" /> is not a valid CSS-compliant unit expression. </exception>
    </member>
    <member name="M:System.Web.UI.WebControls.Unit.#ctor(System.String,System.Globalization.CultureInfo)">
      <summary>Initializes a new instance of the <see cref="T:System.Web.UI.WebControls.Unit" /> structure with the specified length and <see cref="T:System.Globalization.CultureInfo" />.</summary>
      <param name="value">A string that represents the length of the <see cref="T:System.Web.UI.WebControls.Unit" />. </param>
      <param name="culture">A <see cref="T:System.Globalization.CultureInfo" /> that represents the culture. </param>
      <exception cref="T:System.ArgumentOutOfRangeException">The specified length is not between -32768 and 32767. </exception>
      <exception cref="T:System.FormatException">
        <paramref name="value" /> is not a valid CSS-compliant unit expression. </exception>
    </member>
    <member name="F:System.Web.UI.WebControls.Unit.Empty">
      <summary>Represents an empty <see cref="T:System.Web.UI.WebControls.Unit" />. This field is read-only.</summary>
    </member>
    <member name="M:System.Web.UI.WebControls.Unit.Equals(System.Object)">
      <summary>Compares this <see cref="T:System.Web.UI.WebControls.Unit" /> with the specified object.</summary>
      <returns>true if the <see cref="T:System.Web.UI.WebControls.Unit" /> that this method is called from is equal to the specified object; otherwise, false.</returns>
      <param name="obj">The object for comparison. </param>
    </member>
    <member name="M:System.Web.UI.WebControls.Unit.GetHashCode">
      <summary>Returns a hash code for this <see cref="T:System.Web.UI.WebControls.Unit" />.</summary>
      <returns>A 32-bit signed integer that is the hash code for this instance.</returns>
    </member>
    <member name="P:System.Web.UI.WebControls.Unit.IsEmpty">
      <summary>Gets a value indicating whether the <see cref="T:System.Web.UI.WebControls.Unit" /> is empty.</summary>
      <returns>true if the <see cref="T:System.Web.UI.WebControls.Unit" /> is empty; otherwise, false.</returns>
    </member>
    <member name="M:System.Web.UI.WebControls.Unit.op_Equality(System.Web.UI.WebControls.Unit,System.Web.UI.WebControls.Unit)">
      <summary>Compares two <see cref="T:System.Web.UI.WebControls.Unit" /> objects to determine whether they are equal.</summary>
      <returns>true if both <see cref="T:System.Web.UI.WebControls.Unit" /> objects are equal; otherwise, false.</returns>
      <param name="left">The <see cref="T:System.Web.UI.WebControls.Unit" /> on the left side of the operator. </param>
      <param name="right">The <see cref="T:System.Web.UI.WebControls.Unit" /> on the right side of the operator. </param>
    </member>
    <member name="M:System.Web.UI.WebControls.Unit.op_Implicit(System.Int32)~System.Web.UI.WebControls.Unit">
      <summary>Implicitly creates a <see cref="T:System.Web.UI.WebControls.Unit" /> of type <see cref="F:System.Web.UI.WebControls.UnitType.Pixel" /> from the specified 32-bit unsigned integer.</summary>
      <returns>A <see cref="T:System.Web.UI.WebControls.Unit" /> of type <see cref="F:System.Web.UI.WebControls.UnitType.Pixel" /> that represents the 32-bit unsigned integer specified by the <paramref name="n" /> parameter.</returns>
      <param name="n">A 32-bit signed integer that represents the length of the <see cref="T:System.Web.UI.WebControls.Unit" />. </param>
    </member>
    <member name="M:System.Web.UI.WebControls.Unit.op_Inequality(System.Web.UI.WebControls.Unit,System.Web.UI.WebControls.Unit)">
      <summary>Compares two <see cref="T:System.Web.UI.WebControls.Unit" /> objects to determine whether they are not equal.</summary>
      <returns>true if the <see cref="T:System.Web.UI.WebControls.Unit" /> objects are not equal; otherwise, false.</returns>
      <param name="left">The <see cref="T:System.Web.UI.WebControls.Unit" /> on the left side of the operator. </param>
      <param name="right">The <see cref="T:System.Web.UI.WebControls.Unit" /> on the right side of the operator. </param>
    </member>
    <member name="M:System.Web.UI.WebControls.Unit.Parse(System.String)">
      <summary>Converts the specified string to a <see cref="T:System.Web.UI.WebControls.Unit" />.</summary>
      <returns>A <see cref="T:System.Web.UI.WebControls.Unit" /> that represents the specified string.</returns>
      <param name="s">The string to convert. </param>
    </member>
    <member name="M:System.Web.UI.WebControls.Unit.Parse(System.String,System.Globalization.CultureInfo)">
      <summary>Converts the specified string and <see cref="T:System.Globalization.CultureInfo" /> to a <see cref="T:System.Web.UI.WebControls.Unit" />.</summary>
      <returns>A <see cref="T:System.Web.UI.WebControls.Unit" /> that represents the specified string.</returns>
      <param name="s">The string to convert. </param>
      <param name="culture">A <see cref="T:System.Globalization.CultureInfo" /> object that represents the culture. </param>
    </member>
    <member name="M:System.Web.UI.WebControls.Unit.Percentage(System.Double)">
      <summary>Creates a <see cref="T:System.Web.UI.WebControls.Unit" /> of type <see cref="F:System.Web.UI.WebControls.UnitType.Percentage" /> from the specified double-precision floating-point number.</summary>
      <returns>A <see cref="T:System.Web.UI.WebControls.Unit" /> of type <see cref="F:System.Web.UI.WebControls.UnitType.Percentage" /> that represents the length specified by the double-precision floating-point number.</returns>
      <param name="n">A double-precision floating-point number that represents the length of the <see cref="T:System.Web.UI.WebControls.Unit" />.</param>
    </member>
    <member name="M:System.Web.UI.WebControls.Unit.Pixel(System.Int32)">
      <summary>Creates a <see cref="T:System.Web.UI.WebControls.Unit" /> of type <see cref="F:System.Web.UI.WebControls.UnitType.Pixel" /> from the specified 32-bit signed integer.</summary>
      <returns>A <see cref="T:System.Web.UI.WebControls.Unit" /> of type <see cref="F:System.Web.UI.WebControls.UnitType.Pixel" /> that represents the length specified by the <paramref name="n" /> parameter.</returns>
      <param name="n">A 32-bit signed integer that represents the length of the <see cref="T:System.Web.UI.WebControls.Unit" />. </param>
    </member>
    <member name="M:System.Web.UI.WebControls.Unit.Point(System.Int32)">
      <summary>Creates a <see cref="T:System.Web.UI.WebControls.Unit" /> of type <see cref="F:System.Web.UI.WebControls.UnitType.Point" /> from the specified 32-bit signed integer.</summary>
      <returns>A <see cref="T:System.Web.UI.WebControls.Unit" /> of type <see cref="F:System.Web.UI.WebControls.UnitType.Point" /> that represents the length specified by the 32-bit signed integer.</returns>
      <param name="n">A 32-bit signed integer that represents the length of the <see cref="T:System.Web.UI.WebControls.Unit" />. </param>
    </member>
    <member name="M:System.Web.UI.WebControls.Unit.ToString">
      <summary>Converts a <see cref="T:System.Web.UI.WebControls.Unit" /> to a <see cref="T:System.String" />.</summary>
      <returns>A <see cref="T:System.String" /> that represents this <see cref="T:System.Web.UI.WebControls.Unit" />.</returns>
    </member>
    <member name="M:System.Web.UI.WebControls.Unit.ToString(System.Globalization.CultureInfo)">
      <summary>Converts a <see cref="T:System.Web.UI.WebControls.Unit" /> to a string equivalent in the specified culture.</summary>
      <returns>A <see cref="T:System.String" /> represents this <see cref="T:System.Web.UI.WebControls.Unit" /> in the culture specified by <paramref name="culture" />.</returns>
      <param name="culture">A <see cref="T:System.Globalization.CultureInfo" /> that represents the culture. </param>
    </member>
    <member name="M:System.Web.UI.WebControls.Unit.ToString(System.IFormatProvider)">
      <summary>Converts a <see cref="T:System.Web.UI.WebControls.Unit" /> to a string equivalent using the specified format provider.</summary>
      <returns>A <see cref="T:System.String" /> representing this <see cref="T:System.Web.UI.WebControls.Unit" /> in the format specified by <paramref name="formatProvider" />.</returns>
      <param name="formatProvider">An <see cref="T:System.IFormatProvider" /> interface implementation that supplies culture-specific formatting information.</param>
    </member>
    <member name="P:System.Web.UI.WebControls.Unit.Type">
      <summary>Gets the unit type of the <see cref="T:System.Web.UI.WebControls.Unit" />.</summary>
      <returns>One of the <see cref="T:System.Web.UI.WebControls.UnitType" /> enumeration values. The default is <see cref="F:System.Web.UI.WebControls.UnitType.Pixel" />.</returns>
    </member>
    <member name="P:System.Web.UI.WebControls.Unit.Value">
      <summary>Gets the length of the <see cref="T:System.Web.UI.WebControls.Unit" />.</summary>
      <returns>A double-precision floating point number that represents the length of the <see cref="T:System.Web.UI.WebControls.Unit" />.</returns>
    </member>
    <member name="T:System.Web.UI.WebControls.UnitConverter">
      <summary>Converts from a <see cref="T:System.Web.UI.WebControls.Unit" /> object to an object of another data type and from another type to a <see cref="T:System.Web.UI.WebControls.Unit" /> object.</summary>
    </member>
    <member name="M:System.Web.UI.WebControls.UnitConverter.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Web.UI.WebControls.UnitConverter" /> class.</summary>
    </member>
    <member name="M:System.Web.UI.WebControls.UnitConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)">
      <summary>Returns a value indicating whether the unit converter can convert from the specified source type.</summary>
      <returns>true if the source type can be converted from; otherwise, false.</returns>
      <param name="context">An <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> instance that specifies the context of the object to convert. </param>
      <param name="sourceType">The type of the source. </param>
    </member>
    <member name="M:System.Web.UI.WebControls.UnitConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)">
      <summary>Returns a value indicating whether the converter can convert a <see cref="T:System.Web.UI.WebControls.Unit" /> object to the specified type.</summary>
      <returns>true if the converter supports converting a <see cref="T:System.Web.UI.WebControls.Unit" /> object to the destination type; otherwise, false.</returns>
      <param name="context">An <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> that indicates the context of the object to convert.</param>
      <param name="destinationType">The <see cref="T:System.Type" /> that represents the data type to convert to.</param>
    </member>
    <member name="M:System.Web.UI.WebControls.UnitConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
      <summary>Performs type conversion from the specified context, object, and argument list.</summary>
      <returns>The object resulting from conversion.</returns>
      <param name="context">An <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> instance that indicates the context of the object to convert. </param>
      <param name="culture">A <see cref="T:System.Globalization.CultureInfo" /> object that represents information about a culture such as language, calendar system, and so on. This parameter is not used in this method. It is reserved for future versions of this method. You can optionally pass null for this parameter. </param>
      <param name="value">The object to convert. </param>
    </member>
    <member name="M:System.Web.UI.WebControls.UnitConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
      <summary>Performs type conversion to the specified destination type given the specified context, object and argument list.</summary>
      <returns>The object resulting from conversion.</returns>
      <param name="context">An <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> instance that indicates the context of the object to convert. </param>
      <param name="culture">A <see cref="T:System.Globalization.CultureInfo" /> object that represents information about a culture such as language, calendar system, and so on. This parameter is not used in this method. It is reserved for future versions of this method. You can optionally pass null for this parameter. </param>
      <param name="value">The object to convert. </param>
      <param name="destinationType">The type to convert to. </param>
    </member>
    <member name="T:System.Web.UI.WebControls.UnitType">
      <summary>Specifies the unit of measurement.</summary>
    </member>
    <member name="F:System.Web.UI.WebControls.UnitType.Pixel">
      <summary>Measurement is in pixels.</summary>
    </member>
    <member name="F:System.Web.UI.WebControls.UnitType.Point">
      <summary>Measurement is in points. A point represents 1/72 of an inch.</summary>
    </member>
    <member name="F:System.Web.UI.WebControls.UnitType.Pica">
      <summary>Measurement is in picas. A pica represents 12 points.</summary>
    </member>
    <member name="F:System.Web.UI.WebControls.UnitType.Inch">
      <summary>Measurement is in inches.</summary>
    </member>
    <member name="F:System.Web.UI.WebControls.UnitType.Mm">
      <summary>Measurement is in millimeters.</summary>
    </member>
    <member name="F:System.Web.UI.WebControls.UnitType.Cm">
      <summary>Measurement is in centimeters.</summary>
    </member>
    <member name="F:System.Web.UI.WebControls.UnitType.Percentage">
      <summary>Measurement is a percentage relative to the parent element.</summary>
    </member>
    <member name="F:System.Web.UI.WebControls.UnitType.Em">
      <summary>Measurement is relative to the height of the parent element's font.</summary>
    </member>
    <member name="F:System.Web.UI.WebControls.UnitType.Ex">
      <summary>Measurement is relative to the height of the lowercase letter x of the parent element's font.</summary>
    </member>
    <member name="T:System.Web.UI.WebControls.ValidatedControlConverter">
      <summary>Converts a control on the Web Forms page that can be validated with a validation control to a string containing the control's ID.</summary>
    </member>
    <member name="M:System.Web.UI.WebControls.ValidatedControlConverter.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Web.UI.WebControls.ValidatedControlConverter" /> class. </summary>
    </member>
    <member name="M:System.Web.UI.WebControls.ValidatedControlConverter.FilterControl(System.Web.UI.Control)">
      <summary>Returns a value indicating whether the specified control should be added to the list of controls that can be validated.</summary>
      <returns>true if the control should be added to the list of controls that can be validated; otherwise, false.</returns>
      <param name="control"></param>
    </member>
    <member name="T:System.Web.UI.WebControls.ValidationCompareOperator">
      <summary>Specifies the validation comparison operators used by the <see cref="T:System.Web.UI.WebControls.CompareValidator" /> control.</summary>
    </member>
    <member name="F:System.Web.UI.WebControls.ValidationCompareOperator.Equal">
      <summary>A comparison for equality.</summary>
    </member>
    <member name="F:System.Web.UI.WebControls.ValidationCompareOperator.NotEqual">
      <summary>A comparison for inequality.</summary>
    </member>
    <member name="F:System.Web.UI.WebControls.ValidationCompareOperator.GreaterThan">
      <summary>A comparison for greater than.</summary>
    </member>
    <member name="F:System.Web.UI.WebControls.ValidationCompareOperator.GreaterThanEqual">
      <summary>A comparison for greater than or equal to.</summary>
    </member>
    <member name="F:System.Web.UI.WebControls.ValidationCompareOperator.LessThan">
      <summary>A comparison for less than.</summary>
    </member>
    <member name="F:System.Web.UI.WebControls.ValidationCompareOperator.LessThanEqual">
      <summary>A comparison for less than or equal to.</summary>
    </member>
    <member name="F:System.Web.UI.WebControls.ValidationCompareOperator.DataTypeCheck">
      <summary>A comparison for data type only.</summary>
    </member>
    <member name="T:System.Web.UI.WebControls.ValidationDataType">
      <summary>Specifies the validation data types used by the <see cref="T:System.Web.UI.WebControls.CompareValidator" /> and <see cref="T:System.Web.UI.WebControls.RangeValidator" /> controls.</summary>
    </member>
    <member name="F:System.Web.UI.WebControls.ValidationDataType.String">
      <summary>A string data type. The value is treated as a <see cref="T:System.String" />.</summary>
    </member>
    <member name="F:System.Web.UI.WebControls.ValidationDataType.Integer">
      <summary>A 32-bit signed integer data type. The value is treated as a <see cref="T:System.Int32" />.</summary>
    </member>
    <member name="F:System.Web.UI.WebControls.ValidationDataType.Double">
      <summary>A double precision floating point number data type. The value is treated as a <see cref="T:System.Double" />.</summary>
    </member>
    <member name="F:System.Web.UI.WebControls.ValidationDataType.Date">
      <summary>A date data type. Only numeric dates are allowed. The time portion cannot be specified.</summary>
    </member>
    <member name="F:System.Web.UI.WebControls.ValidationDataType.Currency">
      <summary>A monetary data type. The value is treated as a <see cref="T:System.Decimal" />. However, currency and grouping symbols are still allowed.</summary>
    </member>
    <member name="T:System.Web.UI.WebControls.ValidationSummary">
      <summary>Displays a summary of all validation errors inline on a Web page, in a message box, or both. </summary>
    </member>
    <member name="M:System.Web.UI.WebControls.ValidationSummary.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Web.UI.WebControls.ValidationSummary" /> class.</summary>
    </member>
    <member name="M:System.Web.UI.WebControls.ValidationSummary.AddAttributesToRender(System.Web.UI.HtmlTextWriter)">
      <summary>Adds attributes to the HTML tags generated for this control.</summary>
      <param name="writer">The output stream that renders HTML content to the client. </param>
    </member>
    <member name="P:System.Web.UI.WebControls.ValidationSummary.DisplayMode">
      <summary>Gets or sets the display mode of the validation summary.</summary>
      <returns>One of the <see cref="T:System.Web.UI.WebControls.ValidationSummaryDisplayMode" /> values. The default is BulletList.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">The display mode is not one of the <see cref="T:System.Web.UI.WebControls.ValidationSummaryDisplayMode" /> values. </exception>
    </member>
    <member name="P:System.Web.UI.WebControls.ValidationSummary.EnableClientScript">
      <summary>Gets or sets a value indicating whether the <see cref="T:System.Web.UI.WebControls.ValidationSummary" /> control updates itself using client-side script.</summary>
      <returns>true if the <see cref="T:System.Web.UI.WebControls.ValidationSummary" /> control updates itself using client-side script; otherwise, false. The default is true.</returns>
    </member>
    <member name="P:System.Web.UI.WebControls.ValidationSummary.ForeColor">
      <summary>Gets or sets the foreground color of the control.</summary>
      <returns>A <see cref="T:System.Drawing.Color" /> that represents the foreground color of the control. The default is Red.</returns>
    </member>
    <member name="P:System.Web.UI.WebControls.ValidationSummary.HeaderText">
      <summary>Gets or sets the header text displayed at the top of the summary.</summary>
      <returns>The header text displayed at the top of the summary. The default is <see cref="F:System.String.Empty" />.</returns>
    </member>
    <member name="M:System.Web.UI.WebControls.ValidationSummary.OnInit(System.EventArgs)">
      <summary>Raises the <see cref="E:System.Web.UI.Control.Init" /> event.</summary>
      <param name="e">The event data.</param>
    </member>
    <member name="M:System.Web.UI.WebControls.ValidationSummary.OnPreRender(System.EventArgs)">
      <summary>Raises the <see cref="E:System.Web.UI.Control.PreRender" /> event.</summary>
      <param name="e">An <see cref="T:System.EventArgs" /> that contains the event data.</param>
    </member>
    <member name="M:System.Web.UI.WebControls.ValidationSummary.Render(System.Web.UI.HtmlTextWriter)">
      <summary>Sends server control content to a provided <see cref="T:System.Web.UI.HtmlTextWriter" /> object, which writes the content to be rendered on the client.</summary>
      <param name="writer">The output stream that renders HTML content to the client.</param>
    </member>
    <member name="P:System.Web.UI.WebControls.ValidationSummary.ShowMessageBox">
      <summary>Gets or sets a value indicating whether the validation summary is displayed in a message box.</summary>
      <returns>true if the validation summary is to be displayed in a message box; otherwise, false. The default is false.</returns>
    </member>
    <member name="P:System.Web.UI.WebControls.ValidationSummary.ShowSummary">
      <summary>Gets or sets a value indicating whether the validation summary is displayed inline.</summary>
      <returns>true if the validation summary is displayed inline; otherwise, false. The default is true.</returns>
    </member>
    <member name="P:System.Web.UI.WebControls.ValidationSummary.SupportsDisabledAttribute">
      <summary>Gets a value that indicates whether the control should set the disabled attribute of the rendered HTML element to "disabled" when the control's <see cref="P:System.Web.UI.WebControls.WebControl.IsEnabled" /> property is false.</summary>
      <returns>true if the <see cref="P:System.Web.UI.Control.RenderingCompatibility" /> property indicates an ASP.NET version lower than 4.0; otherwise, false.</returns>
    </member>
    <member name="P:System.Web.UI.WebControls.ValidationSummary.ValidationGroup">
      <summary>Gets or sets the group of controls for which the <see cref="T:System.Web.UI.WebControls.ValidationSummary" /> object displays validation messages.</summary>
      <returns>The group of controls for which the <see cref="T:System.Web.UI.WebControls.ValidationSummary" /> object displays validation messages.</returns>
    </member>
    <member name="T:System.Web.UI.WebControls.ValidationSummaryDisplayMode">
      <summary>Specifies the validation summary display mode used by the <see cref="T:System.Web.UI.WebControls.ValidationSummary" /> control.</summary>
    </member>
    <member name="F:System.Web.UI.WebControls.ValidationSummaryDisplayMode.List">
      <summary>Validation summary displayed in a list.</summary>
    </member>
    <member name="F:System.Web.UI.WebControls.ValidationSummaryDisplayMode.BulletList">
      <summary>Validation summary displayed in a bulleted list.</summary>
    </member>
    <member name="F:System.Web.UI.WebControls.ValidationSummaryDisplayMode.SingleParagraph">
      <summary>Validation summary displayed in a single paragraph.</summary>
    </member>
    <member name="T:System.Web.UI.WebControls.ValidatorDisplay">
      <summary>Specifies the display behavior of error messages in validation controls.</summary>
    </member>
    <member name="F:System.Web.UI.WebControls.ValidatorDisplay.None">
      <summary>Validator content never displayed inline.</summary>
    </member>
    <member name="F:System.Web.UI.WebControls.ValidatorDisplay.Static">
      <summary>Validator content physically part of the page layout.</summary>
    </member>
    <member name="F:System.Web.UI.WebControls.ValidatorDisplay.Dynamic">
      <summary>Validator content dynamically added to the page when validation fails.</summary>
    </member>
    <member name="T:System.Web.UI.WebControls.VerticalAlign">
      <summary>Specifies the vertical alignment of an object or text in a control.</summary>
    </member>
    <member name="F:System.Web.UI.WebControls.VerticalAlign.NotSet">
      <summary>Vertical alignment is not set.</summary>
    </member>
    <member name="F:System.Web.UI.WebControls.VerticalAlign.Top">
      <summary>Text or object is aligned with the top of the enclosing control.</summary>
    </member>
    <member name="F:System.Web.UI.WebControls.VerticalAlign.Middle">
      <summary>Text or object is aligned with the center of the enclosing control.</summary>
    </member>
    <member name="F:System.Web.UI.WebControls.VerticalAlign.Bottom">
      <summary>Text or object is aligned with the bottom of the enclosing control.</summary>
    </member>
    <member name="T:System.Web.UI.WebControls.View">
      <summary>Represents a control that acts as a container for a group of controls within a <see cref="T:System.Web.UI.WebControls.MultiView" /> control.</summary>
    </member>
    <member name="M:System.Web.UI.WebControls.View.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Web.UI.WebControls.View" /> class. </summary>
    </member>
    <member name="E:System.Web.UI.WebControls.View.Activate">
      <summary>Occurs when the current <see cref="T:System.Web.UI.WebControls.View" /> control becomes the active view.</summary>
    </member>
    <member name="E:System.Web.UI.WebControls.View.Deactivate">
      <summary>Occurs when the current active <see cref="T:System.Web.UI.WebControls.View" /> control becomes inactive.</summary>
    </member>
    <member name="P:System.Web.UI.WebControls.View.EnableTheming">
      <summary>Gets or sets a value indicating whether themes apply to this control.</summary>
      <returns>true to use themes; otherwise, false. The default is false.</returns>
    </member>
    <member name="M:System.Web.UI.WebControls.View.OnActivate(System.EventArgs)">
      <summary>Raises the <see cref="E:System.Web.UI.WebControls.View.Activate" /> event of the <see cref="T:System.Web.UI.WebControls.View" /> control.</summary>
      <param name="e">An <see cref="T:System.EventArgs" /> that contains the event data. </param>
    </member>
    <member name="M:System.Web.UI.WebControls.View.OnDeactivate(System.EventArgs)">
      <summary>Raises the <see cref="E:System.Web.UI.WebControls.View.Deactivate" /> event of the <see cref="T:System.Web.UI.WebControls.View" /> control.</summary>
      <param name="e">An <see cref="T:System.EventArgs" /> that contains the event data. </param>
    </member>
    <member name="P:System.Web.UI.WebControls.View.Visible">
      <summary>Gets or sets a value that indicates whether the <see cref="T:System.Web.UI.WebControls.View" /> control is visible. </summary>
      <returns>true if the <see cref="T:System.Web.UI.WebControls.View" /> control is visible; otherwise, false. The default value is false.</returns>
      <exception cref="T:System.InvalidOperationException">An attempt was made to set this property at run time.</exception>
    </member>
    <member name="T:System.Web.UI.WebControls.ViewCollection">
      <summary>Represents a collection container that enables a <see cref="T:System.Web.UI.WebControls.MultiView" /> control to maintain a list of its child controls.</summary>
    </member>
    <member name="M:System.Web.UI.WebControls.ViewCollection.#ctor(System.Web.UI.Control)">
      <summary>Initializes a new instance of the <see cref="T:System.Web.UI.WebControls.ViewCollection" /> class.</summary>
      <param name="owner">The <see cref="T:System.Web.UI.WebControls.MultiView" /> control that owns this collection of child controls. </param>
    </member>
    <member name="M:System.Web.UI.WebControls.ViewCollection.Add(System.Web.UI.Control)">
      <summary>Adds the specified <see cref="T:System.Web.UI.WebControls.View" /> control to the collection.</summary>
      <param name="v">The <see cref="T:System.Web.UI.WebControls.View" /> control to add to the collection. </param>
      <exception cref="T:System.ArgumentException">The <paramref name="v" /> parameter does not specify a <see cref="T:System.Web.UI.WebControls.View" /> control. </exception>
    </member>
    <member name="M:System.Web.UI.WebControls.ViewCollection.AddAt(System.Int32,System.Web.UI.Control)">
      <summary>Adds the specified <see cref="T:System.Web.UI.WebControls.View" /> control to the collection at the specified index location.</summary>
      <param name="index">The array index at which to add the <see cref="T:System.Web.UI.WebControls.View" /> control. </param>
      <param name="v">The <see cref="T:System.Web.UI.WebControls.View" /> control to add to the collection. </param>
      <exception cref="T:System.ArgumentException">The <paramref name="v" /> parameter does not specify a <see cref="T:System.Web.UI.WebControls.View" /> control. </exception>
    </member>
    <member name="P:System.Web.UI.WebControls.ViewCollection.Item(System.Int32)">
      <summary>Gets a reference to the <see cref="T:System.Web.UI.WebControls.View" /> control at the specified index location in the <see cref="T:System.Web.UI.WebControls.ViewCollection" /> collection.</summary>
      <returns>A reference to a <see cref="T:System.Web.UI.WebControls.View" /> control in the <see cref="T:System.Web.UI.WebControls.ViewCollection" />.</returns>
      <param name="i">The ordinal index value that specifies the location of the <see cref="T:System.Web.UI.WebControls.View" /> control in the <see cref="T:System.Web.UI.WebControls.ViewCollection" />. </param>
    </member>
    <member name="T:System.Web.UI.WebControls.WebColorConverter">
      <summary>Converts a predefined color name or an RGB color value to and from a <see cref="T:System.Drawing.Color" /> object.</summary>
    </member>
    <member name="M:System.Web.UI.WebControls.WebColorConverter.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Web.UI.WebControls.WebColorConverter" /> class. </summary>
    </member>
    <member name="M:System.Web.UI.WebControls.WebColorConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
      <summary>Converts the given value to the type of the converter.</summary>
      <returns>The object resulting from conversion.</returns>
      <param name="context">An <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> that indicates the context of the object to convert.</param>
      <param name="culture">A <see cref="T:System.Globalization.CultureInfo" /> object that represents information about a culture such as language, calendar system, and so on. This parameter is not used in this method. It is reserved for future versions of this method. You can optionally pass in null for this parameter.</param>
      <param name="value">The object to convert.</param>
    </member>
    <member name="M:System.Web.UI.WebControls.WebColorConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
      <summary>Converts the specified object to a specified type.</summary>
      <returns>The object resulting from conversion.</returns>
      <param name="context">An <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> instance that indicates the context of the object to convert.</param>
      <param name="culture">A <see cref="T:System.Globalization.CultureInfo" /> object that represents information about a culture such as language, calendar system, and so on. This parameter is not used in this method. It is reserved for future versions of this method. You can optionally pass in null for this parameter.</param>
      <param name="value">The object to convert.</param>
      <param name="destinationType">The type to convert to.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="destinationType" /> is null.</exception>
    </member>
    <member name="T:System.Web.UI.WebControls.WebControl">
      <summary>Serves as the base class that defines the methods, properties and events common to all controls in the <see cref="N:System.Web.UI.WebControls" /> namespace.</summary>
    </member>
    <member name="M:System.Web.UI.WebControls.WebControl.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Web.UI.WebControls.WebControl" /> class that represents a Span HTML tag.</summary>
    </member>
    <member name="M:System.Web.UI.WebControls.WebControl.#ctor(System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.Web.UI.WebControls.WebControl" /> class using the specified HTML tag.</summary>
      <param name="tag">An HTML tag. </param>
    </member>
    <member name="M:System.Web.UI.WebControls.WebControl.#ctor(System.Web.UI.HtmlTextWriterTag)">
      <summary>Initializes a new instance of the <see cref="T:System.Web.UI.WebControls.WebControl" /> class using the specified HTML tag.</summary>
      <param name="tag">One of the <see cref="T:System.Web.UI.HtmlTextWriterTag" /> values. </param>
    </member>
    <member name="P:System.Web.UI.WebControls.WebControl.AccessKey">
      <summary>Gets or sets the access key that allows you to quickly navigate to the Web server control.</summary>
      <returns>The access key for quick navigation to the Web server control. The default value is <see cref="F:System.String.Empty" />, which indicates that this property is not set.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">The specified access key is neither null, <see cref="F:System.String.Empty" /> nor a single character string. </exception>
    </member>
    <member name="M:System.Web.UI.WebControls.WebControl.AddAttributesToRender(System.Web.UI.HtmlTextWriter)">
      <summary>Adds HTML attributes and styles that need to be rendered to the specified <see cref="T:System.Web.UI.HtmlTextWriterTag" />. This method is used primarily by control developers.</summary>
      <param name="writer">A <see cref="T:System.Web.UI.HtmlTextWriter" /> that represents the output stream to render HTML content on the client. </param>
    </member>
    <member name="M:System.Web.UI.WebControls.WebControl.ApplyStyle(System.Web.UI.WebControls.Style)">
      <summary>Copies any nonblank elements of the specified style to the Web control, overwriting any existing style elements of the control. This method is primarily used by control developers.</summary>
      <param name="s">A <see cref="T:System.Web.UI.WebControls.Style" /> that represents the style to be copied. </param>
    </member>
    <member name="P:System.Web.UI.WebControls.WebControl.Attributes">
      <summary>Gets the collection of arbitrary attributes (for rendering only) that do not correspond to properties on the control.</summary>
      <returns>A <see cref="T:System.Web.UI.AttributeCollection" /> of name and value pairs.</returns>
    </member>
    <member name="P:System.Web.UI.WebControls.WebControl.BackColor">
      <summary>Gets or sets the background color of the Web server control.</summary>
      <returns>A <see cref="T:System.Drawing.Color" /> that represents the background color of the control. The default is <see cref="F:System.Drawing.Color.Empty" />, which indicates that this property is not set.</returns>
    </member>
    <member name="P:System.Web.UI.WebControls.WebControl.BorderColor">
      <summary>Gets or sets the border color of the Web control.</summary>
      <returns>A <see cref="T:System.Drawing.Color" /> that represents the border color of the control. The default is <see cref="F:System.Drawing.Color.Empty" />, which indicates that this property is not set.</returns>
    </member>
    <member name="P:System.Web.UI.WebControls.WebControl.BorderStyle">
      <summary>Gets or sets the border style of the Web server control.</summary>
      <returns>One of the <see cref="T:System.Web.UI.WebControls.BorderStyle" /> enumeration values. The default is NotSet.</returns>
    </member>
    <member name="P:System.Web.UI.WebControls.WebControl.BorderWidth">
      <summary>Gets or sets the border width of the Web server control.</summary>
      <returns>A <see cref="T:System.Web.UI.WebControls.Unit" /> that represents the border width of a Web server control. The default value is <see cref="F:System.Web.UI.WebControls.Unit.Empty" />, which indicates that this property is not set.</returns>
      <exception cref="T:System.ArgumentException">The specified border width is a negative value. </exception>
    </member>
    <member name="P:System.Web.UI.WebControls.WebControl.ControlStyle">
      <summary>Gets the style of the Web server control. This property is used primarily by control developers.</summary>
      <returns>A <see cref="T:System.Web.UI.WebControls.Style" /> that encapsulates the appearance properties of the Web server control.</returns>
    </member>
    <member name="P:System.Web.UI.WebControls.WebControl.ControlStyleCreated">
      <summary>Gets a value indicating whether a <see cref="T:System.Web.UI.WebControls.Style" /> object has been created for the <see cref="P:System.Web.UI.WebControls.WebControl.ControlStyle" /> property. This property is primarily used by control developers.</summary>
      <returns>true if a <see cref="T:System.Web.UI.WebControls.Style" /> object has been created for the <see cref="P:System.Web.UI.WebControls.WebControl.ControlStyle" /> property; otherwise, false.</returns>
    </member>
    <member name="M:System.Web.UI.WebControls.WebControl.CopyBaseAttributes(System.Web.UI.WebControls.WebControl)">
      <summary>Copies the properties not encapsulated by the <see cref="P:System.Web.UI.WebControls.WebControl.Style" /> object from the specified Web server control to the Web server control that this method is called from. This method is used primarily by control developers.</summary>
      <param name="controlSrc">A <see cref="T:System.Web.UI.WebControls.WebControl" /> that represents the source control with properties to be copied to the Web server control that this method is called from. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="controlSrc" /> is null.</exception>
    </member>
    <member name="M:System.Web.UI.WebControls.WebControl.CreateControlStyle">
      <summary>Creates the style object that is used internally by the <see cref="T:System.Web.UI.WebControls.WebControl" /> class to implement all style related properties. This method is used primarily by control developers.</summary>
      <returns>A <see cref="T:System.Web.UI.WebControls.Style" /> that is used to implement all style-related properties of the control.</returns>
    </member>
    <member name="P:System.Web.UI.WebControls.WebControl.CssClass">
      <summary>Gets or sets the Cascading Style Sheet (CSS) class rendered by the Web server control on the client.</summary>
      <returns>The CSS class rendered by the Web server control on the client. The default is <see cref="F:System.String.Empty" />.</returns>
    </member>
    <member name="P:System.Web.UI.WebControls.WebControl.DisabledCssClass">
      <summary>Gets or sets the CSS class to apply to the rendered HTML element when the control is disabled.</summary>
      <returns>The CSS class that should be applied to the rendered HTML element when the control is disabled. The default value is "aspNetDisabled".</returns>
    </member>
    <member name="P:System.Web.UI.WebControls.WebControl.Enabled">
      <summary>Gets or sets a value indicating whether the Web server control is enabled.</summary>
      <returns>true if control is enabled; otherwise, false. The default is true.</returns>
    </member>
    <member name="P:System.Web.UI.WebControls.WebControl.EnableTheming">
      <summary>Gets or sets a value indicating whether themes apply to this control.</summary>
      <returns>true to use themes; otherwise, false. The default is false.</returns>
    </member>
    <member name="P:System.Web.UI.WebControls.WebControl.Font">
      <summary>Gets the font properties associated with the Web server control.</summary>
      <returns>A <see cref="T:System.Web.UI.WebControls.FontInfo" /> that represents the font properties of the Web server control.</returns>
    </member>
    <member name="P:System.Web.UI.WebControls.WebControl.ForeColor">
      <summary>Gets or sets the foreground color (typically the color of the text) of the Web server control.</summary>
      <returns>A <see cref="T:System.Drawing.Color" /> that represents the foreground color of the control. The default is <see cref="F:System.Drawing.Color.Empty" />.</returns>
    </member>
    <member name="P:System.Web.UI.WebControls.WebControl.HasAttributes">
      <summary>Gets a value indicating whether the control has attributes set.</summary>
      <returns>true if the control has attributes set; otherwise, false.</returns>
    </member>
    <member name="P:System.Web.UI.WebControls.WebControl.Height">
      <summary>Gets or sets the height of the Web server control.</summary>
      <returns>A <see cref="T:System.Web.UI.WebControls.Unit" /> that represents the height of the control. The default is <see cref="F:System.Web.UI.WebControls.Unit.Empty" />.</returns>
      <exception cref="T:System.ArgumentException">The height was set to a negative value.</exception>
    </member>
    <member name="P:System.Web.UI.WebControls.WebControl.IsEnabled">
      <summary>Gets a value indicating whether the control is enabled.</summary>
      <returns>true if the <see cref="T:System.Web.UI.WebControls.WebControl" /> object is enabled; otherwise, false.</returns>
    </member>
    <member name="M:System.Web.UI.WebControls.WebControl.LoadViewState(System.Object)">
      <summary>Restores view-state information from a previous request that was saved with the <see cref="M:System.Web.UI.WebControls.WebControl.SaveViewState" /> method. </summary>
      <param name="savedState">An object that represents the control state to restore. </param>
    </member>
    <member name="M:System.Web.UI.WebControls.WebControl.MergeStyle(System.Web.UI.WebControls.Style)">
      <summary>Copies any nonblank elements of the specified style to the Web control, but will not overwrite any existing style elements of the control. This method is used primarily by control developers.</summary>
      <param name="s">A <see cref="T:System.Web.UI.WebControls.Style" /> that represents the style to be copied. </param>
    </member>
    <member name="M:System.Web.UI.WebControls.WebControl.Render(System.Web.UI.HtmlTextWriter)">
      <summary>Renders the control to the specified HTML writer.</summary>
      <param name="writer">The <see cref="T:System.Web.UI.HtmlTextWriter" /> object that receives the control content. </param>
    </member>
    <member name="M:System.Web.UI.WebControls.WebControl.RenderBeginTag(System.Web.UI.HtmlTextWriter)">
      <summary>Renders the HTML opening tag of the control to the specified writer. This method is used primarily by control developers.</summary>
      <param name="writer">A <see cref="T:System.Web.UI.HtmlTextWriter" /> that represents the output stream to render HTML content on the client. </param>
    </member>
    <member name="M:System.Web.UI.WebControls.WebControl.RenderContents(System.Web.UI.HtmlTextWriter)">
      <summary>Renders the contents of the control to the specified writer. This method is used primarily by control developers.</summary>
      <param name="writer">A <see cref="T:System.Web.UI.HtmlTextWriter" /> that represents the output stream to render HTML content on the client. </param>
    </member>
    <member name="M:System.Web.UI.WebControls.WebControl.RenderEndTag(System.Web.UI.HtmlTextWriter)">
      <summary>Renders the HTML closing tag of the control into the specified writer. This method is used primarily by control developers.</summary>
      <param name="writer">A <see cref="T:System.Web.UI.HtmlTextWriter" /> that represents the output stream to render HTML content on the client. </param>
    </member>
    <member name="M:System.Web.UI.WebControls.WebControl.SaveViewState">
      <summary>Saves any state that was modified after the <see cref="M:System.Web.UI.WebControls.Style.TrackViewState" /> method was invoked.</summary>
      <returns>An object that contains the current view state of the control; otherwise, if there is no view state associated with the control, null.</returns>
    </member>
    <member name="P:System.Web.UI.WebControls.WebControl.SkinID">
      <summary>Gets or sets the skin to apply to the control.</summary>
      <returns>The name of the skin to apply to the control. The default is <see cref="F:System.String.Empty" />.</returns>
      <exception cref="T:System.ArgumentException">The skin specified in the <see cref="P:System.Web.UI.WebControls.WebControl.SkinID" /> property does not exist in the theme.</exception>
    </member>
    <member name="P:System.Web.UI.WebControls.WebControl.Style">
      <summary>Gets a collection of text attributes that will be rendered as a style attribute on the outer tag of the Web server control.</summary>
      <returns>A <see cref="T:System.Web.UI.CssStyleCollection" /> that contains the HTML style attributes to render on the outer tag of the Web server control.</returns>
    </member>
    <member name="P:System.Web.UI.WebControls.WebControl.SupportsDisabledAttribute">
      <summary>Gets a value that indicates whether the control should set the disabled attribute of the rendered HTML element to "disabled" when the control's <see cref="P:System.Web.UI.WebControls.WebControl.IsEnabled" /> property is false.</summary>
      <returns>Always true.</returns>
    </member>
    <member name="M:System.Web.UI.WebControls.WebControl.System#Web#UI#IAttributeAccessor#GetAttribute(System.String)">
      <summary>Gets an attribute of the Web control with the specified name.</summary>
      <returns>The value of the attribute.</returns>
      <param name="name">The name of the attribute.</param>
    </member>
    <member name="M:System.Web.UI.WebControls.WebControl.System#Web#UI#IAttributeAccessor#SetAttribute(System.String,System.String)">
      <summary>Sets an attribute of the Web control to the specified name and value.</summary>
      <param name="name">The name component of the attribute's name/value pair.</param>
      <param name="value">The value component of the attribute's name/value pair.</param>
    </member>
    <member name="P:System.Web.UI.WebControls.WebControl.TabIndex">
      <summary>Gets or sets the tab index of the Web server control.</summary>
      <returns>The tab index of the Web server control. The default is 0, which indicates that this property is not set.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">The specified tab index is not between -32768 and 32767. </exception>
    </member>
    <member name="P:System.Web.UI.WebControls.WebControl.TagKey">
      <summary>Gets the <see cref="T:System.Web.UI.HtmlTextWriterTag" /> value that corresponds to this Web server control. This property is used primarily by control developers.</summary>
      <returns>One of the <see cref="T:System.Web.UI.HtmlTextWriterTag" /> enumeration values.</returns>
    </member>
    <member name="P:System.Web.UI.WebControls.WebControl.TagName">
      <summary>Gets the name of the control tag. This property is used primarily by control developers.</summary>
      <returns>The name of the control tag.</returns>
    </member>
    <member name="P:System.Web.UI.WebControls.WebControl.ToolTip">
      <summary>Gets or sets the text displayed when the mouse pointer hovers over the Web server control.</summary>
      <returns>The text displayed when the mouse pointer hovers over the Web server control. The default is <see cref="F:System.String.Empty" />.</returns>
    </member>
    <member name="M:System.Web.UI.WebControls.WebControl.TrackViewState">
      <summary>Causes the control to track changes to its view state so they can be stored in the object's <see cref="P:System.Web.UI.Control.ViewState" /> property.</summary>
    </member>
    <member name="P:System.Web.UI.WebControls.WebControl.Width">
      <summary>Gets or sets the width of the Web server control.</summary>
      <returns>A <see cref="T:System.Web.UI.WebControls.Unit" /> that represents the width of the control. The default is <see cref="F:System.Web.UI.WebControls.Unit.Empty" />.</returns>
      <exception cref="T:System.ArgumentException">The width of the Web server control was set to a negative value. </exception>
    </member>
    <member name="T:System.Web.UI.WebControls.Wizard">
      <summary>Provides navigation and a user interface (UI) to collect related data across multiple steps.</summary>
    </member>
    <member name="M:System.Web.UI.WebControls.Wizard.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Web.UI.WebControls.Wizard" /> class.</summary>
    </member>
    <member name="P:System.Web.UI.WebControls.Wizard.ActiveStep">
      <summary>Gets the step in the <see cref="P:System.Web.UI.WebControls.Wizard.WizardSteps" /> collection that is currently displayed to the user.</summary>
      <returns>The <see cref="T:System.Web.UI.WebControls.WizardStepBase" /> that is currently displayed to the user.</returns>
      <exception cref="T:System.InvalidOperationException">The corresponding <see cref="P:System.Web.UI.WebControls.Wizard.ActiveStepIndex" /> is less than -1 or greater than the number of <see cref="T:System.Web.UI.WebControls.WizardStepBase" /> objects in the <see cref="T:System.Web.UI.WebControls.Wizard" />.</exception>
    </member>
    <member name="E:System.Web.UI.WebControls.Wizard.ActiveStepChanged">
      <summary>Occurs when the user switches to a new step in the control.</summary>
    </member>
    <member name="P:System.Web.UI.WebControls.Wizard.ActiveStepIndex">
      <summary>Gets or sets the index of the current <see cref="T:System.Web.UI.WebControls.WizardStepBase" /> object.</summary>
      <returns>The index of the <see cref="T:System.Web.UI.WebControls.WizardStepBase" /> that is currently displayed in the <see cref="T:System.Web.UI.WebControls.Wizard" /> control.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">The selected value is higher than the number of wizard steps defined in the <see cref="P:System.Web.UI.WebControls.Wizard.WizardSteps" /> collection.</exception>
    </member>
    <member name="M:System.Web.UI.WebControls.Wizard.AllowNavigationToStep(System.Int32)">
      <summary>Uses a Boolean value to determine whether the <see cref="P:System.Web.UI.WebControls.Wizard.ActiveStep" /> property can be set to the <see cref="T:System.Web.UI.WebControls.WizardStepBase" /> object that corresponds to the index that is passed in.</summary>
      <returns>false if the index passed in refers to a <see cref="T:System.Web.UI.WebControls.WizardStepBase" /> that has already been accessed and its <see cref="P:System.Web.UI.WebControls.WizardStepBase.AllowReturn" /> property is set to false; otherwise, true.</returns>
      <param name="index">The index of the <see cref="T:System.Web.UI.WebControls.WizardStepBase" /> object being checked.</param>
    </member>
    <member name="E:System.Web.UI.WebControls.Wizard.CancelButtonClick">
      <summary>Occurs when the Cancel button is clicked.</summary>
    </member>
    <member name="F:System.Web.UI.WebControls.Wizard.CancelButtonID">
      <summary>Specifies the identifier for the Cancel button. This field is static and read-only.</summary>
    </member>
    <member name="P:System.Web.UI.WebControls.Wizard.CancelButtonImageUrl">
      <summary>Gets or sets the URL of the image displayed for the Cancel button.</summary>
      <returns>The URL of the image displayed for the Cancel button on the <see cref="T:System.Web.UI.WebControls.Wizard" /> control. The default value is an empty string ("").</returns>
    </member>
    <member name="P:System.Web.UI.WebControls.Wizard.CancelButtonStyle">
      <summary>Gets a reference to a collection of style properties that define the appearance of the Cancel button.</summary>
      <returns>A reference to the <see cref="T:System.Web.UI.WebControls.Style" /> that defines the style settings for Cancel on the <see cref="T:System.Web.UI.WebControls.Wizard" />.</returns>
    </member>
    <member name="P:System.Web.UI.WebControls.Wizard.CancelButtonText">
      <summary>Gets or sets the text caption that is displayed for the Cancel button.</summary>
      <returns>The text caption displayed for Cancel on the <see cref="T:System.Web.UI.WebControls.Wizard" />. The default is "Cancel". The default text for the control is localized based on the current locale for the server.</returns>
    </member>
    <member name="P:System.Web.UI.WebControls.Wizard.CancelButtonType">
      <summary>Gets or sets the type of button that is rendered as the Cancel button.</summary>
      <returns>One of the <see cref="T:System.Web.UI.WebControls.ButtonType" /> values. The default is <see cref="F:System.Web.UI.WebControls.ButtonType.Button" />.</returns>
    </member>
    <member name="F:System.Web.UI.WebControls.Wizard.CancelCommandName">
      <summary>Retrieves the command name for the Cancel button. This field is static and read-only.</summary>
    </member>
    <member name="P:System.Web.UI.WebControls.Wizard.CancelDestinationPageUrl">
      <summary>Gets or sets the URL that the user is directed to when they click the Cancel button.</summary>
      <returns>The URL that the user is redirected to when they click Cancel on the <see cref="T:System.Web.UI.WebControls.Wizard" />. The default is an empty string ("").</returns>
    </member>
    <member name="P:System.Web.UI.WebControls.Wizard.CellPadding">
      <summary>Gets or sets the amount of space between the contents of the cell and the cell border.</summary>
      <returns>The amount of space, in pixels, between the contents of a cell and the cell border. The default is 0.</returns>
    </member>
    <member name="P:System.Web.UI.WebControls.Wizard.CellSpacing">
      <summary>Gets or sets the amount of space between cells.</summary>
      <returns>The amount of space, in pixels, between cells. The default is 0.</returns>
    </member>
    <member name="M:System.Web.UI.WebControls.Wizard.CreateChildControls"></member>
    <member name="M:System.Web.UI.WebControls.Wizard.CreateControlCollection"></member>
    <member name="M:System.Web.UI.WebControls.Wizard.CreateControlHierarchy">
      <summary>Creates the hierarchy of child controls that make up the control.</summary>
      <exception cref="T:System.InvalidOperationException">The sidebar template does not contain a <see cref="T:System.Web.UI.WebControls.DataList" /> control.</exception>
    </member>
    <member name="M:System.Web.UI.WebControls.Wizard.CreateControlStyle"></member>
    <member name="F:System.Web.UI.WebControls.Wizard.CustomFinishButtonID">
      <summary>Retrieves the identifier for a custom Finish button. This field is static and read-only.</summary>
    </member>
    <member name="F:System.Web.UI.WebControls.Wizard.CustomNextButtonID">
      <summary>Retrieves the identifier for a custom Next button. This field is static and read-only.</summary>
    </member>
    <member name="F:System.Web.UI.WebControls.Wizard.CustomPreviousButtonID">
      <summary>Retrieves the identifier for a custom Previous button. This field is static and read-only.</summary>
    </member>
    <member name="F:System.Web.UI.WebControls.Wizard.DataListID">
      <summary>Retrieves the identifier for the sidebar <see cref="T:System.Web.UI.WebControls.DataList" /> collection. This field is static and read-only.</summary>
    </member>
    <member name="P:System.Web.UI.WebControls.Wizard.DisplayCancelButton">
      <summary>Gets or sets a Boolean value indicating whether to display a Cancel button.</summary>
      <returns>true to display Cancel on the <see cref="T:System.Web.UI.WebControls.Wizard" />; otherwise, false. The default is false.This property cannot be set by themes or style sheet themes. For more information, see <see cref="T:System.Web.UI.ThemeableAttribute" /> and ASP.NET Themes and Skins.</returns>
    </member>
    <member name="P:System.Web.UI.WebControls.Wizard.DisplaySideBar">
      <summary>Gets or sets a Boolean value indicating whether to display the sidebar area on the <see cref="T:System.Web.UI.WebControls.Wizard" /> control.</summary>
      <returns>true to display the sidebar area on the <see cref="T:System.Web.UI.WebControls.Wizard" />; otherwise, false. The default is true.This property cannot be set by themes or style sheet themes. For more information, see <see cref="T:System.Web.UI.ThemeableAttribute" /> and ASP.NET Themes and Skins.</returns>
    </member>
    <member name="E:System.Web.UI.WebControls.Wizard.FinishButtonClick">
      <summary>Occurs when the Finish button is clicked.</summary>
    </member>
    <member name="F:System.Web.UI.WebControls.Wizard.FinishButtonID">
      <summary>Retrieves the identifier for the Finish button. This field is static and read-only.</summary>
    </member>
    <member name="P:System.Web.UI.WebControls.Wizard.FinishCompleteButtonImageUrl">
      <summary>Gets or sets the URL of the image that is displayed for the Finish button.</summary>
      <returns>The URL of the image displayed for Finish on the <see cref="T:System.Web.UI.WebControls.Wizard" />. The default is an empty string ("").</returns>
    </member>
    <member name="P:System.Web.UI.WebControls.Wizard.FinishCompleteButtonStyle">
      <summary>Gets a reference to a <see cref="T:System.Web.UI.WebControls.Style" /> object that defines the settings for the Finish button.</summary>
      <returns>A reference to the <see cref="T:System.Web.UI.WebControls.Style" /> that defines the style settings for Finish on the <see cref="T:System.Web.UI.WebControls.Wizard" />.</returns>
    </member>
    <member name="P:System.Web.UI.WebControls.Wizard.FinishCompleteButtonText">
      <summary>Gets or sets the text caption that is displayed for the Finish button.</summary>
      <returns>The text caption displayed for Finish on the <see cref="T:System.Web.UI.WebControls.Wizard" />. The default is "Finish". The default text for the control is localized based on the current locale for the server.</returns>
    </member>
    <member name="P:System.Web.UI.WebControls.Wizard.FinishCompleteButtonType">
      <summary>Gets or sets the type of button that is rendered as the Finish button.</summary>
      <returns>One of the <see cref="T:System.Web.UI.WebControls.ButtonType" /> values. The default is <see cref="F:System.Web.UI.WebControls.ButtonType.Button" />.</returns>
    </member>
    <member name="P:System.Web.UI.WebControls.Wizard.FinishDestinationPageUrl">
      <summary>Gets or sets the URL that the user is redirected to when they click the Finish button.</summary>
      <returns>The URL that the user is redirected to when they click Finish on the <see cref="T:System.Web.UI.WebControls.Wizard" />. The default is an empty string ("").</returns>
    </member>
    <member name="P:System.Web.UI.WebControls.Wizard.FinishNavigationTemplate">
      <summary>Gets or sets the template that is used to display the navigation area on the <see cref="F:System.Web.UI.WebControls.WizardStepType.Finish" /> step.</summary>
      <returns>The <see cref="T:System.Web.UI.ITemplate" /> that defines the content for the navigation area for the <see cref="F:System.Web.UI.WebControls.WizardStepType.Finish" /> on the <see cref="T:System.Web.UI.WebControls.Wizard" />. The default is null.</returns>
    </member>
    <member name="F:System.Web.UI.WebControls.Wizard.FinishPreviousButtonID">
      <summary>Retrieves the identifier for the Previous button on the <see cref="F:System.Web.UI.WebControls.WizardStepType.Finish" /> step. This field is static and read-only.</summary>
    </member>
    <member name="P:System.Web.UI.WebControls.Wizard.FinishPreviousButtonImageUrl">
      <summary>Gets or sets the URL of the image that is displayed for the Previous button on the <see cref="F:System.Web.UI.WebControls.WizardStepType.Finish" /> step.</summary>
      <returns>The URL of the image displayed for Previous on the <see cref="F:System.Web.UI.WebControls.WizardStepType.Finish" /> of the <see cref="T:System.Web.UI.WebControls.Wizard" />. The default is an empty string ("").</returns>
    </member>
    <member name="P:System.Web.UI.WebControls.Wizard.FinishPreviousButtonStyle">
      <summary>Gets a reference to a <see cref="T:System.Web.UI.WebControls.Style" /> object that defines the settings for the Previous button on the <see cref="F:System.Web.UI.WebControls.WizardStepType.Finish" /> step.</summary>
      <returns>A reference to the <see cref="T:System.Web.UI.WebControls.Style" /> that defines the style settings for Previous on the <see cref="F:System.Web.UI.WebControls.WizardStepType.Finish" /> of the <see cref="T:System.Web.UI.WebControls.Wizard" />.</returns>
    </member>
    <member name="P:System.Web.UI.WebControls.Wizard.FinishPreviousButtonText">
      <summary>Gets or sets the text caption that is displayed for the Previous button on the <see cref="F:System.Web.UI.WebControls.WizardStepType.Finish" /> step.</summary>
      <returns>The text caption displayed for Previous on the <see cref="F:System.Web.UI.WebControls.WizardStepType.Finish" /> of the <see cref="T:System.Web.UI.WebControls.Wizard" />. The default is "Previous". The default text for the control is localized based on the current locale for the server.</returns>
    </member>
    <member name="P:System.Web.UI.WebControls.Wizard.FinishPreviousButtonType">
      <summary>Gets or sets the type of button that is rendered as the Previous button on the <see cref="F:System.Web.UI.WebControls.WizardStepType.Finish" /> step.</summary>
      <returns>One of the <see cref="T:System.Web.UI.WebControls.ButtonType" /> values. The default is <see cref="F:System.Web.UI.WebControls.ButtonType.Button" />.</returns>
    </member>
    <member name="M:System.Web.UI.WebControls.Wizard.GetDesignModeState"></member>
    <member name="M:System.Web.UI.WebControls.Wizard.GetHistory">
      <summary>Returns a collection of <see cref="T:System.Web.UI.WebControls.WizardStepBase" /> objects that have been accessed.</summary>
      <returns>An <see cref="T:System.Collections.ICollection" /> containing the <see cref="T:System.Web.UI.WebControls.WizardStepBase" /> objects that have been accessed.</returns>
    </member>
    <member name="M:System.Web.UI.WebControls.Wizard.GetStepType(System.Web.UI.WebControls.WizardStepBase,System.Int32)">
      <summary>Returns the <see cref="T:System.Web.UI.WebControls.WizardStepType" /> value for the specified <see cref="T:System.Web.UI.WebControls.WizardStepBase" /> object.</summary>
      <returns>One of the <see cref="T:System.Web.UI.WebControls.WizardStepType" /> values.</returns>
      <param name="wizardStep">The <see cref="T:System.Web.UI.WebControls.WizardStepBase" /> for which the associated <see cref="T:System.Web.UI.WebControls.WizardStepType" />  is returned.</param>
      <param name="index">The index of the <see cref="T:System.Web.UI.WebControls.WizardStepBase" /> for which the associated <see cref="T:System.Web.UI.WebControls.WizardStepType" />  is returned.</param>
    </member>
    <member name="F:System.Web.UI.WebControls.Wizard.HeaderPlaceholderId">
      <summary>Gets the ID of the <see cref="P:System.Web.UI.WebControls.Wizard.HeaderTemplate" /> placeholder in a <see cref="T:System.Web.UI.WebControls.Wizard" /> control.</summary>
    </member>
    <member name="P:System.Web.UI.WebControls.Wizard.HeaderStyle">
      <summary>Gets a reference to a <see cref="T:System.Web.UI.WebControls.Style" /> object that defines the settings for the header area on the control.</summary>
      <returns>A reference to the <see cref="T:System.Web.UI.WebControls.Style" /> that defines the style settings for the header area on the <see cref="T:System.Web.UI.WebControls.Wizard" />.</returns>
    </member>
    <member name="P:System.Web.UI.WebControls.Wizard.HeaderTemplate">
      <summary>Gets or sets the template that is used to display the header area on the control.</summary>
      <returns>An <see cref="T:System.Web.UI.ITemplate" /> that contains the template for displaying the header area on the <see cref="T:System.Web.UI.WebControls.Wizard" />. The default is null.</returns>
    </member>
    <member name="P:System.Web.UI.WebControls.Wizard.HeaderText">
      <summary>Gets or sets the text caption that is displayed for the header area on the control.</summary>
      <returns>The text caption displayed for the header area on the <see cref="T:System.Web.UI.WebControls.Wizard" />. The default is an empty string ("").</returns>
    </member>
    <member name="P:System.Web.UI.WebControls.Wizard.LayoutTemplate">
      <summary>Gets or sets the custom content of the root container in a <see cref="T:System.Web.UI.WebControls.Wizard" /> control.</summary>
      <returns>An object that contains the custom content for the root container in a <see cref="T:System.Web.UI.WebControls.Wizard" /> control. The default is null, which indicates that this property is not set.</returns>
    </member>
    <member name="M:System.Web.UI.WebControls.Wizard.LoadControlState(System.Object)">
      <param name="state"></param>
    </member>
    <member name="M:System.Web.UI.WebControls.Wizard.LoadViewState(System.Object)">
      <param name="savedState"></param>
      <exception cref="T:System.ArgumentException">
        <paramref name="savedState" /> is not a valid <see cref="P:System.Web.UI.PageStatePersister.ViewState" /> value.</exception>
    </member>
    <member name="F:System.Web.UI.WebControls.Wizard.MoveCompleteCommandName">
      <summary>Retrieves the command name that is associated with the Finish button. This field is static and read-only.</summary>
    </member>
    <member name="F:System.Web.UI.WebControls.Wizard.MoveNextCommandName">
      <summary>Retrieves the command name that is associated with the Next button. This field is static and read-only.</summary>
    </member>
    <member name="F:System.Web.UI.WebControls.Wizard.MovePreviousCommandName">
      <summary>Retrieves the command name that is associated with the Previous button. This field is static and read-only. </summary>
    </member>
    <member name="M:System.Web.UI.WebControls.Wizard.MoveTo(System.Web.UI.WebControls.WizardStepBase)">
      <summary>Sets the specified <see cref="T:System.Web.UI.WebControls.WizardStepBase" />-derived object as the value for the <see cref="P:System.Web.UI.WebControls.Wizard.ActiveStep" /> property of the <see cref="T:System.Web.UI.WebControls.Wizard" /> control.</summary>
      <param name="wizardStep">The <see cref="T:System.Web.UI.WebControls.WizardStepBase" />-derived object to set as the <see cref="P:System.Web.UI.WebControls.Wizard.ActiveStep" />.</param>
      <exception cref="T:System.ArgumentNullException">The value of the <see cref="T:System.Web.UI.WebControls.WizardStepBase" />-derived object passed in is null.</exception>
      <exception cref="T:System.ArgumentException">The <see cref="P:System.Web.UI.WebControls.Wizard.ActiveStepIndex" /> of the associated <see cref="T:System.Web.UI.WebControls.WizardStepBase" />-derived object passed in is equal to -1.</exception>
    </member>
    <member name="F:System.Web.UI.WebControls.Wizard.MoveToCommandName">
      <summary>Retrieves the command name that is associated with each of the sidebar buttons. This field is static and read-only. </summary>
    </member>
    <member name="P:System.Web.UI.WebControls.Wizard.NavigationButtonStyle">
      <summary>Gets a reference to a <see cref="T:System.Web.UI.WebControls.Style" /> object that defines the settings for the buttons in the navigation area on the control.</summary>
      <returns>A reference to the <see cref="T:System.Web.UI.WebControls.Style" /> that defines the style settings for the buttons in the navigation area on the <see cref="T:System.Web.UI.WebControls.Wizard" />.</returns>
    </member>
    <member name="F:System.Web.UI.WebControls.Wizard.NavigationPlaceholderId">
      <summary>Gets the ID of the <see cref="P:System.Web.UI.WebControls.Wizard.StartNavigationTemplate" /> placeholder in a <see cref="T:System.Web.UI.WebControls.Wizard" /> control.</summary>
    </member>
    <member name="P:System.Web.UI.WebControls.Wizard.NavigationStyle">
      <summary>Gets a reference to a <see cref="T:System.Web.UI.WebControls.Style" /> object that defines the settings for the navigation area on the control.</summary>
      <returns>A reference to the <see cref="T:System.Web.UI.WebControls.Style" /> that defines the style settings for the navigation area on the <see cref="T:System.Web.UI.WebControls.Wizard" />.</returns>
    </member>
    <member name="E:System.Web.UI.WebControls.Wizard.NextButtonClick">
      <summary>Occurs when the Next button is clicked.</summary>
    </member>
    <member name="M:System.Web.UI.WebControls.Wizard.OnActiveStepChanged(System.Object,System.EventArgs)">
      <summary>Raises the <see cref="E:System.Web.UI.WebControls.Wizard.ActiveStepChanged" /> event.</summary>
      <param name="source">The source of the event.</param>
      <param name="e">An <see cref="T:System.EventArgs" /> that contains the event data.</param>
    </member>
    <member name="M:System.Web.UI.WebControls.Wizard.OnBubbleEvent(System.Object,System.EventArgs)">
      <returns>true if the event has been canceled; otherwise, false. The default is false.</returns>
      <param name="source"></param>
      <param name="e"></param>
    </member>
    <member name="M:System.Web.UI.WebControls.Wizard.OnCancelButtonClick(System.EventArgs)">
      <summary>Raises the <see cref="E:System.Web.UI.WebControls.Wizard.CancelButtonClick" /> event.</summary>
      <param name="e">An <see cref="T:System.EventArgs" /> containing the event data.</param>
    </member>
    <member name="M:System.Web.UI.WebControls.Wizard.OnFinishButtonClick(System.Web.UI.WebControls.WizardNavigationEventArgs)">
      <summary>Raises the <see cref="E:System.Web.UI.WebControls.Wizard.FinishButtonClick" /> event.</summary>
      <param name="e">A <see cref="T:System.Web.UI.WebControls.WizardNavigationEventArgs" /> containing the event data.</param>
    </member>
    <member name="M:System.Web.UI.WebControls.Wizard.OnInit(System.EventArgs)">
      <param name="e"></param>
    </member>
    <member name="M:System.Web.UI.WebControls.Wizard.OnNextButtonClick(System.Web.UI.WebControls.WizardNavigationEventArgs)">
      <summary>Raises the <see cref="E:System.Web.UI.WebControls.Wizard.NextButtonClick" /> event.</summary>
      <param name="e">A <see cref="T:System.Web.UI.WebControls.WizardNavigationEventArgs" /> containing the event data.</param>
    </member>
    <member name="M:System.Web.UI.WebControls.Wizard.OnPreviousButtonClick(System.Web.UI.WebControls.WizardNavigationEventArgs)">
      <summary>Raises the <see cref="E:System.Web.UI.WebControls.Wizard.PreviousButtonClick" /> event.</summary>
      <param name="e">A <see cref="T:System.Web.UI.WebControls.WizardNavigationEventArgs" /> containing event data.</param>
    </member>
    <member name="M:System.Web.UI.WebControls.Wizard.OnSideBarButtonClick(System.Web.UI.WebControls.WizardNavigationEventArgs)">
      <summary>Raises the <see cref="E:System.Web.UI.WebControls.Wizard.SideBarButtonClick" /> event.</summary>
      <param name="e">A <see cref="T:System.Web.UI.WebControls.WizardNavigationEventArgs" /> containing event data.</param>
    </member>
    <member name="E:System.Web.UI.WebControls.Wizard.PreviousButtonClick">
      <summary>Occurs when the Previous button is clicked.</summary>
    </member>
    <member name="M:System.Web.UI.WebControls.Wizard.RegisterCommandEvents(System.Web.UI.WebControls.IButtonControl)">
      <summary>Registers a new instance of the <see cref="T:System.Web.UI.WebControls.CommandEventHandler" /> class for the specified <see cref="T:System.Web.UI.WebControls.IButtonControl" /> object.</summary>
      <param name="button">The <see cref="T:System.Web.UI.WebControls.IButtonControl" /> for which the new instance of <see cref="T:System.Web.UI.WebControls.CommandEventHandler" /> is registered.</param>
    </member>
    <member name="M:System.Web.UI.WebControls.Wizard.Render(System.Web.UI.HtmlTextWriter)">
      <param name="writer"></param>
    </member>
    <member name="M:System.Web.UI.WebControls.Wizard.SaveControlState">
      <returns>Returns the server control's current state. If there is no state associated with the control, this method returns null.</returns>
    </member>
    <member name="M:System.Web.UI.WebControls.Wizard.SaveViewState">
      <returns>An object that contains the current view state of the control; otherwise, if there is no view state associated with the control, null.</returns>
    </member>
    <member name="E:System.Web.UI.WebControls.Wizard.SideBarButtonClick">
      <summary>Occurs when a button in the sidebar area is clicked.</summary>
    </member>
    <member name="F:System.Web.UI.WebControls.Wizard.SideBarButtonID">
      <summary>Retrieves the identifier that is associated with each of the sidebar buttons. This field is static and read-only. </summary>
    </member>
    <member name="P:System.Web.UI.WebControls.Wizard.SideBarButtonStyle">
      <summary>Gets a reference to a <see cref="T:System.Web.UI.WebControls.Style" /> object that defines the settings for the buttons on the sidebar.</summary>
      <returns>A reference to the <see cref="T:System.Web.UI.WebControls.Style" /> that defines the style settings for the buttons on the sidebar of the <see cref="T:System.Web.UI.WebControls.Wizard" />.</returns>
    </member>
    <member name="F:System.Web.UI.WebControls.Wizard.SideBarPlaceholderId">
      <summary>Gets the ID of the <see cref="P:System.Web.UI.WebControls.Wizard.SideBarTemplate" /> placeholder in a <see cref="T:System.Web.UI.WebControls.Wizard" /> control.</summary>
    </member>
    <member name="P:System.Web.UI.WebControls.Wizard.SideBarStyle">
      <summary>Gets a reference to a <see cref="T:System.Web.UI.WebControls.Style" /> object that defines the settings for the sidebar area on the control.</summary>
      <returns>A reference to the <see cref="T:System.Web.UI.WebControls.Style" /> that defines the style settings for the sidebar area on the <see cref="T:System.Web.UI.WebControls.Wizard" />.</returns>
    </member>
    <member name="P:System.Web.UI.WebControls.Wizard.SideBarTemplate">
      <summary>Gets or sets the template that is used to display the sidebar area on the control.</summary>
      <returns>An <see cref="T:System.Web.UI.ITemplate" /> that contains the template for displaying the sidebar area on the <see cref="T:System.Web.UI.WebControls.Wizard" />. The default is null.</returns>
    </member>
    <member name="P:System.Web.UI.WebControls.Wizard.SkipLinkText">
      <summary>Gets or sets a value that is used to render alternate text that notifies screen readers to skip the content in the sidebar area.</summary>
      <returns>A string that the <see cref="T:System.Web.UI.WebControls.Wizard" /> renders as alternate text with an invisible image, as a hint to screen readers. The default is "Skip Navigation Links". The default text for the control is localized based on the current locale for the server.</returns>
    </member>
    <member name="P:System.Web.UI.WebControls.Wizard.StartNavigationTemplate">
      <summary>Gets or sets the template that is used to display the navigation area on the <see cref="F:System.Web.UI.WebControls.WizardStepType.Start" /> step of the <see cref="T:System.Web.UI.WebControls.Wizard" /> control.</summary>
      <returns>An <see cref="T:System.Web.UI.ITemplate" /> that contains the template for displaying the navigation area on the <see cref="F:System.Web.UI.WebControls.WizardStepType.Start" /> for the <see cref="T:System.Web.UI.WebControls.Wizard" />. The default is null.</returns>
    </member>
    <member name="F:System.Web.UI.WebControls.Wizard.StartNextButtonID">
      <summary>Retrieves the identifier that is associated with the Next button on the <see cref="F:System.Web.UI.WebControls.WizardStepType.Start" /> step. This field is static and read-only. </summary>
    </member>
    <member name="P:System.Web.UI.WebControls.Wizard.StartNextButtonImageUrl">
      <summary>Gets or sets the URL of the image that is displayed for the Next button on the <see cref="F:System.Web.UI.WebControls.WizardStepType.Start" /> step.</summary>
      <returns>The URL of the image displayed for Next on the <see cref="F:System.Web.UI.WebControls.WizardStepType.Start" /> of the <see cref="T:System.Web.UI.WebControls.Wizard" />. The default is an empty string ("").</returns>
    </member>
    <member name="P:System.Web.UI.WebControls.Wizard.StartNextButtonStyle">
      <summary>Gets a reference to a <see cref="T:System.Web.UI.WebControls.Style" /> object that defines the settings for the Next button on the <see cref="F:System.Web.UI.WebControls.WizardStepType.Start" /> step.</summary>
      <returns>A reference to the <see cref="T:System.Web.UI.WebControls.Style" /> that defines the style settings for Next on the <see cref="F:System.Web.UI.WebControls.WizardStepType.Start" /> of the <see cref="T:System.Web.UI.WebControls.Wizard" />.</returns>
    </member>
    <member name="P:System.Web.UI.WebControls.Wizard.StartNextButtonText">
      <summary>Gets or sets the text caption that is displayed for the Next button on the <see cref="F:System.Web.UI.WebControls.WizardStepType.Start" /> step.</summary>
      <returns>The text caption displayed for Next on the <see cref="F:System.Web.UI.WebControls.WizardStepType.Start" /> of the <see cref="T:System.Web.UI.WebControls.Wizard" />. The default is "Next". The default text for the control is localized based on the current locale for the server.</returns>
    </member>
    <member name="P:System.Web.UI.WebControls.Wizard.StartNextButtonType">
      <summary>Gets or sets the type of button that is rendered as the Next button on the <see cref="F:System.Web.UI.WebControls.WizardStepType.Start" /> step.</summary>
      <returns>One of the <see cref="T:System.Web.UI.WebControls.ButtonType" /> values. The default is <see cref="F:System.Web.UI.WebControls.ButtonType.Button" />.</returns>
    </member>
    <member name="P:System.Web.UI.WebControls.Wizard.StepNavigationTemplate">
      <summary>Gets or sets the template that is used to display the navigation area on any <see cref="T:System.Web.UI.WebControls.WizardStepBase" />-derived objects other than the <see cref="F:System.Web.UI.WebControls.WizardStepType.Start" />, the <see cref="F:System.Web.UI.WebControls.WizardStepType.Finish" />, or <see cref="F:System.Web.UI.WebControls.WizardStepType.Complete" /> step.</summary>
      <returns>An <see cref="T:System.Web.UI.ITemplate" /> that contains the template for displaying the navigation area on any <see cref="T:System.Web.UI.WebControls.WizardStepBase" />-derived objects of the <see cref="T:System.Web.UI.WebControls.Wizard" /> control other than the <see cref="F:System.Web.UI.WebControls.WizardStepType.Start" />, <see cref="F:System.Web.UI.WebControls.WizardStepType.Finish" />, or <see cref="F:System.Web.UI.WebControls.WizardStepType.Complete" />. The default is null.</returns>
    </member>
    <member name="F:System.Web.UI.WebControls.Wizard.StepNextButtonID">
      <summary>Retrieves the identifier that is associated with the Next button. This field is static and read-only. </summary>
    </member>
    <member name="P:System.Web.UI.WebControls.Wizard.StepNextButtonImageUrl">
      <summary>Gets or sets the URL of the image that is displayed for the Next button.</summary>
      <returns>The URL of the image displayed for Next on the <see cref="T:System.Web.UI.WebControls.Wizard" />.</returns>
    </member>
    <member name="P:System.Web.UI.WebControls.Wizard.StepNextButtonStyle">
      <summary>Gets a reference to the <see cref="T:System.Web.UI.WebControls.Style" /> object that defines the settings for the Next button.</summary>
      <returns>A reference to the <see cref="T:System.Web.UI.WebControls.Style" /> that defines the style settings for Next on the <see cref="T:System.Web.UI.WebControls.Wizard" />.</returns>
    </member>
    <member name="P:System.Web.UI.WebControls.Wizard.StepNextButtonText">
      <summary>Gets or sets the text caption that is displayed for the Next button.</summary>
      <returns>The text caption displayed for Next on the <see cref="T:System.Web.UI.WebControls.Wizard" />. The default is "Next". The default text for the control is localized based on the current locale for the server.</returns>
    </member>
    <member name="P:System.Web.UI.WebControls.Wizard.StepNextButtonType">
      <summary>Gets or sets the type of button that is rendered as the Next button.</summary>
      <returns>One of the <see cref="T:System.Web.UI.WebControls.ButtonType" /> values. The default is <see cref="F:System.Web.UI.WebControls.ButtonType.Button" />.</returns>
    </member>
    <member name="F:System.Web.UI.WebControls.Wizard.StepPreviousButtonID">
      <summary>Retrieves the identifier that is associated with the Previous button. This field is static and read-only. </summary>
    </member>
    <member name="P:System.Web.UI.WebControls.Wizard.StepPreviousButtonImageUrl">
      <summary>Gets or sets the URL of the image that is displayed for the Previous button.</summary>
      <returns>The URL of the image displayed for Previous on the <see cref="T:System.Web.UI.WebControls.Wizard" />.</returns>
    </member>
    <member name="P:System.Web.UI.WebControls.Wizard.StepPreviousButtonStyle">
      <summary>Gets a reference to a <see cref="T:System.Web.UI.WebControls.Style" /> object that defines the settings for the Previous button.</summary>
      <returns>A reference to the <see cref="T:System.Web.UI.WebControls.Style" /> that defines the style settings for Previous on a <see cref="F:System.Web.UI.WebControls.WizardStepType.Step" /> for the <see cref="T:System.Web.UI.WebControls.Wizard" />.</returns>
    </member>
    <member name="P:System.Web.UI.WebControls.Wizard.StepPreviousButtonText">
      <summary>Gets or sets the text caption that is displayed for the Previous button.</summary>
      <returns>The text caption displayed for Previous on the <see cref="T:System.Web.UI.WebControls.Wizard" />. The default is "Previous". The default text for the control is localized based on the current locale for the server.</returns>
    </member>
    <member name="P:System.Web.UI.WebControls.Wizard.StepPreviousButtonType">
      <summary>Gets or sets the type of button that is rendered as the Previous button.</summary>
      <returns>One of the <see cref="T:System.Web.UI.WebControls.ButtonType" /> values. The default is <see cref="F:System.Web.UI.WebControls.ButtonType.Button" />.</returns>
    </member>
    <member name="P:System.Web.UI.WebControls.Wizard.StepStyle">
      <summary>Gets a reference to a <see cref="T:System.Web.UI.WebControls.Style" /> object that defines the settings for the <see cref="T:System.Web.UI.WebControls.WizardStep" /> objects.</summary>
      <returns>A reference to the <see cref="T:System.Web.UI.WebControls.Style" /> that defines the style settings for the <see cref="T:System.Web.UI.WebControls.WizardStep" /> objects on the <see cref="T:System.Web.UI.WebControls.Wizard" />.</returns>
    </member>
    <member name="P:System.Web.UI.WebControls.Wizard.TagKey">
      <summary>Gets the <see cref="T:System.Web.UI.HtmlTextWriterTag" /> value that corresponds to the <see cref="T:System.Web.UI.WebControls.Wizard" /> control.</summary>
      <returns>An <see cref="T:System.Web.UI.HtmlTextWriterTag" />.</returns>
    </member>
    <member name="M:System.Web.UI.WebControls.Wizard.TrackViewState"></member>
    <member name="F:System.Web.UI.WebControls.Wizard.WizardStepPlaceholderId">
      <summary>Gets the ID of the <see cref="T:System.Web.UI.WebControls.WizardStep" /> placeholder in a <see cref="T:System.Web.UI.WebControls.Wizard" /> control.</summary>
    </member>
    <member name="P:System.Web.UI.WebControls.Wizard.WizardSteps">
      <summary>Gets a collection containing all the <see cref="T:System.Web.UI.WebControls.WizardStepBase" /> objects that are defined for the control.</summary>
      <returns>A <see cref="T:System.Web.UI.WebControls.WizardStepCollection" /> representing all the <see cref="T:System.Web.UI.WebControls.WizardStepBase" /> objects defined for the <see cref="T:System.Web.UI.WebControls.Wizard" />.</returns>
    </member>
    <member name="T:System.Web.UI.WebControls.WizardNavigationEventArgs">
      <summary>Provides data for the <see cref="P:System.Web.UI.WebControls.WizardNavigationEventArgs.CurrentStepIndex" /> property and the <see cref="P:System.Web.UI.WebControls.WizardNavigationEventArgs.NextStepIndex" /> property for navigation in wizard controls.</summary>
    </member>
    <member name="M:System.Web.UI.WebControls.WizardNavigationEventArgs.#ctor(System.Int32,System.Int32)">
      <summary>Initializes a new instance of the <see cref="T:System.Web.UI.WebControls.WizardNavigationEventArgs" /> class.</summary>
      <param name="currentStepIndex">The index of the <see cref="T:System.Web.UI.WebControls.WizardStep" /> object that is currently displayed in the <see cref="T:System.Web.UI.WebControls.Wizard" /> control.</param>
      <param name="nextStepIndex">The index of the <see cref="T:System.Web.UI.WebControls.WizardStep" /> object that the <see cref="T:System.Web.UI.WebControls.Wizard" /> control will display next.</param>
    </member>
    <member name="P:System.Web.UI.WebControls.WizardNavigationEventArgs.Cancel">
      <summary>Gets or sets a value indicating whether the navigation to the next step in the wizard should be canceled.</summary>
      <returns>true if the navigation to the next step should be canceled; otherwise, false. The default value is false.</returns>
    </member>
    <member name="P:System.Web.UI.WebControls.WizardNavigationEventArgs.CurrentStepIndex">
      <summary>Gets the index of the <see cref="T:System.Web.UI.WebControls.WizardStep" /> object currently displayed in the <see cref="T:System.Web.UI.WebControls.Wizard" /> control.</summary>
      <returns>A zero-based index value that represents the <see cref="T:System.Web.UI.WebControls.WizardStep" /> object that is currently displayed in the <see cref="T:System.Web.UI.WebControls.Wizard" /> control.</returns>
    </member>
    <member name="P:System.Web.UI.WebControls.WizardNavigationEventArgs.NextStepIndex">
      <summary>Gets a value that represents the index of the <see cref="T:System.Web.UI.WebControls.WizardStep" /> object that the <see cref="T:System.Web.UI.WebControls.Wizard" /> control will display next.</summary>
      <returns>A zero-based index value that represents the <see cref="T:System.Web.UI.WebControls.WizardStep" /> object that the <see cref="T:System.Web.UI.WebControls.Wizard" /> control will display next.</returns>
    </member>
    <member name="T:System.Web.UI.WebControls.WizardNavigationEventHandler">
      <summary>Represents the method that will handle navigation events in a <see cref="T:System.Web.UI.WebControls.Wizard" /> control.</summary>
      <param name="sender">The source of the event. </param>
      <param name="e">An argument of type <see cref="T:System.Web.UI.WebControls.WizardNavigationEventArgs" />  that contains the event data. </param>
    </member>
    <member name="T:System.Web.UI.WebControls.WizardStep">
      <summary>Represents a basic step that is displayed in a <see cref="T:System.Web.UI.WebControls.Wizard" /> control. This class cannot be inherited.</summary>
    </member>
    <member name="M:System.Web.UI.WebControls.WizardStep.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Web.UI.WebControls.WizardStep" /> class. </summary>
    </member>
    <member name="T:System.Web.UI.WebControls.WizardStepBase">
      <summary>Implements the basic functionality required by a step in a <see cref="T:System.Web.UI.WebControls.Wizard" /> control.</summary>
    </member>
    <member name="M:System.Web.UI.WebControls.WizardStepBase.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Web.UI.WebControls.WizardStepBase" /> class. </summary>
    </member>
    <member name="P:System.Web.UI.WebControls.WizardStepBase.AllowReturn">
      <summary>Gets or sets a value indicating whether the user is allowed to return to the current step from a subsequent step in a <see cref="T:System.Web.UI.WebControls.WizardStepCollection" /> collection. </summary>
      <returns>true if the user is allowed to return to the current step; otherwise, false. The default value is true.</returns>
    </member>
    <member name="P:System.Web.UI.WebControls.WizardStepBase.EnableTheming">
      <summary>Gets or sets a value indicating whether themes apply to this control.</summary>
      <returns>true to use themes; otherwise, false. The default is false.</returns>
    </member>
    <member name="P:System.Web.UI.WebControls.WizardStepBase.ID">
      <summary>Gets or sets the programmatic identifier assigned to the server control.</summary>
      <returns>The programmatic identifier assigned to the control.</returns>
      <exception cref="T:System.ArgumentException">The property was set to an invalid identifier string at design time.-or-The property was set to the same identifier as the containing <see cref="P:System.Web.UI.WebControls.WizardStepBase.Wizard" /> control at design time.-or- The property was set to the same identifier as another step in the containing <see cref="P:System.Web.UI.WebControls.WizardStepBase.Wizard" /> control at design time.</exception>
    </member>
    <member name="M:System.Web.UI.WebControls.WizardStepBase.LoadViewState(System.Object)">
      <param name="savedState">An <see cref="T:System.Object" /> that represents the <see cref="T:System.Web.UI.WebControls.WizardStepBase" /> control to restore.</param>
    </member>
    <member name="P:System.Web.UI.WebControls.WizardStepBase.Name">
      <summary>Gets the name associated with a step in a control that acts as a wizard.</summary>
      <returns>The name associated with a step in a control that acts as a wizard.</returns>
    </member>
    <member name="M:System.Web.UI.WebControls.WizardStepBase.OnLoad(System.EventArgs)">
      <summary>Raises the <see cref="M:System.Web.UI.Control.OnLoad(System.EventArgs)" /> event.</summary>
      <param name="e">The <see cref="T:System.EventArgs" /> object that contains the event data.</param>
    </member>
    <member name="M:System.Web.UI.WebControls.WizardStepBase.RenderChildren(System.Web.UI.HtmlTextWriter)">
      <summary>Outputs the content of the <see cref="T:System.Web.UI.WebControls.WizardStepBase" /> control's child controls to the specified <see cref="T:System.Web.UI.HtmlTextWriter" /> object, which writes the content to be rendered on the client.</summary>
      <param name="writer">An <see cref="T:System.Web.UI.HtmlTextWriter" /> that represents the output stream to render HTML content on the client.</param>
    </member>
    <member name="P:System.Web.UI.WebControls.WizardStepBase.StepType">
      <summary>Gets or sets the type of navigation user interface (UI) to display for a step in a <see cref="T:System.Web.UI.WebControls.Wizard" /> control.</summary>
      <returns>One of the <see cref="T:System.Web.UI.WebControls.WizardStepType" /> enumeration values. The default value is WizardStepType.Auto.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">The selected value is not one of the <see cref="T:System.Web.UI.WebControls.WizardStepType" /> enumeration values.</exception>
    </member>
    <member name="P:System.Web.UI.WebControls.WizardStepBase.Title">
      <summary>Gets or sets the title to use for a step in a <see cref="T:System.Web.UI.WebControls.Wizard" /> control when the sidebar feature is enabled.</summary>
      <returns>The title to use for a step in a <see cref="T:System.Web.UI.WebControls.Wizard" /> control when the sidebar feature is enabled. The default value is an empty string ("").</returns>
    </member>
    <member name="P:System.Web.UI.WebControls.WizardStepBase.Wizard">
      <summary>Gets the <see cref="T:System.Web.UI.WebControls.Wizard" /> control that is the parent of the object derived from <see cref="T:System.Web.UI.WebControls.WizardStepBase" />.</summary>
      <returns>The <see cref="T:System.Web.UI.WebControls.Wizard" /> control that is the parent of the object derived from <see cref="T:System.Web.UI.WebControls.WizardStepBase" />.</returns>
    </member>
    <member name="T:System.Web.UI.WebControls.WizardStepCollection">
      <summary>Represents a collection of <see cref="T:System.Web.UI.WebControls.WizardStepBase" />-derived objects in a control that acts as a wizard. This class cannot be inherited.</summary>
    </member>
    <member name="M:System.Web.UI.WebControls.WizardStepCollection.Add(System.Web.UI.WebControls.WizardStepBase)">
      <summary>Appends the specified <see cref="T:System.Web.UI.WebControls.WizardStepBase" />-derived object to the end of the collection.</summary>
      <param name="wizardStep">The <see cref="T:System.Web.UI.WebControls.WizardStepBase" />-derived object to append to the <see cref="T:System.Web.UI.WebControls.WizardStepCollection" /> collection.</param>
      <exception cref="T:System.ArgumentNullException">The <see cref="T:System.Web.UI.WebControls.WizardStepBase" />-derived object passed in is null.</exception>
    </member>
    <member name="M:System.Web.UI.WebControls.WizardStepCollection.AddAt(System.Int32,System.Web.UI.WebControls.WizardStepBase)">
      <summary>Adds the specified <see cref="T:System.Web.UI.WebControls.WizardStepBase" />-derived object to the collection at the specified index location.</summary>
      <param name="index">The index location at which to insert <see cref="T:System.Web.UI.WebControls.WizardStepBase" />-derived object.</param>
      <param name="wizardStep">The <see cref="T:System.Web.UI.WebControls.WizardStepBase" />-derived object to append to the <see cref="T:System.Web.UI.WebControls.WizardStepCollection" /> collection.</param>
      <exception cref="T:System.ArgumentNullException">The <see cref="T:System.Web.UI.WebControls.WizardStepBase" />-derived object passed in is null.</exception>
    </member>
    <member name="M:System.Web.UI.WebControls.WizardStepCollection.Clear">
      <summary>Removes all <see cref="T:System.Web.UI.WebControls.WizardStepBase" />-derived objects from the collection.</summary>
    </member>
    <member name="M:System.Web.UI.WebControls.WizardStepCollection.Contains(System.Web.UI.WebControls.WizardStepBase)">
      <summary>Determines whether the <see cref="T:System.Web.UI.WebControls.WizardStepCollection" /> collection contains a specific <see cref="T:System.Web.UI.WebControls.WizardStepBase" />-derived object.</summary>
      <returns>true if the <see cref="T:System.Web.UI.WebControls.WizardStepBase" />-derived object is found in the <see cref="T:System.Web.UI.WebControls.WizardStepCollection" /> collection; otherwise, false.</returns>
      <param name="wizardStep">The <see cref="T:System.Web.UI.WebControls.WizardStepBase" />-derived object to find in the <see cref="T:System.Web.UI.WebControls.WizardStepCollection" /> collection.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="wizardStep" /> is null.</exception>
    </member>
    <member name="M:System.Web.UI.WebControls.WizardStepCollection.CopyTo(System.Web.UI.WebControls.WizardStepBase[],System.Int32)">
      <summary>Copies all the items from a <see cref="T:System.Web.UI.WebControls.WizardStepCollection" /> collection to a compatible one-dimensional array of <see cref="T:System.Web.UI.WebControls.WizardStepBase" /> objects, starting at the specified index in the target array.</summary>
      <param name="array">A zero-based array of <see cref="T:System.Web.UI.WebControls.WizardStepBase" /> objects that receives the items copied from the collection.</param>
      <param name="index">The position in the target array at which the array starts receiving the copied items.</param>
    </member>
    <member name="P:System.Web.UI.WebControls.WizardStepCollection.Count">
      <summary>Gets the number of <see cref="T:System.Web.UI.WebControls.WizardStepBase" />-derived objects in the <see cref="T:System.Web.UI.WebControls.Wizard" /> control's <see cref="T:System.Web.UI.WebControls.WizardStepCollection" /> collection.</summary>
      <returns>The number of <see cref="T:System.Web.UI.WebControls.WizardStepBase" />-derived objects in the <see cref="T:System.Web.UI.WebControls.Wizard" /> control.</returns>
    </member>
    <member name="M:System.Web.UI.WebControls.WizardStepCollection.GetEnumerator">
      <summary>Returns an <see cref="T:System.Collections.IEnumerator" />-implemented object that can be used to iterate through the <see cref="T:System.Web.UI.WebControls.WizardStepBase" />-derived objects in the collection.</summary>
      <returns>An <see cref="T:System.Collections.IEnumerator" />-implemented object that contains all the <see cref="T:System.Web.UI.WebControls.WizardStepBase" />-derived objects in the <see cref="T:System.Web.UI.WebControls.WizardStepCollection" /> collection.</returns>
    </member>
    <member name="M:System.Web.UI.WebControls.WizardStepCollection.IndexOf(System.Web.UI.WebControls.WizardStepBase)">
      <summary>Determines the index value that represents the position of the specified <see cref="T:System.Web.UI.WebControls.WizardStepBase" />-derived object in the collection.</summary>
      <returns>If found, the zero-based index of the first occurrence of the <see cref="T:System.Web.UI.WebControls.WizardStepBase" />-derived object passed in within the current <see cref="T:System.Web.UI.WebControls.WizardStepCollection" /> collection; otherwise, -1.</returns>
      <param name="wizardStep">The <see cref="T:System.Web.UI.WebControls.WizardStepBase" />-derived object to search for in the <see cref="T:System.Web.UI.WebControls.WizardStepCollection" /> collection.</param>
      <exception cref="T:System.ArgumentNullException">The <see cref="T:System.Web.UI.WebControls.WizardStepBase" />-derived object passed in is null.</exception>
    </member>
    <member name="M:System.Web.UI.WebControls.WizardStepCollection.Insert(System.Int32,System.Web.UI.WebControls.WizardStepBase)">
      <summary>Inserts the specified <see cref="T:System.Web.UI.WebControls.WizardStepBase" />-derived object into the collection at the specified index location.</summary>
      <param name="index">The index location at which to insert the <see cref="T:System.Web.UI.WebControls.WizardStepBase" />-derived object.</param>
      <param name="wizardStep">The <see cref="T:System.Web.UI.WebControls.WizardStepBase" />-derived object to insert into the <see cref="T:System.Web.UI.WebControls.WizardStepCollection" /> collection.</param>
    </member>
    <member name="P:System.Web.UI.WebControls.WizardStepCollection.IsReadOnly">
      <summary>Gets a value indicating whether the <see cref="T:System.Web.UI.WebControls.WizardStepBase" />-derived objects in the collection can be modified.</summary>
      <returns>true if the <see cref="T:System.Web.UI.WebControls.WizardStepCollection" /> collection can be modified; otherwise, false. </returns>
    </member>
    <member name="P:System.Web.UI.WebControls.WizardStepCollection.IsSynchronized">
      <summary>Gets a value indicating whether access to the collection is synchronized (thread-safe).</summary>
      <returns>false in all cases.</returns>
    </member>
    <member name="P:System.Web.UI.WebControls.WizardStepCollection.Item(System.Int32)">
      <summary>Gets a <see cref="T:System.Web.UI.WebControls.WizardStepBase" />-derived object from the collection at the specified index.</summary>
      <returns>The <see cref="T:System.Web.UI.WebControls.WizardStepBase" />-derived object in the <see cref="T:System.Web.UI.WebControls.WizardStepCollection" /> collection at the specified index location.</returns>
      <param name="index">The index of the <see cref="T:System.Web.UI.WebControls.WizardStep" /> object to retrieve.</param>
    </member>
    <member name="M:System.Web.UI.WebControls.WizardStepCollection.Remove(System.Web.UI.WebControls.WizardStepBase)">
      <summary>Removes the specified <see cref="T:System.Web.UI.WebControls.WizardStepBase" />-derived object from the collection.</summary>
      <param name="wizardStep">The <see cref="T:System.Web.UI.WebControls.WizardStepBase" />-derived object to remove from the collection.</param>
      <exception cref="T:System.ArgumentNullException">The <see cref="T:System.Web.UI.WebControls.WizardStepBase" />-derived object passed in is null.</exception>
    </member>
    <member name="M:System.Web.UI.WebControls.WizardStepCollection.RemoveAt(System.Int32)">
      <summary>Removes the <see cref="T:System.Web.UI.WebControls.WizardStepBase" />-derived object from the collection at the specified location.</summary>
      <param name="index">The index of the <see cref="T:System.Web.UI.WebControls.WizardStepBase" />-derived object to remove.</param>
    </member>
    <member name="P:System.Web.UI.WebControls.WizardStepCollection.SyncRoot">
      <summary>Gets an object that can be used to synchronize access to the collection.</summary>
      <returns>An object that can be used to synchronize access to the <see cref="T:System.Web.UI.WebControls.WizardStepCollection" /> collection.</returns>
    </member>
    <member name="M:System.Web.UI.WebControls.WizardStepCollection.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
      <summary>Copies all the items from a <see cref="T:System.Web.UI.WebControls.WizardStepCollection" /> collection to a one-dimensional array, starting at the specified index in the target array.</summary>
      <param name="array">A zero-based <see cref="T:System.Array" /> that receives the items copied from the <see cref="T:System.Web.UI.WebControls.WizardStepCollection" /> collection.</param>
      <param name="index">The position in the target array at which to start receiving the copied content.</param>
    </member>
    <member name="M:System.Web.UI.WebControls.WizardStepCollection.System#Collections#IList#Add(System.Object)">
      <summary>Appends the specified object to the end of the collection.</summary>
      <returns>The position into which the new element was inserted.</returns>
      <param name="value">The <see cref="T:System.Object" /> to append to the end of the collection.</param>
    </member>
    <member name="M:System.Web.UI.WebControls.WizardStepCollection.System#Collections#IList#Contains(System.Object)">
      <summary>Determines whether the collection contains the specified object.</summary>
      <returns>true if the <see cref="T:System.Object" /> is found in the <see cref="T:System.Collections.IList" />; otherwise false.</returns>
      <param name="value">The <see cref="T:System.Object" /> to locate in the collection.</param>
    </member>
    <member name="M:System.Web.UI.WebControls.WizardStepCollection.System#Collections#IList#IndexOf(System.Object)">
      <summary>Determines the index value that represents the position of the specified object in the collection.</summary>
      <returns>The index value of the specified object in the collection.</returns>
      <param name="value">The object to search for in the collection.</param>
    </member>
    <member name="M:System.Web.UI.WebControls.WizardStepCollection.System#Collections#IList#Insert(System.Int32,System.Object)">
      <summary>Inserts the specified object in the collection at the specified position.</summary>
      <param name="index">The index at which to insert the object into the collection.</param>
      <param name="value">The object to insert into the collection.</param>
    </member>
    <member name="P:System.Web.UI.WebControls.WizardStepCollection.System#Collections#IList#IsFixedSize">
      <summary>Gets a value indicating whether the collection has a fixed size.</summary>
      <returns>true if the collection has a fixed size; otherwise, false.</returns>
    </member>
    <member name="P:System.Web.UI.WebControls.WizardStepCollection.System#Collections#IList#Item(System.Int32)">
      <summary>Gets the object at the specified index in the collection.</summary>
      <returns>The object to be retrieved.</returns>
      <param name="index">The index of the object to get from the collection.</param>
    </member>
    <member name="M:System.Web.UI.WebControls.WizardStepCollection.System#Collections#IList#Remove(System.Object)">
      <summary>Removes the specified object from the collection.</summary>
      <param name="value">The object to remove from the collection.</param>
    </member>
    <member name="T:System.Web.UI.WebControls.WizardStepControlBuilder">
      <summary>Interacts with the parser to build a <see cref="T:System.Web.UI.WebControls.WizardStepBase" />-derived control. This class cannot be inherited.</summary>
    </member>
    <member name="M:System.Web.UI.WebControls.WizardStepControlBuilder.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Web.UI.WebControls.WizardStepControlBuilder" /> class.</summary>
    </member>
    <member name="T:System.Web.UI.WebControls.WizardStepType">
      <summary>Specifies the types of navigation UI that can be displayed for a step in a <see cref="T:System.Web.UI.WebControls.Wizard" /> control.</summary>
    </member>
    <member name="F:System.Web.UI.WebControls.WizardStepType.Auto">
      <summary>The navigation UI that is rendered for the step is determined automatically by the order in which the step is declared.</summary>
    </member>
    <member name="F:System.Web.UI.WebControls.WizardStepType.Complete">
      <summary>The step is the last one to appear. No navigation buttons are rendered.</summary>
    </member>
    <member name="F:System.Web.UI.WebControls.WizardStepType.Finish">
      <summary>The step is the final data collection step. Finish and Previous buttons are rendered for navigation.</summary>
    </member>
    <member name="F:System.Web.UI.WebControls.WizardStepType.Start">
      <summary>The step is the first one to appear. A Next button is rendered but a Previous button is not rendered for this step.</summary>
    </member>
    <member name="F:System.Web.UI.WebControls.WizardStepType.Step">
      <summary>The step is any step between the Start and the Finish steps. Previous and Next buttons are rendered for navigation. This step type is useful for overriding the <see cref="F:System.Web.UI.WebControls.WizardStepType.Auto" /> step type.</summary>
    </member>
    <member name="T:System.Web.UI.WebControls.Xml">
      <summary>Displays an XML document without formatting or using Extensible Stylesheet Language Transformations (XSLT).</summary>
    </member>
    <member name="M:System.Web.UI.WebControls.Xml.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Web.UI.WebControls.Xml" /> class.</summary>
    </member>
    <member name="M:System.Web.UI.WebControls.Xml.AddParsedSubObject(System.Object)">
      <param name="obj">An <see cref="T:System.Object" /> that represents the <see cref="T:System.Web.UI.LiteralControl" /> to add.</param>
      <exception cref="T:System.Web.HttpException">
        <paramref name="obj" /> is not of type <see cref="T:System.Web.UI.LiteralControl" />.</exception>
    </member>
    <member name="P:System.Web.UI.WebControls.Xml.ClientID">
      <summary>Overrides the <see cref="P:System.Web.UI.Control.ClientID" /> property and returns the base server control identifier.</summary>
      <returns>The control ID for HTML markup that is generated by ASP.NET.</returns>
    </member>
    <member name="P:System.Web.UI.WebControls.Xml.Controls">
      <summary>Overrides the <see cref="P:System.Web.UI.Control.Controls" /> property and returns the base <see cref="T:System.Web.UI.ControlCollection" /> collection.</summary>
      <returns>The collection of child controls for the specified server control.</returns>
    </member>
    <member name="M:System.Web.UI.WebControls.Xml.CreateControlCollection">
      <summary>Creates a new <see cref="T:System.Web.UI.EmptyControlCollection" /> object.</summary>
      <returns>Always returns an <see cref="T:System.Web.UI.EmptyControlCollection" />.</returns>
    </member>
    <member name="P:System.Web.UI.WebControls.Xml.Document">
      <summary>Gets or sets the <see cref="T:System.Xml.XmlDocument" /> to display in the <see cref="T:System.Web.UI.WebControls.Xml" /> control.</summary>
      <returns>The <see cref="T:System.Xml.XmlDocument" /> to display in the <see cref="T:System.Web.UI.WebControls.Xml" /> control.</returns>
    </member>
    <member name="P:System.Web.UI.WebControls.Xml.DocumentContent">
      <summary>Sets a string that contains the XML document to display in the <see cref="T:System.Web.UI.WebControls.Xml" /> control.</summary>
      <returns>A string that contains the XML document to display in the <see cref="T:System.Web.UI.WebControls.Xml" /> control.</returns>
    </member>
    <member name="P:System.Web.UI.WebControls.Xml.DocumentSource">
      <summary>Gets or sets the path to an XML document to display in the <see cref="T:System.Web.UI.WebControls.Xml" /> control.</summary>
      <returns>The path to an XML document to display in the <see cref="T:System.Web.UI.WebControls.Xml" /> control.</returns>
    </member>
    <member name="P:System.Web.UI.WebControls.Xml.EnableTheming">
      <summary>Overrides the <see cref="P:System.Web.UI.Control.EnableTheming" /> property. This property is not supported by the <see cref="T:System.Web.UI.WebControls.Xml" /> class.</summary>
      <returns>Always returns false. This property is not supported.</returns>
      <exception cref="T:System.NotSupportedException">An attempt is made to set the value of this property.</exception>
    </member>
    <member name="M:System.Web.UI.WebControls.Xml.FindControl(System.String)">
      <summary>Searches the page naming container for the specified server control.</summary>
      <returns>The specified control; otherwise, null if the specified control does not exist.</returns>
      <param name="id">The identifier for the control to be found.</param>
    </member>
    <member name="M:System.Web.UI.WebControls.Xml.Focus">
      <summary>Overrides the <see cref="M:System.Web.UI.Control.Focus" /> method. This method is not supported by the <see cref="T:System.Web.UI.WebControls.Xml" /> class.</summary>
      <exception cref="T:System.NotSupportedException">An attempt is made to invoke this method.</exception>
    </member>
    <member name="M:System.Web.UI.WebControls.Xml.GetDesignModeState">
      <summary>Gets design-time data for a control.</summary>
      <returns>An <see cref="T:System.Collections.IDictionary" /> containing the design-time data for the <see cref="T:System.Web.UI.WebControls.Xml" /> control.</returns>
    </member>
    <member name="M:System.Web.UI.WebControls.Xml.HasControls">
      <summary>Determines whether the server control contains any child controls.</summary>
      <returns>true if the control contains other controls; otherwise, false.</returns>
    </member>
    <member name="M:System.Web.UI.WebControls.Xml.Render(System.Web.UI.HtmlTextWriter)">
      <summary>Renders the results to the output stream.</summary>
      <param name="output"></param>
    </member>
    <member name="P:System.Web.UI.WebControls.Xml.SkinID">
      <summary>Overrides the <see cref="P:System.Web.UI.Control.SkinID" /> property. This property is not supported by the <see cref="T:System.Web.UI.WebControls.Xml" /> class.</summary>
      <returns>Always returns an empty string (""). This property is not supported.</returns>
      <exception cref="T:System.NotSupportedException">An attempt is made to set the value of this property.</exception>
    </member>
    <member name="P:System.Web.UI.WebControls.Xml.Transform">
      <summary>Gets or sets the <see cref="T:System.Xml.Xsl.XslTransform" /> object that formats the XML document before it is written to the output stream.</summary>
      <returns>The <see cref="T:System.Xml.Xsl.XslTransform" /> that formats the XML document before it is written to the output stream.</returns>
    </member>
    <member name="P:System.Web.UI.WebControls.Xml.TransformArgumentList">
      <summary>Gets or sets a <see cref="T:System.Xml.Xsl.XsltArgumentList" /> that contains a list of optional arguments passed to the style sheet and used during the Extensible Stylesheet Language Transformation (XSLT).</summary>
      <returns>A <see cref="T:System.Xml.Xsl.XsltArgumentList" /> that contains a list of optional arguments passed to the style sheet and used during the XSL Transformation.</returns>
    </member>
    <member name="P:System.Web.UI.WebControls.Xml.TransformSource">
      <summary>Gets or sets the path to an Extensible Stylesheet Language Transformation (XSLT) style sheet that formats the XML document before it is written to the output stream.</summary>
      <returns>The path to an XSL Transformation style sheet that formats the XML document before it is written to the output stream.</returns>
    </member>
    <member name="P:System.Web.UI.WebControls.Xml.XPathNavigator">
      <summary>Gets or sets a cursor model for navigating and editing the XML data associated with the <see cref="T:System.Web.UI.WebControls.Xml" /> control.</summary>
      <returns>An <see cref="T:System.Xml.XPath.XPathNavigator" /> object.</returns>
    </member>
    <member name="T:System.Web.UI.WebControls.XmlBuilder">
      <summary>Interacts with the parser to build the <see cref="T:System.Web.UI.WebControls.Xml" /> control.</summary>
    </member>
    <member name="M:System.Web.UI.WebControls.XmlBuilder.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Web.UI.WebControls.XmlBuilder" /> class.</summary>
    </member>
    <member name="M:System.Web.UI.WebControls.XmlBuilder.AppendLiteralString(System.String)">
      <summary>Adds literal content to the control.</summary>
      <param name="s">The literal content to add to the control.</param>
    </member>
    <member name="M:System.Web.UI.WebControls.XmlBuilder.GetChildControlType(System.String,System.Collections.IDictionary)">
      <summary>Obtains the <see cref="T:System.Type" /> for the <see cref="T:System.Web.UI.WebControls.Xml" /> control's specified child control.</summary>
      <returns>The <see cref="M:System.Web.UI.ControlBuilder.GetChildControlType(System.String,System.Collections.IDictionary)" /> method is overridden to always return null.</returns>
      <param name="tagName">The tag name of the child control.</param>
      <param name="attribs">An array of attributes contained in the child control.</param>
    </member>
    <member name="M:System.Web.UI.WebControls.XmlBuilder.NeedsTagInnerText">
      <summary>Determines whether the <see cref="T:System.Web.UI.WebControls.Xml" /> control needs to get its inner text.</summary>
      <returns>The <see cref="M:System.Web.UI.ControlBuilder.NeedsTagInnerText" /> method is overridden to always return true.</returns>
    </member>
    <member name="M:System.Web.UI.WebControls.XmlBuilder.SetTagInnerText(System.String)">
      <summary>Sets the <see cref="T:System.Web.UI.WebControls.Xml" /> control's inner text. </summary>
      <param name="text">The value to insert as the inner text. </param>
      <exception cref="T:System.Xml.XmlException">The <see cref="T:System.String" /> object passed in is not well-formed XML.</exception>
    </member>
    <member name="T:System.Web.UI.WebControls.XmlDataSource">
      <summary>Represents an XML data source to data-bound controls.</summary>
    </member>
    <member name="M:System.Web.UI.WebControls.XmlDataSource.#ctor">
      <summary>Creates a new instance of the <see cref="T:System.Web.UI.WebControls.XmlDataSource" /> class.</summary>
    </member>
    <member name="P:System.Web.UI.WebControls.XmlDataSource.CacheDuration">
      <summary>Gets or sets the length of time, in seconds, that the data source control caches data it has retrieved.</summary>
      <returns>The number of seconds that the <see cref="T:System.Web.UI.WebControls.XmlDataSource" /> control caches the results of a data retrieval operation. The default value is 0.</returns>
    </member>
    <member name="P:System.Web.UI.WebControls.XmlDataSource.CacheExpirationPolicy">
      <summary>Gets or sets the cache expiration policy that is combined with the cache duration to describe the caching behavior of the cache that the data source control uses.</summary>
      <returns>One of the <see cref="T:System.Web.UI.DataSourceCacheExpiry" /> values. The default cache expiration policy setting is <see cref="F:System.Web.UI.DataSourceCacheExpiry.Absolute" />.</returns>
    </member>
    <member name="P:System.Web.UI.WebControls.XmlDataSource.CacheKeyContext">
      <summary>Gets or sets the value of the cache key for the data source control from view state, or adds the cache key to view state.</summary>
      <returns>The value of the cache key, or an empty string if the cache key is not in view state.</returns>
    </member>
    <member name="P:System.Web.UI.WebControls.XmlDataSource.CacheKeyDependency">
      <summary>Gets or sets a user-defined key dependency that is linked to all data cache objects created by the data source control. All cache objects explicitly expire when the key expires.</summary>
      <returns>A key that identifies all cache objects created by the <see cref="T:System.Web.UI.WebControls.XmlDataSource" /> control.</returns>
    </member>
    <member name="P:System.Web.UI.WebControls.XmlDataSource.Data">
      <summary>Gets or sets a block of XML data that the data source control binds to.</summary>
      <returns>A string of inline XML data that the <see cref="T:System.Web.UI.WebControls.XmlDataSource" /> control binds to. The default value is <see cref="F:System.String.Empty" />.</returns>
      <exception cref="T:System.InvalidOperationException">The document is loading.</exception>
    </member>
    <member name="P:System.Web.UI.WebControls.XmlDataSource.DataFile">
      <summary>Specifies the file name of an XML file that the data source binds to.</summary>
      <returns>The absolute physical path or relative path of the XML file that contains data that the <see cref="T:System.Web.UI.WebControls.XmlDataSource" /> control represents. The default value is <see cref="F:System.String.Empty" />.</returns>
      <exception cref="T:System.InvalidOperationException">The document is loading.</exception>
    </member>
    <member name="P:System.Web.UI.WebControls.XmlDataSource.EnableCaching">
      <summary>Gets or sets a value indicating whether the <see cref="T:System.Web.UI.WebControls.XmlDataSource" /> control has data caching enabled.</summary>
      <returns>true if data caching is enabled for the data source control; otherwise, false. The default value is true.</returns>
    </member>
    <member name="M:System.Web.UI.WebControls.XmlDataSource.GetHierarchicalView(System.String)">
      <summary>Gets the data source view object for the <see cref="T:System.Web.UI.WebControls.XmlDataSource" /> control. The <paramref name="viewPath" /> parameter can be an XPath expression.</summary>
      <returns>Returns an <see cref="T:System.Web.UI.WebControls.XmlHierarchicalDataSourceView" /> object that represents a single view of the data starting with the data node identified by <paramref name="viewPath" />.</returns>
      <param name="viewPath">An XPath expression that identifies a node from which the current hierarchical view is built. </param>
    </member>
    <member name="M:System.Web.UI.WebControls.XmlDataSource.GetXmlDocument">
      <summary>Loads the XML data into memory, either directly from the underlying data storage or from the cache, and returns it in the form of an <see cref="T:System.Xml.XmlDataDocument" /> object.</summary>
      <returns>An <see cref="T:System.Xml.XmlDataDocument" /> object that represents the XML specified in the <see cref="P:System.Web.UI.WebControls.XmlDataSource.Data" /> property or in the file identified by the <see cref="P:System.Web.UI.WebControls.XmlDataSource.DataFile" /> property, with any transformations and <see cref="P:System.Web.UI.WebControls.XmlDataSource.XPath" /> queries applied.</returns>
      <exception cref="T:System.InvalidOperationException">A URL is specified for the <see cref="P:System.Web.UI.WebControls.XmlDataSource.DataFile" /> property; however, the <see cref="T:System.Web.UI.WebControls.XmlDataSource" /> control does not have the correct permissions for the Web resource.</exception>
      <exception cref="T:System.NotSupportedException">A URL is specified for the <see cref="P:System.Web.UI.WebControls.XmlDataSource.DataFile" /> property; however, it is not an HTTP-based URL. - or -A design-time relative path was not mapped correctly by the designer before using the <see cref="T:System.Web.UI.WebControls.XmlDataSource" /> control.- or -Both caching and client impersonation are enabled. The <see cref="T:System.Web.UI.WebControls.XmlDataSource" /> control does not support caching when client impersonation is enabled.</exception>
      <exception cref="T:System.Web.HttpException">Access is denied to the path specified for the <see cref="P:System.Web.UI.WebControls.XmlDataSource.DataFile" /> property.</exception>
    </member>
    <member name="M:System.Web.UI.WebControls.XmlDataSource.OnTransforming(System.EventArgs)">
      <summary>Raises the <see cref="E:System.Web.UI.WebControls.XmlDataSource.Transforming" /> event before the <see cref="T:System.Web.UI.WebControls.XmlDataSource" /> control performs an XSLT transformation on its XML data.</summary>
      <param name="e">An <see cref="T:System.EventArgs" /> that contains the event data. </param>
    </member>
    <member name="M:System.Web.UI.WebControls.XmlDataSource.Save">
      <summary>Saves the XML data currently held in memory by the <see cref="T:System.Web.UI.WebControls.XmlDataSource" /> control to disk if the <see cref="P:System.Web.UI.WebControls.XmlDataSource.DataFile" /> property is set.</summary>
      <exception cref="T:System.InvalidOperationException">XML data was loaded using the <see cref="P:System.Web.UI.WebControls.XmlDataSource.Data" /> property instead of the <see cref="P:System.Web.UI.WebControls.XmlDataSource.DataFile" /> property. - or -A URL is specified for the <see cref="P:System.Web.UI.WebControls.XmlDataSource.DataFile" /> property; however, the <see cref="T:System.Web.UI.WebControls.XmlDataSource" /> control does not have the correct permissions for the Web resource.</exception>
      <exception cref="T:System.NotSupportedException">A URL is specified for the <see cref="P:System.Web.UI.WebControls.XmlDataSource.DataFile" /> property; however, it is not an HTTP-based URL. - or -A design-time relative path was not mapped correctly by the designer before using the <see cref="T:System.Web.UI.WebControls.XmlDataSource" /> control.</exception>
      <exception cref="T:System.Web.HttpException">Access is denied to the path specified for the <see cref="P:System.Web.UI.WebControls.XmlDataSource.DataFile" /> property.</exception>
    </member>
    <member name="P:System.Web.UI.WebControls.XmlDataSource.System#ComponentModel#IListSource#ContainsListCollection">
      <summary>For a description of this member, see <see cref="P:System.ComponentModel.IListSource.ContainsListCollection" />.</summary>
      <returns>true if the collection is a collection of <see cref="T:System.Collections.IList" /> objects; otherwise, false.</returns>
    </member>
    <member name="M:System.Web.UI.WebControls.XmlDataSource.System#ComponentModel#IListSource#GetList">
      <summary>For a description of this member, see <see cref="M:System.ComponentModel.IListSource.GetList" />.</summary>
      <returns>An object implementing <see cref="T:System.Collections.IList" /> that can be bound to a data source.</returns>
    </member>
    <member name="E:System.Web.UI.WebControls.XmlDataSource.System#Web#UI#IDataSource#DataSourceChanged">
      <summary>For a description of this member, see <see cref="E:System.Web.UI.IDataSource.DataSourceChanged" />.</summary>
    </member>
    <member name="M:System.Web.UI.WebControls.XmlDataSource.System#Web#UI#IDataSource#GetView(System.String)">
      <summary>Gets the named data source view associated with the data source control.</summary>
      <returns>Returns the named <see cref="T:System.Web.UI.WebControls.XmlDataSourceView" /> object associated with the <see cref="T:System.Web.UI.WebControls.XmlDataSource" /> control.</returns>
      <param name="viewName">The name of the view to retrieve. If <see cref="F:System.String.Empty" /> is specified, the default view for the <see cref="T:System.Web.UI.WebControls.XmlDataSource" /> control is retrieved. </param>
    </member>
    <member name="M:System.Web.UI.WebControls.XmlDataSource.System#Web#UI#IDataSource#GetViewNames">
      <summary>For a description of this member, see <see cref="M:System.Web.UI.IDataSource.GetViewNames" />.</summary>
      <returns>An object implementing <see cref="T:System.Collections.ICollection" /> containing names representing the list of view objects associated with the <see cref="T:System.Web.UI.IDataSource" /> object.</returns>
    </member>
    <member name="P:System.Web.UI.WebControls.XmlDataSource.Transform">
      <summary>Gets or sets a block of Extensible Stylesheet Language (XSL) data that defines an XSLT transformation to be performed on the XML data managed by the <see cref="T:System.Web.UI.WebControls.XmlDataSource" /> control.</summary>
      <returns>A string of inline XSL that defines an XML transformation to be performed on the data contained in the <see cref="P:System.Web.UI.WebControls.XmlDataSource.Data" /> or <see cref="P:System.Web.UI.WebControls.XmlDataSource.DataFile" /> properties. The default value is <see cref="F:System.String.Empty" />.</returns>
      <exception cref="T:System.InvalidOperationException">The document is loading.</exception>
    </member>
    <member name="P:System.Web.UI.WebControls.XmlDataSource.TransformArgumentList">
      <summary>Provides a list of XSLT arguments that are used with the style sheet defined by the <see cref="P:System.Web.UI.WebControls.XmlDataSource.Transform" /> or <see cref="P:System.Web.UI.WebControls.XmlDataSource.TransformFile" /> properties to perform a transformation on the XML data.</summary>
      <returns>An <see cref="T:System.Xml.Xsl.XsltArgumentList" /> object that contains XSLT parameters and objects to be applied to XML data when it is loaded by the <see cref="T:System.Web.UI.WebControls.XmlDataSource" /> control. The default value is null.</returns>
    </member>
    <member name="P:System.Web.UI.WebControls.XmlDataSource.TransformFile">
      <summary>Specifies the file name of an Extensible Stylesheet Language (XSL) file (.xsl) that defines an XSLT transformation to be performed on the XML data managed by the <see cref="T:System.Web.UI.WebControls.XmlDataSource" /> control.</summary>
      <returns>The absolute physical path or relative path of the XSL style sheet file that defines an XML transformation to be performed on the data contained in the <see cref="P:System.Web.UI.WebControls.XmlDataSource.Data" /> or <see cref="P:System.Web.UI.WebControls.XmlDataSource.DataFile" /> properties. The default value is <see cref="F:System.String.Empty" />.</returns>
      <exception cref="T:System.InvalidOperationException">The document is loading.</exception>
    </member>
    <member name="E:System.Web.UI.WebControls.XmlDataSource.Transforming">
      <summary>Occurs before the style sheet that is defined by the <see cref="P:System.Web.UI.WebControls.XmlDataSource.Transform" /> property or identified by the <see cref="P:System.Web.UI.WebControls.XmlDataSource.TransformFile" /> property is applied to XML data.</summary>
    </member>
    <member name="P:System.Web.UI.WebControls.XmlDataSource.XPath">
      <summary>Specifies an XPath expression to be applied to the XML data contained by the <see cref="P:System.Web.UI.WebControls.XmlDataSource.Data" /> property or by the XML file indicated by the <see cref="P:System.Web.UI.WebControls.XmlDataSource.DataFile" /> property.</summary>
      <returns>A string that represents an XPath expression that can be used to filter the data contained by the <see cref="P:System.Web.UI.WebControls.XmlDataSource.Data" /> property or by the XML file indicated by the <see cref="P:System.Web.UI.WebControls.XmlDataSource.DataFile" /> property. The default value is <see cref="F:System.String.Empty" />.</returns>
      <exception cref="T:System.InvalidOperationException">The document is loading.</exception>
    </member>
    <member name="T:System.Web.UI.WebControls.XmlDataSourceView">
      <summary>Represents a tabular data source view on XML data for an <see cref="T:System.Web.UI.WebControls.XmlDataSource" /> control.</summary>
    </member>
    <member name="M:System.Web.UI.WebControls.XmlDataSourceView.#ctor(System.Web.UI.WebControls.XmlDataSource,System.String)">
      <summary>Initializes a new named instance of the <see cref="T:System.Web.UI.WebControls.XmlDataSourceView" /> class, and associates the specified <see cref="T:System.Web.UI.WebControls.XmlDataSource" /> with it.</summary>
      <param name="owner">The <see cref="T:System.Web.UI.WebControls.XmlDataSource" /> that the <see cref="T:System.Web.UI.WebControls.XmlDataSourceView" /> is associated with. </param>
      <param name="name">The name of the view. </param>
    </member>
    <member name="M:System.Web.UI.WebControls.XmlDataSourceView.Select(System.Web.UI.DataSourceSelectArguments)">
      <summary>Retrieves a list of data rows from the underlying XML.</summary>
      <returns>An <see cref="T:System.Collections.IEnumerable" /> collection of data items.</returns>
      <param name="arguments">A <see cref="T:System.Web.UI.DataSourceSelectArguments" /> object that is used to request operations on the data beyond basic data retrieval.</param>
    </member>
    <member name="T:System.Web.UI.WebControls.XmlHierarchicalDataSourceView">
      <summary>Represents a data view on an XML node or collection of XML nodes for an <see cref="T:System.Web.UI.WebControls.XmlDataSource" /> control.</summary>
    </member>
    <member name="M:System.Web.UI.WebControls.XmlHierarchicalDataSourceView.Select">
      <summary>Gets a list of the data items from the underlying data source.</summary>
      <returns>An <see cref="T:System.Web.UI.IHierarchicalEnumerable" /> collection of data items based on the hierarchical level of the current view.</returns>
    </member>
    <member name="T:System.Web.UI.WebControls.Adapters.DataBoundControlAdapter">
      <summary>Customizes the behavior of a <see cref="T:System.Web.UI.WebControls.DataBoundControl" /> object with which the adapter is associated for specific browser requests.</summary>
    </member>
    <member name="M:System.Web.UI.WebControls.Adapters.DataBoundControlAdapter.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Web.UI.WebControls.Adapters.DataBoundControlAdapter" /> class.</summary>
    </member>
    <member name="P:System.Web.UI.WebControls.Adapters.DataBoundControlAdapter.Control">
      <summary>Retrieves a strongly-typed reference to the <see cref="T:System.Web.UI.WebControls.DataBoundControl" /> object associated with this control adapter.</summary>
      <returns>The <see cref="T:System.Web.UI.WebControls.DataBoundControl" /> to which this <see cref="T:System.Web.UI.WebControls.Adapters.DataBoundControlAdapter" /> is attached.</returns>
    </member>
    <member name="M:System.Web.UI.WebControls.Adapters.DataBoundControlAdapter.PerformDataBinding(System.Collections.IEnumerable)">
      <summary>Binds the data in the data source of the associated <see cref="T:System.Web.UI.WebControls.DataBoundControl" /> object to the control adapter.</summary>
      <param name="data">An <see cref="T:System.Collections.IEnumerable" /> of <see cref="T:System.Object" /> to be bound to the derived <see cref="T:System.Web.UI.WebControls.DataBoundControl" />.</param>
    </member>
    <member name="T:System.Web.UI.WebControls.Adapters.HideDisabledControlAdapter">
      <summary>Provides rendering capabilities for the associated Web control to modify the default markup or behavior for a specific browser.</summary>
    </member>
    <member name="M:System.Web.UI.WebControls.Adapters.HideDisabledControlAdapter.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Web.UI.WebControls.Adapters.HideDisabledControlAdapter" /> class. </summary>
    </member>
    <member name="M:System.Web.UI.WebControls.Adapters.HideDisabledControlAdapter.Render(System.Web.UI.HtmlTextWriter)">
      <summary>Writes the associated Web control to the output stream as HTML.</summary>
      <param name="writer">The <see cref="T:System.Web.UI.HtmlTextWriter" /> containing methods to build and render the device-specific output. </param>
    </member>
    <member name="T:System.Web.UI.WebControls.Adapters.HierarchicalDataBoundControlAdapter">
      <summary>Customizes the behavior of a <see cref="T:System.Web.UI.WebControls.HierarchicalDataBoundControl" /> object with which this control adapter is associated, for specific browser requests.</summary>
    </member>
    <member name="M:System.Web.UI.WebControls.Adapters.HierarchicalDataBoundControlAdapter.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Web.UI.WebControls.Adapters.HierarchicalDataBoundControlAdapter" /> class.</summary>
    </member>
    <member name="P:System.Web.UI.WebControls.Adapters.HierarchicalDataBoundControlAdapter.Control">
      <summary>Retrieves a strongly typed reference to the <see cref="T:System.Web.UI.WebControls.HierarchicalDataBoundControl" /> control associated with this <see cref="T:System.Web.UI.WebControls.Adapters.HierarchicalDataBoundControlAdapter" /> object.</summary>
      <returns>The <see cref="T:System.Web.UI.WebControls.HierarchicalDataBoundControl" /> associated with the current instance of <see cref="T:System.Web.UI.WebControls.Adapters.HierarchicalDataBoundControlAdapter" />.</returns>
    </member>
    <member name="M:System.Web.UI.WebControls.Adapters.HierarchicalDataBoundControlAdapter.PerformDataBinding">
      <summary>Binds the data in the data source of the associated hierarchical data-bound control to the adapter.</summary>
    </member>
    <member name="T:System.Web.UI.WebControls.Adapters.MenuAdapter">
      <summary>Provides the means to modify the behavior of the <see cref="T:System.Web.UI.WebControls.Menu" /> control for specific browsers.</summary>
    </member>
    <member name="M:System.Web.UI.WebControls.Adapters.MenuAdapter.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Web.UI.WebControls.Adapters.MenuAdapter" /> class.</summary>
    </member>
    <member name="P:System.Web.UI.WebControls.Adapters.MenuAdapter.Control">
      <summary>Retrieves a strongly typed reference to the <see cref="T:System.Web.UI.WebControls.Menu" /> control associated with this <see cref="T:System.Web.UI.WebControls.Adapters.MenuAdapter" /> object.</summary>
      <returns>The <see cref="T:System.Web.UI.WebControls.Menu" /> control associated with the current <see cref="T:System.Web.UI.WebControls.Adapters.MenuAdapter" /> object.</returns>
    </member>
    <member name="M:System.Web.UI.WebControls.Adapters.MenuAdapter.LoadAdapterControlState(System.Object)">
      <summary>Loads any control state information that was saved by the <see cref="M:System.Web.UI.WebControls.Adapters.MenuAdapter.SaveAdapterControlState" /> method during a previous request to the page.</summary>
      <param name="state">An <see cref="T:System.Object" /> in the form of a dictionary that contains the adapter's state information.</param>
    </member>
    <member name="M:System.Web.UI.WebControls.Adapters.MenuAdapter.OnInit(System.EventArgs)">
      <summary>Registers the associated <see cref="T:System.Web.UI.WebControls.Menu" /> control as one that requires control state.</summary>
      <param name="e">The <see cref="T:System.EventArgs" /> data associated with this event.</param>
    </member>
    <member name="M:System.Web.UI.WebControls.Adapters.MenuAdapter.OnPreRender(System.EventArgs)">
      <summary>Handles the <see cref="M:System.Web.UI.Control.OnPreRender(System.EventArgs)" /> method for the associated <see cref="T:System.Web.UI.WebControls.Menu" /> control.</summary>
      <param name="e">The <see cref="T:System.EventArgs" /> data associated with this event.</param>
    </member>
    <member name="M:System.Web.UI.WebControls.Adapters.MenuAdapter.RaisePostBackEvent(System.String)">
      <summary>Used to maintain the path of the menu when a postback event is raised.</summary>
      <param name="eventArgument">A <see cref="T:System.String" /> that represents the path of the current node in the menu hierarchy.</param>
      <exception cref="T:System.InvalidOperationException">The depth of the current node is more than allowed. This can be caused by an invalid declaration, by a change since the last request, or by a forged (spoofed) request.</exception>
    </member>
    <member name="M:System.Web.UI.WebControls.Adapters.MenuAdapter.RenderBeginTag(System.Web.UI.HtmlTextWriter)">
      <summary>Adds tag attributes and writes the markup for the opening tag of the control to the output stream emitted to the browser or device.</summary>
      <param name="writer">The <see cref="T:System.Web.UI.HtmlTextWriter" /> instance containing methods to build and render the device-specific output.</param>
    </member>
    <member name="M:System.Web.UI.WebControls.Adapters.MenuAdapter.RenderContents(System.Web.UI.HtmlTextWriter)">
      <summary>Writes the associated menu items in the associated <see cref="T:System.Web.UI.WebControls.Menu" /> control to the output stream as a series of hyperlinks.</summary>
      <param name="writer">The <see cref="T:System.Web.UI.HtmlTextWriter" /> containing methods to build and render the device-specific output.</param>
      <exception cref="T:System.InvalidOperationException">The depth of the current item is more than allowed.-or-The current item is disabled.</exception>
    </member>
    <member name="M:System.Web.UI.WebControls.Adapters.MenuAdapter.RenderEndTag(System.Web.UI.HtmlTextWriter)">
      <summary>Creates final markup and writes the markup for the closing tag of the control to the output stream emitted to the browser or device.</summary>
      <param name="writer">The <see cref="T:System.Web.UI.HtmlTextWriter" /> instance containing methods to build and render the device-specific output.</param>
    </member>
    <member name="M:System.Web.UI.WebControls.Adapters.MenuAdapter.RenderItem(System.Web.UI.HtmlTextWriter,System.Web.UI.WebControls.MenuItem,System.Int32)">
      <summary>Renders a single menu item as a hyperlink.</summary>
      <param name="writer">The <see cref="T:System.Web.UI.HtmlTextWriter" /> instance containing methods to build and render the device-specific output.</param>
      <param name="item">The <see cref="T:System.Web.UI.WebControls.MenuItem" /> object containing the properties to write to the response stream. </param>
      <param name="position">The position of the specified <see cref="T:System.Web.UI.WebControls.MenuItem" /> object in the menu hierarchy.</param>
    </member>
    <member name="M:System.Web.UI.WebControls.Adapters.MenuAdapter.SaveAdapterControlState">
      <summary>Saves any changes to the adapter private control state that have occurred since the page was posted back to the server.</summary>
      <returns>An <see cref="T:System.Object" /> that contains the adapter's control state information as a <see cref="T:System.Web.UI.StateBag" />.</returns>
    </member>
    <member name="M:System.Web.UI.WebControls.Adapters.MenuAdapter.System#Web#UI#IPostBackEventHandler#RaisePostBackEvent(System.String)">
      <summary>Enables the <see cref="T:System.Web.UI.WebControls.Adapters.MenuAdapter" /> class to process an event raised when a page is posted back to the server.</summary>
      <param name="eventArgument">A <see cref="T:System.String" /> that contains an optional event argument to pass to the event handler.</param>
    </member>
    <member name="T:System.Web.UI.WebControls.Adapters.WebControlAdapter">
      <summary>Customizes rendering for the Web control to which the control adapter is attached, to modify the default markup or behavior for specific browsers.</summary>
    </member>
    <member name="M:System.Web.UI.WebControls.Adapters.WebControlAdapter.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Web.UI.WebControls.Adapters.WebControlAdapter" /> class.</summary>
    </member>
    <member name="P:System.Web.UI.WebControls.Adapters.WebControlAdapter.Control">
      <summary>Gets a reference to the Web control to which this control adapter is attached.</summary>
      <returns>The <see cref="T:System.Web.UI.WebControls.WebControl" /> to which this <see cref="T:System.Web.UI.WebControls.Adapters.WebControlAdapter" /> is attached.</returns>
    </member>
    <member name="P:System.Web.UI.WebControls.Adapters.WebControlAdapter.IsEnabled">
      <summary>Gets a value indicating whether the Web control and all its parent controls are enabled.</summary>
      <returns>true if the associated <see cref="T:System.Web.UI.WebControls.WebControl" /> and all its parent controls are enabled; otherwise, false.</returns>
    </member>
    <member name="M:System.Web.UI.WebControls.Adapters.WebControlAdapter.Render(System.Web.UI.HtmlTextWriter)">
      <summary>Generates the target-specific markup for the control to which the control adapter is attached.</summary>
      <param name="writer">The <see cref="T:System.Web.UI.HtmlTextWriter" /> containing methods to render the target-specific output. </param>
    </member>
    <member name="M:System.Web.UI.WebControls.Adapters.WebControlAdapter.RenderBeginTag(System.Web.UI.HtmlTextWriter)">
      <summary>Creates the beginning tag for the Web control in the markup that is transmitted to the target browser.</summary>
      <param name="writer">The <see cref="T:System.Web.UI.HtmlTextWriter" /> containing methods to render the target-specific output. </param>
    </member>
    <member name="M:System.Web.UI.WebControls.Adapters.WebControlAdapter.RenderContents(System.Web.UI.HtmlTextWriter)">
      <summary>Generates the target-specific inner markup for the Web control to which the control adapter is attached.</summary>
      <param name="writer">The <see cref="T:System.Web.UI.HtmlTextWriter" /> containing methods to render the target-specific output. </param>
    </member>
    <member name="M:System.Web.UI.WebControls.Adapters.WebControlAdapter.RenderEndTag(System.Web.UI.HtmlTextWriter)">
      <summary>Creates the ending tag for the Web control in the markup that is transmitted to the target browser.</summary>
      <param name="writer">The <see cref="T:System.Web.UI.HtmlTextWriter" /> containing methods to render the target-specific output. </param>
    </member>
    <member name="T:System.Web.UI.WebControls.WebParts.AppearanceEditorPart">
      <summary>Provides an editor control that enables end users to edit several user interface (UI) properties on an associated <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> control. This class cannot be inherited.</summary>
    </member>
    <member name="M:System.Web.UI.WebControls.WebParts.AppearanceEditorPart.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Web.UI.WebControls.WebParts.AppearanceEditorPart" /> class.</summary>
    </member>
    <member name="M:System.Web.UI.WebControls.WebParts.AppearanceEditorPart.ApplyChanges">
      <summary>Saves the values from an <see cref="T:System.Web.UI.WebControls.WebParts.AppearanceEditorPart" /> control to the corresponding properties in the associated <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> control.</summary>
      <returns>true if the action of saving values from the <see cref="T:System.Web.UI.WebControls.WebParts.AppearanceEditorPart" /> control to the <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> control is successful; otherwise (if an error occurs), false.</returns>
      <exception cref="T:System.Exception">An error occurs when setting the value for any of the following properties on the <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> control that is being edited:<see cref="P:System.Web.UI.WebControls.WebParts.Part.Title" /><see cref="P:System.Web.UI.WebControls.WebParts.Part.ChromeType" /><see cref="P:System.Web.UI.WebControls.WebParts.WebPart.Direction" /><see cref="P:System.Web.UI.WebControls.WebParts.WebPart.Height" /><see cref="P:System.Web.UI.WebControls.WebParts.WebPart.Width" /><see cref="P:System.Web.UI.WebControls.WebParts.WebPart.Hidden" /></exception>
    </member>
    <member name="P:System.Web.UI.WebControls.WebParts.AppearanceEditorPart.DefaultButton">
      <summary>Overrides the base property inherited from the <see cref="T:System.Web.UI.WebControls.Panel" /> control to hide the property from designers and prevent it from being affected by themes. Though it is public, this property is used for default rendering of this control and is not intended to be called from developer code.</summary>
      <returns>A string that contains the ID of the <see cref="T:System.Web.UI.WebControls.Button" /> control that receives the default focus in a <see cref="T:System.Web.UI.WebControls.Panel" /> control.</returns>
    </member>
    <member name="M:System.Web.UI.WebControls.WebParts.AppearanceEditorPart.SyncChanges">
      <summary>Retrieves the property values from a <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> control and assigns them to the associated <see cref="T:System.Web.UI.WebControls.WebParts.AppearanceEditorPart" /> control.</summary>
    </member>
    <member name="P:System.Web.UI.WebControls.WebParts.AppearanceEditorPart.Title">
      <summary>Gets or sets a title for the editor control.</summary>
      <returns>A string that is used as the title of the control. The default value is a calculated control name supplied by the Web Parts control set.</returns>
    </member>
    <member name="T:System.Web.UI.WebControls.WebParts.BehaviorEditorPart">
      <summary>Provides an editor control that enables end users to edit several user interface (UI) properties on an associated <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> control. This class cannot be inherited.</summary>
    </member>
    <member name="M:System.Web.UI.WebControls.WebParts.BehaviorEditorPart.#ctor">
      <summary>Creates a new instance of the class.</summary>
    </member>
    <member name="M:System.Web.UI.WebControls.WebParts.BehaviorEditorPart.ApplyChanges">
      <summary>Saves the values from a <see cref="T:System.Web.UI.WebControls.WebParts.BehaviorEditorPart" /> control to the corresponding properties in the associated <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> control.</summary>
      <returns>true if the action of saving values from the <see cref="T:System.Web.UI.WebControls.WebParts.BehaviorEditorPart" /> control to the <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> control is successful; otherwise (if an error occurs), false.</returns>
      <exception cref="T:System.Exception">An error occurred when trying to set the value for a property on the associated <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> control.</exception>
    </member>
    <member name="P:System.Web.UI.WebControls.WebParts.BehaviorEditorPart.DefaultButton">
      <summary>Gets or sets the ID of the default button on the control.</summary>
      <returns>A string that contains the ID of the default button.</returns>
    </member>
    <member name="P:System.Web.UI.WebControls.WebParts.BehaviorEditorPart.Display">
      <summary>Gets a value that indicates whether a control should be displayed when its associated <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> control is in edit mode.</summary>
      <returns>A Boolean value that indicates whether the control should be displayed. </returns>
    </member>
    <member name="M:System.Web.UI.WebControls.WebParts.BehaviorEditorPart.SyncChanges">
      <summary>Retrieves the property values from a <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> control and assigns them to the associated <see cref="T:System.Web.UI.WebControls.WebParts.BehaviorEditorPart" /> control.</summary>
    </member>
    <member name="P:System.Web.UI.WebControls.WebParts.BehaviorEditorPart.Title">
      <summary>Gets or sets a title for the editor control.</summary>
      <returns>A string that is used as the title of the control. The default value is a calculated control name supplied by the Web Parts control set.</returns>
    </member>
    <member name="T:System.Web.UI.WebControls.WebParts.CatalogPart">
      <summary>Serves as the base class for controls that reside in <see cref="T:System.Web.UI.WebControls.WebParts.CatalogZoneBase" /> zones, and that provide catalogs of available Web server controls (especially <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> controls) that users can add to a Web page. </summary>
    </member>
    <member name="M:System.Web.UI.WebControls.WebParts.CatalogPart.#ctor">
      <summary>Initializes the class for use by an inherited class instance. This constructor can only be called by an inherited class.</summary>
    </member>
    <member name="P:System.Web.UI.WebControls.WebParts.CatalogPart.DisplayTitle">
      <summary>Gets a string that contains the actual current title of a <see cref="T:System.Web.UI.WebControls.WebParts.CatalogPart" /> control.</summary>
      <returns>A string that represents the complete, visible title of the control. The default value is an empty string ("").</returns>
    </member>
    <member name="M:System.Web.UI.WebControls.WebParts.CatalogPart.GetAvailableWebPartDescriptions">
      <summary>Returns a collection of descriptions of the available <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> controls in a catalog.</summary>
      <returns>A <see cref="T:System.Web.UI.WebControls.WebParts.WebPartDescriptionCollection" /> that contains a <see cref="T:System.Web.UI.WebControls.WebParts.WebPartDescription" /> for each control in a catalog. </returns>
    </member>
    <member name="M:System.Web.UI.WebControls.WebParts.CatalogPart.GetDesignModeState">
      <summary>Retrieves the current state of a <see cref="T:System.Web.UI.WebControls.WebParts.CatalogPart" /> control's parent zone. </summary>
      <returns>An <see cref="T:System.Collections.IDictionary" /> that contains the current state of the <see cref="T:System.Web.UI.WebControls.WebParts.CatalogZoneBase" /> zone that contains a <see cref="T:System.Web.UI.WebControls.WebParts.CatalogPart" /> control.</returns>
    </member>
    <member name="M:System.Web.UI.WebControls.WebParts.CatalogPart.GetWebPart(System.Web.UI.WebControls.WebParts.WebPartDescription)">
      <summary>Retrieves from a catalog the <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> control that is referenced by the <see cref="T:System.Web.UI.WebControls.WebParts.WebPartDescription" /> object passed to the method.</summary>
      <returns>A <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> that is referenced by the object in the <paramref name="description" /> parameter.</returns>
      <param name="description">A <see cref="T:System.Web.UI.WebControls.WebParts.WebPartDescription" /> that contains a reference to a specific <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" />.</param>
    </member>
    <member name="M:System.Web.UI.WebControls.WebParts.CatalogPart.OnPreRender(System.EventArgs)">
      <summary>Raises the <see cref="E:System.Web.UI.Control.PreRender" /> event.</summary>
      <param name="e">An <see cref="T:System.EventArgs" /> that contains the event data. </param>
      <exception cref="T:System.InvalidOperationException">The <see cref="T:System.Web.UI.WebControls.WebParts.CatalogZoneBase" />  that contains the <see cref="T:System.Web.UI.WebControls.WebParts.CatalogPart" /> control is null.</exception>
    </member>
    <member name="M:System.Web.UI.WebControls.WebParts.CatalogPart.SetDesignModeState(System.Collections.IDictionary)">
      <param name="data">An <see cref="T:System.Collections.IDictionary" /> object that contains the design-time state data for the control. </param>
    </member>
    <member name="P:System.Web.UI.WebControls.WebParts.CatalogPart.WebPartManager">
      <summary>Gets a reference to the current instance of the <see cref="T:System.Web.UI.WebControls.WebParts.WebPartManager" /> class.</summary>
      <returns>The <see cref="T:System.Web.UI.WebControls.WebParts.WebPartManager" /> for the current Web page.</returns>
    </member>
    <member name="P:System.Web.UI.WebControls.WebParts.CatalogPart.Zone">
      <summary>Gets a reference to the <see cref="T:System.Web.UI.WebControls.WebParts.CatalogZoneBase" /> zone that contains a <see cref="T:System.Web.UI.WebControls.WebParts.CatalogPart" /> control.</summary>
      <returns>A <see cref="T:System.Web.UI.WebControls.WebParts.CatalogZoneBase" /> that corresponds to the zone that contains the control.</returns>
    </member>
    <member name="T:System.Web.UI.WebControls.WebParts.CatalogPartChrome">
      <summary>Enables developers to override the rendering for only the selected sections of <see cref="T:System.Web.UI.WebControls.WebParts.CatalogPart" /> controls in a <see cref="T:System.Web.UI.WebControls.WebParts.CatalogZoneBase" /> zone.</summary>
    </member>
    <member name="M:System.Web.UI.WebControls.WebParts.CatalogPartChrome.#ctor(System.Web.UI.WebControls.WebParts.CatalogZoneBase)">
      <summary>Initializes a new instance of the <see cref="T:System.Web.UI.WebControls.WebParts.CatalogPartChrome" /> class. </summary>
      <param name="zone">The associated <see cref="T:System.Web.UI.WebControls.WebParts.CatalogZoneBase" />. </param>
      <exception cref="T:System.ArgumentNullException">The <see cref="T:System.Web.UI.WebControls.WebParts.CatalogZoneBase" /> that <paramref name="zone" /> refers to is null.</exception>
    </member>
    <member name="M:System.Web.UI.WebControls.WebParts.CatalogPartChrome.CreateCatalogPartChromeStyle(System.Web.UI.WebControls.WebParts.CatalogPart,System.Web.UI.WebControls.WebParts.PartChromeType)">
      <summary>Creates the style object that supplies style attributes for each <see cref="T:System.Web.UI.WebControls.WebParts.CatalogPart" /> control rendered by the <see cref="T:System.Web.UI.WebControls.WebParts.CatalogPartChrome" /> object.</summary>
      <returns>A <see cref="T:System.Web.UI.WebControls.Style" /> that contains style attributes for <paramref name="catalogPart" />.</returns>
      <param name="catalogPart">The control that is currently being rendered. </param>
      <param name="chromeType">The type of chrome for a particular control; one of the <see cref="T:System.Web.UI.WebControls.WebParts.PartChromeType" /> enumeration values. </param>
      <exception cref="T:System.ArgumentNullException">The control that <paramref name="catalogPart" /> refers to is null.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="chromeType" /> is not a <see cref="T:System.Web.UI.WebControls.WebParts.PartChromeType" />.</exception>
    </member>
    <member name="M:System.Web.UI.WebControls.WebParts.CatalogPartChrome.PerformPreRender">
      <summary>Performs tasks that must be done prior to rendering <see cref="T:System.Web.UI.WebControls.WebParts.CatalogPart" /> controls.</summary>
    </member>
    <member name="M:System.Web.UI.WebControls.WebParts.CatalogPartChrome.RenderCatalogPart(System.Web.UI.HtmlTextWriter,System.Web.UI.WebControls.WebParts.CatalogPart)">
      <summary>Renders a complete <see cref="T:System.Web.UI.WebControls.WebParts.CatalogPart" /> control with all its sections.</summary>
      <param name="writer">The <see cref="T:System.Web.UI.HtmlTextWriter" /> that receives the <paramref name="catalogPart" /> content. </param>
      <param name="catalogPart">The control currently being rendered. </param>
      <exception cref="T:System.ArgumentNullException">The control that <paramref name="catalogPart" /> refers to is null.</exception>
    </member>
    <member name="M:System.Web.UI.WebControls.WebParts.CatalogPartChrome.RenderPartContents(System.Web.UI.HtmlTextWriter,System.Web.UI.WebControls.WebParts.CatalogPart)">
      <summary>Renders the main content area of a <see cref="T:System.Web.UI.WebControls.WebParts.CatalogPart" /> control, excluding the header and footer.</summary>
      <param name="writer">The <see cref="T:System.Web.UI.HtmlTextWriter" /> that receives the <paramref name="catalogPart" /> content. </param>
      <param name="catalogPart">The control currently being rendered. </param>
      <exception cref="T:System.ArgumentNullException">The control that <paramref name="catalogPart" /> refers to is null.</exception>
    </member>
    <member name="P:System.Web.UI.WebControls.WebParts.CatalogPartChrome.Zone">
      <summary>Gets a reference to the associated <see cref="T:System.Web.UI.WebControls.WebParts.CatalogZoneBase" /> zone.</summary>
      <returns>A reference to a <see cref="T:System.Web.UI.WebControls.WebParts.CatalogZoneBase" /> that is associated with the <see cref="T:System.Web.UI.WebControls.WebParts.CatalogPartChrome" />.</returns>
    </member>
    <member name="T:System.Web.UI.WebControls.WebParts.CatalogPartCollection">
      <summary>Contains a collection of <see cref="T:System.Web.UI.WebControls.WebParts.CatalogPart" /> controls used to provide catalogs of Web server controls that end users can add to a Web page. This class cannot be inherited.</summary>
    </member>
    <member name="M:System.Web.UI.WebControls.WebParts.CatalogPartCollection.#ctor">
      <summary>Initializes a new, empty instance of the <see cref="T:System.Web.UI.WebControls.WebParts.CatalogPartCollection" /> class.</summary>
    </member>
    <member name="M:System.Web.UI.WebControls.WebParts.CatalogPartCollection.#ctor(System.Collections.ICollection)">
      <summary>Initializes a new instance of the <see cref="T:System.Web.UI.WebControls.WebParts.CatalogPartCollection" /> class by passing in an <see cref="T:System.Collections.ICollection" /> collection of <see cref="T:System.Web.UI.WebControls.WebParts.CatalogPart" /> controls.</summary>
      <param name="catalogParts">An <see cref="T:System.Collections.ICollection" /> of <see cref="T:System.Web.UI.WebControls.WebParts.CatalogPart" /> controls. </param>
    </member>
    <member name="M:System.Web.UI.WebControls.WebParts.CatalogPartCollection.#ctor(System.Web.UI.WebControls.WebParts.CatalogPartCollection,System.Collections.ICollection)">
      <summary>Initializes a new instance of the <see cref="T:System.Web.UI.WebControls.WebParts.CatalogPartCollection" /> class by passing in an <see cref="T:System.Collections.ICollection" /> collection of the existing <see cref="T:System.Web.UI.WebControls.WebParts.CatalogPart" /> controls in a zone, and an additional collection of controls.</summary>
      <param name="existingCatalogParts">An <see cref="T:System.Collections.ICollection" /> of existing <see cref="T:System.Web.UI.WebControls.WebParts.CatalogPart" /> controls in a zone. </param>
      <param name="catalogParts">An <see cref="T:System.Collections.ICollection" /> of additional <see cref="T:System.Web.UI.WebControls.WebParts.CatalogPart" /> controls. </param>
    </member>
    <member name="M:System.Web.UI.WebControls.WebParts.CatalogPartCollection.Contains(System.Web.UI.WebControls.WebParts.CatalogPart)">
      <summary>Returns a value indicating whether a particular control exists in the collection.</summary>
      <returns>A Boolean value that indicates whether a particular control is in the collection.</returns>
      <param name="catalogPart">A <see cref="T:System.Web.UI.WebControls.WebParts.CatalogPart" />  that is checked to determine whether it is in the collection. </param>
    </member>
    <member name="M:System.Web.UI.WebControls.WebParts.CatalogPartCollection.CopyTo(System.Web.UI.WebControls.WebParts.CatalogPart[],System.Int32)">
      <summary>Copies the collection to an array of <see cref="T:System.Web.UI.WebControls.WebParts.CatalogPart" /> objects.</summary>
      <param name="array">An array of <see cref="T:System.Web.UI.WebControls.WebParts.CatalogPart" />  objects to contain the copied collection. </param>
      <param name="index">The starting point in the array at which to place the collection contents. </param>
    </member>
    <member name="F:System.Web.UI.WebControls.WebParts.CatalogPartCollection.Empty">
      <summary>References a static, read-only, empty instance of the collection.</summary>
    </member>
    <member name="M:System.Web.UI.WebControls.WebParts.CatalogPartCollection.IndexOf(System.Web.UI.WebControls.WebParts.CatalogPart)">
      <summary>Returns the position of a particular member of the collection.</summary>
      <returns>A <see cref="T:System.Web.UI.WebControls.WebParts.CatalogPart" /> that is a member of the <see cref="T:System.Web.UI.WebControls.WebParts.CatalogPartCollection" />.</returns>
      <param name="catalogPart">A <see cref="T:System.Web.UI.WebControls.WebParts.CatalogPart" />  that is a member of the collection.</param>
    </member>
    <member name="P:System.Web.UI.WebControls.WebParts.CatalogPartCollection.Item(System.Int32)">
      <summary>Gets or sets a member of the collection, based on its position in the collection.</summary>
      <returns>A <see cref="T:System.Web.UI.WebControls.WebParts.CatalogPart" /> at the specified index in the collection.</returns>
      <param name="index">The index of a particular <see cref="T:System.Web.UI.WebControls.WebParts.CatalogPart" />  in the collection. </param>
    </member>
    <member name="P:System.Web.UI.WebControls.WebParts.CatalogPartCollection.Item(System.String)">
      <summary>Returns a member of the collection based on a unique string identifier.</summary>
      <returns>The first <see cref="T:System.Web.UI.WebControls.WebParts.CatalogPart" /> in the collection whose ID equals the value of <paramref name="id" />.</returns>
      <param name="id">The unique identifier for a particular <see cref="T:System.Web.UI.WebControls.WebParts.CatalogPart" />  in a collection. </param>
    </member>
    <member name="T:System.Web.UI.WebControls.WebParts.CatalogZone">
      <summary>Serves as the primary control in the Web Parts control set for hosting <see cref="T:System.Web.UI.WebControls.WebParts.CatalogPart" /> controls on a Web page.</summary>
    </member>
    <member name="M:System.Web.UI.WebControls.WebParts.CatalogZone.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Web.UI.WebControls.WebParts.CatalogZone" /> class.</summary>
    </member>
    <member name="M:System.Web.UI.WebControls.WebParts.CatalogZone.CreateCatalogParts">
      <summary>Creates an instance of each <see cref="T:System.Web.UI.WebControls.WebParts.CatalogPart" /> type that is declared in the zone.</summary>
      <returns>A <see cref="T:System.Web.UI.WebControls.WebParts.CatalogPartCollection" /> with references to all the <see cref="T:System.Web.UI.WebControls.WebParts.CatalogPart" /> controls in the zone.</returns>
      <exception cref="T:System.InvalidOperationException">The current <see cref="T:System.Web.UI.WebControls.WebParts.CatalogPart" /> control does not have an ID.</exception>
    </member>
    <member name="P:System.Web.UI.WebControls.WebParts.CatalogZone.ZoneTemplate">
      <summary>Gets or sets a template to contain child controls within a <see cref="T:System.Web.UI.WebControls.WebParts.CatalogZone" /> control in page persistence format.</summary>
      <returns>An <see cref="T:System.Web.UI.ITemplate" /> that acts as a container for child controls in the zone.</returns>
    </member>
    <member name="T:System.Web.UI.WebControls.WebParts.CatalogZoneBase">
      <summary>Serves as the base class for all zone controls that act as catalogs. Catalogs contain lists of <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> controls that users can add to a Web page. </summary>
    </member>
    <member name="M:System.Web.UI.WebControls.WebParts.CatalogZoneBase.#ctor">
      <summary>Initializes the class for use by an inherited class instance. This constructor can only be called by an inherited class.</summary>
    </member>
    <member name="P:System.Web.UI.WebControls.WebParts.CatalogZoneBase.AddVerb">
      <summary>Gets a reference to a <see cref="T:System.Web.UI.WebControls.WebParts.WebPartVerb" /> object that enables end users to add controls from a catalog to a Web Parts page.</summary>
      <returns>A <see cref="T:System.Web.UI.WebControls.WebParts.WebPartVerb" /> that enables end users to add controls from the catalog to a Web page.</returns>
    </member>
    <member name="P:System.Web.UI.WebControls.WebParts.CatalogZoneBase.CatalogPartChrome">
      <summary>Gets a reference to the instance of the <see cref="T:System.Web.UI.WebControls.WebParts.CatalogPartChrome" /> class associated with the <see cref="T:System.Web.UI.WebControls.WebParts.CatalogZoneBase" /> zone. </summary>
      <returns>A <see cref="T:System.Web.UI.WebControls.WebParts.CatalogPartChrome" /> that is associated with the zone. </returns>
    </member>
    <member name="P:System.Web.UI.WebControls.WebParts.CatalogZoneBase.CatalogParts">
      <summary>Gets a collection of all the <see cref="T:System.Web.UI.WebControls.WebParts.CatalogPart" /> controls contained in a <see cref="T:System.Web.UI.WebControls.WebParts.CatalogZoneBase" /> zone.</summary>
      <returns>A <see cref="T:System.Web.UI.WebControls.WebParts.CatalogPartCollection" /> that contains all the individual <see cref="T:System.Web.UI.WebControls.WebParts.CatalogPart" /> controls in a zone.</returns>
      <exception cref="T:System.InvalidOperationException">A <see cref="T:System.Web.UI.WebControls.WebParts.CatalogPart" /> being added to the collection did not have a value assigned to its ID property.</exception>
    </member>
    <member name="M:System.Web.UI.WebControls.WebParts.CatalogZoneBase.Close">
      <summary>Switches the Web page from catalog display mode to normal browse mode.</summary>
    </member>
    <member name="P:System.Web.UI.WebControls.WebParts.CatalogZoneBase.CloseVerb">
      <summary>Gets a reference to a <see cref="T:System.Web.UI.WebControls.WebParts.WebPartVerb" /> object that enables end users to close the catalog user interface (UI) and return the page to normal browse mode.</summary>
      <returns>A <see cref="T:System.Web.UI.WebControls.WebParts.WebPartVerb" /> that enables end users to close the catalog UI on the Web page.</returns>
    </member>
    <member name="M:System.Web.UI.WebControls.WebParts.CatalogZoneBase.CreateCatalogPartChrome">
      <summary>Creates an instance of a <see cref="T:System.Web.UI.WebControls.WebParts.CatalogPartChrome" /> object used to render the peripheral user interface (UI) elements for <see cref="T:System.Web.UI.WebControls.WebParts.CatalogPart" /> controls in a zone.</summary>
      <returns>A <see cref="T:System.Web.UI.WebControls.WebParts.CatalogPartChrome" /> that renders the peripheral UI elements for the zone.</returns>
    </member>
    <member name="M:System.Web.UI.WebControls.WebParts.CatalogZoneBase.CreateCatalogParts">
      <summary>Provides a base method declaration that derived zones can override to handle the details of creating the <see cref="T:System.Web.UI.WebControls.WebParts.CatalogPart" /> controls contained in a zone.</summary>
      <returns>A <see cref="T:System.Web.UI.WebControls.WebParts.CatalogPartCollection" /> that contains the collection of <see cref="T:System.Web.UI.WebControls.WebParts.CatalogPart" /> controls associated with the zone.</returns>
    </member>
    <member name="M:System.Web.UI.WebControls.WebParts.CatalogZoneBase.CreateChildControls">
      <summary>Creates the set of child controls associated with a <see cref="T:System.Web.UI.WebControls.WebParts.CatalogZoneBase" /> zone.</summary>
    </member>
    <member name="P:System.Web.UI.WebControls.WebParts.CatalogZoneBase.EmptyZoneText">
      <summary>Gets or sets a message that appears when a zone contains no controls.</summary>
      <returns>A string containing the message that appears in an empty zone. A default culture-specific string is supplied by the .NET Framework.</returns>
    </member>
    <member name="P:System.Web.UI.WebControls.WebParts.CatalogZoneBase.HeaderText">
      <summary>Gets or sets the text for the header area of a zone.</summary>
      <returns>A string that contains the header text for the zone. A default culture-specific string is supplied by the .NET Framework.</returns>
    </member>
    <member name="P:System.Web.UI.WebControls.WebParts.CatalogZoneBase.InstructionText">
      <summary>Gets or sets the text in a zone that provides directions for end users.</summary>
      <returns>A string that contains the directions for end users. A default, culture-specific string is provided by the Web Parts control set.</returns>
    </member>
    <member name="M:System.Web.UI.WebControls.WebParts.CatalogZoneBase.InvalidateCatalogParts">
      <summary>Destroys the collection of <see cref="T:System.Web.UI.WebControls.WebParts.CatalogPart" /> controls associated with a <see cref="T:System.Web.UI.WebControls.WebParts.CatalogZoneBase" /> zone.</summary>
    </member>
    <member name="M:System.Web.UI.WebControls.WebParts.CatalogZoneBase.LoadControlState(System.Object)">
      <summary>Loads the state from a previous page request for control properties that should persist across postbacks even when view state is disabled on the control.</summary>
      <param name="savedState">The previously saved state data. </param>
      <exception cref="T:System.ArgumentException">
        <paramref name="savedState" /> is not a valid control state.</exception>
    </member>
    <member name="M:System.Web.UI.WebControls.WebParts.CatalogZoneBase.LoadPostData(System.String,System.Collections.Specialized.NameValueCollection)">
      <summary>Processes the state of the check boxes that correspond to the <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> controls in the catalog, when the page is posted back to the server.</summary>
      <returns>This method, in contrast to the overridden base method, always returns false, because the class does not expose any change event.</returns>
      <param name="postDataKey">The key identifier for the control. </param>
      <param name="postCollection">The collection of name/value pairs posted to the server. </param>
    </member>
    <member name="M:System.Web.UI.WebControls.WebParts.CatalogZoneBase.LoadViewState(System.Object)">
      <summary>Loads previously saved state information for a zone.</summary>
      <param name="savedState">The previously saved state data. </param>
      <exception cref="T:System.ArgumentException">The size of the <paramref name="savedState" /> object does not equal the size of the current view-state object. </exception>
    </member>
    <member name="M:System.Web.UI.WebControls.WebParts.CatalogZoneBase.OnInit(System.EventArgs)">
      <summary>Registers the page object so that the page requires control state.</summary>
      <param name="e">An <see cref="T:System.EventArgs" /> that contains the event data. </param>
    </member>
    <member name="M:System.Web.UI.WebControls.WebParts.CatalogZoneBase.OnPreRender(System.EventArgs)">
      <summary>Raises the <see cref="E:System.Web.UI.Control.PreRender" /> event and registers the page object so that it requires postbacks.</summary>
      <param name="e">An <see cref="T:System.EventArgs" /> that contains the event data.  </param>
    </member>
    <member name="P:System.Web.UI.WebControls.WebParts.CatalogZoneBase.PartLinkStyle">
      <summary>Gets an object that contains style attributes for the <see cref="T:System.Web.UI.WebControls.WebParts.CatalogPart" /> controls that are not currently selected in the zone.</summary>
      <returns>A <see cref="T:System.Web.UI.WebControls.Style" /> that contains style attributes for the controls that are not currently selected.</returns>
    </member>
    <member name="M:System.Web.UI.WebControls.WebParts.CatalogZoneBase.RaisePostBackEvent(System.String)">
      <summary>Carries out the actions associated with one of the zone verbs, or raises an event that posts back to the server.</summary>
      <param name="eventArgument">A <see cref="T:System.String" /> that contains the argument for the event. </param>
    </member>
    <member name="M:System.Web.UI.WebControls.WebParts.CatalogZoneBase.Render(System.Web.UI.HtmlTextWriter)">
      <summary>Renders the zone to the specified <see cref="T:System.Web.UI.HtmlTextWriter" /> object.</summary>
      <param name="writer">The <see cref="T:System.Web.UI.HtmlTextWriter" /> that receives the zone's content. </param>
    </member>
    <member name="M:System.Web.UI.WebControls.WebParts.CatalogZoneBase.RenderBody(System.Web.UI.HtmlTextWriter)">
      <summary>Overrides the base method to render the body area of a zone derived from the <see cref="T:System.Web.UI.WebControls.WebParts.CatalogZoneBase" /> class.</summary>
      <param name="writer">The <see cref="T:System.Web.UI.HtmlTextWriter" /> that receives the zone's body content. </param>
    </member>
    <member name="M:System.Web.UI.WebControls.WebParts.CatalogZoneBase.RenderCatalogPartLinks(System.Web.UI.HtmlTextWriter)">
      <summary>Renders the links to the individual <see cref="T:System.Web.UI.WebControls.WebParts.CatalogPart" /> controls in a <see cref="T:System.Web.UI.WebControls.WebParts.CatalogZoneBase" /> zone.</summary>
      <param name="writer">The <see cref="T:System.Web.UI.HtmlTextWriter" /> that receives the contents of the links to the zone's controls. </param>
    </member>
    <member name="M:System.Web.UI.WebControls.WebParts.CatalogZoneBase.RenderFooter(System.Web.UI.HtmlTextWriter)">
      <summary>Renders the footer area for a <see cref="T:System.Web.UI.WebControls.WebParts.CatalogZoneBase" /> zone.</summary>
      <param name="writer">An <see cref="T:System.Web.UI.HtmlTextWriter" /> that renders the footer area for the zone. </param>
    </member>
    <member name="M:System.Web.UI.WebControls.WebParts.CatalogZoneBase.RenderVerbs(System.Web.UI.HtmlTextWriter)">
      <summary>Renders the verbs in the footer area of a <see cref="T:System.Web.UI.WebControls.WebParts.CatalogZoneBase" /> zone.</summary>
      <param name="writer">An <see cref="T:System.Web.UI.HtmlTextWriter" /> that renders the verbs for the zone. </param>
    </member>
    <member name="M:System.Web.UI.WebControls.WebParts.CatalogZoneBase.SaveControlState">
      <summary>Saves any changes in a <see cref="T:System.Web.UI.WebControls.WebParts.CatalogZoneBase" /> control's state that occur after the Web page is posted back to the server.</summary>
      <returns>An <see cref="T:System.Object" /> that contains the state data for the control. If there have been no changes to the state, the method returns null.</returns>
    </member>
    <member name="M:System.Web.UI.WebControls.WebParts.CatalogZoneBase.SaveViewState">
      <summary>Saves any view-state changes that have occurred after a page was posted back to the server.</summary>
      <returns>Returns the zone control's current view state. If no view state is associated with the zone, this method returns null.</returns>
    </member>
    <member name="P:System.Web.UI.WebControls.WebParts.CatalogZoneBase.SelectedCatalogPartID">
      <summary>Gets or sets a string as an identifier for the currently selected <see cref="T:System.Web.UI.WebControls.WebParts.CatalogPart" /> control in a zone.</summary>
      <returns>A string that serves as the identifier for the currently selected control. The default is the value of the control's <see cref="P:System.Web.UI.Control.ID" /> property.</returns>
    </member>
    <member name="P:System.Web.UI.WebControls.WebParts.CatalogZoneBase.SelectedPartLinkStyle">
      <summary>Gets an object that contains style attributes for the <see cref="T:System.Web.UI.WebControls.WebParts.CatalogPart" /> control that is currently selected in the zone.</summary>
      <returns>A <see cref="T:System.Web.UI.WebControls.Style" /> that contains style attributes for the control that is currently selected.</returns>
    </member>
    <member name="P:System.Web.UI.WebControls.WebParts.CatalogZoneBase.SelectTargetZoneText">
      <summary>Gets or sets the text alongside the control in the catalog user interface (UI) that allows users to choose which zone to add their selected controls to.</summary>
      <returns>A string that contains the text to display alongside the zone selection control. A default culture-specific string is supplied by the .NET Framework. </returns>
    </member>
    <member name="P:System.Web.UI.WebControls.WebParts.CatalogZoneBase.ShowCatalogIcons">
      <summary>Gets or sets a value that indicates whether server controls in the catalog display their associated icons in the catalog.</summary>
      <returns>true if the icons associated with server controls in the catalog should be displayed; otherwise, false. The default is true.</returns>
    </member>
    <member name="M:System.Web.UI.WebControls.WebParts.CatalogZoneBase.System#Web#UI#IPostBackDataHandler#LoadPostData(System.String,System.Collections.Specialized.NameValueCollection)">
      <summary>Implements the <see cref="M:System.Web.UI.IPostBackDataHandler.LoadPostData(System.String,System.Collections.Specialized.NameValueCollection)" /> method by calling the <see cref="M:System.Web.UI.WebControls.WebParts.CatalogZoneBase.LoadPostData(System.String,System.Collections.Specialized.NameValueCollection)" /> method of the <see cref="T:System.Web.UI.WebControls.WebParts.CatalogZoneBase" /> class.</summary>
      <returns>true if an event should be raised to indicate that data has changed; otherwise false. </returns>
      <param name="postDataKey">The key identifier for the control. </param>
      <param name="postCollection">The collection of name/value pairs posted to the server. </param>
    </member>
    <member name="M:System.Web.UI.WebControls.WebParts.CatalogZoneBase.System#Web#UI#IPostBackDataHandler#RaisePostDataChangedEvent">
      <summary>For a description of this member, see <see cref="M:System.Web.UI.IPostBackDataHandler.RaisePostDataChangedEvent" />.</summary>
    </member>
    <member name="M:System.Web.UI.WebControls.WebParts.CatalogZoneBase.TrackViewState">
      <summary>Tracks changes to a zone control's view state.</summary>
    </member>
    <member name="T:System.Web.UI.WebControls.WebParts.ConnectionConsumerAttribute">
      <summary>Identifies the callback method in a server control acting as the consumer in a Web Parts connection, and enables developers to specify details about the consumer's connection point.</summary>
    </member>
    <member name="M:System.Web.UI.WebControls.WebParts.ConnectionConsumerAttribute.#ctor(System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.Web.UI.WebControls.WebParts.ConnectionConsumerAttribute" /> class, specifying a display name for the consumer connection point.</summary>
      <param name="displayName">A string that contains a friendly name for the consumer connection point to display in the user interface (UI).</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="displayName" /> is null. </exception>
    </member>
    <member name="M:System.Web.UI.WebControls.WebParts.ConnectionConsumerAttribute.#ctor(System.String,System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.Web.UI.WebControls.WebParts.ConnectionConsumerAttribute" /> class, specifying a display name and an ID for the consumer connection point.</summary>
      <param name="displayName">A string that contains a friendly name for the consumer connection point to display in the user interface (UI).</param>
      <param name="id">The <see cref="P:System.Web.UI.WebControls.WebParts.ConnectionConsumerAttribute.ID" />, a unique string value assigned to the consumer connection point.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="displayName" /> or <paramref name="id" /> is null. </exception>
    </member>
    <member name="M:System.Web.UI.WebControls.WebParts.ConnectionConsumerAttribute.#ctor(System.String,System.String,System.Type)">
      <summary>Initializes a new instance of the <see cref="T:System.Web.UI.WebControls.WebParts.ConnectionConsumerAttribute" /> class, specifying a display name, an ID, and a specific type of connection point object to use for the consumer connection point.</summary>
      <param name="displayName">A string that contains a friendly name for the consumer connection point to display in the user interface (UI).</param>
      <param name="id">The <see cref="P:System.Web.UI.WebControls.WebParts.ConnectionConsumerAttribute.ID" />, a unique string value assigned to the consumer connection point.</param>
      <param name="connectionPointType">A <see cref="T:System.Type" /> that derives from <see cref="T:System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint" />, and that you want to specify as the type of connection point object to use with a specific callback method.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="displayName" />, <paramref name="id" />, or<paramref name=" connectionPointType" /> is null. </exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="connectionPointType" /> is not valid.</exception>
    </member>
    <member name="M:System.Web.UI.WebControls.WebParts.ConnectionConsumerAttribute.#ctor(System.String,System.Type)">
      <summary>Initializes a new instance of the <see cref="T:System.Web.UI.WebControls.WebParts.ConnectionConsumerAttribute" /> class, specifying a display name and a specific type of connection point object to use for the consumer connection point.</summary>
      <param name="displayName">A string that contains a friendly name for the consumer connection point to display in the user interface (UI).</param>
      <param name="connectionPointType">A <see cref="T:System.Type" /> that derives from <see cref="T:System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint" />, and that you want to specify as the type of connection point object to use with a specific callback method.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="displayName" /> or<paramref name=" connectionPointType" /> is null. </exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="connectionPointType" /> is not valid.</exception>
    </member>
    <member name="P:System.Web.UI.WebControls.WebParts.ConnectionConsumerAttribute.AllowsMultipleConnections">
      <summary>Gets or sets a value that indicates whether the connection point allows multiple connections.</summary>
      <returns>true if the connection point accepts multiple connections; otherwise, false.</returns>
    </member>
    <member name="P:System.Web.UI.WebControls.WebParts.ConnectionConsumerAttribute.ConnectionPointType">
      <summary>Gets the connection point type of the consumer connection point.</summary>
      <returns>A <see cref="T:System.Type" /> that indicates the type of the connection point.</returns>
      <exception cref="T:System.InvalidOperationException">An invalid connection point type (one that does not derive from the <see cref="T:System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint" /> class) was used.</exception>
    </member>
    <member name="P:System.Web.UI.WebControls.WebParts.ConnectionConsumerAttribute.DisplayName">
      <summary>Gets the friendly name of the consumer connection point.</summary>
      <returns>A string containing a friendly display name for the consumer connection point.</returns>
    </member>
    <member name="P:System.Web.UI.WebControls.WebParts.ConnectionConsumerAttribute.DisplayNameValue">
      <summary>Gets or sets the string used as the value of the <see cref="P:System.Web.UI.WebControls.WebParts.ConnectionConsumerAttribute.DisplayName" /> property, for use in localization scenarios.</summary>
      <returns>A string that is used as the value of <see cref="P:System.Web.UI.WebControls.WebParts.ConnectionConsumerAttribute.DisplayName" />. </returns>
    </member>
    <member name="P:System.Web.UI.WebControls.WebParts.ConnectionConsumerAttribute.ID">
      <summary>Gets a string that represents the unique identity of the consumer connection point.</summary>
      <returns>The unique ID assigned to the consumer connection point. The default value is <see cref="F:System.String.Empty" />.</returns>
    </member>
    <member name="T:System.Web.UI.WebControls.WebParts.ConnectionInterfaceCollection">
      <summary>Represents a collection of interfaces for use in Web Parts connections.</summary>
    </member>
    <member name="M:System.Web.UI.WebControls.WebParts.ConnectionInterfaceCollection.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Web.UI.WebControls.WebParts.ConnectionInterfaceCollection" /> class. </summary>
    </member>
    <member name="M:System.Web.UI.WebControls.WebParts.ConnectionInterfaceCollection.#ctor(System.Collections.ICollection)">
      <summary>Initializes a new instance of the <see cref="T:System.Web.UI.WebControls.WebParts.ConnectionInterfaceCollection" /> class with the specified collection. </summary>
      <param name="connectionInterfaces">A collection of objects to convert into a <see cref="T:System.Web.UI.WebControls.WebParts.ConnectionInterfaceCollection" />.</param>
      <exception cref="T:System.ArgumentException">An object in <paramref name="connectionInterfaces" /> cannot be added to a <see cref="T:System.Web.UI.WebControls.WebParts.ConnectionInterfaceCollection" /> collection.</exception>
    </member>
    <member name="M:System.Web.UI.WebControls.WebParts.ConnectionInterfaceCollection.#ctor(System.Web.UI.WebControls.WebParts.ConnectionInterfaceCollection,System.Collections.ICollection)">
      <summary>Initializes a new instance of the <see cref="T:System.Web.UI.WebControls.WebParts.ConnectionInterfaceCollection" /> class by combining the two specified collections. </summary>
      <param name="existingConnectionInterfaces">A <see cref="T:System.Web.UI.WebControls.WebParts.ConnectionInterfaceCollection" /> to combine with the <paramref name="connectionInterfaces" /> object.</param>
      <param name="connectionInterfaces">A collection to combine with the <paramref name="existingConnectionInterfaces" /> object.</param>
      <exception cref="T:System.ArgumentException">An object in <paramref name="connectionInterfaces" /> cannot be added to a <see cref="T:System.Web.UI.WebControls.WebParts.ConnectionInterfaceCollection" /> collection.</exception>
    </member>
    <member name="M:System.Web.UI.WebControls.WebParts.ConnectionInterfaceCollection.Contains(System.Type)">
      <summary>Determines whether the <see cref="T:System.Web.UI.WebControls.WebParts.ConnectionInterfaceCollection" /> object contains a specific value.</summary>
      <returns>true if <paramref name="value" /> is found in the <see cref="T:System.Web.UI.WebControls.WebParts.ConnectionInterfaceCollection" />; otherwise, false.</returns>
      <param name="value">The type to locate in the <see cref="T:System.Web.UI.WebControls.WebParts.ConnectionInterfaceCollection" />.</param>
    </member>
    <member name="M:System.Web.UI.WebControls.WebParts.ConnectionInterfaceCollection.CopyTo(System.Type[],System.Int32)">
      <summary>Copies the entire <see cref="T:System.Collections.ReadOnlyCollectionBase" /> object to a compatible one-dimensional <see cref="T:System.Array" />, starting at the specified index of the target array.</summary>
      <param name="array">The one-dimensional <see cref="T:System.Array" /> that is the destination of the elements copied from <see cref="T:System.Collections.ReadOnlyCollectionBase" />. The <see cref="T:System.Array" /> must have zero-based indexing.</param>
      <param name="index">The zero-based index in <paramref name="array" /> at which copying begins.</param>
    </member>
    <member name="F:System.Web.UI.WebControls.WebParts.ConnectionInterfaceCollection.Empty">
      <summary>References a static, read-only instance of the <see cref="T:System.Web.UI.WebControls.WebParts.ConnectionInterfaceCollection" /> class.</summary>
    </member>
    <member name="M:System.Web.UI.WebControls.WebParts.ConnectionInterfaceCollection.IndexOf(System.Type)">
      <summary>Searches for the specified object and returns the zero-based index of the first occurrence within the entire <see cref="T:System.Web.UI.WebControls.WebParts.ConnectionInterfaceCollection" /> collection. </summary>
      <returns>The zero-based index of the first occurrence of <paramref name="value" /> within the entire <see cref="T:System.Web.UI.WebControls.WebParts.ConnectionInterfaceCollection" />, if found; otherwise, -1.</returns>
      <param name="value">The type to locate in the collection.</param>
    </member>
    <member name="P:System.Web.UI.WebControls.WebParts.ConnectionInterfaceCollection.Item(System.Int32)">
      <summary>Gets the element at the specified index.</summary>
      <returns>The element at the specified index.</returns>
      <param name="index">The zero-based index of the element to get.</param>
    </member>
    <member name="T:System.Web.UI.WebControls.WebParts.ConnectionPoint">
      <summary>Serves as the base class for defining connection point objects that enable the consumer control and the provider control in a Web Parts connection to share data.</summary>
    </member>
    <member name="P:System.Web.UI.WebControls.WebParts.ConnectionPoint.AllowsMultipleConnections">
      <summary>Gets a value that indicates whether a connection point supports multiple simultaneous connections.</summary>
      <returns>true if the connection point supports multiple connections; otherwise, false. </returns>
    </member>
    <member name="P:System.Web.UI.WebControls.WebParts.ConnectionPoint.ControlType">
      <summary>Gets the <see cref="T:System.Type" /> of the server control with which a connection point is associated.</summary>
      <returns>A <see cref="T:System.Type" /> representing the control type.</returns>
    </member>
    <member name="F:System.Web.UI.WebControls.WebParts.ConnectionPoint.DefaultID">
      <summary>Represents a string used to identify the default connection point within a collection of connection points associated with a server control. </summary>
    </member>
    <member name="P:System.Web.UI.WebControls.WebParts.ConnectionPoint.DisplayName">
      <summary>Gets a string that serves as a friendly display name to represent a connection point in the user interface (UI). </summary>
      <returns>A string that contains a friendly display name for a <see cref="T:System.Web.UI.WebControls.WebParts.ConnectionPoint" /> object. </returns>
    </member>
    <member name="M:System.Web.UI.WebControls.WebParts.ConnectionPoint.GetEnabled(System.Web.UI.Control)">
      <summary>Returns a value that indicates whether a connection point can participate in connections. </summary>
      <returns>true if the control can create a connection point to participate in a connection; otherwise, false.</returns>
      <param name="control">A <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> or other server control that is associated with a connection point.</param>
    </member>
    <member name="P:System.Web.UI.WebControls.WebParts.ConnectionPoint.ID">
      <summary>Gets a string that contains the identifier for a connection point.</summary>
      <returns>A string that contains the identifier for a connection point.</returns>
    </member>
    <member name="P:System.Web.UI.WebControls.WebParts.ConnectionPoint.InterfaceType">
      <summary>Gets the type of the interface used by a connection point.</summary>
      <returns>A <see cref="T:System.Type" /> that corresponds to the interface type provided or consumed by a control.</returns>
    </member>
    <member name="T:System.Web.UI.WebControls.WebParts.ConnectionProviderAttribute">
      <summary>Identifies the callback method in a server control acting as the provider in a Web Parts connection, and enables developers to specify details about the provider's connection point.</summary>
    </member>
    <member name="M:System.Web.UI.WebControls.WebParts.ConnectionProviderAttribute.#ctor(System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.Web.UI.WebControls.WebParts.ConnectionProviderAttribute" /> class, specifying a display name for the provider connection point.</summary>
      <param name="displayName">A string that contains a friendly name for the provider connection point to display in the user interface (UI).</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="displayName" /> is null. </exception>
    </member>
    <member name="M:System.Web.UI.WebControls.WebParts.ConnectionProviderAttribute.#ctor(System.String,System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.Web.UI.WebControls.WebParts.ConnectionProviderAttribute" /> class, specifying a display name and an ID for the provider connection point.</summary>
      <param name="displayName">A string that contains a friendly name for the provider connection point to display in the user interface (UI).</param>
      <param name="id">The <see cref="P:System.Web.UI.WebControls.WebParts.ConnectionProviderAttribute.ID" />, a unique string value assigned to the provider connection point.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="displayName" /> or <paramref name="id" /> is null.</exception>
    </member>
    <member name="M:System.Web.UI.WebControls.WebParts.ConnectionProviderAttribute.#ctor(System.String,System.String,System.Type)">
      <summary>Initializes a new instance of the <see cref="T:System.Web.UI.WebControls.WebParts.ConnectionProviderAttribute" /> class, specifying a display name, an ID, and a specific type of connection point object to use for the provider connection point.</summary>
      <param name="displayName">A string that contains a friendly name for the provider connection point to display in the user interface (UI).</param>
      <param name="id">The <see cref="P:System.Web.UI.WebControls.WebParts.ConnectionProviderAttribute.ID" />, a unique string value assigned to the provider connection point.</param>
      <param name="connectionPointType">A <see cref="T:System.Type" /> that derives from <see cref="T:System.Web.UI.WebControls.WebParts.ProviderConnectionPoint" />, and that you want to specify as the type of connection point object to use with a specific callback method.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="displayName" />, <paramref name="id, " />or<paramref name=" connectionPointType" /> is null. </exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="connectionPointType" /> is not valid.</exception>
    </member>
    <member name="M:System.Web.UI.WebControls.WebParts.ConnectionProviderAttribute.#ctor(System.String,System.Type)">
      <summary>Initializes a new instance of the <see cref="T:System.Web.UI.WebControls.WebParts.ConnectionProviderAttribute" /> class, specifying a display name and a specific type of connection point object to use for the provider connection point.</summary>
      <param name="displayName">A string that contains a friendly name for the provider connection point to display in the user interface (UI).</param>
      <param name="connectionPointType">A <see cref="T:System.Type" /> that derives from <see cref="T:System.Web.UI.WebControls.WebParts.ConnectionPoint" />, and that you want to specify as the type of connection point object to use with a specific callback method.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="displayName" /> or<paramref name=" connectionPointType" /> is null. </exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="connectionPointType" /> is not valid.</exception>
    </member>
    <member name="P:System.Web.UI.WebControls.WebParts.ConnectionProviderAttribute.AllowsMultipleConnections">
      <summary>Gets or sets a value that indicates whether the connection point allows multiple connections.</summary>
      <returns>true if the connection point accepts multiple connections; otherwise, false. </returns>
    </member>
    <member name="P:System.Web.UI.WebControls.WebParts.ConnectionProviderAttribute.ConnectionPointType">
      <summary>Gets the type of the connection point associated with a provider control.</summary>
      <returns>A <see cref="T:System.Type" /> that indicates the type of the connection point.</returns>
      <exception cref="T:System.InvalidOperationException">An invalid connection point type (one that does not derive from the <see cref="T:System.Web.UI.WebControls.WebParts.ProviderConnectionPoint" /> class) was used.</exception>
    </member>
    <member name="P:System.Web.UI.WebControls.WebParts.ConnectionProviderAttribute.DisplayName">
      <summary>Gets the friendly name of the provider connection point.</summary>
      <returns>A string containing a friendly display name for the provider connection point. </returns>
    </member>
    <member name="P:System.Web.UI.WebControls.WebParts.ConnectionProviderAttribute.DisplayNameValue">
      <summary>Gets or sets the string used as the value of the <see cref="P:System.Web.UI.WebControls.WebParts.ConnectionProviderAttribute.DisplayName" /> property, for use in localization scenarios.</summary>
      <returns>A string that is used as the value of <see cref="P:System.Web.UI.WebControls.WebParts.ConnectionProviderAttribute.DisplayName" />.</returns>
    </member>
    <member name="P:System.Web.UI.WebControls.WebParts.ConnectionProviderAttribute.ID">
      <summary>Gets a string that represents the unique identity of the provider connection point object.</summary>
      <returns>The unique ID assigned to the provider connection point. The default value is <see cref="F:System.String.Empty" />.</returns>
    </member>
    <member name="T:System.Web.UI.WebControls.WebParts.ConnectionsZone">
      <summary>Provides a user interface (UI) that enables users to form connections between <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> and other server controls that reside in <see cref="T:System.Web.UI.WebControls.WebParts.WebPartZoneBase" /> zones. </summary>
    </member>
    <member name="M:System.Web.UI.WebControls.WebParts.ConnectionsZone.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Web.UI.WebControls.WebParts.ConnectionsZone" /> class. </summary>
    </member>
    <member name="P:System.Web.UI.WebControls.WebParts.ConnectionsZone.CancelVerb">
      <summary>Gets a reference to a <see cref="T:System.Web.UI.WebControls.WebParts.WebPartVerb" /> object that enables end users to cancel the process of establishing a connection.</summary>
      <returns>A <see cref="T:System.Web.UI.WebControls.WebParts.WebPartVerb" /> that enables end users to cancel the process of connecting two controls.</returns>
    </member>
    <member name="M:System.Web.UI.WebControls.WebParts.ConnectionsZone.Close">
      <summary>Closes the connection user interface (UI) created by the <see cref="T:System.Web.UI.WebControls.WebParts.ConnectionsZone" /> control.</summary>
    </member>
    <member name="P:System.Web.UI.WebControls.WebParts.ConnectionsZone.CloseVerb">
      <summary>Gets a reference to a <see cref="T:System.Web.UI.WebControls.WebParts.WebPartVerb" /> object that enables end users to close the connection user interface (UI) created by the <see cref="T:System.Web.UI.WebControls.WebParts.ConnectionsZone" /> control.</summary>
      <returns>A <see cref="T:System.Web.UI.WebControls.WebParts.WebPartVerb" /> that allows an end user to close the connection UI.</returns>
    </member>
    <member name="P:System.Web.UI.WebControls.WebParts.ConnectionsZone.ConfigureConnectionTitle">
      <summary>Gets or sets the text displayed as the title of a subsection of the connection user interface (UI) created by a <see cref="T:System.Web.UI.WebControls.WebParts.ConnectionsZone" /> control.</summary>
      <returns>A string containing the title for the Configure Connections section. The default title is a culture-specific string supplied by the .NET Framework.</returns>
    </member>
    <member name="P:System.Web.UI.WebControls.WebParts.ConnectionsZone.ConfigureVerb">
      <summary>Gets a reference to a <see cref="T:System.Web.UI.WebControls.WebParts.WebPartVerb" /> object used to open the configuration view in the connection user interface (UI).</summary>
      <returns>A <see cref="T:System.Web.UI.WebControls.WebParts.WebPartVerb" /> used to open the Configure Connections section in the connection UI.</returns>
    </member>
    <member name="P:System.Web.UI.WebControls.WebParts.ConnectionsZone.ConnectToConsumerInstructionText">
      <summary>Gets or sets the instructional text displayed in the section of the connection user interface (UI) where users select a consumer connection point that the provider will connect to.</summary>
      <returns>A string containing the instructions for creating a consumer connection to the provider. The default text is a culture-specific string supplied by the .NET Framework.</returns>
    </member>
    <member name="P:System.Web.UI.WebControls.WebParts.ConnectionsZone.ConnectToConsumerText">
      <summary>Gets or sets the text of a hyperlink that users click to open a view in which they can choose a consumer control for a connection.</summary>
      <returns>A string displayed as the text of a hyperlink that opens the view where users select consumers. The default text is a culture-specific string supplied by the .NET Framework.</returns>
    </member>
    <member name="P:System.Web.UI.WebControls.WebParts.ConnectionsZone.ConnectToConsumerTitle">
      <summary>Gets or sets the title text of the section in the connection user interface (UI) in which users can select a specific consumer to connect with.</summary>
      <returns>A string serving as the title of the section where users select consumers. The default title is a culture-specific string supplied by the .NET Framework.</returns>
    </member>
    <member name="P:System.Web.UI.WebControls.WebParts.ConnectionsZone.ConnectToProviderInstructionText">
      <summary>Gets or sets the instructional text displayed in the section of the connection user interface (UI) where users select a provider connection point that the consumer will connect to.</summary>
      <returns>A string containing the instructions on creating a provider connection to the consumer. The default text is a culture-specific string supplied by the .NET Framework.</returns>
    </member>
    <member name="P:System.Web.UI.WebControls.WebParts.ConnectionsZone.ConnectToProviderText">
      <summary>Gets or sets the text of a hyperlink that users click to open a view in which they can choose a provider control for a connection.</summary>
      <returns>A string displayed as the text of a hyperlink that opens the view where users select providers. The default text is a culture-specific string supplied by the .NET Framework.</returns>
    </member>
    <member name="P:System.Web.UI.WebControls.WebParts.ConnectionsZone.ConnectToProviderTitle">
      <summary>Gets or sets the title text of the section in the connection user interface (UI) in which users can select a specific provider to connect with.</summary>
      <returns>A string serving as the title of the section where users select providers. The default title is a culture-specific string supplied by the .NET Framework.</returns>
    </member>
    <member name="P:System.Web.UI.WebControls.WebParts.ConnectionsZone.ConnectVerb">
      <summary>Gets a reference to a <see cref="T:System.Web.UI.WebControls.WebParts.WebPartVerb" /> object that enables two <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> controls to establish a connection.</summary>
      <returns>A <see cref="T:System.Web.UI.WebControls.WebParts.WebPartVerb" /> that enables two controls to establish a connection.</returns>
    </member>
    <member name="P:System.Web.UI.WebControls.WebParts.ConnectionsZone.ConsumersInstructionText">
      <summary>Gets or sets the instructional text shown in the consumers section of the connection user interface (UI), when a connection already exists.</summary>
      <returns>A string serving as the instructional text for consumers participating in a connection. The default text is a culture-specific string supplied by the .NET Framework.</returns>
    </member>
    <member name="P:System.Web.UI.WebControls.WebParts.ConnectionsZone.ConsumersTitle">
      <summary>Gets or sets the title shown above the consumers section of the connection user interface (UI), when a connection already exists.</summary>
      <returns>A string serving as the title text for consumers participating in a connection. The default title is a culture-specific string supplied by the .NET Framework.</returns>
    </member>
    <member name="M:System.Web.UI.WebControls.WebParts.ConnectionsZone.CreateChildControls">
      <summary>Creates all child controls contained in a <see cref="T:System.Web.UI.WebControls.WebParts.ConnectionsZone" /> control in preparation for posting back to the server or rendering.</summary>
    </member>
    <member name="P:System.Web.UI.WebControls.WebParts.ConnectionsZone.DisconnectVerb">
      <summary>Gets a reference to a <see cref="T:System.Web.UI.WebControls.WebParts.WebPartVerb" /> object that enables a user to disconnect two connected <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> controls.</summary>
      <returns>A <see cref="T:System.Web.UI.WebControls.WebParts.WebPartVerb" /> that disconnects two connected <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> controls.</returns>
    </member>
    <member name="P:System.Web.UI.WebControls.WebParts.ConnectionsZone.Display">
      <returns>true if the <see cref="T:System.Web.UI.WebControls.WebParts.ToolZone" /> is currently displayed; otherwise, false. The default value is false.</returns>
    </member>
    <member name="P:System.Web.UI.WebControls.WebParts.ConnectionsZone.EmptyZoneText">
      <summary>Gets or sets a text message that is displayed in an empty <see cref="T:System.Web.UI.WebControls.WebParts.ConnectionsZone" /> control if there are insufficient controls on a Web page to establish a connection. </summary>
      <returns>A <see cref="T:System.String" /> that contains the message for an empty zone. The default text is a culture-specific string supplied by the .NET Framework.</returns>
    </member>
    <member name="P:System.Web.UI.WebControls.WebParts.ConnectionsZone.ExistingConnectionErrorMessage">
      <summary>Gets or sets the text of a message displayed in the connection user interface (UI) when there is an error or warning on an existing connection.</summary>
      <returns>A <see cref="T:System.String" /> that contains the text of the message. The default text is a culture-specific string supplied by the .NET Framework.</returns>
    </member>
    <member name="P:System.Web.UI.WebControls.WebParts.ConnectionsZone.GetFromText">
      <summary>Gets or sets the text shown in the section of the connection user interface (UI) that precedes the named provider from which a consumer will retrieve data.</summary>
      <returns>A string that prefaces the named provider that the consumer will get data from. The default text is a culture-specific string supplied by the .NET Framework.</returns>
    </member>
    <member name="P:System.Web.UI.WebControls.WebParts.ConnectionsZone.GetText">
      <summary>Gets or sets the text shown in the section of the connection user interface (UI) that precedes the named consumer that will receive data from a provider.</summary>
      <returns>A string that prefaces the named consumer in the connection. The default text is a culture-specific string supplied by the .NET Framework.</returns>
    </member>
    <member name="P:System.Web.UI.WebControls.WebParts.ConnectionsZone.HeaderText">
      <summary>Gets or sets the header text that appears at the top of the connection user interface (UI) created by the <see cref="T:System.Web.UI.WebControls.WebParts.ConnectionsZone" /> control.</summary>
      <returns>A string that contains the header text for the connection UI. The default text is a culture-specific string supplied by the .NET Framework.</returns>
    </member>
    <member name="P:System.Web.UI.WebControls.WebParts.ConnectionsZone.InstructionText">
      <summary>Gets or set the text that is used for general instructions about the selected control in the section of the connection user interface (UI) for managing existing connections.</summary>
      <returns>A string that contains the instruction text for the connection UI. The default text is a culture-specific string supplied by the .NET Framework.</returns>
    </member>
    <member name="P:System.Web.UI.WebControls.WebParts.ConnectionsZone.InstructionTitle">
      <summary>Gets or sets the text that is used for a general description of the action that can be performed on the consumer or provider control, within the connection user interface (UI) for managing existing connections.</summary>
      <returns>A string that contains the instruction title for the connection UI. The default text is a culture-specific string supplied by the .NET Framework.</returns>
    </member>
    <member name="M:System.Web.UI.WebControls.WebParts.ConnectionsZone.LoadControlState(System.Object)">
      <summary>Restores control state information from a previous page request that was saved by the <see cref="M:System.Web.UI.WebControls.WebParts.ConnectionsZone.SaveControlState" /> method.</summary>
      <param name="savedState">An <see cref="T:System.Object" /> that represents the control state to be restored.</param>
      <exception cref="T:System.ArgumentException">The length of <paramref name="savedState" /> does not equal the length of the array created by the <see cref="M:System.Web.UI.WebControls.WebParts.ConnectionsZone.SaveControlState" /> method.</exception>
    </member>
    <member name="M:System.Web.UI.WebControls.WebParts.ConnectionsZone.LoadViewState(System.Object)">
      <summary>Restores view-state information from a previous page request that was saved by the <see cref="M:System.Web.UI.WebControls.WebParts.ConnectionsZone.SaveViewState" /> method.</summary>
      <param name="savedState">An <see cref="T:System.Object" /> that contains the view state to be restored.</param>
      <exception cref="T:System.ArgumentException">The length of <paramref name="savedState" /> does not equal the length of the array created by the <see cref="M:System.Web.UI.WebControls.WebParts.ConnectionsZone.SaveViewState" /> method.</exception>
    </member>
    <member name="P:System.Web.UI.WebControls.WebParts.ConnectionsZone.NewConnectionErrorMessage">
      <summary>Gets or sets the text of a message displayed in the connection user interface (UI) when there is an error or warning on a new connection that a user tries to create.</summary>
      <returns>A <see cref="T:System.String" /> that contains the text of the message. The default text is a culture-specific string supplied by the .NET Framework.</returns>
    </member>
    <member name="P:System.Web.UI.WebControls.WebParts.ConnectionsZone.NoExistingConnectionInstructionText">
      <summary>Gets or sets the instruction text that appears in the body of the connection user interface (UI) when a Web Parts control has no existing connection.</summary>
      <returns>A string that contains the text message for the case where there is no existing connection. The default text is a culture-specific string supplied by the .NET Framework.</returns>
    </member>
    <member name="P:System.Web.UI.WebControls.WebParts.ConnectionsZone.NoExistingConnectionTitle">
      <summary>Gets or sets the title text that appears in the body of the connection user interface (UI) when a Web Parts control has no existing connection.</summary>
      <returns>A string that contains the title text for the case where there is no existing connection. The default text is a culture-specific string supplied by the .NET Framework. </returns>
    </member>
    <member name="M:System.Web.UI.WebControls.WebParts.ConnectionsZone.OnDisplayModeChanged(System.Object,System.Web.UI.WebControls.WebParts.WebPartDisplayModeEventArgs)">
      <summary>Raises the <see cref="E:System.Web.UI.WebControls.WebParts.WebPartManager.DisplayModeChanged" /> event.</summary>
      <param name="sender">The sender of the event.</param>
      <param name="e">A <see cref="T:System.Web.UI.WebControls.WebParts.WebPartDisplayModeEventArgs" /> that contains the event data.</param>
    </member>
    <member name="M:System.Web.UI.WebControls.WebParts.ConnectionsZone.OnInit(System.EventArgs)">
      <summary>Raises the <see cref="E:System.Web.UI.Control.Init" /> event.</summary>
      <param name="e">An <see cref="T:System.EventArgs" /> that contains the event data.</param>
    </member>
    <member name="M:System.Web.UI.WebControls.WebParts.ConnectionsZone.OnSelectedWebPartChanged(System.Object,System.Web.UI.WebControls.WebParts.WebPartEventArgs)">
      <summary>Raises the <see cref="E:System.Web.UI.WebControls.WebParts.WebPartManager.SelectedWebPartChanged" /> event.</summary>
      <param name="sender">An <see cref="T:System.Object" /> that identifies the sender of the event.</param>
      <param name="e">A <see cref="T:System.Web.UI.WebControls.WebParts.WebPartEventArgs" /> that contains the event data.</param>
    </member>
    <member name="P:System.Web.UI.WebControls.WebParts.ConnectionsZone.PartChromeType">
      <summary>Gets or sets the type of border that frames the server controls contained in a <see cref="T:System.Web.UI.WebControls.WebParts.ConnectionsZone" /> control.</summary>
      <returns>A <see cref="T:System.Web.UI.WebControls.WebParts.PartChromeType" /> that determines the type of border that frames the controls contained in the connections zone.</returns>
    </member>
    <member name="P:System.Web.UI.WebControls.WebParts.ConnectionsZone.ProvidersInstructionText">
      <summary>Gets or sets the instructional text shown in the providers section of the connection user interface (UI), when a connection already exists.</summary>
      <returns>A string serving as the instructional text for providers participating in a connection. The default text is a culture-specific string supplied by the .NET Framework.</returns>
    </member>
    <member name="P:System.Web.UI.WebControls.WebParts.ConnectionsZone.ProvidersTitle">
      <summary>Gets or sets the title shown above the providers section of the connection user interface (UI), when a connection already exists.</summary>
      <returns>A string serving as the title text for providers participating in a connection. The default title is a culture-specific string supplied by the .NET Framework.</returns>
    </member>
    <member name="M:System.Web.UI.WebControls.WebParts.ConnectionsZone.RaisePostBackEvent(System.String)">
      <summary>Raises an event for the <see cref="T:System.Web.UI.WebControls.WebParts.ConnectionsZone" /> control when the form that contains it posts back to the server. </summary>
      <param name="eventArgument">A <see cref="T:System.String" /> that contains the argument data for the event.</param>
    </member>
    <member name="M:System.Web.UI.WebControls.WebParts.ConnectionsZone.Render(System.Web.UI.HtmlTextWriter)">
      <summary>Renders the contents of the <see cref="T:System.Web.UI.WebControls.WebParts.ConnectionsZone" /> control to the specified <see cref="T:System.Web.UI.HtmlTextWriter" /> object.</summary>
      <param name="writer">The <see cref="T:System.Web.UI.HtmlTextWriter" /> that receives the Web Parts control content.</param>
    </member>
    <member name="M:System.Web.UI.WebControls.WebParts.ConnectionsZone.RenderBody(System.Web.UI.HtmlTextWriter)">
      <summary>Sends the content of a <see cref="T:System.Web.UI.WebControls.WebParts.ConnectionsZone" /> control's body area to the specified <see cref="T:System.Web.UI.HtmlTextWriter" /> object, which writes the content to the Web page.</summary>
      <param name="writer">The <see cref="T:System.Web.UI.HtmlTextWriter" /> that receives the control's body content.</param>
    </member>
    <member name="M:System.Web.UI.WebControls.WebParts.ConnectionsZone.RenderVerbs(System.Web.UI.HtmlTextWriter)">
      <summary>Renders the zone-level verbs for a <see cref="T:System.Web.UI.WebControls.WebParts.ConnectionsZone" /> control.</summary>
      <param name="writer">The <see cref="T:System.Web.UI.HtmlTextWriter" /> that receives the content of the verbs to render in a connections zone.</param>
    </member>
    <member name="M:System.Web.UI.WebControls.WebParts.ConnectionsZone.SaveControlState">
      <summary>Saves any Web Parts control state changes that occurred since the last time the page was posted back to the server.</summary>
      <returns>Returns the Web Parts control's current state. If no state is associated with the control, this method returns null.</returns>
    </member>
    <member name="M:System.Web.UI.WebControls.WebParts.ConnectionsZone.SaveViewState">
      <summary>Saves a <see cref="T:System.Web.UI.WebControls.WebParts.ConnectionsZone" /> control's view-state changes that occurred since the page was last posted back to the server.</summary>
      <returns>Returns an <see cref="T:System.Object" /> containing the control's current view state. If no view state is associated with the control, this method returns null.</returns>
    </member>
    <member name="P:System.Web.UI.WebControls.WebParts.ConnectionsZone.SendText">
      <summary>Gets or sets the text shown in the section of the connection user interface (UI) that precedes the named provider that will send data to a consumer.</summary>
      <returns>A string that prefaces the named provider in the connection. The default text is a culture-specific string supplied by the .NET Framework.</returns>
    </member>
    <member name="P:System.Web.UI.WebControls.WebParts.ConnectionsZone.SendToText">
      <summary>Gets or sets the text shown in the section of the connection user interface (UI) that precedes the named consumer to which a provider will send data.</summary>
      <returns>A string that prefaces the named consumer that the provider will send data to. The default text is a culture-specific string supplied by the .NET Framework.</returns>
    </member>
    <member name="M:System.Web.UI.WebControls.WebParts.ConnectionsZone.TrackViewState">
      <summary>Tracks view-state changes to the <see cref="T:System.Web.UI.WebControls.WebParts.ConnectionsZone" /> control so the changes can be stored in the control's <see cref="T:System.Web.UI.StateBag" /> object.</summary>
    </member>
    <member name="P:System.Web.UI.WebControls.WebParts.ConnectionsZone.WebPartToConnect">
      <summary>Gets the currently selected <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> control to connect to.</summary>
      <returns>A <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> control.</returns>
    </member>
    <member name="T:System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint">
      <summary>Defines a connection point object that enables a server control acting as a consumer to form a connection with a provider.</summary>
    </member>
    <member name="M:System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint.#ctor(System.Reflection.MethodInfo,System.Type,System.Type,System.String,System.String,System.Boolean)">
      <summary>Initializes a new instance of the <see cref="T:System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint" /> class.</summary>
      <param name="callbackMethod">The method in the consumer control that returns an interface instance to consumers to establish a connection.</param>
      <param name="interfaceType">The <see cref="T:System.Type" /> of the interface that the consumer receives from a provider. </param>
      <param name="controlType">The <see cref="T:System.Type" /> of the consumer control with which the consumer connection point is associated.</param>
      <param name="displayName">A friendly display name for the consumer connection point that appears to users in the connection user interface (UI).</param>
      <param name="id">A unique identifier for the consumer connection point.</param>
      <param name="allowsMultipleConnections">A Boolean value indicating whether the consumer connection point can have multiple simultaneous connections with providers.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="callbackMethod" /> is null.- or -<paramref name="interfaceType" /> is null. - or -<paramref name="controlType" /> is null.- or - <paramref name="displayName" /> is null or an empty string ("").</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="controlType " />is not the same type as the consumer control (or a valid class derived from it).</exception>
    </member>
    <member name="M:System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint.SetObject(System.Web.UI.Control,System.Object)">
      <summary>Invokes the callback method in a consumer control and retrieves the interface instance from a provider control.</summary>
      <param name="control">The consumer control associated with a consumer connection point.</param>
      <param name="data">The interface instance returned from a provider control.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="control" /> is null.</exception>
    </member>
    <member name="M:System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint.SupportsConnection(System.Web.UI.Control,System.Web.UI.WebControls.WebParts.ConnectionInterfaceCollection)">
      <summary>Determines whether a consumer connection point is currently capable of establishing a connection.</summary>
      <returns>true if a connection point can currently establish a connection; otherwise, false. The default is true.</returns>
      <param name="control">The consumer control associated with the <see cref="T:System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint" />. </param>
      <param name="secondaryInterfaces">A <see cref="T:System.Web.UI.WebControls.WebParts.ConnectionInterfaceCollection" /> of any secondary interfaces that participate in a connection.  </param>
    </member>
    <member name="T:System.Web.UI.WebControls.WebParts.ConsumerConnectionPointCollection">
      <summary>Represents a collection of connection points for a control in a Web Parts zone acting as a consumer. This class cannot be inherited.</summary>
    </member>
    <member name="M:System.Web.UI.WebControls.WebParts.ConsumerConnectionPointCollection.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Web.UI.WebControls.WebParts.ConsumerConnectionPointCollection" /> class. </summary>
    </member>
    <member name="M:System.Web.UI.WebControls.WebParts.ConsumerConnectionPointCollection.#ctor(System.Collections.ICollection)">
      <summary>Initializes a new instance of the <see cref="T:System.Web.UI.WebControls.WebParts.ConsumerConnectionPointCollection" /> class using the specified collection of connection points. </summary>
      <param name="connectionPoints">A collection of consumer connection points.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="connectionPoints" /> is null.</exception>
      <exception cref="T:System.ArgumentException">The collection contains an invalid connection point.- or -The collection contains an item with a duplicate ID.</exception>
    </member>
    <member name="M:System.Web.UI.WebControls.WebParts.ConsumerConnectionPointCollection.Contains(System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint)">
      <summary>Determines whether the specified <see cref="T:System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint" /> object is in the collection.</summary>
      <returns>true if the consumer connection point is contained in the collection; otherwise, false.</returns>
      <param name="connectionPoint">The connection point to search for.</param>
    </member>
    <member name="M:System.Web.UI.WebControls.WebParts.ConsumerConnectionPointCollection.CopyTo(System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint[],System.Int32)">
      <summary>Copies all the items from the <see cref="T:System.Web.UI.WebControls.WebParts.ConsumerConnectionPointCollection" /> collection to a compatible one-dimensional array of <see cref="T:System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint" /> objects, starting at the specified index in the target array.</summary>
      <param name="array">A zero-based array of <see cref="T:System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint" /> objects that receives the copied items from the current <see cref="T:System.Web.UI.WebControls.WebParts.ConsumerConnectionPointCollection" />.</param>
      <param name="index">The position in the target array at which to start receiving the copied content.</param>
    </member>
    <member name="P:System.Web.UI.WebControls.WebParts.ConsumerConnectionPointCollection.Default">
      <summary>Gets the default consumer connection point.</summary>
      <returns>The default <see cref="T:System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint" />.</returns>
    </member>
    <member name="M:System.Web.UI.WebControls.WebParts.ConsumerConnectionPointCollection.IndexOf(System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint)">
      <summary>Determines the index of the specified <see cref="T:System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint" /> object in the collection.</summary>
      <returns>The zero-based index of the first occurrence of <paramref name="connectionPoint" /> within the current <see cref="T:System.Web.UI.WebControls.WebParts.ConsumerConnectionPointCollection" />, if found; otherwise, -1.</returns>
      <param name="connectionPoint">The <see cref="T:System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint" /> to locate.</param>
    </member>
    <member name="P:System.Web.UI.WebControls.WebParts.ConsumerConnectionPointCollection.Item(System.Int32)">
      <summary>Gets the item in the collection at the location specified by the integer value. </summary>
      <returns>A <see cref="T:System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint" /> at the specified index in the collection.</returns>
      <param name="index">The index of a particular <see cref="T:System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint" /> item in the collection.</param>
    </member>
    <member name="P:System.Web.UI.WebControls.WebParts.ConsumerConnectionPointCollection.Item(System.String)">
      <summary>Gets the connection point with the specified <see cref="P:System.Web.UI.WebControls.WebParts.ConnectionPoint.ID" /> property. </summary>
      <returns>The first <see cref="T:System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint" /> in the collection whose ID matches the value of <paramref name="id" />.</returns>
      <param name="id">A string value representing the connection point ID of the connection point to be retrieved.</param>
    </member>
    <member name="T:System.Web.UI.WebControls.WebParts.DeclarativeCatalogPart">
      <summary>Enables developers to add a catalog of <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> or other server controls to a Web page in the declarative, page persistence format. This class cannot be inherited.</summary>
    </member>
    <member name="M:System.Web.UI.WebControls.WebParts.DeclarativeCatalogPart.#ctor">
      <summary>Initializes a new instance of the class. </summary>
    </member>
    <member name="P:System.Web.UI.WebControls.WebParts.DeclarativeCatalogPart.AccessKey">
      <summary>This inherited property is not used by the Web Parts control set when rendering a <see cref="T:System.Web.UI.WebControls.WebParts.DeclarativeCatalogPart" /> control. The property is overridden only for the purpose of preventing it from appearing in Microsoft Visual Studio 2005 designer tools.</summary>
      <returns>A string that represents a keyboard key used for quick keyboard navigation to a control.</returns>
    </member>
    <member name="P:System.Web.UI.WebControls.WebParts.DeclarativeCatalogPart.BackColor">
      <summary>This inherited property is not used by the <see cref="T:System.Web.UI.WebControls.WebParts.DeclarativeCatalogPart" /> control. The property is overridden only for the purpose of preventing it from appearing in Microsoft Visual Studio 2005 designer tools.</summary>
      <returns>A <see cref="T:System.Drawing.Color" /> that is used for the background color of the control.</returns>
    </member>
    <member name="P:System.Web.UI.WebControls.WebParts.DeclarativeCatalogPart.BackImageUrl">
      <summary>This inherited property is not used by the Web Parts control set when rendering a <see cref="T:System.Web.UI.WebControls.WebParts.DeclarativeCatalogPart" /> control. The property is overridden only for the purpose of preventing it from appearing in Microsoft Visual Studio 2005 designer tools.</summary>
      <returns>A string that contains the URL to an image used as the background for a control.</returns>
    </member>
    <member name="P:System.Web.UI.WebControls.WebParts.DeclarativeCatalogPart.BorderColor">
      <summary>This inherited property is not used by the <see cref="T:System.Web.UI.WebControls.WebParts.DeclarativeCatalogPart" /> control. The property is overridden only for the purpose of preventing it from appearing in Microsoft Visual Studio 2005 designer tools.</summary>
      <returns>A <see cref="T:System.Drawing.Color" /> that is used as the color of the border around a control.</returns>
    </member>
    <member name="P:System.Web.UI.WebControls.WebParts.DeclarativeCatalogPart.BorderStyle">
      <summary>This inherited property is not used by the <see cref="T:System.Web.UI.WebControls.WebParts.DeclarativeCatalogPart" /> control. The property is overridden only for the purpose of preventing it from appearing in Microsoft Visual Studio 2005 designer tools.</summary>
      <returns>A <see cref="T:System.Web.UI.WebControls.BorderStyle" /> that determines the type of border and title display for a control.</returns>
    </member>
    <member name="P:System.Web.UI.WebControls.WebParts.DeclarativeCatalogPart.BorderWidth">
      <summary>This inherited property is not used by the <see cref="T:System.Web.UI.WebControls.WebParts.DeclarativeCatalogPart" /> control. The property is overridden only for the purpose of preventing it from appearing in Microsoft Visual Studio 2005 designer tools.</summary>
      <returns>A <see cref="T:System.Web.UI.WebControls.Unit" /> that determines the width of the border around a control.</returns>
    </member>
    <member name="P:System.Web.UI.WebControls.WebParts.DeclarativeCatalogPart.CssClass">
      <summary>This inherited property is not used by the <see cref="T:System.Web.UI.WebControls.WebParts.DeclarativeCatalogPart" /> control. The property is overridden only for the purpose of preventing it from appearing in Microsoft Visual Studio 2005 designer tools.</summary>
      <returns>A string that contains the name of a cascading style sheet (CSS) class used to assign style characteristics to a control.</returns>
    </member>
    <member name="P:System.Web.UI.WebControls.WebParts.DeclarativeCatalogPart.DefaultButton">
      <summary>This inherited property is not used by the <see cref="T:System.Web.UI.WebControls.WebParts.DeclarativeCatalogPart" /> control. The property is overridden only for the purpose of preventing it from appearing in Microsoft Visual Studio 2005 designer tools.</summary>
      <returns>A string that contains the ID of a <see cref="T:System.Web.UI.WebControls.Button" /> control that serves as the default button on a control.</returns>
    </member>
    <member name="P:System.Web.UI.WebControls.WebParts.DeclarativeCatalogPart.Direction">
      <summary>This inherited property is not used by the <see cref="T:System.Web.UI.WebControls.WebParts.DeclarativeCatalogPart" /> control. The property is overridden only for the purpose of preventing it from appearing in Microsoft Visual Studio 2005 designer tools.</summary>
      <returns>A <see cref="T:System.Web.UI.WebControls.ContentDirection" /> that indicates the direction in which the content flows in a control.</returns>
    </member>
    <member name="P:System.Web.UI.WebControls.WebParts.DeclarativeCatalogPart.Enabled">
      <summary>This inherited property is not used by the <see cref="T:System.Web.UI.WebControls.WebParts.DeclarativeCatalogPart" /> control. The property is overridden only for the purpose of preventing it from appearing in Microsoft Visual Studio 2005 designer tools.</summary>
      <returns>A Boolean value that indicates whether a control is currently enabled or disabled.</returns>
    </member>
    <member name="P:System.Web.UI.WebControls.WebParts.DeclarativeCatalogPart.EnableTheming">
      <summary>This inherited property is not used by the <see cref="T:System.Web.UI.WebControls.WebParts.DeclarativeCatalogPart" /> control. The property is overridden only for the purpose of preventing it from appearing in Microsoft Visual Studio 2005 designer tools.</summary>
      <returns>A Boolean value that indicates whether themes can be used on a control.</returns>
      <exception cref="T:System.NotSupportedException">An attempt was made to set the property.</exception>
    </member>
    <member name="P:System.Web.UI.WebControls.WebParts.DeclarativeCatalogPart.Font">
      <summary>This inherited property is not used by the <see cref="T:System.Web.UI.WebControls.WebParts.DeclarativeCatalogPart" /> control. The property is overridden only for the purpose of preventing it from appearing in Microsoft Visual Studio 2005 designer tools.</summary>
      <returns>A <see cref="T:System.Web.UI.WebControls.FontInfo" /> that indicates the font used for a control's content.</returns>
    </member>
    <member name="P:System.Web.UI.WebControls.WebParts.DeclarativeCatalogPart.ForeColor">
      <summary>This inherited property is not used by the <see cref="T:System.Web.UI.WebControls.WebParts.DeclarativeCatalogPart" /> control. The property is overridden only for the purpose of preventing it from appearing in Microsoft Visual Studio 2005 designer tools.</summary>
      <returns>A <see cref="T:System.Drawing.Color" /> that determines the foreground color for a control.</returns>
    </member>
    <member name="M:System.Web.UI.WebControls.WebParts.DeclarativeCatalogPart.GetAvailableWebPartDescriptions">
      <summary>Returns a collection of descriptions of the available <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> controls in a catalog.</summary>
      <returns>A <see cref="T:System.Web.UI.WebControls.WebParts.WebPartDescriptionCollection" /> that contains a <see cref="T:System.Web.UI.WebControls.WebParts.WebPartDescription" /> for each control in a catalog.</returns>
    </member>
    <member name="M:System.Web.UI.WebControls.WebParts.DeclarativeCatalogPart.GetWebPart(System.Web.UI.WebControls.WebParts.WebPartDescription)">
      <summary>Returns a reference to a <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> control based on the value of the description passed into the method.</summary>
      <returns>A <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> control whose description matches the values in <paramref name="description" />.</returns>
      <param name="description">A <see cref="T:System.Web.UI.WebControls.WebParts.WebPartDescription" /> that contains details about the control. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="Description" /> is null.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="Description" /> is not an available <see cref="T:System.Web.UI.WebControls.WebParts.WebPartDescription" /> instance.</exception>
    </member>
    <member name="P:System.Web.UI.WebControls.WebParts.DeclarativeCatalogPart.GroupingText">
      <summary>This inherited property is not used by the <see cref="T:System.Web.UI.WebControls.WebParts.DeclarativeCatalogPart" /> control. The property is overridden only for the purpose of preventing it from appearing in Microsoft Visual Studio 2005 designer tools. </summary>
      <returns>A string that contains the text at the head of a section of grouped child controls within the control.</returns>
    </member>
    <member name="P:System.Web.UI.WebControls.WebParts.DeclarativeCatalogPart.Height">
      <summary>This inherited property is not used by the <see cref="T:System.Web.UI.WebControls.WebParts.DeclarativeCatalogPart" /> control. The property is overridden only for the purpose of preventing it from appearing in Microsoft Visual Studio 2005 designer tools. </summary>
      <returns>A <see cref="T:System.Web.UI.WebControls.Unit" /> value that indicates the height of the control.</returns>
    </member>
    <member name="P:System.Web.UI.WebControls.WebParts.DeclarativeCatalogPart.HorizontalAlign">
      <summary>This inherited property is not used by the <see cref="T:System.Web.UI.WebControls.WebParts.DeclarativeCatalogPart" /> control. The property is overridden only for the purpose of preventing it from appearing in Microsoft Visual Studio 2005 designer tools. </summary>
      <returns>A <see cref="T:System.Web.UI.WebControls.HorizontalAlign" /> that indicates the type of horizontal alignment used in rendering the control.</returns>
    </member>
    <member name="P:System.Web.UI.WebControls.WebParts.DeclarativeCatalogPart.ScrollBars">
      <summary>This inherited property is not used by the <see cref="T:System.Web.UI.WebControls.WebParts.DeclarativeCatalogPart" /> control. The property is overridden only for the purpose of preventing it from appearing in Microsoft Visual Studio 2005 designer tools. </summary>
      <returns>A <see cref="T:System.Web.UI.WebControls.ScrollBars" /> that is used if needed within the control.</returns>
    </member>
    <member name="P:System.Web.UI.WebControls.WebParts.DeclarativeCatalogPart.SkinID">
      <summary>This inherited property is not used by the <see cref="T:System.Web.UI.WebControls.WebParts.DeclarativeCatalogPart" /> control. The property is overridden only for the purpose of preventing it from appearing in Microsoft Visual Studio 2005 designer tools. </summary>
      <returns>A string that contains the ID of a skin for the control.</returns>
      <exception cref="T:System.NotSupportedException">An attempt was made to set the property.</exception>
    </member>
    <member name="P:System.Web.UI.WebControls.WebParts.DeclarativeCatalogPart.TabIndex">
      <summary>This inherited property is not used by the <see cref="T:System.Web.UI.WebControls.WebParts.DeclarativeCatalogPart" /> control. The property is overridden only for the purpose of preventing it from appearing in Microsoft Visual Studio 2005 designer tools. </summary>
      <returns>A short number that serves as the index of this control in the tab order.</returns>
    </member>
    <member name="P:System.Web.UI.WebControls.WebParts.DeclarativeCatalogPart.Title">
      <summary>Gets or sets the title that appears in the control's title bar.</summary>
      <returns>A string that is used as the title of the control. The default value is a calculated control name supplied by the Web Parts control set.</returns>
    </member>
    <member name="P:System.Web.UI.WebControls.WebParts.DeclarativeCatalogPart.ToolTip">
      <summary>This inherited property is not used by the <see cref="T:System.Web.UI.WebControls.WebParts.DeclarativeCatalogPart" /> control. The property is overridden only for the purpose of preventing it from appearing in Microsoft Visual Studio 2005 designer tools. </summary>
      <returns>A string that contains the content of a ToolTip.</returns>
    </member>
    <member name="P:System.Web.UI.WebControls.WebParts.DeclarativeCatalogPart.Visible">
      <summary>This inherited property is not used by the <see cref="T:System.Web.UI.WebControls.WebParts.DeclarativeCatalogPart" /> control. The property is overridden only for the purpose of preventing it from appearing in Microsoft Visual Studio 2005 designer tools. </summary>
      <returns>A Boolean value that indicates whether the control is visible.</returns>
    </member>
    <member name="P:System.Web.UI.WebControls.WebParts.DeclarativeCatalogPart.WebPartsListUserControlPath">
      <summary>Gets or sets the path to a user control that contains a list of <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> or other server controls for the catalog.</summary>
      <returns>A string with the path to a user control that contains a set of <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> or server controls.</returns>
    </member>
    <member name="P:System.Web.UI.WebControls.WebParts.DeclarativeCatalogPart.WebPartsTemplate">
      <summary>Gets or sets a reference to a template that contains the <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> controls declared in a catalog.</summary>
      <returns>An <see cref="T:System.Web.UI.ITemplate" /> that contains controls declared in a catalog. </returns>
    </member>
    <member name="P:System.Web.UI.WebControls.WebParts.DeclarativeCatalogPart.Width">
      <summary>This inherited property is not used by the <see cref="T:System.Web.UI.WebControls.WebParts.DeclarativeCatalogPart" /> control. The property is overridden only for the purpose of preventing it from appearing in Microsoft Visual Studio 2005 designer tools. </summary>
      <returns>A <see cref="T:System.Web.UI.WebControls.Unit" /> that indicates the width of the control.</returns>
    </member>
    <member name="P:System.Web.UI.WebControls.WebParts.DeclarativeCatalogPart.Wrap">
      <summary>This inherited property is not used by the <see cref="T:System.Web.UI.WebControls.WebParts.DeclarativeCatalogPart" /> control. The property is overridden only for the purpose of preventing it from appearing in Microsoft Visual Studio 2005 designer tools. </summary>
      <returns>A Boolean value that indicates whether long lines in the control can wrap.</returns>
    </member>
    <member name="T:System.Web.UI.WebControls.WebParts.EditorPart">
      <summary>Serves as the base class for controls that reside in <see cref="T:System.Web.UI.WebControls.WebParts.EditorZoneBase" /> zones and are used to edit <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> controls.</summary>
    </member>
    <member name="M:System.Web.UI.WebControls.WebParts.EditorPart.#ctor">
      <summary>Initializes the class for use by an inherited class instance. This constructor can be called only by an inherited class.</summary>
    </member>
    <member name="M:System.Web.UI.WebControls.WebParts.EditorPart.ApplyChanges">
      <summary>Saves the values in an <see cref="T:System.Web.UI.WebControls.WebParts.EditorPart" /> control to the corresponding properties in the associated <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> control.</summary>
      <returns>true if the action of saving values from the <see cref="T:System.Web.UI.WebControls.WebParts.EditorPart" /> control to the <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> control is successful; otherwise (if an error occurs), false. </returns>
    </member>
    <member name="P:System.Web.UI.WebControls.WebParts.EditorPart.Display">
      <summary>Gets a value that indicates whether a control should be displayed when its associated <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> control is in edit mode.</summary>
      <returns>A Boolean value that indicates whether the control should be displayed. The default value is true.</returns>
    </member>
    <member name="P:System.Web.UI.WebControls.WebParts.EditorPart.DisplayTitle">
      <summary>Gets a string that contains the title text displayed in the title bar of an <see cref="T:System.Web.UI.WebControls.WebParts.EditorPart" /> control.</summary>
      <returns>A string that represents the complete, visible title of the control. The default value is a calculated, culture-specific string supplied by the .NET Framework.</returns>
    </member>
    <member name="M:System.Web.UI.WebControls.WebParts.EditorPart.GetDesignModeState">
      <summary>Retrieves the current state of an <see cref="T:System.Web.UI.WebControls.WebParts.EditorPart" /> control's parent zone.</summary>
      <returns>An <see cref="T:System.Collections.IDictionary" /> that has the current state of the <see cref="T:System.Web.UI.WebControls.WebParts.EditorZoneBase" /> zone that contains an <see cref="T:System.Web.UI.WebControls.WebParts.EditorPart" /> control.</returns>
    </member>
    <member name="M:System.Web.UI.WebControls.WebParts.EditorPart.OnPreRender(System.EventArgs)">
      <summary>Raises the <see cref="E:System.Web.UI.Control.PreRender" /> event. </summary>
      <param name="e">An <see cref="T:System.EventArgs" /> that contains the event data. </param>
      <exception cref="T:System.InvalidOperationException">The <see cref="T:System.Web.UI.WebControls.WebParts.EditorZoneBase" /> that contains the <see cref="T:System.Web.UI.WebControls.WebParts.EditorPart" /> control is null.</exception>
    </member>
    <member name="M:System.Web.UI.WebControls.WebParts.EditorPart.SetDesignModeState(System.Collections.IDictionary)">
      <summary>Applies the characteristics of the design-mode state to the current <see cref="T:System.Web.UI.WebControls.WebParts.EditorZoneBase" /> zone that contains an <see cref="T:System.Web.UI.WebControls.WebParts.EditorPart" /> control.</summary>
      <param name="data">An <see cref="T:System.Collections.IDictionary" /> that contains state data for displaying the zone. </param>
    </member>
    <member name="M:System.Web.UI.WebControls.WebParts.EditorPart.SyncChanges">
      <summary>Retrieves the property values from a <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> control for its associated <see cref="T:System.Web.UI.WebControls.WebParts.EditorPart" /> control.</summary>
    </member>
    <member name="P:System.Web.UI.WebControls.WebParts.EditorPart.WebPartManager">
      <summary>Gets a reference to the <see cref="T:System.Web.UI.WebControls.WebParts.WebPartManager" /> control associated with the current Web page.</summary>
      <returns>A reference to the <see cref="T:System.Web.UI.WebControls.WebParts.WebPartManager" /> on the page. </returns>
    </member>
    <member name="P:System.Web.UI.WebControls.WebParts.EditorPart.WebPartToEdit">
      <summary>Gets a reference to the <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> control that is currently being edited. </summary>
      <returns>A <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> that is currently in edit mode.</returns>
    </member>
    <member name="P:System.Web.UI.WebControls.WebParts.EditorPart.Zone">
      <summary>Gets a reference to the <see cref="T:System.Web.UI.WebControls.WebParts.EditorZoneBase" /> zone that contains an <see cref="T:System.Web.UI.WebControls.WebParts.EditorPart" /> control.</summary>
      <returns>An <see cref="T:System.Web.UI.WebControls.WebParts.EditorZoneBase" /> that contains the control.</returns>
    </member>
    <member name="T:System.Web.UI.WebControls.WebParts.EditorPartChrome">
      <summary>Enables developers to override the rendering for only the selected sections of <see cref="T:System.Web.UI.WebControls.WebParts.EditorPart" /> controls in an <see cref="T:System.Web.UI.WebControls.WebParts.EditorZoneBase" /> zone.</summary>
    </member>
    <member name="M:System.Web.UI.WebControls.WebParts.EditorPartChrome.#ctor(System.Web.UI.WebControls.WebParts.EditorZoneBase)">
      <summary>Initializes a new instance of the <see cref="T:System.Web.UI.WebControls.WebParts.EditorPartChrome" /> class. </summary>
      <param name="zone">The associated <see cref="T:System.Web.UI.WebControls.WebParts.EditorZoneBase" />.</param>
      <exception cref="T:System.ArgumentNullException">The <see cref="T:System.Web.UI.WebControls.WebParts.EditorZoneBase" /> that <paramref name="zone" /> refers to is null.</exception>
    </member>
    <member name="M:System.Web.UI.WebControls.WebParts.EditorPartChrome.CreateEditorPartChromeStyle(System.Web.UI.WebControls.WebParts.EditorPart,System.Web.UI.WebControls.WebParts.PartChromeType)">
      <summary>Creates the style object that supplies style attributes for each <see cref="T:System.Web.UI.WebControls.WebParts.EditorPart" /> control rendered by the <see cref="T:System.Web.UI.WebControls.WebParts.EditorPartChrome" /> object.</summary>
      <returns>A <see cref="T:System.Web.UI.WebControls.Style" /> that contains style attributes for <paramref name="editorPart" />.</returns>
      <param name="editorPart">The control that is currently being rendered.</param>
      <param name="chromeType">The type of chrome for a particular control; one of the <see cref="T:System.Web.UI.WebControls.WebParts.PartChromeType" /> enumeration values.</param>
      <exception cref="T:System.ArgumentNullException">The control that <paramref name="editorPart" /> refers to is null.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="chromeType" /> is not a <see cref="T:System.Web.UI.WebControls.WebParts.PartChromeType" />.</exception>
    </member>
    <member name="M:System.Web.UI.WebControls.WebParts.EditorPartChrome.PerformPreRender">
      <summary>Performs tasks that must be done prior to rendering <see cref="T:System.Web.UI.WebControls.WebParts.EditorPart" /> controls.</summary>
    </member>
    <member name="M:System.Web.UI.WebControls.WebParts.EditorPartChrome.RenderEditorPart(System.Web.UI.HtmlTextWriter,System.Web.UI.WebControls.WebParts.EditorPart)">
      <summary>Renders a complete <see cref="T:System.Web.UI.WebControls.WebParts.EditorPart" /> control with all its sections.</summary>
      <param name="writer">The <see cref="T:System.Web.UI.HtmlTextWriter" /> that receives the <paramref name="editorPart" /> content.</param>
      <param name="editorPart">The control currently being rendered.</param>
      <exception cref="T:System.ArgumentNullException">The control that <paramref name="editorPart" /> refers to is null.</exception>
    </member>
    <member name="M:System.Web.UI.WebControls.WebParts.EditorPartChrome.RenderPartContents(System.Web.UI.HtmlTextWriter,System.Web.UI.WebControls.WebParts.EditorPart)">
      <summary>Renders the main content area of an <see cref="T:System.Web.UI.WebControls.WebParts.EditorPart" /> control, excluding the header and footer.</summary>
      <param name="writer">The <see cref="T:System.Web.UI.HtmlTextWriter" /> that receives the <paramref name="editorPart" /> content.</param>
      <param name="editorPart">The control currently being rendered.</param>
    </member>
    <member name="P:System.Web.UI.WebControls.WebParts.EditorPartChrome.Zone">
      <summary>Gets a reference to the associated <see cref="T:System.Web.UI.WebControls.WebParts.EditorZoneBase" /> zone.</summary>
      <returns>A reference to an <see cref="T:System.Web.UI.WebControls.WebParts.EditorZoneBase" /> that is associated with the <see cref="T:System.Web.UI.WebControls.WebParts.EditorPartChrome" />.</returns>
    </member>
    <member name="T:System.Web.UI.WebControls.WebParts.EditorPartCollection">
      <summary>Contains a collection of <see cref="T:System.Web.UI.WebControls.WebParts.EditorPart" /> controls used for editing the properties, layout, appearance, and behavior of <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> controls. This class cannot be inherited. </summary>
    </member>
    <member name="M:System.Web.UI.WebControls.WebParts.EditorPartCollection.#ctor">
      <summary>Initializes an empty new instance of the <see cref="T:System.Web.UI.WebControls.WebParts.EditorPartCollection" /> class.</summary>
    </member>
    <member name="M:System.Web.UI.WebControls.WebParts.EditorPartCollection.#ctor(System.Collections.ICollection)">
      <summary>Initializes a new instance of the <see cref="T:System.Web.UI.WebControls.WebParts.EditorPartCollection" /> class by passing in an <see cref="T:System.Collections.ICollection" /> collection of <see cref="T:System.Web.UI.WebControls.WebParts.EditorPart" /> controls.</summary>
      <param name="editorParts">An <see cref="T:System.Collections.ICollection" /> of <see cref="T:System.Web.UI.WebControls.WebParts.EditorPart" /> controls. </param>
    </member>
    <member name="M:System.Web.UI.WebControls.WebParts.EditorPartCollection.#ctor(System.Web.UI.WebControls.WebParts.EditorPartCollection,System.Collections.ICollection)">
      <summary>Initializes a new instance of the <see cref="T:System.Web.UI.WebControls.WebParts.EditorPartCollection" /> class by passing in an <see cref="T:System.Web.UI.WebControls.WebParts.EditorPartCollection" /> collection of <see cref="T:System.Web.UI.WebControls.WebParts.EditorPart" /> controls, and an <see cref="T:System.Collections.ICollection" /> collection of additional <see cref="T:System.Web.UI.WebControls.WebParts.EditorPart" /> controls.</summary>
      <param name="existingEditorParts">An <see cref="T:System.Collections.ICollection" /> of existing <see cref="T:System.Web.UI.WebControls.WebParts.EditorPart" /> controls in a zone. </param>
      <param name="editorParts">An <see cref="T:System.Collections.ICollection" /> of <see cref="T:System.Web.UI.WebControls.WebParts.EditorPart" /> controls not in a zone, but created programmatically. </param>
    </member>
    <member name="M:System.Web.UI.WebControls.WebParts.EditorPartCollection.Contains(System.Web.UI.WebControls.WebParts.EditorPart)">
      <summary>Returns a value that indicates whether a particular control is in the collection.</summary>
      <returns>A Boolean value that indicates whether the <see cref="T:System.Web.UI.WebControls.WebParts.EditorPart" /> is in the collection.</returns>
      <param name="editorPart">The <see cref="T:System.Web.UI.WebControls.WebParts.EditorPart" /> being tested for its status as a member of the collection. </param>
    </member>
    <member name="M:System.Web.UI.WebControls.WebParts.EditorPartCollection.CopyTo(System.Web.UI.WebControls.WebParts.EditorPart[],System.Int32)">
      <summary>Copies the collection to an array of <see cref="T:System.Web.UI.WebControls.WebParts.EditorPart" /> controls.</summary>
      <param name="array">An <see cref="T:System.Web.UI.WebControls.WebParts.EditorPart" /> to contain the copied collection of controls. </param>
      <param name="index">The starting point in the array at which to place the collection contents. </param>
    </member>
    <member name="F:System.Web.UI.WebControls.WebParts.EditorPartCollection.Empty">
      <summary>References a static, read-only, empty instance of the collection. </summary>
    </member>
    <member name="M:System.Web.UI.WebControls.WebParts.EditorPartCollection.IndexOf(System.Web.UI.WebControls.WebParts.EditorPart)">
      <summary>Returns the position of a particular member of the collection.</summary>
      <returns>An integer that corresponds to the index of an <see cref="T:System.Web.UI.WebControls.WebParts.EditorPart" /> control in the collection.</returns>
      <param name="editorPart">An <see cref="T:System.Web.UI.WebControls.WebParts.EditorPart" /> that is a member of the collection. </param>
    </member>
    <member name="P:System.Web.UI.WebControls.WebParts.EditorPartCollection.Item(System.Int32)">
      <summary>Returns a specific member of the collection according to a unique identifier.</summary>
      <returns>An <see cref="T:System.Web.UI.WebControls.WebParts.EditorPart" /> at the specified index in the collection. </returns>
      <param name="index">The index of a particular <see cref="T:System.Web.UI.WebControls.WebParts.EditorPart" /> in a collection. </param>
    </member>
    <member name="T:System.Web.UI.WebControls.WebParts.EditorZone">
      <summary>Serves as the primary control in the Web Parts control set for hosting <see cref="T:System.Web.UI.WebControls.WebParts.EditorPart" /> controls on a Web page.</summary>
    </member>
    <member name="M:System.Web.UI.WebControls.WebParts.EditorZone.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Web.UI.WebControls.WebParts.EditorZone" /> class.</summary>
    </member>
    <member name="M:System.Web.UI.WebControls.WebParts.EditorZone.CreateEditorParts">
      <summary>Creates all the <see cref="T:System.Web.UI.WebControls.WebParts.EditorPart" /> controls declared within a zone template in page persistence format.</summary>
      <returns>An <see cref="T:System.Web.UI.WebControls.WebParts.EditorPartCollection" /> that contains references to all the <see cref="T:System.Web.UI.WebControls.WebParts.EditorPart" /> controls declared within the zone template.</returns>
      <exception cref="T:System.InvalidOperationException">The current <see cref="T:System.Web.UI.WebControls.WebParts.EditorPart" /> control does not have an ID.</exception>
    </member>
    <member name="P:System.Web.UI.WebControls.WebParts.EditorZone.ZoneTemplate">
      <summary>Provides a template to contain child controls within an <see cref="T:System.Web.UI.WebControls.WebParts.EditorZone" /> control in page persistence format.</summary>
      <returns>An <see cref="T:System.Web.UI.ITemplate" /> zone template that acts as a container for child controls in the zone.</returns>
    </member>
    <member name="T:System.Web.UI.WebControls.WebParts.EditorZoneBase">
      <summary>Serves as the base class for all zone controls that act as containers for <see cref="T:System.Web.UI.WebControls.WebParts.EditorPart" /> controls.</summary>
    </member>
    <member name="M:System.Web.UI.WebControls.WebParts.EditorZoneBase.#ctor">
      <summary>Initializes the class for use by an inherited class instance. This constructor can only be called by an inherited class.</summary>
    </member>
    <member name="P:System.Web.UI.WebControls.WebParts.EditorZoneBase.ApplyVerb">
      <summary>Gets a reference to a <see cref="T:System.Web.UI.WebControls.WebParts.WebPartVerb" /> object that enables end users to apply editing changes to a control in edit mode. </summary>
      <returns>A <see cref="T:System.Web.UI.WebControls.WebParts.WebPartVerb" /> that enables end users to apply changes to a control.</returns>
    </member>
    <member name="P:System.Web.UI.WebControls.WebParts.EditorZoneBase.CancelVerb">
      <summary>Gets a reference to a <see cref="T:System.Web.UI.WebControls.WebParts.WebPartVerb" /> object that enables end users to cancel editing changes to a control in edit mode. </summary>
      <returns>A <see cref="T:System.Web.UI.WebControls.WebParts.WebPartVerb" /> that enables end users to cancel editing changes to a control.</returns>
    </member>
    <member name="M:System.Web.UI.WebControls.WebParts.EditorZoneBase.Close">
      <summary>Called when a user clicks a close verb in the header of a zone, this method ends the process of editing <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> controls, and returns a Web Parts page's display mode to browse mode.</summary>
    </member>
    <member name="M:System.Web.UI.WebControls.WebParts.EditorZoneBase.CreateChildControls">
      <summary>Creates the set of child controls associated with an <see cref="T:System.Web.UI.WebControls.WebParts.EditorZoneBase" /> zone.</summary>
    </member>
    <member name="M:System.Web.UI.WebControls.WebParts.EditorZoneBase.CreateEditorPartChrome">
      <summary>Gets a reference to a new <see cref="T:System.Web.UI.WebControls.WebParts.EditorPartChrome" /> object used to render the peripheral user interface (UI) elements around an <see cref="T:System.Web.UI.WebControls.WebParts.EditorZoneBase" /> zone.</summary>
      <returns>An <see cref="T:System.Web.UI.WebControls.WebParts.EditorPartChrome" /> that renders the peripheral UI elements for the zone.</returns>
    </member>
    <member name="M:System.Web.UI.WebControls.WebParts.EditorZoneBase.CreateEditorParts">
      <summary>Provides a base method declaration that derived zones can override to handle the details of creating the <see cref="T:System.Web.UI.WebControls.WebParts.EditorPart" /> controls contained in a zone.</summary>
      <returns>An <see cref="T:System.Web.UI.WebControls.WebParts.EditorPartCollection" /> that contains the collection of <see cref="T:System.Web.UI.WebControls.WebParts.EditorPart" /> controls associated with the zone. </returns>
    </member>
    <member name="P:System.Web.UI.WebControls.WebParts.EditorZoneBase.Display"></member>
    <member name="P:System.Web.UI.WebControls.WebParts.EditorZoneBase.EditorPartChrome">
      <summary>Gets a reference to the instance of the <see cref="T:System.Web.UI.WebControls.WebParts.EditorPartChrome" /> class associated with the <see cref="T:System.Web.UI.WebControls.WebParts.EditorZoneBase" /> zone.</summary>
      <returns>An <see cref="T:System.Web.UI.WebControls.WebParts.EditorPartChrome" /> that contains style characteristics for the chrome elements of <see cref="T:System.Web.UI.WebControls.WebParts.EditorPart" /> controls in a zone.</returns>
    </member>
    <member name="P:System.Web.UI.WebControls.WebParts.EditorZoneBase.EditorParts">
      <summary>Gets a collection of all the <see cref="T:System.Web.UI.WebControls.WebParts.EditorPart" /> controls contained in an <see cref="T:System.Web.UI.WebControls.WebParts.EditorZoneBase" /> zone. </summary>
      <returns>An <see cref="T:System.Web.UI.WebControls.WebParts.EditorPartCollection" /> that contains all the individual <see cref="T:System.Web.UI.WebControls.WebParts.EditorPart" /> controls in a zone. </returns>
      <exception cref="T:System.InvalidOperationException">An <see cref="T:System.Web.UI.WebControls.WebParts.EditorPart" /> being added to the collection does not have a value assigned to its ID property.</exception>
    </member>
    <member name="P:System.Web.UI.WebControls.WebParts.EditorZoneBase.EmptyZoneText"></member>
    <member name="P:System.Web.UI.WebControls.WebParts.EditorZoneBase.ErrorText">
      <summary>Gets or sets the text of a zone-level error message to display at the top of the editing user interface (UI).</summary>
      <returns>A localized string that contains the error message. </returns>
    </member>
    <member name="P:System.Web.UI.WebControls.WebParts.EditorZoneBase.HeaderText"></member>
    <member name="P:System.Web.UI.WebControls.WebParts.EditorZoneBase.InstructionText"></member>
    <member name="M:System.Web.UI.WebControls.WebParts.EditorZoneBase.InvalidateEditorParts">
      <summary>Sets the collection of <see cref="T:System.Web.UI.WebControls.WebParts.EditorPart" /> controls associated with an <see cref="T:System.Web.UI.WebControls.WebParts.EditorZoneBase" /> zone to null, which results in the <see cref="M:System.Web.UI.WebControls.WebParts.EditorZoneBase.CreateEditorParts" /> method being called to recreate the collection.</summary>
    </member>
    <member name="M:System.Web.UI.WebControls.WebParts.EditorZoneBase.LoadViewState(System.Object)">
      <summary>Loads previously saved state information for a zone.</summary>
      <param name="savedState">The previously saved state. </param>
      <exception cref="T:System.ArgumentException">The size of the <paramref name="savedState" /> object does not equal the size of the current view-state object. </exception>
    </member>
    <member name="P:System.Web.UI.WebControls.WebParts.EditorZoneBase.OKVerb">
      <summary>Gets a reference to a <see cref="T:System.Web.UI.WebControls.WebParts.WebPartVerb" /> object that applies editing changes to a control in edit mode, and hides the editing user interface (UI). </summary>
      <returns>A <see cref="T:System.Web.UI.WebControls.WebParts.WebPartVerb" /> that applies editing changes to a control and hides the editing UI.</returns>
    </member>
    <member name="M:System.Web.UI.WebControls.WebParts.EditorZoneBase.OnDisplayModeChanged(System.Object,System.Web.UI.WebControls.WebParts.WebPartDisplayModeEventArgs)">
      <summary>Raises the <see cref="E:System.Web.UI.WebControls.WebParts.WebPartManager.DisplayModeChanged" /> event and destroys all <see cref="T:System.Web.UI.WebControls.WebParts.EditorPart" /> and child controls in the zone in preparation for a Web page to enter or exit the edit display mode. </summary>
      <param name="sender">An <see cref="T:System.Object" /> that raises the <see cref="E:System.Web.UI.WebControls.WebParts.WebPartManager.DisplayModeChanged" /> event. </param>
      <param name="e">A <see cref="T:System.Web.UI.WebControls.WebParts.WebPartDisplayModeEventArgs" /> that contains the event data. </param>
    </member>
    <member name="M:System.Web.UI.WebControls.WebParts.EditorZoneBase.OnPreRender(System.EventArgs)">
      <summary>Raises the <see cref="E:System.Web.UI.Control.PreRender" /> event, and calls the <see cref="M:System.Web.UI.WebControls.WebParts.EditorPartChrome.PerformPreRender" /> method for the chrome elements of the <see cref="T:System.Web.UI.WebControls.WebParts.EditorPart" /> controls.</summary>
      <param name="e">A <see cref="T:System.EventArgs" /> that contains the event data.   </param>
    </member>
    <member name="M:System.Web.UI.WebControls.WebParts.EditorZoneBase.OnSelectedWebPartChanged(System.Object,System.Web.UI.WebControls.WebParts.WebPartEventArgs)">
      <summary>Raises the <see cref="E:System.Web.UI.WebControls.WebParts.WebPartManager.SelectedWebPartChanged" /> event and sets the <see cref="P:System.Web.UI.WebControls.WebParts.EditorZoneBase.EditorParts" /> collection to null in the zone in preparation for a <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> control to enter or exit edit mode. </summary>
      <param name="sender">An <see cref="T:System.Object" /> that raises the <see cref="E:System.Web.UI.WebControls.WebParts.WebPartManager.SelectedWebPartChanged" /> event. </param>
      <param name="e">A <see cref="T:System.Web.UI.WebControls.WebParts.WebPartDisplayModeEventArgs" /> that contains the event data. </param>
    </member>
    <member name="M:System.Web.UI.WebControls.WebParts.EditorZoneBase.RaisePostBackEvent(System.String)">
      <summary>Carries out the actions associated with one of the zone verbs, or raises an event that posts back to the server.</summary>
      <param name="eventArgument">A <see cref="T:System.String" /> that contains the argument for the event. </param>
    </member>
    <member name="M:System.Web.UI.WebControls.WebParts.EditorZoneBase.Render(System.Web.UI.HtmlTextWriter)">
      <summary>Renders the zone to the specified <see cref="T:System.Web.UI.HtmlTextWriter" /> object.</summary>
      <param name="writer">The <see cref="T:System.Web.UI.HtmlTextWriter" /> that receives the zone's content. </param>
    </member>
    <member name="M:System.Web.UI.WebControls.WebParts.EditorZoneBase.RenderBody(System.Web.UI.HtmlTextWriter)">
      <summary>Overrides the base method to render the body area of a zone derived from the <see cref="T:System.Web.UI.WebControls.WebParts.EditorZoneBase" /> class.</summary>
      <param name="writer">The <see cref="T:System.Web.UI.HtmlTextWriter" /> that receives the zone's body content. </param>
    </member>
    <member name="M:System.Web.UI.WebControls.WebParts.EditorZoneBase.RenderVerbs(System.Web.UI.HtmlTextWriter)">
      <summary>Renders the verbs that apply at the zone level.</summary>
      <param name="writer">The <see cref="T:System.Web.UI.HtmlTextWriter" /> that receives the zone's body content. </param>
    </member>
    <member name="M:System.Web.UI.WebControls.WebParts.EditorZoneBase.SaveViewState">
      <summary>Saves any view-state changes that have occurred after a page was posted back to the server.</summary>
      <returns>Returns the zone control's current view state. If no view state is associated with the zone, this method returns null.</returns>
    </member>
    <member name="M:System.Web.UI.WebControls.WebParts.EditorZoneBase.TrackViewState">
      <summary>Tracks changes to a zone control's view state.</summary>
    </member>
    <member name="P:System.Web.UI.WebControls.WebParts.EditorZoneBase.WebPartToEdit">
      <summary>Gets a reference to the <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> control that is currently being edited. </summary>
      <returns>A <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> that is currently in edit mode.</returns>
    </member>
    <member name="T:System.Web.UI.WebControls.WebParts.ErrorWebPart">
      <summary>Inserted into a Web page as a placeholder when the attempt to load or create a new instance of a dynamic <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> control has failed. </summary>
    </member>
    <member name="M:System.Web.UI.WebControls.WebParts.ErrorWebPart.#ctor(System.String,System.String,System.String,System.String)">
      <summary>Initializes a new instance of the control.</summary>
      <param name="originalID">A string that is the control ID (not the unique ID) of the failing control. If a <see cref="T:System.Web.UI.WebControls.WebParts.GenericWebPart" /> control is involved in the failure, the ID is the ID of its child server control. </param>
      <param name="originalTypeName">A string that is the name of the <see cref="T:System.Type" /> of the failed control. If a <see cref="T:System.Web.UI.WebControls.WebParts.GenericWebPart" /> control is involved in the failure, the type name is the type of its child server control. </param>
      <param name="originalPath">A string that contains the path to a user control, if a <see cref="T:System.Web.UI.WebControls.WebParts.GenericWebPart" /> control that contains a child user control is involved in the failure. </param>
      <param name="genericWebPartID">A string that returns the ID of a <see cref="T:System.Web.UI.WebControls.WebParts.GenericWebPart" /> control, if that type of control was involved in the failure to load or create a control. This is needed for controls that do not inherit from the <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> base class.</param>
    </member>
    <member name="M:System.Web.UI.WebControls.WebParts.ErrorWebPart.AddAttributesToRender(System.Web.UI.HtmlTextWriter)">
      <summary>Applies special error style attributes to an <see cref="T:System.Web.UI.WebControls.WebParts.ErrorWebPart" /> object that is inserted into a page in place of another control.</summary>
      <param name="writer">An <see cref="T:System.Web.UI.HtmlTextWriter" /> that contains the HTML output to be rendered. </param>
    </member>
    <member name="M:System.Web.UI.WebControls.WebParts.ErrorWebPart.EndLoadPersonalization">
      <summary>Sets several important properties on the <see cref="T:System.Web.UI.WebControls.WebParts.ErrorWebPart" /> control prior to rendering, to prevent users from being able to personalize the control.</summary>
    </member>
    <member name="P:System.Web.UI.WebControls.WebParts.ErrorWebPart.ErrorMessage">
      <summary>Gets or sets the error message that is displayed in a Web page in place of a control that could not be successfully added to the page.</summary>
      <returns>A string that contains the text of the error message. The default value is a culture-specific error message.</returns>
    </member>
    <member name="M:System.Web.UI.WebControls.WebParts.ErrorWebPart.RenderContents(System.Web.UI.HtmlTextWriter)">
      <summary>Encodes the string value of the <see cref="P:System.Web.UI.WebControls.WebParts.ErrorWebPart.ErrorMessage" /> property. </summary>
      <param name="writer">An <see cref="T:System.Web.UI.HtmlTextWriter" /> that encodes the error message. </param>
    </member>
    <member name="M:System.Web.UI.WebControls.WebParts.ErrorWebPart.System#Web#UI#WebControls#WebParts#ITrackingPersonalizable#BeginLoad">
      <summary>This method is added only to implement the <see cref="T:System.Web.UI.WebControls.WebParts.ITrackingPersonalizable" /> interface.</summary>
    </member>
    <member name="M:System.Web.UI.WebControls.WebParts.ErrorWebPart.System#Web#UI#WebControls#WebParts#ITrackingPersonalizable#BeginSave">
      <summary>This method is added only to implement the <see cref="T:System.Web.UI.WebControls.WebParts.ITrackingPersonalizable" /> interface.</summary>
    </member>
    <member name="M:System.Web.UI.WebControls.WebParts.ErrorWebPart.System#Web#UI#WebControls#WebParts#ITrackingPersonalizable#EndLoad">
      <summary>Implements the <see cref="T:System.Web.UI.WebControls.WebParts.ITrackingPersonalizable" /> interface and calls the <see cref="M:System.Web.UI.WebControls.WebParts.ErrorWebPart.EndLoadPersonalization" /> method.</summary>
    </member>
    <member name="M:System.Web.UI.WebControls.WebParts.ErrorWebPart.System#Web#UI#WebControls#WebParts#ITrackingPersonalizable#EndSave">
      <summary>This method is added only to implement the <see cref="T:System.Web.UI.WebControls.WebParts.ITrackingPersonalizable" /> interface.</summary>
    </member>
    <member name="P:System.Web.UI.WebControls.WebParts.ErrorWebPart.System#Web#UI#WebControls#WebParts#ITrackingPersonalizable#TracksChanges">
      <summary>Gets a value that indicates whether the control tracks the status of its changes. </summary>
      <returns>true if the Web Parts control is responsible for determining when the control is considered changed; otherwise, false.</returns>
    </member>
    <member name="T:System.Web.UI.WebControls.WebParts.FieldCallback">
      <summary>References the method to call when retrieving field data from a provider.</summary>
      <param name="fieldValue">The callback method.</param>
    </member>
    <member name="T:System.Web.UI.WebControls.WebParts.GenericWebPart">
      <summary>Wraps server controls that are not <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> controls so that they can appear and behave as true <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> controls at run time.</summary>
    </member>
    <member name="M:System.Web.UI.WebControls.WebParts.GenericWebPart.#ctor(System.Web.UI.Control)">
      <summary>Initializes a new instance of a <see cref="T:System.Web.UI.WebControls.WebParts.GenericWebPart" /> control by passing in a reference to a control that becomes the child control.</summary>
      <param name="control">A server control that becomes the child control of the <see cref="T:System.Web.UI.WebControls.WebParts.GenericWebPart" /> control instance. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="control" /> is null.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="control" /> is of type <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" />.- or -<paramref name="control" /> has a null or empty <see cref="P:System.Web.UI.Control.ID" /> property.- or -<paramref name="control" /> has been output-cached.</exception>
    </member>
    <member name="P:System.Web.UI.WebControls.WebParts.GenericWebPart.CatalogIconImageUrl">
      <summary>Gets or sets the URL to an image that represents a <see cref="T:System.Web.UI.WebControls.WebParts.GenericWebPart" /> control in a catalog of controls.</summary>
      <returns>A string that represents the URL to an image used to represent the control in a catalog. The default value is an empty string ("").</returns>
    </member>
    <member name="P:System.Web.UI.WebControls.WebParts.GenericWebPart.ChildControl">
      <summary>Gets a reference to the child control that is wrapped by a <see cref="T:System.Web.UI.WebControls.WebParts.GenericWebPart" /> control at run time.</summary>
      <returns>A <see cref="T:System.Web.UI.Control" /> that refers to the wrapped child control.</returns>
    </member>
    <member name="M:System.Web.UI.WebControls.WebParts.GenericWebPart.CreateChildControls"></member>
    <member name="M:System.Web.UI.WebControls.WebParts.GenericWebPart.CreateControlCollection">
      <summary>Overrides the base method to create a read-only collection that consists of the child control wrapped by a <see cref="T:System.Web.UI.WebControls.WebParts.GenericWebPart" /> control.</summary>
      <returns>A <see cref="T:System.Web.UI.ControlCollection" /> that contains the child control.</returns>
    </member>
    <member name="M:System.Web.UI.WebControls.WebParts.GenericWebPart.CreateEditorParts">
      <summary>Returns a collection of custom <see cref="T:System.Web.UI.WebControls.WebParts.EditorPart" /> controls that can be used to edit the child control of a <see cref="T:System.Web.UI.WebControls.WebParts.GenericWebPart" /> control when it is in edit mode.</summary>
      <returns>An <see cref="T:System.Web.UI.WebControls.WebParts.EditorPartCollection" /> that contains custom <see cref="T:System.Web.UI.WebControls.WebParts.EditorPart" /> controls associated with a server control.</returns>
    </member>
    <member name="P:System.Web.UI.WebControls.WebParts.GenericWebPart.Description">
      <summary>Gets or sets a brief phrase that summarizes what a control does, for use in ToolTips and catalogs of server controls.</summary>
      <returns>A string that briefly summarizes the control's functionality. The default value is an empty string ("").</returns>
    </member>
    <member name="P:System.Web.UI.WebControls.WebParts.GenericWebPart.Height">
      <summary>Gets or sets the height (in pixels) of a control.</summary>
      <returns>A <see cref="T:System.Web.UI.WebControls.Unit" /> that indicates the height of the control.</returns>
    </member>
    <member name="P:System.Web.UI.WebControls.WebParts.GenericWebPart.ID">
      <summary>Gets or sets the ID of a control. This value is not inheritable.</summary>
      <returns>A string that contains the ID of the control. </returns>
    </member>
    <member name="M:System.Web.UI.WebControls.WebParts.GenericWebPart.Render(System.Web.UI.HtmlTextWriter)">
      <summary>Delegates rendering the contents of the control to the child control.</summary>
      <param name="writer">An <see cref="T:System.Web.UI.HtmlTextWriter" /> that represents the output stream to render HTML content on the client. </param>
    </member>
    <member name="P:System.Web.UI.WebControls.WebParts.GenericWebPart.Subtitle">
      <summary>Gets a string that is concatenated with the <see cref="P:System.Web.UI.WebControls.WebParts.GenericWebPart.Title" /> property value to form a complete title for a control. </summary>
      <returns>A string that serves as a subtitle for the control. The default value is an empty string ("").</returns>
    </member>
    <member name="P:System.Web.UI.WebControls.WebParts.GenericWebPart.Title">
      <summary>Gets or sets the title of a <see cref="T:System.Web.UI.WebControls.WebParts.GenericWebPart" /> control.</summary>
      <returns>A string that represents the title of the part control. The default value is an empty string ("").</returns>
    </member>
    <member name="P:System.Web.UI.WebControls.WebParts.GenericWebPart.TitleIconImageUrl">
      <summary>Gets or sets the URL to an image used to represent a <see cref="T:System.Web.UI.WebControls.WebParts.GenericWebPart" /> control in the control's own title bar.</summary>
      <returns>A string that represents the URL to an image. The default value is an empty string ("").</returns>
    </member>
    <member name="P:System.Web.UI.WebControls.WebParts.GenericWebPart.TitleUrl">
      <summary>Gets or sets a URL to supplemental information about a <see cref="T:System.Web.UI.WebControls.WebParts.GenericWebPart" /> control.</summary>
      <returns>A string that represents a URL to more information about a <see cref="T:System.Web.UI.WebControls.WebParts.GenericWebPart" /> control. The default value is an empty string ("").</returns>
    </member>
    <member name="P:System.Web.UI.WebControls.WebParts.GenericWebPart.Verbs">
      <summary>Gets a collection of custom verbs associated with a <see cref="T:System.Web.UI.WebControls.WebParts.GenericWebPart" /> control.</summary>
      <returns>A <see cref="T:System.Web.UI.WebControls.WebParts.WebPartVerbCollection" /> that contains custom <see cref="T:System.Web.UI.WebControls.WebParts.WebPartVerb" /> objects associated with a <see cref="T:System.Web.UI.WebControls.WebParts.GenericWebPart" /> control. The default value is <see cref="F:System.Web.UI.WebControls.WebParts.WebPartVerbCollection.Empty" />.</returns>
    </member>
    <member name="P:System.Web.UI.WebControls.WebParts.GenericWebPart.WebBrowsableObject">
      <summary>Gets a reference to the child control, to enable the control to be edited by custom <see cref="T:System.Web.UI.WebControls.WebParts.EditorPart" /> controls.</summary>
      <returns>An <see cref="T:System.Object" /> that consists of the child control of a <see cref="T:System.Web.UI.WebControls.WebParts.GenericWebPart" /> control. </returns>
    </member>
    <member name="P:System.Web.UI.WebControls.WebParts.GenericWebPart.Width">
      <summary>Gets or sets the width (in pixels) of the control.</summary>
      <returns>A <see cref="T:System.Web.UI.WebControls.Unit" /> that indicates the width of the control.</returns>
    </member>
    <member name="T:System.Web.UI.WebControls.WebParts.ImportCatalogPart">
      <summary>Imports a description file for a <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> control (or other ASP.NET server control used as a <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> control), so that users can add the control to a Web page with pre-defined settings. This class cannot be inherited.</summary>
    </member>
    <member name="M:System.Web.UI.WebControls.WebParts.ImportCatalogPart.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Web.UI.WebControls.WebParts.ImportCatalogPart" /> class. </summary>
    </member>
    <member name="P:System.Web.UI.WebControls.WebParts.ImportCatalogPart.BrowseHelpText">
      <summary>Gets or sets a text message that instructs users to browse to the location of a description file.</summary>
      <returns>A string that contains the text of the message. The default value is a culture-specific message supplied by the .NET Framework.</returns>
    </member>
    <member name="P:System.Web.UI.WebControls.WebParts.ImportCatalogPart.DefaultButton">
      <summary>Gets or sets what button in the user interface (UI) is treated as the default button that receives the focus when form that contains the button is rendered. This property is not intended to be called from page developer code.</summary>
      <returns>A string that contains the ID of the <see cref="T:System.Web.UI.WebControls.Button" /> that receives the default focus in a <see cref="T:System.Web.UI.WebControls.Panel" /> control.</returns>
    </member>
    <member name="M:System.Web.UI.WebControls.WebParts.ImportCatalogPart.GetAvailableWebPartDescriptions">
      <summary>Returns a collection of descriptions of the available <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> controls in a catalog.</summary>
      <returns>A <see cref="T:System.Web.UI.WebControls.WebParts.WebPartDescriptionCollection" /> that contains a <see cref="T:System.Web.UI.WebControls.WebParts.WebPartDescription" /> for each control in a catalog.</returns>
    </member>
    <member name="M:System.Web.UI.WebControls.WebParts.ImportCatalogPart.GetWebPart(System.Web.UI.WebControls.WebParts.WebPartDescription)">
      <summary>Returns a reference to a <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> control based on the values in the description passed into the method.</summary>
      <returns>A <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> control whose description matches the values in <paramref name="description" />.</returns>
      <param name="description">A <see cref="T:System.Web.UI.WebControls.WebParts.WebPartDescription" /> that contains details about the control. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="description" /> is null.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="description" /> is not an available <see cref="T:System.Web.UI.WebControls.WebParts.WebPartDescription" /> value.</exception>
    </member>
    <member name="P:System.Web.UI.WebControls.WebParts.ImportCatalogPart.ImportedPartLabelText">
      <summary>Gets or sets text displayed after a user imports a description file to represent or describe the imported control within the catalog of imported controls.</summary>
      <returns>A string that contains the text of the label. The default value is a culture-specific message supplied by the .NET Framework.</returns>
    </member>
    <member name="P:System.Web.UI.WebControls.WebParts.ImportCatalogPart.PartImportErrorLabelText">
      <summary>Gets or sets an error message that is displayed if an error occurs during the import process.</summary>
      <returns>A string that contains the text of the label. The default value is a culture-specific message supplied by the .NET Framework.</returns>
    </member>
    <member name="P:System.Web.UI.WebControls.WebParts.ImportCatalogPart.Title">
      <summary>Gets or sets the title that appears in the title bar of an <see cref="T:System.Web.UI.WebControls.WebParts.ImportCatalogPart" /> control.</summary>
      <returns>A string that is used as the title of the control. The default value is a calculated control name supplied by the Web Parts control set.</returns>
    </member>
    <member name="P:System.Web.UI.WebControls.WebParts.ImportCatalogPart.UploadButtonText">
      <summary>Gets or sets the text for the <see cref="T:System.Web.UI.WebControls.Button" /> control that initiates the upload of a description file.</summary>
      <returns>A string that is used as the text for a <see cref="T:System.Web.UI.WebControls.Button" />. The default value is a culture-specific string supplied by the Web Parts control set.</returns>
    </member>
    <member name="P:System.Web.UI.WebControls.WebParts.ImportCatalogPart.UploadHelpText">
      <summary>Gets or sets the text of the message that tells the user how to upload a description file.</summary>
      <returns>A string that is used as instructions for the user to upload a description file. The default value is a culture-specific string supplied by the Web Parts control set.</returns>
    </member>
    <member name="T:System.Web.UI.WebControls.WebParts.IPersonalizable">
      <summary>Defines additional management capabilities for the application and extraction of personalization state. </summary>
    </member>
    <member name="P:System.Web.UI.WebControls.WebParts.IPersonalizable.IsDirty">
      <summary>Gets a value that indicates whether the custom data that a control manages has changed. </summary>
      <returns>true if the custom data managed with the <see cref="T:System.Web.UI.WebControls.WebParts.IPersonalizable" /> interface has changed; otherwise, false.</returns>
    </member>
    <member name="M:System.Web.UI.WebControls.WebParts.IPersonalizable.Load(System.Web.UI.WebControls.WebParts.PersonalizationDictionary)">
      <summary>Loads custom data into a control. </summary>
      <param name="state">A <see cref="T:System.Web.UI.WebControls.WebParts.PersonalizationDictionary" /> that contains custom scoped data that was loaded from the underlying data store.</param>
    </member>
    <member name="M:System.Web.UI.WebControls.WebParts.IPersonalizable.Save(System.Web.UI.WebControls.WebParts.PersonalizationDictionary)">
      <summary>Saves custom properties and internal state information in the control's <see cref="T:System.Web.UI.WebControls.WebParts.PersonalizationDictionary" /> object.</summary>
      <param name="state">A <see cref="T:System.Web.UI.WebControls.WebParts.PersonalizationDictionary" /> that contains custom scoped data that was loaded from the underlying data store.</param>
    </member>
    <member name="T:System.Web.UI.WebControls.WebParts.ITrackingPersonalizable">
      <summary>Allows Web Parts controls to track the specific phases of the personalization load and save process.</summary>
    </member>
    <member name="M:System.Web.UI.WebControls.WebParts.ITrackingPersonalizable.BeginLoad">
      <summary>Represents the beginning of the load phase for personalization information. </summary>
    </member>
    <member name="M:System.Web.UI.WebControls.WebParts.ITrackingPersonalizable.BeginSave">
      <summary>Represents the phase prior to extracting personalization data from a control. </summary>
    </member>
    <member name="M:System.Web.UI.WebControls.WebParts.ITrackingPersonalizable.EndLoad">
      <summary>Represents the phase after personalization data has been applied to a control. </summary>
    </member>
    <member name="M:System.Web.UI.WebControls.WebParts.ITrackingPersonalizable.EndSave">
      <summary>Represents the phase after personalization data has been extracted from a control. </summary>
    </member>
    <member name="P:System.Web.UI.WebControls.WebParts.ITrackingPersonalizable.TracksChanges">
      <summary>Indicates whether the control tracks the status of its changes.</summary>
      <returns>true if the Web Parts control is responsible for determining when the control is considered changed ("dirty"); otherwise, false.</returns>
    </member>
    <member name="T:System.Web.UI.WebControls.WebParts.ITransformerConfigurationControl">
      <summary>Defines the contract a control implements to act as a configuration control for a transformer in a Web Parts connection.</summary>
    </member>
    <member name="E:System.Web.UI.WebControls.WebParts.ITransformerConfigurationControl.Cancelled">
      <summary>Occurs when transformer configuration is not completed.</summary>
    </member>
    <member name="E:System.Web.UI.WebControls.WebParts.ITransformerConfigurationControl.Succeeded">
      <summary>Occurs when transformer configuration is successfully completed. </summary>
    </member>
    <member name="T:System.Web.UI.WebControls.WebParts.IVersioningPersonalizable">
      <summary>Represents an interface that can manage personalization data belonging to a previous version of a Web Parts control.</summary>
    </member>
    <member name="M:System.Web.UI.WebControls.WebParts.IVersioningPersonalizable.Load(System.Collections.IDictionary)">
      <summary>Loads personalization data to a Web Parts control that does not have a corresponding personalized property for the data due to a version change.</summary>
      <param name="unknownProperties">A dictionary of personalization data that could not be applied to a control.</param>
    </member>
    <member name="T:System.Web.UI.WebControls.WebParts.IWebActionable">
      <summary>Enables <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> controls or other server controls to contain collections of verbs.</summary>
    </member>
    <member name="P:System.Web.UI.WebControls.WebParts.IWebActionable.Verbs">
      <summary>Gets a reference to a collection of custom <see cref="T:System.Web.UI.WebControls.WebParts.WebPartVerb" /> objects.</summary>
      <returns>A <see cref="T:System.Web.UI.WebControls.WebParts.WebPartVerbCollection" /> that contains custom <see cref="T:System.Web.UI.WebControls.WebParts.WebPartVerb" /> objects.</returns>
    </member>
    <member name="T:System.Web.UI.WebControls.WebParts.IWebEditable">
      <summary>Provides an interface for developers to specify custom editing controls that are associated with a <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> control.</summary>
    </member>
    <member name="M:System.Web.UI.WebControls.WebParts.IWebEditable.CreateEditorParts">
      <summary>Returns a collection of custom <see cref="T:System.Web.UI.WebControls.WebParts.EditorPart" /> controls associated with a server control that implements the <see cref="T:System.Web.UI.WebControls.WebParts.IWebEditable" /> interface.</summary>
      <returns>An <see cref="T:System.Web.UI.WebControls.WebParts.EditorPartCollection" /> that contains the collection of custom <see cref="T:System.Web.UI.WebControls.WebParts.EditorPart" /> controls associated with a server control. </returns>
    </member>
    <member name="P:System.Web.UI.WebControls.WebParts.IWebEditable.WebBrowsableObject">
      <summary>Gets a reference to the <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> control, user control, or custom control that will be edited by <see cref="T:System.Web.UI.WebControls.WebParts.EditorPart" /> controls.</summary>
      <returns>An object reference to the control associated with an <see cref="T:System.Web.UI.WebControls.WebParts.EditorPart" /> control.</returns>
    </member>
    <member name="T:System.Web.UI.WebControls.WebParts.IWebPart">
      <summary>Defines common user interface (UI) properties used by ASP.NET <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> controls. </summary>
    </member>
    <member name="P:System.Web.UI.WebControls.WebParts.IWebPart.CatalogIconImageUrl">
      <summary>Gets or sets the URL to an image that represents a <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> control in a catalog of controls.</summary>
      <returns>A string that represents the URL to an image used to represent the control in a catalog. The default value is an empty string ("").</returns>
    </member>
    <member name="P:System.Web.UI.WebControls.WebParts.IWebPart.Description">
      <summary>Gets or sets a brief phrase that summarizes what a control does, for use in ToolTips and catalogs of <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> controls.</summary>
      <returns>A string that briefly summarizes the control's functionality. The default value is an empty string ("").</returns>
    </member>
    <member name="P:System.Web.UI.WebControls.WebParts.IWebPart.Subtitle">
      <summary>Gets a string that is concatenated with the <see cref="P:System.Web.UI.WebControls.WebParts.IWebPart.Title" /> property value to form a complete title for a <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> control.</summary>
      <returns>A string that serves as a subtitle for the control. The default value is an empty string ("").</returns>
    </member>
    <member name="P:System.Web.UI.WebControls.WebParts.IWebPart.Title">
      <summary>Gets or sets the title of a <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> control.</summary>
      <returns>A string that contains the title of the control. The default value is an empty string ("").</returns>
    </member>
    <member name="P:System.Web.UI.WebControls.WebParts.IWebPart.TitleIconImageUrl">
      <summary>Gets or sets the URL to an image used to represent a Web Parts control in the control's own title bar.</summary>
      <returns>A string that represents the URL to an image. The default value is an empty string ("").</returns>
    </member>
    <member name="P:System.Web.UI.WebControls.WebParts.IWebPart.TitleUrl">
      <summary>Gets or sets a URL to supplemental information about a <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> control.</summary>
      <returns>A string that represents a URL to more information about a <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> control. The default value is an empty string ("").</returns>
    </member>
    <member name="T:System.Web.UI.WebControls.WebParts.IWebPartField">
      <summary>Defines a provider interface for connecting two server controls using a single field of data. </summary>
    </member>
    <member name="M:System.Web.UI.WebControls.WebParts.IWebPartField.GetFieldValue(System.Web.UI.WebControls.WebParts.FieldCallback)">
      <summary>Returns the value of the field that is being used by the interface as the basis of a connection between two <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> controls.</summary>
      <param name="callback">A <see cref="T:System.Web.UI.WebControls.WebParts.FieldCallback" /> delegate that contains the address of a method that receives the data.</param>
    </member>
    <member name="P:System.Web.UI.WebControls.WebParts.IWebPartField.Schema">
      <summary>Gets the schema information for a data field that is used to share data between two <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> controls.</summary>
      <returns>A <see cref="T:System.ComponentModel.PropertyDescriptor" /> that describes the schema information for the data field.</returns>
    </member>
    <member name="T:System.Web.UI.WebControls.WebParts.IWebPartParameters">
      <summary>Defines the contract a Web Parts control implements to pass a parameter value in a Web Parts connection.</summary>
    </member>
    <member name="M:System.Web.UI.WebControls.WebParts.IWebPartParameters.GetParametersData(System.Web.UI.WebControls.WebParts.ParametersCallback)">
      <summary>Gets the value of the data from the connection provider.</summary>
      <param name="callback">The method to call to process the data from the provider.</param>
    </member>
    <member name="P:System.Web.UI.WebControls.WebParts.IWebPartParameters.Schema">
      <summary>Gets the property descriptors for the data to be received by the consumer.</summary>
      <returns>A <see cref="T:System.ComponentModel.PropertyDescriptorCollection" /> describing the data.</returns>
    </member>
    <member name="M:System.Web.UI.WebControls.WebParts.IWebPartParameters.SetConsumerSchema(System.ComponentModel.PropertyDescriptorCollection)">
      <summary>Sets the property descriptors for the properties that the consumer receives when calling the <see cref="M:System.Web.UI.WebControls.WebParts.IWebPartParameters.GetParametersData(System.Web.UI.WebControls.WebParts.ParametersCallback)" /> method.</summary>
      <param name="schema">The <see cref="T:System.ComponentModel.PropertyDescriptorCollection" /> returned by <see cref="P:System.Web.UI.WebControls.WebParts.IWebPartParameters.Schema" />.</param>
    </member>
    <member name="T:System.Web.UI.WebControls.WebParts.IWebPartRow">
      <summary>Defines a provider interface for connecting two server controls using a single field of data.</summary>
    </member>
    <member name="M:System.Web.UI.WebControls.WebParts.IWebPartRow.GetRowData(System.Web.UI.WebControls.WebParts.RowCallback)">
      <summary>Returns the data for the row that is being used by the interface as the basis of a connection between two <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> controls.</summary>
      <param name="callback">A <see cref="T:System.Web.UI.WebControls.WebParts.RowCallback" /> delegate that contains the address of a method that receives the data.</param>
    </member>
    <member name="P:System.Web.UI.WebControls.WebParts.IWebPartRow.Schema">
      <summary>Gets the schema information for a data row that is used to share data between two <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> controls.</summary>
      <returns>A <see cref="T:System.ComponentModel.PropertyDescriptorCollection" /> describing the data.</returns>
    </member>
    <member name="T:System.Web.UI.WebControls.WebParts.IWebPartTable">
      <summary>Defines a provider interface for connecting two server controls using an entire table of data.</summary>
    </member>
    <member name="M:System.Web.UI.WebControls.WebParts.IWebPartTable.GetTableData(System.Web.UI.WebControls.WebParts.TableCallback)">
      <summary>Returns the data for the table that is being used by the interface as the basis of a connection between two <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> controls.</summary>
      <param name="callback">A <see cref="T:System.Web.UI.WebControls.WebParts.TableCallback" /> delegate that contains the address of a method that receives the data.</param>
    </member>
    <member name="P:System.Web.UI.WebControls.WebParts.IWebPartTable.Schema">
      <summary>Gets the schema information for a data table that is used to share data between two <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> controls.</summary>
      <returns>A <see cref="T:System.ComponentModel.PropertyDescriptorCollection" /> describing the data.</returns>
    </member>
    <member name="T:System.Web.UI.WebControls.WebParts.LayoutEditorPart">
      <summary>Provides an editor control that enables end users to edit several layout-oriented user interface (UI) properties on an associated <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> control. This class cannot be inherited.</summary>
    </member>
    <member name="M:System.Web.UI.WebControls.WebParts.LayoutEditorPart.#ctor">
      <summary>Creates a new instance of the class.</summary>
    </member>
    <member name="M:System.Web.UI.WebControls.WebParts.LayoutEditorPart.ApplyChanges">
      <summary>Saves the values from a <see cref="T:System.Web.UI.WebControls.WebParts.LayoutEditorPart" /> control to the corresponding properties in the associated <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> control.</summary>
      <returns>true if the action of saving values from the <see cref="T:System.Web.UI.WebControls.WebParts.LayoutEditorPart" /> control to the <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> control is successful; otherwise (if an error occurs), false.</returns>
      <exception cref="T:System.Exception">An error occurred when setting the value of the <see cref="P:System.Web.UI.WebControls.WebParts.WebPart.ChromeState" /> property on the associated <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> control.</exception>
    </member>
    <member name="P:System.Web.UI.WebControls.WebParts.LayoutEditorPart.DefaultButton">
      <summary>Overrides the base property inherited from the <see cref="T:System.Web.UI.WebControls.Panel" /> control to hide the property from designers and prevent it from being affected by themes. </summary>
      <returns>A string that contains the ID of the <see cref="T:System.Web.UI.WebControls.Button" /> control that receives the default focus in a <see cref="T:System.Web.UI.WebControls.Panel" /> control.</returns>
    </member>
    <member name="P:System.Web.UI.WebControls.WebParts.LayoutEditorPart.Display">
      <summary>Gets a value that indicates whether a control should be displayed when its associated <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> control is in edit mode.</summary>
      <returns>A Boolean value that indicates whether the control should be displayed. </returns>
    </member>
    <member name="M:System.Web.UI.WebControls.WebParts.LayoutEditorPart.SyncChanges">
      <summary>Retrieves the property values from a <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> control and assigns them to the associated <see cref="T:System.Web.UI.WebControls.WebParts.LayoutEditorPart" /> control.</summary>
    </member>
    <member name="P:System.Web.UI.WebControls.WebParts.LayoutEditorPart.Title">
      <summary>Gets or sets a title for the editor control.</summary>
      <returns>A string that is used as the title of the control. The default value is a calculated control name supplied by the Web Parts control set.</returns>
    </member>
    <member name="T:System.Web.UI.WebControls.WebParts.PageCatalogPart">
      <summary>Provides a catalog that keeps references to all <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> controls (and other server controls contained in <see cref="T:System.Web.UI.WebControls.WebParts.WebPartZoneBase" /> zones) that a user has closed on a single Web Parts page, which enables users to add the closed controls back to the page. This class cannot be inherited.</summary>
    </member>
    <member name="M:System.Web.UI.WebControls.WebParts.PageCatalogPart.#ctor">
      <summary>Initializes a new instance of the class.</summary>
    </member>
    <member name="P:System.Web.UI.WebControls.WebParts.PageCatalogPart.AccessKey">
      <summary>This inherited property is not used by the Web Parts control set when rendering a <see cref="T:System.Web.UI.WebControls.WebParts.PageCatalogPart" /> control. The property is overridden only for the purpose of preventing it from appearing in Microsoft Visual Studio 2005 designer tools.</summary>
      <returns>A string that represents a keyboard key used for quick keyboard navigation to a control.</returns>
    </member>
    <member name="P:System.Web.UI.WebControls.WebParts.PageCatalogPart.BackColor">
      <summary>This inherited property is not used by the Web Parts control set when rendering a <see cref="T:System.Web.UI.WebControls.WebParts.PageCatalogPart" /> control. The property is overridden only for the purpose of preventing it from appearing in Microsoft Visual Studio 2005 designer tools.</summary>
      <returns>A <see cref="T:System.Drawing.Color" /> that is used for the background color of the control.</returns>
    </member>
    <member name="P:System.Web.UI.WebControls.WebParts.PageCatalogPart.BackImageUrl">
      <summary>This inherited property is not used by the Web Parts control set when rendering a <see cref="T:System.Web.UI.WebControls.WebParts.PageCatalogPart" /> control. The property is overridden only for the purpose of preventing it from appearing in Microsoft Visual Studio 2005 designer tools.</summary>
      <returns>A string that contains the URL to an image used as the background for a control.</returns>
    </member>
    <member name="P:System.Web.UI.WebControls.WebParts.PageCatalogPart.BorderColor">
      <summary>This inherited property is not used by the Web Parts control set when rendering a <see cref="T:System.Web.UI.WebControls.WebParts.PageCatalogPart" /> control. The property is overridden only for the purpose of preventing it from appearing in Microsoft Visual Studio 2005 designer tools.</summary>
      <returns>A <see cref="T:System.Drawing.Color" /> that is used as the color of the border around a control.</returns>
    </member>
    <member name="P:System.Web.UI.WebControls.WebParts.PageCatalogPart.BorderStyle">
      <summary>This inherited property is not used by the Web Parts control set when rendering a <see cref="T:System.Web.UI.WebControls.WebParts.PageCatalogPart" /> control. The property is overridden only for the purpose of preventing it from appearing in Microsoft Visual Studio 2005 designer tools.</summary>
      <returns>A <see cref="T:System.Web.UI.WebControls.BorderStyle" /> that determines the type of border and title display for a control.</returns>
    </member>
    <member name="P:System.Web.UI.WebControls.WebParts.PageCatalogPart.BorderWidth">
      <summary>This inherited property is not used by the Web Parts control set when rendering a <see cref="T:System.Web.UI.WebControls.WebParts.PageCatalogPart" /> control. The property is overridden only for the purpose of preventing it from appearing in Microsoft Visual Studio 2005 designer tools.</summary>
      <returns>A <see cref="T:System.Web.UI.WebControls.Unit" /> that determines the width of the border around a control.</returns>
    </member>
    <member name="P:System.Web.UI.WebControls.WebParts.PageCatalogPart.CssClass">
      <summary>This inherited property is not used by the Web Parts control set when rendering a <see cref="T:System.Web.UI.WebControls.WebParts.PageCatalogPart" /> control. The property is overridden only for the purpose of preventing it from appearing in Microsoft Visual Studio 2005 designer tools.</summary>
      <returns>A string that contains the name of a cascading style sheet (CSS) class used to assign style characteristics to a control.</returns>
    </member>
    <member name="P:System.Web.UI.WebControls.WebParts.PageCatalogPart.DefaultButton">
      <summary>This inherited property is not used by the Web Parts control set when rendering a <see cref="T:System.Web.UI.WebControls.WebParts.PageCatalogPart" /> control. The property is overridden only for the purpose of preventing it from appearing in Microsoft Visual Studio 2005 designer tools.</summary>
      <returns>A string that contains the ID of a <see cref="T:System.Web.UI.WebControls.Button" /> control that serves as the default button on a control.</returns>
    </member>
    <member name="P:System.Web.UI.WebControls.WebParts.PageCatalogPart.Direction">
      <summary>This inherited property is not used by the Web Parts control set when rendering a <see cref="T:System.Web.UI.WebControls.WebParts.PageCatalogPart" /> control. The property is overridden only for the purpose of preventing it from appearing in Microsoft Visual Studio 2005 designer tools.</summary>
      <returns>A <see cref="T:System.Web.UI.WebControls.ContentDirection" /> that indicates the direction in which the content flows in a control.</returns>
    </member>
    <member name="P:System.Web.UI.WebControls.WebParts.PageCatalogPart.Enabled">
      <summary>This inherited property is not used by the Web Parts control set when rendering a <see cref="T:System.Web.UI.WebControls.WebParts.PageCatalogPart" /> control. The property is overridden only for the purpose of preventing it from appearing in Microsoft Visual Studio 2005 designer tools.</summary>
      <returns>A Boolean value that indicates whether a control is currently enabled or disabled.</returns>
    </member>
    <member name="P:System.Web.UI.WebControls.WebParts.PageCatalogPart.EnableTheming">
      <summary>This inherited property is not used by the Web Parts control set when rendering a <see cref="T:System.Web.UI.WebControls.WebParts.PageCatalogPart" /> control. The property is overridden only for the purpose of preventing it from appearing in Microsoft Visual Studio 2005 designer tools.</summary>
      <returns>A Boolean value that indicates whether themes can be used on a control.</returns>
      <exception cref="T:System.NotSupportedException">An attempt was made to set the property.</exception>
    </member>
    <member name="P:System.Web.UI.WebControls.WebParts.PageCatalogPart.Font">
      <summary>This inherited property is not used by the Web Parts control set when rendering a <see cref="T:System.Web.UI.WebControls.WebParts.PageCatalogPart" /> control. The property is overridden only for the purpose of preventing it from appearing in Microsoft Visual Studio 2005 designer tools.</summary>
      <returns>A <see cref="T:System.Web.UI.WebControls.FontInfo" /> that indicates the font used for a control's content.</returns>
    </member>
    <member name="P:System.Web.UI.WebControls.WebParts.PageCatalogPart.ForeColor">
      <summary>This inherited property is not used by the Web Parts control set when rendering a <see cref="T:System.Web.UI.WebControls.WebParts.PageCatalogPart" /> control. The property is overridden only for the purpose of preventing it from appearing in Microsoft Visual Studio 2005 designer tools.</summary>
      <returns>A <see cref="T:System.Drawing.Color" /> that determines the foreground color for a control.</returns>
    </member>
    <member name="M:System.Web.UI.WebControls.WebParts.PageCatalogPart.GetAvailableWebPartDescriptions">
      <summary>Returns a collection of descriptions of the available <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> controls in a catalog.</summary>
      <returns>A <see cref="T:System.Web.UI.WebControls.WebParts.WebPartDescriptionCollection" /> that contains a <see cref="T:System.Web.UI.WebControls.WebParts.WebPartDescription" /> for each closed <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> control in a page catalog.</returns>
    </member>
    <member name="M:System.Web.UI.WebControls.WebParts.PageCatalogPart.GetWebPart(System.Web.UI.WebControls.WebParts.WebPartDescription)">
      <summary>Returns a reference to a <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> control based on the value of the description passed into the method.</summary>
      <returns>A reference to the actual instance of a closed <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> control whose description matches <paramref name="description" />.</returns>
      <param name="description">A <see cref="T:System.Web.UI.WebControls.WebParts.WebPartDescription" /> that contains details about the control. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="description" /> is null.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="description" /> is not an available <see cref="T:System.Web.UI.WebControls.WebParts.WebPartDescription" /> value.</exception>
    </member>
    <member name="P:System.Web.UI.WebControls.WebParts.PageCatalogPart.GroupingText">
      <summary>This inherited property is not used by the Web Parts control set when rendering a <see cref="T:System.Web.UI.WebControls.WebParts.PageCatalogPart" /> control. The property is overridden only for the purpose of preventing it from appearing in Microsoft Visual Studio 2005 designer tools.</summary>
      <returns>A string that contains the text at the head of a section of grouped child controls within the control.</returns>
    </member>
    <member name="P:System.Web.UI.WebControls.WebParts.PageCatalogPart.Height">
      <summary>This inherited property is not used by the Web Parts control set when rendering a <see cref="T:System.Web.UI.WebControls.WebParts.PageCatalogPart" /> control. The property is overridden only for the purpose of preventing it from appearing in Microsoft Visual Studio 2005 designer tools.</summary>
      <returns>A <see cref="T:System.Web.UI.WebControls.Unit" /> value that indicates the height of the control.</returns>
    </member>
    <member name="P:System.Web.UI.WebControls.WebParts.PageCatalogPart.HorizontalAlign">
      <summary>This inherited property is not used by the Web Parts control set when rendering a <see cref="T:System.Web.UI.WebControls.WebParts.PageCatalogPart" /> control. The property is overridden only for the purpose of preventing it from appearing in Microsoft Visual Studio 2005 designer tools.</summary>
      <returns>A <see cref="T:System.Web.UI.WebControls.HorizontalAlign" /> that indicates the type of horizontal alignment used in rendering the control.</returns>
    </member>
    <member name="P:System.Web.UI.WebControls.WebParts.PageCatalogPart.ScrollBars">
      <summary>This inherited property is not used by the Web Parts control set when rendering a <see cref="T:System.Web.UI.WebControls.WebParts.PageCatalogPart" /> control. The property is overridden only for the purpose of preventing it from appearing in Microsoft Visual Studio 2005 designer tools.</summary>
      <returns>A <see cref="T:System.Web.UI.WebControls.ScrollBars" /> that is used if needed within the control.</returns>
    </member>
    <member name="P:System.Web.UI.WebControls.WebParts.PageCatalogPart.SkinID">
      <summary>This inherited property is not used by the Web Parts control set when rendering a <see cref="T:System.Web.UI.WebControls.WebParts.PageCatalogPart" /> control. The property is overridden only for the purpose of preventing it from appearing in Microsoft Visual Studio 2005 designer tools.</summary>
      <returns>A string that contains the ID of a skin for the control.</returns>
      <exception cref="T:System.NotSupportedException">An attempt was made to set the property.</exception>
    </member>
    <member name="P:System.Web.UI.WebControls.WebParts.PageCatalogPart.TabIndex">
      <summary>This inherited property is not used by the Web Parts control set when rendering a <see cref="T:System.Web.UI.WebControls.WebParts.PageCatalogPart" /> control. The property is overridden only for the purpose of preventing it from appearing in Microsoft Visual Studio 2005 designer tools.</summary>
      <returns>A short number that serves as the index of this control in the tab order.</returns>
    </member>
    <member name="P:System.Web.UI.WebControls.WebParts.PageCatalogPart.Title">
      <summary>Gets or sets the title that appears in the control's title bar.</summary>
      <returns>A string that is used as the title of the control. The default value is a calculated control name supplied by the Web Parts control set.</returns>
    </member>
    <member name="P:System.Web.UI.WebControls.WebParts.PageCatalogPart.ToolTip">
      <summary>This inherited property is not used by the Web Parts control set when rendering a <see cref="T:System.Web.UI.WebControls.WebParts.PageCatalogPart" /> control. The property is overridden only for the purpose of preventing it from appearing in Microsoft Visual Studio 2005 designer tools.</summary>
      <returns>A string that contains the content of a ToolTip.</returns>
    </member>
    <member name="P:System.Web.UI.WebControls.WebParts.PageCatalogPart.Visible">
      <summary>This inherited property is not used by the Web Parts control set when rendering a <see cref="T:System.Web.UI.WebControls.WebParts.PageCatalogPart" /> control. The property is overridden only for the purpose of preventing it from appearing in Microsoft Visual Studio 2005 designer tools.</summary>
      <returns>A Boolean value that indicates whether the control is visible.</returns>
    </member>
    <member name="P:System.Web.UI.WebControls.WebParts.PageCatalogPart.Width">
      <summary>This inherited property is not used by the Web Parts control set when rendering a <see cref="T:System.Web.UI.WebControls.WebParts.PageCatalogPart" /> control. The property is overridden only for the purpose of preventing it from appearing in Microsoft Visual Studio 2005 designer tools.</summary>
      <returns>A <see cref="T:System.Web.UI.WebControls.Unit" /> that indicates the width of the control.</returns>
    </member>
    <member name="P:System.Web.UI.WebControls.WebParts.PageCatalogPart.Wrap">
      <summary>This inherited property is not used by the Web Parts control set when rendering a <see cref="T:System.Web.UI.WebControls.WebParts.PageCatalogPart" /> control. The property is overridden only for the purpose of preventing it from appearing in Microsoft Visual Studio 2005 designer tools.</summary>
      <returns>A Boolean value that indicates whether long lines in the control can wrap.</returns>
    </member>
    <member name="T:System.Web.UI.WebControls.WebParts.ParametersCallback">
      <summary>References the method to call when retrieving row data from a provider.</summary>
      <param name="parametersData">The data to retrieve from the provider. </param>
    </member>
    <member name="T:System.Web.UI.WebControls.WebParts.Part">
      <summary>Serves as the base class for all Web Parts part controls, which render a modular user interface on a Web Forms page. </summary>
    </member>
    <member name="P:System.Web.UI.WebControls.WebParts.Part.ChromeState">
      <summary>Gets or sets whether a part control is in a minimized or normal state.</summary>
      <returns>One of the <see cref="T:System.Web.UI.WebControls.WebParts.PartChromeState" /> values. The default is <see cref="F:System.Web.UI.WebControls.WebParts.PartChromeState.Normal" />.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">The value specified is not one of the <see cref="T:System.Web.UI.WebControls.WebParts.PartChromeState" /> values. </exception>
    </member>
    <member name="P:System.Web.UI.WebControls.WebParts.Part.ChromeType">
      <summary>Gets or sets the type of border that frames a Web Parts control.</summary>
      <returns>One of the <see cref="T:System.Web.UI.WebControls.WebParts.PartChromeType" /> values. The default is <see cref="F:System.Web.UI.WebControls.WebParts.PartChromeType.Default" />.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">The value is not one of the <see cref="T:System.Web.UI.WebControls.WebParts.PartChromeType" /> values. </exception>
    </member>
    <member name="P:System.Web.UI.WebControls.WebParts.Part.Controls">
      <summary>Gets a <see cref="T:System.Web.UI.ControlCollection" /> object that contains the child controls for a specified server control in the user interface hierarchy.</summary>
      <returns>The collection of child controls for the specified server control.</returns>
    </member>
    <member name="M:System.Web.UI.WebControls.WebParts.Part.DataBind"></member>
    <member name="P:System.Web.UI.WebControls.WebParts.Part.Description">
      <summary>Gets or sets a brief phrase that summarizes what the part control does, for use in ToolTips and catalogs of part controls.</summary>
      <returns>A string that briefly summarizes the part control's functionality. The default value is an empty string ("").</returns>
    </member>
    <member name="M:System.Web.UI.WebControls.WebParts.Part.System#Web#UI#WebControls#ICompositeControlDesignerAccessor#RecreateChildControls">
      <summary>Allows the developer of a designer for a composite part control to recreate the control's child controls on the design surface.</summary>
    </member>
    <member name="P:System.Web.UI.WebControls.WebParts.Part.Title">
      <summary>Gets or sets the title of a part control.</summary>
      <returns>A string that represents the title of the part control. The default value is an empty string ("").</returns>
    </member>
    <member name="T:System.Web.UI.WebControls.WebParts.PartChromeState">
      <summary>Specifies whether a control and the border surrounding it are in a normal or minimized state. </summary>
    </member>
    <member name="F:System.Web.UI.WebControls.WebParts.PartChromeState.Normal">
      <summary>A control and border in a normal state.</summary>
    </member>
    <member name="F:System.Web.UI.WebControls.WebParts.PartChromeState.Minimized">
      <summary>A control and border in a collapsed or minimized state.</summary>
    </member>
    <member name="T:System.Web.UI.WebControls.WebParts.PartChromeType">
      <summary>Specifies the kind of border that surrounds a Web Parts control.</summary>
    </member>
    <member name="F:System.Web.UI.WebControls.WebParts.PartChromeType.Default">
      <summary>A border setting inherited from the part control's containing zone.</summary>
    </member>
    <member name="F:System.Web.UI.WebControls.WebParts.PartChromeType.TitleAndBorder">
      <summary>A title bar and a border.</summary>
    </member>
    <member name="F:System.Web.UI.WebControls.WebParts.PartChromeType.None">
      <summary>No border and no title bar.</summary>
    </member>
    <member name="F:System.Web.UI.WebControls.WebParts.PartChromeType.TitleOnly">
      <summary>A title bar only, without a border.</summary>
    </member>
    <member name="F:System.Web.UI.WebControls.WebParts.PartChromeType.BorderOnly">
      <summary>A border only, without a title bar.</summary>
    </member>
    <member name="T:System.Web.UI.WebControls.WebParts.PersonalizableAttribute">
      <summary>Represents the personalization attribute. This class cannot be inherited.</summary>
      <exception cref="T:System.Web.HttpException">The property is a read-only or write-only public property.- or -The property is a private or protected read/write property.- or -The property has index parameters.</exception>
    </member>
    <member name="M:System.Web.UI.WebControls.WebParts.PersonalizableAttribute.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Web.UI.WebControls.WebParts.PersonalizableAttribute" /> class. </summary>
    </member>
    <member name="M:System.Web.UI.WebControls.WebParts.PersonalizableAttribute.#ctor(System.Boolean)">
      <summary>Initializes a new instance of the <see cref="T:System.Web.UI.WebControls.WebParts.PersonalizableAttribute" /> class using the provided parameter.</summary>
      <param name="isPersonalizable">A Boolean value indicating whether the property can be personalized.</param>
    </member>
    <member name="M:System.Web.UI.WebControls.WebParts.PersonalizableAttribute.#ctor(System.Web.UI.WebControls.WebParts.PersonalizationScope)">
      <summary>Initializes a new instance of the <see cref="T:System.Web.UI.WebControls.WebParts.PersonalizableAttribute" /> class using the provided parameter.</summary>
      <param name="scope">A <see cref="T:System.Web.UI.WebControls.WebParts.PersonalizationScope" /> indicating the scope of the personalization.</param>
    </member>
    <member name="M:System.Web.UI.WebControls.WebParts.PersonalizableAttribute.#ctor(System.Web.UI.WebControls.WebParts.PersonalizationScope,System.Boolean)">
      <summary>Initializes a new instance of the <see cref="T:System.Web.UI.WebControls.WebParts.PersonalizableAttribute" /> class using the provided parameters.</summary>
      <param name="scope">A <see cref="T:System.Web.UI.WebControls.WebParts.PersonalizationScope" /> indicating the scope of the personalization.</param>
      <param name="isSensitive">A Boolean value indicating whether the property information is considered sensitive.</param>
    </member>
    <member name="F:System.Web.UI.WebControls.WebParts.PersonalizableAttribute.Default">
      <summary>Returns an attribute instance that indicates no support for personalization. This field is read-only.</summary>
    </member>
    <member name="M:System.Web.UI.WebControls.WebParts.PersonalizableAttribute.Equals(System.Object)">
      <summary>When overridden, returns a Boolean evaluation of the current instance of <see cref="T:System.Web.UI.WebControls.WebParts.PersonalizableAttribute" /> and another <see cref="T:System.Web.UI.WebControls.WebParts.PersonalizableAttribute" /> instance supplied as a parameter.</summary>
      <returns>true if the values are equal; otherwise, false.</returns>
      <param name="obj">The <see cref="T:System.Web.UI.WebControls.WebParts.PersonalizableAttribute" /> to be compared to the current instance.</param>
    </member>
    <member name="M:System.Web.UI.WebControls.WebParts.PersonalizableAttribute.GetHashCode">
      <summary>When overridden, returns a hash code of the attribute.</summary>
      <returns>A hash code in the form of an integer.</returns>
    </member>
    <member name="M:System.Web.UI.WebControls.WebParts.PersonalizableAttribute.GetPersonalizableProperties(System.Type)">
      <summary>Returns a collection of <see cref="T:System.Reflection.PropertyInfo" /> objects for the properties that match the parameter type and are marked as personalizable.</summary>
      <returns>An <see cref="T:System.Collections.ICollection" /> of personalizable properties.</returns>
      <param name="type">The type on which to look for Personalizable properties.</param>
      <exception cref="T:System.Web.HttpException">A public property on the type is marked as personalizable but is read-only.</exception>
    </member>
    <member name="M:System.Web.UI.WebControls.WebParts.PersonalizableAttribute.IsDefaultAttribute">
      <summary>When overridden, returns a value that indicates whether the attribute instance equals the value of the static <see cref="F:System.Web.UI.WebControls.WebParts.PersonalizableAttribute.Default" /> field.</summary>
      <returns>true if the attribute instance equals the static <see cref="F:System.Web.UI.WebControls.WebParts.PersonalizableAttribute.Default" /> field; otherwise, false.</returns>
    </member>
    <member name="P:System.Web.UI.WebControls.WebParts.PersonalizableAttribute.IsPersonalizable">
      <summary>Gets the setting that indicates whether the attribute can be personalized, as established by one of the constructors.</summary>
      <returns>true if the property can be personalized; otherwise, false.</returns>
    </member>
    <member name="P:System.Web.UI.WebControls.WebParts.PersonalizableAttribute.IsSensitive">
      <summary>Gets the setting that indicates whether the attribute is sensitive, as established by one of the constructors.</summary>
      <returns>true if the property is sensitive; otherwise, false.</returns>
    </member>
    <member name="M:System.Web.UI.WebControls.WebParts.PersonalizableAttribute.Match(System.Object)">
      <summary>Returns a value that indicates whether the current instance of <see cref="T:System.Web.UI.WebControls.WebParts.PersonalizableAttribute" /> and the specified <see cref="T:System.Web.UI.WebControls.WebParts.PersonalizableAttribute" /> have the same <see cref="P:System.Web.UI.WebControls.WebParts.PersonalizableAttribute.IsPersonalizable" /> property value.</summary>
      <returns>true if the two attributes have the same <see cref="P:System.Web.UI.WebControls.WebParts.PersonalizableAttribute.IsPersonalizable" /> value; otherwise, false.</returns>
      <param name="obj">The <see cref="T:System.Web.UI.WebControls.WebParts.PersonalizableAttribute" /> to be compared to the current instance.</param>
    </member>
    <member name="F:System.Web.UI.WebControls.WebParts.PersonalizableAttribute.NotPersonalizable">
      <summary>Returns an attribute instance that indicates no support for personalization. This field is read-only.</summary>
    </member>
    <member name="F:System.Web.UI.WebControls.WebParts.PersonalizableAttribute.Personalizable">
      <summary>Returns an attribute instance that indicates support for personalization. This field is read-only.</summary>
    </member>
    <member name="P:System.Web.UI.WebControls.WebParts.PersonalizableAttribute.Scope">
      <summary>Gets the <see cref="T:System.Web.UI.WebControls.WebParts.PersonalizationScope" /> enumeration value for the class instance, as set by one of the constructors.</summary>
      <returns>A <see cref="T:System.Web.UI.WebControls.WebParts.PersonalizationScope" /> enumeration value.</returns>
    </member>
    <member name="F:System.Web.UI.WebControls.WebParts.PersonalizableAttribute.SharedPersonalizable">
      <summary>Returns an attribute instance that indicates support for personalization with a shared scope. This field is read-only.</summary>
    </member>
    <member name="F:System.Web.UI.WebControls.WebParts.PersonalizableAttribute.UserPersonalizable">
      <summary>Returns an attribute instance that indicates support for personalization in <see cref="F:System.Web.UI.WebControls.WebParts.PersonalizationScope.User" /> scope. This field is read-only.</summary>
    </member>
    <member name="T:System.Web.UI.WebControls.WebParts.PersonalizationAdministration">
      <summary>Implements management and administrative functionality for Web Parts personalization. This class cannot be inherited. </summary>
    </member>
    <member name="P:System.Web.UI.WebControls.WebParts.PersonalizationAdministration.ApplicationName">
      <summary>Gets or sets the name of the application specified by the provider.</summary>
      <returns>The application name. </returns>
      <exception cref="T:System.ArgumentException">The provider for a personalization provider defined in configuration is not of the correct type.</exception>
      <exception cref="T:System.Configuration.ConfigurationErrorsException">A configuration exception occurred while attempting to create and initialize an instance of one of the configured personalization providers.- or -The default personalization provider defined in configuration could not be found.</exception>
    </member>
    <member name="M:System.Web.UI.WebControls.WebParts.PersonalizationAdministration.FindInactiveUserState(System.String,System.String,System.DateTime)">
      <summary>Returns a collection of per-user personalization state information for inactive users, based on the specified parameters.</summary>
      <returns>A <see cref="T:System.Web.UI.WebControls.WebParts.PersonalizationStateInfoCollection" /> that contains per-user personalization state information.</returns>
      <param name="pathToMatch">The path of the page to match.</param>
      <param name="usernameToMatch">The user name to match that has personalization data associated with the page.</param>
      <param name="userInactiveSinceDate">The last date a user's personalization information was accessed.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="pathToMatch" /> or <paramref name="usernameToMatch" /> before or after trimming is an empty string ("").- or -The provider for a personalization provider defined in configuration is not of the correct type.- or - The length of the string of any parameter is greater than 256 characters.</exception>
      <exception cref="T:System.Configuration.ConfigurationErrorsException">A configuration exception occurred while attempting to create and initialize an instance of one of the configured personalization providers.- or -The default personalization provider defined in configuration could not be found.</exception>
    </member>
    <member name="M:System.Web.UI.WebControls.WebParts.PersonalizationAdministration.FindInactiveUserState(System.String,System.String,System.DateTime,System.Int32,System.Int32,System.Int32@)">
      <summary>Returns a collection of per-user personalization state information for inactive users, based on the specified parameters.</summary>
      <returns>A <see cref="T:System.Web.UI.WebControls.WebParts.PersonalizationStateInfoCollection" /> that contains per-user personalization state information.</returns>
      <param name="pathToMatch">The path of the page to match.</param>
      <param name="usernameToMatch">The user name to match that has personalization data associated with the page.</param>
      <param name="userInactiveSinceDate">The last date personalization information was accessed.</param>
      <param name="pageIndex">The zero-based index of the page of results to return. </param>
      <param name="pageSize">The number of records to return.</param>
      <param name="totalRecords">The total number of records available.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="pathToMatch" /> or <paramref name="usernameToMatch" /> before or after trimming is an empty string ("").- or -<paramref name="pageIndex" /> is less than zero- or -<paramref name="pageSize" /> is less than or equal to zero.- or -the combination of <paramref name="pageIndex" /> and <paramref name="pageSize" /> exceeds <see cref="F:System.Int32.MaxValue" />.- or -The provider for a personalization provider defined in configuration is not of the correct type.- or -The length of the string of any parameter is greater than 256 characters.</exception>
      <exception cref="T:System.Configuration.ConfigurationErrorsException">A configuration exception occurred while attempting to create and initialize an instance of one of the configured personalization providers.- or -The default personalization provider defined in configuration could not be found.</exception>
    </member>
    <member name="M:System.Web.UI.WebControls.WebParts.PersonalizationAdministration.FindSharedState(System.String)">
      <summary>Returns a collection of shared personalization state information based on the specified path.</summary>
      <returns>A <see cref="T:System.Web.UI.WebControls.WebParts.PersonalizationStateInfoCollection" /> that contains shared personalization state information.</returns>
      <param name="pathToMatch">The path of the page to match.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="pathToMatch" /> is an empty string ("") either before or after trimming.- or -The provider for a personalization provider defined in configuration is not of the correct type.- or -The length of the string of any parameter is greater than 256 characters.</exception>
      <exception cref="T:System.Configuration.ConfigurationErrorsException">A configuration exception occurred while attempting to create and initialize an instance of one of the configured personalization providers.- or -The default personalization provider defined in configuration could not be found.</exception>
    </member>
    <member name="M:System.Web.UI.WebControls.WebParts.PersonalizationAdministration.FindSharedState(System.String,System.Int32,System.Int32,System.Int32@)">
      <summary>Returns a collection of shared personalization state information based on the specified parameters.</summary>
      <returns>A <see cref="T:System.Web.UI.WebControls.WebParts.PersonalizationStateInfoCollection" /> that contains shared personalization state information.</returns>
      <param name="pathToMatch">The path of the page to match.</param>
      <param name="pageIndex">The zero-based index of the page of results to return. </param>
      <param name="pageSize">The number of records to return.</param>
      <param name="totalRecords">The total number of records available.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="pathToMatch" /> before or after trimming is an empty string ("").- or -<paramref name="pageIndex" /> is less than zero.- or -<paramref name="pageSize" /> is less than or equal to zero.- or -The combination of <paramref name="pageIndex" /> and <paramref name="pageSize" /> exceeds <see cref="F:System.Int32.MaxValue" />.- or -The provider for a personalization provider defined in configuration is not of the correct type.- or - The length of the string of any parameter is greater than 256 characters.</exception>
      <exception cref="T:System.Configuration.ConfigurationErrorsException">A configuration exception occurred while attempting to create and initialize an instance of one of the configured personalization providers.- or -The default personalization provider defined in configuration could not be found.</exception>
    </member>
    <member name="M:System.Web.UI.WebControls.WebParts.PersonalizationAdministration.FindUserState(System.String,System.String)">
      <summary>Returns a collection of per-user personalization state information based on the user name and page path.</summary>
      <returns>A <see cref="T:System.Web.UI.WebControls.WebParts.PersonalizationStateInfoCollection" /> that contains per-user personalization state information.</returns>
      <param name="pathToMatch">The path of the page to match.</param>
      <param name="usernameToMatch">The user name to match that has personalization data associated with the page.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="pathToMatch" /> or <paramref name="usernameToMatch" /> before or after trimming is an empty string ("").- or -The provider for a personalization provider defined in configuration is not of the correct type.- or -The length of the string of any parameter is greater than 256 characters.</exception>
      <exception cref="T:System.Configuration.ConfigurationErrorsException">A configuration exception occurred while attempting to create and initialize an instance of one of the configured personalization providers.- or -The default personalization provider defined in configuration could not be found.</exception>
    </member>
    <member name="M:System.Web.UI.WebControls.WebParts.PersonalizationAdministration.FindUserState(System.String,System.String,System.Int32,System.Int32,System.Int32@)">
      <summary>Returns a collection of per-user personalization state information based on the specified parameters.</summary>
      <returns>A <see cref="T:System.Web.UI.WebControls.WebParts.PersonalizationStateInfoCollection" /> that contains per-user personalization state information.</returns>
      <param name="pathToMatch">The path of the page to match.</param>
      <param name="usernameToMatch">The user name to match that has personalization data associated with the page.</param>
      <param name="pageIndex">The zero-based index of the page of results to return. </param>
      <param name="pageSize">The number of records to return.</param>
      <param name="totalRecords">The total number or records available.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="pathToMatch" /> or <paramref name="usernameToMatch" /> before or after trimming is an empty string ("").- or -<paramref name="pageIndex" /> is less than zero.- or -<paramref name="pageSize" /> is less than or equal to zero.-or-The combination of <paramref name="pageIndex" /> and <paramref name="pageSize" /> exceeds <see cref="F:System.Int32.MaxValue" />.- or - The provider for a personalization provider defined in configuration is not of the correct type.- or -The length of the string of any parameter is greater than 256 characters.</exception>
      <exception cref="T:System.Configuration.ConfigurationErrorsException">A configuration exception occurred while attempting to create and initialize an instance of one of the configured personalization providers.- or -The default personalization provider defined in configuration could not be found.</exception>
    </member>
    <member name="M:System.Web.UI.WebControls.WebParts.PersonalizationAdministration.GetAllInactiveUserState(System.DateTime)">
      <summary>Returns a collection of all per-user personalization state information associated with inactive users, based on the specified date.</summary>
      <returns>A collection of <see cref="T:System.Web.UI.WebControls.WebParts.UserPersonalizationStateInfo" /> instances.</returns>
      <param name="userInactiveSinceDate">The last date a user's personalization information was accessed.</param>
      <exception cref="T:System.ArgumentException">The provider for a personalization provider defined in configuration is not of the correct type.</exception>
      <exception cref="T:System.Configuration.ConfigurationErrorsException">A configuration exception occurred while attempting to create and initialize an instance of one of the configured personalization providers.- or -The default personalization provider defined in configuration could not be found.</exception>
    </member>
    <member name="M:System.Web.UI.WebControls.WebParts.PersonalizationAdministration.GetAllInactiveUserState(System.DateTime,System.Int32,System.Int32,System.Int32@)">
      <summary>Returns a subset of all per-user personalization state information associated with inactive users, based on the specified parameters.</summary>
      <returns>A collection of <see cref="T:System.Web.UI.WebControls.WebParts.UserPersonalizationStateInfo" /> instances.</returns>
      <param name="userInactiveSinceDate">The last date a user's personalization information was accessed.</param>
      <param name="pageIndex">The zero-based index of the page of results to return. </param>
      <param name="pageSize">The number of records to return.</param>
      <param name="totalRecords">The total number of records available.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="pageIndex" /> is less than zero.- or -<paramref name="pageSize" /> is less than or equal to zero.- or -The combination of <paramref name="pageIndex" /> and <paramref name="pageSize" /> exceeds <see cref="F:System.Int32.MaxValue" />.- or -The provider for a personalization provider defined in configuration is not of the correct type.</exception>
      <exception cref="T:System.Configuration.ConfigurationErrorsException">A configuration exception occurred while attempting to create and initialize an instance of one of the configured personalization providers.- or -The default personalization provider defined in configuration could not be found.</exception>
    </member>
    <member name="M:System.Web.UI.WebControls.WebParts.PersonalizationAdministration.GetAllState(System.Web.UI.WebControls.WebParts.PersonalizationScope)">
      <summary>Returns a collection of all personalization state information from the underlying data store for the requested personalization scope.</summary>
      <returns>A <see cref="T:System.Web.UI.WebControls.WebParts.PersonalizationStateInfoCollection" /> containing state information for the specified scope.</returns>
      <param name="scope">The scope of the personalization information to be retrieved.</param>
      <exception cref="T:System.ArgumentException">The provider for a personalization provider defined in configuration is not of the correct type.</exception>
      <exception cref="T:System.Configuration.ConfigurationErrorsException">A configuration exception occurred while attempting to create and initialize an instance of one of the configured personalization providers.- or -The default personalization provider defined in configuration could not be found.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="scope" /> is not a valid member of the <see cref="T:System.Web.UI.WebControls.WebParts.PersonalizationScope" /> enumeration.</exception>
    </member>
    <member name="M:System.Web.UI.WebControls.WebParts.PersonalizationAdministration.GetAllState(System.Web.UI.WebControls.WebParts.PersonalizationScope,System.Int32,System.Int32,System.Int32@)">
      <summary>Returns a subset of all personalization state information from the underlying data store, based on the specified parameters.</summary>
      <returns>A <see cref="T:System.Web.UI.WebControls.WebParts.PersonalizationStateInfoCollection" /> containing state information for the specified scope and parameters.</returns>
      <param name="scope">The scope of the personalization information to be retrieved.</param>
      <param name="pageIndex">The zero-based index of the page of results to return. </param>
      <param name="pageSize">The number of records to return.</param>
      <param name="totalRecords">The total number of records available.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="pageIndex" /> is less than zero.- or -<paramref name="pageSize" /> is less than or equal to zero.- or -The provider for a personalization provider defined in configuration is not of the correct type.- or - The combination of <paramref name="pageIndex" /> and <paramref name="pageSize" /> exceeds <see cref="F:System.Int32.MaxValue" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="scope" /> is not a valid member of the <see cref="T:System.Web.UI.WebControls.WebParts.PersonalizationScope" /> enumeration.</exception>
      <exception cref="T:System.Configuration.ConfigurationErrorsException">A configuration exception occurred while attempting to create and initialize an instance of one of the configured personalization providers.- or -The default personalization provider defined in configuration could not be found.</exception>
    </member>
    <member name="M:System.Web.UI.WebControls.WebParts.PersonalizationAdministration.GetCountOfInactiveUserState(System.DateTime)">
      <summary>Returns a count of the per-user personalization items in the underlying data store for inactive users, based on the parameter specified.</summary>
      <returns>The number of personalization items for inactive users.</returns>
      <param name="userInactiveSinceDate">The last date a user's personalization information was accessed.</param>
      <exception cref="T:System.ArgumentException">The provider for a personalization provider defined in configuration is not of the correct type.- or - The length of the string of any parameter is greater than 256 characters.</exception>
      <exception cref="T:System.Configuration.ConfigurationErrorsException">A configuration exception occurred while attempting to create and initialize an instance of one of the configured personalization providers.- or -The default personalization provider defined in configuration could not be found.</exception>
      <exception cref="T:System.Web.HttpException">The default provider returned a negative number for the count.</exception>
    </member>
    <member name="M:System.Web.UI.WebControls.WebParts.PersonalizationAdministration.GetCountOfInactiveUserState(System.String,System.DateTime)">
      <summary>Returns a count of the per-user personalization items in the underlying data store for inactive users, based on the specified parameters.</summary>
      <returns>The count of the per-user personalization items in the underlying data store for inactive users.</returns>
      <param name="pathToMatch">The path to the page with personalization state items to retrieve.</param>
      <param name="userInactiveSinceDate">The last date a user's personalization information was accessed.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="pathToMatch" />, after trimming, is an empty string ("").- or -The provider for a personalization provider defined in configuration is not of the correct type.- or - The length of the string of any parameter is greater than 256 characters.</exception>
      <exception cref="T:System.Configuration.ConfigurationErrorsException">A configuration exception occurred while attempting to create and initialize an instance of one of the configured personalization providers.- or -The default personalization provider defined in configuration could not be found.</exception>
      <exception cref="T:System.Web.HttpException">The default provider returned a negative number for the count.</exception>
    </member>
    <member name="M:System.Web.UI.WebControls.WebParts.PersonalizationAdministration.GetCountOfState(System.Web.UI.WebControls.WebParts.PersonalizationScope)">
      <summary>Returns a count of the personalization state items in the underlying data store that exist for the specified scope.</summary>
      <returns>The number of personalization state items for the specified scope.</returns>
      <param name="scope">The scope of the personalization state items to retrieve.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="scope" /> is not a valid member of the <see cref="T:System.Web.UI.WebControls.WebParts.PersonalizationScope" /> enumeration.</exception>
      <exception cref="T:System.ArgumentException">The provider for a personalization provider defined in configuration is not of the correct type.- or - The length of the string of any parameter is greater than 256 characters.</exception>
      <exception cref="T:System.Configuration.ConfigurationErrorsException">A configuration exception occurred while attempting to create and initialize an instance of one of the configured personalization providers.- or -The default personalization provider defined in configuration could not be found.</exception>
      <exception cref="T:System.Web.HttpException">The default provider returned a negative number for the count.</exception>
    </member>
    <member name="M:System.Web.UI.WebControls.WebParts.PersonalizationAdministration.GetCountOfState(System.Web.UI.WebControls.WebParts.PersonalizationScope,System.String)">
      <summary>Returns a count of the personalization state items in the underlying data store that exist for the specified parameters.</summary>
      <returns>The number of personalization state items for the specified scope.</returns>
      <param name="scope">The scope of the personalization state items to retrieve.</param>
      <param name="pathToMatch">The path to the page with personalization state items to retrieve.</param>
      <exception cref="T:System.ArgumentException">The provider for a personalization provider defined in configuration is not of the correct type.- or -<paramref name="pathToMatch" />, after trimming, is an empty string ("").- or - The length of the string of any parameter is greater than 256 characters.</exception>
      <exception cref="T:System.Configuration.ConfigurationErrorsException">A configuration exception occurred while attempting to create and initialize an instance of one of the configured personalization providers.- or -The default personalization provider defined in configuration could not be found.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="scope" /> is not a valid member of the <see cref="T:System.Web.UI.WebControls.WebParts.PersonalizationScope" /> enumeration.</exception>
      <exception cref="T:System.Web.HttpException">The default provider returned a negative number for the count.</exception>
    </member>
    <member name="M:System.Web.UI.WebControls.WebParts.PersonalizationAdministration.GetCountOfUserState(System.String)">
      <summary>Returns a count of the personalization state items in the underlying data store that exist for the specified user.</summary>
      <returns>The number of personalization state items for the specified user.</returns>
      <param name="usernameToMatch">The user name associated with the personalization state information to retrieve.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="usernameToMatch" /> is an empty string ("") after trimming.- or -The provider for a personalization provider defined in configuration is not of the correct type.- or - The length of the string of any parameter is greater than 256 characters.</exception>
      <exception cref="T:System.Configuration.ConfigurationErrorsException">A configuration exception occurred while attempting to create and initialize an instance of one of the configured personalization providers.- or -The default personalization provider defined in configuration could not be found.</exception>
      <exception cref="T:System.Web.HttpException">The default provider returned a negative number for the count.</exception>
    </member>
    <member name="P:System.Web.UI.WebControls.WebParts.PersonalizationAdministration.Provider">
      <summary>Returns an instance of the default personalization provider.</summary>
      <returns>A <see cref="T:System.Web.UI.WebControls.WebParts.PersonalizationProvider" /> of the default provider.</returns>
      <exception cref="T:System.ArgumentException">The provider for a personalization provider defined in configuration is not of the correct type.</exception>
      <exception cref="T:System.Configuration.ConfigurationErrorsException">A configuration exception occurred while attempting to create and initialize an instance of one of the configured personalization providers.- or -The default personalization provider defined in configuration could not be found.</exception>
    </member>
    <member name="P:System.Web.UI.WebControls.WebParts.PersonalizationAdministration.Providers">
      <summary>Returns a collection of personalization providers indexed by name.</summary>
      <returns>A read-only <see cref="T:System.Web.UI.WebControls.WebParts.PersonalizationProviderCollection" /> that contains the personalization providers available to the application.</returns>
      <exception cref="T:System.ArgumentException">The provider for a personalization provider defined in configuration is not of the correct type.</exception>
      <exception cref="T:System.Configuration.ConfigurationErrorsException">A configuration exception occurred while attempting to create and initialize an instance of one of the configured personalization providers.- or -The default personalization provider defined in configuration could not be found.</exception>
    </member>
    <member name="M:System.Web.UI.WebControls.WebParts.PersonalizationAdministration.ResetAllState(System.Web.UI.WebControls.WebParts.PersonalizationScope)">
      <summary>Resets all personalization data in the underlying data store by deleting all rows associated with the specified scope.</summary>
      <returns>The number of items that were reset.</returns>
      <param name="scope">The scope associated with the personalization data to be deleted.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="scope" /> is not a valid member of the <see cref="T:System.Web.UI.WebControls.WebParts.PersonalizationScope" /> enumeration.</exception>
      <exception cref="T:System.ArgumentException">The provider for a personalization provider defined in configuration is not of the correct type.</exception>
      <exception cref="T:System.Configuration.ConfigurationErrorsException">A configuration exception occurred while attempting to create and initialize an instance of one of the configured personalization providers.- or -The default personalization provider defined in configuration could not be found.</exception>
      <exception cref="T:System.Web.HttpException">The default provider returned a negative number for the count of affected rows.</exception>
    </member>
    <member name="M:System.Web.UI.WebControls.WebParts.PersonalizationAdministration.ResetInactiveUserState(System.DateTime)">
      <summary>Resets all per-user personalization state information in the underlying data store, based on the specified parameter.</summary>
      <returns>The number of rows in the underlying data store that were reset.</returns>
      <param name="userInactiveSinceDate">The last date a user's personalization information was accessed.</param>
      <exception cref="T:System.ArgumentException">The provider for a personalization provider defined in configuration is not of the correct type.- or - The length of the string of any parameter is greater than 256 characters.</exception>
      <exception cref="T:System.Configuration.ConfigurationErrorsException">A configuration exception occurred while attempting to create and initialize an instance of one of the configured personalization providers.- or -The default personalization provider defined in configuration could not be found.</exception>
      <exception cref="T:System.Web.HttpException">The default provider returned a negative number for the count.</exception>
    </member>
    <member name="M:System.Web.UI.WebControls.WebParts.PersonalizationAdministration.ResetInactiveUserState(System.String,System.DateTime)">
      <summary>Resets all per-user state information in the underlying data store for inactive users, based on the specified parameters.</summary>
      <returns>The number of rows in the underlying data store that were reset.</returns>
      <param name="path">The path to the page associated with the personalization state information to be reset.</param>
      <param name="userInactiveSinceDate">The last active date to be used in resetting user state personalization items.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="path" /> is null.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="path" /> is an empty string ("") after trimming.- or -The provider for a personalization provider defined in configuration is not of the correct type.- or - The length of the string of any parameter is greater than 256 characters.</exception>
      <exception cref="T:System.Configuration.ConfigurationErrorsException">A configuration exception occurred while attempting to create and initialize an instance of one of the configured personalization providers.- or -The default personalization provider defined in configuration could not be found.</exception>
      <exception cref="T:System.Web.HttpException">The default provider returned a negative number for the count.</exception>
    </member>
    <member name="M:System.Web.UI.WebControls.WebParts.PersonalizationAdministration.ResetSharedState(System.String)">
      <summary>Resets shared state in the underlying data store for the specified path.</summary>
      <returns>true if personalization shared state was reset; otherwise, false.</returns>
      <param name="path">The path to the page associated with the personalization state information to be reset.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="path" /> is null.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="path" /> is an empty string ("") after trimming.- or -The provider for a personalization provider defined in configuration is not of the correct type.- or - The length of the string of any parameter is greater than 256 characters.</exception>
      <exception cref="T:System.Configuration.ConfigurationErrorsException">A configuration exception occurred while attempting to create and initialize an instance of one of the configured personalization providers.- or -The default personalization provider defined in configuration could not be found.</exception>
      <exception cref="T:System.Web.HttpException">The default provider indicated that the number of deleted rows was either a negative number or was greater than one.</exception>
    </member>
    <member name="M:System.Web.UI.WebControls.WebParts.PersonalizationAdministration.ResetSharedState(System.String[])">
      <summary>Resets shared state in the underlying data store for the specified paths.</summary>
      <returns>The number of rows that were reset.</returns>
      <param name="paths">The paths to the pages associated with the personalization state information to be reset.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="paths" /> is null.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="paths" /> is a zero-length array.- or -A member of <paramref name="paths" /> is either null or an empty string ("") after trimming.- or -The provider for a personalization provider defined in configuration is not of the correct type.- or - The length of the string of any parameter is greater than 256 characters.</exception>
      <exception cref="T:System.Configuration.ConfigurationErrorsException">A configuration exception occurred while attempting to create and initialize an instance of one of the configured personalization providers.- or -The default personalization provider defined in configuration could not be found.</exception>
      <exception cref="T:System.Web.HttpException">The default provider indicated that the number of deleted rows was a negative number.</exception>
    </member>
    <member name="M:System.Web.UI.WebControls.WebParts.PersonalizationAdministration.ResetState(System.Web.UI.WebControls.WebParts.PersonalizationStateInfoCollection)">
      <summary>Resets personalization data in the underlying data store, based on the items contained in the collection.</summary>
      <returns>The number of rows that were reset.</returns>
      <param name="data">A collection of <see cref="T:System.Web.UI.WebControls.WebParts.PersonalizationStateInfo" /> objects indicating what data should be reset.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="data" /> is null.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="data" /> is an empty collection.- or -An element of the collection is null.- or -The path value of a <see cref="T:System.Web.UI.WebControls.WebParts.UserPersonalizationStateInfo" /> instance in the collection is null or an empty string ("").- or -The <paramref name="user" /> value of a <see cref="T:System.Web.UI.WebControls.WebParts.UserPersonalizationStateInfo" /> instance in the collection is null, an empty string, or contains commas.- or -The provider for a personalization provider defined in configuration is not of the correct type.- or - The length of the string of any parameter is greater than 256 characters.</exception>
      <exception cref="T:System.Configuration.ConfigurationErrorsException">A configuration exception occurred while attempting to create and initialize an instance of one of the configured personalization providers.- or -The default personalization provider defined in configuration could not be found.</exception>
      <exception cref="T:System.Web.HttpException">The default provider indicated that the number of deleted rows was a negative number.</exception>
    </member>
    <member name="M:System.Web.UI.WebControls.WebParts.PersonalizationAdministration.ResetUserState(System.String)">
      <summary>Resets all per-user state in the underlying data store for the specified path.</summary>
      <returns>The number of rows that were reset.</returns>
      <param name="path">The path to the page associated with the personalization state information to be reset.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="path" /> is null.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="path" /> is an empty string ("").- or -The provider for a personalization provider defined in configuration is not of the correct type.- or -The length of the string of any parameter is greater than 256 characters.</exception>
      <exception cref="T:System.Configuration.ConfigurationErrorsException">A configuration exception occurred while attempting to create and initialize an instance of one of the configured personalization providers.- or -The default personalization provider defined in configuration could not be found.</exception>
      <exception cref="T:System.Web.HttpException">The default provider indicated that the number of deleted rows was a negative number.</exception>
    </member>
    <member name="M:System.Web.UI.WebControls.WebParts.PersonalizationAdministration.ResetUserState(System.String,System.String)">
      <summary>Resets per-user state in the underlying data store for the specified combination of user name and path.</summary>
      <returns>The number of rows that were reset.</returns>
      <param name="path">The path to the page associated with the personalization state information to be reset.</param>
      <param name="username">The user name associated with the personalization data to be reset.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="path" /> or <paramref name="username" /> is null.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="path" /> or <paramref name="username" /> is an empty string ("") after trimming.- or -<paramref name="username" /> contains commas.- or -The provider for a personalization provider defined in configuration is not of the correct type.- or - The length of the string of any parameter is greater than 256 characters.</exception>
      <exception cref="T:System.Configuration.ConfigurationErrorsException">A configuration exception occurred while attempting to create and initialize an instance of one of the configured personalization providers.- or -The default personalization provider defined in configuration could not be found.</exception>
      <exception cref="T:System.Web.HttpException">The default provider indicated that the number of deleted rows was a negative number.</exception>
    </member>
    <member name="M:System.Web.UI.WebControls.WebParts.PersonalizationAdministration.ResetUserState(System.String,System.String[])">
      <summary>Resets per-user state in the underlying data store for the page and users specified.</summary>
      <returns>The number of rows that were reset.</returns>
      <param name="path">The path to the page associated with the personalization state information to be reset.</param>
      <param name="usernames">The user names associated with the personalization data to be reset.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="path" /> or <paramref name="usernames" /> is null.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="path" /> is an empty string ("") after trimming.- or -A member of <paramref name="usernames" /> is null, an empty string after trimming, or contains commas.- or -<paramref name="usernames" /> is a zero-length array.- or -The provider for a personalization provider defined in configuration is not of the correct type.- or -The length of the string of any parameter is greater than 256 characters.</exception>
      <exception cref="T:System.Configuration.ConfigurationErrorsException">A configuration exception occurred while attempting to create and initialize an instance of one of the configured personalization providers.- or -The default personalization provider defined in configuration could not be found.</exception>
      <exception cref="T:System.Web.HttpException">The default provider indicated that the number of deleted rows was a negative number.</exception>
    </member>
    <member name="M:System.Web.UI.WebControls.WebParts.PersonalizationAdministration.ResetUserState(System.String[])">
      <summary>Resets all per-user state in the underlying data store for the specified paths.</summary>
      <returns>The number of rows that were reset.</returns>
      <param name="usernames">An array of user names whose per-user data should be reset.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="usernames" /> is null.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="usernames" /> is a zero-length array.- or -A member of <paramref name="usernames" /> is either null, contains commas, or is an empty string ("") after trimming.- or -The provider for a personalization provider defined in configuration is not of the correct type.- or -The length of the string of any parameter is greater than 256 characters.</exception>
      <exception cref="T:System.Configuration.ConfigurationErrorsException">A configuration exception occurred while attempting to create and initialize an instance of one of the configured personalization providers.- or -The default personalization provider defined in configuration could not be found.</exception>
      <exception cref="T:System.Web.HttpException">The default provider indicated that the number of deleted rows was a negative number.</exception>
    </member>
    <member name="T:System.Web.UI.WebControls.WebParts.PersonalizationDictionary">
      <summary>Encapsulates basic validation rules that indicate whether a piece of custom data is considered personalizable in either <see cref="F:System.Web.UI.WebControls.WebParts.PersonalizationScope.User" /> or <see cref="F:System.Web.UI.WebControls.WebParts.PersonalizationScope.Shared" /> scope.</summary>
    </member>
    <member name="M:System.Web.UI.WebControls.WebParts.PersonalizationDictionary.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Web.UI.WebControls.WebParts.PersonalizationDictionary" /> class. </summary>
    </member>
    <member name="M:System.Web.UI.WebControls.WebParts.PersonalizationDictionary.#ctor(System.Int32)">
      <summary>Initializes a new instance of the <see cref="T:System.Web.UI.WebControls.WebParts.PersonalizationDictionary" /> class using the provided parameter. </summary>
      <param name="initialSize">The estimated number of entries to be stored in the dictionary.</param>
    </member>
    <member name="M:System.Web.UI.WebControls.WebParts.PersonalizationDictionary.Add(System.String,System.Web.UI.WebControls.WebParts.PersonalizationEntry)">
      <summary>Adds personalization entries to the personalization dictionary.</summary>
      <param name="key">The unique identifier for a piece of state information.</param>
      <param name="value">A piece of state information to be added to the personalization dictionary. This value can be null.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="key" /> is a duplicate of a key already in the dictionary.- or -<paramref name="key" /> is either an empty string ("") or trimming <paramref name="key" /> results in an empty string.- or -<paramref name="value" /> is not a <see cref="T:System.Web.UI.WebControls.WebParts.PersonalizationEntry" />.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="key" /> is null.- or - <paramref name="value" /> is null.</exception>
    </member>
    <member name="M:System.Web.UI.WebControls.WebParts.PersonalizationDictionary.Clear">
      <summary>Removes all custom state information from the current <see cref="T:System.Web.UI.WebControls.WebParts.PersonalizationDictionary" /> object.</summary>
    </member>
    <member name="M:System.Web.UI.WebControls.WebParts.PersonalizationDictionary.Contains(System.String)">
      <summary>Returns a value indicating whether a piece of custom state information with the same key is contained in the personalization dictionary.</summary>
      <returns>true if the provided key matches a key in the personalization dictionary; otherwise, false.</returns>
      <param name="key">A key value.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="key" /> is either an empty string (""), or trimming <paramref name="key" /> results in an empty string.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="key" /> is null.</exception>
    </member>
    <member name="M:System.Web.UI.WebControls.WebParts.PersonalizationDictionary.CopyTo(System.Collections.DictionaryEntry[],System.Int32)">
      <summary>Copies the personalization dictionary state entries as <see cref="T:System.Collections.DictionaryEntry" /> instances into the specified array.</summary>
      <param name="array">The array the <see cref="T:System.Collections.DictionaryEntry" /> instances are copied into.</param>
      <param name="index">The index location at which to begin copying.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="array" /> is multidimensional.- or -<paramref name="array" /> is the wrong size based on the <paramref name="index" /> parameter.- or - <paramref name="array" /> has insufficient capacity to hold the values contained in the personalization dictionary.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="array" /> is null.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> is less than zero.</exception>
    </member>
    <member name="P:System.Web.UI.WebControls.WebParts.PersonalizationDictionary.Count">
      <summary>Gets the number of entries in the dictionary.</summary>
      <returns>The number of entries in the dictionary.</returns>
    </member>
    <member name="M:System.Web.UI.WebControls.WebParts.PersonalizationDictionary.GetEnumerator">
      <summary>Returns an enumerator that can be used to iterate through the entries in the personalization dictionary.</summary>
      <returns>An <see cref="T:System.Collections.IDictionaryEnumerator" /> for the personalization dictionary.</returns>
    </member>
    <member name="P:System.Web.UI.WebControls.WebParts.PersonalizationDictionary.IsFixedSize">
      <summary>Gets whether the personalization dictionary is of a fixed size.</summary>
      <returns>false in all cases.</returns>
    </member>
    <member name="P:System.Web.UI.WebControls.WebParts.PersonalizationDictionary.IsReadOnly">
      <summary>Gets whether the personalization dictionary is read-only.</summary>
      <returns>false in all cases.</returns>
    </member>
    <member name="P:System.Web.UI.WebControls.WebParts.PersonalizationDictionary.IsSynchronized">
      <summary>Gets whether the personalization dictionary is synchronized.</summary>
      <returns>false in all cases.</returns>
    </member>
    <member name="P:System.Web.UI.WebControls.WebParts.PersonalizationDictionary.Item(System.String)">
      <summary>Gets or sets an entry in the personalization dictionary. </summary>
      <returns>A <see cref="T:System.Web.UI.WebControls.WebParts.PersonalizationEntry" /> representing custom personalization information identified by the <paramref name="key" /> parameter.</returns>
      <param name="key">The key of the entry to be retrieved or changed.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="key" /> is null.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="key" /> is either an empty string (""), or trimming <paramref name="key" /> results in an empty string.</exception>
    </member>
    <member name="P:System.Web.UI.WebControls.WebParts.PersonalizationDictionary.Keys">
      <summary>Gets a reference to an <see cref="T:System.Collections.ICollection" /> object containing the keys for the personalization dictionary.</summary>
      <returns>An <see cref="T:System.Collections.ICollection" /> containing the keys for the personalization dictionary.</returns>
    </member>
    <member name="M:System.Web.UI.WebControls.WebParts.PersonalizationDictionary.Remove(System.String)">
      <summary>Removes a custom state entry based on the provided key.</summary>
      <param name="key">The key of the entry to be removed.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="key" /> is null.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="key" /> is either an empty string (""), or trimming <paramref name="key" /> results in an empty string.</exception>
    </member>
    <member name="P:System.Web.UI.WebControls.WebParts.PersonalizationDictionary.SyncRoot">
      <summary>Gets an object that can be used to synchronize access to the personalization dictionary.</summary>
      <returns>An object that can be used to synchronize access to the personalization dictionary.</returns>
    </member>
    <member name="M:System.Web.UI.WebControls.WebParts.PersonalizationDictionary.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
      <summary>Implements the <see cref="M:System.Collections.ICollection.CopyTo(System.Array,System.Int32)" /> method for the <see cref="T:System.Web.UI.WebControls.WebParts.PersonalizationDictionary" /> class.</summary>
      <param name="array">An <see cref="T:System.Array" /> of <see cref="T:System.Collections.DictionaryEntry" /> items to copy into a <see cref="T:System.Web.UI.WebControls.WebParts.PersonalizationDictionary" />.</param>
      <param name="index">The starting point in a <see cref="T:System.Web.UI.WebControls.WebParts.PersonalizationDictionary" /> at which to insert <paramref name="array" />. </param>
      <exception cref="T:System.ArgumentException">
        <paramref name="array" /> is not an array of <see cref="T:System.Collections.DictionaryEntry" /> items.</exception>
    </member>
    <member name="M:System.Web.UI.WebControls.WebParts.PersonalizationDictionary.System#Collections#IDictionary#Add(System.Object,System.Object)">
      <summary>Implements the <see cref="M:System.Collections.IDictionary.Add(System.Object,System.Object)" /> method for the <see cref="T:System.Web.UI.WebControls.WebParts.PersonalizationDictionary" /> class. </summary>
      <param name="key">The <see cref="T:System.String" /> to use as the key for an item in the personalization dictionary. </param>
      <param name="value">The <see cref="T:System.Web.UI.WebControls.WebParts.PersonalizationEntry" /> to add to the personalization dictionary. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="value" /> is null.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="key" /> is not a <see cref="T:System.String" /> object.- or -<paramref name="value" /> is not a <see cref="T:System.Web.UI.WebControls.WebParts.PersonalizationEntry" /> object.</exception>
    </member>
    <member name="M:System.Web.UI.WebControls.WebParts.PersonalizationDictionary.System#Collections#IDictionary#Contains(System.Object)">
      <summary>Implements the <see cref="M:System.Collections.IDictionary.Contains(System.Object)" /> method for the <see cref="T:System.Web.UI.WebControls.WebParts.PersonalizationDictionary" /> class.</summary>
      <returns>true if <paramref name="key" /> exists in the personalization dictionary; otherwise false.</returns>
      <param name="key">A <see cref="T:System.String" /> object that identifies a particular <see cref="T:System.Web.UI.WebControls.WebParts.PersonalizationEntry" /> to check for existence in the personalization dictionary.  </param>
      <exception cref="T:System.ArgumentException">
        <paramref name="key" /> is not a <see cref="T:System.String" />.</exception>
    </member>
    <member name="P:System.Web.UI.WebControls.WebParts.PersonalizationDictionary.System#Collections#IDictionary#Item(System.Object)">
      <summary>Gets or sets the <see cref="P:System.Collections.IDictionary.Item(System.Object)" /> property value for the <see cref="T:System.Web.UI.WebControls.WebParts.PersonalizationDictionary" /> class.</summary>
      <returns>A <see cref="T:System.Web.UI.WebControls.WebParts.PersonalizationEntry" /> object whose value matches <paramref name="key" />.</returns>
      <param name="key">A <see cref="T:System.String" /> that identifies a particular <see cref="T:System.Web.UI.WebControls.WebParts.PersonalizationEntry" /> object in the personalization dictionary. </param>
      <exception cref="T:System.ArgumentException">
        <paramref name="key" /> is not a <see cref="T:System.String" /> object.</exception>
    </member>
    <member name="M:System.Web.UI.WebControls.WebParts.PersonalizationDictionary.System#Collections#IDictionary#Remove(System.Object)">
      <summary>Implements the <see cref="M:System.Collections.IDictionary.Remove(System.Object)" /> method for the <see cref="T:System.Web.UI.WebControls.WebParts.PersonalizationDictionary" /> class.</summary>
      <param name="key">A <see cref="T:System.String" /> that identifies a particular <see cref="T:System.Web.UI.WebControls.WebParts.PersonalizationEntry" /> object to remove from the personalization dictionary. </param>
      <exception cref="T:System.ArgumentException">
        <paramref name="key" /> is not a <see cref="T:System.String" />.</exception>
    </member>
    <member name="M:System.Web.UI.WebControls.WebParts.PersonalizationDictionary.System#Collections#IEnumerable#GetEnumerator">
      <summary>Implements the <see cref="M:System.Collections.IEnumerable.GetEnumerator" /> method for the <see cref="T:System.Web.UI.WebControls.WebParts.PersonalizationDictionary" /> class.</summary>
      <returns>An instance of <see cref="T:System.Collections.IEnumerator" /> to enumerate through the items in a personalization dictionary.</returns>
    </member>
    <member name="P:System.Web.UI.WebControls.WebParts.PersonalizationDictionary.Values">
      <summary>Gets a reference to an <see cref="T:System.Collections.ICollection" /> object containing the values in the personalization dictionary.</summary>
      <returns>An <see cref="T:System.Collections.ICollection" /> containing the values for the personalization dictionary.</returns>
    </member>
    <member name="T:System.Web.UI.WebControls.WebParts.PersonalizationEntry">
      <summary>Represents core pieces of custom personalization state information contained in a <see cref="T:System.Web.UI.WebControls.WebParts.PersonalizationDictionary" /> object. This class cannot be inherited. </summary>
    </member>
    <member name="M:System.Web.UI.WebControls.WebParts.PersonalizationEntry.#ctor(System.Object,System.Web.UI.WebControls.WebParts.PersonalizationScope)">
      <summary>Initializes a new instance of the <see cref="T:System.Web.UI.WebControls.WebParts.PersonalizationEntry" /> class using the specified value and scope.</summary>
      <param name="value">An object of personalization data associated with the personalization scope in the <paramref name="scope" /> parameter.</param>
      <param name="scope">The <see cref="T:System.Web.UI.WebControls.WebParts.PersonalizationScope" /> that applies to the custom personalization information.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="scope" /> is set to a value that is not a valid member of <see cref="T:System.Web.UI.WebControls.WebParts.PersonalizationScope" />.</exception>
    </member>
    <member name="M:System.Web.UI.WebControls.WebParts.PersonalizationEntry.#ctor(System.Object,System.Web.UI.WebControls.WebParts.PersonalizationScope,System.Boolean)">
      <summary>Initializes a new instance of the <see cref="T:System.Web.UI.WebControls.WebParts.PersonalizationEntry" /> class using the provided parameters.</summary>
      <param name="value">An object of personalization data associated with the personalization scope in the <paramref name="scope" /> parameter.</param>
      <param name="scope">The <see cref="T:System.Web.UI.WebControls.WebParts.PersonalizationScope" /> that applies to the custom personalization information.</param>
      <param name="isSensitive">A Boolean value indicating if the custom state information is sensitive and should not be exported.</param>
    </member>
    <member name="P:System.Web.UI.WebControls.WebParts.PersonalizationEntry.IsSensitive">
      <summary>Gets or sets the Boolean value that indicates if the <see cref="T:System.Web.UI.WebControls.WebParts.PersonalizationEntry" /> contains sensitive information.</summary>
      <returns>true if the sensitive setting for the attribute is set; otherwise false.</returns>
    </member>
    <member name="P:System.Web.UI.WebControls.WebParts.PersonalizationEntry.Scope">
      <summary>Gets or sets the personalization scope associated with this personalization data entry.</summary>
      <returns>A <see cref="T:System.Web.UI.WebControls.WebParts.PersonalizationScope" />.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="scope" /> is set to a value that is not a valid member of <see cref="T:System.Web.UI.WebControls.WebParts.PersonalizationScope" />.</exception>
    </member>
    <member name="P:System.Web.UI.WebControls.WebParts.PersonalizationEntry.Value">
      <summary>Gets or sets the personalization state information for this entry.</summary>
      <returns>An object representing personalization state information.</returns>
    </member>
    <member name="T:System.Web.UI.WebControls.WebParts.PersonalizationProvider">
      <summary>Implements the basic functionality for a personalization provider.</summary>
    </member>
    <member name="M:System.Web.UI.WebControls.WebParts.PersonalizationProvider.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Web.UI.WebControls.WebParts.PersonalizationProvider" /> class. </summary>
    </member>
    <member name="P:System.Web.UI.WebControls.WebParts.PersonalizationProvider.ApplicationName">
      <summary>When overridden in a derived class, gets or sets the name of the application configured for the provider.</summary>
      <returns>The application configured for the personalization provider.</returns>
    </member>
    <member name="M:System.Web.UI.WebControls.WebParts.PersonalizationProvider.CreateSupportedUserCapabilities">
      <summary>Returns a list of <see cref="T:System.Web.UI.WebControls.WebParts.WebPartUserCapability" /> objects that represent the set of known capabilities used by the Web Parts control set.</summary>
      <returns>An <see cref="T:System.Collections.IList" /> that represents the set of known capabilities used by the Web Parts control set.</returns>
    </member>
    <member name="M:System.Web.UI.WebControls.WebParts.PersonalizationProvider.DetermineInitialScope(System.Web.UI.WebControls.WebParts.WebPartManager,System.Web.UI.WebControls.WebParts.PersonalizationState)">
      <summary>Determines whether the initial personalization scope should be <see cref="F:System.Web.UI.WebControls.WebParts.PersonalizationScope.Shared" /> or <see cref="F:System.Web.UI.WebControls.WebParts.PersonalizationScope.User" /> scope.</summary>
      <returns>A <see cref="T:System.Web.UI.WebControls.WebParts.PersonalizationScope" /> indicating whether the current personalization scope is <see cref="F:System.Web.UI.WebControls.WebParts.PersonalizationScope.User" /> or <see cref="F:System.Web.UI.WebControls.WebParts.PersonalizationScope.Shared" />.</returns>
      <param name="webPartManager">The <see cref="T:System.Web.UI.WebControls.WebParts.WebPartManager" /> that manages the personalization information.</param>
      <param name="loadedState">The personalization state information.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="webPartManager" /> is null.</exception>
      <exception cref="T:System.ArgumentException">The page associated with <paramref name="webPartManager" /> is null.</exception>
    </member>
    <member name="M:System.Web.UI.WebControls.WebParts.PersonalizationProvider.DetermineUserCapabilities(System.Web.UI.WebControls.WebParts.WebPartManager)">
      <summary>Returns a dictionary containing <see cref="T:System.Web.UI.WebControls.WebParts.WebPartUserCapability" /> instances that represent the personalization-related capabilities of the currently executing user account.</summary>
      <returns>An <see cref="T:System.Collections.IDictionary" /> containing zero or more <see cref="T:System.Web.UI.WebControls.WebParts.WebPartUserCapability" /> instances if the user account is authenticated, or null if the executing user account is not authenticated.</returns>
      <param name="webPartManager">The <see cref="T:System.Web.UI.WebControls.WebParts.WebPartManager" /> managing the personalization information.</param>
      <exception cref="T:System.ArgumentException">The page associated with <paramref name="webPartManager" /> is null.- or -The request associated with the page is null.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="webPartManager" /> is null.</exception>
    </member>
    <member name="M:System.Web.UI.WebControls.WebParts.PersonalizationProvider.FindState(System.Web.UI.WebControls.WebParts.PersonalizationScope,System.Web.UI.WebControls.WebParts.PersonalizationStateQuery,System.Int32,System.Int32,System.Int32@)">
      <summary>When overridden in a derived class, returns a collection containing zero or more <see cref="T:System.Web.UI.WebControls.WebParts.PersonalizationStateInfo" />-derived objects based on scope and specific query parameters. </summary>
      <returns>A <see cref="T:System.Web.UI.WebControls.WebParts.PersonalizationStateInfoCollection" /> containing zero or more <see cref="T:System.Web.UI.WebControls.WebParts.PersonalizationStateInfo" />-derived objects.</returns>
      <param name="scope">A <see cref="T:System.Web.UI.WebControls.WebParts.PersonalizationScope" /> with the personalization information to be queried. This value cannot be null.</param>
      <param name="query">A <see cref="T:System.Web.UI.WebControls.WebParts.PersonalizationStateQuery" /> containing a query. This value can be null.</param>
      <param name="pageIndex">The location where the query starts.</param>
      <param name="pageSize">The number of records to return.</param>
      <param name="totalRecords">The total number of records available.</param>
    </member>
    <member name="M:System.Web.UI.WebControls.WebParts.PersonalizationProvider.GetCountOfState(System.Web.UI.WebControls.WebParts.PersonalizationScope,System.Web.UI.WebControls.WebParts.PersonalizationStateQuery)">
      <summary>When overridden in a derived class, returns the number of rows in the underlying data store that exist within the specified scope.</summary>
      <returns>The number of rows in the underlying data store that exist for the specified <paramref name="scope" /> parameter.</returns>
      <param name="scope">A <see cref="T:System.Web.UI.WebControls.WebParts.PersonalizationScope" /> of the personalization information to be queried. This value cannot be null.</param>
      <param name="query">A <see cref="T:System.Web.UI.WebControls.WebParts.PersonalizationStateQuery" /> containing a query. This value can be null.</param>
    </member>
    <member name="M:System.Web.UI.WebControls.WebParts.PersonalizationProvider.LoadPersonalizationBlobs(System.Web.UI.WebControls.WebParts.WebPartManager,System.String,System.String,System.Byte[]@,System.Byte[]@)">
      <summary>When overridden in a derived class, loads raw personalization data from the underlying data store.</summary>
      <param name="webPartManager">The <see cref="T:System.Web.UI.WebControls.WebParts.WebPartManager" /> managing the personalization data.</param>
      <param name="path">The path for personalization information to be used as the retrieval key.</param>
      <param name="userName">The user name for personalization information to be used as the retrieval key.</param>
      <param name="sharedDataBlob">The returned data for the <see cref="F:System.Web.UI.WebControls.WebParts.PersonalizationScope.Shared" /> scope.</param>
      <param name="userDataBlob">The returned data for the <see cref="F:System.Web.UI.WebControls.WebParts.PersonalizationScope.User" /> scope.</param>
    </member>
    <member name="M:System.Web.UI.WebControls.WebParts.PersonalizationProvider.LoadPersonalizationState(System.Web.UI.WebControls.WebParts.WebPartManager,System.Boolean)">
      <summary>Loads the raw data from the underlying data store and converts that data into a <see cref="T:System.Web.UI.WebControls.WebParts.PersonalizationState" /> object.</summary>
      <returns>A <see cref="T:System.Web.UI.WebControls.WebParts.PersonalizationState" /> containing personalization data.</returns>
      <param name="webPartManager">The <see cref="T:System.Web.UI.WebControls.WebParts.WebPartManager" /> managing the personalization data.</param>
      <param name="ignoreCurrentUser">A <see cref="T:System.Boolean" /> indicating whether the user name should be passed to the personalization provider.</param>
      <exception cref="T:System.ArgumentNullException">The <paramref name="webPartManager" /> is null.</exception>
      <exception cref="T:System.ArgumentException">The page associated with <paramref name="webPartManager" /> is null.- or -The request associated with the page is null.</exception>
    </member>
    <member name="M:System.Web.UI.WebControls.WebParts.PersonalizationProvider.ResetPersonalizationBlob(System.Web.UI.WebControls.WebParts.WebPartManager,System.String,System.String)">
      <summary>When overridden in a derived class, deletes raw personalization data from the underlying data store. </summary>
      <param name="webPartManager">The <see cref="T:System.Web.UI.WebControls.WebParts.WebPartManager" /> managing the personalization data.</param>
      <param name="path">The path for personalization information to be used as the data store key.</param>
      <param name="userName">The user name for personalization information to be used as the data store key.</param>
    </member>
    <member name="M:System.Web.UI.WebControls.WebParts.PersonalizationProvider.ResetPersonalizationState(System.Web.UI.WebControls.WebParts.WebPartManager)">
      <summary>Resets personalization data to the underlying data store.</summary>
      <param name="webPartManager">The <see cref="T:System.Web.UI.WebControls.WebParts.WebPartManager" /> managing the personalization data.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="webPartManager" /> is null.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="webPartManager" /> is not associated with a page.- or -The page is not associated with an in-progress <see cref="T:System.Web.HttpRequest" />.</exception>
    </member>
    <member name="M:System.Web.UI.WebControls.WebParts.PersonalizationProvider.ResetState(System.Web.UI.WebControls.WebParts.PersonalizationScope,System.String[],System.String[])">
      <summary>When overridden in a derived class, deletes personalization state from the underlying data store based on the specified parameters. </summary>
      <returns>The number of rows deleted.</returns>
      <param name="scope">A <see cref="T:System.Web.UI.WebControls.WebParts.PersonalizationScope" /> of the personalization information to be reset. This value cannot be null.</param>
      <param name="paths">The paths for personalization information to be deleted.</param>
      <param name="usernames">The user names for personalization information to be deleted.</param>
    </member>
    <member name="M:System.Web.UI.WebControls.WebParts.PersonalizationProvider.ResetUserState(System.String,System.DateTime)">
      <summary>When overridden in a derived class, deletes Web Parts personalization data from the underlying data store based on the specified parameters. </summary>
      <returns>The number of rows deleted from the underlying data store.</returns>
      <param name="path">The path of the personalization data to be deleted. This value can be null but cannot be an empty string ("").</param>
      <param name="userInactiveSinceDate">The date indicating the last time a Web site user changed personalization data.</param>
    </member>
    <member name="M:System.Web.UI.WebControls.WebParts.PersonalizationProvider.SavePersonalizationBlob(System.Web.UI.WebControls.WebParts.WebPartManager,System.String,System.String,System.Byte[])">
      <summary>When overridden in a derived class, saves raw personalization data to the underlying data store. </summary>
      <param name="webPartManager">The <see cref="T:System.Web.UI.WebControls.WebParts.WebPartManager" /> managing the personalization data.</param>
      <param name="path">The path for personalization information to be used as the data store key.</param>
      <param name="userName">The user name for personalization information to be used as the key.</param>
      <param name="dataBlob">The byte array of data to be saved.</param>
    </member>
    <member name="M:System.Web.UI.WebControls.WebParts.PersonalizationProvider.SavePersonalizationState(System.Web.UI.WebControls.WebParts.PersonalizationState)">
      <summary>Saves personalization data to a data store.</summary>
      <param name="state">A <see cref="T:System.Web.UI.WebControls.WebParts.PersonalizationState" /> containing personalization data to be saved.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="state" /> is null.</exception>
      <exception cref="T:System.ArgumentException">The <paramref name="state" /> object being saved has a different type from the <paramref name="state" /> object that was returned by the <see cref="M:System.Web.UI.WebControls.WebParts.PersonalizationProvider.LoadPersonalizationState(System.Web.UI.WebControls.WebParts.WebPartManager,System.Boolean)" /> method. </exception>
    </member>
    <member name="T:System.Web.UI.WebControls.WebParts.PersonalizationProviderCollection">
      <summary>Stores references to <see cref="T:System.Web.UI.WebControls.WebParts.PersonalizationProvider" /> objects indexed by name. This class cannot be inherited. </summary>
    </member>
    <member name="M:System.Web.UI.WebControls.WebParts.PersonalizationProviderCollection.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Web.UI.WebControls.WebParts.PersonalizationProviderCollection" /> class. </summary>
    </member>
    <member name="M:System.Web.UI.WebControls.WebParts.PersonalizationProviderCollection.Add(System.Configuration.Provider.ProviderBase)">
      <summary>Adds an instance of a class that implements <see cref="T:System.Web.UI.WebControls.WebParts.PersonalizationProvider" /> to the collection.</summary>
      <param name="provider">The personalization provider to be added.</param>
      <exception cref="T:System.ArgumentException">The provider specified is not a <see cref="T:System.Web.UI.WebControls.WebParts.PersonalizationProvider" />.</exception>
      <exception cref="T:System.ArgumentNullException">The <paramref name="provider" /> parameter is null.</exception>
    </member>
    <member name="M:System.Web.UI.WebControls.WebParts.PersonalizationProviderCollection.CopyTo(System.Web.UI.WebControls.WebParts.PersonalizationProvider[],System.Int32)">
      <summary>Copies the personalization providers in the collection to an array, starting at the specified index.</summary>
      <param name="array">The array to which the personalization providers are copied.</param>
      <param name="index">The location in the array at which to begin copying.</param>
    </member>
    <member name="P:System.Web.UI.WebControls.WebParts.PersonalizationProviderCollection.Item(System.String)">
      <summary>Gets a personalization provider based on the specified name.</summary>
      <returns>The name of the personalization provider.</returns>
      <param name="name">The name of the personalization provider.</param>
    </member>
    <member name="T:System.Web.UI.WebControls.WebParts.PersonalizationScope">
      <summary>Indicates the personalization scope for a <see cref="T:System.Web.UI.WebControls.WebParts.WebPartManager" /> object or the personalization scope that applies to a property on a Web Parts control.</summary>
    </member>
    <member name="F:System.Web.UI.WebControls.WebParts.PersonalizationScope.User">
      <summary>When referring to the scope on the <see cref="T:System.Web.UI.WebControls.WebParts.WebPartManager" />control, User scope means that personalization data that is user-specific, as well as personalization data that applies to all users, is loaded for all personalizable controls on a page. Only personalization data that is user-specific can be saved on the page. </summary>
    </member>
    <member name="F:System.Web.UI.WebControls.WebParts.PersonalizationScope.Shared">
      <summary>When referring to the scope on the <see cref="T:System.Web.UI.WebControls.WebParts.WebPartManager" /> control, Shared scope means that personalization data applies to all users for all personalizable controls on a page and is also available to be saved on the page. </summary>
    </member>
    <member name="T:System.Web.UI.WebControls.WebParts.PersonalizationState">
      <summary>Defines the basic functionality that represents the personalization data for a page.</summary>
    </member>
    <member name="M:System.Web.UI.WebControls.WebParts.PersonalizationState.#ctor(System.Web.UI.WebControls.WebParts.WebPartManager)">
      <summary>Initializes a new instance of the <see cref="T:System.Web.UI.WebControls.WebParts.PersonalizationState" /> class. </summary>
      <param name="webPartManager">A <see cref="T:System.Web.UI.WebControls.WebParts.WebPartManager" /> that manages Web Parts controls that have personalization data.</param>
      <exception cref="T:System.ArgumentNullException">The <paramref name="webPartManager" /> parameter is null.</exception>
    </member>
    <member name="M:System.Web.UI.WebControls.WebParts.PersonalizationState.ApplyWebPartManagerPersonalization">
      <summary>When overridden, applies personalization data to the <see cref="T:System.Web.UI.WebControls.WebParts.WebPartManager" /> control associated with the personalization state instance.</summary>
    </member>
    <member name="M:System.Web.UI.WebControls.WebParts.PersonalizationState.ApplyWebPartPersonalization(System.Web.UI.WebControls.WebParts.WebPart)">
      <summary>When overridden, applies personalization data to the specified Web Parts control.</summary>
      <param name="webPart">The Web Parts control to which personalization data is applied.</param>
    </member>
    <member name="M:System.Web.UI.WebControls.WebParts.PersonalizationState.ExtractWebPartManagerPersonalization">
      <summary>When overridden, extracts personalization information from the <see cref="T:System.Web.UI.WebControls.WebParts.WebPartManager" /> control associated with the current personalization state.</summary>
    </member>
    <member name="M:System.Web.UI.WebControls.WebParts.PersonalizationState.ExtractWebPartPersonalization(System.Web.UI.WebControls.WebParts.WebPart)">
      <summary>When overridden, extracts personalization data from the specified Web Parts control.</summary>
      <param name="webPart">The Web Parts control from which personalization data is extracted.</param>
    </member>
    <member name="M:System.Web.UI.WebControls.WebParts.PersonalizationState.GetAuthorizationFilter(System.String)">
      <summary>Retrieves the authorization filter for the specified Web Parts control.</summary>
      <returns>The authorization filter string for a Web Parts control.</returns>
      <param name="webPartID">The ID of the Web Parts control from which the <see cref="P:System.Web.UI.WebControls.WebParts.WebPart.AuthorizationFilter" /> is retrieved.</param>
    </member>
    <member name="P:System.Web.UI.WebControls.WebParts.PersonalizationState.IsDirty">
      <summary>Gets a value that indicates whether any personalization information has changed.</summary>
      <returns>true if any personalization state instance has changed (is "dirty"); otherwise, false.</returns>
    </member>
    <member name="P:System.Web.UI.WebControls.WebParts.PersonalizationState.IsEmpty">
      <summary>When overridden, gets a value that indicates whether any personalization state was extracted by a state instance.</summary>
      <returns>true if any personalization state was extracted by a state instance; otherwise, false.</returns>
    </member>
    <member name="M:System.Web.UI.WebControls.WebParts.PersonalizationState.SetDirty">
      <summary>Marks the current personalization state as having changed.</summary>
    </member>
    <member name="M:System.Web.UI.WebControls.WebParts.PersonalizationState.SetWebPartDirty(System.Web.UI.WebControls.WebParts.WebPart)">
      <summary>When overridden, marks a Web Parts control as having changed.</summary>
      <param name="webPart">The Web Parts control to be marked as having changed.</param>
    </member>
    <member name="M:System.Web.UI.WebControls.WebParts.PersonalizationState.SetWebPartManagerDirty">
      <summary>When overridden, marks the associated <see cref="T:System.Web.UI.WebControls.WebParts.WebPartManager" /> control as having changed.</summary>
    </member>
    <member name="M:System.Web.UI.WebControls.WebParts.PersonalizationState.ValidateWebPart(System.Web.UI.WebControls.WebParts.WebPart)">
      <summary>Verifies that the specified Web Parts control is valid.</summary>
      <param name="webPart">The Web Parts control to be validated.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="webPart" /> is not currently managed by the <see cref="T:System.Web.UI.WebControls.WebParts.WebPartManager" /> associated with the <see cref="T:System.Web.UI.WebControls.WebParts.PersonalizationState" />.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="webPart " />is null.</exception>
    </member>
    <member name="P:System.Web.UI.WebControls.WebParts.PersonalizationState.WebPartManager">
      <summary>Gets a reference to the <see cref="T:System.Web.UI.WebControls.WebParts.WebPartManager" /> control currently associated with the personalization state instance.</summary>
      <returns>A <see cref="T:System.Web.UI.WebControls.WebParts.WebPartManager" /> associated with the <see cref="T:System.Web.UI.WebControls.WebParts.PersonalizationState" />.</returns>
    </member>
    <member name="T:System.Web.UI.WebControls.WebParts.PersonalizationStateInfo">
      <summary>When overridden in a derived class, implements a representation of information about a set of Web Parts data for a page.</summary>
    </member>
    <member name="P:System.Web.UI.WebControls.WebParts.PersonalizationStateInfo.LastUpdatedDate">
      <summary>Gets the date and time that the personalization state was last updated.</summary>
      <returns>A <see cref="T:System.DateTime" /> indicating when the personalization state was last updated.</returns>
    </member>
    <member name="P:System.Web.UI.WebControls.WebParts.PersonalizationStateInfo.Path">
      <summary>Gets the path to the page associated with the personalization state information.</summary>
      <returns>The path of the page associated with the personalization state information.</returns>
    </member>
    <member name="P:System.Web.UI.WebControls.WebParts.PersonalizationStateInfo.Size">
      <summary>Gets the size of the personalization state information stored in the underlying data store.</summary>
      <returns>The size, in bytes, of the personalization state information.</returns>
    </member>
    <member name="T:System.Web.UI.WebControls.WebParts.PersonalizationStateInfoCollection">
      <summary>Provides a collection of <see cref="T:System.Web.UI.WebControls.WebParts.SharedPersonalizationStateInfo" /> and <see cref="T:System.Web.UI.WebControls.WebParts.UserPersonalizationStateInfo" /> objects.</summary>
    </member>
    <member name="M:System.Web.UI.WebControls.WebParts.PersonalizationStateInfoCollection.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Web.UI.WebControls.WebParts.PersonalizationStateInfoCollection" /> class. </summary>
    </member>
    <member name="M:System.Web.UI.WebControls.WebParts.PersonalizationStateInfoCollection.Add(System.Web.UI.WebControls.WebParts.PersonalizationStateInfo)">
      <summary>Adds a <see cref="T:System.Web.UI.WebControls.WebParts.PersonalizationStateInfo" />-derived instance to the end of the collection.</summary>
      <param name="data">The <see cref="T:System.Web.UI.WebControls.WebParts.PersonalizationStateInfo" />-derived instance to be added.</param>
      <exception cref="T:System.NotSupportedException">The collection was marked as read-only.</exception>
      <exception cref="T:System.ArgumentException">An attempt was made to add an object to the collection when an instance of the same shared or per-user state already exists in the collection.</exception>
      <exception cref="T:System.ArgumentNullException">The data parameter is null.</exception>
    </member>
    <member name="M:System.Web.UI.WebControls.WebParts.PersonalizationStateInfoCollection.Clear">
      <summary>Clears the collection of all items. </summary>
      <exception cref="T:System.NotSupportedException">The collection was marked as read-only.</exception>
    </member>
    <member name="M:System.Web.UI.WebControls.WebParts.PersonalizationStateInfoCollection.CopyTo(System.Web.UI.WebControls.WebParts.PersonalizationStateInfo[],System.Int32)">
      <summary>Copies the elements of the <see cref="T:System.Web.UI.WebControls.WebParts.PersonalizationStateInfoCollection" /> collection into a <see cref="T:System.Web.UI.WebControls.WebParts.PersonalizationStateInfo" /> array, starting at the specified position.</summary>
      <param name="array">The array the elements in the collection are copied into.</param>
      <param name="index">The location at which to start the copy operation.</param>
    </member>
    <member name="P:System.Web.UI.WebControls.WebParts.PersonalizationStateInfoCollection.Count">
      <summary>Gets the number of items in a collection.</summary>
      <returns>The number of items in a collection.</returns>
    </member>
    <member name="M:System.Web.UI.WebControls.WebParts.PersonalizationStateInfoCollection.GetEnumerator">
      <summary>Returns a standard enumerator capable of iterating over the collection. This method cannot be inherited.</summary>
      <returns>An <see cref="T:System.Collections.IEnumerator" /> that can be used to iterate through the collection.</returns>
    </member>
    <member name="P:System.Web.UI.WebControls.WebParts.PersonalizationStateInfoCollection.IsSynchronized">
      <summary>Gets a value indicating whether access to the <see cref="T:System.Web.UI.WebControls.WebParts.PersonalizationStateInfoCollection" /> collection is synchronized (thread safe).</summary>
      <returns>true if access to the collection is synchronized; otherwise, false. The value is always false for <see cref="T:System.Web.UI.WebControls.WebParts.PersonalizationStateInfoCollection" /> objects created by the Web Parts control set.</returns>
    </member>
    <member name="P:System.Web.UI.WebControls.WebParts.PersonalizationStateInfoCollection.Item(System.Int32)">
      <summary>Gets a <see cref="T:System.Web.UI.WebControls.WebParts.PersonalizationStateInfo" /> instance located at the specified ordinal index in the collection. </summary>
      <returns>A <see cref="T:System.Web.UI.WebControls.WebParts.PersonalizationStateInfo" />.</returns>
      <param name="index">The ordinal index of the object to be retrieved.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> is less than zero.- or - <paramref name="index" /> is greater than <see cref="P:System.Web.UI.WebControls.WebParts.PersonalizationStateInfoCollection.Count" />.</exception>
    </member>
    <member name="P:System.Web.UI.WebControls.WebParts.PersonalizationStateInfoCollection.Item(System.String,System.String)">
      <summary>Gets an element from the collection based on the specified parameters. </summary>
      <returns>A <see cref="T:System.Web.UI.WebControls.WebParts.PersonalizationStateInfo" />.</returns>
      <param name="path">The relative application path of the personalization state object to be retrieved.</param>
      <param name="username">The user name of the <see cref="T:System.Web.UI.WebControls.WebParts.UserPersonalizationStateInfo" /> object to be retrieved.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="path" /> is null.</exception>
    </member>
    <member name="M:System.Web.UI.WebControls.WebParts.PersonalizationStateInfoCollection.Remove(System.String,System.String)">
      <summary>Removes a <see cref="T:System.Web.UI.WebControls.WebParts.PersonalizationStateInfo" />-derived object from the collection.</summary>
      <param name="path">The relative application path of the personalization state object to be removed.</param>
      <param name="username">The user name of the <see cref="T:System.Web.UI.WebControls.WebParts.UserPersonalizationStateInfo" />-derived object to be removed.</param>
      <exception cref="T:System.NotSupportedException">The collection was marked as read-only.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="path" /> is null.- or -both parameters are null.</exception>
    </member>
    <member name="M:System.Web.UI.WebControls.WebParts.PersonalizationStateInfoCollection.SetReadOnly">
      <summary>Marks the collection as read-only.</summary>
    </member>
    <member name="P:System.Web.UI.WebControls.WebParts.PersonalizationStateInfoCollection.SyncRoot">
      <summary>Gets an object that can be used to synchronize access to the <see cref="T:System.Web.UI.WebControls.WebParts.PersonalizationStateInfoCollection" /> instance.</summary>
      <returns>An object that can be used to synchronize access to the <see cref="T:System.Web.UI.WebControls.WebParts.PersonalizationStateInfoCollection" />. The Web Parts control set returns a reference to the current collection object.</returns>
    </member>
    <member name="M:System.Web.UI.WebControls.WebParts.PersonalizationStateInfoCollection.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
      <summary>Implements the base <see cref="M:System.Collections.ICollection.CopyTo(System.Array,System.Int32)" /> method. </summary>
      <param name="array">The array into which a collection of <see cref="T:System.Web.UI.WebControls.WebParts.PersonalizationStateInfo" />  objects will be copied.</param>
      <param name="index">The point in <paramref name="array" /> at which to start copying the <see cref="T:System.Web.UI.WebControls.WebParts.PersonalizationStateInfo" />  objects. </param>
    </member>
    <member name="T:System.Web.UI.WebControls.WebParts.PersonalizationStateQuery">
      <summary>Represents a set of query parameters that can be passed to a personalization provider using the various get and find methods. This class cannot be inherited.</summary>
    </member>
    <member name="M:System.Web.UI.WebControls.WebParts.PersonalizationStateQuery.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Web.UI.WebControls.WebParts.PersonalizationStateQuery" /> class. </summary>
    </member>
    <member name="P:System.Web.UI.WebControls.WebParts.PersonalizationStateQuery.Item(System.String)">
      <summary>Gets or sets the value of the query parameter.</summary>
      <returns>The value of the query parameter indicated by the <paramref name="queryKey" /> parameter.</returns>
      <param name="queryKey">A case-insensitive query string. The value should be one of the following: "PathToMatch", "UserInactiveSinceDate", or "UsernameToMatch".</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="queryKey" /> is null.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="queryKey" /> is an empty string ("").- or -When trimmed, <paramref name="queryKey" /> results in an empty string. - or -A value provided for one of the three properties on <see cref="T:System.Web.UI.WebControls.WebParts.PersonalizationStateQuery" /> was of the wrong type.</exception>
    </member>
    <member name="P:System.Web.UI.WebControls.WebParts.PersonalizationStateQuery.PathToMatch">
      <summary>Gets or sets the path to be used for a query.</summary>
      <returns>The path to be used for a query.</returns>
    </member>
    <member name="P:System.Web.UI.WebControls.WebParts.PersonalizationStateQuery.UserInactiveSinceDate">
      <summary>Gets or sets the last active date used in a query.</summary>
      <returns>The last active date to be used in a query.</returns>
    </member>
    <member name="P:System.Web.UI.WebControls.WebParts.PersonalizationStateQuery.UsernameToMatch">
      <summary>Gets or sets the user name in a query.</summary>
      <returns>The user name to be used in a query.</returns>
    </member>
    <member name="T:System.Web.UI.WebControls.WebParts.PropertyGridEditorPart">
      <summary>Provides an editor control that enables end users to edit custom properties on an associated <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> or server control. This class cannot be inherited.</summary>
    </member>
    <member name="M:System.Web.UI.WebControls.WebParts.PropertyGridEditorPart.#ctor">
      <summary>Creates a new instance of the class.</summary>
    </member>
    <member name="M:System.Web.UI.WebControls.WebParts.PropertyGridEditorPart.ApplyChanges">
      <summary>Saves the values from a <see cref="T:System.Web.UI.WebControls.WebParts.PropertyGridEditorPart" /> control to the corresponding properties in the associated <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> control.</summary>
      <returns>true if the action of saving values from the <see cref="T:System.Web.UI.WebControls.WebParts.PropertyGridEditorPart" /> to the <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> is successful; otherwise (if an error occurs), false.</returns>
      <exception cref="T:System.Exception">An error occurred when trying to set the value for a property on the associated <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" />.</exception>
    </member>
    <member name="P:System.Web.UI.WebControls.WebParts.PropertyGridEditorPart.DefaultButton">
      <summary>Overrides the base property inherited from the <see cref="T:System.Web.UI.WebControls.Panel" /> control to hide the property from designers and prevent it from being affected by themes. </summary>
      <returns>A string that contains the ID of the <see cref="T:System.Web.UI.WebControls.Button" /> control that receives the default focus in a <see cref="T:System.Web.UI.WebControls.Panel" /> control.</returns>
    </member>
    <member name="P:System.Web.UI.WebControls.WebParts.PropertyGridEditorPart.Display">
      <summary>Gets a value that indicates whether a control should be displayed when its associated <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> control is in edit mode.</summary>
      <returns>A Boolean value that indicates whether the control should be displayed.</returns>
    </member>
    <member name="M:System.Web.UI.WebControls.WebParts.PropertyGridEditorPart.SyncChanges">
      <summary>Retrieves the values from a <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> control, and updates the corresponding controls used to edit those property values within a <see cref="T:System.Web.UI.WebControls.WebParts.PropertyGridEditorPart" /> control.</summary>
    </member>
    <member name="P:System.Web.UI.WebControls.WebParts.PropertyGridEditorPart.Title">
      <summary>Gets or sets a title for the editor control.</summary>
      <returns>A string that is used as the title of the control. The default value is a calculated control name supplied by the Web Parts control set.</returns>
    </member>
    <member name="T:System.Web.UI.WebControls.WebParts.ProviderConnectionPoint">
      <summary>Defines a connection point object that enables a server control acting as a provider to form a connection with a consumer.</summary>
    </member>
    <member name="M:System.Web.UI.WebControls.WebParts.ProviderConnectionPoint.#ctor(System.Reflection.MethodInfo,System.Type,System.Type,System.String,System.String,System.Boolean)">
      <summary>Initializes a new instance of the <see cref="T:System.Web.UI.WebControls.WebParts.ProviderConnectionPoint" /> class.</summary>
      <param name="callbackMethod">The method in the provider control that returns an interface instance to consumers to establish a connection.</param>
      <param name="interfaceType">The <see cref="T:System.Type" /> of the interface that the provider serves to consumers. </param>
      <param name="controlType">The <see cref="T:System.Type" /> of the provider control with which the provider connection point is associated.</param>
      <param name="displayName">A friendly display name for the provider connection point that appears to users in the connection user interface (UI).</param>
      <param name="id">A unique identifier for the provider connection point.</param>
      <param name="allowsMultipleConnections">A Boolean value indicating whether the provider connection point can have multiple simultaneous connections with consumers.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="callbackMethod" /> is null.- or -<paramref name="interfaceType" /> is null. - or -<paramref name="controlType" /> is null.- or - <paramref name="displayName" /> is null or an empty string ("").</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="controlType " />is not the same type as the provider control (or a valid class derived from it).</exception>
    </member>
    <member name="M:System.Web.UI.WebControls.WebParts.ProviderConnectionPoint.GetObject(System.Web.UI.Control)">
      <summary>Invokes the callback method in a provider control that gets an interface instance to return to consumers.</summary>
      <returns>An <see cref="T:System.Object" /> that is an instance of the interface a provider returns to consumers to establish a connection. </returns>
      <param name="control">The control acting as the provider in a Web Parts connection.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="control" /> is null.</exception>
    </member>
    <member name="M:System.Web.UI.WebControls.WebParts.ProviderConnectionPoint.GetSecondaryInterfaces(System.Web.UI.Control)">
      <summary>Gets an optional collection of secondary interfaces that can be supported by a provider connection point.</summary>
      <returns>A <see cref="T:System.Web.UI.WebControls.WebParts.ConnectionInterfaceCollection" /> of additional interfaces provided by the control acting as a provider.</returns>
      <param name="control">The control acting as the provider in a Web Parts connection.</param>
    </member>
    <member name="T:System.Web.UI.WebControls.WebParts.ProviderConnectionPointCollection">
      <summary>Contains a collection of all <see cref="T:System.Web.UI.WebControls.WebParts.ProviderConnectionPoint" /> objects associated with a particular <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> or server control acting as a provider in a connection. This class cannot be inherited.</summary>
    </member>
    <member name="M:System.Web.UI.WebControls.WebParts.ProviderConnectionPointCollection.#ctor">
      <summary>Initializes an empty new instance of the <see cref="T:System.Web.UI.WebControls.WebParts.ProviderConnectionPointCollection" /> class. </summary>
    </member>
    <member name="M:System.Web.UI.WebControls.WebParts.ProviderConnectionPointCollection.#ctor(System.Collections.ICollection)">
      <summary>Initializes a new instance of the <see cref="T:System.Web.UI.WebControls.WebParts.ProviderConnectionPointCollection" /> class using the specified collection of provider connection points.</summary>
      <param name="connectionPoints">An <see cref="T:System.Collections.ICollection" /> of <see cref="T:System.Web.UI.WebControls.WebParts.ProviderConnectionPoint" /> objects used to create the collection.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="connectionPoints" /> is null.</exception>
      <exception cref="T:System.ArgumentException">The collection contains a null connection point.- or -The collection contains an object that is not of type <see cref="T:System.Web.UI.WebControls.WebParts.ProviderConnectionPoint" />.- or -There are duplicate IDs in the collection of connection points. </exception>
    </member>
    <member name="M:System.Web.UI.WebControls.WebParts.ProviderConnectionPointCollection.Contains(System.Web.UI.WebControls.WebParts.ProviderConnectionPoint)">
      <summary>Returns a value indicating whether a particular <see cref="T:System.Web.UI.WebControls.WebParts.ProviderConnectionPoint" /> object exists in the collection. </summary>
      <returns>true if the provider connection point is contained in the collection; otherwise, false.</returns>
      <param name="connectionPoint">The <see cref="T:System.Web.UI.WebControls.WebParts.ProviderConnectionPoint" /> to search for.</param>
    </member>
    <member name="M:System.Web.UI.WebControls.WebParts.ProviderConnectionPointCollection.CopyTo(System.Web.UI.WebControls.WebParts.ProviderConnectionPoint[],System.Int32)">
      <summary>Copies the collection to an array of <see cref="T:System.Web.UI.WebControls.WebParts.ProviderConnectionPoint" /> objects.</summary>
      <param name="array">An array of <see cref="T:System.Web.UI.WebControls.WebParts.ProviderConnectionPoint" /> objects that receives the copied items of the collection.</param>
      <param name="index">The starting point in the array at which to insert the collection contents.</param>
    </member>
    <member name="P:System.Web.UI.WebControls.WebParts.ProviderConnectionPointCollection.Default">
      <summary>Gets the default connection point from the collection of provider connection points associated with a particular control.</summary>
      <returns>The default <see cref="T:System.Web.UI.WebControls.WebParts.ProviderConnectionPoint" /> from a <see cref="T:System.Web.UI.WebControls.WebParts.ProviderConnectionPointCollection" />.</returns>
    </member>
    <member name="M:System.Web.UI.WebControls.WebParts.ProviderConnectionPointCollection.IndexOf(System.Web.UI.WebControls.WebParts.ProviderConnectionPoint)">
      <summary>Returns the position of a particular <see cref="T:System.Web.UI.WebControls.WebParts.ProviderConnectionPoint" /> object within a collection.</summary>
      <returns>An integer that indicates the zero-based index position of the specified <paramref name="connectionPoint" /> within a <see cref="T:System.Web.UI.WebControls.WebParts.ProviderConnectionPointCollection" />.</returns>
      <param name="connectionPoint">The <see cref="T:System.Web.UI.WebControls.WebParts.ProviderConnectionPoint" /> to locate.</param>
    </member>
    <member name="P:System.Web.UI.WebControls.WebParts.ProviderConnectionPointCollection.Item(System.Int32)">
      <summary>Gets a member of the collection based on its position in the collection.</summary>
      <returns>A <see cref="T:System.Web.UI.WebControls.WebParts.ProviderConnectionPoint" /> at the index specified. </returns>
      <param name="index">The index of a particular <see cref="T:System.Web.UI.WebControls.WebParts.ProviderConnectionPoint" /> in the collection.</param>
    </member>
    <member name="P:System.Web.UI.WebControls.WebParts.ProviderConnectionPointCollection.Item(System.String)">
      <summary>Gets a member of the collection based on a unique string identifier. </summary>
      <returns>The first <see cref="T:System.Web.UI.WebControls.WebParts.ProviderConnectionPoint" /> whose ID equals the value of <paramref name="id" />.</returns>
      <param name="id">A <see cref="T:System.String" /> serving as the unique identifier for a particular <see cref="T:System.Web.UI.WebControls.WebParts.ProviderConnectionPoint" /> in the collection.</param>
    </member>
    <member name="T:System.Web.UI.WebControls.WebParts.ProxyWebPart">
      <summary>Represents the base class for Web Parts controls that under certain conditions must replace other Web Parts controls on a page.</summary>
    </member>
    <member name="M:System.Web.UI.WebControls.WebParts.ProxyWebPart.#ctor(System.String,System.String,System.String,System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.Web.UI.WebControls.WebParts.ProxyWebPart" /> class when a dynamic Web Parts control must be replaced.</summary>
      <param name="originalID">A string that is the control ID (not the unique ID) of the control to replace. If a <see cref="T:System.Web.UI.WebControls.WebParts.GenericWebPart" /> control is replaced, the ID is the ID of its child server control.</param>
      <param name="originalTypeName">A string that is the name of the <see cref="T:System.Type" /> of the control to replace. If a <see cref="T:System.Web.UI.WebControls.WebParts.GenericWebPart" /> control is replaced, the type name is the type of its child server control.</param>
      <param name="originalPath">A string that contains the path to the user control to replace.</param>
      <param name="genericWebPartID">A string that returns the ID of a <see cref="T:System.Web.UI.WebControls.WebParts.GenericWebPart" /> control, if that type of control is being replaced. This is needed for controls that do not inherit from the <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> base class. </param>
      <exception cref="T:System.ArgumentException">
        <paramref name="originalID" /> is null or an empty string.- or -<paramref name="originalTypeName" /> is null or an empty string.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="originalPath" /> is specified but <paramref name="genericWebPartID" /> is null or an empty string.</exception>
    </member>
    <member name="M:System.Web.UI.WebControls.WebParts.ProxyWebPart.#ctor(System.Web.UI.WebControls.WebParts.WebPart)">
      <summary>Initializes a new instance of the <see cref="T:System.Web.UI.WebControls.WebParts.ProxyWebPart" /> class when a static Web Parts control (or server or user control) must be replaced.</summary>
      <param name="webPart">The Web Parts control to be replaced.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="webPart" /> is null.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="webPart" /> has an empty <see cref="P:System.Web.UI.Control.ID" /> property- or -<paramref name="webPart" /> is an empty <see cref="T:System.Web.UI.WebControls.WebParts.GenericWebPart" />- or -<paramref name="webPart" /> is of type <see cref="T:System.Web.UI.WebControls.WebParts.GenericWebPart" />  and its child control has an empty <see cref="P:System.Web.UI.Control.ID" /> property</exception>
    </member>
    <member name="P:System.Web.UI.WebControls.WebParts.ProxyWebPart.GenericWebPartID">
      <summary>Gets the value of the <see cref="P:System.Web.UI.WebControls.WebParts.GenericWebPart.ID" /> property from the generic Web Parts control replaced by a proxy Web Parts control.</summary>
      <returns>A string containing the <see cref="P:System.Web.UI.WebControls.WebParts.GenericWebPart.ID" /> value.</returns>
    </member>
    <member name="P:System.Web.UI.WebControls.WebParts.ProxyWebPart.ID">
      <summary>Gets or sets the programmatic identifier assigned to the Web Parts control.</summary>
      <returns>A <see cref="T:System.String" /> containing the identifier.</returns>
    </member>
    <member name="M:System.Web.UI.WebControls.WebParts.ProxyWebPart.LoadControlState(System.Object)">
      <summary>Overrides <see cref="M:System.Web.UI.Control.LoadControlState(System.Object)" /> to prevent loading previously saved state for a <see cref="T:System.Web.UI.WebControls.WebParts.ProxyWebPart" /> object.</summary>
      <param name="savedState">The previously saved state data. </param>
    </member>
    <member name="M:System.Web.UI.WebControls.WebParts.ProxyWebPart.LoadViewState(System.Object)">
      <summary>Overrides <see cref="M:System.Web.UI.Control.LoadViewState(System.Object)" /> to prevent loading previously saved view state for a <see cref="T:System.Web.UI.WebControls.WebParts.ProxyWebPart" /> object.</summary>
      <param name="savedState">The previously saved state data. </param>
    </member>
    <member name="P:System.Web.UI.WebControls.WebParts.ProxyWebPart.OriginalID">
      <summary>Gets the <see cref="P:System.Web.UI.Control.ID" /> of the Web Parts control replaced by the proxy Web Parts control.</summary>
      <returns>A string containing the <see cref="P:System.Web.UI.Control.ID" /> value of the Web Parts control replaced by the proxy Web Parts control.</returns>
    </member>
    <member name="P:System.Web.UI.WebControls.WebParts.ProxyWebPart.OriginalPath">
      <summary>Gets the path to the user control being replaced.</summary>
      <returns>A string that contains the path to a user control being replaced.</returns>
    </member>
    <member name="P:System.Web.UI.WebControls.WebParts.ProxyWebPart.OriginalTypeName">
      <summary>Gets the <see cref="T:System.Type" /> of the Web Parts control replaced by the proxy Web Parts control.</summary>
      <returns>A string containing the <see cref="T:System.Type" /> of the control replaced by the proxy Web Parts control.</returns>
    </member>
    <member name="M:System.Web.UI.WebControls.WebParts.ProxyWebPart.SaveControlState"></member>
    <member name="M:System.Web.UI.WebControls.WebParts.ProxyWebPart.SaveViewState"></member>
    <member name="T:System.Web.UI.WebControls.WebParts.ProxyWebPartConnectionCollection">
      <summary>Contains a collection of static <see cref="T:System.Web.UI.WebControls.WebParts.WebPartConnection" /> objects, which is used when the connections are declared in content pages and the <see cref="T:System.Web.UI.WebControls.WebParts.WebPartManager" /> control is declared in a master page. This class cannot be inherited.</summary>
    </member>
    <member name="M:System.Web.UI.WebControls.WebParts.ProxyWebPartConnectionCollection.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Web.UI.WebControls.WebParts.ProxyWebPartConnectionCollection" /> class. </summary>
    </member>
    <member name="M:System.Web.UI.WebControls.WebParts.ProxyWebPartConnectionCollection.Add(System.Web.UI.WebControls.WebParts.WebPartConnection)">
      <summary>Adds a <see cref="T:System.Web.UI.WebControls.WebParts.WebPartConnection" /> object to the collection.</summary>
      <returns>An integer value that indicates where the <see cref="T:System.Web.UI.WebControls.WebParts.WebPartConnection" /> was inserted into the collection.</returns>
      <param name="value">A <see cref="T:System.Web.UI.WebControls.WebParts.WebPartConnection" /> to add to the collection. </param>
    </member>
    <member name="M:System.Web.UI.WebControls.WebParts.ProxyWebPartConnectionCollection.Contains(System.Web.UI.WebControls.WebParts.WebPartConnection)">
      <summary>Returns a value indicating whether a particular <see cref="T:System.Web.UI.WebControls.WebParts.WebPartConnection" /> object exists in the collection.</summary>
      <returns>true if <paramref name="value" /> exists in the collection; otherwise, false.</returns>
      <param name="value">A <see cref="T:System.Web.UI.WebControls.WebParts.WebPartConnection" /> being checked for its existence in a collection. </param>
    </member>
    <member name="M:System.Web.UI.WebControls.WebParts.ProxyWebPartConnectionCollection.CopyTo(System.Web.UI.WebControls.WebParts.WebPartConnection[],System.Int32)">
      <summary>Copies the collection to an array of <see cref="T:System.Web.UI.WebControls.WebParts.WebPartConnection" /> objects.</summary>
      <param name="array">An array of <see cref="T:System.Web.UI.WebControls.WebParts.WebPartConnection" /> objects to contain the copied collection. </param>
      <param name="index">An integer that indicates the starting point in the array at which to place the collection contents. </param>
    </member>
    <member name="M:System.Web.UI.WebControls.WebParts.ProxyWebPartConnectionCollection.IndexOf(System.Web.UI.WebControls.WebParts.WebPartConnection)">
      <summary>Returns the position of a particular member of the collection.</summary>
      <returns>An integer that indicates the position of a particular object in the collection.</returns>
      <param name="value">A <see cref="T:System.Web.UI.WebControls.WebParts.WebPartConnection" /> that is a member of the collection. </param>
    </member>
    <member name="M:System.Web.UI.WebControls.WebParts.ProxyWebPartConnectionCollection.Insert(System.Int32,System.Web.UI.WebControls.WebParts.WebPartConnection)">
      <summary>Inserts a <see cref="T:System.Web.UI.WebControls.WebParts.WebPartConnection" /> object into the collection at the specified index.</summary>
      <param name="index">An integer indicating the ordinal position in the collection at which a <see cref="T:System.Web.UI.WebControls.WebParts.WebPartConnection" /> should be inserted. </param>
      <param name="value">A <see cref="T:System.Web.UI.WebControls.WebParts.WebPartConnection" /> to insert into the collection.  </param>
    </member>
    <member name="P:System.Web.UI.WebControls.WebParts.ProxyWebPartConnectionCollection.IsReadOnly">
      <summary>Gets a value indicating whether <see cref="T:System.Web.UI.WebControls.WebParts.WebPartConnection" /> objects can be added to the collection.</summary>
      <returns>true if connection objects cannot be added to the collection; otherwise, false.</returns>
    </member>
    <member name="P:System.Web.UI.WebControls.WebParts.ProxyWebPartConnectionCollection.Item(System.Int32)">
      <summary>Gets or sets a connection item within the collection, based on an index number indicating the item's location in the collection.</summary>
      <returns>A <see cref="T:System.Web.UI.WebControls.WebParts.WebPartConnection" /> at the specified index in the collection.</returns>
      <param name="index">An integer that indicates the index of a member of the collection.  </param>
    </member>
    <member name="P:System.Web.UI.WebControls.WebParts.ProxyWebPartConnectionCollection.Item(System.String)">
      <summary>Returns a specific member of the collection according to a unique identifier.</summary>
      <returns>The first <see cref="T:System.Web.UI.WebControls.WebParts.WebPartConnection" /> whose ID matches the value of the <paramref name="id" /> parameter. Returns null if no match is found.</returns>
      <param name="id">A string that contains the ID of a particular connection in the collection. </param>
    </member>
    <member name="M:System.Web.UI.WebControls.WebParts.ProxyWebPartConnectionCollection.Remove(System.Web.UI.WebControls.WebParts.WebPartConnection)">
      <summary>Removes the specified <see cref="T:System.Web.UI.WebControls.WebParts.WebPartConnection" /> object from the collection.</summary>
      <param name="value">The <see cref="T:System.Web.UI.WebControls.WebParts.WebPartConnection" /> to be removed. </param>
    </member>
    <member name="T:System.Web.UI.WebControls.WebParts.ProxyWebPartManager">
      <summary>Provides a way for developers to declare static connections in a content page when a <see cref="T:System.Web.UI.WebControls.WebParts.WebPartManager" /> control has been declared in the content page's associated master page.</summary>
    </member>
    <member name="M:System.Web.UI.WebControls.WebParts.ProxyWebPartManager.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Web.UI.WebControls.WebParts.ProxyWebPartManager" /> class. </summary>
    </member>
    <member name="P:System.Web.UI.WebControls.WebParts.ProxyWebPartManager.ClientID">
      <returns>The control ID for HTML markup that is generated by ASP.NET.</returns>
    </member>
    <member name="P:System.Web.UI.WebControls.WebParts.ProxyWebPartManager.Controls">
      <returns>The collection of child controls for the specified server control.</returns>
    </member>
    <member name="M:System.Web.UI.WebControls.WebParts.ProxyWebPartManager.CreateControlCollection">
      <summary>Overrides the base property to prevent the <see cref="T:System.Web.UI.WebControls.WebParts.ProxyWebPartManager" /> control from containing controls.</summary>
      <returns>Always returns an <see cref="T:System.Web.UI.EmptyControlCollection" />.</returns>
    </member>
    <member name="P:System.Web.UI.WebControls.WebParts.ProxyWebPartManager.EnableTheming">
      <summary>Overrides the base property to prevent themes from being used.</summary>
      <returns>Always returns false, to prevent themes from being used.</returns>
      <exception cref="T:System.NotSupportedException">A caller tries to assign a value to this property.</exception>
    </member>
    <member name="M:System.Web.UI.WebControls.WebParts.ProxyWebPartManager.Focus">
      <summary>Overrides the base method to prevent the method from being called.</summary>
      <exception cref="T:System.NotSupportedException">A caller tries to call this method.</exception>
    </member>
    <member name="M:System.Web.UI.WebControls.WebParts.ProxyWebPartManager.OnInit(System.EventArgs)">
      <summary>Raises the <see cref="E:System.Web.UI.Control.Init" /> event and initializes the control.</summary>
      <param name="e">An <see cref="T:System.EventArgs" /> that contains the event data. </param>
      <exception cref="T:System.InvalidOperationException">The <see cref="T:System.Web.UI.WebControls.WebParts.WebPartManager" /> control from the associated master page is null.</exception>
    </member>
    <member name="P:System.Web.UI.WebControls.WebParts.ProxyWebPartManager.SkinID">
      <summary>Overrides the base property to prevent a value from being assigned.</summary>
      <returns>Always returns an empty string ("").</returns>
      <exception cref="T:System.NotSupportedException">A caller tries to assign a value to this property.</exception>
    </member>
    <member name="P:System.Web.UI.WebControls.WebParts.ProxyWebPartManager.StaticConnections">
      <summary>Gets a collection of static connections declared within the &lt;asp:proxywebpartmanager&gt; element on a content page.</summary>
      <returns>A <see cref="T:System.Web.UI.WebControls.WebParts.ProxyWebPartConnectionCollection" /> that contains all static <see cref="T:System.Web.UI.WebControls.WebParts.WebPartConnection" /> objects declared within an &lt;asp:proxywebpartmanager&gt; element. </returns>
    </member>
    <member name="P:System.Web.UI.WebControls.WebParts.ProxyWebPartManager.Visible">
      <summary>Overrides the base property to prevent a value from being assigned.</summary>
      <returns>Always returns false, to prevent the control from being made visible.</returns>
      <exception cref="T:System.NotSupportedException">A caller tries to assign a value to this property.</exception>
    </member>
    <member name="T:System.Web.UI.WebControls.WebParts.RowCallback">
      <summary>References the method to call when retrieving row data from a provider.</summary>
      <param name="rowData">The data to retrieve from the provider. </param>
    </member>
    <member name="T:System.Web.UI.WebControls.WebParts.RowToFieldTransformer">
      <summary>Transforms data in a Web Parts connection from a provider that implements the <see cref="T:System.Web.UI.WebControls.WebParts.IWebPartRow" /> interface to a consumer expecting data through the <see cref="T:System.Web.UI.WebControls.WebParts.IWebPartField" /> interface.</summary>
    </member>
    <member name="M:System.Web.UI.WebControls.WebParts.RowToFieldTransformer.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Web.UI.WebControls.WebParts.RowToFieldTransformer" /> class. </summary>
    </member>
    <member name="M:System.Web.UI.WebControls.WebParts.RowToFieldTransformer.CreateConfigurationControl">
      <summary>Displays an ASP.NET control that configures a <see cref="T:System.Web.UI.WebControls.WebParts.RowToFieldTransformer" /> transformer in the <see cref="T:System.Web.UI.WebControls.WebParts.ConnectionsZone" /> zone.</summary>
      <returns>An ASP.NET control that configures a <see cref="T:System.Web.UI.WebControls.WebParts.RowToFieldTransformer" />.</returns>
    </member>
    <member name="P:System.Web.UI.WebControls.WebParts.RowToFieldTransformer.FieldName">
      <summary>Gets or sets the name of the value to transform.</summary>
      <returns>A <see cref="T:System.String" /> containing the name of the field to transform.</returns>
    </member>
    <member name="M:System.Web.UI.WebControls.WebParts.RowToFieldTransformer.System#Web#UI#WebControls#WebParts#IWebPartField#GetFieldValue(System.Web.UI.WebControls.WebParts.FieldCallback)">
      <summary>Returns the value of the field that is being used by the interface as the basis of a connection between two Web Parts controls.</summary>
      <param name="callback">The delegate instance to be used when retrieving a value.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="callback" /> equals null.</exception>
    </member>
    <member name="P:System.Web.UI.WebControls.WebParts.RowToFieldTransformer.System#Web#UI#WebControls#WebParts#IWebPartField#Schema">
      <summary>Gets the schema information for a data field that is used to share data between two Web Parts controls.</summary>
      <returns>A <see cref="T:System.ComponentModel.PropertyDescriptor" /> describing the data schema.</returns>
    </member>
    <member name="M:System.Web.UI.WebControls.WebParts.RowToFieldTransformer.Transform(System.Object)">
      <summary>Provides an object for transforming the data.</summary>
      <returns>An <see cref="T:System.Object" /> representing the data to be transformed.</returns>
      <param name="providerData">The provider data to be transformed.</param>
    </member>
    <member name="T:System.Web.UI.WebControls.WebParts.RowToParametersTransformer">
      <summary>Transforms data in a Web Parts connection from a provider that implements the <see cref="T:System.Web.UI.WebControls.WebParts.IWebPartRow" /> interface to a consumer expecting to receive data from a provider that implements the <see cref="T:System.Web.UI.WebControls.WebParts.IWebPartParameters" /> interface.</summary>
    </member>
    <member name="M:System.Web.UI.WebControls.WebParts.RowToParametersTransformer.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Web.UI.WebControls.WebParts.RowToParametersTransformer" /> class. </summary>
    </member>
    <member name="P:System.Web.UI.WebControls.WebParts.RowToParametersTransformer.ConsumerFieldNames">
      <summary>Gets or sets the list of names in the consumer that will receive the values from the provider.</summary>
      <returns>An array of <see cref="T:System.String" /> values representing the consumer fields.</returns>
    </member>
    <member name="M:System.Web.UI.WebControls.WebParts.RowToParametersTransformer.CreateConfigurationControl">
      <summary>Provides an ASP.NET control that allows the user to configure a <see cref="T:System.Web.UI.WebControls.WebParts.RowToParametersTransformer" /> transformer in the <see cref="T:System.Web.UI.WebControls.WebParts.ConnectionsZone" /> zone.</summary>
      <returns>An ASP.NET control that displays a user interface (UI) that allows the user to configure a <see cref="T:System.Web.UI.WebControls.WebParts.RowToParametersTransformer" />.</returns>
    </member>
    <member name="P:System.Web.UI.WebControls.WebParts.RowToParametersTransformer.ProviderFieldNames">
      <summary>Gets or sets the list of field names from the provider.</summary>
      <returns>An array of <see cref="T:System.String" /> values representing the provider fields.</returns>
    </member>
    <member name="M:System.Web.UI.WebControls.WebParts.RowToParametersTransformer.System#Web#UI#WebControls#WebParts#IWebPartParameters#GetParametersData(System.Web.UI.WebControls.WebParts.ParametersCallback)">
      <summary>Gets the value of the data from the connection provider.</summary>
      <param name="callback">The delegate instance to be used when retrieving a value.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="callback" /> equals null.</exception>
    </member>
    <member name="P:System.Web.UI.WebControls.WebParts.RowToParametersTransformer.System#Web#UI#WebControls#WebParts#IWebPartParameters#Schema">
      <summary>Gets the schema information for a data field that is used to share data between two Web Parts controls.</summary>
      <returns>A <see cref="T:System.ComponentModel.PropertyDescriptorCollection" /> containing the data schema.</returns>
    </member>
    <member name="M:System.Web.UI.WebControls.WebParts.RowToParametersTransformer.System#Web#UI#WebControls#WebParts#IWebPartParameters#SetConsumerSchema(System.ComponentModel.PropertyDescriptorCollection)">
      <summary>Sets the property descriptors for the properties that the consumer receives when the <see cref="M:System.Web.UI.WebControls.WebParts.IWebPartParameters.GetParametersData(System.Web.UI.WebControls.WebParts.ParametersCallback)" /> method is called.</summary>
      <param name="schema">The <see cref="T:System.ComponentModel.PropertyDescriptorCollection" /> object returned by <see cref="P:System.Web.UI.WebControls.WebParts.RowToParametersTransformer.System#Web#UI#WebControls#WebParts#IWebPartParameters#Schema" />.</param>
    </member>
    <member name="M:System.Web.UI.WebControls.WebParts.RowToParametersTransformer.Transform(System.Object)">
      <summary>Provides an object for transforming the data.</summary>
      <returns>An <see cref="T:System.Object" /> representing the data to be transformed.</returns>
      <param name="providerData">The provider data to be transformed.</param>
    </member>
    <member name="T:System.Web.UI.WebControls.WebParts.SharedPersonalizationStateInfo">
      <summary>Represents a lightweight version of shared personalization information about a page. This class cannot be inherited.</summary>
    </member>
    <member name="M:System.Web.UI.WebControls.WebParts.SharedPersonalizationStateInfo.#ctor(System.String,System.DateTime,System.Int32,System.Int32,System.Int32)">
      <summary>Initializes a new instance of the <see cref="T:System.Web.UI.WebControls.WebParts.SharedPersonalizationStateInfo" /> class. </summary>
      <param name="path">The page that the information applies to. <paramref name="path" /> is an application-relative (using tilde syntax) virtual path.</param>
      <param name="lastUpdatedDate">A <see cref="T:System.DateTime" /> indicating when the shared information for the page was last updated.</param>
      <param name="size">The size, in bytes, of the shared state information for the page.</param>
      <param name="sizeOfPersonalizations">The total size, in bytes, of all per-user personalization information that exists for the page.</param>
      <param name="countOfPersonalizations">The total number of users who have personalized the page.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="path" />, when trimmed, is an empty string ("").</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="path" /> is null.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="size" />, <paramref name="sizeOfPersonalizations" /> or <paramref name="countOfPersonalizations" /> is negative.</exception>
    </member>
    <member name="P:System.Web.UI.WebControls.WebParts.SharedPersonalizationStateInfo.CountOfPersonalizations">
      <summary>Gets the total number of users that have personalized a page.</summary>
      <returns>The total number of per-user personalization settings that have been applied to a page.</returns>
    </member>
    <member name="P:System.Web.UI.WebControls.WebParts.SharedPersonalizationStateInfo.SizeOfPersonalizations">
      <summary>Gets the total size of all per-user personalization information for a page.</summary>
      <returns>The total size, in bytes, of all personalization information for a page.</returns>
    </member>
    <member name="T:System.Web.UI.WebControls.WebParts.SqlPersonalizationProvider">
      <summary>Implements a personalization provider that uses Microsoft SQL Server.</summary>
    </member>
    <member name="M:System.Web.UI.WebControls.WebParts.SqlPersonalizationProvider.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Web.UI.WebControls.WebParts.SqlPersonalizationProvider" /> class. </summary>
    </member>
    <member name="P:System.Web.UI.WebControls.WebParts.SqlPersonalizationProvider.ApplicationName">
      <summary>Gets or sets the name of the application to store and retrieve personalization information for.</summary>
      <returns>The name of the application to store and retrieve personalization information for. The default is the <see cref="P:System.Web.Hosting.HostingEnvironment.ApplicationVirtualPath" /> property value for the current <see cref="P:System.Web.HttpContext.Request" />.</returns>
      <exception cref="T:System.Configuration.Provider.ProviderException">The property was set to a string with a length greater than 256 characters.</exception>
    </member>
    <member name="M:System.Web.UI.WebControls.WebParts.SqlPersonalizationProvider.FindState(System.Web.UI.WebControls.WebParts.PersonalizationScope,System.Web.UI.WebControls.WebParts.PersonalizationStateQuery,System.Int32,System.Int32,System.Int32@)">
      <summary>Returns a collection containing zero or more <see cref="T:System.Web.UI.WebControls.WebParts.PersonalizationStateInfo" />-derived objects, based on the specified scope and parameters.</summary>
      <returns>A <see cref="T:System.Web.UI.WebControls.WebParts.PersonalizationStateInfoCollection" /> containing zero or more <see cref="T:System.Web.UI.WebControls.WebParts.PersonalizationStateInfo" />-derived objects.</returns>
      <param name="scope">A <see cref="T:System.Web.UI.WebControls.WebParts.PersonalizationScope" /> indicating the personalization information to be queried. This value cannot be null.</param>
      <param name="query">A <see cref="T:System.Web.UI.WebControls.WebParts.PersonalizationStateQuery" /> containing a query. This value can be null.</param>
      <param name="pageIndex">The location where the query starts.</param>
      <param name="pageSize">The number of records to return.</param>
      <param name="totalRecords">The total number of records available.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="pageIndex" /> is less than zero.- or -<paramref name="pageSize" /> is less than or equal to zero.- or -The combination of <paramref name="pageIndex" /> and <paramref name="pageSize" /> results in a value greater than <see cref="F:System.Int32.MaxValue" />.- or -<see cref="P:System.Web.UI.WebControls.WebParts.PersonalizationStateQuery.PathToMatch" /> is non-null and is an empty string ("") after trimming.- or -The length of <see cref="P:System.Web.UI.WebControls.WebParts.PersonalizationStateQuery.PathToMatch" /> is greater than 256 characters when the value is non-null.- or -<see cref="P:System.Web.UI.WebControls.WebParts.PersonalizationStateQuery.UsernameToMatch" /> is non-null and is an empty string after trimming.- or -The length of <see cref="P:System.Web.UI.WebControls.WebParts.PersonalizationStateQuery.UsernameToMatch" /> is greater than 256 characters when the value is non-null.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">The<paramref name=" scope" /> specified is not a valid value from the <see cref="T:System.Web.UI.WebControls.WebParts.PersonalizationScope" /> enumeration.</exception>
    </member>
    <member name="M:System.Web.UI.WebControls.WebParts.SqlPersonalizationProvider.GetCountOfState(System.Web.UI.WebControls.WebParts.PersonalizationScope,System.Web.UI.WebControls.WebParts.PersonalizationStateQuery)">
      <summary>Returns a count of the number of rows in the underlying data store that exist for the specified <paramref name="scope" /> parameter.</summary>
      <returns>The number of rows in the underlying data store that exist for the specified <paramref name="scope" /> parameter.</returns>
      <param name="scope">A <see cref="T:System.Web.UI.WebControls.WebParts.PersonalizationScope" /> indicating the personalization information to be queried. This value cannot be null.</param>
      <param name="query">A <see cref="T:System.Web.UI.WebControls.WebParts.PersonalizationStateQuery" /> containing a query. This value can be null.</param>
      <exception cref="T:System.ArgumentException">
        <see cref="P:System.Web.UI.WebControls.WebParts.PersonalizationStateQuery.PathToMatch" /> is non-null and is an empty string ("") after trimming.- or -The length of <see cref="P:System.Web.UI.WebControls.WebParts.PersonalizationStateQuery.PathToMatch" /> is greater than 256 characters when the value is non-null.- or -<see cref="P:System.Web.UI.WebControls.WebParts.PersonalizationStateQuery.UsernameToMatch" /> is non-null and is an empty string after trimming.- or -The length of <see cref="P:System.Web.UI.WebControls.WebParts.PersonalizationStateQuery.UsernameToMatch" /> is greater than 256 characters when the value is non-null.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">The<paramref name=" scope" /> specified is not a valid value from the <see cref="T:System.Web.UI.WebControls.WebParts.PersonalizationScope" /> enumeration.</exception>
    </member>
    <member name="M:System.Web.UI.WebControls.WebParts.SqlPersonalizationProvider.Initialize(System.String,System.Collections.Specialized.NameValueCollection)">
      <summary>Implements the initialization procedures required for a Microsoft SQL Server personalization provider. This method is not intended to be used directly from your code.</summary>
      <param name="name">The application name as it appears in the configuration file.</param>
      <param name="configSettings">The configuration settings for the application.</param>
      <exception cref="T:System.Configuration.Provider.ProviderException">No connection string is configured for the provider.- or -The connection string for the provider cannot be found.- or -There are additional attributes on the provider's &lt;add&gt; element beyond those described in the configuration settings.- or - The length of the application name is greater than 256 characters.- or -The application domain hosting the application is running at a trust level below <see cref="F:System.Web.AspNetHostingPermissionLevel.Medium" /> trust.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="configSettings" /> is null.</exception>
    </member>
    <member name="M:System.Web.UI.WebControls.WebParts.SqlPersonalizationProvider.LoadPersonalizationBlobs(System.Web.UI.WebControls.WebParts.WebPartManager,System.String,System.String,System.Byte[]@,System.Byte[]@)">
      <summary>Loads personalization data from the underlying data store, based on the specified parameters.</summary>
      <param name="webPartManager">The <see cref="T:System.Web.UI.WebControls.WebParts.WebPartManager" /> managing the personalization data.</param>
      <param name="path">The path for personalization information in the <see cref="F:System.Web.UI.WebControls.WebParts.PersonalizationScope.Shared" /> scope to be used as the retrieval key.</param>
      <param name="userName">The user name for personalization information in the <see cref="F:System.Web.UI.WebControls.WebParts.PersonalizationScope.User" /> scope to be used as the retrieval key.</param>
      <param name="sharedDataBlob">The returned data for the <see cref="F:System.Web.UI.WebControls.WebParts.PersonalizationScope.Shared" /> scope.</param>
      <param name="userDataBlob">The returned data for the <see cref="F:System.Web.UI.WebControls.WebParts.PersonalizationScope.User" /> scope.</param>
    </member>
    <member name="M:System.Web.UI.WebControls.WebParts.SqlPersonalizationProvider.ResetPersonalizationBlob(System.Web.UI.WebControls.WebParts.WebPartManager,System.String,System.String)">
      <summary>Deletes personalization data from the underlying data store. </summary>
      <param name="webPartManager">The <see cref="T:System.Web.UI.WebControls.WebParts.WebPartManager" /> managing the personalization data.</param>
      <param name="path">The path for personalization information in the <see cref="F:System.Web.UI.WebControls.WebParts.PersonalizationScope.Shared" /> scope to be used as the retrieval key.</param>
      <param name="userName">The user name for personalization information in the <see cref="F:System.Web.UI.WebControls.WebParts.PersonalizationScope.User" /> scope to be used as the retrieval key.</param>
    </member>
    <member name="M:System.Web.UI.WebControls.WebParts.SqlPersonalizationProvider.ResetState(System.Web.UI.WebControls.WebParts.PersonalizationScope,System.String[],System.String[])">
      <summary>Deletes personalization state information from the underlying data store, based on the specified parameters.</summary>
      <returns>The number of rows deleted.</returns>
      <param name="scope">A <see cref="T:System.Web.UI.WebControls.WebParts.PersonalizationScope" /> indicating the personalization information to be queried. This value cannot be null.</param>
      <param name="paths">The paths for personalization information in the <see cref="F:System.Web.UI.WebControls.WebParts.PersonalizationScope.Shared" /> scope to be deleted.</param>
      <param name="usernames">The user names for personalization information in the <see cref="F:System.Web.UI.WebControls.WebParts.PersonalizationScope.User" /> scope to be deleted.</param>
      <exception cref="T:System.ArgumentException">Either the <paramref name="paths" /> or the <paramref name="usernames" /> parameter is an empty array.- or - The <paramref name="paths" /> and <paramref name="usernames" /> parameters contained within the respective arrays do not meet the validation rules.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">The<paramref name=" scope" /> specified is not a member of the <see cref="T:System.Web.UI.WebControls.WebParts.PersonalizationScope" /> enumeration.</exception>
    </member>
    <member name="M:System.Web.UI.WebControls.WebParts.SqlPersonalizationProvider.ResetUserState(System.String,System.DateTime)">
      <summary>Deletes user personalization data from the underlying data store, based on the specified parameters.</summary>
      <returns>The count of rows deleted from the underlying data store.</returns>
      <param name="path">The path of the personalization data to be deleted. This value can be null but cannot be an empty string ("").</param>
      <param name="userInactiveSinceDate">The date indicating the last activity.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="path" /> is an empty string.- or -The path is greater than 256 characters in length.</exception>
    </member>
    <member name="M:System.Web.UI.WebControls.WebParts.SqlPersonalizationProvider.SavePersonalizationBlob(System.Web.UI.WebControls.WebParts.WebPartManager,System.String,System.String,System.Byte[])">
      <summary>Saves raw personalization data to the underlying Microsoft SQL Server database.</summary>
      <param name="webPartManager">The <see cref="T:System.Web.UI.WebControls.WebParts.WebPartManager" /> managing the personalization data.</param>
      <param name="path">A <see cref="T:System.Web.UI.WebControls.WebParts.PersonalizationScope" /> indicating the personalization information to be saved. This value cannot be null.</param>
      <param name="userName">The user name for personalization information in the <see cref="F:System.Web.UI.WebControls.WebParts.PersonalizationScope.User" /> scope to be used as the key.</param>
      <param name="dataBlob">The byte array of data to be saved.</param>
    </member>
    <member name="T:System.Web.UI.WebControls.WebParts.TableCallback">
      <summary>References the method to call when retrieving table data from a provider.</summary>
      <param name="tableData">The data to retrieve from the provider.</param>
    </member>
    <member name="T:System.Web.UI.WebControls.WebParts.TitleStyle">
      <summary>Specifies the style characteristics for the title bars of Web Parts controls within a zone.</summary>
    </member>
    <member name="M:System.Web.UI.WebControls.WebParts.TitleStyle.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Web.UI.WebControls.WebParts.TitleStyle" /> class.</summary>
    </member>
    <member name="P:System.Web.UI.WebControls.WebParts.TitleStyle.Wrap">
      <summary>Gets or sets a value indicating whether the contents of the title bar for a part control wrap in the title bar.</summary>
      <returns>true if the contents of a title bar wrap in the title bar; otherwise, false. The default is false.</returns>
    </member>
    <member name="T:System.Web.UI.WebControls.WebParts.ToolZone">
      <summary>Serves as the base class for a set of helper zones that appear only in certain associated page display modes. </summary>
    </member>
    <member name="M:System.Web.UI.WebControls.WebParts.ToolZone.#ctor(System.Collections.ICollection)">
      <summary>Associates a collection of <see cref="T:System.Web.UI.WebControls.WebParts.WebPartDisplayMode" /> objects with a particular <see cref="T:System.Web.UI.WebControls.WebParts.ToolZone" /> zone, so that the zone can be displayed in the appropriate page display modes.</summary>
      <param name="associatedDisplayModes">An <see cref="T:System.Collections.ICollection" /> of <see cref="T:System.Web.UI.WebControls.WebParts.WebPartDisplayMode" /> objects that determine when a zone can be displayed.</param>
      <exception cref="T:System.ArgumentNullException">The <paramref name="associatedDisplayModes" /> parameter is equal to null or 0.</exception>
    </member>
    <member name="M:System.Web.UI.WebControls.WebParts.ToolZone.#ctor(System.Web.UI.WebControls.WebParts.WebPartDisplayMode)">
      <summary>Associates a single <see cref="T:System.Web.UI.WebControls.WebParts.WebPartDisplayMode" /> object with a particular <see cref="T:System.Web.UI.WebControls.WebParts.ToolZone" /> zone, so that the zone can be displayed in the appropriate page display mode.</summary>
      <param name="associatedDisplayMode">A <see cref="T:System.Web.UI.WebControls.WebParts.WebPartDisplayMode" /> that determines when a zone can be displayed.</param>
      <exception cref="T:System.ArgumentNullException">The <paramref name="associatedDisplayMode" /> parameter is equal to null.</exception>
    </member>
    <member name="P:System.Web.UI.WebControls.WebParts.ToolZone.AssociatedDisplayModes">
      <summary>Gets the collection of <see cref="T:System.Web.UI.WebControls.WebParts.WebPartDisplayMode" /> objects that are associated with a particular <see cref="T:System.Web.UI.WebControls.WebParts.ToolZone" /> zone.</summary>
      <returns>A <see cref="T:System.Web.UI.WebControls.WebParts.WebPartDisplayModeCollection" /> that contains <see cref="T:System.Web.UI.WebControls.WebParts.WebPartDisplayMode" /> objects associated with a <see cref="T:System.Web.UI.WebControls.WebParts.ToolZone" /> control. </returns>
    </member>
    <member name="M:System.Web.UI.WebControls.WebParts.ToolZone.Close">
      <summary>Provides a base method declaration that derived <see cref="T:System.Web.UI.WebControls.WebParts.ToolZone" /> controls can override to handle the details of closing a specialized zone.</summary>
    </member>
    <member name="P:System.Web.UI.WebControls.WebParts.ToolZone.Display">
      <summary>Gets a value that indicates whether a <see cref="T:System.Web.UI.WebControls.WebParts.ToolZone" /> control is currently displayed.</summary>
      <returns>true if the <see cref="T:System.Web.UI.WebControls.WebParts.ToolZone" /> is currently displayed; otherwise, false. The default value is false.</returns>
    </member>
    <member name="P:System.Web.UI.WebControls.WebParts.ToolZone.EditUIStyle">
      <summary>Gets the style attributes for the editable controls contained in a <see cref="T:System.Web.UI.WebControls.WebParts.ToolZone" /> control.</summary>
      <returns>A <see cref="T:System.Web.UI.WebControls.Style" /> that contains style attributes for editable controls within a <see cref="T:System.Web.UI.WebControls.WebParts.ToolZone" /> control.</returns>
    </member>
    <member name="P:System.Web.UI.WebControls.WebParts.ToolZone.HeaderCloseVerb">
      <summary>Gets a reference to the <see cref="T:System.Web.UI.WebControls.WebParts.WebPartVerb" /> object in the header of a <see cref="T:System.Web.UI.WebControls.WebParts.ToolZone" /> control that is used to close the control.</summary>
      <returns>The <see cref="T:System.Web.UI.WebControls.WebParts.WebPartVerb" /> used to close a <see cref="T:System.Web.UI.WebControls.WebParts.ToolZone" /> control.</returns>
    </member>
    <member name="P:System.Web.UI.WebControls.WebParts.ToolZone.HeaderVerbStyle">
      <summary>Gets the style attributes for all header verbs displayed in a <see cref="T:System.Web.UI.WebControls.WebParts.ToolZone" /> control.</summary>
      <returns>A <see cref="T:System.Web.UI.WebControls.Style" /> that contains style attributes for header verbs within a <see cref="T:System.Web.UI.WebControls.WebParts.ToolZone" />.</returns>
    </member>
    <member name="P:System.Web.UI.WebControls.WebParts.ToolZone.InstructionText">
      <summary>Gets or sets the text in a <see cref="T:System.Web.UI.WebControls.WebParts.ToolZone" /> control that provides directions for end users.</summary>
      <returns>A string that contains the directions for end users. A default value appropriate to specific tool zones is provided by derived <see cref="T:System.Web.UI.WebControls.WebParts.ToolZone" /> classes.</returns>
    </member>
    <member name="P:System.Web.UI.WebControls.WebParts.ToolZone.InstructionTextStyle">
      <summary>Gets the style attributes for the instruction text that appears at the top of a <see cref="T:System.Web.UI.WebControls.WebParts.ToolZone" /> control.</summary>
      <returns>A <see cref="T:System.Web.UI.WebControls.Style" /> that contains style attributes for the instruction text within a <see cref="T:System.Web.UI.WebControls.WebParts.ToolZone" />.</returns>
    </member>
    <member name="P:System.Web.UI.WebControls.WebParts.ToolZone.LabelStyle">
      <summary>Gets the style attributes for the contents of the labels that appear alongside the editing controls within a <see cref="T:System.Web.UI.WebControls.WebParts.ToolZone" /> control. The derived <see cref="T:System.Web.UI.WebControls.WebParts.ToolZone" /> controls, such as <see cref="T:System.Web.UI.WebControls.WebParts.CatalogZone" /> and <see cref="T:System.Web.UI.WebControls.WebParts.EditorZone" />, apply the styles to the labels.</summary>
      <returns>A <see cref="T:System.Web.UI.WebControls.Style" /> that contains style attributes for the labels within a <see cref="T:System.Web.UI.WebControls.WebParts.ToolZone" />.</returns>
    </member>
    <member name="M:System.Web.UI.WebControls.WebParts.ToolZone.LoadViewState(System.Object)">
      <summary>Loads view state.</summary>
      <param name="savedState">The state to load.</param>
      <exception cref="T:System.ArgumentException">The length of <paramref name="savedState" />, when converted to an object array, does not equal 7.</exception>
    </member>
    <member name="M:System.Web.UI.WebControls.WebParts.ToolZone.OnDisplayModeChanged(System.Object,System.Web.UI.WebControls.WebParts.WebPartDisplayModeEventArgs)">
      <summary>Provides a base method declaration that derived <see cref="T:System.Web.UI.WebControls.WebParts.ToolZone" /> controls can override to handle the details of changing page display modes for a specialized zone.</summary>
      <param name="sender">An <see cref="T:System.Object" /> that raises the <see cref="M:System.Web.UI.WebControls.WebParts.ToolZone.OnDisplayModeChanged(System.Object,System.Web.UI.WebControls.WebParts.WebPartDisplayModeEventArgs)" /> method.</param>
      <param name="e">A <see cref="T:System.Web.UI.WebControls.WebParts.WebPartDisplayModeEventArgs" /> that contains the event data.</param>
    </member>
    <member name="M:System.Web.UI.WebControls.WebParts.ToolZone.OnInit(System.EventArgs)">
      <summary>Creates specialized event handlers used by the <see cref="T:System.Web.UI.WebControls.WebParts.WebPartManager" /> control on a Web page.</summary>
      <param name="e">An <see cref="T:System.EventArgs" /> that contains the event data. </param>
    </member>
    <member name="M:System.Web.UI.WebControls.WebParts.ToolZone.OnSelectedWebPartChanged(System.Object,System.Web.UI.WebControls.WebParts.WebPartEventArgs)">
      <summary>Provides a base method declaration that derived <see cref="T:System.Web.UI.WebControls.WebParts.ToolZone" /> controls can override to handle the event of changing which Web Parts control is selected within a specialized zone.</summary>
      <param name="sender">An <see cref="T:System.Object" /> that raises the <see cref="M:System.Web.UI.WebControls.WebParts.ToolZone.OnSelectedWebPartChanged(System.Object,System.Web.UI.WebControls.WebParts.WebPartEventArgs)" /> method.</param>
      <param name="e">A <see cref="T:System.Web.UI.WebControls.WebParts.WebPartEventArgs" /> that contains the event data. </param>
    </member>
    <member name="M:System.Web.UI.WebControls.WebParts.ToolZone.RaisePostBackEvent(System.String)">
      <summary>Calls the <see cref="M:System.Web.UI.WebControls.WebParts.ToolZone.Close" /> method for a <see cref="T:System.Web.UI.WebControls.WebParts.ToolZone" /> control when the control posts back to the server.</summary>
      <param name="eventArgument">A <see cref="T:System.String" /> that contains the argument for the event.</param>
    </member>
    <member name="M:System.Web.UI.WebControls.WebParts.ToolZone.RenderFooter(System.Web.UI.HtmlTextWriter)">
      <summary>Overrides the base method to render verbs in the footer of a <see cref="T:System.Web.UI.WebControls.WebParts.ToolZone" /> control.</summary>
      <param name="writer">An <see cref="T:System.Web.UI.HtmlTextWriter" /> that renders verbs in a zone's footer area. </param>
    </member>
    <member name="M:System.Web.UI.WebControls.WebParts.ToolZone.RenderHeader(System.Web.UI.HtmlTextWriter)">
      <summary>Overrides the base method to provide specialized rendering for the header area required by <see cref="T:System.Web.UI.WebControls.WebParts.ToolZone" /> controls.</summary>
      <param name="writer">An <see cref="T:System.Web.UI.HtmlTextWriter" /> that renders the header section.</param>
    </member>
    <member name="M:System.Web.UI.WebControls.WebParts.ToolZone.RenderVerb(System.Web.UI.HtmlTextWriter,System.Web.UI.WebControls.WebParts.WebPartVerb)">
      <summary>Renders an individual verb with a <see cref="T:System.Web.UI.WebControls.WebParts.ToolZone" /> control.</summary>
      <param name="writer">An <see cref="T:System.Web.UI.HtmlTextWriter" /> that renders a single verb.</param>
      <param name="verb">The <see cref="T:System.Web.UI.WebControls.WebParts.WebPartVerb" /> to be rendered within a zone.</param>
    </member>
    <member name="M:System.Web.UI.WebControls.WebParts.ToolZone.RenderVerbs(System.Web.UI.HtmlTextWriter)">
      <summary>Provides a base method declaration that derived <see cref="T:System.Web.UI.WebControls.WebParts.ToolZone" /> controls can override to customize the rendering of the verbs within a specialized zone.</summary>
      <param name="writer">An <see cref="T:System.Web.UI.HtmlTextWriter" /> that renders the verbs in a zone.</param>
    </member>
    <member name="M:System.Web.UI.WebControls.WebParts.ToolZone.SaveViewState">
      <returns>Returns the zone control's current view state. If no view state is associated with the zone, this method returns null.</returns>
    </member>
    <member name="M:System.Web.UI.WebControls.WebParts.ToolZone.System#Web#UI#IPostBackEventHandler#RaisePostBackEvent(System.String)">
      <summary>Implements the <see cref="M:System.Web.UI.IPostBackEventHandler.RaisePostBackEvent(System.String)" /> method. </summary>
      <param name="eventArgument">A <see cref="T:System.String" /> that contains the postback event data.</param>
    </member>
    <member name="M:System.Web.UI.WebControls.WebParts.ToolZone.TrackViewState"></member>
    <member name="P:System.Web.UI.WebControls.WebParts.ToolZone.Visible">
      <summary>Gets or sets a value that indicates whether a server control is rendered as a user interface (UI) element on the page. </summary>
      <returns>true if the control is visible on the page; otherwise, false.</returns>
      <exception cref="T:System.InvalidOperationException">The caller attempts to set the property at run time.</exception>
    </member>
    <member name="T:System.Web.UI.WebControls.WebParts.TransformerTypeCollection">
      <summary>Provides a read-only collection of <see cref="T:System.Web.UI.WebControls.WebParts.WebPartTransformer" /> objects.</summary>
    </member>
    <member name="M:System.Web.UI.WebControls.WebParts.TransformerTypeCollection.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Web.UI.WebControls.WebParts.TransformerTypeCollection" /> class with no members in the collection. </summary>
    </member>
    <member name="M:System.Web.UI.WebControls.WebParts.TransformerTypeCollection.#ctor(System.Collections.ICollection)">
      <summary>Initializes a new instance of the <see cref="T:System.Web.UI.WebControls.WebParts.TransformerTypeCollection" /> class containing the specified <see cref="T:System.Web.UI.WebControls.WebParts.WebPartTransformer" /> objects.</summary>
      <param name="transformerTypes">A collection of <see cref="T:System.Web.UI.WebControls.WebParts.WebPartTransformer" /> objects. </param>
      <exception cref="T:System.ArgumentException">
        <paramref name="transformerTypes" /> contains objects that are not transformers.</exception>
    </member>
    <member name="M:System.Web.UI.WebControls.WebParts.TransformerTypeCollection.#ctor(System.Web.UI.WebControls.WebParts.TransformerTypeCollection,System.Collections.ICollection)">
      <summary>Initializes a new instance of the <see cref="T:System.Web.UI.WebControls.WebParts.TransformerTypeCollection" /> class by combining an existing <see cref="T:System.Web.UI.WebControls.WebParts.TransformerTypeCollection" /> collection with the specified <see cref="T:System.Web.UI.WebControls.WebParts.WebPartTransformer" /> objects.</summary>
      <param name="existingTransformerTypes">A collection of <see cref="T:System.Web.UI.WebControls.WebParts.WebPartTransformer" /> objects already contained in a <see cref="T:System.Web.UI.WebControls.WebParts.TransformerTypeCollection" />. </param>
      <param name="transformerTypes">A collection of <see cref="T:System.Web.UI.WebControls.WebParts.WebPartTransformer" /> objects to combine with the collection in the <paramref name="existingTransformerTypes" /> parameter.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="transformerTypes" /> contains objects that are not transformers.</exception>
    </member>
    <member name="M:System.Web.UI.WebControls.WebParts.TransformerTypeCollection.Contains(System.Type)">
      <summary>Returns a value indicating whether a particular transformer exists in the collection.</summary>
      <returns>A Boolean value that indicates whether a particular transformer is in the collection.</returns>
      <param name="value">A <see cref="T:System.Web.UI.WebControls.WebParts.WebPartTransformer" /> that is checked to determine whether it is in the collection. </param>
    </member>
    <member name="M:System.Web.UI.WebControls.WebParts.TransformerTypeCollection.CopyTo(System.Type[],System.Int32)">
      <summary>Copies the collection to an array of <see cref="T:System.Web.UI.WebControls.WebParts.WebPartTransformer" /> objects.</summary>
      <param name="array">An array of <see cref="T:System.Web.UI.WebControls.WebParts.WebPartTransformer" /> objects to contain the copied collection. </param>
      <param name="index">The starting point in the array at which to place the collection contents. </param>
    </member>
    <member name="F:System.Web.UI.WebControls.WebParts.TransformerTypeCollection.Empty">
      <summary>Creates a collection for storing transformers. </summary>
    </member>
    <member name="M:System.Web.UI.WebControls.WebParts.TransformerTypeCollection.IndexOf(System.Type)">
      <summary>Returns the position of a particular member in the collection.</summary>
      <returns>An integer that indicates the position of a particular object in the collection.</returns>
      <param name="value">A <see cref="T:System.Web.UI.WebControls.WebParts.WebPartTransformer" /> that is a member of the collection.</param>
    </member>
    <member name="P:System.Web.UI.WebControls.WebParts.TransformerTypeCollection.Item(System.Int32)">
      <summary>Gets a member of the collection based on its position in the collection.</summary>
      <returns>The <see cref="T:System.Web.UI.WebControls.WebParts.WebPartTransformer" /> located at <paramref name="index" />.</returns>
      <param name="index">The index of a particular <see cref="T:System.Web.UI.WebControls.WebParts.WebPartTransformer" /> in a collection. </param>
    </member>
    <member name="T:System.Web.UI.WebControls.WebParts.UnauthorizedWebPart">
      <summary>Used to create a placeholder object whenever the <see cref="T:System.Web.UI.WebControls.WebParts.WebPartManager" /> control's <see cref="Overload:System.Web.UI.WebControls.WebParts.WebPartManager.IsAuthorized" /> method returns false for a <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> control. This class cannot be inherited.</summary>
    </member>
    <member name="M:System.Web.UI.WebControls.WebParts.UnauthorizedWebPart.#ctor(System.String,System.String,System.String,System.String)">
      <summary>Initializes a new instance of an <see cref="T:System.Web.UI.WebControls.WebParts.UnauthorizedWebPart" /> control, called when a dynamic <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> control (or server or user control) fails authorization. </summary>
      <param name="originalID">A string that contains the ID of the original server or user control that was added to a <see cref="T:System.Web.UI.WebControls.WebParts.WebPartZoneBase" /> to participate in a Web Parts application. </param>
      <param name="originalTypeName">A string containing the name of the original control's type. </param>
      <param name="originalPath">A string containing the relative virtual path to the user control, if the original control is a user control. </param>
      <param name="genericWebPartID">A string containing the ID of the <see cref="T:System.Web.UI.WebControls.WebParts.GenericWebPart" /> control that wraps the original server or user control. </param>
    </member>
    <member name="M:System.Web.UI.WebControls.WebParts.UnauthorizedWebPart.#ctor(System.Web.UI.WebControls.WebParts.WebPart)">
      <summary>Initializes a new instance of an <see cref="T:System.Web.UI.WebControls.WebParts.UnauthorizedWebPart" /> control, called when a static <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> control (or server or user control) fails authorization.</summary>
      <param name="webPart">A <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> that has failed to be authorized by the <see cref="T:System.Web.UI.WebControls.WebParts.WebPartManager" /> control. </param>
    </member>
    <member name="T:System.Web.UI.WebControls.WebParts.UserPersonalizationStateInfo">
      <summary>Represents the per-user personalization information for a page and a user. This class cannot be inherited.</summary>
    </member>
    <member name="M:System.Web.UI.WebControls.WebParts.UserPersonalizationStateInfo.#ctor(System.String,System.DateTime,System.Int32,System.String,System.DateTime)">
      <summary>Initializes a new instance of the <see cref="T:System.Web.UI.WebControls.WebParts.UserPersonalizationStateInfo" /> class. </summary>
      <param name="path">The page that the information applies to. <paramref name="path" /> is an application-relative (using tilde syntax) virtual path.</param>
      <param name="lastUpdatedDate">The last date and time that the user information for a page was updated.</param>
      <param name="size">The size, in bytes, of the per-user state information for the page.</param>
      <param name="username">The user to whom the personalization information for the page applies.</param>
      <param name="lastActivityDate">The last time the user was active in the ASP.NET application.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="path" />, after trimming, is an empty string ("").- or - <paramref name="username" />, after trimming, is an empty string ("").</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="path" /> is null.- or - <paramref name="username" /> is null.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="size" /> is negative.</exception>
    </member>
    <member name="P:System.Web.UI.WebControls.WebParts.UserPersonalizationStateInfo.LastActivityDate">
      <summary>Gets the last time the user was active in the ASP.NET application associated with a page.</summary>
      <returns>The last time the user was active in the ASP.NET application associated with a page.</returns>
    </member>
    <member name="P:System.Web.UI.WebControls.WebParts.UserPersonalizationStateInfo.Username">
      <summary>Gets the user name to which the personalization information for a page applies.</summary>
      <returns>The user name to which the personalization information for a page applies.</returns>
    </member>
    <member name="T:System.Web.UI.WebControls.WebParts.WebBrowsableAttribute">
      <summary>Indicates whether the designated property of a Web Parts control is displayed in a <see cref="T:System.Web.UI.WebControls.WebParts.PropertyGridEditorPart" /> object.</summary>
      <exception cref="T:System.Web.AspNetHostingPermission">for operating in a hosted environment. Demand value: <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />; Permission value: <see cref="F:System.Web.AspNetHostingPermissionLevel.Minimal" />.</exception>
    </member>
    <member name="M:System.Web.UI.WebControls.WebParts.WebBrowsableAttribute.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Web.UI.WebControls.WebParts.WebBrowsableAttribute" /> class with the <see cref="P:System.Web.UI.WebControls.WebParts.WebBrowsableAttribute.Browsable" /> property set to true.</summary>
    </member>
    <member name="M:System.Web.UI.WebControls.WebParts.WebBrowsableAttribute.#ctor(System.Boolean)">
      <summary>Initializes a new instance of the <see cref="T:System.Web.UI.WebControls.WebParts.WebBrowsableAttribute" /> class with the specified value for the <see cref="P:System.Web.UI.WebControls.WebParts.WebBrowsableAttribute.Browsable" /> property.</summary>
      <param name="browsable">A Boolean value indicating whether the property should be displayed in a <see cref="T:System.Web.UI.WebControls.WebParts.PropertyGridEditorPart" />. </param>
    </member>
    <member name="P:System.Web.UI.WebControls.WebParts.WebBrowsableAttribute.Browsable">
      <summary>Gets a value indicating whether a <see cref="T:System.Web.UI.WebControls.WebParts.PropertyGridEditorPart" /> control should display a specific property of a Web Parts control.</summary>
      <returns>true if <see cref="T:System.Web.UI.WebControls.WebParts.PropertyGridEditorPart" /> will display the property; otherwise, false.</returns>
    </member>
    <member name="F:System.Web.UI.WebControls.WebParts.WebBrowsableAttribute.Default">
      <summary>Represents an instance of the <see cref="T:System.Web.UI.WebControls.WebParts.WebBrowsableAttribute" /> class with the <see cref="P:System.Web.UI.WebControls.WebParts.WebBrowsableAttribute.Browsable" /> property set to the default value, which is false.</summary>
    </member>
    <member name="M:System.Web.UI.WebControls.WebParts.WebBrowsableAttribute.Equals(System.Object)">
      <summary>Returns a value that indicates whether this instance is equal to a specified object.</summary>
      <returns>true if <paramref name="obj" /> equals the type and value of this instance; otherwise, false.</returns>
      <param name="obj">An <see cref="T:System.Object" /> to compare with this instance, or null. </param>
    </member>
    <member name="M:System.Web.UI.WebControls.WebParts.WebBrowsableAttribute.GetHashCode">
      <summary>Returns the hash code for the display name value.</summary>
      <returns>A 32-bit signed integer hash code.</returns>
    </member>
    <member name="M:System.Web.UI.WebControls.WebParts.WebBrowsableAttribute.IsDefaultAttribute">
      <summary>Determines whether the current instance is set to the default value.</summary>
      <returns>true if the <see cref="T:System.Web.UI.WebControls.WebParts.WebBrowsableAttribute" /> equals <see cref="F:System.Web.UI.WebControls.WebParts.WebBrowsableAttribute.Default" />; otherwise, false.</returns>
    </member>
    <member name="F:System.Web.UI.WebControls.WebParts.WebBrowsableAttribute.No">
      <summary>Represents an instance of the <see cref="T:System.Web.UI.WebControls.WebParts.WebBrowsableAttribute" /> class with the <see cref="P:System.Web.UI.WebControls.WebParts.WebBrowsableAttribute.Browsable" /> property set to false.</summary>
    </member>
    <member name="F:System.Web.UI.WebControls.WebParts.WebBrowsableAttribute.Yes">
      <summary>Represents an instance of the <see cref="T:System.Web.UI.WebControls.WebParts.WebBrowsableAttribute" /> class with the <see cref="P:System.Web.UI.WebControls.WebParts.WebBrowsableAttribute.Browsable" /> property set to true.</summary>
    </member>
    <member name="T:System.Web.UI.WebControls.WebParts.WebDescriptionAttribute">
      <summary>Defines the string value to use as a ToolTip for a property of a Web Parts control.</summary>
    </member>
    <member name="M:System.Web.UI.WebControls.WebParts.WebDescriptionAttribute.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Web.UI.WebControls.WebParts.WebDescriptionAttribute" /> class. </summary>
    </member>
    <member name="M:System.Web.UI.WebControls.WebParts.WebDescriptionAttribute.#ctor(System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.Web.UI.WebControls.WebParts.WebDescriptionAttribute" /> class with the specified description.</summary>
      <param name="description">The ToolTip to use in a <see cref="T:System.Web.UI.WebControls.WebParts.PropertyGridEditorPart" />. </param>
    </member>
    <member name="F:System.Web.UI.WebControls.WebParts.WebDescriptionAttribute.Default">
      <summary>Represents an instance of the <see cref="T:System.Web.UI.WebControls.WebParts.WebDescriptionAttribute" /> class with the <see cref="P:System.Web.UI.WebControls.WebParts.WebDescriptionAttribute.Description" /> property set to an empty string ("").</summary>
    </member>
    <member name="P:System.Web.UI.WebControls.WebParts.WebDescriptionAttribute.Description">
      <summary>Gets the ToolTip for a property to display in a <see cref="T:System.Web.UI.WebControls.WebParts.PropertyGridEditorPart" /> control.</summary>
      <returns>A <see cref="T:System.String" /> containing the value to display in a <see cref="T:System.Web.UI.WebControls.WebParts.PropertyGridEditorPart" />.</returns>
    </member>
    <member name="P:System.Web.UI.WebControls.WebParts.WebDescriptionAttribute.DescriptionValue">
      <summary>Gets or sets the ToolTip to display in the <see cref="T:System.Web.UI.WebControls.WebParts.PropertyGridEditorPart" /> control.</summary>
      <returns>A <see cref="T:System.String" /> containing the value to display in a <see cref="T:System.Web.UI.WebControls.WebParts.PropertyGridEditorPart" />.</returns>
    </member>
    <member name="M:System.Web.UI.WebControls.WebParts.WebDescriptionAttribute.Equals(System.Object)">
      <summary>Returns a value that indicates whether this instance is equal to a specified object.</summary>
      <returns>true if <paramref name="obj" /> equals the type and value of this instance; otherwise, false.</returns>
      <param name="obj">An <see cref="T:System.Object" /> to compare with this instance, or null. </param>
    </member>
    <member name="M:System.Web.UI.WebControls.WebParts.WebDescriptionAttribute.GetHashCode">
      <summary>Returns the hash code for the display name value.</summary>
      <returns>A 32-bit signed integer hash code.</returns>
    </member>
    <member name="M:System.Web.UI.WebControls.WebParts.WebDescriptionAttribute.IsDefaultAttribute">
      <summary>Determines whether the current instance is set to the default value.</summary>
      <returns>true if the <see cref="T:System.Web.UI.WebControls.WebParts.WebDescriptionAttribute" /> equals <see cref="F:System.Web.UI.WebControls.WebParts.WebDescriptionAttribute.Default" />; otherwise, false.</returns>
    </member>
    <member name="T:System.Web.UI.WebControls.WebParts.WebDisplayNameAttribute">
      <summary>Defines the friendly name for a property of a Web Parts control.</summary>
    </member>
    <member name="M:System.Web.UI.WebControls.WebParts.WebDisplayNameAttribute.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Web.UI.WebControls.WebParts.WebDisplayNameAttribute" /> class without a specified name. </summary>
    </member>
    <member name="M:System.Web.UI.WebControls.WebParts.WebDisplayNameAttribute.#ctor(System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.Web.UI.WebControls.WebParts.WebDisplayNameAttribute" /> class with a specified display name.</summary>
      <param name="displayName">The friendly name to use in a <see cref="T:System.Web.UI.WebControls.WebParts.PropertyGridEditorPart" />.  </param>
    </member>
    <member name="F:System.Web.UI.WebControls.WebParts.WebDisplayNameAttribute.Default">
      <summary>Represents an instance of the <see cref="T:System.Web.UI.WebControls.WebParts.WebDisplayNameAttribute" /> class with the <see cref="P:System.Web.UI.WebControls.WebParts.WebDisplayNameAttribute.DisplayName" /> property set to an empty string ("").</summary>
    </member>
    <member name="P:System.Web.UI.WebControls.WebParts.WebDisplayNameAttribute.DisplayName">
      <summary>Gets the name of a property to display in a <see cref="T:System.Web.UI.WebControls.WebParts.PropertyGridEditorPart" /> control.</summary>
      <returns>A <see cref="T:System.String" /> containing the value to display in a <see cref="T:System.Web.UI.WebControls.WebParts.PropertyGridEditorPart" />.</returns>
    </member>
    <member name="P:System.Web.UI.WebControls.WebParts.WebDisplayNameAttribute.DisplayNameValue">
      <summary>Gets or sets the name to display in the <see cref="T:System.Web.UI.WebControls.WebParts.PropertyGridEditorPart" /> control.</summary>
      <returns>A <see cref="T:System.String" /> containing the value to display in a <see cref="T:System.Web.UI.WebControls.WebParts.PropertyGridEditorPart" />.</returns>
    </member>
    <member name="M:System.Web.UI.WebControls.WebParts.WebDisplayNameAttribute.Equals(System.Object)">
      <summary>Returns a value that indicates whether this instance is equal to a specified object.</summary>
      <returns>true if <paramref name="obj" /> equals the type and value of this instance; otherwise, false.</returns>
      <param name="obj">An <see cref="T:System.Object" /> to compare with this instance, or null. </param>
    </member>
    <member name="M:System.Web.UI.WebControls.WebParts.WebDisplayNameAttribute.GetHashCode">
      <summary>Returns the hash code for the display name value.</summary>
      <returns>A 32-bit signed integer hash code.</returns>
    </member>
    <member name="M:System.Web.UI.WebControls.WebParts.WebDisplayNameAttribute.IsDefaultAttribute">
      <summary>Determines whether the current instance is set to the default value.</summary>
      <returns>true if the <see cref="T:System.Web.UI.WebControls.WebParts.WebDisplayNameAttribute" /> equals <see cref="F:System.Web.UI.WebControls.WebParts.WebDisplayNameAttribute.Default" />; otherwise, false.</returns>
    </member>
    <member name="T:System.Web.UI.WebControls.WebParts.WebPart">
      <summary>Serves as the base class for custom ASP.NET Web Parts controls, adding to the base <see cref="T:System.Web.UI.WebControls.WebParts.Part" /> class features some additional user interface (UI) properties, the ability to create connections, and personalization behavior. </summary>
    </member>
    <member name="M:System.Web.UI.WebControls.WebParts.WebPart.#ctor">
      <summary>Initializes the class for use by an inherited class instance. This constructor can only be called by an inherited class.</summary>
    </member>
    <member name="P:System.Web.UI.WebControls.WebParts.WebPart.AllowClose">
      <summary>Gets or sets a value indicating whether an end user can close a <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> control on a Web page.</summary>
      <returns>true if the control can be closed on a Web page; otherwise, false. The default value is true.</returns>
    </member>
    <member name="P:System.Web.UI.WebControls.WebParts.WebPart.AllowConnect">
      <summary>Gets or sets a value that indicates whether the <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> control allows other controls to form connections with it.</summary>
      <returns>A Boolean value that indicates whether connections can be formed with the control. The default is true.</returns>
    </member>
    <member name="P:System.Web.UI.WebControls.WebParts.WebPart.AllowEdit">
      <summary>Gets or sets a value indicating whether an end user can modify a <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> control through the user interface (UI) provided by one or more <see cref="T:System.Web.UI.WebControls.WebParts.EditorPart" /> controls.</summary>
      <returns>true if the <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> control can be modified; otherwise, false. The default value is true.</returns>
    </member>
    <member name="P:System.Web.UI.WebControls.WebParts.WebPart.AllowHide">
      <summary>Gets or sets a value indicating whether end users are allowed to hide a <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> control.</summary>
      <returns>true if the <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> control can be hidden; otherwise, false. The default value is true.</returns>
    </member>
    <member name="P:System.Web.UI.WebControls.WebParts.WebPart.AllowMinimize">
      <summary>Gets or sets a value indicating whether end users can minimize a <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> control.</summary>
      <returns>true if the <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> control can be minimized; otherwise, false. The default value is true.</returns>
    </member>
    <member name="P:System.Web.UI.WebControls.WebParts.WebPart.AllowZoneChange">
      <summary>Gets or sets a value indicating whether a user can move a <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> control between <see cref="T:System.Web.UI.WebControls.WebParts.WebPartZoneBase" /> zones.</summary>
      <returns>true if the <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> control can move between zones; otherwise, false. The default value is true.</returns>
    </member>
    <member name="P:System.Web.UI.WebControls.WebParts.WebPart.AuthorizationFilter">
      <summary>Gets or sets an arbitrary string to determine whether a <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> control is authorized to be added to a page. </summary>
      <returns>A string that authorizes a control to be added to a Web page. The default value is an empty string ("").</returns>
    </member>
    <member name="P:System.Web.UI.WebControls.WebParts.WebPart.CatalogIconImageUrl">
      <summary>Gets or sets the URL to an image that represents a Web Parts control in a catalog of controls. </summary>
      <returns>A string that represents the URL to an image used to represent the control in a catalog. The default value is an empty string ("").</returns>
      <exception cref="T:System.ArgumentException">The internal validation system has determined that the URL might contain script attacks.</exception>
    </member>
    <member name="P:System.Web.UI.WebControls.WebParts.WebPart.ChromeState">
      <summary>Gets or sets whether a part control is in a minimized or normal state.</summary>
      <returns>One of the <see cref="T:System.Web.UI.WebControls.WebParts.PartChromeState" /> values. The default is <see cref="F:System.Web.UI.WebControls.WebParts.PartChromeState.Normal" />.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">The value specified is not one of the <see cref="T:System.Web.UI.WebControls.WebParts.PartChromeState" /> values. </exception>
    </member>
    <member name="P:System.Web.UI.WebControls.WebParts.WebPart.ChromeType">
      <summary>Gets or sets the type of border that frames a Web Parts control.</summary>
      <returns>One of the <see cref="T:System.Web.UI.WebControls.WebParts.PartChromeType" /> values. The default is <see cref="F:System.Web.UI.WebControls.WebParts.PartChromeType.Default" />.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">The value is not one of the <see cref="T:System.Web.UI.WebControls.WebParts.PartChromeType" /> values. </exception>
    </member>
    <member name="P:System.Web.UI.WebControls.WebParts.WebPart.ConnectErrorMessage">
      <summary>Gets an error message to display to users if errors occur during the connection process.</summary>
      <returns>A string that contains the error message.</returns>
    </member>
    <member name="M:System.Web.UI.WebControls.WebParts.WebPart.CreateEditorParts">
      <summary>Returns a collection of custom <see cref="T:System.Web.UI.WebControls.WebParts.EditorPart" /> controls that can be used to edit a <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> control when it is in edit mode.</summary>
      <returns>An <see cref="T:System.Web.UI.WebControls.WebParts.EditorPartCollection" /> that contains custom <see cref="T:System.Web.UI.WebControls.WebParts.EditorPart" /> controls associated with a <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> control.</returns>
    </member>
    <member name="P:System.Web.UI.WebControls.WebParts.WebPart.Description">
      <summary>Gets or sets a brief phrase that summarizes what the part control does, for use in ToolTips and catalogs of part controls.</summary>
      <returns>A string that briefly summarizes the part control's functionality. The default value is an empty string ("").</returns>
    </member>
    <member name="P:System.Web.UI.WebControls.WebParts.WebPart.Direction">
      <summary>Gets or sets the horizontal direction that content flows within the control.</summary>
      <returns>A <see cref="T:System.Web.UI.WebControls.ContentDirection" /> that indicates the horizontal direction content will flow.</returns>
    </member>
    <member name="P:System.Web.UI.WebControls.WebParts.WebPart.DisplayTitle">
      <summary>Gets a string that contains the full title text actually displayed in the title bar of a <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> control instance.</summary>
      <returns>A string that represents the complete, displayed title of the control. The default value is an empty string ("").</returns>
    </member>
    <member name="P:System.Web.UI.WebControls.WebParts.WebPart.ExportMode">
      <summary>Gets or sets whether all, some, or none of a <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> control's properties can be exported. </summary>
      <returns>One of the <see cref="T:System.Web.UI.WebControls.WebParts.WebPartExportMode" /> values. The default is <see cref="F:System.Web.UI.WebControls.WebParts.WebPartExportMode.None" />.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">The value specified is not one of the <see cref="T:System.Web.UI.WebControls.WebParts.WebPartExportMode" /> values.</exception>
      <exception cref="T:System.InvalidOperationException">The control is already loaded and the personalization scope of the control is set to the <see cref="F:System.Web.UI.WebControls.WebParts.PersonalizationScope.User" /> scope.</exception>
    </member>
    <member name="P:System.Web.UI.WebControls.WebParts.WebPart.HasSharedData">
      <summary>Gets a value that indicates whether a <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> control has any shared personalization data associated with it.</summary>
      <returns>A Boolean value that indicates whether the control has shared personalization data.</returns>
    </member>
    <member name="P:System.Web.UI.WebControls.WebParts.WebPart.HasUserData">
      <summary>Gets a value that indicates whether a <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> control has any user personalization data associated with it.</summary>
      <returns>A Boolean value that indicates whether the control has any user personalization data.</returns>
    </member>
    <member name="P:System.Web.UI.WebControls.WebParts.WebPart.Height">
      <summary>Gets or sets the height of a zone.</summary>
      <returns>A <see cref="T:System.Web.UI.WebControls.Unit" /> object that indicates the height of a <see cref="T:System.Web.UI.WebControls.WebParts.WebPartZone" />. The default type of a <see cref="T:System.Web.UI.WebControls.Unit" /> is pixels, as indicated by the <see cref="P:System.Web.UI.WebControls.Unit.Type" /> property.</returns>
    </member>
    <member name="P:System.Web.UI.WebControls.WebParts.WebPart.HelpMode">
      <summary>Gets or sets the type of user interface (UI) used to display Help content for a <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> control.</summary>
      <returns>One of the <see cref="T:System.Web.UI.WebControls.WebParts.WebPartHelpMode" /> values. The default is <see cref="F:System.Web.UI.WebControls.WebParts.WebPartHelpMode.Modal" />.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">The value specified is not one of the <see cref="T:System.Web.UI.WebControls.WebParts.WebPartHelpMode" /> values.</exception>
    </member>
    <member name="P:System.Web.UI.WebControls.WebParts.WebPart.HelpUrl">
      <summary>Gets or sets the URL to a Help file for a <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> control.</summary>
      <returns>A string that represents the URL to a Help file. The default value is an empty string ("").</returns>
      <exception cref="T:System.ArgumentException">The internal validation system has determined that the URL might contain script attacks.</exception>
    </member>
    <member name="P:System.Web.UI.WebControls.WebParts.WebPart.Hidden">
      <summary>Gets or sets a value indicating whether a <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> control is displayed on a Web page.</summary>
      <returns>false if the <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> control is displayed on a Web page; otherwise, true. The default value is false.</returns>
    </member>
    <member name="P:System.Web.UI.WebControls.WebParts.WebPart.ImportErrorMessage">
      <summary>Gets or sets an error message that is used if errors occur when a <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> control is imported.</summary>
      <returns>A string that contains the error message. The default value is a standard error message supplied by the Web Parts control set. </returns>
    </member>
    <member name="P:System.Web.UI.WebControls.WebParts.WebPart.IsClosed">
      <summary>Gets a value that indicates whether a <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> control is currently closed on a Web Parts page.</summary>
      <returns>A Boolean value that indicates whether the control is closed.</returns>
    </member>
    <member name="P:System.Web.UI.WebControls.WebParts.WebPart.IsShared">
      <summary>Gets a value that indicates whether a <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> control is shared, meaning that it is visible to all users of a Web Parts page.</summary>
      <returns>true if the <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> control has shared user visibility on a Web page; otherwise, false. The default value is false.</returns>
    </member>
    <member name="P:System.Web.UI.WebControls.WebParts.WebPart.IsStandalone">
      <summary>Gets a value that indicates whether a <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> control is standalone, meaning that it is not contained within a <see cref="T:System.Web.UI.WebControls.WebParts.WebPartZoneBase" /> zone.</summary>
      <returns>true if the <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> control is not contained in a <see cref="T:System.Web.UI.WebControls.WebParts.WebPartZoneBase" /> zone; otherwise, false. </returns>
    </member>
    <member name="P:System.Web.UI.WebControls.WebParts.WebPart.IsStatic">
      <summary>Gets a value that indicates whether a <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> control is a static control, which means the control is declared in the markup of a Web Parts page and not added to the page programmatically.</summary>
      <returns>A Boolean value that indicates whether the control is static.</returns>
    </member>
    <member name="M:System.Web.UI.WebControls.WebParts.WebPart.OnClosing(System.EventArgs)">
      <summary>Enables derived classes to provide custom handling when a <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> control is closed on a Web Parts page.</summary>
      <param name="e">An <see cref="T:System.EventArgs" /> that contains the event data. </param>
    </member>
    <member name="M:System.Web.UI.WebControls.WebParts.WebPart.OnConnectModeChanged(System.EventArgs)">
      <summary>Enables derived classes to provide custom handling when a <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> control is beginning or ending the process of connecting to other controls.</summary>
      <param name="e">An <see cref="T:System.EventArgs" /> that contains the event data.</param>
    </member>
    <member name="M:System.Web.UI.WebControls.WebParts.WebPart.OnDeleting(System.EventArgs)">
      <summary>Enables derived classes to provide custom handling when a <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> control is permanently removed from a Web Parts page.</summary>
      <param name="e">An <see cref="T:System.EventArgs" /> that contains the event data.</param>
    </member>
    <member name="M:System.Web.UI.WebControls.WebParts.WebPart.OnEditModeChanged(System.EventArgs)">
      <summary>Enables derived classes to provide custom handling when a <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> control is entering or leaving edit mode.</summary>
      <param name="e">An <see cref="T:System.EventArgs" /> that contains the event data.</param>
    </member>
    <member name="M:System.Web.UI.WebControls.WebParts.WebPart.SetPersonalizationDirty">
      <summary>Sets a flag indicating that personalization data has changed for the current <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> control instance. </summary>
      <exception cref="T:System.InvalidOperationException">
        <see cref="P:System.Web.UI.WebControls.WebParts.WebPart.WebPartManager" /> is null.</exception>
    </member>
    <member name="M:System.Web.UI.WebControls.WebParts.WebPart.SetPersonalizationDirty(System.Web.UI.Control)">
      <summary>Sets a flag indicating that personalization data has changed for the specified server control that resides in a <see cref="T:System.Web.UI.WebControls.WebParts.WebPartZoneBase" /> zone.</summary>
      <param name="control">The <see cref="T:System.Web.UI.Control" /> for which the personalization data has changed.</param>
      <exception cref="T:System.ArgumentNullException">The object in the <paramref name="control" /> parameter is null.</exception>
      <exception cref="T:System.ArgumentException">The control is not associated with a page.</exception>
      <exception cref="T:System.InvalidOperationException">The page associated with the control does not have a <see cref="T:System.Web.UI.WebControls.WebParts.WebPartManager" />.</exception>
      <exception cref="T:System.ArgumentException">The control derives from <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" />. Controls that derive from <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> should use the protected <see cref="M:System.Web.UI.WebControls.WebParts.WebPart.SetPersonalizationDirty" /> method instead. </exception>
    </member>
    <member name="P:System.Web.UI.WebControls.WebParts.WebPart.Subtitle">
      <summary>Gets a string that is concatenated with the <see cref="P:System.Web.UI.WebControls.WebParts.WebPart.Title" /> property value to form a complete title for a <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> control. </summary>
      <returns>A string that serves as a subtitle for the control. The default value is an empty string ("").</returns>
    </member>
    <member name="P:System.Web.UI.WebControls.WebParts.WebPart.Title">
      <summary>Gets or sets the title of a part control.</summary>
      <returns>A string that represents the title of the part control. The default value is an empty string ("").</returns>
    </member>
    <member name="P:System.Web.UI.WebControls.WebParts.WebPart.TitleIconImageUrl">
      <summary>Gets or sets the URL to an image used to represent a Web Parts control in the control's title bar.</summary>
      <returns>A string that represents the URL to an image used to represent the control in its title bar. The default value is an empty string ("").</returns>
      <exception cref="T:System.ArgumentException">The internal validation system has determined that the URL might contain script attacks.</exception>
    </member>
    <member name="P:System.Web.UI.WebControls.WebParts.WebPart.TitleUrl">
      <summary>Gets or sets a URL to supplemental information about a <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> control. </summary>
      <returns>A string that represents a URL to more information about the <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> control. The default value is an empty string ("").</returns>
      <exception cref="T:System.ArgumentException">The internal validation system has determined that the URL might contain script attacks.</exception>
    </member>
    <member name="M:System.Web.UI.WebControls.WebParts.WebPart.TrackViewState"></member>
    <member name="P:System.Web.UI.WebControls.WebParts.WebPart.Verbs">
      <summary>Gets a collection of custom verbs associated with a <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> control.</summary>
      <returns>A <see cref="T:System.Web.UI.WebControls.WebParts.WebPartVerbCollection" /> that contains custom <see cref="T:System.Web.UI.WebControls.WebParts.WebPartVerb" /> objects associated with a <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> control. The default value is <see cref="F:System.Web.UI.WebControls.WebParts.WebPartVerbCollection.Empty" />. </returns>
    </member>
    <member name="P:System.Web.UI.WebControls.WebParts.WebPart.WebBrowsableObject">
      <summary>Gets a reference to the <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> control to enable it to be edited by custom <see cref="T:System.Web.UI.WebControls.WebParts.EditorPart" /> controls.</summary>
      <returns>A <see cref="T:System.Object" /> that consists of the child control of a <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> control.</returns>
    </member>
    <member name="P:System.Web.UI.WebControls.WebParts.WebPart.WebPartManager">
      <summary>Gets a reference to the <see cref="T:System.Web.UI.WebControls.WebParts.WebPartManager" /> control associated with a <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> control instance. </summary>
      <returns>The <see cref="T:System.Web.UI.WebControls.WebParts.WebPartManager" /> that is associated with a <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> control.</returns>
    </member>
    <member name="P:System.Web.UI.WebControls.WebParts.WebPart.Width"></member>
    <member name="P:System.Web.UI.WebControls.WebParts.WebPart.Zone">
      <summary>Gets the <see cref="T:System.Web.UI.WebControls.WebParts.WebPartZoneBase" /> zone that currently contains a <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> control.</summary>
      <returns>The <see cref="T:System.Web.UI.WebControls.WebParts.WebPartZoneBase" /> that currently contains a Web Parts control on a Web page. If a Web Parts control is currently closed on a page, the return value is null.</returns>
    </member>
    <member name="P:System.Web.UI.WebControls.WebParts.WebPart.ZoneIndex">
      <summary>Gets the index position of a <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> control within its zone.</summary>
      <returns>The numerical order of a control within its zone. The first control in a zone has an index value of zero.</returns>
    </member>
    <member name="T:System.Web.UI.WebControls.WebParts.WebPartAddingEventArgs">
      <summary>Provides data for the <see cref="E:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartAdding" /> event. </summary>
    </member>
    <member name="M:System.Web.UI.WebControls.WebParts.WebPartAddingEventArgs.#ctor(System.Web.UI.WebControls.WebParts.WebPart,System.Web.UI.WebControls.WebParts.WebPartZoneBase,System.Int32)">
      <summary>Initializes a new instance of the <see cref="T:System.Web.UI.WebControls.WebParts.WebPartAddingEventArgs" /> class. </summary>
      <param name="webPart">The <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> (or server or user control) to be added to a Web page or opened on a page.</param>
      <param name="zone">The <see cref="T:System.Web.UI.WebControls.WebParts.WebPartZoneBase" />  that <paramref name="webPart" /> is being added to.</param>
      <param name="zoneIndex">An integer that represents the ordinal position that <paramref name="webPart" /> occupies in <paramref name="zone" />, relative to other controls in <paramref name="zone" />.</param>
    </member>
    <member name="P:System.Web.UI.WebControls.WebParts.WebPartAddingEventArgs.Zone">
      <summary>Gets or sets the Web Parts zone that the Web Parts control is being added to.</summary>
      <returns>The <see cref="T:System.Web.UI.WebControls.WebParts.WebPartZoneBase" /> that the Web Parts control is being added to.</returns>
    </member>
    <member name="P:System.Web.UI.WebControls.WebParts.WebPartAddingEventArgs.ZoneIndex">
      <summary>Gets or sets the index position of a <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> control within its zone.</summary>
      <returns>The numerical order of a control within its zone. The first control in a zone has an index value of zero.</returns>
    </member>
    <member name="T:System.Web.UI.WebControls.WebParts.WebPartAddingEventHandler">
      <summary>Represents the method that handles the <see cref="E:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartAdding" /> event of a <see cref="T:System.Web.UI.WebControls.WebParts.WebPartManager" /> object.</summary>
      <param name="sender">The source of the event.</param>
      <param name="e">A <see cref="T:System.Web.UI.WebControls.WebParts.WebPartAddingEventArgs" /> that contains the event data.</param>
    </member>
    <member name="T:System.Web.UI.WebControls.WebParts.WebPartAuthorizationEventArgs">
      <summary>Provides data for the <see cref="E:System.Web.UI.WebControls.WebParts.WebPartManager.AuthorizeWebPart" /> event. </summary>
    </member>
    <member name="M:System.Web.UI.WebControls.WebParts.WebPartAuthorizationEventArgs.#ctor(System.Type,System.String,System.String,System.Boolean)">
      <summary>Initializes a new instance of the <see cref="T:System.Web.UI.WebControls.WebParts.WebPartAuthorizationEventArgs" /> class. </summary>
      <param name="type">The <see cref="T:System.Type" /> of the control being checked for authorization. </param>
      <param name="path">The relative application path to the source file for the control being authorized, if the control is a user control. </param>
      <param name="authorizationFilter">An arbitrary string value assigned to the <see cref="P:System.Web.UI.WebControls.WebParts.WebPart.AuthorizationFilter" /> property of a <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> control, used for authorizing whether a control can be added to a page. </param>
      <param name="isShared">Indicates whether the control being checked for authorization is a shared control, meaning that it is visible to many or all users of the application, and its <see cref="P:System.Web.UI.WebControls.WebParts.WebPart.IsShared" /> property value is set to true. </param>
    </member>
    <member name="P:System.Web.UI.WebControls.WebParts.WebPartAuthorizationEventArgs.AuthorizationFilter">
      <summary>Gets the string value assigned to the <see cref="P:System.Web.UI.WebControls.WebParts.WebPart.AuthorizationFilter" /> property of a <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> control, used for authorizing whether a control can be added to a page.</summary>
      <returns>A <see cref="T:System.String" /> used in determining whether a control is authorized to be added to a page.</returns>
    </member>
    <member name="P:System.Web.UI.WebControls.WebParts.WebPartAuthorizationEventArgs.IsAuthorized">
      <summary>Gets or sets the value indicating whether a Web Parts control can be added to a page.</summary>
      <returns>true if the Web Parts control can be added to the page; otherwise, false.</returns>
    </member>
    <member name="P:System.Web.UI.WebControls.WebParts.WebPartAuthorizationEventArgs.IsShared">
      <summary>Gets a value that indicates whether a Web Parts control is visible to all users of a Web Parts page.</summary>
      <returns>true if the Web Parts control is visible to all users of the page; otherwise, false.</returns>
    </member>
    <member name="P:System.Web.UI.WebControls.WebParts.WebPartAuthorizationEventArgs.Path">
      <summary>Gets the relative application path to the source file for the control being authorized, if the control is a user control.</summary>
      <returns>A <see cref="T:System.String" /> containing the relative application path.</returns>
    </member>
    <member name="P:System.Web.UI.WebControls.WebParts.WebPartAuthorizationEventArgs.Type">
      <summary>Gets the <see cref="T:System.Type" /> of the Web Parts control being checked for authorization.</summary>
      <returns>The <see cref="T:System.Type" /> of the control being checked for authorization.</returns>
    </member>
    <member name="T:System.Web.UI.WebControls.WebParts.WebPartAuthorizationEventHandler">
      <summary>Represents the method that handles the <see cref="E:System.Web.UI.WebControls.WebParts.WebPartManager.AuthorizeWebPart" /> event of a <see cref="T:System.Web.UI.WebControls.WebParts.WebPartManager" /> object. </summary>
      <param name="sender">The source of the event. </param>
      <param name="e">A <see cref="T:System.Web.UI.WebControls.WebParts.WebPartAuthorizationEventArgs" /> that contains the event data. </param>
    </member>
    <member name="T:System.Web.UI.WebControls.WebParts.WebPartCancelEventArgs">
      <summary>Provides data for the <see cref="E:System.Web.UI.WebControls.WebParts.WebPartManager.SelectedWebPartChanging" /> event, <see cref="E:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartClosing" /> event, and <see cref="E:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartDeleting" /> event. </summary>
    </member>
    <member name="M:System.Web.UI.WebControls.WebParts.WebPartCancelEventArgs.#ctor(System.Web.UI.WebControls.WebParts.WebPart)">
      <summary>Initializes a new instance of the <see cref="T:System.Web.UI.WebControls.WebParts.WebPartCancelEventArgs" /> class. </summary>
      <param name="webPart">The <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> (or server or user control) involved in the event. </param>
    </member>
    <member name="P:System.Web.UI.WebControls.WebParts.WebPartCancelEventArgs.WebPart">
      <summary>Gets the Web Parts control involved in the cancelable event.</summary>
      <returns>A <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> involved in a <see cref="E:System.Web.UI.WebControls.WebParts.WebPartManager.SelectedWebPartChanging" />, <see cref="E:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartClosing" />, or <see cref="E:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartDeleting" /> event.</returns>
    </member>
    <member name="T:System.Web.UI.WebControls.WebParts.WebPartCancelEventHandler">
      <summary>Represents the method that will handle the <see cref="E:System.Web.UI.WebControls.WebParts.WebPartManager.SelectedWebPartChanging" /> event, <see cref="E:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartClosing" /> event, or <see cref="E:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartDeleting" /> event of the <see cref="T:System.Web.UI.WebControls.WebParts.WebPartManager" /> class. </summary>
      <param name="sender">The source of the event.</param>
      <param name="e">A <see cref="T:System.Web.UI.WebControls.WebParts.WebPartCancelEventArgs" /> that contains the event data. </param>
    </member>
    <member name="T:System.Web.UI.WebControls.WebParts.WebPartChrome">
      <summary>Enables developers to override the rendering for only the selected sections of <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> or server controls in a <see cref="T:System.Web.UI.WebControls.WebParts.WebPartZoneBase" /> zone.</summary>
    </member>
    <member name="M:System.Web.UI.WebControls.WebParts.WebPartChrome.#ctor(System.Web.UI.WebControls.WebParts.WebPartZoneBase,System.Web.UI.WebControls.WebParts.WebPartManager)">
      <summary>Initializes a new instance of the control.</summary>
      <param name="zone">The associated <see cref="T:System.Web.UI.WebControls.WebParts.WebPartZoneBase" /> control.</param>
      <param name="manager">The <see cref="T:System.Web.UI.WebControls.WebParts.WebPartManager" /> control on the current page. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="zone" /> is null.</exception>
    </member>
    <member name="M:System.Web.UI.WebControls.WebParts.WebPartChrome.CreateWebPartChromeStyle(System.Web.UI.WebControls.WebParts.WebPart,System.Web.UI.WebControls.WebParts.PartChromeType)">
      <summary>Creates the style object that supplies style attributes for each <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> control rendered by the <see cref="T:System.Web.UI.WebControls.WebParts.WebPartChrome" /> object.</summary>
      <returns>A <see cref="T:System.Web.UI.WebControls.Style" /> that contains style attributes for the <paramref name="webPart" />.</returns>
      <param name="webPart">The control that is currently being rendered. </param>
      <param name="chromeType">The type of chrome for a particular control; one of the <see cref="T:System.Web.UI.WebControls.WebParts.PartChromeType" />  enumeration values.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="webPart" /> is null.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="chromeType" /> is not one of the <see cref="T:System.Web.UI.WebControls.WebParts.PartChromeType" />  enumeration values.</exception>
    </member>
    <member name="P:System.Web.UI.WebControls.WebParts.WebPartChrome.DragDropEnabled">
      <summary>Gets a value that indicates whether controls can be dragged into and out of the zone.</summary>
      <returns>A Boolean value that indicates whether controls can be dragged.</returns>
    </member>
    <member name="M:System.Web.UI.WebControls.WebParts.WebPartChrome.FilterWebPartVerbs(System.Web.UI.WebControls.WebParts.WebPartVerbCollection,System.Web.UI.WebControls.WebParts.WebPart)">
      <summary>Excludes specific verbs from being rendered, based on criteria provided by a developer.</summary>
      <returns>A <see cref="T:System.Web.UI.WebControls.WebParts.WebPartVerbCollection" /> containing all verbs associated with the <paramref name="webPart" />.</returns>
      <param name="verbs">The collection of all verbs associated with the control referenced in the <paramref name="webPart" /> parameter. </param>
      <param name="webPart">The control currently being rendered. </param>
      <exception cref="T:System.ArgumentNullException">The <paramref name="verbs" /> collection is null.- or - <paramref name="webPart" /> is null.</exception>
    </member>
    <member name="M:System.Web.UI.WebControls.WebParts.WebPartChrome.GetWebPartChromeClientID(System.Web.UI.WebControls.WebParts.WebPart)">
      <summary>Gets the client ID for the <see cref="T:System.Web.UI.WebControls.WebParts.WebPartChrome" /> object as rendered in a Web page.</summary>
      <returns>A string that contains the client ID for the <see cref="T:System.Web.UI.WebControls.WebParts.WebPartChrome" /> object.</returns>
      <param name="webPart">The control currently being rendered. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="webPart" /> is null.</exception>
    </member>
    <member name="M:System.Web.UI.WebControls.WebParts.WebPartChrome.GetWebPartTitleClientID(System.Web.UI.WebControls.WebParts.WebPart)">
      <summary>Gets the client ID for the table cell that contains the title for a <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> control.</summary>
      <returns>A string that contains the client ID for the title of the <paramref name="webPart" />.</returns>
      <param name="webPart">The control currently being rendered. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="webPart" /> is null.</exception>
    </member>
    <member name="M:System.Web.UI.WebControls.WebParts.WebPartChrome.GetWebPartVerbs(System.Web.UI.WebControls.WebParts.WebPart)">
      <summary>Gets a collection of verbs that should be rendered with a <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> control.</summary>
      <returns>A <see cref="T:System.Web.UI.WebControls.WebParts.WebPartVerbCollection" /> containing all the verbs that should be rendered with <paramref name="webPart" />.</returns>
      <param name="webPart">The control currently being rendered. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="webPart" /> is null.</exception>
    </member>
    <member name="M:System.Web.UI.WebControls.WebParts.WebPartChrome.PerformPreRender">
      <summary>Performs tasks that must be done prior to rendering <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> controls.</summary>
    </member>
    <member name="M:System.Web.UI.WebControls.WebParts.WebPartChrome.RenderPartContents(System.Web.UI.HtmlTextWriter,System.Web.UI.WebControls.WebParts.WebPart)">
      <summary>Renders the main content area of a <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> control, excluding the header and footer.</summary>
      <param name="writer">The <see cref="T:System.Web.UI.HtmlTextWriter" /> that receives the <paramref name="webPart" /> content. </param>
      <param name="webPart">The control currently being rendered. </param>
    </member>
    <member name="M:System.Web.UI.WebControls.WebParts.WebPartChrome.RenderWebPart(System.Web.UI.HtmlTextWriter,System.Web.UI.WebControls.WebParts.WebPart)">
      <summary>Renders a complete <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> control with all its sections.</summary>
      <param name="writer">The <see cref="T:System.Web.UI.HtmlTextWriter" /> that receives the <paramref name="webPart" /> content. </param>
      <param name="webPart">The control currently being rendered. </param>
      <exception cref="T:System.ArgumentNullException">The control that <paramref name="webPart" /> refers to is null. </exception>
    </member>
    <member name="P:System.Web.UI.WebControls.WebParts.WebPartChrome.WebPartManager">
      <summary>Gets a reference to the current <see cref="T:System.Web.UI.WebControls.WebParts.WebPartManager" /> instance.</summary>
      <returns>A reference to the current <see cref="T:System.Web.UI.WebControls.WebParts.WebPartManager" /> on the Web page.</returns>
    </member>
    <member name="P:System.Web.UI.WebControls.WebParts.WebPartChrome.Zone">
      <summary>Gets a reference to the associated <see cref="T:System.Web.UI.WebControls.WebParts.WebPartZoneBase" /> zone.</summary>
      <returns>A reference to a <see cref="T:System.Web.UI.WebControls.WebParts.WebPartZoneBase" /> that is associated with the <see cref="T:System.Web.UI.WebControls.WebParts.WebPartChrome" />.</returns>
    </member>
    <member name="T:System.Web.UI.WebControls.WebParts.WebPartCollection">
      <summary>Contains a collection of <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> controls used to track and manage related groups of controls. This class cannot be inherited.</summary>
    </member>
    <member name="M:System.Web.UI.WebControls.WebParts.WebPartCollection.#ctor">
      <summary>Initializes an empty new instance of the <see cref="T:System.Web.UI.WebControls.WebParts.WebPartCollection" /> class.</summary>
    </member>
    <member name="M:System.Web.UI.WebControls.WebParts.WebPartCollection.#ctor(System.Collections.ICollection)">
      <summary>Initializes a new instance of a <see cref="T:System.Web.UI.WebControls.WebParts.WebPartCollection" /> object by passing in an <see cref="T:System.Collections.ICollection" /> collection of <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> controls.</summary>
      <param name="webParts">An <see cref="T:System.Collections.ICollection" /> of <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> controls. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="webParts" /> is null.</exception>
      <exception cref="T:System.ArgumentException">An object in the <paramref name="webParts" /> collection is null.- or -An object in the <paramref name="webParts" /> collection is not a of type <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" />.</exception>
    </member>
    <member name="M:System.Web.UI.WebControls.WebParts.WebPartCollection.Contains(System.Web.UI.WebControls.WebParts.WebPart)">
      <summary>Returns a value indicating whether a particular control exists in the collection.</summary>
      <returns>A Boolean value that indicates whether a particular control is in the collection.</returns>
      <param name="value">A <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> that is checked to determine whether it is in the collection.</param>
    </member>
    <member name="M:System.Web.UI.WebControls.WebParts.WebPartCollection.CopyTo(System.Web.UI.WebControls.WebParts.WebPart[],System.Int32)">
      <summary>Copies the collection to an array of <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> objects.</summary>
      <param name="array">An array of <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" />  objects to contain the copied collection. </param>
      <param name="index">The starting point in the array at which to place the collection contents. </param>
    </member>
    <member name="M:System.Web.UI.WebControls.WebParts.WebPartCollection.IndexOf(System.Web.UI.WebControls.WebParts.WebPart)">
      <summary>Returns the position of a particular member of the collection.</summary>
      <returns>An integer that indicates the position of a particular object in the collection.</returns>
      <param name="value">A <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> that is a member of the collection. </param>
    </member>
    <member name="P:System.Web.UI.WebControls.WebParts.WebPartCollection.Item(System.Int32)">
      <summary>Returns a member of the collection based on its position in the collection.</summary>
      <returns>A <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> at the specified index in the collection.</returns>
      <param name="index">The index of a particular <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> control in a collection. </param>
    </member>
    <member name="P:System.Web.UI.WebControls.WebParts.WebPartCollection.Item(System.String)">
      <summary>Returns a member of the collection based on a unique string identifier.</summary>
      <returns>The first <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> in the collection whose ID equals the value of <paramref name="id" />.</returns>
      <param name="id">The unique identifier for a particular <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" />  control in a collection.</param>
    </member>
    <member name="T:System.Web.UI.WebControls.WebParts.WebPartConnection">
      <summary>Provides an object that enables two <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> controls to form a connection. This class cannot be inherited.</summary>
    </member>
    <member name="M:System.Web.UI.WebControls.WebParts.WebPartConnection.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Web.UI.WebControls.WebParts.WebPartConnection" /> class. </summary>
    </member>
    <member name="P:System.Web.UI.WebControls.WebParts.WebPartConnection.Consumer">
      <summary>Gets a <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> object that is acting as the consumer control in a connection.</summary>
      <returns>A <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> that represents the Web Parts control acting as the consumer in a connection.</returns>
      <exception cref="T:System.InvalidOperationException">The length of the <see cref="P:System.Web.UI.WebControls.WebParts.WebPartConnection.ConsumerID" /> property is zero.</exception>
    </member>
    <member name="P:System.Web.UI.WebControls.WebParts.WebPartConnection.ConsumerConnectionPoint">
      <summary>Gets the object that serves as a connection point for a control that is acting as a consumer in a connection.</summary>
      <returns>A <see cref="T:System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint" /> associated with the consumer control in a connection. </returns>
    </member>
    <member name="P:System.Web.UI.WebControls.WebParts.WebPartConnection.ConsumerConnectionPointID">
      <summary>Gets or sets the property value on a connection that references the ID of the object serving as the consumer connection point for that connection.</summary>
      <returns>A string that contains the ID for the consumer connection point.</returns>
    </member>
    <member name="P:System.Web.UI.WebControls.WebParts.WebPartConnection.ConsumerID">
      <summary>Gets or sets the property value on a connection that references the ID of the <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> control acting as a consumer for that connection.</summary>
      <returns>A string that contains the ID of the control acting as a consumer in a connection. </returns>
    </member>
    <member name="P:System.Web.UI.WebControls.WebParts.WebPartConnection.ID">
      <summary>Gets or sets the ID of a <see cref="T:System.Web.UI.WebControls.WebParts.WebPartConnection" /> object.</summary>
      <returns>A string that contains the ID of a <see cref="T:System.Web.UI.WebControls.WebParts.WebPartConnection" />.</returns>
    </member>
    <member name="P:System.Web.UI.WebControls.WebParts.WebPartConnection.IsActive">
      <summary>Gets a value that indicates whether a <see cref="T:System.Web.UI.WebControls.WebParts.WebPartConnection" /> object is currently established and able to exchange data between its provider and consumer controls.</summary>
      <returns>true if the connection is active; otherwise, false.</returns>
    </member>
    <member name="P:System.Web.UI.WebControls.WebParts.WebPartConnection.IsShared">
      <summary>Gets a value that indicates whether a <see cref="T:System.Web.UI.WebControls.WebParts.WebPartConnection" /> object is visible to all users or only to the current user.</summary>
      <returns>true if the connection is shared; otherwise, false.</returns>
    </member>
    <member name="P:System.Web.UI.WebControls.WebParts.WebPartConnection.IsStatic">
      <summary>Gets a value that indicates whether a <see cref="T:System.Web.UI.WebControls.WebParts.WebPartConnection" /> object is declared in the markup of a Web page, or created programmatically. </summary>
      <returns>true if the connection is static; otherwise, false.</returns>
    </member>
    <member name="P:System.Web.UI.WebControls.WebParts.WebPartConnection.Provider">
      <summary>Gets a <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> control that acts as the provider in a Web Parts connection.</summary>
      <returns>A <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> that acts as the provider of data.</returns>
      <exception cref="T:System.InvalidOperationException">The length of the <see cref="P:System.Web.UI.WebControls.WebParts.WebPartConnection.ProviderID" /> property value is zero.</exception>
    </member>
    <member name="P:System.Web.UI.WebControls.WebParts.WebPartConnection.ProviderConnectionPoint">
      <summary>Gets the object that serves as a connection point for a <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> control acting as a provider for a connection.</summary>
      <returns>A <see cref="T:System.Web.UI.WebControls.WebParts.ProviderConnectionPoint" /> associated with the provider control in a connection.</returns>
    </member>
    <member name="P:System.Web.UI.WebControls.WebParts.WebPartConnection.ProviderConnectionPointID">
      <summary>Gets or sets the property value on a connection that references the ID of the object serving as the provider connection point for that connection.</summary>
      <returns>A string that contains the ID for a provider connection point object.</returns>
    </member>
    <member name="P:System.Web.UI.WebControls.WebParts.WebPartConnection.ProviderID">
      <summary>Gets or sets the property value on a connection that references the ID of the <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> control acting as a provider for that connection.</summary>
      <returns>A string that contains the ID of the provider control.</returns>
    </member>
    <member name="M:System.Web.UI.WebControls.WebParts.WebPartConnection.ToString">
      <summary>Overrides the inherited <see cref="M:System.Object.ToString" /> method and returns a short type name for the connection object.</summary>
      <returns>A string that contains the short (unqualified) type name of a <see cref="T:System.Web.UI.WebControls.WebParts.WebPartConnection" />.</returns>
    </member>
    <member name="P:System.Web.UI.WebControls.WebParts.WebPartConnection.Transformer">
      <summary>Gets a <see cref="T:System.Web.UI.WebControls.WebParts.WebPartTransformer" /> object that is used to transform data between two otherwise incompatible connection points in a Web Parts connection.</summary>
      <returns>A <see cref="T:System.Web.UI.WebControls.WebParts.WebPartTransformer" />. The default value is null.</returns>
    </member>
    <member name="P:System.Web.UI.WebControls.WebParts.WebPartConnection.Transformers">
      <summary>Gets a collection of <see cref="T:System.Web.UI.WebControls.WebParts.WebPartTransformer" /> objects used internally by the Web Parts control set. </summary>
      <returns>A <see cref="T:System.Web.UI.WebControls.WebParts.WebPartTransformerCollection" /> containing <see cref="T:System.Web.UI.WebControls.WebParts.WebPartTransformer" /> objects.</returns>
    </member>
    <member name="T:System.Web.UI.WebControls.WebParts.WebPartConnectionCollection">
      <summary>Represents a collection of connections for a control in a Web Parts zone. This class cannot be inherited.</summary>
    </member>
    <member name="M:System.Web.UI.WebControls.WebParts.WebPartConnectionCollection.Add(System.Web.UI.WebControls.WebParts.WebPartConnection)">
      <summary>Adds a member to the <see cref="T:System.Web.UI.WebControls.WebParts.WebPartConnectionCollection" /> collection.</summary>
      <returns>An integer indicating the index where the connection will be added to the collection.</returns>
      <param name="value">The <see cref="T:System.Web.UI.WebControls.WebParts.WebPartConnection" />  to be added to the collection.</param>
    </member>
    <member name="M:System.Web.UI.WebControls.WebParts.WebPartConnectionCollection.Contains(System.Web.UI.WebControls.WebParts.WebPartConnection)">
      <summary>Determines whether the specified <see cref="T:System.Web.UI.WebControls.WebParts.WebPartConnection" /> object is in the collection.</summary>
      <returns>true if the object is in the collection; otherwise, false.</returns>
      <param name="value">The <see cref="T:System.Web.UI.WebControls.WebParts.WebPartConnection" /> to search for.</param>
    </member>
    <member name="M:System.Web.UI.WebControls.WebParts.WebPartConnectionCollection.CopyTo(System.Web.UI.WebControls.WebParts.WebPartConnection[],System.Int32)">
      <summary>Copies the elements of the <see cref="T:System.Web.UI.WebControls.WebParts.WebPartConnectionCollection" /> collection to an array, starting at a particular array index.</summary>
      <param name="array">The one-dimensional array into which the elements from the <see cref="T:System.Web.UI.WebControls.WebParts.WebPartConnectionCollection" /> are copied. The array must have zero-based indexing.</param>
      <param name="index">The zero-based index in <paramref name="array" /> at which copying begins.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="array" /> is null.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index " />is less than zero.</exception>
    </member>
    <member name="M:System.Web.UI.WebControls.WebParts.WebPartConnectionCollection.IndexOf(System.Web.UI.WebControls.WebParts.WebPartConnection)">
      <summary>Determines the index of the specified <see cref="T:System.Web.UI.WebControls.WebParts.WebPartConnection" /> object in the collection.</summary>
      <returns>The zero-based index of the first occurrence of <paramref name="value" /> within the collection, if found; otherwise, -1.</returns>
      <param name="value">The <see cref="T:System.Web.UI.WebControls.WebParts.WebPartConnection" /> to determine the index of.</param>
    </member>
    <member name="M:System.Web.UI.WebControls.WebParts.WebPartConnectionCollection.Insert(System.Int32,System.Web.UI.WebControls.WebParts.WebPartConnection)">
      <summary>Adds the specified <see cref="T:System.Web.UI.WebControls.WebParts.WebPartConnection" /> object to the collection at the specified index location.</summary>
      <param name="index">The zero-based index location at which to insert the <see cref="T:System.Web.UI.WebControls.WebParts.WebPartConnection" />.</param>
      <param name="value">The <see cref="T:System.Web.UI.WebControls.WebParts.WebPartConnection" /> to insert.</param>
    </member>
    <member name="P:System.Web.UI.WebControls.WebParts.WebPartConnectionCollection.IsReadOnly">
      <summary>Gets a value indicating whether the <see cref="T:System.Web.UI.WebControls.WebParts.WebPartConnectionCollection" /> collection is read-only.</summary>
      <returns>true if the <see cref="T:System.Web.UI.WebControls.WebParts.WebPartConnectionCollection" /> is read-only; otherwise, false.</returns>
    </member>
    <member name="P:System.Web.UI.WebControls.WebParts.WebPartConnectionCollection.Item(System.Int32)">
      <summary>Gets the <see cref="T:System.Web.UI.WebControls.WebParts.WebPartConnection" /> object at the specified index.</summary>
      <returns>The <see cref="T:System.Web.UI.WebControls.WebParts.WebPartConnection" /> at the index specified.</returns>
      <param name="index">The zero-based index location at which to get the <see cref="T:System.Web.UI.WebControls.WebParts.WebPartConnection" />.</param>
    </member>
    <member name="P:System.Web.UI.WebControls.WebParts.WebPartConnectionCollection.Item(System.String)">
      <summary>Gets a <see cref="T:System.Web.UI.WebControls.WebParts.WebPartConnection" /> object with the specified connection ID.</summary>
      <returns>The first occurrence of the <see cref="T:System.Web.UI.WebControls.WebParts.WebPartConnection" /> with the specified connection ID in the collection.</returns>
      <param name="id">The connection ID of the <see cref="T:System.Web.UI.WebControls.WebParts.WebPartConnection" /> to be retrieved.</param>
    </member>
    <member name="M:System.Web.UI.WebControls.WebParts.WebPartConnectionCollection.Remove(System.Web.UI.WebControls.WebParts.WebPartConnection)">
      <summary>Removes the specified <see cref="T:System.Web.UI.WebControls.WebParts.WebPartConnection" /> object from the collection.</summary>
      <param name="value">The <see cref="T:System.Web.UI.WebControls.WebParts.WebPartConnection" /> to be removed.</param>
    </member>
    <member name="T:System.Web.UI.WebControls.WebParts.WebPartConnectionsCancelEventArgs">
      <summary>Provides data for the <see cref="E:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartsConnecting" /> and <see cref="E:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartsDisconnecting" /> events. </summary>
    </member>
    <member name="M:System.Web.UI.WebControls.WebParts.WebPartConnectionsCancelEventArgs.#ctor(System.Web.UI.WebControls.WebParts.WebPart,System.Web.UI.WebControls.WebParts.ProviderConnectionPoint,System.Web.UI.WebControls.WebParts.WebPart,System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint)">
      <summary>Initializes a new instance of the <see cref="T:System.Web.UI.WebControls.WebParts.WebPartConnectionsCancelEventArgs" /> class without a specified connection. </summary>
      <param name="provider">The Web Parts control providing data in the connection. </param>
      <param name="providerConnectionPoint">The connection point for providing data. </param>
      <param name="consumer">The Web Parts control consuming data in the connection. </param>
      <param name="consumerConnectionPoint">The connection point for consuming data. </param>
    </member>
    <member name="M:System.Web.UI.WebControls.WebParts.WebPartConnectionsCancelEventArgs.#ctor(System.Web.UI.WebControls.WebParts.WebPart,System.Web.UI.WebControls.WebParts.ProviderConnectionPoint,System.Web.UI.WebControls.WebParts.WebPart,System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint,System.Web.UI.WebControls.WebParts.WebPartConnection)">
      <summary>Initializes a new instance of the <see cref="T:System.Web.UI.WebControls.WebParts.WebPartConnectionsCancelEventArgs" /> class with the specified connection. </summary>
      <param name="provider">The Web Parts control providing data in the connection. </param>
      <param name="providerConnectionPoint">The connection point for providing data. </param>
      <param name="consumer">The Web Parts control consuming data in the connection. </param>
      <param name="consumerConnectionPoint">The connection point for consuming data. </param>
      <param name="connection">The Web Parts connection involved in the <see cref="E:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartsConnecting" /> or <see cref="E:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartsDisconnecting" /> event. </param>
    </member>
    <member name="P:System.Web.UI.WebControls.WebParts.WebPartConnectionsCancelEventArgs.Connection">
      <summary>Gets the Web Parts connection involved in the event.</summary>
      <returns>The <see cref="T:System.Web.UI.WebControls.WebParts.WebPartConnection" /> involved in the <see cref="E:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartsConnecting" /> or <see cref="E:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartsDisconnecting" /> event.</returns>
    </member>
    <member name="P:System.Web.UI.WebControls.WebParts.WebPartConnectionsCancelEventArgs.Consumer">
      <summary>Gets the Web Parts control acting as the consumer in the connection.</summary>
      <returns>The <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> acting as the consumer in the connection.</returns>
    </member>
    <member name="P:System.Web.UI.WebControls.WebParts.WebPartConnectionsCancelEventArgs.ConsumerConnectionPoint">
      <summary>Gets the connection point that consumes data in the Web Parts connection.</summary>
      <returns>A <see cref="T:System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint" />.</returns>
    </member>
    <member name="P:System.Web.UI.WebControls.WebParts.WebPartConnectionsCancelEventArgs.Provider">
      <summary>Gets the Web Parts control acting as the provider in the connection.</summary>
      <returns>The <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> acting as the provider in the connection.</returns>
    </member>
    <member name="P:System.Web.UI.WebControls.WebParts.WebPartConnectionsCancelEventArgs.ProviderConnectionPoint">
      <summary>Gets the connection point that provides data in the Web Parts connection.</summary>
      <returns>A <see cref="T:System.Web.UI.WebControls.WebParts.ProviderConnectionPoint" />.</returns>
    </member>
    <member name="T:System.Web.UI.WebControls.WebParts.WebPartConnectionsCancelEventHandler">
      <summary>Represents the method that will handle the <see cref="E:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartsConnecting" /> event or <see cref="E:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartsDisconnecting" /> event of a <see cref="T:System.Web.UI.WebControls.WebParts.WebPartManager" /> control. </summary>
      <param name="sender">The source of the event. </param>
      <param name="e">A <see cref="T:System.Web.UI.WebControls.WebParts.WebPartConnectionsCancelEventArgs" /> that contains the event data.</param>
    </member>
    <member name="T:System.Web.UI.WebControls.WebParts.WebPartConnectionsEventArgs">
      <summary>Provides the event data for the <see cref="E:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartsConnected" /> and <see cref="E:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartsDisconnected" /> events of the <see cref="T:System.Web.UI.WebControls.WebParts.WebPartManager" /> control.</summary>
    </member>
    <member name="M:System.Web.UI.WebControls.WebParts.WebPartConnectionsEventArgs.#ctor(System.Web.UI.WebControls.WebParts.WebPart,System.Web.UI.WebControls.WebParts.ProviderConnectionPoint,System.Web.UI.WebControls.WebParts.WebPart,System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint)">
      <summary>Initializes a new instance of the <see cref="T:System.Web.UI.WebControls.WebParts.WebPartConnectionsEventArgs" /> class without requiring a <see cref="T:System.Web.UI.WebControls.WebParts.WebPartConnection" /> object.</summary>
      <param name="provider">The control acting as the provider.</param>
      <param name="providerConnectionPoint">The provider connection point.</param>
      <param name="consumer">The control acting as the consumer.</param>
      <param name="consumerConnectionPoint">The consumer connection point.</param>
    </member>
    <member name="M:System.Web.UI.WebControls.WebParts.WebPartConnectionsEventArgs.#ctor(System.Web.UI.WebControls.WebParts.WebPart,System.Web.UI.WebControls.WebParts.ProviderConnectionPoint,System.Web.UI.WebControls.WebParts.WebPart,System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint,System.Web.UI.WebControls.WebParts.WebPartConnection)">
      <summary>Initializes a new instance of the class using the specified <see cref="T:System.Web.UI.WebControls.WebParts.WebPartConnection" /> object.</summary>
      <param name="provider">The <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> or server control acting as the provider.</param>
      <param name="providerConnectionPoint">The <see cref="T:System.Web.UI.WebControls.WebParts.ProviderConnectionPoint" /> for the connection.</param>
      <param name="consumer">The <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> or server control acting as the consumer.</param>
      <param name="consumerConnectionPoint">The <see cref="T:System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint" />  for the connection.</param>
      <param name="connection">The <see cref="T:System.Web.UI.WebControls.WebParts.WebPartConnection" /> object.</param>
    </member>
    <member name="P:System.Web.UI.WebControls.WebParts.WebPartConnectionsEventArgs.Connection">
      <summary>Gets the <see cref="T:System.Web.UI.WebControls.WebParts.WebPartConnection" /> object of the current connection.</summary>
      <returns>The current <see cref="T:System.Web.UI.WebControls.WebParts.WebPartConnection" />.</returns>
    </member>
    <member name="P:System.Web.UI.WebControls.WebParts.WebPartConnectionsEventArgs.Consumer">
      <summary>Gets the <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> control that is acting as the consumer in the connection.</summary>
      <returns>The <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> acting as the consumer.</returns>
    </member>
    <member name="P:System.Web.UI.WebControls.WebParts.WebPartConnectionsEventArgs.ConsumerConnectionPoint">
      <summary>Gets the <see cref="T:System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint" /> object of the current connection.</summary>
      <returns>The <see cref="T:System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint" /> of the current connection.</returns>
    </member>
    <member name="P:System.Web.UI.WebControls.WebParts.WebPartConnectionsEventArgs.Provider">
      <summary>Gets the <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> control that is acting as the provider in the connection.</summary>
      <returns>The <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> acting as the provider.</returns>
    </member>
    <member name="P:System.Web.UI.WebControls.WebParts.WebPartConnectionsEventArgs.ProviderConnectionPoint">
      <summary>Gets the <see cref="T:System.Web.UI.WebControls.WebParts.ProviderConnectionPoint" /> object of the current connection.</summary>
      <returns>The <see cref="T:System.Web.UI.WebControls.WebParts.ProviderConnectionPoint" /> of the current connection.</returns>
    </member>
    <member name="T:System.Web.UI.WebControls.WebParts.WebPartConnectionsEventHandler">
      <summary>Represents the method that will handle the <see cref="E:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartsConnected" /> and <see cref="E:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartsDisconnected" /> events of the <see cref="T:System.Web.UI.WebControls.WebParts.WebPartManager" /> control. </summary>
      <param name="sender">The source of the event.</param>
      <param name="e">A <see cref="T:System.Web.UI.WebControls.WebParts.WebPartConnectionsEventArgs" /> that contains the event data.</param>
    </member>
    <member name="T:System.Web.UI.WebControls.WebParts.WebPartDescription">
      <summary>Provides information about a <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> control that you can display in a catalog of Web Parts controls without having to create an instance of the control.</summary>
    </member>
    <member name="M:System.Web.UI.WebControls.WebParts.WebPartDescription.#ctor(System.String,System.String,System.String,System.String)">
      <summary>Initializes a new instance of the class by using several strings that contain description information for a <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> control.</summary>
      <param name="id">The value to assign to the <see cref="P:System.Web.UI.WebControls.WebParts.WebPartDescription.ID" />. </param>
      <param name="title">The value to assign to the <see cref="P:System.Web.UI.WebControls.WebParts.WebPartDescription.Title" />. </param>
      <param name="description">The value to assign to the <see cref="P:System.Web.UI.WebControls.WebParts.WebPartDescription.Description" />.  </param>
      <param name="imageUrl">The value to assign to the <see cref="P:System.Web.UI.WebControls.WebParts.WebPartDescription.CatalogIconImageUrl" />. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="id" /> or <paramref name="title" /> is null or an empty string ("").</exception>
    </member>
    <member name="M:System.Web.UI.WebControls.WebParts.WebPartDescription.#ctor(System.Web.UI.WebControls.WebParts.WebPart)">
      <summary>Initializes a new instance of the class when a <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> control instance is available.</summary>
      <param name="part">A <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> control whose information is contained in a <see cref="T:System.Web.UI.WebControls.WebParts.WebPartDescription" />. </param>
      <exception cref="T:System.ArgumentException">The <see cref="P:System.Web.UI.Control.ID" /> property of <paramref name="part" /> is null or an empty string ("").</exception>
    </member>
    <member name="P:System.Web.UI.WebControls.WebParts.WebPartDescription.CatalogIconImageUrl">
      <summary>Gets a URL containing the path to an image used as an icon for a <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> control.</summary>
      <returns>A string that contains a URL; the default value is an empty string ("").</returns>
    </member>
    <member name="P:System.Web.UI.WebControls.WebParts.WebPartDescription.Description">
      <summary>Gets the text of a description for a <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> control.</summary>
      <returns>A string that contains the description for a <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> control; the default value is an empty string ("").</returns>
    </member>
    <member name="P:System.Web.UI.WebControls.WebParts.WebPartDescription.ID">
      <summary>Gets the ID of a corresponding <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> control.</summary>
      <returns>A string that contains the ID of the control.</returns>
    </member>
    <member name="P:System.Web.UI.WebControls.WebParts.WebPartDescription.Title">
      <summary>Gets the title text of a corresponding <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> control.</summary>
      <returns>A string that contains the title of the corresponding control. The default value is a calculated string supplied by the .NET Framework.</returns>
    </member>
    <member name="T:System.Web.UI.WebControls.WebParts.WebPartDescriptionCollection">
      <summary>Consists of a collection of <see cref="T:System.Web.UI.WebControls.WebParts.WebPartDescription" /> objects to be used with catalogs of <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> controls. This class cannot be inherited.</summary>
    </member>
    <member name="M:System.Web.UI.WebControls.WebParts.WebPartDescriptionCollection.#ctor">
      <summary>Initializes an empty new instance of the <see cref="T:System.Web.UI.WebControls.WebParts.WebPartDescriptionCollection" /> class. </summary>
    </member>
    <member name="M:System.Web.UI.WebControls.WebParts.WebPartDescriptionCollection.#ctor(System.Collections.ICollection)">
      <summary>Initializes a new instance of a <see cref="T:System.Web.UI.WebControls.WebParts.WebPartDescriptionCollection" /> object by passing in an <see cref="T:System.Collections.ICollection" /> collection of <see cref="T:System.Web.UI.WebControls.WebParts.WebPartDescription" /> objects.</summary>
      <param name="webPartDescriptions">A collection of <see cref="T:System.Web.UI.WebControls.WebParts.WebPartDescription" /> objects that correspond to the <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> controls in a catalog. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="webPartDescriptions" /> is null.</exception>
      <exception cref="T:System.ArgumentException">A member of <paramref name="webPartDescriptions" /> is null-or-A member of <paramref name="webPartDescriptions" /> is not an object of type <see cref="T:System.Web.UI.WebControls.WebParts.WebPartDescription" />-or-A member of <paramref name="webPartDescriptions" /> has a duplicate <see cref="P:System.Web.UI.WebControls.WebParts.WebPartDescription.ID" /> property</exception>
    </member>
    <member name="M:System.Web.UI.WebControls.WebParts.WebPartDescriptionCollection.Contains(System.Web.UI.WebControls.WebParts.WebPartDescription)">
      <summary>Returns a value indicating whether a particular control exists in the collection.</summary>
      <returns>A Boolean value that indicates whether a particular <see cref="T:System.Web.UI.WebControls.WebParts.WebPartDescription" /> exists in a <see cref="T:System.Web.UI.WebControls.WebParts.WebPartDescriptionCollection" />.</returns>
      <param name="value">A particular <see cref="T:System.Web.UI.WebControls.WebParts.WebPartDescription" />. </param>
    </member>
    <member name="M:System.Web.UI.WebControls.WebParts.WebPartDescriptionCollection.CopyTo(System.Web.UI.WebControls.WebParts.WebPartDescription[],System.Int32)">
      <summary>Copies the collection to an array of <see cref="T:System.Web.UI.WebControls.WebParts.WebPartDescription" /> objects.</summary>
      <param name="array">An array of <see cref="T:System.Web.UI.WebControls.WebParts.WebPartDescription" /> objects to contain the copied collection. </param>
      <param name="index">The starting point in the array at which to place the collection contents. </param>
    </member>
    <member name="M:System.Web.UI.WebControls.WebParts.WebPartDescriptionCollection.IndexOf(System.Web.UI.WebControls.WebParts.WebPartDescription)">
      <summary>Returns the position of a particular member of the collection.</summary>
      <returns>An integer that indicates the position of a particular object in the collection.</returns>
      <param name="value">A <see cref="T:System.Web.UI.WebControls.WebParts.WebPartDescription" /> that is a member of the collection. </param>
    </member>
    <member name="P:System.Web.UI.WebControls.WebParts.WebPartDescriptionCollection.Item(System.Int32)">
      <summary>Gets a member of the collection based on its index within the collection.</summary>
      <returns>A <see cref="T:System.Web.UI.WebControls.WebParts.WebPartDescription" /> at the specified index in the collection.</returns>
      <param name="index">The index of a particular <see cref="T:System.Web.UI.WebControls.WebParts.WebPartDescription" /> in a collection.  </param>
    </member>
    <member name="P:System.Web.UI.WebControls.WebParts.WebPartDescriptionCollection.Item(System.String)">
      <summary>Gets a member of the collection based on a unique string identifier.</summary>
      <returns>The first <see cref="T:System.Web.UI.WebControls.WebParts.WebPartDescription" /> in the collection whose ID equals the value of <paramref name="id" />.</returns>
      <param name="id">The string that serves as a unique identifier for a particular <see cref="T:System.Web.UI.WebControls.WebParts.WebPartDescription" /> in a collection. </param>
    </member>
    <member name="T:System.Web.UI.WebControls.WebParts.WebPartDisplayMode">
      <summary>Defines a common set of properties for the several display modes that a Web Parts page can enter.</summary>
    </member>
    <member name="M:System.Web.UI.WebControls.WebParts.WebPartDisplayMode.#ctor(System.String)">
      <summary>Initializes a value for the name of the display mode.</summary>
      <param name="name">The name of the display mode.</param>
      <exception cref="T:System.ArgumentNullException">The <paramref name="name" /> parameter is null.</exception>
    </member>
    <member name="P:System.Web.UI.WebControls.WebParts.WebPartDisplayMode.AllowPageDesign">
      <summary>Gets a value that determines whether users can change the layout of a Web Parts page when the page is in a certain display mode.</summary>
      <returns>true if users can change the page layout; otherwise, false. The default is false.</returns>
    </member>
    <member name="P:System.Web.UI.WebControls.WebParts.WebPartDisplayMode.AssociatedWithToolZone">
      <summary>Gets a value that indicates whether a certain display mode is associated with a class that derives from the <see cref="T:System.Web.UI.WebControls.WebParts.ToolZone" /> class.</summary>
      <returns>true if the display mode is associated with a <see cref="T:System.Web.UI.WebControls.WebParts.ToolZone" /> class; otherwise, false. The default is false.</returns>
    </member>
    <member name="M:System.Web.UI.WebControls.WebParts.WebPartDisplayMode.IsEnabled(System.Web.UI.WebControls.WebParts.WebPartManager)">
      <summary>Gets a value that indicates whether users can personalize a page while the page is in a certain display mode.</summary>
      <returns>true if users can personalize a page; otherwise, false. The default is true. However, when <see cref="P:System.Web.UI.WebControls.WebParts.WebPartDisplayMode.RequiresPersonalization" /> is set to true, and personalization is disabled on the page, the default will be false.</returns>
      <param name="webPartManager">The <see cref="T:System.Web.UI.WebControls.WebParts.WebPartManager" />  control instance on the current page.</param>
    </member>
    <member name="P:System.Web.UI.WebControls.WebParts.WebPartDisplayMode.Name">
      <summary>Gets the name of a display mode.</summary>
      <returns>A string that contains the name of a display mode. </returns>
    </member>
    <member name="P:System.Web.UI.WebControls.WebParts.WebPartDisplayMode.RequiresPersonalization">
      <summary>Gets a value that indicates whether a particular display mode requires personalization to be enabled.</summary>
      <returns>A Boolean value that indicates whether personalization is required. The default is false.</returns>
    </member>
    <member name="P:System.Web.UI.WebControls.WebParts.WebPartDisplayMode.ShowHiddenWebParts">
      <summary>Gets a value that indicates whether controls that have their <see cref="P:System.Web.UI.WebControls.WebParts.WebPart.Hidden" /> property set to true should be displayed.</summary>
      <returns>A Boolean value that indicates whether hidden controls should be displayed. The default is false.</returns>
    </member>
    <member name="T:System.Web.UI.WebControls.WebParts.WebPartDisplayModeCancelEventArgs">
      <summary>Provides data for the <see cref="E:System.Web.UI.WebControls.WebParts.WebPartManager.DisplayModeChanging" /> cancelable event.</summary>
    </member>
    <member name="M:System.Web.UI.WebControls.WebParts.WebPartDisplayModeCancelEventArgs.#ctor(System.Web.UI.WebControls.WebParts.WebPartDisplayMode)">
      <summary>Initializes a new instance of the <see cref="T:System.Web.UI.WebControls.WebParts.WebPartDisplayModeCancelEventArgs" /> class. </summary>
      <param name="newDisplayMode">The <see cref="T:System.Web.UI.WebControls.WebParts.WebPartDisplayMode" /> to apply to a Web Parts control. </param>
    </member>
    <member name="P:System.Web.UI.WebControls.WebParts.WebPartDisplayModeCancelEventArgs.NewDisplayMode">
      <summary>Gets or sets the display mode to apply to a Web Parts control.</summary>
      <returns>The <see cref="T:System.Web.UI.WebControls.WebParts.WebPartDisplayMode" /> to apply to a Web Parts control.</returns>
    </member>
    <member name="T:System.Web.UI.WebControls.WebParts.WebPartDisplayModeCancelEventHandler">
      <summary>Represents the method that handles the <see cref="E:System.Web.UI.WebControls.WebParts.WebPartManager.DisplayModeChanging" /> event of the <see cref="T:System.Web.UI.WebControls.WebParts.WebPartManager" /> class. </summary>
      <param name="sender">The source of the event. </param>
      <param name="e">A <see cref="T:System.Web.UI.WebControls.WebParts.WebPartDisplayModeCancelEventArgs" /> that contains the event data. </param>
    </member>
    <member name="T:System.Web.UI.WebControls.WebParts.WebPartDisplayModeCollection">
      <summary>Contains a collection of <see cref="T:System.Web.UI.WebControls.WebParts.WebPartDisplayMode" /> objects. This class cannot be inherited.</summary>
    </member>
    <member name="M:System.Web.UI.WebControls.WebParts.WebPartDisplayModeCollection.Add(System.Web.UI.WebControls.WebParts.WebPartDisplayMode)">
      <summary>Adds a <see cref="T:System.Web.UI.WebControls.WebParts.WebPartDisplayMode" /> object to the collection.</summary>
      <returns>An integer value that indicates where the <see cref="T:System.Web.UI.WebControls.WebParts.WebPartDisplayMode" /> was inserted into the collection. </returns>
      <param name="value">A <see cref="T:System.Web.UI.WebControls.WebParts.WebPartDisplayMode" /> to add to the collection. </param>
    </member>
    <member name="M:System.Web.UI.WebControls.WebParts.WebPartDisplayModeCollection.Contains(System.Web.UI.WebControls.WebParts.WebPartDisplayMode)">
      <summary>Returns a value indicating whether a particular <see cref="T:System.Web.UI.WebControls.WebParts.WebPartDisplayMode" /> object exists in the collection.</summary>
      <returns>A Boolean value that indicates whether <paramref name="value" /> exists in the collection.</returns>
      <param name="value">A <see cref="T:System.Web.UI.WebControls.WebParts.WebPartDisplayMode" /> being checked for its existence in a collection. </param>
    </member>
    <member name="M:System.Web.UI.WebControls.WebParts.WebPartDisplayModeCollection.CopyTo(System.Web.UI.WebControls.WebParts.WebPartDisplayMode[],System.Int32)">
      <summary>Copies the collection to an array of <see cref="T:System.Web.UI.WebControls.WebParts.WebPartDisplayMode" /> objects.</summary>
      <param name="array">An array of <see cref="T:System.Web.UI.WebControls.WebParts.WebPartDisplayMode" /> objects to contain the copied collection. </param>
      <param name="index">An integer that indicates the starting point in the array at which to place the collection contents.  </param>
    </member>
    <member name="M:System.Web.UI.WebControls.WebParts.WebPartDisplayModeCollection.IndexOf(System.Web.UI.WebControls.WebParts.WebPartDisplayMode)">
      <summary>Returns the position of a particular member of the collection.</summary>
      <returns>An integer that indicates the position of a particular object in the collection.</returns>
      <param name="value">A <see cref="T:System.Web.UI.WebControls.WebParts.WebPartDisplayMode" /> that is a member of the collection.  </param>
    </member>
    <member name="M:System.Web.UI.WebControls.WebParts.WebPartDisplayModeCollection.Insert(System.Int32,System.Web.UI.WebControls.WebParts.WebPartDisplayMode)">
      <summary>Inserts a <see cref="T:System.Web.UI.WebControls.WebParts.WebPartDisplayMode" /> object into the collection at the specified index position.</summary>
      <param name="index">An integer indicating the ordinal position in the collection at which a <see cref="T:System.Web.UI.WebControls.WebParts.WebPartDisplayMode" /> should be inserted. </param>
      <param name="value">A <see cref="T:System.Web.UI.WebControls.WebParts.WebPartDisplayMode" /> to insert into the collection. </param>
    </member>
    <member name="P:System.Web.UI.WebControls.WebParts.WebPartDisplayModeCollection.IsReadOnly">
      <summary>Gets a value indicating whether the collection is read-only.</summary>
      <returns>A Boolean value that indicates whether the collection is read-only. </returns>
    </member>
    <member name="P:System.Web.UI.WebControls.WebParts.WebPartDisplayModeCollection.Item(System.Int32)">
      <summary>Gets a specific member of the collection according to its index.</summary>
      <returns>A <see cref="T:System.Web.UI.WebControls.WebParts.WebPartDisplayMode" /> at the specified index in the collection.</returns>
      <param name="index">An integer that indicates the index of a member of the collection. </param>
    </member>
    <member name="P:System.Web.UI.WebControls.WebParts.WebPartDisplayModeCollection.Item(System.String)">
      <summary>Gets a specific member of the collection according to a unique identifier.</summary>
      <returns>The first <see cref="T:System.Web.UI.WebControls.WebParts.WebPartDisplayMode" /> whose mode name matches the value of the <paramref name="modeName" /> parameter.</returns>
      <param name="modeName">A string that contains the name of a particular display mode in the collection. </param>
    </member>
    <member name="T:System.Web.UI.WebControls.WebParts.WebPartDisplayModeEventArgs">
      <summary>Provides data for the <see cref="E:System.Web.UI.WebControls.WebParts.WebPartManager.DisplayModeChanged" /> event. </summary>
    </member>
    <member name="M:System.Web.UI.WebControls.WebParts.WebPartDisplayModeEventArgs.#ctor(System.Web.UI.WebControls.WebParts.WebPartDisplayMode)">
      <summary>Initializes a new instance of the <see cref="T:System.Web.UI.WebControls.WebParts.WebPartDisplayModeEventArgs" /> class. </summary>
      <param name="oldDisplayMode">The <see cref="T:System.Web.UI.WebControls.WebParts.WebPartDisplayMode" /> applied to the Web Parts control before the display mode is changed.  </param>
    </member>
    <member name="P:System.Web.UI.WebControls.WebParts.WebPartDisplayModeEventArgs.OldDisplayMode">
      <summary>Gets or sets the former display mode for a Web Part control.</summary>
      <returns>The <see cref="T:System.Web.UI.WebControls.WebParts.WebPartDisplayMode" /> applied to a Web Parts control before the <see cref="E:System.Web.UI.WebControls.WebParts.WebPartManager.DisplayModeChanged" /> event.</returns>
    </member>
    <member name="T:System.Web.UI.WebControls.WebParts.WebPartDisplayModeEventHandler">
      <summary>Represents the method that will handle the <see cref="E:System.Web.UI.WebControls.WebParts.WebPartManager.DisplayModeChanged" /> event of a <see cref="T:System.Web.UI.WebControls.WebParts.WebPartManager" /> object. </summary>
      <param name="sender">The source of the event.</param>
      <param name="e">A <see cref="T:System.Web.UI.WebControls.WebParts.WebPartDisplayModeEventArgs" /> that contains the event data. </param>
    </member>
    <member name="T:System.Web.UI.WebControls.WebParts.WebPartEventArgs">
      <summary>Provides data for the <see cref="E:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartAdded" />, <see cref="E:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartDeleted" />, <see cref="E:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartClosed" />, <see cref="E:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartMoved" />, and <see cref="E:System.Web.UI.WebControls.WebParts.WebPartManager.SelectedWebPartChanged" /> events. </summary>
    </member>
    <member name="M:System.Web.UI.WebControls.WebParts.WebPartEventArgs.#ctor(System.Web.UI.WebControls.WebParts.WebPart)">
      <summary>Initializes a new instance of the <see cref="T:System.Web.UI.WebControls.WebParts.WebPartEventArgs" /> class. </summary>
      <param name="webPart">The <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> (or server or user control) involved in the event. </param>
    </member>
    <member name="P:System.Web.UI.WebControls.WebParts.WebPartEventArgs.WebPart">
      <summary>Gets the Web Parts control involved in the event.</summary>
      <returns>A <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> involved in a <see cref="E:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartAdded" />, <see cref="E:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartDeleted" />, <see cref="E:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartClosed" />, <see cref="E:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartMoved" />, or <see cref="E:System.Web.UI.WebControls.WebParts.WebPartManager.SelectedWebPartChanged" /> event.</returns>
    </member>
    <member name="T:System.Web.UI.WebControls.WebParts.WebPartEventHandler">
      <summary>Represents the method that will handle the <see cref="E:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartAdded" /> event, <see cref="E:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartDeleted" /> event, <see cref="E:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartClosed" /> event, <see cref="E:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartMoved" /> event, or <see cref="E:System.Web.UI.WebControls.WebParts.WebPartManager.SelectedWebPartChanged" /> event of a <see cref="T:System.Web.UI.WebControls.WebParts.WebPartManager" /> object. </summary>
      <param name="sender">The source of the event. </param>
      <param name="e">A <see cref="T:System.Web.UI.WebControls.WebParts.WebPartEventArgs" /> that contains the event data. </param>
    </member>
    <member name="T:System.Web.UI.WebControls.WebParts.WebPartExportMode">
      <summary>Specifies whether all, some, or none of a <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> control's properties can be exported.</summary>
    </member>
    <member name="F:System.Web.UI.WebControls.WebParts.WebPartExportMode.None">
      <summary>None of a Web Parts control's properties can be exported. </summary>
    </member>
    <member name="F:System.Web.UI.WebControls.WebParts.WebPartExportMode.All">
      <summary>All of a Web Parts control's properties can be exported.</summary>
    </member>
    <member name="F:System.Web.UI.WebControls.WebParts.WebPartExportMode.NonSensitiveData">
      <summary>Only properties of a Web Parts control that have been defined as non-sensitive can be exported.  </summary>
    </member>
    <member name="T:System.Web.UI.WebControls.WebParts.WebPartHelpMode">
      <summary>Specifies the available types of user interfaces (UIs) for displaying Help content for a <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> control.</summary>
    </member>
    <member name="F:System.Web.UI.WebControls.WebParts.WebPartHelpMode.Modal">
      <summary>Opens a separate browser window, if the browser has this capability. A user must close the window before returning to the Web Parts page. </summary>
    </member>
    <member name="F:System.Web.UI.WebControls.WebParts.WebPartHelpMode.Modeless">
      <summary>Opens a separate browser window, if the browser has this capability. A user does not have to close the window before returning to the Web page. </summary>
    </member>
    <member name="F:System.Web.UI.WebControls.WebParts.WebPartHelpMode.Navigate">
      <summary>Replaces the Web Parts page in the browser window.</summary>
    </member>
    <member name="T:System.Web.UI.WebControls.WebParts.WebPartManager">
      <summary>Serves as the central class of the Web Parts control set, managing all the Web Parts controls, functionality, and events that occur on a Web page. </summary>
    </member>
    <member name="M:System.Web.UI.WebControls.WebParts.WebPartManager.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Web.UI.WebControls.WebParts.WebPartManager" /> class.</summary>
    </member>
    <member name="M:System.Web.UI.WebControls.WebParts.WebPartManager.ActivateConnections">
      <summary>Makes active all connections on a Web page that are currently inactive.</summary>
    </member>
    <member name="M:System.Web.UI.WebControls.WebParts.WebPartManager.AddWebPart(System.Web.UI.WebControls.WebParts.WebPart,System.Web.UI.WebControls.WebParts.WebPartZoneBase,System.Int32)">
      <summary>Provides the standard programmatic method for adding <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> controls to a Web page. </summary>
      <returns>A <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> control that was added to the page.</returns>
      <param name="webPart">The <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> (or server or user control) to be added to a Web page or opened on a page. </param>
      <param name="zone">The <see cref="T:System.Web.UI.WebControls.WebParts.WebPartZoneBase" /> that <paramref name="webPart" /> is being added to.</param>
      <param name="zoneIndex">An integer that represents the ordinal position that <paramref name="webPart" /> occupies in <paramref name="zone" />, relative to other controls in <paramref name="zone" />.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="webPart" /> is null.- or - <paramref name="zone" /> is null.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="zone" /> is not registered in the <see cref="T:System.Web.UI.WebControls.WebParts.WebPartManager" /> control's collection of zones.- or - <paramref name="webPart" /> is already in <paramref name="zone" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">The value of <paramref name="zoneIndex" /> is less than zero.</exception>
    </member>
    <member name="E:System.Web.UI.WebControls.WebParts.WebPartManager.AuthorizeWebPart">
      <summary>Occurs when the <see cref="Overload:System.Web.UI.WebControls.WebParts.WebPartManager.IsAuthorized" /> method is called to determine whether a <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> or server control can be added to a page.</summary>
    </member>
    <member name="P:System.Web.UI.WebControls.WebParts.WebPartManager.AvailableTransformers">
      <summary>Gets a collection of <see cref="T:System.Web.UI.WebControls.WebParts.WebPartTransformer" /> objects that are available for use in creating Web Parts connections between server controls.</summary>
      <returns>A <see cref="T:System.Web.UI.WebControls.WebParts.TransformerTypeCollection" /> that contains a set of <see cref="T:System.Web.UI.WebControls.WebParts.WebPartTransformer" /> objects.</returns>
    </member>
    <member name="M:System.Web.UI.WebControls.WebParts.WebPartManager.BeginWebPartConnecting(System.Web.UI.WebControls.WebParts.WebPart)">
      <summary>Starts the process of connecting two <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> controls. </summary>
      <param name="webPart">The control for which the connection is being formed.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="webPart" /> is null. </exception>
      <exception cref="T:System.InvalidOperationException">The current display mode on the page is not <see cref="F:System.Web.UI.WebControls.WebParts.WebPartManager.ConnectDisplayMode" />.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="webPart" /> is closed.- or - <paramref name="webPart" /> is not part of the <see cref="P:System.Web.UI.WebControls.WebParts.WebPartManager.Controls" /> collection.-or -<paramref name="webPart" /> is equal to the <see cref="P:System.Web.UI.WebControls.WebParts.WebPartManager.SelectedWebPart" /> control.</exception>
    </member>
    <member name="M:System.Web.UI.WebControls.WebParts.WebPartManager.BeginWebPartEditing(System.Web.UI.WebControls.WebParts.WebPart)">
      <summary>Starts the process of editing a <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> control.</summary>
      <param name="webPart">The control to be edited. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="webPart" /> is null. </exception>
      <exception cref="T:System.InvalidOperationException">The current display mode on the page is not <see cref="F:System.Web.UI.WebControls.WebParts.WebPartManager.EditDisplayMode" />.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="webPart" /> is closed.- or - <paramref name="webPart" /> is not part of the <see cref="P:System.Web.UI.WebControls.WebParts.WebPartManager.Controls" /> collection.-or -<paramref name="webPart" /> is equal to the <see cref="P:System.Web.UI.WebControls.WebParts.WebPartManager.SelectedWebPart" /> control.</exception>
    </member>
    <member name="F:System.Web.UI.WebControls.WebParts.WebPartManager.BrowseDisplayMode">
      <summary>Represents the default display mode for pages that contain Web Parts controls. This field is read-only. </summary>
    </member>
    <member name="M:System.Web.UI.WebControls.WebParts.WebPartManager.CanConnectWebParts(System.Web.UI.WebControls.WebParts.WebPart,System.Web.UI.WebControls.WebParts.ProviderConnectionPoint,System.Web.UI.WebControls.WebParts.WebPart,System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint)">
      <summary>Checks the <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> controls that will be participating in a connection to determine whether they are capable of being connected, when the consumer and provider controls have compatible interfaces and a <see cref="T:System.Web.UI.WebControls.WebParts.WebPartTransformer" /> object is not needed.</summary>
      <returns>A Boolean value that indicates whether <paramref name="provider" /> and <paramref name="consumer" /> can be connected.</returns>
      <param name="provider">The control that provides data to <paramref name="consumer" /> when the controls are connected.</param>
      <param name="providerConnectionPoint">A <see cref="T:System.Web.UI.WebControls.WebParts.ConnectionPoint" /> that enables <paramref name="provider" /> to participate in a connection.</param>
      <param name="consumer">The control that receives data from <paramref name="provider" /> when the controls are connected.</param>
      <param name="consumerConnectionPoint">A <see cref="T:System.Web.UI.WebControls.WebParts.ConnectionPoint" /> that acts as a callback method so that <paramref name="consumer" /> can participate in a connection.</param>
    </member>
    <member name="M:System.Web.UI.WebControls.WebParts.WebPartManager.CanConnectWebParts(System.Web.UI.WebControls.WebParts.WebPart,System.Web.UI.WebControls.WebParts.ProviderConnectionPoint,System.Web.UI.WebControls.WebParts.WebPart,System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint,System.Web.UI.WebControls.WebParts.WebPartTransformer)">
      <summary>Checks the <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> controls that will be participating in a connection to determine whether they are capable of being connected, and uses a <see cref="T:System.Web.UI.WebControls.WebParts.WebPartTransformer" /> object to create the connection between an incompatible consumer and provider.</summary>
      <returns>A Boolean value that indicates whether <paramref name="provider" /> and <paramref name="consumer" /> can form a connection.</returns>
      <param name="provider">The control that provides data to <paramref name="consumer" /> when the controls are connected.</param>
      <param name="providerConnectionPoint">A <see cref="T:System.Web.UI.WebControls.WebParts.ConnectionPoint" /> that acts as a callback method so that <paramref name="provider" /> can participate in a connection.</param>
      <param name="consumer">The control that receives data from <paramref name="provider" /> when the controls are connected.</param>
      <param name="consumerConnectionPoint">A <see cref="T:System.Web.UI.WebControls.WebParts.ConnectionPoint" /> that acts as a callback method so that <paramref name="consumer" /> can participate in a connection.</param>
      <param name="transformer">A <see cref="T:System.Web.UI.WebControls.WebParts.WebPartTransformer" /> that enables an incompatible <paramref name="provider" /> and <paramref name="consumer" /> to connect. </param>
    </member>
    <member name="F:System.Web.UI.WebControls.WebParts.WebPartManager.CatalogDisplayMode">
      <summary>Represents the display mode used for adding server controls from a catalog of controls to a Web page. This field is read-only.</summary>
    </member>
    <member name="M:System.Web.UI.WebControls.WebParts.WebPartManager.CheckRenderClientScript">
      <summary>Checks the capabilities of the browser making the request, and the value of the <see cref="P:System.Web.UI.WebControls.WebParts.WebPartManager.EnableClientScript" /> property, to determine whether to render client script.</summary>
      <returns>A Boolean value that indicates whether to render client script.  </returns>
    </member>
    <member name="P:System.Web.UI.WebControls.WebParts.WebPartManager.CloseProviderWarning">
      <summary>Gets or sets a warning that is displayed when a user closes a control that is acting as a provider to other controls in a connection.</summary>
      <returns>A string that contains the warning message. The default is a culture-specific message supplied by the .NET Framework.</returns>
    </member>
    <member name="M:System.Web.UI.WebControls.WebParts.WebPartManager.CloseWebPart(System.Web.UI.WebControls.WebParts.WebPart)">
      <summary>Closes a <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> control in such a way that it is not rendered on a Web page, but can be reopened.</summary>
      <param name="webPart">A <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> or server control that is being closed in a <see cref="T:System.Web.UI.WebControls.WebParts.WebPartZoneBase" />. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="webPart" /> is null.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="webPart" /> is not in the <see cref="P:System.Web.UI.WebControls.WebParts.WebPartManager.Controls" /> collection.- or -<paramref name="webPart" /> is a shared control and has already been closed by another user.</exception>
    </member>
    <member name="F:System.Web.UI.WebControls.WebParts.WebPartManager.ConnectDisplayMode">
      <summary>Represents the display mode used for displaying a special user interface (UI) for users to manage connections between <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> controls. This field is read-only.</summary>
    </member>
    <member name="P:System.Web.UI.WebControls.WebParts.WebPartManager.Connections">
      <summary>Gets a reference to the collection of all current connections on a Web page.</summary>
      <returns>A <see cref="T:System.Web.UI.WebControls.WebParts.WebPartConnectionCollection" /> that contains a set of <see cref="T:System.Web.UI.WebControls.WebParts.WebPartConnection" /> objects.</returns>
    </member>
    <member name="E:System.Web.UI.WebControls.WebParts.WebPartManager.ConnectionsActivated">
      <summary>Occurs after all the current Web Parts connections on a page are not only connected, but have also begun actively sharing data between the consumer and provider controls involved in each connection.</summary>
    </member>
    <member name="E:System.Web.UI.WebControls.WebParts.WebPartManager.ConnectionsActivating">
      <summary>Occurs during the process of activating all the established Web Parts connections on a Web page.</summary>
    </member>
    <member name="M:System.Web.UI.WebControls.WebParts.WebPartManager.ConnectWebParts(System.Web.UI.WebControls.WebParts.WebPart,System.Web.UI.WebControls.WebParts.ProviderConnectionPoint,System.Web.UI.WebControls.WebParts.WebPart,System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint)">
      <summary>Creates a connection between two <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> or <see cref="T:System.Web.UI.WebControls.WebParts.GenericWebPart" /> controls using only the references to the controls and their specified <see cref="T:System.Web.UI.WebControls.WebParts.ConnectionPoint" /> objects.</summary>
      <returns>A <see cref="T:System.Web.UI.WebControls.WebParts.WebPartConnection" /> that contains the various information about the provider and the consumer needed for a connection.</returns>
      <param name="provider">A <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> control that has the role of furnishing data to another connected control. </param>
      <param name="providerConnectionPoint">A method that serves as a callback method for the connection. As implemented in the Web Parts control set, this is a public method in <paramref name="provider" /> that is marked with a ConnectionProvider metadata attribute. </param>
      <param name="consumer">A <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> control that has the role of receiving data from <paramref name="provider" />, and then processing or displaying it. </param>
      <param name="consumerConnectionPoint">A method that connects with <paramref name="providerConnectionPoint" /> to receive the data for the connection. As implemented in the Web Parts control set, this is a public method in <paramref name="consumer" /> that is marked with a ConnectionConsumer metadata attribute.</param>
      <exception cref="T:System.InvalidOperationException">The <see cref="T:System.Web.UI.WebControls.WebParts.WebPartManager" /> control's collection of dynamic collections is read-only. </exception>
    </member>
    <member name="M:System.Web.UI.WebControls.WebParts.WebPartManager.ConnectWebParts(System.Web.UI.WebControls.WebParts.WebPart,System.Web.UI.WebControls.WebParts.ProviderConnectionPoint,System.Web.UI.WebControls.WebParts.WebPart,System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint,System.Web.UI.WebControls.WebParts.WebPartTransformer)">
      <summary>Creates a connection between two <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> or <see cref="T:System.Web.UI.WebControls.WebParts.GenericWebPart" /> controls using the references to the controls, their specified <see cref="T:System.Web.UI.WebControls.WebParts.ConnectionPoint" /> objects, and a <see cref="T:System.Web.UI.WebControls.WebParts.WebPartTransformer" /> object.</summary>
      <returns>A <see cref="T:System.Web.UI.WebControls.WebParts.WebPartConnection" /> that contains the information about the provider, consumer, and transformer needed for a connection.</returns>
      <param name="provider">A <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> that has the role of furnishing data to another connected control. </param>
      <param name="providerConnectionPoint">A public method in <paramref name="provider" /> that is marked with a ConnectionProvider metadata attribute, and serves as a callback method for the connection. </param>
      <param name="consumer">A <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> that has the role of receiving data from <paramref name="provider" /> or <paramref name="transformer" />, and then processing or displaying it. </param>
      <param name="consumerConnectionPoint">A public method in <paramref name="consumer" /> that is marked with a ConnectionConsumer metadata attribute, and connects with <paramref name="providerConnectionPoint" /> to receive the data for the connection. </param>
      <param name="transformer">A <see cref="T:System.Web.UI.WebControls.WebParts.WebPartTransformer" /> that enables a connection between two controls by converting the data from <paramref name="provider" /> to a format that <paramref name="consumer" /> can process. </param>
      <exception cref="T:System.InvalidOperationException">Connections have already been activated in <see cref="E:System.Web.UI.Control.PreRender" />.</exception>
    </member>
    <member name="P:System.Web.UI.WebControls.WebParts.WebPartManager.Controls">
      <summary>Gets the collection of all <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" />, server, or user controls that are contained in <see cref="T:System.Web.UI.WebControls.WebParts.WebPartZoneBase" /> zones on a Web page and are managed by the <see cref="T:System.Web.UI.WebControls.WebParts.WebPartManager" /> control. </summary>
      <returns>A <see cref="T:System.Web.UI.ControlCollection" /> that contains all controls managed by the <see cref="T:System.Web.UI.WebControls.WebParts.WebPartManager" /> control.</returns>
    </member>
    <member name="M:System.Web.UI.WebControls.WebParts.WebPartManager.CopyWebPart(System.Web.UI.WebControls.WebParts.WebPart)">
      <summary>Used by the Web Parts control set to create a copy of a <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> or server control for the purpose of adding the control to a Web page.</summary>
      <returns>A <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> to be added to a page.</returns>
      <param name="webPart">The <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> or server control to be copied. </param>
    </member>
    <member name="M:System.Web.UI.WebControls.WebParts.WebPartManager.CreateAvailableTransformers">
      <summary>Creates a set of transformers specified in a Web site's configuration file and adds them to the collection of transformers referenced by the <see cref="P:System.Web.UI.WebControls.WebParts.WebPartManager.AvailableTransformers" /> property.</summary>
      <returns>The collection of transformers specified in a Web site's configuration file.</returns>
    </member>
    <member name="M:System.Web.UI.WebControls.WebParts.WebPartManager.CreateControlCollection">
      <summary>Returns the collection of all controls that are managed by the <see cref="T:System.Web.UI.WebControls.WebParts.WebPartManager" /> control on a Web page. This class cannot be inherited.</summary>
      <returns>A <see cref="T:System.Web.UI.ControlCollection" /> consisting of all the various Web Parts controls managed by the <see cref="T:System.Web.UI.WebControls.WebParts.WebPartManager" /> control.</returns>
    </member>
    <member name="M:System.Web.UI.WebControls.WebParts.WebPartManager.CreateDisplayModes">
      <summary>Creates the set of all possible display modes for a Web Parts application.</summary>
      <returns>A <see cref="T:System.Web.UI.WebControls.WebParts.WebPartDisplayModeCollection" /> that contains all the display modes that are supported.</returns>
    </member>
    <member name="M:System.Web.UI.WebControls.WebParts.WebPartManager.CreateDynamicConnectionID">
      <summary>Gets a unique value to serve as an ID for a dynamic connection.</summary>
      <returns>A string that contains a unique ID for a connection.</returns>
    </member>
    <member name="M:System.Web.UI.WebControls.WebParts.WebPartManager.CreateDynamicWebPartID(System.Type)">
      <summary>Generates a unique ID for a dynamic <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> control.</summary>
      <returns>A string that contains the unique ID for a control. </returns>
      <param name="webPartType">The <see cref="T:System.Type" /> of the control for which an ID is being generated. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="webPartType" /> is null.</exception>
    </member>
    <member name="M:System.Web.UI.WebControls.WebParts.WebPartManager.CreateErrorWebPart(System.String,System.String,System.String,System.String,System.String)">
      <summary>Creates a special control that is inserted into a page and displayed for end users, when an attempt to load or create a dynamic <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> control fails for some reason.</summary>
      <returns>An <see cref="T:System.Web.UI.WebControls.WebParts.ErrorWebPart" /> that is inserted into a page in place of a control that failed to be loaded or created.</returns>
      <param name="originalID">A string that is the ID of the failing control. If a <see cref="T:System.Web.UI.WebControls.WebParts.GenericWebPart" /> is involved in the failure, the ID is the ID of its child server control.</param>
      <param name="originalTypeName">A string that is the name of the <see cref="T:System.Type" /> of the failed control. If a <see cref="T:System.Web.UI.WebControls.WebParts.GenericWebPart" /> is involved in the failure, the type name is the type of its child server control. </param>
      <param name="originalPath">A string that contains the path to a user control, if a <see cref="T:System.Web.UI.WebControls.WebParts.GenericWebPart" /> that contains a child user control is involved in the failure.</param>
      <param name="genericWebPartID">A string that returns the ID of a <see cref="T:System.Web.UI.WebControls.WebParts.GenericWebPart" />, if that type of control was involved in the failure to load or create a control.</param>
      <param name="errorMessage">A string that contains the error message to display on the page.</param>
    </member>
    <member name="M:System.Web.UI.WebControls.WebParts.WebPartManager.CreatePersonalization">
      <summary>Returns a personalization object to contain a user's personalization data for the current Web page.</summary>
      <returns>A <see cref="T:System.Web.UI.WebControls.WebParts.WebPartPersonalization" /> to contain a user's personalization data.</returns>
    </member>
    <member name="M:System.Web.UI.WebControls.WebParts.WebPartManager.CreateWebPart(System.Web.UI.Control)">
      <summary>Wraps a server control that is not a <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> control with a <see cref="T:System.Web.UI.WebControls.WebParts.GenericWebPart" /> object, so that the control can have Web Parts functionality.</summary>
      <returns>A <see cref="T:System.Web.UI.WebControls.WebParts.GenericWebPart" /> that wraps <paramref name="control" /> and enables it to function as a true <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> control.</returns>
      <param name="control">A server control that is not a <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> control. </param>
    </member>
    <member name="P:System.Web.UI.WebControls.WebParts.WebPartManager.DeleteWarning">
      <summary>Gets or sets a custom warning message displayed to end users when they delete a control.</summary>
      <returns>A string that contains the text of the warning message. The default value is a localized warning message.</returns>
    </member>
    <member name="M:System.Web.UI.WebControls.WebParts.WebPartManager.DeleteWebPart(System.Web.UI.WebControls.WebParts.WebPart)">
      <summary>Permanently removes a dynamic instance of a <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> control from a Web page.</summary>
      <param name="webPart">The server control to be deleted.</param>
    </member>
    <member name="F:System.Web.UI.WebControls.WebParts.WebPartManager.DesignDisplayMode">
      <summary>Represents the display mode used for changing the layout of Web pages that contain Web Parts controls. This field is read-only.</summary>
    </member>
    <member name="M:System.Web.UI.WebControls.WebParts.WebPartManager.DisconnectWebPart(System.Web.UI.WebControls.WebParts.WebPart)">
      <summary>Removes a <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> or server control that is being closed or deleted from any connections it is participating in.</summary>
      <param name="webPart">A <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> control that is to be disconnected.  </param>
    </member>
    <member name="M:System.Web.UI.WebControls.WebParts.WebPartManager.DisconnectWebParts(System.Web.UI.WebControls.WebParts.WebPartConnection)">
      <summary>Carries out the process of disconnecting server controls that are connected on a Web page.</summary>
      <param name="connection">A <see cref="T:System.Web.UI.WebControls.WebParts.WebPartConnection" /> that represents the connection between server controls. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="connection" /> is null.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="connection" /> is not contained in either <see cref="P:System.Web.UI.WebControls.WebParts.WebPartManager.StaticConnections" /> or <see cref="P:System.Web.UI.WebControls.WebParts.WebPartManager.DynamicConnections" />.</exception>
      <exception cref="T:System.InvalidOperationException">
        <see cref="P:System.Web.UI.WebControls.WebParts.WebPartManager.StaticConnections" /> is read-only.- or -<paramref name="connection" /> has already been disconnected from <see cref="P:System.Web.UI.WebControls.WebParts.WebPartManager.StaticConnections" />.- or -<see cref="P:System.Web.UI.WebControls.WebParts.WebPartManager.DynamicConnections" /> is read-only.- or -<paramref name="connection" /> has already been disconnected from <see cref="P:System.Web.UI.WebControls.WebParts.WebPartManager.DynamicConnections" />.</exception>
    </member>
    <member name="P:System.Web.UI.WebControls.WebParts.WebPartManager.DisplayMode">
      <summary>Gets or sets the active display mode for a Web page that contains Web Parts controls.</summary>
      <returns>A <see cref="T:System.Web.UI.WebControls.WebParts.WebPartDisplayMode" /> that determines a page's display mode.</returns>
      <exception cref="T:System.ArgumentNullException">The <see cref="T:System.Web.UI.WebControls.WebParts.WebPartDisplayMode" /> object being assigned to the property is null.</exception>
      <exception cref="T:System.ArgumentException">The <see cref="T:System.Web.UI.WebControls.WebParts.WebPartDisplayMode" /> object being assigned to the property is not one of the supported display modes.- or - The <see cref="T:System.Web.UI.WebControls.WebParts.WebPartDisplayMode" /> object being assigned to the property is disabled.</exception>
    </member>
    <member name="E:System.Web.UI.WebControls.WebParts.WebPartManager.DisplayModeChanged">
      <summary>Occurs after the current display mode on a Web Parts page has changed.</summary>
    </member>
    <member name="E:System.Web.UI.WebControls.WebParts.WebPartManager.DisplayModeChanging">
      <summary>Occurs after a user clicks a verb on a Web page that begins the process of changing to a different display mode.</summary>
    </member>
    <member name="P:System.Web.UI.WebControls.WebParts.WebPartManager.DisplayModes">
      <summary>Gets a read-only collection of all display modes that are associated with a <see cref="T:System.Web.UI.WebControls.WebParts.WebPartManager" /> control.</summary>
      <returns>A <see cref="T:System.Web.UI.WebControls.WebParts.WebPartDisplayModeCollection" /> that contains the set of <see cref="T:System.Web.UI.WebControls.WebParts.WebPartDisplayMode" /> objects associated with the <see cref="T:System.Web.UI.WebControls.WebParts.WebPartManager" /> control. </returns>
    </member>
    <member name="P:System.Web.UI.WebControls.WebParts.WebPartManager.DynamicConnections">
      <summary>Gets the collection of all dynamic connections that currently exist on a Web page.</summary>
      <returns>A <see cref="T:System.Web.UI.WebControls.WebParts.WebPartConnectionCollection" /> that contains references to all dynamic connections on a page.</returns>
    </member>
    <member name="F:System.Web.UI.WebControls.WebParts.WebPartManager.EditDisplayMode">
      <summary>Represents the display mode in which end users can edit and modify server controls. This field is read-only.</summary>
    </member>
    <member name="P:System.Web.UI.WebControls.WebParts.WebPartManager.EnableClientScript">
      <summary>Gets or sets a value that determines whether client-side scripting is enabled on the Web page that contains a <see cref="T:System.Web.UI.WebControls.WebParts.WebPartManager" /> control.</summary>
      <returns>A Boolean value that indicates whether client script can run on the page. The default value is true.</returns>
    </member>
    <member name="P:System.Web.UI.WebControls.WebParts.WebPartManager.EnableTheming">
      <summary>Gets a value indicating that the use of themes is enabled on a Web page.</summary>
      <returns>A Boolean value that indicates whether themes are enabled. true in all cases.</returns>
      <exception cref="T:System.NotSupportedException">An attempt was made to set the property value.</exception>
    </member>
    <member name="M:System.Web.UI.WebControls.WebParts.WebPartManager.EndWebPartConnecting">
      <summary>Completes the process of connecting a <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> control to another control.</summary>
      <exception cref="T:System.InvalidOperationException">The control referenced by the <see cref="P:System.Web.UI.WebControls.WebParts.WebPartManager.SelectedWebPart" /> property is null.</exception>
    </member>
    <member name="M:System.Web.UI.WebControls.WebParts.WebPartManager.EndWebPartEditing">
      <summary>Completes the process of editing a <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> control.</summary>
      <exception cref="T:System.InvalidOperationException">The control referenced by the <see cref="P:System.Web.UI.WebControls.WebParts.WebPartManager.SelectedWebPart" /> property is null.</exception>
    </member>
    <member name="P:System.Web.UI.WebControls.WebParts.WebPartManager.ExportSensitiveDataWarning">
      <summary>Gets or sets the text of a warning message that is displayed when a user attempts to export sensitive state data from a <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> control.</summary>
      <returns>A string that contains the warning message. The default message is a culture-specific value supplied by the .NET Framework.</returns>
    </member>
    <member name="M:System.Web.UI.WebControls.WebParts.WebPartManager.ExportWebPart(System.Web.UI.WebControls.WebParts.WebPart,System.Xml.XmlWriter)">
      <summary>Creates an XML description file that contains state and property data for a server control.</summary>
      <param name="webPart">The control from which data will be exported. </param>
      <param name="writer">An <see cref="T:System.Xml.XmlWriter" /> that writes the exported data from <paramref name="webPart" /> to an XML description file. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="webPart" /> is null.- or -<paramref name="writer" /> is null.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="webPart" /> is not contained in the collection of controls referenced in <see cref="P:System.Web.UI.WebControls.WebParts.WebPartManager.Controls" />.- or -The <see cref="P:System.Web.UI.WebControls.WebParts.WebPart.ExportMode" /> property of <paramref name="webPart" /> is set to a value of <see cref="F:System.Web.UI.WebControls.WebParts.WebPartExportMode.None" />, which means that export is disabled for <paramref name="webPart" />.</exception>
    </member>
    <member name="M:System.Web.UI.WebControls.WebParts.WebPartManager.Focus">
      <summary>Overridden to prevent focus from ever being set on the <see cref="T:System.Web.UI.WebControls.WebParts.WebPartManager" /> control, because it has no user interface (UI).</summary>
      <exception cref="T:System.NotSupportedException">A caller tries to call the <see cref="M:System.Web.UI.WebControls.WebParts.WebPartManager.Focus" /> method, which is not supported in a control that has no UI.</exception>
    </member>
    <member name="M:System.Web.UI.WebControls.WebParts.WebPartManager.GetConsumerConnectionPoints(System.Web.UI.WebControls.WebParts.WebPart)">
      <summary>Retrieves the collection of <see cref="T:System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint" /> objects that can act as connection points from a server control that is acting as a consumer within a Web Parts connection.</summary>
      <returns>A <see cref="T:System.Web.UI.WebControls.WebParts.ConsumerConnectionPointCollection" /> that contains all connection points in the consumer.</returns>
      <param name="webPart">A server control that is acting as a consumer in a connection. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="webPart" /> is null.</exception>
    </member>
    <member name="M:System.Web.UI.WebControls.WebParts.WebPartManager.GetCurrentWebPartManager(System.Web.UI.Page)">
      <summary>Retrieves a reference to the current instance of the <see cref="T:System.Web.UI.WebControls.WebParts.WebPartManager" /> control on a page.</summary>
      <returns>A <see cref="T:System.Web.UI.WebControls.WebParts.WebPartManager" /> that references the current instance of the control on a page.</returns>
      <param name="page">The Web page that contains an instance of the <see cref="T:System.Web.UI.WebControls.WebParts.WebPartManager" />. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="page" /> is null.</exception>
    </member>
    <member name="M:System.Web.UI.WebControls.WebParts.WebPartManager.GetDisplayTitle(System.Web.UI.WebControls.WebParts.WebPart)">
      <summary>Gets a string containing the value for the <see cref="P:System.Web.UI.WebControls.WebParts.WebPart.DisplayTitle" /> property of a <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> control.</summary>
      <returns>A string that contains the calculated value of <see cref="P:System.Web.UI.WebControls.WebParts.WebPart.DisplayTitle" /> for <paramref name="webPart" />.</returns>
      <param name="webPart">The control for which the method returns the value of <see cref="P:System.Web.UI.WebControls.WebParts.WebPart.DisplayTitle" />.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="webPart" /> is null. </exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="webPart" /> is not in the <see cref="P:System.Web.UI.WebControls.WebParts.WebPartManager.Controls" /> collection.</exception>
    </member>
    <member name="M:System.Web.UI.WebControls.WebParts.WebPartManager.GetExportUrl(System.Web.UI.WebControls.WebParts.WebPart)">
      <summary>Gets the relative virtual path and the query string that are part of the request when a user attempts to export a <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> control. </summary>
      <returns>A string that contains the relative virtual path and the query string that together form the request to export a control.</returns>
      <param name="webPart">The <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> that is being exported. </param>
    </member>
    <member name="M:System.Web.UI.WebControls.WebParts.WebPartManager.GetGenericWebPart(System.Web.UI.Control)">
      <summary>Gets a reference to the instance of the <see cref="T:System.Web.UI.WebControls.WebParts.GenericWebPart" /> control that contains a server control.</summary>
      <returns>A <see cref="T:System.Web.UI.WebControls.WebParts.GenericWebPart" /> that wraps <paramref name="control" /> as a child control. The method returns null if <paramref name="control" /> is not contained in a <see cref="T:System.Web.UI.WebControls.WebParts.GenericWebPart" />.</returns>
      <param name="control">A server control that exists in a <see cref="T:System.Web.UI.WebControls.WebParts.WebPartZoneBase" /> and is wrapped as a child control of a <see cref="T:System.Web.UI.WebControls.WebParts.GenericWebPart" /> at run time. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="control" /> is null.</exception>
    </member>
    <member name="M:System.Web.UI.WebControls.WebParts.WebPartManager.GetProviderConnectionPoints(System.Web.UI.WebControls.WebParts.WebPart)">
      <summary>Retrieves the collection of <see cref="T:System.Web.UI.WebControls.WebParts.ProviderConnectionPoint" /> objects that can act as connection points from a server control that is acting as a provider within a Web Parts connection.</summary>
      <returns>A <see cref="T:System.Web.UI.WebControls.WebParts.ProviderConnectionPointCollection" /> that contains all connection points in the provider.</returns>
      <param name="webPart">A server control that is acting as a provider in a connection. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="webPart" /> is null.</exception>
    </member>
    <member name="M:System.Web.UI.WebControls.WebParts.WebPartManager.ImportWebPart(System.Xml.XmlReader,System.String@)">
      <summary>Imports an XML description file that contains state and property data for a <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> control, and applies the data to the control. </summary>
      <returns>A <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> (or a server control that is wrapped by a <see cref="T:System.Web.UI.WebControls.WebParts.GenericWebPart" /> and thus treated as a <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" />) that is referenced in the imported XML description file.</returns>
      <param name="reader">An <see cref="T:System.Xml.XmlReader" /> that reads the state and property data from the XML description file that is being imported.</param>
      <param name="errorMessage">A <see cref="T:System.String" /> that is displayed to the user if an error is encountered during import. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="reader" /> is null.</exception>
      <exception cref="T:System.IO.EndOfStreamException">
        <paramref name="reader" /> could not read the file.- or -<paramref name="reader" /> needed to display an import error message but did not find one in the file.- or - <paramref name="reader" /> reached the end of the file without finding the XML element that contains the exported data.</exception>
    </member>
    <member name="P:System.Web.UI.WebControls.WebParts.WebPartManager.Internals">
      <summary>Gets a reference to the <see cref="T:System.Web.UI.WebControls.WebParts.WebPartManagerInternals" /> class, which is used to combine and separate a set of methods that are actually implemented in the <see cref="T:System.Web.UI.WebControls.WebParts.WebPartManager" /> class, but are mostly useful for control developers.</summary>
      <returns>A <see cref="T:System.Web.UI.WebControls.WebParts.WebPartManagerInternals" />, through which a <see cref="T:System.Web.UI.WebControls.WebParts.WebPartManager" /> can reference the various methods that have been separated into the <see cref="T:System.Web.UI.WebControls.WebParts.WebPartManagerInternals" />.</returns>
    </member>
    <member name="M:System.Web.UI.WebControls.WebParts.WebPartManager.IsAuthorized(System.Type,System.String,System.String,System.Boolean)">
      <summary>Carries out the final steps in determining whether a control is authorized to be added to a page.</summary>
      <returns>A Boolean value that indicates whether a control is authorized to be added to a page.</returns>
      <param name="type">The <see cref="T:System.Type" /> of the control being checked for authorization. </param>
      <param name="path">The relative application path to the source file for the control being authorized, if the control is a user control. </param>
      <param name="authorizationFilter">An arbitrary string value assigned to the <see cref="P:System.Web.UI.WebControls.WebParts.WebPart.AuthorizationFilter" /> property of a <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> control, used to authorize whether a control can be added to a page. </param>
      <param name="isShared">Indicates whether the control being checked for authorization is a shared control, meaning that it is visible to many or all users of the application, and its <see cref="P:System.Web.UI.WebControls.WebParts.WebPart.IsShared" /> property value is set to true. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="type" /> is null.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="type" /> is a user control, and <paramref name="path" /> is either null or an empty string ("").- or -<paramref name="type" /> is not a user control, and <paramref name="path" /> has a value assigned to it.</exception>
    </member>
    <member name="M:System.Web.UI.WebControls.WebParts.WebPartManager.IsAuthorized(System.Web.UI.WebControls.WebParts.WebPart)">
      <summary>Carries out the initial steps in determining whether a control is authorized to be added to a page.</summary>
      <returns>A Boolean value that indicates whether <paramref name="webPart" /> can be added to a page.</returns>
      <param name="webPart">A <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> or other server control being checked for authorization. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="webPart" /> is null.</exception>
    </member>
    <member name="P:System.Web.UI.WebControls.WebParts.WebPartManager.IsCustomPersonalizationStateDirty">
      <summary>Gets a value that indicates whether personalization changes have been made that affect page-level personalization details controlled by the <see cref="T:System.Web.UI.WebControls.WebParts.WebPartManager" /> control. </summary>
      <returns>A Boolean value that indicates whether personalization changes have been made. The default value is false.</returns>
    </member>
    <member name="M:System.Web.UI.WebControls.WebParts.WebPartManager.LoadControlState(System.Object)">
      <summary>Loads control state data that was saved from a previous page request, and needs to be restored on a subsequent request. </summary>
      <param name="savedState">Contains the persisted state data to be loaded.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="savedState" /> is not a valid <see cref="P:System.Web.UI.PageStatePersister.ControlState" />.</exception>
    </member>
    <member name="M:System.Web.UI.WebControls.WebParts.WebPartManager.LoadCustomPersonalizationState(System.Web.UI.WebControls.WebParts.PersonalizationDictionary)">
      <summary>Stores the custom personalization data that has been passed to the <see cref="T:System.Web.UI.WebControls.WebParts.WebPartManager" /> control by the personalization objects to be used later during the initialization process.</summary>
      <param name="state">A <see cref="T:System.Web.UI.WebControls.WebParts.PersonalizationDictionary" /> that contains the state data to be loaded. </param>
    </member>
    <member name="P:System.Web.UI.WebControls.WebParts.WebPartManager.MediumPermissionSet">
      <summary>Gets a <see cref="T:System.Security.PermissionSet" /> object that allows only <see cref="F:System.Security.Permissions.SecurityPermissionFlag.Execution" /> permission and <see cref="F:System.Web.AspNetHostingPermissionLevel.Medium" /> permission.</summary>
      <returns>A <see cref="T:System.Security.PermissionSet" /> object that allows only <see cref="F:System.Security.Permissions.SecurityPermissionFlag.Execution" /> permission and <see cref="F:System.Web.AspNetHostingPermissionLevel.Medium" /> permission.</returns>
    </member>
    <member name="P:System.Web.UI.WebControls.WebParts.WebPartManager.MinimalPermissionSet">
      <summary>Gets a <see cref="T:System.Security.PermissionSet" /> object that allows only <see cref="F:System.Security.Permissions.SecurityPermissionFlag.Execution" /> permission and <see cref="F:System.Web.AspNetHostingPermissionLevel.Minimal" /> permission.</summary>
      <returns>Gets a <see cref="T:System.Security.PermissionSet" /> object that allows only <see cref="F:System.Security.Permissions.SecurityPermissionFlag.Execution" /> permission and <see cref="F:System.Web.AspNetHostingPermissionLevel.Minimal" /> permission.</returns>
    </member>
    <member name="M:System.Web.UI.WebControls.WebParts.WebPartManager.MoveWebPart(System.Web.UI.WebControls.WebParts.WebPart,System.Web.UI.WebControls.WebParts.WebPartZoneBase,System.Int32)">
      <summary>Moves a <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> or server control from one <see cref="T:System.Web.UI.WebControls.WebParts.WebPartZoneBase" /> zone to another, or to a new position within the same zone. </summary>
      <param name="webPart">The <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> or other server control being moved. </param>
      <param name="zone">The target <see cref="T:System.Web.UI.WebControls.WebParts.WebPartZoneBase" /> to which <paramref name="webPart" /> is being moved. </param>
      <param name="zoneIndex">An integer that indicates the index of <paramref name="webPart" /> relative to other controls within <paramref name="zone" />. </param>
      <exception cref="T:System.ArgumentException">
        <paramref name="webPart" /> is not contained in the <see cref="P:System.Web.UI.WebControls.WebParts.WebPartManager.Controls" /> collection of the <see cref="T:System.Web.UI.WebControls.WebParts.WebPartManager" /> control.- or -<paramref name="zone" /> is not contained in the <see cref="P:System.Web.UI.WebControls.WebParts.WebPartManager.Zones" /> collection of the <see cref="T:System.Web.UI.WebControls.WebParts.WebPartManager" /> control.- or -The zone referenced by the <paramref name="webPart" /> control's <see cref="P:System.Web.UI.WebControls.WebParts.WebPart.Zone" /> property is null, which means that <paramref name="webPart" /> is not currently contained in a zone.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="webPart" /> or <paramref name="zone" /> is null.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="zoneIndex" /> is less than zero.</exception>
    </member>
    <member name="M:System.Web.UI.WebControls.WebParts.WebPartManager.OnAuthorizeWebPart(System.Web.UI.WebControls.WebParts.WebPartAuthorizationEventArgs)">
      <summary>Raises the <see cref="E:System.Web.UI.WebControls.WebParts.WebPartManager.AuthorizeWebPart" /> event and invokes a handler for the event, if one exists.</summary>
      <param name="e">A <see cref="T:System.Web.UI.WebControls.WebParts.WebPartAuthorizationEventArgs" />  that contains event data. </param>
    </member>
    <member name="M:System.Web.UI.WebControls.WebParts.WebPartManager.OnConnectionsActivated(System.EventArgs)">
      <summary>Raises the <see cref="E:System.Web.UI.WebControls.WebParts.WebPartManager.ConnectionsActivated" /> event to indicate that a page and its controls are loaded, and connections on the page have been activated to begin sharing data.</summary>
      <param name="e">An <see cref="T:System.EventArgs" /> that contains the event data. </param>
    </member>
    <member name="M:System.Web.UI.WebControls.WebParts.WebPartManager.OnConnectionsActivating(System.EventArgs)">
      <summary>Raises the <see cref="E:System.Web.UI.WebControls.WebParts.WebPartManager.ConnectionsActivating" /> event to indicate that a page and its controls have loaded, and the process of activating connections can begin.</summary>
      <param name="e">An <see cref="T:System.EventArgs" /> that contains the event data.  </param>
    </member>
    <member name="M:System.Web.UI.WebControls.WebParts.WebPartManager.OnDisplayModeChanged(System.Web.UI.WebControls.WebParts.WebPartDisplayModeEventArgs)">
      <summary>Raises the <see cref="E:System.Web.UI.WebControls.WebParts.WebPartManager.DisplayModeChanged" /> event to indicate that the <see cref="T:System.Web.UI.WebControls.WebParts.WebPartManager" /> control has completed the process of switching from one display mode to another on a Web page.</summary>
      <param name="e">A <see cref="T:System.Web.UI.WebControls.WebParts.WebPartDisplayModeEventArgs" /> that contains event data associated with a changed display mode.</param>
    </member>
    <member name="M:System.Web.UI.WebControls.WebParts.WebPartManager.OnDisplayModeChanging(System.Web.UI.WebControls.WebParts.WebPartDisplayModeCancelEventArgs)">
      <summary>Raises the <see cref="E:System.Web.UI.WebControls.WebParts.WebPartManager.DisplayModeChanging" /> event to indicate that the <see cref="T:System.Web.UI.WebControls.WebParts.WebPartManager" /> control is in the process of switching from one display mode to another on a Web page.</summary>
      <param name="e">An <see cref="T:System.EventArgs" /> that contains event data associated with a changing display mode. </param>
    </member>
    <member name="M:System.Web.UI.WebControls.WebParts.WebPartManager.OnInit(System.EventArgs)">
      <summary>Raises the <see cref="E:System.Web.UI.Control.Init" /> event, which is the first event in the <see cref="T:System.Web.UI.WebControls.WebParts.WebPartManager" /> control life cycle.</summary>
      <param name="e">An <see cref="T:System.EventArgs" /> that contains the event data. </param>
      <exception cref="T:System.InvalidOperationException">There is another <see cref="T:System.Web.UI.WebControls.WebParts.WebPartManager" /> control on the page</exception>
    </member>
    <member name="M:System.Web.UI.WebControls.WebParts.WebPartManager.OnPreRender(System.EventArgs)">
      <summary>Raises the <see cref="E:System.Web.UI.Control.PreRender" /> event, which occurs just before a <see cref="T:System.Web.UI.WebControls.WebParts.WebPartManager" /> control is rendered on a Web page. </summary>
      <param name="e">An <see cref="T:System.EventArgs" /> that contains the event data.  </param>
    </member>
    <member name="M:System.Web.UI.WebControls.WebParts.WebPartManager.OnSelectedWebPartChanged(System.Web.UI.WebControls.WebParts.WebPartEventArgs)">
      <summary>Raises the <see cref="E:System.Web.UI.WebControls.WebParts.WebPartManager.SelectedWebPartChanged" /> event, which occurs after a <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> control has either been newly selected or had its selection cleared.</summary>
      <param name="e">A <see cref="T:System.Web.UI.WebControls.WebParts.WebPartEventArgs" /> that contains the event data. </param>
    </member>
    <member name="M:System.Web.UI.WebControls.WebParts.WebPartManager.OnSelectedWebPartChanging(System.Web.UI.WebControls.WebParts.WebPartCancelEventArgs)">
      <summary>Raises the <see cref="E:System.Web.UI.WebControls.WebParts.WebPartManager.SelectedWebPartChanging" /> event, which occurs during the process of changing which <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> control is currently selected. </summary>
      <param name="e">A <see cref="T:System.Web.UI.WebControls.WebParts.WebPartCancelEventArgs" /> that contains the event data. </param>
    </member>
    <member name="M:System.Web.UI.WebControls.WebParts.WebPartManager.OnUnload(System.EventArgs)">
      <summary>Raises the base <see cref="E:System.Web.UI.Control.Unload" /> event and removes the <see cref="T:System.Web.UI.WebControls.WebParts.WebPartManager" /> instance from a Web page.</summary>
      <param name="e">Event data associated with the removal of the control.</param>
    </member>
    <member name="M:System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartAdded(System.Web.UI.WebControls.WebParts.WebPartEventArgs)">
      <summary>Raises the <see cref="E:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartAdded" /> event, which occurs after a <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> control has been added to a page.</summary>
      <param name="e">A <see cref="T:System.Web.UI.WebControls.WebParts.WebPartEventArgs" /> that contains the event data. </param>
    </member>
    <member name="M:System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartAdding(System.Web.UI.WebControls.WebParts.WebPartAddingEventArgs)">
      <summary>Raises the <see cref="E:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartAdding" /> event, which occurs during the process of adding a <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> control (or a server or user control) to a <see cref="T:System.Web.UI.WebControls.WebParts.WebPartZoneBase" /> zone.</summary>
      <param name="e">A <see cref="T:System.Web.UI.WebControls.WebParts.WebPartAddingEventArgs" /> that contains the event data. </param>
    </member>
    <member name="M:System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartClosed(System.Web.UI.WebControls.WebParts.WebPartEventArgs)">
      <summary>Raises the <see cref="E:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartClosed" /> event to signal that a control has been removed from a page.</summary>
      <param name="e">A <see cref="T:System.Web.UI.WebControls.WebParts.WebPartEventArgs" /> that contains the event data. </param>
    </member>
    <member name="M:System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartClosing(System.Web.UI.WebControls.WebParts.WebPartCancelEventArgs)">
      <summary>Raises the <see cref="E:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartClosing" /> event, which occurs during the process of a <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> or server control being removed from a page.</summary>
      <param name="e">A <see cref="T:System.Web.UI.WebControls.WebParts.WebPartCancelEventArgs" /> that contains the event data. </param>
    </member>
    <member name="M:System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartDeleted(System.Web.UI.WebControls.WebParts.WebPartEventArgs)">
      <summary>Raises the <see cref="E:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartDeleted" /> event, which occurs after a <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> control has been permanently deleted from a page.</summary>
      <param name="e">A <see cref="T:System.Web.UI.WebControls.WebParts.WebPartEventArgs" /> that contains the event data.  </param>
    </member>
    <member name="M:System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartDeleting(System.Web.UI.WebControls.WebParts.WebPartCancelEventArgs)">
      <summary>Raises the <see cref="E:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartDeleting" /> event, which indicates that a dynamic <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> control (or server or user control that is contained in a <see cref="T:System.Web.UI.WebControls.WebParts.WebPartZoneBase" /> zone) is in the process of being deleted.</summary>
      <param name="e">A <see cref="T:System.Web.UI.WebControls.WebParts.WebPartCancelEventArgs" /> that contains the event data.</param>
    </member>
    <member name="M:System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartMoved(System.Web.UI.WebControls.WebParts.WebPartEventArgs)">
      <summary>Raises the <see cref="E:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartMoved" /> event, which occurs after a <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> control has been moved to a different location on a page.</summary>
      <param name="e">A <see cref="T:System.Web.UI.WebControls.WebParts.WebPartEventArgs" /> that contains the event data. </param>
    </member>
    <member name="M:System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartMoving(System.Web.UI.WebControls.WebParts.WebPartMovingEventArgs)">
      <summary>Raises the <see cref="E:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartMoving" /> event, which indicates that a <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> or server or user control in a <see cref="T:System.Web.UI.WebControls.WebParts.WebPartZoneBase" /> zone is in the process of being moved.</summary>
      <param name="e">A <see cref="T:System.Web.UI.WebControls.WebParts.WebPartMovingEventArgs" /> that contains the event data. </param>
    </member>
    <member name="M:System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartsConnected(System.Web.UI.WebControls.WebParts.WebPartConnectionsEventArgs)">
      <summary>Raises the <see cref="E:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartsConnected" /> event, which occurs after a connection has been established between <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> controls.</summary>
      <param name="e">A <see cref="T:System.Web.UI.WebControls.WebParts.WebPartConnectionsEventArgs" /> that contains the event data. </param>
    </member>
    <member name="M:System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartsConnecting(System.Web.UI.WebControls.WebParts.WebPartConnectionsCancelEventArgs)">
      <summary>Raises the <see cref="E:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartsConnecting" /> event, which occurs during the process of establishing a connection between two <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> or server or user controls contained in a <see cref="T:System.Web.UI.WebControls.WebParts.WebPartZoneBase" /> zone.</summary>
      <param name="e">A <see cref="T:System.Web.UI.WebControls.WebParts.WebPartConnectionsCancelEventArgs" /> that contains the event data. </param>
    </member>
    <member name="M:System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartsDisconnected(System.Web.UI.WebControls.WebParts.WebPartConnectionsEventArgs)">
      <summary>Raises the <see cref="E:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartsDisconnected" /> event, which occurs after a connection between <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> controls has ended.</summary>
      <param name="e">A <see cref="T:System.Web.UI.WebControls.WebParts.WebPartConnectionsEventArgs" /> that contains the event data.  </param>
    </member>
    <member name="M:System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartsDisconnecting(System.Web.UI.WebControls.WebParts.WebPartConnectionsCancelEventArgs)">
      <summary>Raises the <see cref="E:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartsDisconnecting" /> event, which indicates that two <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> or server or user controls in a <see cref="T:System.Web.UI.WebControls.WebParts.WebPartZoneBase" /> zone are in the process of ending a connection.</summary>
      <param name="e">A <see cref="T:System.Web.UI.WebControls.WebParts.WebPartConnectionsCancelEventArgs" /> that contains the event data. </param>
    </member>
    <member name="P:System.Web.UI.WebControls.WebParts.WebPartManager.Personalization">
      <summary>Gets a reference to an object that contains personalization data for a Web page.</summary>
      <returns>A <see cref="T:System.Web.UI.WebControls.WebParts.WebPartPersonalization" /> that contains personalization data.</returns>
    </member>
    <member name="M:System.Web.UI.WebControls.WebParts.WebPartManager.RegisterClientScript">
      <summary>Enables the <see cref="T:System.Web.UI.WebControls.WebParts.WebPartManager" /> control to emit client-side script that is used for various personalization features, such as dragging <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> controls in a Web page.</summary>
    </member>
    <member name="M:System.Web.UI.WebControls.WebParts.WebPartManager.Render(System.Web.UI.HtmlTextWriter)">
      <summary>Overridden to prevent the <see cref="T:System.Web.UI.WebControls.WebParts.WebPartManager" /> control from rendering any content.</summary>
      <param name="writer">An <see cref="T:System.Web.UI.HtmlTextWriter" /> that receives the content of the control to write to the page.  </param>
    </member>
    <member name="M:System.Web.UI.WebControls.WebParts.WebPartManager.SaveControlState">
      <summary>Saves state data for the <see cref="T:System.Web.UI.WebControls.WebParts.WebPartManager" /> control so the data can be restored on future request to the Web page that contains the control.</summary>
      <returns>An <see cref="T:System.Object" /> to contain the control's saved state data.</returns>
    </member>
    <member name="M:System.Web.UI.WebControls.WebParts.WebPartManager.SaveCustomPersonalizationState(System.Web.UI.WebControls.WebParts.PersonalizationDictionary)">
      <summary>Saves custom personalization state data maintained by the <see cref="T:System.Web.UI.WebControls.WebParts.WebPartManager" /> control, so that this data can be reloaded whenever the page is reloaded.</summary>
      <param name="state">A <see cref="T:System.Web.UI.WebControls.WebParts.PersonalizationDictionary" /> that contains the state data to be loaded. </param>
    </member>
    <member name="P:System.Web.UI.WebControls.WebParts.WebPartManager.SelectedWebPart">
      <summary>Gets a reference to a <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> or other server control that is currently selected for editing or for creating a connection with another control.</summary>
      <returns>A <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> control that is currently selected for editing or forming a connection.</returns>
    </member>
    <member name="E:System.Web.UI.WebControls.WebParts.WebPartManager.SelectedWebPartChanged">
      <summary>Occurs after the selection of one <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> control has changed and moved to another control on a Web page.</summary>
    </member>
    <member name="E:System.Web.UI.WebControls.WebParts.WebPartManager.SelectedWebPartChanging">
      <summary>Occurs during the process of changing which <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> or server control is currently selected on a Web page.</summary>
    </member>
    <member name="M:System.Web.UI.WebControls.WebParts.WebPartManager.SetPersonalizationDirty">
      <summary>Sets a flag indicating that custom personalization data for the <see cref="T:System.Web.UI.WebControls.WebParts.WebPartManager" /> control has changed.</summary>
    </member>
    <member name="M:System.Web.UI.WebControls.WebParts.WebPartManager.SetSelectedWebPart(System.Web.UI.WebControls.WebParts.WebPart)">
      <summary>Sets the <see cref="P:System.Web.UI.WebControls.WebParts.WebPartManager.SelectedWebPart" /> property value equal to the currently selected <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> or server control.</summary>
      <param name="webPart">A <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> or server control that has been selected. </param>
    </member>
    <member name="P:System.Web.UI.WebControls.WebParts.WebPartManager.SkinID">
      <summary>Gets or sets an empty string ("") so that no skin can be applied to the <see cref="T:System.Web.UI.WebControls.WebParts.WebPartManager" /> control. </summary>
      <returns>An empty string that prevents the <see cref="T:System.Web.UI.WebControls.WebParts.WebPartManager" /> control from having a skin assigned to it.</returns>
      <exception cref="T:System.NotSupportedException">An attempt was made to set the property value.</exception>
    </member>
    <member name="P:System.Web.UI.WebControls.WebParts.WebPartManager.StaticConnections">
      <summary>Gets a reference to the collection of all <see cref="T:System.Web.UI.WebControls.WebParts.WebPartConnection" /> objects on a Web page that are defined as static connections.</summary>
      <returns>A <see cref="T:System.Web.UI.WebControls.WebParts.WebPartConnectionCollection" /> that contains all the static connections on the page.</returns>
    </member>
    <member name="P:System.Web.UI.WebControls.WebParts.WebPartManager.SupportedDisplayModes">
      <summary>Gets a read-only collection of all display modes that are available on a particular Web page.</summary>
      <returns>A <see cref="T:System.Web.UI.WebControls.WebParts.WebPartDisplayModeCollection" /> that contains the set of <see cref="T:System.Web.UI.WebControls.WebParts.WebPartDisplayMode" /> objects available on a specific Web page.</returns>
    </member>
    <member name="P:System.Web.UI.WebControls.WebParts.WebPartManager.System#Web#UI#WebControls#WebParts#IPersonalizable#IsDirty">
      <summary>Gets a value that indicates whether custom personalization state data managed by the <see cref="T:System.Web.UI.WebControls.WebParts.WebPartManager" /> control has changed on a Web page.</summary>
      <returns>A Boolean value that indicates whether the personalization state data has changed.</returns>
    </member>
    <member name="M:System.Web.UI.WebControls.WebParts.WebPartManager.System#Web#UI#WebControls#WebParts#IPersonalizable#Load(System.Web.UI.WebControls.WebParts.PersonalizationDictionary)">
      <summary>Returns previously saved custom personalization state data that needs to be loaded to the <see cref="T:System.Web.UI.WebControls.WebParts.WebPartManager" /> control.</summary>
      <param name="state">A <see cref="T:System.Web.UI.WebControls.WebParts.PersonalizationDictionary" /> that contains the state data to be loaded.</param>
    </member>
    <member name="M:System.Web.UI.WebControls.WebParts.WebPartManager.System#Web#UI#WebControls#WebParts#IPersonalizable#Save(System.Web.UI.WebControls.WebParts.PersonalizationDictionary)">
      <summary>Saves custom personalization state data that is managed by the <see cref="T:System.Web.UI.WebControls.WebParts.WebPartManager" /> control.</summary>
      <param name="state">A <see cref="T:System.Web.UI.WebControls.WebParts.PersonalizationDictionary" /> that contains the state data to be saved. </param>
    </member>
    <member name="M:System.Web.UI.WebControls.WebParts.WebPartManager.TrackViewState">
      <summary>Applies personalization state data to the <see cref="T:System.Web.UI.WebControls.WebParts.WebPartManager" /> control, and calls the base method to enable tracking changes to the view-state data for the control.</summary>
    </member>
    <member name="P:System.Web.UI.WebControls.WebParts.WebPartManager.Visible">
      <summary>Gets a value that enables child controls to be visible.</summary>
      <returns>A Boolean value that indicates whether a <see cref="T:System.Web.UI.WebControls.WebParts.WebPartManager" /> control and its child controls are visible. true in all cases.</returns>
      <exception cref="T:System.NotSupportedException">An attempt was made to assign a value to the property.</exception>
    </member>
    <member name="E:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartAdded">
      <summary>Occurs after a dynamic <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> or other server control has been added to a <see cref="T:System.Web.UI.WebControls.WebParts.WebPartZoneBase" /> zone, to indicate that the control was added successfully.</summary>
    </member>
    <member name="E:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartAdding">
      <summary>Occurs during the process of adding a dynamic <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> or other server control to a <see cref="T:System.Web.UI.WebControls.WebParts.WebPartZoneBase" /> zone.</summary>
    </member>
    <member name="E:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartClosed">
      <summary>Occurs when a <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> control (or server or user control) is removed from a page.</summary>
    </member>
    <member name="E:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartClosing">
      <summary>Occurs during the process of removing a <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> control (or server or user control) from a page.</summary>
    </member>
    <member name="E:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartDeleted">
      <summary>Occurs after a <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> or other server control has been deleted from a <see cref="T:System.Web.UI.WebControls.WebParts.WebPartZoneBase" /> zone.</summary>
    </member>
    <member name="E:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartDeleting">
      <summary>Occurs during the process of permanently deleting an instance of a dynamic <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> or other server control from a <see cref="T:System.Web.UI.WebControls.WebParts.WebPartZoneBase" /> zone.</summary>
    </member>
    <member name="E:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartMoved">
      <summary>Occurs after a <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> or server control has been moved to a different location on a Web page.</summary>
    </member>
    <member name="E:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartMoving">
      <summary>Occurs during the process of moving a <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> or other server control that is contained in a <see cref="T:System.Web.UI.WebControls.WebParts.WebPartZoneBase" /> zone.</summary>
    </member>
    <member name="P:System.Web.UI.WebControls.WebParts.WebPartManager.WebParts">
      <summary>Gets a reference to all <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> controls tracked by the <see cref="T:System.Web.UI.WebControls.WebParts.WebPartManager" /> control on a Web page.</summary>
      <returns>A <see cref="T:System.Web.UI.WebControls.WebParts.WebPartCollection" /> that contains references to a set of <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> controls.</returns>
    </member>
    <member name="E:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartsConnected">
      <summary>Occurs after a specific connection has been established between <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> controls (or server or user controls).</summary>
    </member>
    <member name="E:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartsConnecting">
      <summary>Occurs during the process of creating a connection between <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> controls (or server or user controls placed in a <see cref="T:System.Web.UI.WebControls.WebParts.WebPartZoneBase" /> zone).</summary>
    </member>
    <member name="E:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartsDisconnected">
      <summary>Occurs after a connection between two <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> or server controls has been terminated.</summary>
    </member>
    <member name="E:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartsDisconnecting">
      <summary>Occurs during the process of ending the connection between previously connected <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> or server controls.</summary>
    </member>
    <member name="P:System.Web.UI.WebControls.WebParts.WebPartManager.Zones">
      <summary>Gets a reference to a collection of all the <see cref="T:System.Web.UI.WebControls.WebParts.WebPartZoneBase" /> zones on a Web page.</summary>
      <returns>A <see cref="T:System.Web.UI.WebControls.WebParts.WebPartZoneCollection" /> that references a set of <see cref="T:System.Web.UI.WebControls.WebParts.WebPartZoneBase" /> zones.</returns>
    </member>
    <member name="T:System.Web.UI.WebControls.WebParts.WebPartManagerInternals">
      <summary>Isolates into a separate class methods that are used by the <see cref="T:System.Web.UI.WebControls.WebParts.WebPartManager" /> control and can be overridden by developers who extend the control, but are rarely needed by page developers.</summary>
    </member>
    <member name="M:System.Web.UI.WebControls.WebParts.WebPartManagerInternals.AddWebPart(System.Web.UI.WebControls.WebParts.WebPart)">
      <summary>Adds a <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> or server control to the <see cref="T:System.Web.UI.WebControls.WebParts.WebPartManager" /> control's collection of <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> controls on a Web page.</summary>
      <param name="webPart">The <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> being added to the <see cref="T:System.Web.UI.WebControls.WebParts.WebPartManager" /> control's collection of controls. </param>
    </member>
    <member name="M:System.Web.UI.WebControls.WebParts.WebPartManagerInternals.CallOnClosing(System.Web.UI.WebControls.WebParts.WebPart)">
      <summary>Calls the <see cref="M:System.Web.UI.WebControls.WebParts.WebPart.OnClosing(System.EventArgs)" /> method of the specified control.</summary>
      <param name="webPart">A <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" />  that has been selected for closing. </param>
    </member>
    <member name="M:System.Web.UI.WebControls.WebParts.WebPartManagerInternals.CallOnConnectModeChanged(System.Web.UI.WebControls.WebParts.WebPart)">
      <summary>Calls the <see cref="M:System.Web.UI.WebControls.WebParts.WebPart.OnConnectModeChanged(System.EventArgs)" /> method of the specified control.</summary>
      <param name="webPart">A <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" />  that has entered or exited the connect display mode. </param>
    </member>
    <member name="M:System.Web.UI.WebControls.WebParts.WebPartManagerInternals.CallOnDeleting(System.Web.UI.WebControls.WebParts.WebPart)">
      <summary>Calls the <see cref="M:System.Web.UI.WebControls.WebParts.WebPart.OnDeleting(System.EventArgs)" /> method of the specified control.</summary>
      <param name="webPart">A <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" />  that has been selected for deletion. </param>
    </member>
    <member name="M:System.Web.UI.WebControls.WebParts.WebPartManagerInternals.CallOnEditModeChanged(System.Web.UI.WebControls.WebParts.WebPart)">
      <summary>Calls the <see cref="M:System.Web.UI.WebControls.WebParts.WebPart.OnEditModeChanged(System.EventArgs)" /> method of the specified control.</summary>
      <param name="webPart">A <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" />  that has entered or exited edit display mode. </param>
    </member>
    <member name="M:System.Web.UI.WebControls.WebParts.WebPartManagerInternals.ConnectionDeleted(System.Web.UI.WebControls.WebParts.WebPartConnection)">
      <summary>Indicates whether the specified <see cref="T:System.Web.UI.WebControls.WebParts.WebPartConnection" /> object has been deleted.</summary>
      <returns>A Boolean value that indicates whether the connection has been deleted.</returns>
      <param name="connection">A <see cref="T:System.Web.UI.WebControls.WebParts.WebPartConnection" /> that has been selected for deletion.</param>
    </member>
    <member name="M:System.Web.UI.WebControls.WebParts.WebPartManagerInternals.CreateObjectFromType(System.Type)">
      <summary>Creates an object based on the parameter passed to the method.</summary>
      <returns>An <see cref="T:System.Object" /> of the same type as <paramref name="type" />.</returns>
      <param name="type">The <see cref="T:System.Type" /> of the object to create. </param>
    </member>
    <member name="M:System.Web.UI.WebControls.WebParts.WebPartManagerInternals.DeleteConnection(System.Web.UI.WebControls.WebParts.WebPartConnection)">
      <summary>Sets a property to indicate that the specified connection object has been deleted.</summary>
      <param name="connection">A <see cref="T:System.Web.UI.WebControls.WebParts.WebPartConnection" /> that has been selected for deletion.</param>
    </member>
    <member name="M:System.Web.UI.WebControls.WebParts.WebPartManagerInternals.GetZoneID(System.Web.UI.WebControls.WebParts.WebPart)">
      <summary>Gets the ID of a zone that contains the specified <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> or server control.</summary>
      <returns>A string that represents the ID of the zone that contains <paramref name="webPart" />.</returns>
      <param name="webPart">A <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" />  that resides in a zone. </param>
    </member>
    <member name="M:System.Web.UI.WebControls.WebParts.WebPartManagerInternals.LoadConfigurationState(System.Web.UI.WebControls.WebParts.WebPartTransformer,System.Object)">
      <summary>Loads previously saved state data for a <see cref="T:System.Web.UI.WebControls.WebParts.WebPartTransformer" /> object that participates in a connection between controls.</summary>
      <param name="transformer">A <see cref="T:System.Web.UI.WebControls.WebParts.WebPartTransformer" /> that is used to connect controls.</param>
      <param name="savedState">An <see cref="T:System.Object" /> that contains the previously saved state data.</param>
    </member>
    <member name="M:System.Web.UI.WebControls.WebParts.WebPartManagerInternals.RemoveWebPart(System.Web.UI.WebControls.WebParts.WebPart)">
      <summary>Removes a <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> or other server control from the <see cref="T:System.Web.UI.WebControls.WebParts.WebPartManager" /> control's collection of controls.</summary>
      <param name="webPart">A <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> or other server control to be removed. </param>
    </member>
    <member name="M:System.Web.UI.WebControls.WebParts.WebPartManagerInternals.SaveConfigurationState(System.Web.UI.WebControls.WebParts.WebPartTransformer)">
      <summary>Saves state data for a <see cref="T:System.Web.UI.WebControls.WebParts.WebPartTransformer" /> object that participates in a connection between controls.</summary>
      <returns>An <see cref="T:System.Object" /> that contains the saved state data.</returns>
      <param name="transformer">A <see cref="T:System.Web.UI.WebControls.WebParts.WebPartTransformer" /> that is used to connect controls.</param>
    </member>
    <member name="M:System.Web.UI.WebControls.WebParts.WebPartManagerInternals.SetConnectErrorMessage(System.Web.UI.WebControls.WebParts.WebPart,System.String)">
      <summary>Establishes an errors message, and causes the <see cref="T:System.Web.UI.WebControls.WebParts.WebPartChrome" /> object that is responsible for rendering a <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> control to render that message rather than the contents of the control.</summary>
      <param name="webPart">A <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> that participates in a connection with another control. </param>
      <param name="connectErrorMessage">A string that contains the text of the error message. </param>
    </member>
    <member name="M:System.Web.UI.WebControls.WebParts.WebPartManagerInternals.SetHasSharedData(System.Web.UI.WebControls.WebParts.WebPart,System.Boolean)">
      <summary>Sets a property on a <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> or other server control indicating whether the control has shared personalization data.</summary>
      <param name="webPart">A <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> or other server control that can have shared personalization data. </param>
      <param name="hasSharedData">A Boolean value that indicates whether <paramref name="webPart" /> has shared data. </param>
    </member>
    <member name="M:System.Web.UI.WebControls.WebParts.WebPartManagerInternals.SetHasUserData(System.Web.UI.WebControls.WebParts.WebPart,System.Boolean)">
      <summary>Sets a property on a <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> or other server control indicating whether the control has user personalization data.</summary>
      <param name="webPart">A <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> or other server control that can have user personalization data. </param>
      <param name="hasUserData">A Boolean value that indicates whether <paramref name="webPart" /> has shared data. </param>
    </member>
    <member name="M:System.Web.UI.WebControls.WebParts.WebPartManagerInternals.SetIsClosed(System.Web.UI.WebControls.WebParts.WebPart,System.Boolean)">
      <summary>Sets the <see cref="P:System.Web.UI.WebControls.WebParts.WebPart.IsClosed" /> property of a <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> control.</summary>
      <param name="webPart">A <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> for which this method sets the <see cref="P:System.Web.UI.WebControls.WebParts.WebPart.IsClosed" /> property. </param>
      <param name="isClosed">A Boolean value that indicates whether a <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> is closed on a page. </param>
    </member>
    <member name="M:System.Web.UI.WebControls.WebParts.WebPartManagerInternals.SetIsShared(System.Web.UI.WebControls.WebParts.WebPart,System.Boolean)">
      <summary>Sets the <see cref="P:System.Web.UI.WebControls.WebParts.WebPart.IsShared" /> property of a <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> control.</summary>
      <param name="webPart">A <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> for which this method sets the <see cref="P:System.Web.UI.WebControls.WebParts.WebPart.IsShared" /> property. </param>
      <param name="isShared">A Boolean value that indicates whether <paramref name="webPart" /> is shared. </param>
    </member>
    <member name="M:System.Web.UI.WebControls.WebParts.WebPartManagerInternals.SetIsShared(System.Web.UI.WebControls.WebParts.WebPartConnection,System.Boolean)">
      <summary>Sets the <see cref="P:System.Web.UI.WebControls.WebParts.WebPartConnection.IsShared" /> property of a <see cref="T:System.Web.UI.WebControls.WebParts.WebPartConnection" /> object. </summary>
      <param name="connection">A <see cref="T:System.Web.UI.WebControls.WebParts.WebPartConnection" /> between two <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> controls.  </param>
      <param name="isShared">A Boolean value that indicates whether <paramref name="connection" /> is shared. </param>
    </member>
    <member name="M:System.Web.UI.WebControls.WebParts.WebPartManagerInternals.SetIsStandalone(System.Web.UI.WebControls.WebParts.WebPart,System.Boolean)">
      <summary>Sets the <see cref="P:System.Web.UI.WebControls.WebParts.WebPart.IsStandalone" /> property of a <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> control.</summary>
      <param name="webPart">A <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> for which this method sets the <see cref="P:System.Web.UI.WebControls.WebParts.WebPart.IsStandalone" /> property.  </param>
      <param name="isStandalone">A Boolean value that indicates whether <paramref name="webPart" /> is a standalone control. </param>
    </member>
    <member name="M:System.Web.UI.WebControls.WebParts.WebPartManagerInternals.SetIsStatic(System.Web.UI.WebControls.WebParts.WebPart,System.Boolean)">
      <summary>Sets the <see cref="P:System.Web.UI.WebControls.WebParts.WebPart.IsStatic" /> property of a <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> control.</summary>
      <param name="webPart">The control for which the property value is being set. </param>
      <param name="isStatic">A Boolean value that indicates whether <paramref name="webPart" /> is static. </param>
    </member>
    <member name="M:System.Web.UI.WebControls.WebParts.WebPartManagerInternals.SetIsStatic(System.Web.UI.WebControls.WebParts.WebPartConnection,System.Boolean)">
      <summary>Sets the <see cref="P:System.Web.UI.WebControls.WebParts.WebPartConnection.IsStatic" /> property of a <see cref="T:System.Web.UI.WebControls.WebParts.WebPartConnection" /> object.</summary>
      <param name="connection">The connection for which the property value is being set. </param>
      <param name="isStatic">A Boolean value that indicates whether <paramref name="connection" /> is static.  </param>
    </member>
    <member name="M:System.Web.UI.WebControls.WebParts.WebPartManagerInternals.SetTransformer(System.Web.UI.WebControls.WebParts.WebPartConnection,System.Web.UI.WebControls.WebParts.WebPartTransformer)">
      <summary>Assigns a <see cref="T:System.Web.UI.WebControls.WebParts.WebPartTransformer" /> object to be used in a connection between two server controls.</summary>
      <param name="connection">A <see cref="T:System.Web.UI.WebControls.WebParts.WebPartConnection" /> that creates a connection between server controls. </param>
      <param name="transformer">A <see cref="T:System.Web.UI.WebControls.WebParts.WebPartTransformer" /> to be used with <paramref name="connection" />.</param>
    </member>
    <member name="M:System.Web.UI.WebControls.WebParts.WebPartManagerInternals.SetZoneID(System.Web.UI.WebControls.WebParts.WebPart,System.String)">
      <summary>Sets a property that enables a <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> or server control to keep the ID of the containing zone.</summary>
      <param name="webPart">The <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> whose <paramref name="zoneID" /> property value is being set. </param>
      <param name="zoneID">A string that contains the ID of the zone that <paramref name="webPart" /> belongs to. </param>
    </member>
    <member name="M:System.Web.UI.WebControls.WebParts.WebPartManagerInternals.SetZoneIndex(System.Web.UI.WebControls.WebParts.WebPart,System.Int32)">
      <summary>Sets the index of the specified controlwithin its zone relative to the other <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> controls within the zone.</summary>
      <param name="webPart">A <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> control for which the method sets a zone index.</param>
      <param name="zoneIndex">The index of <paramref name="webPart" /> within its zone relative to other controls in the zone.</param>
    </member>
    <member name="T:System.Web.UI.WebControls.WebParts.WebPartMenuStyle">
      <summary>Contains style characteristics for menus on <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> controls. This class cannot be inherited.</summary>
    </member>
    <member name="M:System.Web.UI.WebControls.WebParts.WebPartMenuStyle.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Web.UI.WebControls.WebParts.WebPartMenuStyle" /> class using default style values.</summary>
    </member>
    <member name="M:System.Web.UI.WebControls.WebParts.WebPartMenuStyle.#ctor(System.Web.UI.StateBag)">
      <summary>Initializes a new instance of the <see cref="T:System.Web.UI.WebControls.WebParts.WebPartMenuStyle" /> class using style values from the specified state bag object.</summary>
      <param name="bag">A <see cref="T:System.Web.UI.StateBag" /> that stores style information.  </param>
    </member>
    <member name="M:System.Web.UI.WebControls.WebParts.WebPartMenuStyle.CopyFrom(System.Web.UI.WebControls.Style)">
      <summary>Copies nonblank style elements to the <see cref="T:System.Web.UI.WebControls.WebParts.WebPartMenuStyle" /> object, overwriting any existing style elements in the process. </summary>
      <param name="s">A <see cref="T:System.Web.UI.WebControls.Style" /> that contains style information to copy. </param>
    </member>
    <member name="P:System.Web.UI.WebControls.WebParts.WebPartMenuStyle.HorizontalAlign">
      <summary>Gets a value indicating what type of horizontal alignment to use for the content of a menu on a <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> control.</summary>
      <returns>A <see cref="T:System.Web.UI.WebControls.HorizontalAlign" /> enumeration value that specifies what type of alignment to use. The default value is obtained from the base <see cref="P:System.Web.UI.WebControls.TableStyle.HorizontalAlign" /> property value. </returns>
    </member>
    <member name="M:System.Web.UI.WebControls.WebParts.WebPartMenuStyle.MergeWith(System.Web.UI.WebControls.Style)">
      <summary>Copies nonblank style elements to the <see cref="T:System.Web.UI.WebControls.WebParts.WebPartMenuStyle" /> instance, but does not overwrite existing style elements.</summary>
      <param name="s">A <see cref="T:System.Web.UI.WebControls.Style" /> that contains style information to copy. </param>
    </member>
    <member name="M:System.Web.UI.WebControls.WebParts.WebPartMenuStyle.Reset">
      <summary>Removes any defined style elements from the <see cref="T:System.Web.UI.WebControls.WebParts.WebPartMenuStyle" /> object's state bag.</summary>
    </member>
    <member name="P:System.Web.UI.WebControls.WebParts.WebPartMenuStyle.ShadowColor">
      <summary>Gets or sets a value that determines the shadow color for a menu on a <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> control.</summary>
      <returns>A <see cref="T:System.Drawing.Color" /> that determines the shadow color. The default value is <see cref="F:System.Drawing.Color.Empty" />.</returns>
    </member>
    <member name="M:System.Web.UI.WebControls.WebParts.WebPartMenuStyle.System#ComponentModel#ICustomTypeDescriptor#GetAttributes">
      <summary>Returns a collection of custom attributes for this instance of a component. Implements the <see cref="M:System.ComponentModel.ICustomTypeDescriptor.GetAttributes" /> method.</summary>
      <returns>An <see cref="T:System.ComponentModel.AttributeCollection" /> containing the attributes for this object.</returns>
    </member>
    <member name="M:System.Web.UI.WebControls.WebParts.WebPartMenuStyle.System#ComponentModel#ICustomTypeDescriptor#GetClassName">
      <summary>Returns the class name of this instance of a component. This method implements the <see cref="M:System.ComponentModel.ICustomTypeDescriptor.GetClassName" /> method.</summary>
      <returns>A string that contains the class name of the object, or null if the class has no name.</returns>
    </member>
    <member name="M:System.Web.UI.WebControls.WebParts.WebPartMenuStyle.System#ComponentModel#ICustomTypeDescriptor#GetComponentName">
      <summary>Returns the name of this instance of a component. This method implements the <see cref="M:System.ComponentModel.ICustomTypeDescriptor.GetComponentName" /> method.</summary>
      <returns>A string that contains the object name, or null if the object has no name.</returns>
    </member>
    <member name="M:System.Web.UI.WebControls.WebParts.WebPartMenuStyle.System#ComponentModel#ICustomTypeDescriptor#GetConverter">
      <summary>Returns a type converter for this instance of a component. This method implements the <see cref="M:System.ComponentModel.ICustomTypeDescriptor.GetConverter" /> method.</summary>
      <returns>A <see cref="T:System.ComponentModel.TypeConverter" /> used for this object, or null if there is no <see cref="T:System.ComponentModel.TypeConverter" />.</returns>
    </member>
    <member name="M:System.Web.UI.WebControls.WebParts.WebPartMenuStyle.System#ComponentModel#ICustomTypeDescriptor#GetDefaultEvent">
      <summary>Returns the default event for this instance of a component. This method implements the <see cref="M:System.ComponentModel.ICustomTypeDescriptor.GetDefaultEvent" /> method.</summary>
      <returns>An <see cref="T:System.ComponentModel.EventDescriptor" /> that represents the default event for this object, or null if the object has no events.</returns>
    </member>
    <member name="M:System.Web.UI.WebControls.WebParts.WebPartMenuStyle.System#ComponentModel#ICustomTypeDescriptor#GetDefaultProperty">
      <summary>Returns the default property for this instance of a component. This method implements the <see cref="M:System.ComponentModel.ICustomTypeDescriptor.GetDefaultProperty" /> method.</summary>
      <returns>A <see cref="T:System.ComponentModel.PropertyDescriptor" /> that represents the default property for this object, or null if the object has no properties.</returns>
    </member>
    <member name="M:System.Web.UI.WebControls.WebParts.WebPartMenuStyle.System#ComponentModel#ICustomTypeDescriptor#GetEditor(System.Type)">
      <summary>Returns an editor of the specified type for this instance of a component. This method implements the <see cref="M:System.ComponentModel.ICustomTypeDescriptor.GetEditor(System.Type)" /> method.</summary>
      <returns>An <see cref="T:System.Object" /> of type <paramref name="editorBaseType" /> that serves as the editor for this object, or null if the editor cannot be found.</returns>
      <param name="editorBaseType">A <see cref="T:System.Type" /> that represents the editor for this object. </param>
    </member>
    <member name="M:System.Web.UI.WebControls.WebParts.WebPartMenuStyle.System#ComponentModel#ICustomTypeDescriptor#GetEvents">
      <summary>Returns the events for this instance of a component. This method implements the <see cref="M:System.ComponentModel.ICustomTypeDescriptor.GetEvents" /> method overload.</summary>
      <returns>An <see cref="T:System.ComponentModel.EventDescriptorCollection" /> that represents the events for this object.</returns>
    </member>
    <member name="M:System.Web.UI.WebControls.WebParts.WebPartMenuStyle.System#ComponentModel#ICustomTypeDescriptor#GetEvents(System.Attribute[])">
      <summary>Returns the events for this instance of a component using the specified attribute array as a filter. This method implements the <see cref="M:System.ComponentModel.ICustomTypeDescriptor.GetEvents(System.Attribute[])" /> method overload.</summary>
      <returns>An <see cref="T:System.ComponentModel.EventDescriptorCollection" /> that represents the filtered events for this object.</returns>
      <param name="attributes">An array of type <see cref="T:System.Attribute" /> used as a filter. </param>
    </member>
    <member name="M:System.Web.UI.WebControls.WebParts.WebPartMenuStyle.System#ComponentModel#ICustomTypeDescriptor#GetProperties">
      <summary>Returns the properties for this instance of a component. This method implements the <see cref="M:System.ComponentModel.ICustomTypeDescriptor.GetProperties" /> method overload.</summary>
      <returns>A <see cref="T:System.ComponentModel.PropertyDescriptorCollection" /> that represents the properties for this object.</returns>
    </member>
    <member name="M:System.Web.UI.WebControls.WebParts.WebPartMenuStyle.System#ComponentModel#ICustomTypeDescriptor#GetProperties(System.Attribute[])">
      <summary>Returns the properties for this instance of a component using the attribute array as a filter. This method implements the <see cref="M:System.ComponentModel.ICustomTypeDescriptor.GetProperties(System.Attribute[])" /> method overload.</summary>
      <returns>A <see cref="T:System.ComponentModel.PropertyDescriptorCollection" /> that represents the filtered properties for this object.</returns>
      <param name="attributes">An array of type <see cref="T:System.Attribute" /> used as a filter.  </param>
    </member>
    <member name="M:System.Web.UI.WebControls.WebParts.WebPartMenuStyle.System#ComponentModel#ICustomTypeDescriptor#GetPropertyOwner(System.ComponentModel.PropertyDescriptor)">
      <summary>Returns an object that contains the property described by the specified property descriptor. This method implements the <see cref="M:System.ComponentModel.ICustomTypeDescriptor.GetPropertyOwner(System.ComponentModel.PropertyDescriptor)" /> method.</summary>
      <returns>An <see cref="T:System.Object" /> that represents the owner of the specified property.</returns>
      <param name="pd">A <see cref="T:System.ComponentModel.PropertyDescriptor" /> that represents the property whose owner is to be found. </param>
    </member>
    <member name="T:System.Web.UI.WebControls.WebParts.WebPartMovingEventArgs">
      <summary>Provides data for the <see cref="E:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartMoving" /> event. </summary>
    </member>
    <member name="M:System.Web.UI.WebControls.WebParts.WebPartMovingEventArgs.#ctor(System.Web.UI.WebControls.WebParts.WebPart,System.Web.UI.WebControls.WebParts.WebPartZoneBase,System.Int32)">
      <summary>Initializes a new instance of the <see cref="T:System.Web.UI.WebControls.WebParts.WebPartMovingEventArgs" /> class. </summary>
      <param name="webPart">The <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> or other server control being moved.</param>
      <param name="zone">The target <see cref="T:System.Web.UI.WebControls.WebParts.WebPartZoneBase" /> to which <paramref name="webPart" /> is being moved.</param>
      <param name="zoneIndex">An integer that indicates the index of <paramref name="webPart" /> relative to other controls within <paramref name="zone" />.</param>
    </member>
    <member name="P:System.Web.UI.WebControls.WebParts.WebPartMovingEventArgs.Zone">
      <summary>Gets or sets the Web Parts zone to which the Web Parts control is being moved.</summary>
      <returns>The <see cref="T:System.Web.UI.WebControls.WebParts.WebPartZoneBase" /> to which the Web Parts control is being moved.</returns>
    </member>
    <member name="P:System.Web.UI.WebControls.WebParts.WebPartMovingEventArgs.ZoneIndex">
      <summary>Gets or sets the index position of a Web Parts control within its zone.</summary>
      <returns>The numerical order of a control within its zone. The first control in a zone has an index value of zero.</returns>
    </member>
    <member name="T:System.Web.UI.WebControls.WebParts.WebPartMovingEventHandler">
      <summary>Represents the method that will handle the <see cref="E:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartMoving" /> event of a <see cref="T:System.Web.UI.WebControls.WebParts.WebPartManager" /> object. </summary>
      <param name="sender">The source of the event.</param>
      <param name="e">A <see cref="T:System.Web.UI.WebControls.WebParts.WebPartMovingEventArgs" /> that contains the event data.</param>
    </member>
    <member name="T:System.Web.UI.WebControls.WebParts.WebPartPersonalization">
      <summary>Implements low-level personalization operations.</summary>
    </member>
    <member name="M:System.Web.UI.WebControls.WebParts.WebPartPersonalization.#ctor(System.Web.UI.WebControls.WebParts.WebPartManager)">
      <summary>Initializes a new instance of the <see cref="T:System.Web.UI.WebControls.WebParts.WebPartPersonalization" /> class. </summary>
      <param name="owner">The <see cref="T:System.Web.UI.WebControls.WebParts.WebPartManager" /> used to manage the personalization information</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="owner" /> is null.</exception>
    </member>
    <member name="M:System.Web.UI.WebControls.WebParts.WebPartPersonalization.ApplyPersonalizationState">
      <summary>Applies personalization data to the parent <see cref="T:System.Web.UI.WebControls.WebParts.WebPartManager" /> control.</summary>
      <exception cref="T:System.InvalidOperationException">An attempt was made to apply personalization state prior to the state being loaded from the underlying data store.- or -The personalization state returned from the data store was null.</exception>
    </member>
    <member name="M:System.Web.UI.WebControls.WebParts.WebPartPersonalization.ApplyPersonalizationState(System.Web.UI.WebControls.WebParts.WebPart)">
      <summary>Applies personalization data to the specified <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> control when requested to do so by the parent <see cref="T:System.Web.UI.WebControls.WebParts.WebPartManager" /> control.</summary>
      <param name="webPart">The Web Parts control to which personalization data is to be applied.</param>
      <exception cref="T:System.ArgumentException">An attempt was made to apply personalization state to a Web Parts control that is not managed by the parent <see cref="T:System.Web.UI.WebControls.WebParts.WebPartManager" />.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="webPart" /> is null.</exception>
      <exception cref="T:System.InvalidOperationException">An attempt was made to apply personalization state prior to the state being loaded from the underlying data store.- or -The personalization state returned from the data store was null.- or -An attempt was made to apply personalization data more than once to the same Web Parts control.</exception>
    </member>
    <member name="P:System.Web.UI.WebControls.WebParts.WebPartPersonalization.CanEnterSharedScope">
      <summary>Returns a value indicating whether the user is authorized to enter <see cref="F:System.Web.UI.WebControls.WebParts.PersonalizationScope.Shared" /> scope.</summary>
      <returns>true if the user is authorized to enter <see cref="F:System.Web.UI.WebControls.WebParts.PersonalizationScope.Shared" /> scope; otherwise, false.</returns>
    </member>
    <member name="M:System.Web.UI.WebControls.WebParts.WebPartPersonalization.ChangeScope(System.Web.UI.WebControls.WebParts.PersonalizationScope)">
      <summary>Changes the current page's <see cref="T:System.Web.UI.WebControls.WebParts.PersonalizationScope" /> instance to the scope specified.</summary>
      <param name="scope">The new personalization scope for the current page.</param>
      <exception cref="T:System.InvalidOperationException">If attempting to switch from <see cref="F:System.Web.UI.WebControls.WebParts.PersonalizationScope.User" /> scope to <see cref="F:System.Web.UI.WebControls.WebParts.PersonalizationScope.Shared" /> scope, the current user does not have the user capability to enter <see cref="F:System.Web.UI.WebControls.WebParts.PersonalizationScope.Shared" /> scope.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="scope" /> is not a valid member of the <see cref="T:System.Web.UI.WebControls.WebParts.PersonalizationScope" /> enumeration.</exception>
    </member>
    <member name="M:System.Web.UI.WebControls.WebParts.WebPartPersonalization.CopyPersonalizationState(System.Web.UI.WebControls.WebParts.WebPart,System.Web.UI.WebControls.WebParts.WebPart)">
      <summary>Extracts the personalization state from one Web Parts control and applies it to a second Web Parts control.</summary>
      <param name="webPartA">The Web Parts control supplying the personalization data.</param>
      <param name="webPartB">The Web Parts control receiving the personalization data.</param>
      <exception cref="T:System.ArgumentNullException">Either <paramref name="webPartA" /> or <paramref name="webPartB" /> is null.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="webPartA" /> and <paramref name="webPartB" /> are not of the same <see cref="T:System.Type" />.- or -<paramref name="webPartA" /> and <paramref name="webPartB" /> are <see cref="T:System.Web.UI.WebControls.WebParts.GenericWebPart" /> controls but one or both lack a child control.- or -<paramref name="webPartA" /> and <paramref name="webPartB" /> are <see cref="T:System.Web.UI.WebControls.WebParts.GenericWebPart" /> controls, but their child controls are not of the same <see cref="T:System.Type" />.</exception>
    </member>
    <member name="P:System.Web.UI.WebControls.WebParts.WebPartPersonalization.Enabled">
      <summary>Returns a value indicating whether personalization is requested to be enabled for the associated <see cref="T:System.Web.UI.WebControls.WebParts.WebPartManager" /> control.</summary>
      <returns>true if personalization is enabled; otherwise, false.</returns>
      <exception cref="T:System.InvalidOperationException">An attempt was made to set this property value after the associated <see cref="T:System.Web.UI.WebControls.WebParts.WebPartManager" /> control's <see cref="M:System.Web.UI.WebControls.WebParts.WebPartManager.OnInit(System.EventArgs)" /> method had completed.</exception>
    </member>
    <member name="M:System.Web.UI.WebControls.WebParts.WebPartPersonalization.EnsureEnabled(System.Boolean)">
      <summary>Ensures that the <see cref="T:System.Web.UI.WebControls.WebParts.WebPartPersonalization" /> instance has completed initialization or that the current user has rights to modify personalization state.</summary>
      <param name="ensureModifiable">A Boolean value indicating which type of check should be made.</param>
      <exception cref="T:System.InvalidOperationException">The current user does not have rights to modify personalization information, or other checks failed.- or -<see cref="P:System.Web.UI.WebControls.WebParts.WebPartPersonalization.IsEnabled" /> returned false.</exception>
    </member>
    <member name="F:System.Web.UI.WebControls.WebParts.WebPartPersonalization.EnterSharedScopeUserCapability">
      <summary>Represents the <see cref="T:System.Web.UI.WebControls.WebParts.WebPartUserCapability" /> instance of a user's authorization to enter <see cref="F:System.Web.UI.WebControls.WebParts.PersonalizationScope.Shared" /> scope.</summary>
    </member>
    <member name="M:System.Web.UI.WebControls.WebParts.WebPartPersonalization.ExtractPersonalizationState">
      <summary>Extracts personalization data from the parent <see cref="T:System.Web.UI.WebControls.WebParts.WebPartManager" /> control.</summary>
      <exception cref="T:System.InvalidOperationException">An attempt was made to extract personalization state prior to the state being loaded from the underlying data store.- or -Personalization state has not been applied yet.- or -The <see cref="P:System.Web.UI.Control.ID" /> of the <see cref="T:System.Web.UI.WebControls.WebParts.WebPartManager" /> has changed since personalization data was applied.- or - The personalization state returned from the data store was null.</exception>
    </member>
    <member name="M:System.Web.UI.WebControls.WebParts.WebPartPersonalization.ExtractPersonalizationState(System.Web.UI.WebControls.WebParts.WebPart)">
      <summary>Extracts personalization data from a Web Parts control when requested to do so by the parent <see cref="T:System.Web.UI.WebControls.WebParts.WebPartManager" /> control.</summary>
      <param name="webPart">The Web Parts control containing personalization data to be extracted.</param>
      <exception cref="T:System.ArgumentException">An attempt was made to extract personalization state from a Web Parts control that is not managed by the parent <see cref="T:System.Web.UI.WebControls.WebParts.WebPartManager" />.</exception>
      <exception cref="T:System.InvalidOperationException">An attempt was made to extract personalization state prior to the state being loaded from the underlying data store.- or -Personalization state has not been applied yet.- or -The <see cref="P:System.Web.UI.Control.ID" /> of the <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> has changed since personalization data was applied.- or - The personalization state returned from the data store was null.</exception>
    </member>
    <member name="M:System.Web.UI.WebControls.WebParts.WebPartPersonalization.GetAuthorizationFilter(System.String)">
      <summary>Retrieves the authorization filter, if any, associated with the specified Web Parts control.</summary>
      <returns>The authorization filter for the specified Web Parts control.</returns>
      <param name="webPartID">The ID of the Web Parts control associated with the filter to be retrieved.</param>
      <exception cref="T:System.InvalidOperationException">An attempt was made to retrieve an authorization filter when <see cref="P:System.Web.UI.WebControls.WebParts.WebPartPersonalization.IsEnabled" /> is false by calling this method too early in the page life cycle.- or -An attempt was made to retrieve an authorization filter and no personalization state has been loaded.- or The personalization state returned from the data store was null.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="webPartID" /> is null or an empty string ("").</exception>
    </member>
    <member name="P:System.Web.UI.WebControls.WebParts.WebPartPersonalization.HasPersonalizationState">
      <summary>Returns a value indicating whether the current page and personalization scope have associated personalization data.</summary>
      <returns>true if the page has personalization data associated with it; otherwise, false.</returns>
      <exception cref="T:System.InvalidOperationException">There is no personalization provider associated with the <see cref="T:System.Web.UI.WebControls.WebParts.WebPartPersonalization" /> instance. This can occur if the property is accessed prior to the completion of the associated <see cref="T:System.Web.UI.WebControls.WebParts.WebPartManager" /> control's <see cref="M:System.Web.UI.WebControls.WebParts.WebPartManager.OnInit(System.EventArgs)" /> method.- or -The value of the <see cref="P:System.Web.UI.Control.Page" /> property for the associated <see cref="T:System.Web.UI.WebControls.WebParts.WebPartManager" /> is null.- or -The value of the <see cref="P:System.Web.UI.Page.Request" /> property on the <see cref="T:System.Web.UI.WebControls.WebParts.WebPartManager" /> control's associated <see cref="T:System.Web.UI.Page" /> instance is null.</exception>
    </member>
    <member name="P:System.Web.UI.WebControls.WebParts.WebPartPersonalization.InitialScope">
      <summary>Gets or sets the default personalization scope.</summary>
      <returns>The <see cref="T:System.Web.UI.WebControls.WebParts.PersonalizationScope" /> indicating the default personalization scope of the associated <see cref="T:System.Web.UI.WebControls.WebParts.WebPartManager" />.</returns>
      <exception cref="T:System.InvalidOperationException">An attempt was made to set this property to a value other than its current value after the associated <see cref="T:System.Web.UI.WebControls.WebParts.WebPartManager" /> control's <see cref="M:System.Web.UI.WebControls.WebParts.WebPartManager.OnInit(System.EventArgs)" /> method had completed.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">An attempt was made to set a value of <see cref="P:System.Web.UI.WebControls.WebParts.WebPartPersonalization.InitialScope" /> that is not a member of the <see cref="T:System.Web.UI.WebControls.WebParts.PersonalizationScope" /> enumeration.</exception>
    </member>
    <member name="P:System.Web.UI.WebControls.WebParts.WebPartPersonalization.IsEnabled">
      <summary>Gets a value that indicates whether personalization is enabled and has successfully loaded personalization data for this instance of the <see cref="T:System.Web.UI.WebControls.WebParts.WebPartPersonalization" /> class.</summary>
      <returns>true if personalization is enabled for the current <see cref="T:System.Web.UI.WebControls.WebParts.WebPartPersonalization" /> instance and personalization data has successfully loaded; otherwise, false.</returns>
    </member>
    <member name="P:System.Web.UI.WebControls.WebParts.WebPartPersonalization.IsInitialized">
      <summary>Gets a value that indicates whether personalization is enabled and has successfully loaded personalization data for this instance of the <see cref="T:System.Web.UI.WebControls.WebParts.WebPartPersonalization" /> class.</summary>
      <returns>true if personalization is initialized for this instance; otherwise, false.</returns>
    </member>
    <member name="P:System.Web.UI.WebControls.WebParts.WebPartPersonalization.IsModifiable">
      <summary>Gets a value that indicates whether the current user is authorized to modify state information.</summary>
      <returns>true if the user is authorized to modify state information; otherwise, false.</returns>
    </member>
    <member name="M:System.Web.UI.WebControls.WebParts.WebPartPersonalization.Load">
      <summary>Initializes personalization.</summary>
      <returns>A <see cref="T:System.Web.UI.WebControls.WebParts.PersonalizationScope" /> instance for the parent <see cref="T:System.Web.UI.WebControls.WebParts.WebPartManager" />.</returns>
      <exception cref="T:System.InvalidOperationException">This method is called when personalization is not enabled (<see cref="P:System.Web.UI.WebControls.WebParts.WebPartPersonalization.Enabled" /> equals false).- or -The value of the <see cref="P:System.Web.UI.Control.Page" /> property for the associated <see cref="T:System.Web.UI.WebControls.WebParts.WebPartManager" /> is null.- or -The value of the <see cref="P:System.Web.UI.Page.Request" /> property on the <see cref="T:System.Web.UI.WebControls.WebParts.WebPartManager" /> control's associated <see cref="T:System.Web.UI.Page" /> instance is null.</exception>
      <exception cref="T:System.Configuration.Provider.ProviderException">A provider was explicitly set in either the page markup or the <see cref="P:System.Web.UI.WebControls.WebParts.WebPartPersonalization.ProviderName" />  property and the provider could not be found.- or - The object containing the personalization state data is null.</exception>
      <exception cref="T:System.ArgumentException">A problem occurred while loading and deserializing data.- or -An error occurred in the definition of a personalization provider in the configuration file.</exception>
      <exception cref="T:System.Configuration.ConfigurationErrorsException">The underlying personalization providers failed to initialize because a default provider could not be found or because a failure occurred while attempting to initialize a personalization provider.</exception>
    </member>
    <member name="F:System.Web.UI.WebControls.WebParts.WebPartPersonalization.ModifyStateUserCapability">
      <summary>Represents the <see cref="T:System.Web.UI.WebControls.WebParts.WebPartUserCapability" /> instance of a user's authorization to modify personalization state.</summary>
    </member>
    <member name="P:System.Web.UI.WebControls.WebParts.WebPartPersonalization.ProviderName">
      <summary>Gets or sets the provider name for personalization.</summary>
      <returns>The name of the personalization provider.</returns>
      <exception cref="T:System.InvalidOperationException">An attempt was made to set this property to a value other than its current value after the <see cref="T:System.Web.UI.WebControls.WebParts.WebPartManager" /> control's <see cref="M:System.Web.UI.WebControls.WebParts.WebPartManager.OnInit(System.EventArgs)" /> method has completed.</exception>
    </member>
    <member name="M:System.Web.UI.WebControls.WebParts.WebPartPersonalization.ResetPersonalizationState">
      <summary>Resets personalization data for the current page, scope, and user in the underlying data store.</summary>
      <exception cref="T:System.InvalidOperationException">An attempt was made to reset personalization data when the current user is not authorized to modify personalization state.- or -The <see cref="T:System.Web.UI.Page" /> instance for the associated <see cref="T:System.Web.UI.WebControls.WebParts.WebPartManager" /> is null.- or -The value of the <see cref="P:System.Web.UI.Page.Request" /> property on the <see cref="T:System.Web.UI.WebControls.WebParts.WebPartManager" /> control's associated <see cref="T:System.Web.UI.Page" /> instance is null.</exception>
      <exception cref="T:System.InvalidOperationException">The <see cref="T:System.Web.UI.WebControls.WebParts.WebPartPersonalization" /> instance cannot reference a valid personalization provider.</exception>
    </member>
    <member name="M:System.Web.UI.WebControls.WebParts.WebPartPersonalization.Save">
      <summary>Saves personalization data for the current page, scope, and user to the underlying data store.</summary>
      <exception cref="T:System.InvalidOperationException">The current user does not have the capability called <see cref="F:System.Web.UI.WebControls.WebParts.WebPartPersonalization.ModifyStateUserCapability" />.- or -The <see cref="T:System.Web.UI.WebControls.WebParts.WebPartPersonalization" /> instance cannot reference a valid personalization provider.- or -No personalization provider is currently associated with the <see cref="T:System.Web.UI.WebControls.WebParts.WebPartPersonalization" /> instance. This can occur if this method is called prior to calling <see cref="M:System.Web.UI.WebControls.WebParts.WebPartPersonalization.Load" /> (the personalization provider reference is obtained during the call to <see cref="M:System.Web.UI.WebControls.WebParts.WebPartPersonalization.Load" />.- or - No personalization state has been loaded.- or -The <see cref="T:System.Web.UI.Page" /> instance for the associated <see cref="T:System.Web.UI.WebControls.WebParts.WebPartManager" /> is null.- or -The value of the <see cref="P:System.Web.UI.Page.Request" /> property on the <see cref="T:System.Web.UI.WebControls.WebParts.WebPartManager" /> control's associated <see cref="T:System.Web.UI.Page" /> instance is null.</exception>
    </member>
    <member name="P:System.Web.UI.WebControls.WebParts.WebPartPersonalization.Scope">
      <summary>Gets the current personalization scope for the parent <see cref="T:System.Web.UI.WebControls.WebParts.WebPartManager" /> control.</summary>
      <returns>A <see cref="T:System.Web.UI.WebControls.WebParts.PersonalizationScope" /> instance indicating the scope of the <see cref="T:System.Web.UI.WebControls.WebParts.WebPartManager" />.</returns>
    </member>
    <member name="M:System.Web.UI.WebControls.WebParts.WebPartPersonalization.SetDirty">
      <summary>Marks the parent <see cref="T:System.Web.UI.WebControls.WebParts.WebPartManager" /> control as having personalization data that has changed (is "dirty").</summary>
      <exception cref="T:System.InvalidOperationException">No personalization data has been loaded.</exception>
    </member>
    <member name="M:System.Web.UI.WebControls.WebParts.WebPartPersonalization.SetDirty(System.Web.UI.WebControls.WebParts.WebPart)">
      <summary>Marks the specified Web Parts control as having personalization data that has changed (is "dirty").</summary>
      <param name="webPart">The Web Parts control to be marked "dirty".</param>
      <exception cref="T:System.ArgumentException">Attempted to mark as "dirty" a Web Parts control that is not managed by the parent <see cref="T:System.Web.UI.WebControls.WebParts.WebPartManager" />.</exception>
      <exception cref="T:System.InvalidOperationException">No personalization data has been loaded.</exception>
    </member>
    <member name="P:System.Web.UI.WebControls.WebParts.WebPartPersonalization.ShouldResetPersonalizationState">
      <summary>Gets or sets a value that indicates whether the personalization data of the current page has been reset (for example, a request was made to delete the personalization data from the underlying data store).</summary>
      <returns>true if the personalization state for the current page has been reset; otherwise, false.</returns>
    </member>
    <member name="M:System.Web.UI.WebControls.WebParts.WebPartPersonalization.ToggleScope">
      <summary>Switches the current page's personalization scope from <see cref="F:System.Web.UI.WebControls.WebParts.PersonalizationScope.User" /> to <see cref="F:System.Web.UI.WebControls.WebParts.PersonalizationScope.Shared" /> or from <see cref="F:System.Web.UI.WebControls.WebParts.PersonalizationScope.Shared" /> to <see cref="F:System.Web.UI.WebControls.WebParts.PersonalizationScope.User" />.</summary>
      <exception cref="T:System.InvalidOperationException">The current user does not have the user capability to enter <see cref="F:System.Web.UI.WebControls.WebParts.PersonalizationScope.Shared" /> scope when attempting to switch from <see cref="F:System.Web.UI.WebControls.WebParts.PersonalizationScope.User" /> scope to <see cref="F:System.Web.UI.WebControls.WebParts.PersonalizationScope.Shared" /> scope.- or -The <see cref="T:System.Web.UI.WebControls.WebParts.WebPartPersonalization" /> instance has not completed initialization.- or -The <see cref="T:System.Web.UI.Page" /> instance for the associated <see cref="T:System.Web.UI.WebControls.WebParts.WebPartManager" /> is null.- or -The value of the <see cref="P:System.Web.UI.Page.Request" /> property on the <see cref="T:System.Web.UI.WebControls.WebParts.WebPartManager" /> control's associated <see cref="T:System.Web.UI.Page" /> instance is null.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">An attempt was made to toggle to a scope that is not defined in the <see cref="T:System.Web.UI.WebControls.WebParts.PersonalizationScope" /> enumeration. Technically, this situation should never occur.</exception>
    </member>
    <member name="P:System.Web.UI.WebControls.WebParts.WebPartPersonalization.UserCapabilities">
      <summary>Gets the set of user capabilities from <see cref="T:System.Web.UI.WebControls.WebParts.WebPartUserCapability" /> granted to the current user.</summary>
      <returns>An <see cref="T:System.Collections.IDictionary" /> containing the set of user capabilities granted to the current user, or an empty <see cref="T:System.Collections.Specialized.HybridDictionary" /> if the user is anonymous.</returns>
    </member>
    <member name="P:System.Web.UI.WebControls.WebParts.WebPartPersonalization.WebPartManager">
      <summary>Gets an instance of the current parent <see cref="T:System.Web.UI.WebControls.WebParts.WebPartManager" /> control associated with this <see cref="T:System.Web.UI.WebControls.WebParts.WebPartPersonalization" /> instance.</summary>
      <returns>The current parent <see cref="T:System.Web.UI.WebControls.WebParts.WebPartManager" />.</returns>
    </member>
    <member name="T:System.Web.UI.WebControls.WebParts.WebPartTracker">
      <summary>Monitors Web Parts connections for circular connections.</summary>
    </member>
    <member name="M:System.Web.UI.WebControls.WebParts.WebPartTracker.#ctor(System.Web.UI.WebControls.WebParts.WebPart,System.Web.UI.WebControls.WebParts.ProviderConnectionPoint)">
      <summary>Initializes a new instance of the <see cref="T:System.Web.UI.WebControls.WebParts.WebPartTracker" /> class. </summary>
      <param name="webPart">The control to track for circular connections. </param>
      <param name="providerConnectionPoint">The connection point used with <paramref name="webPart" />. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="webPart" /> or <paramref name="providerConnectionPoint" /> is not provided.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="providerConnectionPoint" /> is not a valid type.</exception>
    </member>
    <member name="P:System.Web.UI.WebControls.WebParts.WebPartTracker.IsCircularConnection">
      <summary>Gets a value indicating whether a provider connection point is involved in more than one connection with a Web Parts control.</summary>
      <returns>true if the provider connection point is used in more than one connection with the Web Parts control; otherwise, false.</returns>
    </member>
    <member name="M:System.Web.UI.WebControls.WebParts.WebPartTracker.System#IDisposable#Dispose">
      <summary>Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources.</summary>
    </member>
    <member name="T:System.Web.UI.WebControls.WebParts.WebPartTransformer">
      <summary>Provides basic implementation for transformer classes to convert data between two incompatible connection points.</summary>
    </member>
    <member name="M:System.Web.UI.WebControls.WebParts.WebPartTransformer.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Web.UI.WebControls.WebParts.WebPartTransformer" /> class. </summary>
    </member>
    <member name="M:System.Web.UI.WebControls.WebParts.WebPartTransformer.CreateConfigurationControl">
      <summary>Displays an ASP.NET control that configures a transformer in the <see cref="T:System.Web.UI.WebControls.WebParts.ConnectionsZone" /> zone.</summary>
      <returns>An ASP.NET control that configures a transformer.</returns>
    </member>
    <member name="M:System.Web.UI.WebControls.WebParts.WebPartTransformer.LoadConfigurationState(System.Object)">
      <summary>Loads the configuration state saved with the <see cref="M:System.Web.UI.WebControls.WebParts.WebPartTransformer.SaveConfigurationState" /> method.</summary>
      <param name="savedState">An object containing configuration state saved by using <see cref="M:System.Web.UI.WebControls.WebParts.WebPartTransformer.SaveConfigurationState" />.</param>
    </member>
    <member name="M:System.Web.UI.WebControls.WebParts.WebPartTransformer.SaveConfigurationState">
      <summary>Saves the configuration state set by the user in the ASP.NET configuration control. </summary>
      <returns>An object representing the configuration state.</returns>
    </member>
    <member name="M:System.Web.UI.WebControls.WebParts.WebPartTransformer.Transform(System.Object)">
      <summary>When implemented, provides an object for transforming the data.</summary>
      <returns>An <see cref="T:System.Object" /> representing the data to be transformed.</returns>
      <param name="providerData">The provider data to be transformed.</param>
    </member>
    <member name="T:System.Web.UI.WebControls.WebParts.WebPartTransformerAttribute">
      <summary>Identifies the types of connection points that a transformer supports. </summary>
    </member>
    <member name="M:System.Web.UI.WebControls.WebParts.WebPartTransformerAttribute.#ctor(System.Type,System.Type)">
      <summary>Initializes a new instance of the <see cref="T:System.Web.UI.WebControls.WebParts.WebPartTransformerAttribute" /> class. </summary>
      <param name="consumerType">The <see cref="T:System.Type" /> of the interface supported by the consumer connection point.</param>
      <param name="providerType">The <see cref="T:System.Type" /> of the interface supported by the provider connection point.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="consumerType" /> or <paramref name="providerType" /> is not specified.</exception>
      <exception cref="T:System.InvalidOperationException">
        <paramref name="consumerType" /> equals <paramref name="providerType" />.</exception>
    </member>
    <member name="P:System.Web.UI.WebControls.WebParts.WebPartTransformerAttribute.ConsumerType">
      <summary>Gets the <see cref="T:System.Type" /> of the interface supported by the consumer connection point.</summary>
      <returns>The <see cref="T:System.Type" /> of the interface supported by the consumer connection point.</returns>
    </member>
    <member name="M:System.Web.UI.WebControls.WebParts.WebPartTransformerAttribute.GetConsumerType(System.Type)">
      <summary>Returns the consumer type a transformer can accept on a connection point.</summary>
      <returns>The <see cref="T:System.Type" /> of the consumer connection point.</returns>
      <param name="transformerType">The type of transformer.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="transformerType" /> is not specified.</exception>
      <exception cref="T:System.InvalidOperationException">
        <paramref name="transformerType" /> is not an object derived from the <see cref="T:System.Web.UI.WebControls.WebParts.WebPartTransformer" /> class.</exception>
    </member>
    <member name="M:System.Web.UI.WebControls.WebParts.WebPartTransformerAttribute.GetProviderType(System.Type)">
      <summary>Returns the provider type a transformer can accept on a connection point.</summary>
      <returns>The <see cref="T:System.Type" /> of the provider connection point.</returns>
      <param name="transformerType">The type of transformer.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="transformerType" /> is not specified.</exception>
      <exception cref="T:System.InvalidOperationException">
        <paramref name="transformerType" /> is not an object derived from the <see cref="T:System.Web.UI.WebControls.WebParts.WebPartTransformer" /> class.</exception>
    </member>
    <member name="P:System.Web.UI.WebControls.WebParts.WebPartTransformerAttribute.ProviderType">
      <summary>Gets the <see cref="T:System.Type" /> of the interface supported by the provider connection point.</summary>
      <returns>The <see cref="T:System.Type" /> of the interface supported by the provider connection point.</returns>
    </member>
    <member name="T:System.Web.UI.WebControls.WebParts.WebPartTransformerCollection">
      <summary>Provides a collection of <see cref="T:System.Web.UI.WebControls.WebParts.WebPartTransformer" /> objects.</summary>
    </member>
    <member name="M:System.Web.UI.WebControls.WebParts.WebPartTransformerCollection.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Web.UI.WebControls.WebParts.WebPartTransformerCollection" /> class. </summary>
    </member>
    <member name="M:System.Web.UI.WebControls.WebParts.WebPartTransformerCollection.Add(System.Web.UI.WebControls.WebParts.WebPartTransformer)">
      <summary>Adds an object to the end of the collection.</summary>
      <returns>The index at which <paramref name="transformer" /> has been added.</returns>
      <param name="transformer">The <see cref="T:System.Web.UI.WebControls.WebParts.WebPartTransformer" /> to be added to the end of the <see cref="T:System.Web.UI.WebControls.WebParts.WebPartTransformerCollection" />. </param>
    </member>
    <member name="M:System.Web.UI.WebControls.WebParts.WebPartTransformerCollection.Contains(System.Web.UI.WebControls.WebParts.WebPartTransformer)">
      <summary>Returns a value indicating whether a particular transformer exists in the collection.</summary>
      <returns>A Boolean value that indicates whether a particular transformer is in the collection.</returns>
      <param name="transformer">A <see cref="T:System.Web.UI.WebControls.WebParts.WebPartTransformer" /> that is checked to determine whether it is in the collection. </param>
    </member>
    <member name="M:System.Web.UI.WebControls.WebParts.WebPartTransformerCollection.CopyTo(System.Web.UI.WebControls.WebParts.WebPartTransformer[],System.Int32)">
      <summary>Copies the collection to an array of <see cref="T:System.Web.UI.WebControls.WebParts.WebPartTransformer" /> objects.</summary>
      <param name="array">An array of <see cref="T:System.Web.UI.WebControls.WebParts.WebPartTransformer" /> objects to contain the copied collection. </param>
      <param name="index">The starting point in the array at which to place the collection contents. </param>
    </member>
    <member name="M:System.Web.UI.WebControls.WebParts.WebPartTransformerCollection.IndexOf(System.Web.UI.WebControls.WebParts.WebPartTransformer)">
      <summary>Returns the position of a particular member in the collection.</summary>
      <returns>An integer that indicates the position of a particular object in the collection.</returns>
      <param name="transformer">A <see cref="T:System.Web.UI.WebControls.WebParts.WebPartTransformer" /> that is a member of the collection.</param>
    </member>
    <member name="M:System.Web.UI.WebControls.WebParts.WebPartTransformerCollection.Insert(System.Int32,System.Web.UI.WebControls.WebParts.WebPartTransformer)">
      <summary>Inserts a transformer into the <see cref="T:System.Web.UI.WebControls.WebParts.WebPartTransformerCollection" /> collection at the specified index.</summary>
      <param name="index">The zero-based index at which a value should be inserted. </param>
      <param name="transformer">The <see cref="T:System.Web.UI.WebControls.WebParts.WebPartTransformer" /> to insert. </param>
    </member>
    <member name="P:System.Web.UI.WebControls.WebParts.WebPartTransformerCollection.IsReadOnly">
      <summary>Gets a value indicating whether the collection is read-only.</summary>
      <returns>true if the collection and its items cannot be changed; otherwise, false.</returns>
    </member>
    <member name="P:System.Web.UI.WebControls.WebParts.WebPartTransformerCollection.Item(System.Int32)">
      <summary>Returns a member of the collection based on its position in the collection.</summary>
      <returns>The <see cref="T:System.Web.UI.WebControls.WebParts.WebPartTransformer" /> located at <paramref name="index" />.</returns>
      <param name="index">The index of a particular <see cref="T:System.Web.UI.WebControls.WebParts.WebPartTransformer" /> in a collection. </param>
    </member>
    <member name="M:System.Web.UI.WebControls.WebParts.WebPartTransformerCollection.Remove(System.Web.UI.WebControls.WebParts.WebPartTransformer)">
      <summary>Removes the first occurrence of a specific transformer.</summary>
      <param name="transformer">The <see cref="T:System.Web.UI.WebControls.WebParts.WebPartTransformer" /> to remove from the collection. </param>
    </member>
    <member name="T:System.Web.UI.WebControls.WebParts.WebPartUserCapability">
      <summary>Provides information about a user's capabilities to view and modify personalization data. This class cannot be inherited.</summary>
    </member>
    <member name="M:System.Web.UI.WebControls.WebParts.WebPartUserCapability.#ctor(System.String)">
      <summary>Initializes a new instance of the class.</summary>
      <param name="name">A string that contains a name for the <see cref="T:System.Web.UI.WebControls.WebParts.WebPartUserCapability" />. </param>
      <exception cref="T:System.ArgumentException">
        <paramref name="name" /> is null or an empty string ("").</exception>
    </member>
    <member name="M:System.Web.UI.WebControls.WebParts.WebPartUserCapability.Equals(System.Object)">
      <summary>Determines whether the specified object is equal to the current <see cref="T:System.Web.UI.WebControls.WebParts.WebPartUserCapability" /> object, or has the same <see cref="P:System.Web.UI.WebControls.WebParts.WebPartUserCapability.Name" /> value.</summary>
      <returns>true if <paramref name="o" /> is equal to the current <see cref="T:System.Web.UI.WebControls.WebParts.WebPartUserCapability" /> or has the same <see cref="P:System.Web.UI.WebControls.WebParts.WebPartUserCapability.Name" /> value; otherwise, false.</returns>
      <param name="o">The <see cref="T:System.Object" /> to compare with the current <see cref="T:System.Web.UI.WebControls.WebParts.WebPartUserCapability" />. </param>
    </member>
    <member name="M:System.Web.UI.WebControls.WebParts.WebPartUserCapability.GetHashCode">
      <summary>Returns the hash code for the <see cref="P:System.Web.UI.WebControls.WebParts.WebPartUserCapability.Name" /> property.</summary>
      <returns>A 32-bit signed integer hash code.</returns>
    </member>
    <member name="P:System.Web.UI.WebControls.WebParts.WebPartUserCapability.Name">
      <summary>Gets a string value identifying the class.</summary>
      <returns>A <see cref="T:System.String" /> that identifies the class.</returns>
    </member>
    <member name="T:System.Web.UI.WebControls.WebParts.WebPartVerb">
      <summary>Provides an interactive user interface (UI) element that enables users to perform actions on a Web Parts page.</summary>
    </member>
    <member name="M:System.Web.UI.WebControls.WebParts.WebPartVerb.#ctor(System.String,System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.Web.UI.WebControls.WebParts.WebPartVerb" /> class and associates a client-side click event handler with the instance.</summary>
      <param name="id">A <see cref="T:System.String" /> that is the unique identifier for a verb.</param>
      <param name="clientClickHandler">A <see cref="T:System.String" /> that refers to the client-side handler for click events.</param>
      <exception cref="T:System.ArgumentNullException">The <paramref name="clientClickHandler" /> parameter is null.</exception>
    </member>
    <member name="M:System.Web.UI.WebControls.WebParts.WebPartVerb.#ctor(System.String,System.Web.UI.WebControls.WebParts.WebPartEventHandler)">
      <summary>Initializes a new instance of the <see cref="T:System.Web.UI.WebControls.WebParts.WebPartVerb" /> class and associates a server-side click event handler with the instance.</summary>
      <param name="id">A <see cref="T:System.String" /> that is the unique identifier for a verb.</param>
      <param name="serverClickHandler">A <see cref="T:System.Web.UI.WebControls.WebParts.WebPartEventHandler" /> that handles click events on the server.</param>
      <exception cref="T:System.ArgumentNullException">The <paramref name="serverClickHandler" /> parameter is null.</exception>
    </member>
    <member name="M:System.Web.UI.WebControls.WebParts.WebPartVerb.#ctor(System.String,System.Web.UI.WebControls.WebParts.WebPartEventHandler,System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.Web.UI.WebControls.WebParts.WebPartVerb" /> class and associates both client and server-side click event handlers with the instance.</summary>
      <param name="id">A <see cref="T:System.String" /> that is the unique identifier for a verb.</param>
      <param name="serverClickHandler">A <see cref="T:System.Web.UI.WebControls.WebParts.WebPartEventHandler" /> that handles click events on the server.</param>
      <param name="clientClickHandler">A <see cref="T:System.String" /> that refers to the client-side handler for click events.</param>
      <exception cref="T:System.ArgumentNullException">The <paramref name="clientClickHandler" /> parameter is null.- or -The <paramref name="serverClickHandler" /> parameter is null.</exception>
    </member>
    <member name="P:System.Web.UI.WebControls.WebParts.WebPartVerb.Checked">
      <summary>Gets or sets a value indicating that some state associated with a custom verb is currently active or selected.</summary>
      <returns>true if a state associated with a custom verb is currently active; otherwise, false. The default is false.</returns>
    </member>
    <member name="P:System.Web.UI.WebControls.WebParts.WebPartVerb.ClientClickHandler">
      <summary>Gets the string containing the method name of the client-side event handler defined in the <see cref="T:System.Web.UI.WebControls.WebParts.WebPartVerb" /> constructor.</summary>
      <returns>A string that contains the name of the method that handles client-side click events. The default is an empty string ("").</returns>
    </member>
    <member name="P:System.Web.UI.WebControls.WebParts.WebPartVerb.Description">
      <summary>Gets or sets a short description of the verb.</summary>
      <returns>A string containing a description of the <see cref="T:System.Web.UI.WebControls.WebParts.WebPartVerb" />. </returns>
    </member>
    <member name="P:System.Web.UI.WebControls.WebParts.WebPartVerb.Enabled">
      <summary>Gets or sets a value that indicates whether a verb is enabled.</summary>
      <returns>true if the verb is enabled; otherwise, false. The default is true.</returns>
    </member>
    <member name="P:System.Web.UI.WebControls.WebParts.WebPartVerb.ID">
      <summary>Gets a string containing a unique ID for a verb.</summary>
      <returns>A string containing the ID for a <see cref="T:System.Web.UI.WebControls.WebParts.WebPartVerb" />.</returns>
    </member>
    <member name="P:System.Web.UI.WebControls.WebParts.WebPartVerb.ImageUrl">
      <summary>Gets or sets a string containing a URL to an image that represents a verb in the user interface (UI).</summary>
      <returns>A string that contains the URL to an image. The default is an empty string ("").</returns>
    </member>
    <member name="P:System.Web.UI.WebControls.WebParts.WebPartVerb.IsTrackingViewState">
      <summary>Gets a value that indicates whether view state is currently being tracked for a verb.</summary>
      <returns>true if view state is being tracked; otherwise, false.</returns>
    </member>
    <member name="M:System.Web.UI.WebControls.WebParts.WebPartVerb.LoadViewState(System.Object)">
      <summary>Restores view-state information from a previous page request that was saved by the <see cref="M:System.Web.UI.WebControls.WebParts.WebPartVerb.SaveViewState" /> method.</summary>
      <param name="savedState">An <see cref="T:System.Object" /> that contains the view state to be restored.</param>
    </member>
    <member name="M:System.Web.UI.WebControls.WebParts.WebPartVerb.SaveViewState">
      <summary>Saves a <see cref="T:System.Web.UI.WebControls.WebParts.WebPartVerb" /> object's view-state changes that occurred since the page was last posted back to the server.</summary>
      <returns>An <see cref="T:System.Object" /> that contains the state data to be saved.</returns>
    </member>
    <member name="P:System.Web.UI.WebControls.WebParts.WebPartVerb.ServerClickHandler">
      <summary>Gets a reference to the method that handles server-side click events for the verb.</summary>
      <returns>A <see cref="T:System.Web.UI.WebControls.WebParts.WebPartEventHandler" /> that handles server-side click events.</returns>
    </member>
    <member name="P:System.Web.UI.WebControls.WebParts.WebPartVerb.System#Web#UI#IStateManager#IsTrackingViewState">
      <summary>Implements the <see cref="P:System.Web.UI.IStateManager.IsTrackingViewState" /> property by calling the <see cref="T:System.Web.UI.WebControls.WebParts.WebPartVerb" /> class's own <see cref="P:System.Web.UI.WebControls.WebParts.WebPartVerb.IsTrackingViewState" /> property.</summary>
      <returns>true if view state is being tracked for a verb; otherwise, false.</returns>
    </member>
    <member name="M:System.Web.UI.WebControls.WebParts.WebPartVerb.System#Web#UI#IStateManager#LoadViewState(System.Object)">
      <summary>Implements the <see cref="M:System.Web.UI.IStateManager.LoadViewState(System.Object)" /> method of the <see cref="T:System.Web.UI.IStateManager" /> interface by calling the <see cref="T:System.Web.UI.WebControls.WebParts.WebPartVerb" /> class's own <see cref="M:System.Web.UI.WebControls.WebParts.WebPartVerb.LoadViewState(System.Object)" /> method.</summary>
      <param name="savedState">An <see cref="T:System.Object" /> that contains the view state to be restored. </param>
    </member>
    <member name="M:System.Web.UI.WebControls.WebParts.WebPartVerb.System#Web#UI#IStateManager#SaveViewState">
      <summary>Implements the <see cref="M:System.Web.UI.IStateManager.SaveViewState" /> method by calling the <see cref="T:System.Web.UI.WebControls.WebParts.WebPartVerb" /> class's own <see cref="M:System.Web.UI.WebControls.WebParts.WebPartVerb.SaveViewState" /> method.</summary>
      <returns>Returns an <see cref="T:System.Object" /> containing the control's current view state. If no view state is associated with the control, this method returns null.</returns>
    </member>
    <member name="M:System.Web.UI.WebControls.WebParts.WebPartVerb.System#Web#UI#IStateManager#TrackViewState">
      <summary>Implements the <see cref="M:System.Web.UI.IStateManager.TrackViewState" /> method by calling the <see cref="T:System.Web.UI.WebControls.WebParts.WebPartVerb" /> class's own <see cref="M:System.Web.UI.WebControls.WebParts.WebPartVerb.TrackViewState" /> method.</summary>
    </member>
    <member name="P:System.Web.UI.WebControls.WebParts.WebPartVerb.Text">
      <summary>Gets or sets the text label for a verb that is displayed in the user interface (UI).</summary>
      <returns>A string containing the text label for a verb. The default is an empty string ("").</returns>
    </member>
    <member name="M:System.Web.UI.WebControls.WebParts.WebPartVerb.TrackViewState">
      <summary>Tracks view-state changes to a verb so the changes can be stored in the verb's <see cref="T:System.Web.UI.StateBag" /> object.</summary>
    </member>
    <member name="P:System.Web.UI.WebControls.WebParts.WebPartVerb.ViewState">
      <summary>Gets a dictionary of state information that allows you to save and restore the view state of a server control across multiple requests for the same page.</summary>
      <returns>An instance of <see cref="T:System.Web.UI.StateBag" /> that contains the server control's view-state information.</returns>
    </member>
    <member name="P:System.Web.UI.WebControls.WebParts.WebPartVerb.Visible">
      <summary>Gets or sets a value that indicates whether a verb is visible to users.</summary>
      <returns>true if the verb is visible; otherwise, false. The default is true.</returns>
    </member>
    <member name="T:System.Web.UI.WebControls.WebParts.WebPartVerbCollection">
      <summary>Represents a collection of custom Web Parts verbs. This class cannot be inherited. </summary>
    </member>
    <member name="M:System.Web.UI.WebControls.WebParts.WebPartVerbCollection.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Web.UI.WebControls.WebParts.WebPartVerbCollection" /> class.</summary>
    </member>
    <member name="M:System.Web.UI.WebControls.WebParts.WebPartVerbCollection.#ctor(System.Collections.ICollection)">
      <summary>Initializes a new instance of the <see cref="T:System.Web.UI.WebControls.WebParts.WebPartVerbCollection" /> class using the specified collection.</summary>
      <param name="verbs">An object derived from <see cref="T:System.Collections.ICollection" /> that contains a set of Web Parts verbs.</param>
    </member>
    <member name="M:System.Web.UI.WebControls.WebParts.WebPartVerbCollection.#ctor(System.Web.UI.WebControls.WebParts.WebPartVerbCollection,System.Collections.ICollection)">
      <summary>Initializes a new instance of the <see cref="T:System.Web.UI.WebControls.WebParts.WebPartVerbCollection" /> class using the specified collections.</summary>
      <param name="existingVerbs">An existing <see cref="T:System.Web.UI.WebControls.WebParts.WebPartVerbCollection" />.</param>
      <param name="verbs">An object derived from <see cref="T:System.Collections.ICollection" /> that contains a set of Web Parts verbs.</param>
    </member>
    <member name="M:System.Web.UI.WebControls.WebParts.WebPartVerbCollection.Contains(System.Web.UI.WebControls.WebParts.WebPartVerb)">
      <summary>Searches the Web Parts verb collection for the specified <see cref="T:System.Web.UI.WebControls.WebParts.WebPartVerb" /> object.</summary>
      <returns>true if the collection contains the Web Parts verb; otherwise, false.</returns>
      <param name="value">The <see cref="T:System.Web.UI.WebControls.WebParts.WebPartVerb" /> to be found.</param>
    </member>
    <member name="M:System.Web.UI.WebControls.WebParts.WebPartVerbCollection.CopyTo(System.Web.UI.WebControls.WebParts.WebPartVerb[],System.Int32)">
      <summary>Copies elements of the collection to the specified array, starting at the specified index.</summary>
      <param name="array">The array that elements are to be copied to.</param>
      <param name="index">The index where copying should begin.</param>
    </member>
    <member name="F:System.Web.UI.WebControls.WebParts.WebPartVerbCollection.Empty">
      <summary>Specifies an empty collection that you can use instead of creating a new one. This static field is read-only.</summary>
    </member>
    <member name="M:System.Web.UI.WebControls.WebParts.WebPartVerbCollection.IndexOf(System.Web.UI.WebControls.WebParts.WebPartVerb)">
      <summary>Searches for the specified Web Parts verb and returns the zero-based index of the first occurrence within the entire collection.</summary>
      <returns>The index of the Web Parts verb.</returns>
      <param name="value">The <see cref="T:System.Web.UI.WebControls.WebParts.WebPartVerb" /> to be located.</param>
    </member>
    <member name="P:System.Web.UI.WebControls.WebParts.WebPartVerbCollection.Item(System.Int32)">
      <summary>Gets a Web Parts verb from the collection at the specified index.</summary>
      <returns>A Web Parts verb from the collection.</returns>
      <param name="index">The index value of the Web Parts verb to be retrieved.</param>
    </member>
    <member name="T:System.Web.UI.WebControls.WebParts.WebPartVerbRenderMode">
      <summary>Specifies how verbs should be rendered on a <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> control.</summary>
    </member>
    <member name="F:System.Web.UI.WebControls.WebParts.WebPartVerbRenderMode.Menu">
      <summary>Verbs are rendered in a shortcut menu in the title bar.</summary>
    </member>
    <member name="F:System.Web.UI.WebControls.WebParts.WebPartVerbRenderMode.TitleBar">
      <summary>Verbs are rendered as links directly in the title bar.</summary>
    </member>
    <member name="T:System.Web.UI.WebControls.WebParts.WebPartVerbsEventArgs">
      <summary>Provides event data for the <see cref="E:System.Web.UI.WebControls.WebParts.WebPartZoneBase.CreateVerbs" /> event that is used by the <see cref="M:System.Web.UI.WebControls.WebParts.WebPartZoneBase.OnCreateVerbs(System.Web.UI.WebControls.WebParts.WebPartVerbsEventArgs)" /> method.</summary>
    </member>
    <member name="M:System.Web.UI.WebControls.WebParts.WebPartVerbsEventArgs.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Web.UI.WebControls.WebParts.WebPartVerbsEventArgs" /> class.</summary>
    </member>
    <member name="M:System.Web.UI.WebControls.WebParts.WebPartVerbsEventArgs.#ctor(System.Web.UI.WebControls.WebParts.WebPartVerbCollection)">
      <summary>Initializes a new instance of the <see cref="T:System.Web.UI.WebControls.WebParts.WebPartVerbsEventArgs" /> class using the specified Web Parts verb collection.</summary>
      <param name="verbs">A Web Parts verb collection.</param>
    </member>
    <member name="P:System.Web.UI.WebControls.WebParts.WebPartVerbsEventArgs.Verbs">
      <summary>Gets or sets the Web Parts verbs used in the event data.</summary>
      <returns>A <see cref="T:System.Web.UI.WebControls.WebParts.WebPartVerbCollection" />.</returns>
    </member>
    <member name="T:System.Web.UI.WebControls.WebParts.WebPartVerbsEventHandler">
      <summary>Represents the delegate for the <see cref="E:System.Web.UI.WebControls.WebParts.WebPartZoneBase.CreateVerbs" /> event. </summary>
      <param name="sender">The source of the event.</param>
      <param name="e">The event arguments.</param>
    </member>
    <member name="T:System.Web.UI.WebControls.WebParts.WebPartZone">
      <summary>Serves as the primary control in the Web Parts control set for hosting <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> controls on a Web page. </summary>
    </member>
    <member name="M:System.Web.UI.WebControls.WebParts.WebPartZone.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Web.UI.WebControls.WebParts.WebPartZone" /> class.</summary>
    </member>
    <member name="M:System.Web.UI.WebControls.WebParts.WebPartZone.GetInitialWebParts">
      <summary>Overrides the abstract base method and gets the initial set of static <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> controls contained within the zone's template.</summary>
      <returns>A <see cref="T:System.Web.UI.WebControls.WebParts.WebPartCollection" /> that contains all the <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> or other server controls contained in the zone's template. </returns>
    </member>
    <member name="M:System.Web.UI.WebControls.WebParts.WebPartZone.OnInit(System.EventArgs)">
      <summary>Overrides the base method to indicate that the zone has successfully been registered with the <see cref="T:System.Web.UI.WebControls.WebParts.WebPartManager" /> control.</summary>
      <param name="e">An <see cref="T:System.EventArgs" /> that contains the event data. </param>
    </member>
    <member name="P:System.Web.UI.WebControls.WebParts.WebPartZone.ZoneTemplate">
      <summary>Gets or sets a reference to an <see cref="T:System.Web.UI.ITemplate" /> instance that contains the controls declared in the markup of a Web page.</summary>
      <returns>An <see cref="T:System.Web.UI.ITemplate" /> that contains the <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> controls in a zone.</returns>
      <exception cref="T:System.InvalidOperationException">Registration of the <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> controls in the zone is already complete.</exception>
    </member>
    <member name="T:System.Web.UI.WebControls.WebParts.WebPartZoneBase">
      <summary>Serves as the base class for all zone controls that act as containers for <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> (or other server or user) controls.</summary>
    </member>
    <member name="M:System.Web.UI.WebControls.WebParts.WebPartZoneBase.#ctor">
      <summary>Initializes the class for use by an inherited class instance. This constructor can only be called by an inherited class.</summary>
    </member>
    <member name="P:System.Web.UI.WebControls.WebParts.WebPartZoneBase.AllowLayoutChange">
      <summary>Gets or sets a value that indicates whether the layout of <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> controls can be changed within a zone.</summary>
      <returns>true if the layout can be changed; otherwise, false. The default is true.</returns>
    </member>
    <member name="P:System.Web.UI.WebControls.WebParts.WebPartZoneBase.BorderColor">
      <summary>Gets or sets the color for the border of a <see cref="T:System.Web.UI.WebControls.WebParts.WebPartZoneBase" /> control.</summary>
      <returns>A <see cref="T:System.Drawing.Color" /> that contains the border color. The default color is <see cref="P:System.Drawing.Color.Gray" />.</returns>
    </member>
    <member name="P:System.Web.UI.WebControls.WebParts.WebPartZoneBase.BorderStyle">
      <summary>Gets or sets the kind of border that surrounds a <see cref="T:System.Web.UI.WebControls.WebParts.WebPartZoneBase" /> control.</summary>
      <returns>A <see cref="T:System.Web.UI.WebControls.BorderStyle" /> object that contains the kind of border. The default is <see cref="F:System.Web.UI.WebControls.BorderStyle.Solid" />.</returns>
    </member>
    <member name="P:System.Web.UI.WebControls.WebParts.WebPartZoneBase.BorderWidth">
      <summary>Gets or sets the width of the border that surrounds a <see cref="T:System.Web.UI.WebControls.WebParts.WebPartZoneBase" /> control.</summary>
      <returns>The width in the specified <see cref="T:System.Web.UI.WebControls.Unit" /> of the border that surrounds a zone. The default is 1.</returns>
    </member>
    <member name="P:System.Web.UI.WebControls.WebParts.WebPartZoneBase.CloseVerb">
      <summary>Gets a reference to a <see cref="T:System.Web.UI.WebControls.WebParts.WebPartVerb" /> object that enables end users to close the <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> controls in a zone.</summary>
      <returns>A <see cref="T:System.Web.UI.WebControls.WebParts.WebPartVerb" /> that enables end users to close <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> controls.</returns>
    </member>
    <member name="M:System.Web.UI.WebControls.WebParts.WebPartZoneBase.CloseWebPart(System.Web.UI.WebControls.WebParts.WebPart)">
      <summary>Closes a selected <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> control in a zone.</summary>
      <param name="webPart">The <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" />  control to be closed.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="webPart" /> is null.</exception>
    </member>
    <member name="P:System.Web.UI.WebControls.WebParts.WebPartZoneBase.ConnectVerb">
      <summary>Gets a reference to a <see cref="T:System.Web.UI.WebControls.WebParts.WebPartVerb" /> object that enables end users to create connections between <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> controls.</summary>
      <returns>A <see cref="T:System.Web.UI.WebControls.WebParts.WebPartVerb" /> that creates a connection between two <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> controls.</returns>
    </member>
    <member name="M:System.Web.UI.WebControls.WebParts.WebPartZoneBase.ConnectWebPart(System.Web.UI.WebControls.WebParts.WebPart)">
      <summary>Initiates the process of creating a connection between two <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> controls.</summary>
      <param name="webPart">The <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" />  control that initiates the connection with another selected <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" />  control. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="webPart" /> is null.</exception>
    </member>
    <member name="M:System.Web.UI.WebControls.WebParts.WebPartZoneBase.CreateChildControls">
      <summary>Creates the set of child controls contained in a zone.</summary>
    </member>
    <member name="M:System.Web.UI.WebControls.WebParts.WebPartZoneBase.CreateControlCollection">
      <summary>Creates a <see cref="T:System.Web.UI.ControlCollection" /> object that contains all the controls in a zone.</summary>
      <returns>A <see cref="T:System.Web.UI.ControlCollection" /> that contains references to the <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> controls in a zone.</returns>
    </member>
    <member name="M:System.Web.UI.WebControls.WebParts.WebPartZoneBase.CreateControlStyle">
      <summary>Creates a set of style characteristics that apply to a zone control when it is visible.</summary>
      <returns>A <see cref="T:System.Web.UI.WebControls.Style" /> that contains style attributes for a <see cref="T:System.Web.UI.WebControls.WebParts.WebPartZoneBase" />.</returns>
    </member>
    <member name="E:System.Web.UI.WebControls.WebParts.WebPartZoneBase.CreateVerbs">
      <summary>Occurs when the verbs are created for a zone that derives from the <see cref="T:System.Web.UI.WebControls.WebParts.WebPartZoneBase" /> class.</summary>
    </member>
    <member name="M:System.Web.UI.WebControls.WebParts.WebPartZoneBase.CreateWebPartChrome">
      <summary>Enables derived zones to substitute a custom <see cref="T:System.Web.UI.WebControls.WebParts.WebPartChrome" /> object to change the appearance of <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> controls in a zone.</summary>
      <returns>A <see cref="T:System.Web.UI.WebControls.WebParts.WebPartChrome" /> that determines how <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> controls in a zone are rendered.</returns>
    </member>
    <member name="P:System.Web.UI.WebControls.WebParts.WebPartZoneBase.DeleteVerb">
      <summary>Gets a reference to a <see cref="T:System.Web.UI.WebControls.WebParts.WebPartVerb" /> object that enables end users to delete the <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> controls in a zone.</summary>
      <returns>A <see cref="T:System.Web.UI.WebControls.WebParts.WebPartVerb" /> that enables end users to delete <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> controls.</returns>
    </member>
    <member name="M:System.Web.UI.WebControls.WebParts.WebPartZoneBase.DeleteWebPart(System.Web.UI.WebControls.WebParts.WebPart)">
      <summary>Deletes a selected <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> control in a zone.</summary>
      <param name="webPart">The <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> control to be deleted. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="webPart" /> is null.</exception>
    </member>
    <member name="P:System.Web.UI.WebControls.WebParts.WebPartZoneBase.DisplayTitle">
      <summary>Gets the current value of the text being used as the title for a <see cref="T:System.Web.UI.WebControls.WebParts.WebPartZoneBase" /> zone when the zone itself is visible.</summary>
      <returns>A string that contains the title text for a zone. The default is the value of the base <see cref="P:System.Web.UI.WebControls.WebParts.WebZone.HeaderText" /> property.</returns>
    </member>
    <member name="P:System.Web.UI.WebControls.WebParts.WebPartZoneBase.DragDropEnabled">
      <summary>Gets a value that indicates whether <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> controls can be dragged into or out of a zone.</summary>
      <returns>A Boolean value that indicates whether controls can be dragged. </returns>
    </member>
    <member name="P:System.Web.UI.WebControls.WebParts.WebPartZoneBase.DragHighlightColor">
      <summary>Gets or sets the color around the border of a <see cref="T:System.Web.UI.WebControls.WebParts.WebPartZoneBase" /> zone and its drop-cue regions when a user is dragging a control.</summary>
      <returns>A <see cref="T:System.Drawing.Color" /> that contains the highlight color. The default color is <see cref="P:System.Drawing.Color.Blue" />.</returns>
    </member>
    <member name="P:System.Web.UI.WebControls.WebParts.WebPartZoneBase.EditVerb">
      <summary>Gets a reference to a <see cref="T:System.Web.UI.WebControls.WebParts.WebPartVerb" /> object that enables end users to edit <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> controls in a zone.</summary>
      <returns>A <see cref="T:System.Web.UI.WebControls.WebParts.WebPartVerb" /> that enables end users to edit <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> controls.</returns>
    </member>
    <member name="M:System.Web.UI.WebControls.WebParts.WebPartZoneBase.EditWebPart(System.Web.UI.WebControls.WebParts.WebPart)">
      <summary>Initiates the process of editing a selected <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> control in a zone.</summary>
      <param name="webPart">The <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> control to be edited. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="webPart" /> is null.</exception>
    </member>
    <member name="P:System.Web.UI.WebControls.WebParts.WebPartZoneBase.EmptyZoneText">
      <summary>Gets or sets a message that appears when a <see cref="T:System.Web.UI.WebControls.WebParts.WebPartZoneBase" /> control contains no <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> controls.</summary>
      <returns>A string containing the message that appears in an empty zone. A default culture-specific string is supplied by the .NET Framework.</returns>
    </member>
    <member name="P:System.Web.UI.WebControls.WebParts.WebPartZoneBase.ExportVerb">
      <summary>Gets a reference to a <see cref="T:System.Web.UI.WebControls.WebParts.WebPartVerb" /> object that enables end users to export an XML definition file for each <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> control in a zone.</summary>
      <returns>A <see cref="T:System.Web.UI.WebControls.WebParts.WebPartVerb" /> that enables end users to export a definition file for <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> controls.</returns>
    </member>
    <member name="M:System.Web.UI.WebControls.WebParts.WebPartZoneBase.GetEffectiveChromeType(System.Web.UI.WebControls.WebParts.Part)">
      <returns>A <see cref="T:System.Web.UI.WebControls.WebParts.PartChromeType" /> value that contains the kind of border that currently frames Web Parts controls contained by a zone. </returns>
      <param name="part">A <see cref="T:System.Web.UI.WebControls.WebParts.Part" /> control for which the zone needs to retrieve the current <see cref="P:System.Web.UI.WebControls.WebParts.Part.ChromeType" /> setting.</param>
    </member>
    <member name="M:System.Web.UI.WebControls.WebParts.WebPartZoneBase.GetInitialWebParts">
      <summary>Gets an initial collection of <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> controls contained in a zone, based on a template or some storage medium.</summary>
      <returns>A <see cref="T:System.Web.UI.WebControls.WebParts.WebPartCollection" /> that contains the initial set of <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> controls that belong in a zone.</returns>
    </member>
    <member name="P:System.Web.UI.WebControls.WebParts.WebPartZoneBase.HasFooter">
      <summary>Gets a value indicating whether a zone has a footer area.</summary>
      <returns>true if the zone has a footer area; otherwise, false. The default value is false.</returns>
    </member>
    <member name="P:System.Web.UI.WebControls.WebParts.WebPartZoneBase.HasHeader">
      <summary>Gets a value indicating whether a zone has a header area.</summary>
      <returns>true if the zone has a header area; otherwise, false. The default value is false when the page is in normal <see cref="F:System.Web.UI.WebControls.WebParts.WebPartManager.BrowseDisplayMode" />.</returns>
    </member>
    <member name="P:System.Web.UI.WebControls.WebParts.WebPartZoneBase.HelpVerb">
      <summary>Gets a reference to a <see cref="T:System.Web.UI.WebControls.WebParts.WebPartVerb" /> object used to access Help content for <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> controls in a zone.</summary>
      <returns>A <see cref="T:System.Web.UI.WebControls.WebParts.WebPartVerb" /> that enables users to access Help content on the <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> controls in a zone.</returns>
    </member>
    <member name="P:System.Web.UI.WebControls.WebParts.WebPartZoneBase.LayoutOrientation">
      <summary>Gets or sets a value that indicates whether controls in a zone are arranged vertically or horizontally.</summary>
      <returns>An <see cref="T:System.Web.UI.WebControls.Orientation" /> value that determines how controls in a zone are arranged. The default orientation is <see cref="F:System.Web.UI.WebControls.Orientation.Vertical" />.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">The value is not one of the enumerated <see cref="T:System.Web.UI.WebControls.Orientation" /> values.</exception>
    </member>
    <member name="M:System.Web.UI.WebControls.WebParts.WebPartZoneBase.LoadViewState(System.Object)">
      <summary>Loads previously saved state information for a zone.</summary>
      <param name="savedState">The previously saved state. </param>
      <exception cref="T:System.ArgumentException">The size of the <paramref name="savedState" /> object does not equal the size of the current view-state object. </exception>
    </member>
    <member name="P:System.Web.UI.WebControls.WebParts.WebPartZoneBase.MenuCheckImageStyle">
      <summary>Gets style attributes that are applied to the check mark image that appears on a verbs menu next to the selected verb text.</summary>
      <returns>A <see cref="T:System.Web.UI.WebControls.Style" /> that contains the style attributes for check mark images in a verbs menu. </returns>
    </member>
    <member name="P:System.Web.UI.WebControls.WebParts.WebPartZoneBase.MenuCheckImageUrl">
      <summary>Gets or sets the URL to an image used as a check mark in the verbs menu of each <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> control in a zone.</summary>
      <returns>A string that represents the URL to an image used as a check mark. The default value is an empty string ("").</returns>
    </member>
    <member name="P:System.Web.UI.WebControls.WebParts.WebPartZoneBase.MenuLabelHoverStyle">
      <summary>Gets style attributes that are applied to the label of a verbs menu in the title bar of a <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> control when a user positions the mouse pointer over the label.</summary>
      <returns>A <see cref="T:System.Web.UI.WebControls.Style" /> that contains the style attributes for the label in a verbs menu. </returns>
    </member>
    <member name="P:System.Web.UI.WebControls.WebParts.WebPartZoneBase.MenuLabelStyle">
      <summary>Gets style information for the label of the verbs drop-down menu that appears in the title bar of each <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> control in a zone.</summary>
      <returns>A <see cref="T:System.Web.UI.WebControls.Style" /> that contains style information for the label of the verbs menu. </returns>
    </member>
    <member name="P:System.Web.UI.WebControls.WebParts.WebPartZoneBase.MenuLabelText">
      <summary>Gets or sets the value that serves as a label for the verbs drop-down menu in the title bar of each <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> control in a zone.</summary>
      <returns>A string containing the text that appears in the label for the verbs menu. The default is an empty string ("").</returns>
    </member>
    <member name="P:System.Web.UI.WebControls.WebParts.WebPartZoneBase.MenuPopupImageUrl">
      <summary>Gets or sets the URL to an image that opens the verbs drop-down menu in the title bar of each <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> control in a zone.</summary>
      <returns>A string that represents the URL to an image used to open the verbs drop-down menu. The default value is an empty string ("").</returns>
    </member>
    <member name="P:System.Web.UI.WebControls.WebParts.WebPartZoneBase.MenuPopupStyle">
      <summary>Gets style attributes for the drop-down verbs menu that appears on <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> controls in a zone.</summary>
      <returns>A <see cref="T:System.Web.UI.WebControls.WebParts.WebPartMenuStyle" /> that contains style attributes for the verbs menu.</returns>
    </member>
    <member name="P:System.Web.UI.WebControls.WebParts.WebPartZoneBase.MenuVerbHoverStyle">
      <summary>Gets style information for the appearance of a verb in a verbs drop-down menu when an end user positions the mouse pointer over the verb.</summary>
      <returns>A <see cref="T:System.Web.UI.WebControls.Style" /> that contains style information for a verb when a user positions the mouse pointer over the verb.</returns>
    </member>
    <member name="P:System.Web.UI.WebControls.WebParts.WebPartZoneBase.MenuVerbStyle">
      <summary>Gets style information for the appearance of a verb in a verbs drop-down menu when the menu is displayed.</summary>
      <returns>A <see cref="T:System.Web.UI.WebControls.Style" /> that contains style information for a verb displayed in a verbs menu.</returns>
    </member>
    <member name="P:System.Web.UI.WebControls.WebParts.WebPartZoneBase.MinimizeVerb">
      <summary>Gets a reference to a <see cref="T:System.Web.UI.WebControls.WebParts.WebPartVerb" /> object that enables end users to minimize <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> controls in a zone.</summary>
      <returns>A <see cref="T:System.Web.UI.WebControls.WebParts.WebPartVerb" /> that enables end users to minimize <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> controls.</returns>
    </member>
    <member name="M:System.Web.UI.WebControls.WebParts.WebPartZoneBase.MinimizeWebPart(System.Web.UI.WebControls.WebParts.WebPart)">
      <summary>Minimizes a selected <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> control in a zone.</summary>
      <param name="webPart">The <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> control to be minimized. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="webPart" /> is null.</exception>
    </member>
    <member name="M:System.Web.UI.WebControls.WebParts.WebPartZoneBase.OnCreateVerbs(System.Web.UI.WebControls.WebParts.WebPartVerbsEventArgs)">
      <summary>Raises the <see cref="E:System.Web.UI.WebControls.WebParts.WebPartZoneBase.CreateVerbs" /> event.</summary>
      <param name="e">An <see cref="T:System.EventArgs" /> that contains the event data. </param>
    </member>
    <member name="M:System.Web.UI.WebControls.WebParts.WebPartZoneBase.OnPreRender(System.EventArgs)">
      <summary>Raises the <see cref="E:System.Web.UI.Control.PreRender" /> event.</summary>
      <param name="e">An <see cref="T:System.EventArgs" /> that contains the event data. </param>
    </member>
    <member name="M:System.Web.UI.WebControls.WebParts.WebPartZoneBase.RaisePostBackEvent(System.String)">
      <summary>Updates the status of the current collection of <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> controls in a zone, based on the changes that have occurred since the most recent postback event.</summary>
      <param name="eventArgument">The postback argument. </param>
    </member>
    <member name="M:System.Web.UI.WebControls.WebParts.WebPartZoneBase.Render(System.Web.UI.HtmlTextWriter)">
      <summary>Renders the zone to the specified <see cref="T:System.Web.UI.HtmlTextWriter" /> object.</summary>
      <param name="writer">The <see cref="T:System.Web.UI.HtmlTextWriter" /> that receives the zone's content. </param>
    </member>
    <member name="M:System.Web.UI.WebControls.WebParts.WebPartZoneBase.RenderBody(System.Web.UI.HtmlTextWriter)">
      <summary>Overrides the base method to render the body area of a zone derived from the <see cref="T:System.Web.UI.WebControls.WebParts.WebPartZoneBase" /> class.</summary>
      <param name="writer">The <see cref="T:System.Web.UI.HtmlTextWriter" /> that receives the zone's body content. </param>
    </member>
    <member name="M:System.Web.UI.WebControls.WebParts.WebPartZoneBase.RenderDropCue(System.Web.UI.HtmlTextWriter)">
      <summary>Renders user interface (UI) elements to indicate to an end user where a <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> control that is being dragged can be dropped within a zone.</summary>
      <param name="writer">The <see cref="T:System.Web.UI.HtmlTextWriter" /> that receives the UI elements that indicate where a control can be dropped. </param>
    </member>
    <member name="M:System.Web.UI.WebControls.WebParts.WebPartZoneBase.RenderHeader(System.Web.UI.HtmlTextWriter)">
      <summary>Overrides the base method to render the header of a <see cref="T:System.Web.UI.WebControls.WebParts.WebPartZoneBase" /> zone that contains <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> controls.</summary>
      <param name="writer">The <see cref="T:System.Web.UI.HtmlTextWriter" /> that receives the content of the header. </param>
    </member>
    <member name="P:System.Web.UI.WebControls.WebParts.WebPartZoneBase.RestoreVerb">
      <summary>Gets a reference to a <see cref="T:System.Web.UI.WebControls.WebParts.WebPartVerb" /> object that enables end users to restore <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> controls in a zone to normal size.</summary>
      <returns>A <see cref="T:System.Web.UI.WebControls.WebParts.WebPartVerb" /> that enables end users to restore <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> controls.</returns>
    </member>
    <member name="M:System.Web.UI.WebControls.WebParts.WebPartZoneBase.RestoreWebPart(System.Web.UI.WebControls.WebParts.WebPart)">
      <summary>Restores a selected <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> control that was minimized to normal state.</summary>
      <param name="webPart">The <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> control to be restored. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="webPart" /> is null.</exception>
    </member>
    <member name="M:System.Web.UI.WebControls.WebParts.WebPartZoneBase.SaveViewState">
      <summary>Saves any view-state changes that have occurred after a page was posted back to the server.</summary>
      <returns>Returns the zone control's current view state. If no view state is associated with the zone, this method returns null.</returns>
    </member>
    <member name="P:System.Web.UI.WebControls.WebParts.WebPartZoneBase.SelectedPartChromeStyle">
      <summary>Gets style information for the appearance of a selected <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> control in a zone.</summary>
      <returns>A <see cref="T:System.Web.UI.WebControls.Style" /> that contains style information for the selected <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> control.</returns>
    </member>
    <member name="P:System.Web.UI.WebControls.WebParts.WebPartZoneBase.ShowTitleIcons">
      <summary>Gets or sets a value that indicates whether title icons are displayed in the title bar of each <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> control in a zone.</summary>
      <returns>true if title icons are displayed; otherwise, false. The default is true.</returns>
    </member>
    <member name="M:System.Web.UI.WebControls.WebParts.WebPartZoneBase.System#Web#UI#IPostBackEventHandler#RaisePostBackEvent(System.String)">
      <summary>For a description of this member, see <see cref="M:System.Web.UI.IPostBackEventHandler.RaisePostBackEvent(System.String)" />.</summary>
      <param name="eventArgument">The postback argument.</param>
    </member>
    <member name="P:System.Web.UI.WebControls.WebParts.WebPartZoneBase.TitleBarVerbButtonType">
      <summary>Gets or sets the type of button used for the verbs in the title bar of <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> controls.</summary>
      <returns>A <see cref="T:System.Web.UI.WebControls.ButtonType" /> that indicates what type of button is used for the verbs in the title bar of a control.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">The value for the property is not one of the <see cref="T:System.Web.UI.WebControls.ButtonType" /> values.</exception>
    </member>
    <member name="P:System.Web.UI.WebControls.WebParts.WebPartZoneBase.TitleBarVerbStyle">
      <summary>Gets style attributes for verbs in the title bar of a <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> control.</summary>
      <returns>A <see cref="T:System.Web.UI.WebControls.Style" /> that contains style attributes for verbs.</returns>
    </member>
    <member name="M:System.Web.UI.WebControls.WebParts.WebPartZoneBase.TrackViewState">
      <summary>Begins the process of tracking view-state changes to a zone so that they can be stored in a <see cref="T:System.Web.UI.StateBag" /> object, and accessed through the <see cref="P:System.Web.UI.Control.ViewState" /> property.</summary>
    </member>
    <member name="P:System.Web.UI.WebControls.WebParts.WebPartZoneBase.VerbButtonType">
      <summary>Gets or sets the kind of button associated with the verbs that exist in a <see cref="T:System.Web.UI.WebControls.WebParts.WebPartZoneBase" /> zone when accessed with an older browser. </summary>
      <returns>A <see cref="T:System.Web.UI.WebControls.ButtonType" /> that determines what kind of button is associated with the verbs in a zone. </returns>
    </member>
    <member name="P:System.Web.UI.WebControls.WebParts.WebPartZoneBase.WebPartChrome">
      <summary>Gets a reference to the <see cref="T:System.Web.UI.WebControls.WebParts.WebPartChrome" /> object that determines the peripheral rendering for <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> controls in the zone. </summary>
      <returns>A <see cref="T:System.Web.UI.WebControls.WebParts.WebPartChrome" /> that determines rendering for controls in the zone.</returns>
    </member>
    <member name="P:System.Web.UI.WebControls.WebParts.WebPartZoneBase.WebParts">
      <summary>Gets the collection of Web Parts controls contained within a zone.</summary>
      <returns>A <see cref="T:System.Web.UI.WebControls.WebParts.WebPartCollection" /> that contains references to all the Web Parts controls in a zone.</returns>
    </member>
    <member name="P:System.Web.UI.WebControls.WebParts.WebPartZoneBase.WebPartVerbRenderMode">
      <summary>Gets or sets a value indicating how the verbs should be rendered on <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> controls in the zone.</summary>
      <returns>A <see cref="T:System.Web.UI.WebControls.WebParts.WebPartVerbRenderMode" /> enumeration value indicating how verbs should be rendered on <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> controls. The default value is <see cref="F:System.Web.UI.WebControls.WebParts.WebPartVerbRenderMode.Menu" />.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">The value for the property is not one of the <see cref="T:System.Web.UI.WebControls.WebParts.WebPartVerbRenderMode" /> values.</exception>
    </member>
    <member name="T:System.Web.UI.WebControls.WebParts.WebPartZoneCollection">
      <summary>Contains a read-only collection of <see cref="T:System.Web.UI.WebControls.WebParts.WebPartZone" /> controls.</summary>
    </member>
    <member name="M:System.Web.UI.WebControls.WebParts.WebPartZoneCollection.#ctor">
      <summary>Initializes an empty instance of the <see cref="T:System.Web.UI.WebControls.WebParts.WebPartZoneCollection" /> class.</summary>
    </member>
    <member name="M:System.Web.UI.WebControls.WebParts.WebPartZoneCollection.#ctor(System.Collections.ICollection)">
      <summary>Initializes an instance of the <see cref="T:System.Web.UI.WebControls.WebParts.WebPartZoneCollection" /> class by passing in a collection of <see cref="T:System.Web.UI.WebControls.WebParts.WebPartZone" /> objects.</summary>
      <param name="webPartZones">An <see cref="T:System.Collections.ICollection" /> of <see cref="T:System.Web.UI.WebControls.WebParts.WebPartZone" /> objects. </param>
      <exception cref="T:System.ArgumentNullException">The collection of zones is null. </exception>
      <exception cref="T:System.ArgumentException">One of the objects in the collection is null or is not of type <see cref="T:System.Web.UI.WebControls.WebParts.WebPartZone" />.</exception>
    </member>
    <member name="M:System.Web.UI.WebControls.WebParts.WebPartZoneCollection.Contains(System.Web.UI.WebControls.WebParts.WebPartZoneBase)">
      <summary>Returns a value indicating whether a particular zone exists in the collection.</summary>
      <returns>A Boolean value that indicates whether a particular zone is in the collection.</returns>
      <param name="value">A <see cref="T:System.Web.UI.WebControls.WebParts.WebPartZone" /> that is checked to determine whether it is in the collection. </param>
    </member>
    <member name="M:System.Web.UI.WebControls.WebParts.WebPartZoneCollection.CopyTo(System.Web.UI.WebControls.WebParts.WebPartZoneBase[],System.Int32)">
      <summary>Copies the collection to an array of <see cref="T:System.Web.UI.WebControls.WebParts.WebPartZoneBase" /> objects.</summary>
      <param name="array">A <see cref="T:System.Web.UI.WebControls.WebParts.WebPartZoneBase" /> array to contain the copied collection. </param>
      <param name="index">The starting point in the array at which to place the collection contents. </param>
    </member>
    <member name="M:System.Web.UI.WebControls.WebParts.WebPartZoneCollection.IndexOf(System.Web.UI.WebControls.WebParts.WebPartZoneBase)">
      <summary>Returns the position of a particular member of the collection.</summary>
      <returns>An integer that indicates the position of a particular object in the collection.</returns>
      <param name="value">A <see cref="T:System.Web.UI.WebControls.WebParts.WebPartZoneBase" /> that is a member of the collection. </param>
    </member>
    <member name="P:System.Web.UI.WebControls.WebParts.WebPartZoneCollection.Item(System.Int32)">
      <summary>Returns a specific member of the collection by passing in an integer.</summary>
      <returns>A <see cref="T:System.Web.UI.WebControls.WebParts.WebPartZone" /> at the specified index in the collection.</returns>
      <param name="index">The index number for a particular <see cref="T:System.Web.UI.WebControls.WebParts.WebPartZone" /> within a collection.</param>
    </member>
    <member name="P:System.Web.UI.WebControls.WebParts.WebPartZoneCollection.Item(System.String)">
      <summary>Returns a specific member of the collection by passing in a unique identifier.</summary>
      <returns>The first <see cref="T:System.Web.UI.WebControls.WebParts.WebPartZone" /> in the collection whose ID equals the value of <paramref name="id" />.</returns>
      <param name="id">The unique identifier for a particular <see cref="T:System.Web.UI.WebControls.WebParts.WebPartZone" /> within the collection. </param>
    </member>
    <member name="T:System.Web.UI.WebControls.WebParts.WebZone">
      <summary>Serves as the base class for all controls that act as containers for server controls (including Web Parts <see cref="T:System.Web.UI.WebControls.WebParts.Part" /> controls, server controls, and user controls) in Web Parts applications. </summary>
    </member>
    <member name="P:System.Web.UI.WebControls.WebParts.WebZone.BackImageUrl">
      <summary>Gets or sets the URL to a background image for a zone.</summary>
      <returns>A string that represents the URL to an image used as a background image for the zone. The default value is an empty string ("").</returns>
    </member>
    <member name="P:System.Web.UI.WebControls.WebParts.WebZone.EmptyZoneText">
      <summary>Gets or sets a message that appears when a zone contains no controls.</summary>
      <returns>A string containing the message that appears in an empty zone. A default culture-specific string is supplied by the .NET Framework.</returns>
    </member>
    <member name="P:System.Web.UI.WebControls.WebParts.WebZone.EmptyZoneTextStyle">
      <summary>Gets the style attributes for the placeholder text in an empty zone.</summary>
      <returns>A <see cref="T:System.Web.UI.WebControls.Style" /> that contains style attributes for the text assigned to a zone's <see cref="P:System.Web.UI.WebControls.WebParts.WebZone.EmptyZoneText" /> property.</returns>
    </member>
    <member name="P:System.Web.UI.WebControls.WebParts.WebZone.ErrorStyle">
      <summary>Gets the style attributes for rendering the error message that is displayed if a <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> control cannot be loaded or created.</summary>
      <returns>A <see cref="T:System.Web.UI.WebControls.Style" /> that contains style attributes for the error message.</returns>
    </member>
    <member name="P:System.Web.UI.WebControls.WebParts.WebZone.FooterStyle">
      <summary>Gets the style attributes for the contents of a zone's footer area.</summary>
      <returns>A <see cref="T:System.Web.UI.WebControls.WebParts.TitleStyle" /> that contains style attributes for the contents of a zone's footer area.</returns>
    </member>
    <member name="M:System.Web.UI.WebControls.WebParts.WebZone.GetEffectiveChromeType(System.Web.UI.WebControls.WebParts.Part)">
      <summary>Returns the actual or effective current <see cref="T:System.Web.UI.WebControls.WebParts.PartChromeType" /> value of a <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> control, given the <see cref="P:System.Web.UI.WebControls.WebParts.WebZone.PartChromeType" /> property of the zone and the current display mode of the Web Parts page.</summary>
      <returns>A <see cref="T:System.Web.UI.WebControls.WebParts.PartChromeType" /> value that contains the kind of border that currently frames Web Parts controls contained by a zone. </returns>
      <param name="part">A part control within the current zone.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="part" /> is null.</exception>
    </member>
    <member name="P:System.Web.UI.WebControls.WebParts.WebZone.HasFooter">
      <summary>Gets a value indicating whether a zone has a footer area.</summary>
      <returns>true if the zone has a footer area; otherwise, false. The default value is true.</returns>
    </member>
    <member name="P:System.Web.UI.WebControls.WebParts.WebZone.HasHeader">
      <summary>Gets a value indicating whether a zone has a header area.</summary>
      <returns>true if the zone has a header area; otherwise, false. The default value is true.</returns>
    </member>
    <member name="P:System.Web.UI.WebControls.WebParts.WebZone.HeaderStyle">
      <summary>Gets the style attributes for the contents of a zone's header area.</summary>
      <returns>A <see cref="T:System.Web.UI.WebControls.WebParts.TitleStyle" /> that contains style attributes for the contents of a zone's header area.</returns>
    </member>
    <member name="P:System.Web.UI.WebControls.WebParts.WebZone.HeaderText">
      <summary>Gets or sets the text for the header area of a zone.</summary>
      <returns>A string that contains the header text for the zone. The default is an empty string ("").</returns>
    </member>
    <member name="M:System.Web.UI.WebControls.WebParts.WebZone.LoadViewState(System.Object)">
      <summary>Loads previously saved state information for a zone. </summary>
      <param name="savedState">The previously saved state.</param>
      <exception cref="T:System.ArgumentException">The size of the <paramref name="savedState" /> object does not equal the size of the current view-state object. </exception>
    </member>
    <member name="M:System.Web.UI.WebControls.WebParts.WebZone.OnInit(System.EventArgs)">
      <summary>Raises the <see cref="E:System.Web.UI.Control.Init" /> event.</summary>
      <param name="e">An <see cref="T:System.EventArgs" /> that contains the event data.</param>
      <exception cref="T:System.InvalidOperationException">The zone control was added at too late of a stage in the page life cycle, or the <see cref="T:System.Web.UI.WebControls.WebParts.WebPartManager" />  is null.</exception>
    </member>
    <member name="M:System.Web.UI.WebControls.WebParts.WebZone.OnPreRender(System.EventArgs)">
      <summary>Raises the <see cref="E:System.Web.UI.Control.PreRender" /> event.</summary>
      <param name="e">An <see cref="T:System.EventArgs" /> that contains the event data.</param>
      <exception cref="T:System.InvalidOperationException">A <see cref="T:System.Web.UI.WebControls.WebParts.WebZone" /> control is nested within another zone or within a <see cref="T:System.Web.UI.WebControls.WebParts.Part" /> control.</exception>
    </member>
    <member name="P:System.Web.UI.WebControls.WebParts.WebZone.Padding">
      <summary>Gets or sets the cell padding attributes on the table that contains the <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> controls in a zone.</summary>
      <returns>The number of pixels for the padding between items and their cell boundaries in the table rendered for a zone. The default is 2.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">The property is set to a value less than -1.</exception>
    </member>
    <member name="P:System.Web.UI.WebControls.WebParts.WebZone.PartChromePadding">
      <summary>Gets or sets the distance between the contents of a <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> control and the border of the control.</summary>
      <returns>A <see cref="T:System.Web.UI.WebControls.Unit" /> object that indicates the type of measurement and the amount of padding. The default padding for a zone is 5 pixels.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">The value assigned to the property is a negative number.</exception>
    </member>
    <member name="P:System.Web.UI.WebControls.WebParts.WebZone.PartChromeStyle">
      <summary>Gets style characteristics that apply to the borders of Web Parts controls contained by a zone.</summary>
      <returns>A <see cref="T:System.Web.UI.WebControls.Style" /> that contains style attributes for the borders that surround Web Parts controls contained by a zone.</returns>
    </member>
    <member name="P:System.Web.UI.WebControls.WebParts.WebZone.PartChromeType">
      <summary>Gets or sets the type of border that frames Web Parts controls contained by a zone.</summary>
      <returns>A <see cref="T:System.Web.UI.WebControls.WebParts.PartChromeType" /> that determines the type of border that frames Web Parts controls contained by a zone. </returns>
      <exception cref="T:System.ArgumentOutOfRangeException">The value is not one of the <see cref="T:System.Web.UI.WebControls.WebParts.PartChromeType" /> values. </exception>
    </member>
    <member name="P:System.Web.UI.WebControls.WebParts.WebZone.PartStyle">
      <summary>Gets style characteristics that apply to the border and contents of each Web Parts control contained by a zone.</summary>
      <returns>A <see cref="T:System.Web.UI.WebControls.TableStyle" /> that contains style attributes for the Web Parts controls in the zone.</returns>
    </member>
    <member name="P:System.Web.UI.WebControls.WebParts.WebZone.PartTitleStyle">
      <summary>Gets style attributes for the title bar content for each Web Parts control contained by a zone.</summary>
      <returns>A <see cref="T:System.Web.UI.WebControls.WebParts.TitleStyle" /> that contains style attributes for the title bar content for each Web Parts control in the zone.</returns>
    </member>
    <member name="M:System.Web.UI.WebControls.WebParts.WebZone.RenderBeginTag(System.Web.UI.HtmlTextWriter)">
      <summary>Renders the opening HTML tag of the zone control to the specified <see cref="T:System.Web.UI.HtmlTextWriter" /> object. </summary>
      <param name="writer">An <see cref="T:System.Web.UI.HtmlTextWriter" /> that represents the output stream to render HTML content on the client.</param>
    </member>
    <member name="M:System.Web.UI.WebControls.WebParts.WebZone.RenderBody(System.Web.UI.HtmlTextWriter)">
      <summary>Overrides rendering for the body of a zone control. </summary>
      <param name="writer">A <see cref="T:System.Web.UI.HtmlTextWriter" /> that represents the output stream to render HTML content on the client.</param>
    </member>
    <member name="P:System.Web.UI.WebControls.WebParts.WebZone.RenderClientScript">
      <summary>Gets a value that indicates whether to render client script on a Web Parts page.</summary>
      <returns>true if the zone renders client script when the page is in a given display mode; otherwise, false. The default value is false.</returns>
    </member>
    <member name="M:System.Web.UI.WebControls.WebParts.WebZone.RenderContents(System.Web.UI.HtmlTextWriter)">
      <summary>Renders the entire contents of a zone control between the beginning and ending tags to the specified <see cref="T:System.Web.UI.HtmlTextWriter" /> object. </summary>
      <param name="writer">An <see cref="T:System.Web.UI.HtmlTextWriter" /> that represents the output stream to render HTML content on the client.</param>
    </member>
    <member name="M:System.Web.UI.WebControls.WebParts.WebZone.RenderFooter(System.Web.UI.HtmlTextWriter)">
      <summary>Overrides rendering for the footer of a zone control.</summary>
      <param name="writer">An <see cref="T:System.Web.UI.HtmlTextWriter" /> that represents the output stream to render HTML content on the client.</param>
    </member>
    <member name="M:System.Web.UI.WebControls.WebParts.WebZone.RenderHeader(System.Web.UI.HtmlTextWriter)">
      <summary>Overrides rendering for the header of a zone control.</summary>
      <param name="writer">An <see cref="T:System.Web.UI.HtmlTextWriter" /> that represents the output stream to render HTML content on the client.</param>
    </member>
    <member name="M:System.Web.UI.WebControls.WebParts.WebZone.SaveViewState">
      <summary>Saves any view-state changes that have occurred after a page was posted back to the server.</summary>
      <returns>Returns the zone control's current view state. If no view state is associated with the zone, this method returns null.</returns>
    </member>
    <member name="P:System.Web.UI.WebControls.WebParts.WebZone.TagKey">
      <returns>One of the <see cref="T:System.Web.UI.HtmlTextWriterTag" /> enumeration values.</returns>
    </member>
    <member name="M:System.Web.UI.WebControls.WebParts.WebZone.TrackViewState">
      <summary>Tracks changes to a zone control's view state.</summary>
    </member>
    <member name="P:System.Web.UI.WebControls.WebParts.WebZone.VerbButtonType">
      <summary>Gets or sets what kind of button is used to represent verbs in a zone.</summary>
      <returns>A <see cref="T:System.Web.UI.WebControls.ButtonType" /> that indicates what kind of button will be visible to represent verbs in the user interface (UI). The default is <see cref="F:System.Web.UI.WebControls.ButtonType.Link" />.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">The property is not set to a <see cref="T:System.Web.UI.WebControls.ButtonType" /> value.</exception>
    </member>
    <member name="P:System.Web.UI.WebControls.WebParts.WebZone.VerbStyle">
      <summary>Gets the style attributes for the user interface (UI) verbs associated with Web Parts controls in a zone.</summary>
      <returns>A <see cref="T:System.Web.UI.WebControls.Style" /> that contains style attributes for the verbs associated with Web Parts controls contained by a zone.</returns>
    </member>
    <member name="P:System.Web.UI.WebControls.WebParts.WebZone.WebPartManager">
      <summary>Gets a reference to the <see cref="T:System.Web.UI.WebControls.WebParts.WebPartManager" /> control associated with a <see cref="T:System.Web.UI.WebControls.WebParts.WebZone" /> control instance on a Web Parts page.</summary>
      <returns>The <see cref="T:System.Web.UI.WebControls.WebParts.WebPartManager" /> control that is associated with a zone.</returns>
    </member>
    <member name="T:System.Web.Util.HttpEncoder">
      <summary>Implements the core encoding and decoding logic used by ASP.NET.</summary>
    </member>
    <member name="M:System.Web.Util.HttpEncoder.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Web.Util.HttpEncoder" /> class. </summary>
    </member>
    <member name="P:System.Web.Util.HttpEncoder.Current">
      <summary>Gets or set the <see cref="T:System.Web.Util.HttpEncoder" /> type that will be used in an application.</summary>
      <returns>A reference to the encoder/decoder type that will be used. </returns>
      <exception cref="T:System.ArgumentNullException">The encoder instance that is being assigned to this property is null. </exception>
    </member>
    <member name="P:System.Web.Util.HttpEncoder.Default">
      <summary>Gets a reference to the default encoder for ASP.NET. </summary>
      <returns>A reference to the default encoder.</returns>
    </member>
    <member name="M:System.Web.Util.HttpEncoder.HeaderNameValueEncode(System.String,System.String,System.String@,System.String@)">
      <summary>Encodes a header name and value into a string that can be used as an HTTP header.</summary>
      <param name="headerName">The HTTP header name to encode.</param>
      <param name="headerValue">The HTTP header value to encode. </param>
      <param name="encodedHeaderName">When this method returns, contains the encoded name to use for an HTTP header. This parameter is passed uninitialized.</param>
      <param name="encodedHeaderValue">When this method returns, contains the encoded value to use for an HTTP header. This parameter is passed uninitialized.</param>
    </member>
    <member name="M:System.Web.Util.HttpEncoder.HtmlAttributeEncode(System.String,System.IO.TextWriter)">
      <summary>Encodes an incoming value into a string that can be inserted into an HTML attribute that is delimited by using double quotation marks. </summary>
      <param name="value">The string to encode.</param>
      <param name="output">The text writer to write the encoded value to.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="output" /> is null. </exception>
    </member>
    <member name="M:System.Web.Util.HttpEncoder.HtmlDecode(System.String,System.IO.TextWriter)">
      <summary>Decodes a value from an HTML-encoded string.</summary>
      <param name="value">The string to decode.</param>
      <param name="output">The text writer to write the decoded value to. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="output" /> is null. </exception>
    </member>
    <member name="M:System.Web.Util.HttpEncoder.HtmlEncode(System.String,System.IO.TextWriter)">
      <summary>Encodes a string into an HTML-encoded string. </summary>
      <param name="value">The string to encode. </param>
      <param name="output">The text writer to write the encoded value to.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="output" /> is null. </exception>
    </member>
    <member name="M:System.Web.Util.HttpEncoder.UrlEncode(System.Byte[],System.Int32,System.Int32)">
      <summary>Encodes an array of characters that are not allowed in a URL into a hexadecimal character-entity equivalent.</summary>
      <returns>An array of encoded characters.</returns>
      <param name="bytes">An array of bytes to encode. </param>
      <param name="offset">The position in the <paramref name="bytes" /> array at which to begin encoding.</param>
      <param name="count">The number of items in the <paramref name="bytes" /> array to encode.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="offset" /> is less than zero or greater than the length of the <paramref name="bytes" /> array. -or-<paramref name="count" /> is less than zero or <paramref name="count" /> plus <paramref name="offset" /> is greater than the length of the <paramref name="bytes" /> array.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="bytes" /> is null. </exception>
    </member>
    <member name="M:System.Web.Util.HttpEncoder.UrlPathEncode(System.String)">
      <summary>Encodes a subsection of a URL.</summary>
      <returns>A URL-encoded string. </returns>
      <param name="value">The string to encode.</param>
    </member>
    <member name="T:System.Web.Util.IWebObjectFactory">
      <summary>Provides the interface for implementing factories for Web objects.</summary>
    </member>
    <member name="M:System.Web.Util.IWebObjectFactory.CreateInstance">
      <summary>Creates a new <see cref="T:System.Web.Util.IWebObjectFactory" /> instance.</summary>
      <returns>A new <see cref="T:System.Web.Util.IWebObjectFactory" /></returns>
    </member>
    <member name="T:System.Web.Util.IWebPropertyAccessor">
      <summary>Provides the interface for implementing property accessors.</summary>
    </member>
    <member name="M:System.Web.Util.IWebPropertyAccessor.GetProperty(System.Object)">
      <summary>Gets the value of a specified property.</summary>
      <returns>The value of the specified property.</returns>
      <param name="target">The property from which the value is retrieved.</param>
    </member>
    <member name="M:System.Web.Util.IWebPropertyAccessor.SetProperty(System.Object,System.Object)">
      <summary>Sets the specified property with the given value.</summary>
      <param name="target">The property for which <paramref name="value" /> is set.</param>
      <param name="value">The object containing the value of the property.</param>
    </member>
    <member name="T:System.Web.Util.RequestValidationSource">
      <summary>Specifies what kind of HTTP request data to validate.</summary>
    </member>
    <member name="F:System.Web.Util.RequestValidationSource.QueryString">
      <summary>The query string.</summary>
    </member>
    <member name="F:System.Web.Util.RequestValidationSource.Form">
      <summary>The form values.</summary>
    </member>
    <member name="F:System.Web.Util.RequestValidationSource.Cookies">
      <summary>The request cookies.</summary>
    </member>
    <member name="F:System.Web.Util.RequestValidationSource.Files">
      <summary>The uploaded file.</summary>
    </member>
    <member name="F:System.Web.Util.RequestValidationSource.RawUrl">
      <summary>The raw URL. (The part of a URL after the domain.)</summary>
    </member>
    <member name="F:System.Web.Util.RequestValidationSource.Path">
      <summary>The virtual path.</summary>
    </member>
    <member name="F:System.Web.Util.RequestValidationSource.PathInfo">
      <summary>An HTTP <see cref="P:System.Web.HttpRequest.PathInfo" /> string, which is an extension to a URL path. </summary>
    </member>
    <member name="F:System.Web.Util.RequestValidationSource.Headers">
      <summary>The request headers.</summary>
    </member>
    <member name="T:System.Web.Util.RequestValidator">
      <summary>Defines base methods for custom request validation. </summary>
    </member>
    <member name="M:System.Web.Util.RequestValidator.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Web.Util.RequestValidator" /> class. </summary>
    </member>
    <member name="P:System.Web.Util.RequestValidator.Current">
      <summary>Gets or sets a reference to the current <see cref="T:System.Web.Util.RequestValidator" /> instance that will be used in an application. </summary>
      <returns>An instance of the <see cref="T:System.Web.Util.RequestValidator" /> class.</returns>
      <exception cref="T:System.ArgumentNullException">The property is null. </exception>
    </member>
    <member name="M:System.Web.Util.RequestValidator.IsValidRequestString(System.Web.HttpContext,System.String,System.Web.Util.RequestValidationSource,System.String,System.Int32@)">
      <summary>Validates a string that contains HTTP request data.</summary>
      <returns>true if the string to be validated is valid; otherwise, false.</returns>
      <param name="context">The context of the current request.</param>
      <param name="value">The HTTP request data to validate.</param>
      <param name="requestValidationSource">An enumeration that represents the source of request data that is being validated. The following are possible values for the enumeration:QueryStringForm CookiesFilesRawUrlPathPathInfoHeaders</param>
      <param name="collectionKey">The key in the request collection of the item to validate. This parameter is optional. This parameter is used if the data to validate is obtained from a collection. If the data to validate is not from a collection, <paramref name="collectionKey" /> can be null. </param>
      <param name="validationFailureIndex">When this method returns, indicates the zero-based starting point of the problematic or invalid text in the request collection. This parameter is passed uninitialized.</param>
    </member>
    <member name="T:System.Web.Util.TransactedCallback">
      <summary>Represents the callback method being run under transaction support. </summary>
    </member>
    <member name="T:System.Web.Util.Transactions">
      <summary>Provides a way to wrap a callback method within a transaction boundary.</summary>
    </member>
    <member name="M:System.Web.Util.Transactions.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Web.Util.Transactions" /> class.</summary>
    </member>
    <member name="M:System.Web.Util.Transactions.InvokeTransacted(System.Web.Util.TransactedCallback,System.EnterpriseServices.TransactionOption)">
      <summary>Wraps a specified transaction support around a callback method.</summary>
      <param name="callback">The <see cref="T:System.Web.Util.TransactedCallback" /> to be run under the specified transaction support.</param>
      <param name="mode">The <see cref="T:System.EnterpriseServices.TransactionOption" /> that specifies the transaction support for the delegate.</param>
      <exception cref="T:System.PlatformNotSupportedException">The operating system is not Windows NT or later.</exception>
      <exception cref="T:System.Web.HttpException">The transacted code cannot be executed.</exception>
    </member>
    <member name="M:System.Web.Util.Transactions.InvokeTransacted(System.Web.Util.TransactedCallback,System.EnterpriseServices.TransactionOption,System.Boolean@)">
      <summary>Wraps a specified transaction support around a callback method and indicates whether the transaction aborted.</summary>
      <param name="callback">The <see cref="T:System.Web.Util.TransactedCallback" /> to be run under the specified transaction support.</param>
      <param name="mode">The <see cref="T:System.EnterpriseServices.TransactionOption" /> that specifies the transaction support for the delegate.</param>
      <param name="transactionAborted">The reference parameter that returns true if the transaction was aborted during the callback method; otherwise, false. </param>
      <exception cref="T:System.PlatformNotSupportedException">The operating system is not Windows NT or later.</exception>
      <exception cref="T:System.Web.HttpException">The transacted code cannot be executed.</exception>
    </member>
    <member name="T:System.Web.Util.WorkItem">
      <summary>Provides the ability to move work items to another thread for execution.</summary>
    </member>
    <member name="M:System.Web.Util.WorkItem.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Web.Util.WorkItem" /> class.</summary>
    </member>
    <member name="M:System.Web.Util.WorkItem.Post(System.Web.Util.WorkItemCallback)">
      <summary>Moves a work item to a separate thread for execution.</summary>
      <param name="callback">A <see cref="T:System.Web.Util.WorkItemCallback" /> that represents the method that is to be called on a separate thread.</param>
      <exception cref="T:System.PlatformNotSupportedException">The operating system is not Windows NT or later.</exception>
    </member>
    <member name="T:System.Web.Util.WorkItemCallback">
      <summary>Represents the method that executes on a separate work item thread.</summary>
    </member>
  </members>
</doc>
=== C:/Users/treeman/Desktop/windows nt source code\xbox\Xbox Live Source\XONLINE_MAIN\public\ext\sdk\CLR\netfx40rtm\Profile\Client\cscompmgd.xml ===
﻿<?xml version="1.0" encoding="utf-8"?>
<doc>
  <assembly>
    <name>cscompmgd</name>
  </assembly>
  <members>
    <member name="T:Microsoft.CSharp.Compiler">
      <summary>Managed wrapper for the C# compiler.</summary>
    </member>
    <member name="M:Microsoft.CSharp.Compiler.Compile(System.String[],System.String[],System.String,System.String[],System.Collections.IDictionary)">
      <summary>Compiles the given C# sources to the specified destination file.</summary>
      <returns>Returns diagnostic messages as an array of type <see cref="T:Microsoft.CSharp.CompilerError" />. If the array is empty or all elements are warnings, the compilation succeeded.</returns>
      <param name="sourceTexts">An array of type string, each with C# code. </param>
      <param name="sourceTextNames">An array of type string that contains the file names for each <paramref name="sourceTexts" />. </param>
      <param name="target">The output file name. This argument is required.</param>
      <param name="imports">An array of type string, with files to reference.</param>
      <param name="options">An <see cref="T:System.Collections.IDictionary" /> of compiler options. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="sourceTexts" /> is null.-or-<paramref name="sourceTextNames" /> is null.-or-<paramref name="target" /> is null.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="sourceTexts" /> is an empty array.-or-<paramref name="sourceTextNames" /> is not the same size as <paramref name="sourceTexts" />.</exception>
    </member>
    <member name="T:Microsoft.CSharp.CompilerError">
      <summary>Represents an error or diagnostic message reported by the compiler.</summary>
    </member>
    <member name="M:Microsoft.CSharp.CompilerError.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.CSharp.CompilerError" /> class.</summary>
    </member>
    <member name="F:Microsoft.CSharp.CompilerError.ErrorLevel">
      <summary>Specifies the severity of this diagnostic.</summary>
    </member>
    <member name="F:Microsoft.CSharp.CompilerError.ErrorMessage">
      <summary>Specifies the diagnostic message text.</summary>
    </member>
    <member name="F:Microsoft.CSharp.CompilerError.ErrorNumber">
      <summary>Specifies the diagnostic number.</summary>
    </member>
    <member name="F:Microsoft.CSharp.CompilerError.SourceColumn">
      <summary>Specifies the column of the source text that caused the diagnostic (1-based), or 0 if there is no column information.</summary>
    </member>
    <member name="F:Microsoft.CSharp.CompilerError.SourceFile">
      <summary>Specifies the file name of the source text that caused the diagnostic or an empty string ("").</summary>
    </member>
    <member name="F:Microsoft.CSharp.CompilerError.SourceLine">
      <summary>Specifies the line of the source text that caused the diagnostic (1-based), or 0 if there is no line information.</summary>
    </member>
    <member name="M:Microsoft.CSharp.CompilerError.ToString">
      <summary>Returns a <see cref="M:System.Object.ToString" /> that represents the current <see cref="T:Microsoft.CSharp.CompilerError" />.</summary>
      <returns>A string that represents the current <see cref="T:Microsoft.CSharp.CompilerError" />.</returns>
    </member>
    <member name="T:Microsoft.CSharp.ErrorLevel">
      <summary>Specifies the severity of a compiler diagnostic.</summary>
    </member>
    <member name="F:Microsoft.CSharp.ErrorLevel.None">
      <summary>An unknown severity.</summary>
    </member>
    <member name="F:Microsoft.CSharp.ErrorLevel.Warning">
      <summary>A warning or suggestive diagnostic.</summary>
    </member>
    <member name="F:Microsoft.CSharp.ErrorLevel.Error">
      <summary>An error diagnostic.</summary>
    </member>
    <member name="F:Microsoft.CSharp.ErrorLevel.FatalError">
      <summary>A noncontinuable error diagnostic.</summary>
    </member>
    <member name="M:Microsoft.CSharp.Compiler.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.CSharp.Compiler" /> class.</summary>
    </member>
  </members>
</doc>
=== C:/Users/treeman/Desktop/windows nt source code\xbox\Xbox Live Source\XONLINE_MAIN\public\ext\sdk\CLR\netfx40rtm\Profile\Client\ISymWrapper.xml ===
﻿<?xml version="1.0" encoding="utf-8"?>
<doc>
  <assembly>
    <name>ISymWrapper</name>
  </assembly>
  <members>
    <member name="T:System.Diagnostics.SymbolStore.SymBinder">
      <summary>Represents a symbol binder for managed code.</summary>
    </member>
    <member name="M:System.Diagnostics.SymbolStore.SymBinder.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Diagnostics.SymbolStore.SymBinder" /> class. </summary>
    </member>
    <member name="M:System.Diagnostics.SymbolStore.SymBinder.{dtor}">
      <summary>Releases the resources held by the current instance. </summary>
    </member>
    <member name="M:System.Diagnostics.SymbolStore.SymBinder.Finalize">
      <summary>Releases the resources held by the current instance.</summary>
    </member>
    <member name="M:System.Diagnostics.SymbolStore.SymBinder.GetReader(System.Int32,System.String,System.String)">
      <summary>Gets the interface of the symbol reader for the current file, using the specified 32-bit integer pointer to a metadata interface, the specified file name, and the specified search path.</summary>
      <returns>The interface that reads the debugging symbols.</returns>
      <param name="importer">A 32-bit integer that points to the metadata import interface. </param>
      <param name="filename">The name of the file for which the reader interface is required. </param>
      <param name="searchPath">The search path used to locate the symbol file. </param>
    </member>
    <member name="M:System.Diagnostics.SymbolStore.SymBinder.GetReader(System.IntPtr,System.String,System.String)">
      <summary>Gets the interface of the symbol reader for the current file, using the specified pointer to a metadata interface, the specified file name, and the specified search path.</summary>
      <returns>The interface that reads the debugging symbols.</returns>
      <param name="importer">A structure that points to the metadata import interface. </param>
      <param name="filename">The name of the file for which the reader interface is required. </param>
      <param name="searchPath">The search path used to locate the symbol file. </param>
    </member>
    <member name="T:System.Diagnostics.SymbolStore.SymDocument">
      <summary>Represents a document referenced by a symbol store.</summary>
    </member>
    <member name="M:System.Diagnostics.SymbolStore.SymDocument.#ctor(System.Diagnostics.SymbolStore.Private.ISymUnmanagedDocument*)">
      <summary>Initializes a new instance of the <see cref="T:System.Diagnostics.SymbolStore.SymDocument" /> class using the specified pointer to an unmanaged ISymUnmanagedDocument object.</summary>
      <param name="pDocument">A pointer to the ISymUnmanagedDocument object.</param>
    </member>
    <member name="M:System.Diagnostics.SymbolStore.SymDocument.{dtor}">
      <summary>Releases the resources held by the current instance.</summary>
    </member>
    <member name="P:System.Diagnostics.SymbolStore.SymDocument.CheckSumAlgorithmId">
      <summary>Throws a <see cref="T:System.NotSupportedException" /> in all cases.</summary>
      <returns>A <see cref="T:System.NotSupportedException" /> in all cases.</returns>
      <exception cref="T:System.NotSupportedException">In all cases.</exception>
    </member>
    <member name="P:System.Diagnostics.SymbolStore.SymDocument.DocumentType">
      <summary>Gets the type of the current document.</summary>
      <returns>The type of the current document.</returns>
    </member>
    <member name="M:System.Diagnostics.SymbolStore.SymDocument.Finalize">
      <summary>Releases unmanaged resources and performs other cleanup operations before the <see cref="T:System.Diagnostics.SymbolStore.SymReader" /> is reclaimed by garbage collection.</summary>
    </member>
    <member name="M:System.Diagnostics.SymbolStore.SymDocument.FindClosestLine(System.Int32)">
      <summary>Returns the line number of the closest line that is a sequence point, given a line in the current document that might or might not be a sequence point.</summary>
      <returns>The line number of the closest sequence point to the specified line.</returns>
      <param name="line">The specified line in the document. </param>
    </member>
    <member name="M:System.Diagnostics.SymbolStore.SymDocument.GetCheckSum">
      <summary>Throws a <see cref="T:System.NotSupportedException" /> in all cases.</summary>
      <returns>A <see cref="T:System.NotSupportedException" /> in all cases.</returns>
      <exception cref="T:System.NotSupportedException">In all cases.</exception>
    </member>
    <member name="M:System.Diagnostics.SymbolStore.SymDocument.GetSourceRange(System.Int32,System.Int32,System.Int32,System.Int32)">
      <summary>Throws a <see cref="T:System.NotSupportedException" /> in all cases.</summary>
      <returns>A <see cref="T:System.NotSupportedException" /> in all cases.</returns>
      <param name="startLine">This parameter is not used.</param>
      <param name="startColumn">This parameter is not used. </param>
      <param name="endLine">This parameter is not used. </param>
      <param name="endColumn">This parameter is not used. </param>
      <exception cref="T:System.NotSupportedException">In all cases.</exception>
    </member>
    <member name="M:System.Diagnostics.SymbolStore.SymDocument.GetUnmanaged">
      <summary>Gets a pointer to the unmanaged ISymUnmanagedDocument interface for this <see cref="T:System.Diagnostics.SymbolStore.SymDocument" /> instance.</summary>
      <returns>A pointer to the unmanaged ISymUnmanagedDocument interface for this <see cref="T:System.Diagnostics.SymbolStore.SymDocument" />.</returns>
    </member>
    <member name="P:System.Diagnostics.SymbolStore.SymDocument.HasEmbeddedSource">
      <summary>Indicates whether the source for the current document is stored in the symbol store.</summary>
      <returns>true if the source for the current document is stored in the symbol store; otherwise, false.</returns>
    </member>
    <member name="P:System.Diagnostics.SymbolStore.SymDocument.Language">
      <summary>Gets the language of the current document.</summary>
      <returns>A <see cref="T:System.Guid" /> representing the language of the current document.</returns>
    </member>
    <member name="P:System.Diagnostics.SymbolStore.SymDocument.LanguageVendor">
      <summary>Gets the language vendor of the current document.</summary>
      <returns>A <see cref="T:System.Guid" /> representing the language vendor of the current document.</returns>
    </member>
    <member name="P:System.Diagnostics.SymbolStore.SymDocument.SourceLength">
      <summary>Gets the length, in bytes, of the embedded source.</summary>
      <returns>The source length of the current document.</returns>
    </member>
    <member name="P:System.Diagnostics.SymbolStore.SymDocument.URL">
      <summary>Gets the URL of the current document.</summary>
      <returns>The URL of the current document.</returns>
    </member>
    <member name="T:System.Diagnostics.SymbolStore.SymDocumentWriter">
      <summary>Provides methods for writing to a document referenced by a symbol store.</summary>
    </member>
    <member name="M:System.Diagnostics.SymbolStore.SymDocumentWriter.#ctor(System.Diagnostics.SymbolStore.Private.ISymUnmanagedDocumentWriter*)">
      <summary>Initializes a new instance of the <see cref="T:System.Diagnostics.SymbolStore.SymDocumentWriter" /> class. </summary>
      <param name="pDocumentWriter">A pointer to the unmanaged document writer.</param>
    </member>
    <member name="M:System.Diagnostics.SymbolStore.SymDocumentWriter.{dtor}">
      <summary>Releases the resources held by the current instance of the <see cref="T:System.Diagnostics.SymbolStore.SymDocumentWriter" /> object.</summary>
    </member>
    <member name="M:System.Diagnostics.SymbolStore.SymDocumentWriter.Finalize">
      <summary>Releases unmanaged resources and performs other cleanup operations before the <see cref="T:System.Diagnostics.SymbolStore.SymDocumentWriter" /> is reclaimed by garbage collection.</summary>
    </member>
    <member name="M:System.Diagnostics.SymbolStore.SymDocumentWriter.GetUnmanaged">
      <summary>Gets the unmanaged document writer for the current instance.</summary>
      <returns>The unmanaged document writer for the current <see cref="T:System.Diagnostics.SymbolStore.SymDocumentWriter" /> instance.</returns>
    </member>
    <member name="M:System.Diagnostics.SymbolStore.SymDocumentWriter.SetCheckSum(System.Guid,System.Byte[])">
      <summary>Throws a <see cref="T:System.NotImplementedException" /> in all cases.</summary>
      <param name="algorithmId">This parameter is not used.</param>
      <param name="source">This parameter is not used.</param>
      <exception cref="T:System.NotImplementedException">In all cases.</exception>
    </member>
    <member name="M:System.Diagnostics.SymbolStore.SymDocumentWriter.SetSource(System.Byte[])">
      <summary>Throws a <see cref="T:System.NotSupportedException" /> in all cases.</summary>
      <param name="source">This parameter is not used.</param>
      <exception cref="T:System.NotSupportedException">In all cases.</exception>
    </member>
    <member name="T:System.Diagnostics.SymbolStore.SymMethod">
      <summary>Represents a method within a symbol store.</summary>
    </member>
    <member name="M:System.Diagnostics.SymbolStore.SymMethod.#ctor(System.Diagnostics.SymbolStore.Private.ISymUnmanagedMethod*)">
      <summary>Initializes a new instance of the <see cref="T:System.Diagnostics.SymbolStore.SymMethod" /> class from a raw pointer to an unmanaged interface. </summary>
      <param name="pMethod">A raw pointer to the unmanaged COM ISymUnmanagedMethod object.</param>
    </member>
    <member name="M:System.Diagnostics.SymbolStore.SymMethod.{dtor}">
      <summary>Releases the resources held by the current instance of the <see cref="T:System.Diagnostics.SymbolStore.SymMethod" /> object.</summary>
    </member>
    <member name="M:System.Diagnostics.SymbolStore.SymMethod.Finalize">
      <summary>Releases unmanaged resources and performs other cleanup operations before the <see cref="T:System.Diagnostics.SymbolStore.SymMethod" /> is reclaimed by garbage collection.</summary>
    </member>
    <member name="M:System.Diagnostics.SymbolStore.SymMethod.GetNamespace">
      <summary>Throws a <see cref="T:System.NotSupportedException" /> in all cases.</summary>
      <returns>Throws a <see cref="T:System.NotSupportedException" /> in all cases.</returns>
      <exception cref="T:System.NotSupportedException">In all cases.</exception>
    </member>
    <member name="M:System.Diagnostics.SymbolStore.SymMethod.GetOffset(System.Diagnostics.SymbolStore.ISymbolDocument,System.Int32,System.Int32)">
      <summary>Gets the Microsoft intermediate language (MSIL) offset within the method that corresponds to the specified position.</summary>
      <returns>The IL offset within the current method of the specified location in the document.</returns>
      <param name="document">The document for which the offset is requested. </param>
      <param name="line">The document line for which the offset is requested. </param>
      <param name="column">The document column for which the offset is requested. </param>
    </member>
    <member name="M:System.Diagnostics.SymbolStore.SymMethod.GetParameters">
      <summary>Gets the parameters for the current method.</summary>
      <returns>The array of parameters for the current method.</returns>
    </member>
    <member name="M:System.Diagnostics.SymbolStore.SymMethod.GetRanges(System.Diagnostics.SymbolStore.ISymbolDocument,System.Int32,System.Int32)">
      <summary>Gets an array of start and end offset pairs that correspond to the ranges of Microsoft intermediate language (MSIL) offsets that a given position covers within this method.</summary>
      <returns>An array of start and end IL offset pairs.</returns>
      <param name="document">The document for which the IL offset ranges are requested. </param>
      <param name="line">The document line for which the IL offset ranges are requested. </param>
      <param name="column">The document column for which the IL offset ranges are requested. </param>
    </member>
    <member name="M:System.Diagnostics.SymbolStore.SymMethod.GetScope(System.Int32)">
      <summary>Returns the most enclosing lexical scope corresponding to an offset within a method.</summary>
      <returns>The most enclosing lexical scope for the given IL offset within the method.</returns>
      <param name="offset">The IL offset within the method to look up. </param>
    </member>
    <member name="M:System.Diagnostics.SymbolStore.SymMethod.GetSequencePoints(System.Int32[],System.Diagnostics.SymbolStore.ISymbolDocument[],System.Int32[],System.Int32[],System.Int32[],System.Int32[])">
      <summary>Gets the sequence points for the current method and stores the information in the specified arrays.</summary>
      <param name="offsets">An array in which to store the IL offsets from the beginning of the method for the sequence points. </param>
      <param name="documents">An array in which to store the  documents in which the sequence points are located. </param>
      <param name="lines">An array in which to store the lines in the documents at which the sequence points are located. </param>
      <param name="columns">An array in which to store the columns in the documents at which the sequence points are located. </param>
      <param name="endLines">The array of lines in the documents at which the sequence points end. </param>
      <param name="endColumns">The array of columns in the documents at which the sequence points end. </param>
    </member>
    <member name="M:System.Diagnostics.SymbolStore.SymMethod.GetSourceStartEnd(System.Diagnostics.SymbolStore.ISymbolDocument[],System.Int32[],System.Int32[])">
      <summary>Throws a <see cref="T:System.NotSupportedException" /> in all cases.</summary>
      <returns>Throws a <see cref="T:System.NotSupportedException" /> in all cases.</returns>
      <param name="docs">This parameter is not used.</param>
      <param name="lines">This parameter is not used. </param>
      <param name="columns">This parameter is not used. </param>
      <exception cref="T:System.NotSupportedException">In all cases.</exception>
    </member>
    <member name="P:System.Diagnostics.SymbolStore.SymMethod.RootScope">
      <summary>Gets the root lexical scope for the current method. This scope encloses the entire method.</summary>
      <returns>The root lexical scope that encloses the entire method.</returns>
    </member>
    <member name="M:System.Diagnostics.SymbolStore.SymMethod.RootScopeInternal">
      <summary>Gets the root lexical scope for the current method. This scope encloses the entire method.</summary>
      <returns>The root lexical scope that encloses the entire method.</returns>
    </member>
    <member name="P:System.Diagnostics.SymbolStore.SymMethod.SequencePointCount">
      <summary>Gets a count of the sequence points in the method.</summary>
      <returns>The count of the sequence points in the method.</returns>
    </member>
    <member name="P:System.Diagnostics.SymbolStore.SymMethod.Token">
      <summary>Gets the <see cref="T:System.Diagnostics.SymbolStore.SymbolToken" /> containing the metadata for the current method.</summary>
      <returns>The metadata token for the current method.</returns>
    </member>
    <member name="T:System.Diagnostics.SymbolStore.SymReader">
      <summary>Provides access to documents, methods, and variables within a symbol store.</summary>
    </member>
    <member name="M:System.Diagnostics.SymbolStore.SymReader.#ctor(System.Diagnostics.SymbolStore.Private.ISymUnmanagedReader*)">
      <summary>Initializes a new instance of the <see cref="T:System.Diagnostics.SymbolStore.SymReader" /> class by using the specified pointer to an unmanaged ISymUnmanagedReader object. </summary>
      <param name="pReader">A pointer to an unmanaged ISymUnmanagedReader object.</param>
    </member>
    <member name="M:System.Diagnostics.SymbolStore.SymReader.{dtor}">
      <summary>This method is for internal use only. </summary>
    </member>
    <member name="M:System.Diagnostics.SymbolStore.SymReader.Finalize">
      <summary>Releases unmanaged resources and performs other cleanup operations before the <see cref="T:System.Diagnostics.SymbolStore.SymReader" /> is reclaimed by garbage collection.</summary>
    </member>
    <member name="M:System.Diagnostics.SymbolStore.SymReader.GetDocument(System.String,System.Guid,System.Guid,System.Guid)">
      <summary>Gets a document specified by the URL for the document and optionally the language, language vendor, and type.</summary>
      <returns>The document with the specified URL if found in the symbol store, or null if the document does not exist.</returns>
      <param name="url">The URL that identifies the document. </param>
      <param name="language">The document language. You can specify this parameter as <see cref="F:System.Guid.Empty" />. to indicate any language. </param>
      <param name="languageVendor">The identity of the vendor for the document language. You can specify this parameter as <see cref="F:System.Guid.Empty" /> to indicate any language vendor.</param>
      <param name="documentType">The type of the document. You can specify this parameter as <see cref="F:System.Guid.Empty" /> to indicate any document type.</param>
    </member>
    <member name="M:System.Diagnostics.SymbolStore.SymReader.GetDocuments">
      <summary>Gets an array of all documents defined in the symbol store.</summary>
      <returns>An array of all documents defined in the symbol store.</returns>
      <exception cref="T:System.OutOfMemoryException">There is insufficient memory to satisfy the request.</exception>
    </member>
    <member name="M:System.Diagnostics.SymbolStore.SymReader.GetGlobalVariables">
      <summary>Throws a <see cref="T:System.NotSupportedException" /> in all cases.</summary>
      <returns>Throws a <see cref="T:System.NotSupportedException" /> in all cases.</returns>
      <exception cref="T:System.NotSupportedException">In all cases.</exception>
    </member>
    <member name="M:System.Diagnostics.SymbolStore.SymReader.GetMethod(System.Diagnostics.SymbolStore.SymbolToken)">
      <summary>Gets a symbol reader method object when given the identifier of a method.</summary>
      <returns>The symbol reader method object for the specified method identifier.</returns>
      <param name="method">The metadata token of the method. </param>
    </member>
    <member name="M:System.Diagnostics.SymbolStore.SymReader.GetMethod(System.Diagnostics.SymbolStore.SymbolToken,System.Int32)">
      <summary>Gets a symbol reader method object when given the identifier of a method and its edit and continue version.</summary>
      <returns>The symbol reader method object for the specified method identifier and version.</returns>
      <param name="method">The metadata token of the method. </param>
      <param name="version">The edit and continue version of the method. </param>
    </member>
    <member name="M:System.Diagnostics.SymbolStore.SymReader.GetMethodFromDocumentPosition(System.Diagnostics.SymbolStore.ISymbolDocument,System.Int32,System.Int32)">
      <summary>Gets a symbol reader method object that contains a specified position in a document.</summary>
      <returns>The symbol reader method object for the specified position in the document.</returns>
      <param name="document">The document in which the method is located. </param>
      <param name="line">The position of the line within the document. The lines are numbered, beginning with 1. </param>
      <param name="column">The position of column within the document. The columns are numbered, beginning with 1. </param>
    </member>
    <member name="M:System.Diagnostics.SymbolStore.SymReader.GetNamespaces">
      <summary>Throws a <see cref="T:System.NotSupportedException" /> in all cases.</summary>
      <returns>Throws a <see cref="T:System.NotSupportedException" /> in all cases.</returns>
      <exception cref="T:System.NotSupportedException">In all cases.</exception>
    </member>
    <member name="M:System.Diagnostics.SymbolStore.SymReader.GetSymAttribute(System.Diagnostics.SymbolStore.SymbolToken,System.String)">
      <summary>Throws a <see cref="T:System.NotSupportedException" /> in all cases.</summary>
      <returns>Throws a <see cref="T:System.NotSupportedException" /> in all cases.</returns>
      <param name="parent">This parameter is not used.</param>
      <param name="name">This parameter is not used.</param>
      <exception cref="T:System.NotSupportedException">In all cases.</exception>
    </member>
    <member name="M:System.Diagnostics.SymbolStore.SymReader.GetVariables(System.Diagnostics.SymbolStore.SymbolToken)">
      <summary>Throws a <see cref="T:System.NotSupportedException" /> in all cases.</summary>
      <returns>Throws a <see cref="T:System.NotSupportedException" /> in all cases.</returns>
      <param name="parent">This parameter is not used.</param>
      <exception cref="T:System.NotSupportedException">In all cases.</exception>
    </member>
    <member name="M:System.Diagnostics.SymbolStore.SymReader.ReplaceSymbolStore(System.String,System.IntPtr)">
      <summary>Replaces the existing symbol store with a delta symbol store. </summary>
      <param name="fileName">The name of the file containing the symbol store, or null if using an in-memory store.</param>
      <param name="stream">The pointer to the input stream for the symbol store, or <see cref="F:System.IntPtr.Zero" /> if using an on-disk store.</param>
    </member>
    <member name="M:System.Diagnostics.SymbolStore.SymReader.UpdateSymbolStore(System.String,System.IntPtr)">
      <summary>Updates the existing symbol store with a delta symbol store. </summary>
      <param name="fileName">The name of the file containing the symbol store, or null if using an in-memory store.</param>
      <param name="stream">The pointer to the input stream for the symbol store, or <see cref="F:System.IntPtr.Zero" /> if using an on-disk store.</param>
    </member>
    <member name="P:System.Diagnostics.SymbolStore.SymReader.UserEntryPoint">
      <summary>Gets the metadata token for the method that was specified as the user entry point for the module, if any.</summary>
      <returns>The metadata token for the method that is the user entry point for the module.</returns>
      <exception cref="T:System.Runtime.InteropServices.COMException">An entry point was not found.</exception>
    </member>
    <member name="T:System.Diagnostics.SymbolStore.SymScope">
      <summary>Represents a lexical scope within <see cref="T:System.Diagnostics.SymbolStore.SymMethod" />, providing access to the start and end offsets of the scope, as well as its child and parent scopes.</summary>
    </member>
    <member name="M:System.Diagnostics.SymbolStore.SymScope.#ctor(System.Diagnostics.SymbolStore.Private.ISymUnmanagedScope*)">
      <summary>Initializes a new instance of the <see cref="T:System.Diagnostics.SymbolStore.SymScope" /> class using the specified pointer to an unmanaged ISymUnmanagedScope object.</summary>
      <param name="pScope">A pointer to an unmanaged ISymUnmanagedScope object.</param>
    </member>
    <member name="M:System.Diagnostics.SymbolStore.SymScope.{dtor}">
      <summary>Releases the resources held by the current instance.</summary>
    </member>
    <member name="P:System.Diagnostics.SymbolStore.SymScope.EndOffset">
      <summary>Gets the end offset of the current lexical scope.</summary>
      <returns>The ending Microsoft intermediate language (MSIL) offset. The offset is from the beginning of the method of the current lexical scope.</returns>
    </member>
    <member name="M:System.Diagnostics.SymbolStore.SymScope.Finalize">
      <summary>Releases unmanaged resources and performs other cleanup operations before the <see cref="T:System.Diagnostics.SymbolStore.SymScope" /> is reclaimed by garbage collection.</summary>
    </member>
    <member name="M:System.Diagnostics.SymbolStore.SymScope.GetChildren">
      <summary>Gets the child lexical scopes of the current lexical scope.</summary>
      <returns>The lexical scopes enclosed by the current lexical scope.</returns>
      <exception cref="T:System.OutOfMemoryException">There is insufficient memory to satisfy the request.</exception>
    </member>
    <member name="M:System.Diagnostics.SymbolStore.SymScope.GetLocals">
      <summary>Gets the local variables within the current lexical scope.</summary>
      <returns>The local variables within the current lexical scope.</returns>
      <exception cref="T:System.OutOfMemoryException">There is insufficient memory to satisfy the request.</exception>
    </member>
    <member name="M:System.Diagnostics.SymbolStore.SymScope.GetNamespaces">
      <summary>Throws a <see cref="T:System.NotSupportedException" /> in all cases.</summary>
      <returns>Throws a <see cref="T:System.NotSupportedException" /> in all cases.</returns>
    </member>
    <member name="P:System.Diagnostics.SymbolStore.SymScope.Method">
      <summary>Gets the method that contains the current lexical scope.</summary>
      <returns>The method that contains the current lexical scope.</returns>
    </member>
    <member name="P:System.Diagnostics.SymbolStore.SymScope.Parent">
      <summary>Gets the parent lexical scope of the current scope.</summary>
      <returns>The enclosing lexical scope of the current scope.</returns>
    </member>
    <member name="P:System.Diagnostics.SymbolStore.SymScope.StartOffset">
      <summary>Gets the start offset of the current lexical scope.</summary>
      <returns>The starting Microsoft intermediate language (MSIL) offset. The offset is from the beginning of the method of the current lexical scope.</returns>
    </member>
    <member name="T:System.Diagnostics.SymbolStore.SymVariable">
      <summary>Represents a variable within a symbol store.</summary>
    </member>
    <member name="M:System.Diagnostics.SymbolStore.SymVariable.#ctor(System.Diagnostics.SymbolStore.Private.ISymUnmanagedVariable*)">
      <summary>Initializes a new instance of the <see cref="T:System.Diagnostics.SymbolStore.SymVariable" /> class using the specified pointer to an unmanaged ISymUnmanagedVariable object. </summary>
      <param name="pVariable">A pointer to the unmanaged ISymUnmanagedVariable object.</param>
    </member>
    <member name="M:System.Diagnostics.SymbolStore.SymVariable.{dtor}">
      <summary>Releases the resources held by the current instance.</summary>
    </member>
    <member name="P:System.Diagnostics.SymbolStore.SymVariable.AddressField1">
      <summary>Gets the first address of a variable.</summary>
      <returns>The first address of the variable.</returns>
    </member>
    <member name="P:System.Diagnostics.SymbolStore.SymVariable.AddressField2">
      <summary>Gets the second address of a variable.</summary>
      <returns>The second address of the variable.</returns>
    </member>
    <member name="P:System.Diagnostics.SymbolStore.SymVariable.AddressField3">
      <summary>Gets the third address of a variable.</summary>
      <returns>The third address of the variable.</returns>
    </member>
    <member name="P:System.Diagnostics.SymbolStore.SymVariable.AddressKind">
      <summary>Gets the <see cref="T:System.Diagnostics.SymbolStore.SymAddressKind" /> value describing the type of the address.</summary>
      <returns>The type of the address. One of the <see cref="T:System.Diagnostics.SymbolStore.SymAddressKind" /> values.</returns>
      <exception cref="T:System.ArgumentException">Unknown <see cref="T:System.Diagnostics.SymbolStore.SymAddressKind" />.</exception>
    </member>
    <member name="P:System.Diagnostics.SymbolStore.SymVariable.Attributes">
      <summary>Gets the attributes of the variable.</summary>
      <returns>The variable attributes.</returns>
    </member>
    <member name="P:System.Diagnostics.SymbolStore.SymVariable.EndOffset">
      <summary>Gets the end offset of a variable within the scope of the variable.</summary>
      <returns>The end offset of the variable.</returns>
    </member>
    <member name="M:System.Diagnostics.SymbolStore.SymVariable.Finalize">
      <summary>Releases unmanaged resources and performs other cleanup operations before the <see cref="T:System.Diagnostics.SymbolStore.SymVariable" /> is reclaimed by garbage collection.</summary>
    </member>
    <member name="M:System.Diagnostics.SymbolStore.SymVariable.GetSignature">
      <summary>Gets the variable signature.</summary>
      <returns>The variable signature as an opaque blob.</returns>
    </member>
    <member name="P:System.Diagnostics.SymbolStore.SymVariable.Name">
      <summary>Gets the name of the variable.</summary>
      <returns>The name of the variable.</returns>
    </member>
    <member name="P:System.Diagnostics.SymbolStore.SymVariable.StartOffset">
      <summary>Gets the start offset of the variable within the scope of the variable.</summary>
      <returns>The start offset of the variable.</returns>
    </member>
    <member name="T:System.Diagnostics.SymbolStore.SymWriter">
      <summary>Represents a symbol writer for managed code.</summary>
    </member>
    <member name="M:System.Diagnostics.SymbolStore.SymWriter.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Diagnostics.SymbolStore.SymWriter" /> class. </summary>
    </member>
    <member name="M:System.Diagnostics.SymbolStore.SymWriter.#ctor(System.Boolean)">
      <summary>Initializes a new instance of the <see cref="T:System.Diagnostics.SymbolStore.SymWriter" /> class, specifying whether to create an underlying symbol writer.</summary>
      <param name="noUnderlyingWriter">true if an underlying symbol writer will be provided by calling the <see cref="M:System.Diagnostics.SymbolStore.SymWriter.SetUnderlyingWriter(System.IntPtr)" /> method; false if a default underlying symbol writer should be created instead.</param>
    </member>
    <member name="M:System.Diagnostics.SymbolStore.SymWriter.{dtor}">
      <summary>Releases the resources held by the current instance of the <see cref="T:System.Diagnostics.SymbolStore.SymWriter" /> object.</summary>
    </member>
    <member name="M:System.Diagnostics.SymbolStore.SymWriter.Close">
      <summary>Closes the <see cref="T:System.Diagnostics.SymbolStore.SymWriter" /> and commits the symbols to the symbol store.</summary>
    </member>
    <member name="M:System.Diagnostics.SymbolStore.SymWriter.CloseMethod">
      <summary>Closes the current method.</summary>
    </member>
    <member name="M:System.Diagnostics.SymbolStore.SymWriter.CloseNamespace">
      <summary>Closes the most recent namespace. </summary>
    </member>
    <member name="M:System.Diagnostics.SymbolStore.SymWriter.CloseScope(System.Int32)">
      <summary>Closes the current lexical scope.</summary>
      <param name="endOffset">The IL offset just past the last instruction in the scope.</param>
    </member>
    <member name="M:System.Diagnostics.SymbolStore.SymWriter.DefineDocument(System.String,System.Guid,System.Guid,System.Guid)">
      <summary>Defines a source document.</summary>
      <returns>The <see cref="T:System.Diagnostics.SymbolStore.ISymbolDocumentWriter" /> object that represents the document.</returns>
      <param name="url">The URL that identifies the document. </param>
      <param name="language">The document language. This parameter can be <see cref="F:System.Guid.Empty" />. </param>
      <param name="languageVendor">The identity of the vendor for the document language. This parameter can be <see cref="F:System.Guid.Empty" />.</param>
      <param name="documentType">The type of the document. This parameter can be <see cref="F:System.Guid.Empty" />.</param>
    </member>
    <member name="M:System.Diagnostics.SymbolStore.SymWriter.DefineField(System.Diagnostics.SymbolStore.SymbolToken,System.String,System.Reflection.FieldAttributes,System.Byte[],System.Diagnostics.SymbolStore.SymAddressKind,System.Int32,System.Int32,System.Int32)">
      <summary>Throws a <see cref="T:System.NotSupportedException" /> in all cases.</summary>
      <param name="parent">This parameter is not used.</param>
      <param name="name">This parameter is not used.</param>
      <param name="attributes">This parameter is not used.</param>
      <param name="signature">This parameter is not used.</param>
      <param name="addrKind">This parameter is not used.</param>
      <param name="addr1">This parameter is not used.</param>
      <param name="addr2">This parameter is not used.</param>
      <param name="addr3">This parameter is not used.</param>
      <exception cref="T:System.NotSupportedException">In all cases.</exception>
    </member>
    <member name="M:System.Diagnostics.SymbolStore.SymWriter.DefineGlobalVariable(System.String,System.Reflection.FieldAttributes,System.Byte[],System.Diagnostics.SymbolStore.SymAddressKind,System.Int32,System.Int32,System.Int32)">
      <summary>Throws a <see cref="T:System.NotSupportedException" /> in all cases.</summary>
      <param name="name">This parameter is not used.</param>
      <param name="attributes">This parameter is not used.</param>
      <param name="signature">This parameter is not used.</param>
      <param name="addrKind">This parameter is not used.</param>
      <param name="addr1">This parameter is not used.</param>
      <param name="addr2">This parameter is not used.</param>
      <param name="addr3">This parameter is not used.</param>
      <exception cref="T:System.NotSupportedException">In all cases.</exception>
    </member>
    <member name="M:System.Diagnostics.SymbolStore.SymWriter.DefineLocalVariable(System.String,System.Reflection.FieldAttributes,System.Byte[],System.Diagnostics.SymbolStore.SymAddressKind,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
      <summary>Defines a single variable in the current lexical scope.</summary>
      <param name="name">The local variable name. </param>
      <param name="attributes">The local variable attributes specified using the <see cref="T:System.Reflection.FieldAttributes" /> enumerator. </param>
      <param name="signature">The local variable signature. </param>
      <param name="addrKind">The address types for <paramref name="addr1" />, <paramref name="addr2" />, and <paramref name="addr3" /> using <see cref="T:System.Diagnostics.SymbolStore.SymAddressKind" />. </param>
      <param name="addr1">The first address for the local variable specification. </param>
      <param name="addr2">The second address for the local variable specification. </param>
      <param name="addr3">The third address for the local variable specification. </param>
      <param name="startOffset">The start offset for the variable. If zero, this parameter is ignored and the variable is defined throughout the entire scope. If nonzero, it falls within the offsets of the current scope. </param>
      <param name="endOffset">The end offset for the variable. If zero, this parameter is ignored and the variable is defined throughout the entire scope. If nonzero, it falls within the offsets of the current scope. </param>
    </member>
    <member name="M:System.Diagnostics.SymbolStore.SymWriter.DefineParameter(System.String,System.Reflection.ParameterAttributes,System.Int32,System.Diagnostics.SymbolStore.SymAddressKind,System.Int32,System.Int32,System.Int32)">
      <summary>Throws a <see cref="T:System.NotSupportedException" /> in all cases.</summary>
      <param name="name">This parameter is not used.</param>
      <param name="attributes">This parameter is not used.</param>
      <param name="sequence">This parameter is not used.</param>
      <param name="addrKind">This parameter is not used.</param>
      <param name="addr1">This parameter is not used.</param>
      <param name="addr2">This parameter is not used.</param>
      <param name="addr3">This parameter is not used.</param>
      <exception cref="T:System.NotSupportedException">In all cases.</exception>
    </member>
    <member name="M:System.Diagnostics.SymbolStore.SymWriter.DefineSequencePoints(System.Diagnostics.SymbolStore.ISymbolDocumentWriter,System.Int32[],System.Int32[],System.Int32[],System.Int32[],System.Int32[])">
      <summary>Defines a group of sequence points within the current method.</summary>
      <param name="document">The document object for which the sequence points are being defined. </param>
      <param name="offsets">The IL offset of the sequence points measured from the beginning of the method.</param>
      <param name="lines">The starting line numbers of the sequence points. </param>
      <param name="columns">The starting column numbers of the sequence points. </param>
      <param name="endLines">The ending line numbers of the sequence points. </param>
      <param name="endColumns">The ending column numbers of the sequence points. </param>
    </member>
    <member name="M:System.Diagnostics.SymbolStore.SymWriter.Finalize">
      <summary>Releases unmanaged resources and performs other cleanup operations before the <see cref="T:System.Diagnostics.SymbolStore.SymWriter" /> is reclaimed by garbage collection.</summary>
    </member>
    <member name="M:System.Diagnostics.SymbolStore.SymWriter.GetWriter">
      <summary>Gets the underlying unmanaged symbol writer.</summary>
      <returns>A raw pointer to the underlying unmanaged symbol writer.</returns>
    </member>
    <member name="M:System.Diagnostics.SymbolStore.SymWriter.Initialize(System.IntPtr,System.String,System.Boolean)">
      <summary>Sets the metadata emitter interface to associate with this writer.</summary>
      <param name="emitter">The metadata emitter interface. </param>
      <param name="filename">The file name for which the debugging symbols are written. Some writers require a file name, while others do not. If a file name is specified for a writer that does not use file names, this parameter is ignored. </param>
      <param name="fFullBuild">true indicates that this is a full rebuild; false indicates an incremental compilation. </param>
    </member>
    <member name="M:System.Diagnostics.SymbolStore.SymWriter.InitWriter(System.Boolean)">
      <summary>Initializes the symbol writer. This method should not be called directly; it is called by the constructor.</summary>
      <param name="noUnderlyingWriter">true if an underlying symbol writer will be provided by calling the <see cref="M:System.Diagnostics.SymbolStore.SymWriter.SetUnderlyingWriter(System.IntPtr)" /> method; false if a default underlying symbol writer should be created instead.</param>
    </member>
    <member name="M:System.Diagnostics.SymbolStore.SymWriter.OpenMethod(System.Diagnostics.SymbolStore.SymbolToken)">
      <summary>Opens a method in which to place symbol information.</summary>
      <param name="method">The metadata token for the method to be opened. </param>
    </member>
    <member name="M:System.Diagnostics.SymbolStore.SymWriter.OpenNamespace(System.String)">
      <summary>Opens a new namespace.</summary>
      <param name="name">The name of the new namespace. </param>
    </member>
    <member name="M:System.Diagnostics.SymbolStore.SymWriter.OpenScope(System.Int32)">
      <summary>Opens a new lexical scope in the current method.</summary>
      <returns>An opaque scope identifier that can be used with <see cref="M:System.Diagnostics.SymbolStore.SymWriter.SetScopeRange(System.Int32,System.Int32,System.Int32)" /> to define the start and end offsets of a scope at a later time. In this case, the offsets passed to <see cref="M:System.Diagnostics.SymbolStore.SymWriter.OpenScope(System.Int32)" /> and <see cref="M:System.Diagnostics.SymbolStore.SymWriter.CloseScope(System.Int32)" /> are ignored. A scope identifier is valid only in the current method.</returns>
      <param name="startOffset">The IL offset in bytes from the beginning of the method to the first instruction in the lexical scope. </param>
    </member>
    <member name="M:System.Diagnostics.SymbolStore.SymWriter.SetMethodSourceRange(System.Diagnostics.SymbolStore.ISymbolDocumentWriter,System.Int32,System.Int32,System.Diagnostics.SymbolStore.ISymbolDocumentWriter,System.Int32,System.Int32)">
      <summary>Throws a <see cref="T:System.NotSupportedException" /> in all cases.</summary>
      <param name="startDoc">This parameter is not used.</param>
      <param name="startLine">This parameter is not used. </param>
      <param name="startColumn">This parameter is not used. </param>
      <param name="endDoc">This parameter is not used. </param>
      <param name="endLine">This parameter is not used.</param>
      <param name="endColumn">This parameter is not used. </param>
      <exception cref="T:System.NotSupportedException">In all cases.</exception>
    </member>
    <member name="M:System.Diagnostics.SymbolStore.SymWriter.SetScopeRange(System.Int32,System.Int32,System.Int32)">
      <summary>Defines the offset range for the specified lexical scope.</summary>
      <param name="scopeID">The identifier of the lexical scope returned by the <see cref="M:System.Diagnostics.SymbolStore.SymWriter.OpenScope(System.Int32)" /> method.</param>
      <param name="startOffset">The IL offset of the beginning of the lexical scope. </param>
      <param name="endOffset">The IL offset of the end of the lexical scope. </param>
    </member>
    <member name="M:System.Diagnostics.SymbolStore.SymWriter.SetSymAttribute(System.Diagnostics.SymbolStore.SymbolToken,System.String,System.Byte[])">
      <summary>Defines an attribute when given the attribute name and the attribute value.</summary>
      <param name="parent">The metadata token for which the attribute is being defined. </param>
      <param name="name">The attribute name. </param>
      <param name="data">The attribute value. </param>
    </member>
    <member name="M:System.Diagnostics.SymbolStore.SymWriter.SetUnderlyingWriter(System.IntPtr)">
      <summary>Sets the underlying ISymUnmanagedWriter Interface (the corresponding unmanaged API) that a managed <see cref="T:System.Diagnostics.SymbolStore.SymWriter" /> uses to emit symbols.</summary>
      <param name="underlyingWriter">An <see cref="T:System.IntPtr" /> type pointer to code that is the underlying writer. </param>
    </member>
    <member name="M:System.Diagnostics.SymbolStore.SymWriter.SetUserEntryPoint(System.Diagnostics.SymbolStore.SymbolToken)">
      <summary>Identifies the user-defined method as the entry point for the current module.</summary>
      <param name="entryMethod">The metadata token for the method that is the user entry point. </param>
    </member>
    <member name="M:System.Diagnostics.SymbolStore.SymWriter.UsingNamespace(System.String)">
      <summary>Specifies that the given, fully qualified namespace name is used within the open lexical scope.</summary>
      <param name="fullName">The fully qualified name of the namespace. </param>
    </member>
  </members>
</doc>
=== C:/Users/treeman/Desktop/windows nt source code\xbox\Xbox Live Source\XONLINE_MAIN\public\ext\sdk\CLR\netfx40rtm\Profile\Client\CustomMarshalers.xml ===
﻿<?xml version="1.0" encoding="utf-8"?>
<doc>
  <assembly>
    <name>CustomMarshalers</name>
  </assembly>
  <members>
    <member name="T:System.Runtime.InteropServices.CustomMarshalers.EnumerableToDispatchMarshaler">
      <summary>Marshals the COM IDispatch interface to the .NET Framework <see cref="T:System.Collections.IEnumerable" /> interface, and vice versa.</summary>
    </member>
    <member name="M:System.Runtime.InteropServices.CustomMarshalers.EnumerableToDispatchMarshaler.CleanUpManagedData(System.Object)">
      <summary>Performs necessary cleanup of the managed data when it is no longer needed.</summary>
      <param name="pManagedObj">The managed object to be destroyed.</param>
    </member>
    <member name="M:System.Runtime.InteropServices.CustomMarshalers.EnumerableToDispatchMarshaler.CleanUpNativeData(System.IntPtr)">
      <summary>Performs necessary cleanup of the unmanaged data when it is no longer needed.</summary>
      <param name="pNativeData">A pointer to the unmanaged data to be destroyed.</param>
    </member>
    <member name="M:System.Runtime.InteropServices.CustomMarshalers.EnumerableToDispatchMarshaler.GetInstance(System.String)">
      <summary>Returns an instance of the custom marshaler.</summary>
      <returns>An instance of the custom marshaler.</returns>
      <param name="pstrCookie">String "cookie" parameter that can be used by the custom marshaler.</param>
    </member>
    <member name="M:System.Runtime.InteropServices.CustomMarshalers.EnumerableToDispatchMarshaler.GetNativeDataSize">
      <summary>Returns the size in bytes of the unmanaged data to be marshaled.</summary>
      <returns>-1 to indicate the type this marshaler handles is not a value type.</returns>
    </member>
    <member name="M:System.Runtime.InteropServices.CustomMarshalers.EnumerableToDispatchMarshaler.MarshalManagedToNative(System.Object)">
      <summary>Marshals an object from managed code to unmanaged code.</summary>
      <returns>A pointer to the unmanaged object.</returns>
      <param name="pManagedObj">The managed object to be converted.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="pManagedObj" /> is null.</exception>
    </member>
    <member name="M:System.Runtime.InteropServices.CustomMarshalers.EnumerableToDispatchMarshaler.MarshalNativeToManaged(System.IntPtr)">
      <summary>Marshals an object from unmanaged code to managed code.</summary>
      <returns>A managed object.</returns>
      <param name="pNativeData">A pointer to the unmanaged object to be converted.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="pNativeData" /> is null.</exception>
    </member>
    <member name="T:System.Runtime.InteropServices.CustomMarshalers.EnumeratorToEnumVariantMarshaler">
      <summary>Marshals the COM IEnumVARIANT interface to the .NET Framework <see cref="T:System.Collections.IEnumerator" /> interface, and vice versa.</summary>
    </member>
    <member name="M:System.Runtime.InteropServices.CustomMarshalers.EnumeratorToEnumVariantMarshaler.CleanUpManagedData(System.Object)">
      <summary>Performs necessary cleanup of the managed data when it is no longer needed.</summary>
      <param name="pManagedObj">The managed object to be destroyed.</param>
    </member>
    <member name="M:System.Runtime.InteropServices.CustomMarshalers.EnumeratorToEnumVariantMarshaler.CleanUpNativeData(System.IntPtr)">
      <summary>Performs necessary cleanup of the unmanaged data when it is no longer needed.</summary>
      <param name="pNativeData">A pointer to the unmanaged data to be destroyed.</param>
    </member>
    <member name="M:System.Runtime.InteropServices.CustomMarshalers.EnumeratorToEnumVariantMarshaler.GetInstance(System.String)">
      <summary>Returns an instance of the custom marshaler.</summary>
      <returns>An instance of the custom marshaler.</returns>
      <param name="pstrCookie">String "cookie" parameter that can be used by the custom marshaler.</param>
    </member>
    <member name="M:System.Runtime.InteropServices.CustomMarshalers.EnumeratorToEnumVariantMarshaler.GetNativeDataSize">
      <summary>Returns the size in bytes of the unmanaged data to be marshaled.</summary>
      <returns>-1 to indicate the type this marshaler handles is not a value type.</returns>
    </member>
    <member name="M:System.Runtime.InteropServices.CustomMarshalers.EnumeratorToEnumVariantMarshaler.MarshalManagedToNative(System.Object)">
      <summary>Marshals an object from managed code to unmanaged code.</summary>
      <returns>A pointer to the unmanaged object.</returns>
      <param name="pManagedObj">The managed object to be converted.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="pManagedObj" /> is null.</exception>
    </member>
    <member name="M:System.Runtime.InteropServices.CustomMarshalers.EnumeratorToEnumVariantMarshaler.MarshalNativeToManaged(System.IntPtr)">
      <summary>Marshals an object from unmanaged code to managed code.</summary>
      <returns>A managed object.</returns>
      <param name="pNativeData">A pointer to the unmanaged object to be converted.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="pNativeData" /> is null.</exception>
      <exception cref="T:System.InvalidCastException">The unmanaged object that <paramref name="pNativeData" /> points to could not be converted.</exception>
    </member>
    <member name="T:System.Runtime.InteropServices.CustomMarshalers.ExpandoToDispatchExMarshaler">
      <summary>Marshals the COM IDispatchEx interface to either the .NET Framework <see cref="T:System.Runtime.InteropServices.Expando.IExpando" /> interface, or to the <see cref="T:System.Reflection.IReflect" /> interface, and vice versa.</summary>
    </member>
    <member name="M:System.Runtime.InteropServices.CustomMarshalers.ExpandoToDispatchExMarshaler.CleanUpManagedData(System.Object)">
      <summary>Performs necessary cleanup of the managed data when it is no longer needed.</summary>
      <param name="pManagedObj">The managed object to be destroyed.</param>
    </member>
    <member name="M:System.Runtime.InteropServices.CustomMarshalers.ExpandoToDispatchExMarshaler.CleanUpNativeData(System.IntPtr)">
      <summary>Performs necessary cleanup of the unmanaged data when it is no longer needed.</summary>
      <param name="pNativeData">A pointer to the unmanaged data to be destroyed.</param>
    </member>
    <member name="M:System.Runtime.InteropServices.CustomMarshalers.ExpandoToDispatchExMarshaler.GetInstance(System.String)">
      <summary>Returns an instance of the custom marshaler.</summary>
      <returns>An instance of the custom marshaler.</returns>
      <param name="pstrCookie">String "cookie" parameter that can be used by the custom marshaler.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="pstrCookie" /> is invalid.</exception>
    </member>
    <member name="M:System.Runtime.InteropServices.CustomMarshalers.ExpandoToDispatchExMarshaler.GetNativeDataSize">
      <summary>Returns the size in bytes of the unmanaged data to be marshaled.</summary>
      <returns>-1 to indicate the type this marshaler handles is not a value type.</returns>
    </member>
    <member name="M:System.Runtime.InteropServices.CustomMarshalers.ExpandoToDispatchExMarshaler.MarshalManagedToNative(System.Object)">
      <summary>Marshals an object from managed code to unmanaged code.</summary>
      <returns>A pointer to the unmanaged object.</returns>
      <param name="pManagedObj">The managed object to be converted.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="pManagedObj" /> is null.</exception>
    </member>
    <member name="M:System.Runtime.InteropServices.CustomMarshalers.ExpandoToDispatchExMarshaler.MarshalNativeToManaged(System.IntPtr)">
      <summary>Marshals an object from unmanaged code to managed code.</summary>
      <returns>A managed object. </returns>
      <param name="pNativeData">A pointer to the unmanaged object to be converted.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="pNativeData" /> is null.</exception>
    </member>
    <member name="T:System.Runtime.InteropServices.CustomMarshalers.TypeToTypeInfoMarshaler">
      <summary>Marshals the unmanaged ITypeInfo interface to the managed <see cref="T:System.Type" /> class, and marshals the managed <see cref="T:System.Type" /> class to the unmanaged ITypeInfo interface.</summary>
    </member>
    <member name="M:System.Runtime.InteropServices.CustomMarshalers.TypeToTypeInfoMarshaler.CleanUpManagedData(System.Object)">
      <summary>Performs necessary cleanup of the managed data when it is no longer needed.</summary>
      <param name="pManagedObj">The managed object to be destroyed.</param>
    </member>
    <member name="M:System.Runtime.InteropServices.CustomMarshalers.TypeToTypeInfoMarshaler.CleanUpNativeData(System.IntPtr)">
      <summary>Performs necessary cleanup of the unmanaged data when it is no longer needed.</summary>
      <param name="pNativeData">A pointer to the unmanaged data to be destroyed.</param>
    </member>
    <member name="M:System.Runtime.InteropServices.CustomMarshalers.TypeToTypeInfoMarshaler.GetInstance(System.String)">
      <summary>Returns an instance of the custom marshaler.</summary>
      <returns>An instance of the custom marshaler.</returns>
      <param name="pstrCookie">String "cookie" parameter that can be used by the custom marshaler.</param>
    </member>
    <member name="M:System.Runtime.InteropServices.CustomMarshalers.TypeToTypeInfoMarshaler.GetNativeDataSize">
      <summary>Returns the size in bytes of the unmanaged data to be marshaled.</summary>
      <returns>-1 to indicate the type this marshaler handles is not a value type.</returns>
    </member>
    <member name="M:System.Runtime.InteropServices.CustomMarshalers.TypeToTypeInfoMarshaler.MarshalManagedToNative(System.Object)">
      <summary>Marshals an object from managed code to unmanaged code.</summary>
      <returns>A pointer to the unmanaged object.</returns>
      <param name="pManagedObj">The managed object to be converted.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="pManagedObj" /> is null.</exception>
    </member>
    <member name="M:System.Runtime.InteropServices.CustomMarshalers.TypeToTypeInfoMarshaler.MarshalNativeToManaged(System.IntPtr)">
      <summary>Marshals an object from unmanaged code to managed code.</summary>
      <returns>A managed object.</returns>
      <param name="pNativeData">A pointer to the unmanaged object to be converted.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="pNativeData" /> is null.</exception>
    </member>
  </members>
</doc>
=== C:/Users/treeman/Desktop/windows nt source code\xbox\Xbox Live Source\XONLINE_MAIN\public\ext\sdk\CLR\netfx40rtm\PermissionSets\LocalIntranet.xml ===
﻿<PermissionSet
   version="1"
   class="System.Security.NamedPermissionSet"
   Name="LocalIntranet"
   Description="Default rights given to applications on the local intranet">
   <IPermission
      Read="USERNAME"
      version="1"
      class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" />
   <IPermission
      version="1"
      class="System.Security.Permissions.FileDialogPermission, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089"
      Unrestricted="true" />
   <IPermission
      version="1"
      Permanent="True"
      Expiry="9223372036854775807"
      UserQuota="9223372036854775807"
      Allowed="AssemblyIsolationByUser"
      class="System.Security.Permissions.IsolatedStorageFilePermission, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" />
   <IPermission
      version="1"
      class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089"
      Flags="ReflectionEmit, RestrictedMemberAccess" />
   <IPermission
      version="1"
      class="System.Security.Permissions.SecurityPermission, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089"
      Flags="Assertion, Execution, BindingRedirects" />
   <IPermission
      version="1"
      class="System.Security.Permissions.UIPermission, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089"
      Unrestricted="true" />
   <IPermission
      version="1"
      class="System.Drawing.Printing.PrintingPermission, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"
      Level="DefaultPrinting" />
   <IPermission
      version="1"
      class="System.Security.Permissions.MediaPermission, WindowsBase, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35"
      Audio="SafeAudio"
      Image="SafeImage"
      Video="SafeVideo" />
   <IPermission
      version="1"
      class="System.Security.Permissions.WebBrowserPermission, WindowsBase, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35"
      Level="Safe" />
   <IPermission
      version="1"
      class="System.Net.DnsPermission, System, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089"
      Unrestricted="true" />
</PermissionSet>
=== C:/Users/treeman/Desktop/windows nt source code\xbox\Xbox Live Source\XONLINE_MAIN\public\ext\sdk\CLR\netfx40rtm\Profile\Client\Accessibility.xml ===
﻿<?xml version="1.0" encoding="utf-8"?>
<doc>
  <assembly>
    <name>Accessibility</name>
  </assembly>
  <members>
    <member name="T:Accessibility.__MIDL_IWinTypes_0009">
      <summary>The <see cref="T:Accessibility.__MIDL_IWinTypes_0009" /> and all of its exposed members are part of a managed wrapper for the Component Object Model (COM) accessibility interface.</summary>
    </member>
    <member name="F:Accessibility.__MIDL_IWinTypes_0009.hInproc">
      <summary>The <see cref="T:Accessibility.__MIDL_IWinTypes_0009" /> and all of its exposed members are part of a managed wrapper for the Component Object Model (COM) accessibility interface.</summary>
    </member>
    <member name="F:Accessibility.__MIDL_IWinTypes_0009.hRemote">
      <summary>The <see cref="T:Accessibility.__MIDL_IWinTypes_0009" /> and all of its exposed members are part of a managed wrapper for the Component Object Model (COM) accessibility interface.</summary>
    </member>
    <member name="T:Accessibility._RemotableHandle">
      <summary>The <see cref="T:Accessibility.IAccessibleHandler" /> and all of its exposed members are part of a managed wrapper for the Component Object Model (COM) accessibility interface.</summary>
    </member>
    <member name="F:Accessibility._RemotableHandle.fContext">
      <summary>The <see cref="T:Accessibility.IAccessibleHandler" /> and all of its exposed members are part of a managed wrapper for the Component Object Model (COM) accessibility interface.</summary>
    </member>
    <member name="F:Accessibility._RemotableHandle.u">
      <summary>The <see cref="T:Accessibility.IAccessibleHandler" /> and all of its exposed members are part of a managed wrapper for the Component Object Model (COM) accessibility interface.</summary>
    </member>
    <member name="T:Accessibility.AnnoScope">
      <summary>The <see cref="T:Accessibility.AnnoScope" /> and all of its exposed members are part of a managed wrapper for the Component Object Model (COM) accessibility interface.</summary>
    </member>
    <member name="F:Accessibility.AnnoScope.ANNO_THIS">
      <summary>Annotation is scoped to the immediate object.</summary>
    </member>
    <member name="F:Accessibility.AnnoScope.ANNO_CONTAINER">
      <summary>Annotation is scoped to the container object.</summary>
    </member>
    <member name="T:Accessibility.CAccPropServices">
      <summary>The <see cref="T:Accessibility.CAccPropServices" /> and all of its exposed members are part of a managed wrapper for the Component Object Model (COM) IAccPropServices interface. </summary>
    </member>
    <member name="T:Accessibility.CAccPropServicesClass">
      <summary>The <see cref="T:Accessibility.CAccPropServicesClass" /> and all of its exposed members are part of a managed wrapper for the Component Object Model (COM) IAccPropServices interface.</summary>
    </member>
    <member name="M:Accessibility.CAccPropServicesClass.#ctor">
      <summary>The <see cref="T:Accessibility.CAccPropServicesClass" /> and all of its exposed members are part of a managed wrapper for the Component Object Model (COM) IAccPropServices interface.  </summary>
    </member>
    <member name="M:Accessibility.CAccPropServicesClass.ClearHmenuProps(Accessibility._RemotableHandle@,System.UInt32,System.Guid@,System.Int32)">
      <summary>The <see cref="T:Accessibility.CAccPropServicesClass" /> and all of its exposed members are part of a managed wrapper for the Component Object Model (COM) IAccPropServices interface.</summary>
      <param name="hmenu">Identifies the HMENU-based accessible element to be annotated.</param>
      <param name="idChild">Specifies the child ID of the accessible element.</param>
      <param name="paProps">Specifies an array of properties to be reset. These properties will revert to the default behavior that they displayed before they were annotated.</param>
      <param name="cProps">Specifies the number of properties in the <paramref name="paProps" /> array.</param>
    </member>
    <member name="M:Accessibility.CAccPropServicesClass.ClearHwndProps(Accessibility._RemotableHandle@,System.UInt32,System.UInt32,System.Guid@,System.Int32)">
      <summary>The <see cref="T:Accessibility.CAccPropServicesClass" /> and all of its exposed members are part of a managed wrapper for the Component Object Model (COM) IAccPropServices interface.</summary>
      <param name="hwnd">Identifies the accessible element that is to be annotated. This replaces the identity string.</param>
      <param name="idObject">Identifies the accessible element that is to be annotated. This replaces the identity string.</param>
      <param name="idChild">Identifies the accessible element that is to be annotated. This replaces the identity string.</param>
      <param name="paProps">Specifies an array of properties that is to be reset. These properties will revert to the default behavior that they displayed before they were annotated.</param>
      <param name="cProps">Specifies the number of properties in the <paramref name="paProps" /> array.</param>
    </member>
    <member name="M:Accessibility.CAccPropServicesClass.ClearProps(System.Byte@,System.UInt32,System.Guid@,System.Int32)">
      <summary>The <see cref="T:Accessibility.CAccPropServicesClass" /> and all of its exposed members are part of a managed wrapper for the Component Object Model (COM) IAccPropServices interface.</summary>
      <param name="pIDString">Identify the accessible element that is to be un-annotated.</param>
      <param name="dwIDStringLen">Length of <paramref name="pIDString" />.</param>
      <param name="paProps">Specify an array of properties that is to be reset. These properties will revert to the default behavior they displayed before they were annotated.</param>
      <param name="cProps">Specifies the number of properties in the <paramref name="paProps" /> array.</param>
    </member>
    <member name="M:Accessibility.CAccPropServicesClass.ComposeHmenuIdentityString(Accessibility._RemotableHandle@,System.UInt32,System.IntPtr,System.UInt32@)">
      <summary>The <see cref="T:Accessibility.CAccPropServicesClass" /> and all of its exposed members are part of a managed wrapper for the Component Object Model (COM) IAccPropServices interface.</summary>
      <param name="hmenu">Identifies the HMENU-based accessible element.</param>
      <param name="idChild">Specifies the child ID of the accessible element.</param>
      <param name="ppIDString">Pointer to a buffer that receives the identity string. The callee allocates this buffer using CoTaskMemAlloc. When finished, the caller must free the buffer by calling CoTaskMemFree.</param>
      <param name="pdwIDStringLen">Pointer to a buffer that receives the length of the identity string.</param>
    </member>
    <member name="M:Accessibility.CAccPropServicesClass.ComposeHwndIdentityString(Accessibility._RemotableHandle@,System.UInt32,System.UInt32,System.IntPtr,System.UInt32@)">
      <summary>The <see cref="T:Accessibility.CAccPropServicesClass" /> and all of its exposed members are part of a managed wrapper for the Component Object Model (COM) IAccPropServices interface.</summary>
      <param name="hwnd">Specifies the HWND of the accessible element that the caller wants to identify.</param>
      <param name="idObject">Specifies the object ID of the accessible element.</param>
      <param name="idChild">Specifies the child ID of the accessible element.</param>
      <param name="ppIDString">Pointer to a buffer that receives the identity string. The callee allocates this buffer using CoTaskMemAlloc. When finished, the caller must free the buffer by calling CoTaskMemFree.</param>
      <param name="pdwIDStringLen">Pointer to a buffer that receives the length of the identity string.</param>
    </member>
    <member name="M:Accessibility.CAccPropServicesClass.DecomposeHmenuIdentityString(System.Byte@,System.UInt32,Accessibility._RemotableHandle@,System.UInt32@)">
      <summary>The <see cref="T:Accessibility.CAccPropServicesClass" /> and all of its exposed members are part of a managed wrapper for the Component Object Model (COM) IAccPropServices interface.</summary>
      <param name="pIDString">The <see cref="T:Accessibility.CAccPropServicesClass" /> and all of its exposed members are part of a managed wrapper for the Component Object Model (COM) IAccPropServices interface.</param>
      <param name="dwIDStringLen">Specifies the length of the identity string specified by <paramref name="pIDString" />.</param>
      <param name="phmenu">Pointer to a buffer that receives the HMENU of the accessible element.</param>
      <param name="pidChild">Pointer to a buffer that receives the child ID of the accessible element.</param>
    </member>
    <member name="M:Accessibility.CAccPropServicesClass.DecomposeHwndIdentityString(System.Byte@,System.UInt32,Accessibility._RemotableHandle@,System.UInt32@,System.UInt32@)">
      <summary>The <see cref="T:Accessibility.CAccPropServicesClass" /> and all of its exposed members are part of a managed wrapper for the Component Object Model (COM) IAccPropServices interface.</summary>
      <param name="pIDString">The <see cref="T:Accessibility.CAccPropServicesClass" /> and all of its exposed members are part of a managed wrapper for the Component Object Model (COM) IAccPropServices interface.</param>
      <param name="dwIDStringLen">Specifies the length of the identity string specified by <paramref name="pIDString" />.</param>
      <param name="phwnd">Pointer to a buffer that receives the HWND of the accessible element.</param>
      <param name="pidObject">Pointer to a buffer that receives the object ID of the accessible element.</param>
      <param name="pidChild">Pointer to a buffer that receives the child ID of the accessible element.</param>
    </member>
    <member name="M:Accessibility.CAccPropServicesClass.SetHmenuProp(Accessibility._RemotableHandle@,System.UInt32,System.Guid,System.Object)">
      <summary>The <see cref="T:Accessibility.CAccPropServicesClass" /> and all of its exposed members are part of a managed wrapper for the Component Object Model (COM) IAccPropServices interface.</summary>
      <param name="hmenu">Identifies the HMENU-based accessible element to be annotated.</param>
      <param name="idChild">Specifies the child ID of the accessible element.</param>
      <param name="idProp">Specifies which property of the accessible element is to be annotated.</param>
      <param name="var">Specifies a new value for the <paramref name="idProp" /> property.</param>
    </member>
    <member name="M:Accessibility.CAccPropServicesClass.SetHmenuPropServer(Accessibility._RemotableHandle@,System.UInt32,System.Guid@,System.Int32,Accessibility.IAccPropServer,Accessibility.AnnoScope)">
      <summary>The <see cref="T:Accessibility.CAccPropServicesClass" /> and all of its exposed members are part of a managed wrapper for the Component Object Model (COM) IAccPropServices interface.</summary>
      <param name="hmenu">Identifies the HMENU-accessible element to be annotated.</param>
      <param name="idChild">Identifies the accessible element that is to be annotated. This replaces the identity string.</param>
      <param name="paProps">Specifies an array of properties that is to be handled by the specified callback object.</param>
      <param name="cProps">Specifies the number of properties in the <paramref name="paProps" /> array.</param>
      <param name="pServer">Specifies the callback object, which will be invoked when a client requests one of the overridden properties.</param>
      <param name="AnnoScope">May be ANNO_THIS, indicating that the annotation affects the indicated accessible element only; or ANNO_CONTAINER, indicating that it applies to the element and its immediate element children.</param>
    </member>
    <member name="M:Accessibility.CAccPropServicesClass.SetHmenuPropStr(Accessibility._RemotableHandle@,System.UInt32,System.Guid,System.String)">
      <summary>The <see cref="T:Accessibility.CAccPropServicesClass" /> and all of its exposed members are part of a managed wrapper for the Component Object Model (COM) IAccPropServices interface.</summary>
      <param name="hmenu">Identifies the HMENU-based accessible element to be annotated.</param>
      <param name="idChild">Specifies the child ID of the accessible element.</param>
      <param name="idProp">Specifies which property of the accessible element is to be annotated.</param>
      <param name="str">Specifies a new value for the <paramref name="idProp" /> property.</param>
    </member>
    <member name="M:Accessibility.CAccPropServicesClass.SetHwndProp(Accessibility._RemotableHandle@,System.UInt32,System.UInt32,System.Guid,System.Object)">
      <summary>The <see cref="T:Accessibility.CAccPropServicesClass" /> and all of its exposed members are part of a managed wrapper for the Component Object Model (COM) IAccPropServices interface.</summary>
      <param name="hwnd">Identifies the accessible element that is to be annotated. This replaces the identity string.</param>
      <param name="idObject">Identifies the accessible element that is to be annotated. This replaces the identity string.</param>
      <param name="idChild">Identifies the accessible element that is to be annotated. This replaces the identity string.</param>
      <param name="idProp">Specifies which property of that element is to be annotated.</param>
      <param name="var">Specifies a new value for the <paramref name="idProp" /> property.</param>
    </member>
    <member name="M:Accessibility.CAccPropServicesClass.SetHwndPropServer(Accessibility._RemotableHandle@,System.UInt32,System.UInt32,System.Guid@,System.Int32,Accessibility.IAccPropServer,Accessibility.AnnoScope)">
      <summary>The <see cref="T:Accessibility.CAccPropServicesClass" /> and all of its exposed members are part of a managed wrapper for the Component Object Model (COM) IAccPropServices interface.</summary>
      <param name="hwnd">Identifies the accessible element that is to be annotated. This replaces the identity string.</param>
      <param name="idObject">Identifies the accessible element that is to be annotated. This replaces the identity string.</param>
      <param name="idChild">Identifies the accessible element that is to be annotated. This replaces the identity string.</param>
      <param name="paProps">Specifies an array of properties that is to be handled by the specified callback object.</param>
      <param name="cProps">Specifies the number of properties in the <paramref name="paProps" /> array.</param>
      <param name="pServer">Specifies the callback object, which will be invoked when a client requests one of the overridden properties.</param>
      <param name="AnnoScope">May be ANNO_THIS, indicating that the annotation affects the indicated accessible element only; or ANNO_CONTAINER, indicating that it applies to the element and its immediate element children.</param>
    </member>
    <member name="M:Accessibility.CAccPropServicesClass.SetHwndPropStr(Accessibility._RemotableHandle@,System.UInt32,System.UInt32,System.Guid,System.String)">
      <summary>The <see cref="T:Accessibility.CAccPropServicesClass" /> and all of its exposed members are part of a managed wrapper for the Component Object Model (COM) IAccPropServices interface.</summary>
      <param name="hwnd">Identifies the accessible element that is to be annotated. This replaces the identity string.</param>
      <param name="idObject">Identifies the accessible element that is to be annotated. This replaces the identity string.</param>
      <param name="idChild">Identifies the accessible element that is to be annotated. This replaces the identity string.</param>
      <param name="idProp">Specifies which property of that element is to be annotated.</param>
      <param name="str">Specifies a new value for the <paramref name="idProp" /> property.</param>
    </member>
    <member name="M:Accessibility.CAccPropServicesClass.SetPropServer(System.Byte@,System.UInt32,System.Guid@,System.Int32,Accessibility.IAccPropServer,Accessibility.AnnoScope)">
      <summary>The <see cref="T:Accessibility.CAccPropServicesClass" /> and all of its exposed members are part of a managed wrapper for the Component Object Model (COM) IAccPropServices interface.</summary>
      <param name="pIDString">Identifies the accessible element that is to be annotated.</param>
      <param name="dwIDStringLen">Specifies the length of the string identified by the <paramref name="pIDString" /> parameter.</param>
      <param name="paProps">Specifies an array of properties to be handled by the specified callback object.</param>
      <param name="cProps">Specifies the number of properties in the <paramref name="paProps" /> array.</param>
      <param name="pServer">Specifies the callback object that will be invoked when a client requests one of the overridden properties.</param>
      <param name="AnnoScope">May be ANNO_THIS, indicating that the annotation affects the indicated accessible element only; or ANNO_CONTAINER, indicating that it applies to the element and its immediate element children.</param>
    </member>
    <member name="M:Accessibility.CAccPropServicesClass.SetPropValue(System.Byte@,System.UInt32,System.Guid,System.Object)">
      <summary>The <see cref="T:Accessibility.CAccPropServicesClass" /> and all of its exposed members are part of a managed wrapper for the Component Object Model (COM) IAccPropServices interface.</summary>
      <param name="pIDString">Identifies the accessible element that is to be annotated.</param>
      <param name="dwIDStringLen">Specifies the length of the string identified by the <paramref name="pIDString" /> parameter.</param>
      <param name="idProp">Specifies the property of the accessible element to be annotated.</param>
      <param name="var">Specifies a new value for the property.</param>
    </member>
    <member name="T:Accessibility.IAccessible">
      <summary>The <see cref="T:Accessibility.IAccessible" /> interface and all of its exposed members are part of a managed wrapper for the Component Object Model (COM) IAccessible interface.</summary>
    </member>
    <member name="P:Accessibility.IAccessible.accChild(System.Object)">
      <summary>The <see cref="T:Accessibility.IAccessible" /> interface and all of its exposed members are part of a managed wrapper for the Component Object Model (COM) IAccessible interface.</summary>
      <returns>An object. </returns>
      <param name="varChild">This parameter is intended for internal use only.</param>
    </member>
    <member name="P:Accessibility.IAccessible.accChildCount">
      <summary>The <see cref="T:Accessibility.IAccessible" /> interface and all of its exposed members are part of a managed wrapper for the Component Object Model (COM) IAccessible interface.</summary>
      <returns>An integer representing the count.</returns>
    </member>
    <member name="P:Accessibility.IAccessible.accDefaultAction(System.Object)">
      <summary>The <see cref="T:Accessibility.IAccessible" /> interface and all of its exposed members are part of a managed wrapper for the Component Object Model (COM) IAccessible interface.</summary>
      <returns>A string representing the action.</returns>
      <param name="varChild">This parameter is intended for internal use only.</param>
    </member>
    <member name="P:Accessibility.IAccessible.accDescription(System.Object)">
      <summary>The <see cref="T:Accessibility.IAccessible" /> interface and all of its exposed members are part of a managed wrapper for the Component Object Model (COM) IAccessible interface.</summary>
      <returns>A string representing the description.</returns>
      <param name="varChild">This parameter is intended for internal use only.</param>
    </member>
    <member name="M:Accessibility.IAccessible.accDoDefaultAction(System.Object)">
      <summary>The <see cref="T:Accessibility.IAccessible" /> interface and all of its exposed members are part of a managed wrapper for the Component Object Model (COM) IAccessible interface.</summary>
      <param name="varChild">This parameter is intended for internal use only.</param>
    </member>
    <member name="P:Accessibility.IAccessible.accFocus">
      <summary>The <see cref="T:Accessibility.IAccessible" /> interface and all of its exposed members are part of a managed wrapper for the Component Object Model (COM) IAccessible interface.</summary>
      <returns>If successful, returns S_OK. Otherwise, returns another standard COM error code.</returns>
    </member>
    <member name="P:Accessibility.IAccessible.accHelp(System.Object)">
      <summary>The <see cref="T:Accessibility.IAccessible" /> interface and all of its exposed members are part of a managed wrapper for the Component Object Model (COM) IAccessible interface.</summary>
      <returns>A string.</returns>
      <param name="varChild">This parameter is intended for internal use only.</param>
    </member>
    <member name="P:Accessibility.IAccessible.accHelpTopic(System.String@,System.Object)">
      <summary>The <see cref="T:Accessibility.IAccessible" /> interface and all of its exposed members are part of a managed wrapper for the Component Object Model (COM) IAccessible interface.</summary>
      <returns>An integer.</returns>
      <param name="pszHelpFile">This parameter is intended for internal use only.</param>
      <param name="varChild">This parameter is intended for internal use only.</param>
    </member>
    <member name="M:Accessibility.IAccessible.accHitTest(System.Int32,System.Int32)">
      <summary>The <see cref="T:Accessibility.IAccessible" /> interface and all of its exposed members are part of a managed wrapper for the Component Object Model (COM) IAccessible interface.</summary>
      <returns>An object.</returns>
      <param name="xLeft">This parameter is intended for internal use only.</param>
      <param name="yTop">This parameter is intended for internal use only.</param>
    </member>
    <member name="P:Accessibility.IAccessible.accKeyboardShortcut(System.Object)">
      <summary>The <see cref="T:Accessibility.IAccessible" /> interface and all of its exposed members are part of a managed wrapper for the Component Object Model (COM) IAccessible interface.</summary>
      <returns>A string.</returns>
      <param name="varChild">This parameter is intended for internal use only.</param>
    </member>
    <member name="M:Accessibility.IAccessible.accLocation(System.Int32@,System.Int32@,System.Int32@,System.Int32@,System.Object)">
      <summary>The <see cref="T:Accessibility.IAccessible" /> interface and all of its exposed members are part of a managed wrapper for the Component Object Model (COM) IAccessible interface.</summary>
      <param name="pxLeft">This parameter is intended for internal use only.</param>
      <param name="pyTop">This parameter is intended for internal use only.</param>
      <param name="pcxWidth">This parameter is intended for internal use only.</param>
      <param name="pcyHeight">This parameter is intended for internal use only.</param>
      <param name="varChild">This parameter is intended for internal use only.</param>
    </member>
    <member name="P:Accessibility.IAccessible.accName(System.Object)">
      <summary>The <see cref="T:Accessibility.IAccessible" /> interface and all of its exposed members are part of a managed wrapper for the Component Object Model (COM) IAccessible interface.</summary>
      <returns>A string.</returns>
      <param name="varChild">This parameter is intended for internal use only.</param>
    </member>
    <member name="M:Accessibility.IAccessible.accNavigate(System.Int32,System.Object)">
      <summary>The <see cref="T:Accessibility.IAccessible" /> interface and all of its exposed members are part of a managed wrapper for the Component Object Model (COM) IAccessible interface.</summary>
      <returns>If successful, returns S_OK. For other possible return values, see the documentation for IAccessible::accNavigate.</returns>
      <param name="navDir">This parameter is intended for internal use only.</param>
      <param name="varStart">This parameter is intended for internal use only.</param>
    </member>
    <member name="P:Accessibility.IAccessible.accParent">
      <summary>The <see cref="T:Accessibility.IAccessible" /> interface and all of its exposed members are part of a managed wrapper for the Component Object Model (COM) IAccessible interface.</summary>
      <returns>An object.</returns>
    </member>
    <member name="P:Accessibility.IAccessible.accRole(System.Object)">
      <summary>The <see cref="T:Accessibility.IAccessible" /> interface and all of its exposed members are part of a managed wrapper for the Component Object Model (COM) IAccessible interface.</summary>
      <returns>An object.</returns>
      <param name="varChild">This parameter is intended for internal use only.</param>
    </member>
    <member name="M:Accessibility.IAccessible.accSelect(System.Int32,System.Object)">
      <summary>The <see cref="T:Accessibility.IAccessible" /> interface and all of its exposed members are part of a managed wrapper for the Component Object Model (COM) IAccessible interface.</summary>
      <param name="flagsSelect">This parameter is intended for internal use only.</param>
      <param name="varChild">This parameter is intended for internal use only.</param>
    </member>
    <member name="P:Accessibility.IAccessible.accSelection">
      <summary>The <see cref="T:Accessibility.IAccessible" /> interface and all of its exposed members are part of a managed wrapper for the Component Object Model (COM) IAccessible interface.</summary>
      <returns>An object.</returns>
    </member>
    <member name="P:Accessibility.IAccessible.accState(System.Object)">
      <summary>The <see cref="T:Accessibility.IAccessible" /> interface and all of its exposed members are part of a managed wrapper for the Component Object Model (COM) IAccessible interface.</summary>
      <returns>An object.</returns>
      <param name="varChild">This parameter is intended for internal use only.</param>
    </member>
    <member name="P:Accessibility.IAccessible.accValue(System.Object)">
      <summary>The <see cref="T:Accessibility.IAccessible" /> interface and all of its exposed members are part of a managed wrapper for the Component Object Model (COM) IAccessible interface.</summary>
      <returns>A string.</returns>
      <param name="varChild">This parameter is intended for internal use only.</param>
    </member>
    <member name="T:Accessibility.IAccessibleHandler">
      <summary>The <see cref="T:Accessibility.IAccessibleHandler" /> and all of its exposed members are part of a managed wrapper for the Component Object Model (COM) IAccessibleHandler interface.</summary>
    </member>
    <member name="M:Accessibility.IAccessibleHandler.AccessibleObjectFromID(System.Int32,System.Int32,Accessibility.IAccessible@)">
      <summary>The <see cref="T:Accessibility.IAccessibleHandler" /> and all of its exposed members are part of a managed wrapper for the Component Object Model (COM) IAccessibleHandler interface.</summary>
      <param name="hwnd">Specifies the handle of a window for which an IAccessible interface pointer is to be retrieved.</param>
      <param name="lObjectID">Specifies the object ID.</param>
      <param name="pIAccessible">Specifies the address of a pointer variable that receives the address of the object's IAccessible interface.</param>
    </member>
    <member name="T:Accessibility.IAccIdentity">
      <summary>The <see cref="T:Accessibility.IAccIdentity" /> and all of its exposed members are part of a managed wrapper for the Component Object Model (COM) IAccIdentity interface.</summary>
    </member>
    <member name="M:Accessibility.IAccIdentity.GetIdentityString(System.UInt32,System.IntPtr,System.UInt32@)">
      <summary>The <see cref="T:Accessibility.IAccIdentity" /> and all of its exposed members are part of a managed wrapper for the Component Object Model (COM) IAccIndentity interface.</summary>
      <param name="dwIDChild">Specifies which child of the IAccessible object the caller wants to identify.</param>
      <param name="ppIDString">Address of a variable that receives a pointer to a callee-allocated identity string. The callee allocates the identity string using CoTaskMemAlloc; the caller must release the identity string by using CoTaskMemFree when finished.</param>
      <param name="pdwIDStringLen">Address of a variable that receives the length, in bytes, of the callee-allocated identity string.</param>
    </member>
    <member name="T:Accessibility.IAccPropServer">
      <summary>The <see cref="T:Accessibility.IAccPropServer" /> and all of its exposed members are part of a managed wrapper for the Component Object Model (COM) IAccPropServer interface.</summary>
    </member>
    <member name="M:Accessibility.IAccPropServer.GetPropValue(System.Byte@,System.UInt32,System.Guid,System.Object@,System.Int32@)">
      <summary>The <see cref="T:Accessibility.IAccPropServer" /> and all of its exposed members are part of a managed wrapper for the Component Object Model (COM) IAccPropServer interface.</summary>
      <param name="pIDString">Contains a string that identifies the property being requested.</param>
      <param name="dwIDStringLen">Specifies the length of the identity string specified by the <paramref name="pIDString" /> parameter.</param>
      <param name="idProp">Specifies a GUID indicating the desired property.</param>
      <param name="pvarValue">Specifies the value of the overridden property. This parameter is valid only if <paramref name="pfHasProp" /> is TRUE. The server must set this to VT_EMPTY if <paramref name="pfHasProp" /> is set to FALSE.</param>
      <param name="pfHasProp">Indicates whether the server is supplying a value for the requested property. The server should set this to TRUE if it is returning an overriding property or to FALSE if it is not returning a property (in which case it should also set <paramref name="pvarValue" /> to VT_EMPTY).</param>
    </member>
    <member name="T:Accessibility.IAccPropServices">
      <summary>The <see cref="T:Accessibility.IAccPropServices" /> interface and all of its exposed members are part of a managed wrapper for the Component Object Model (COM) IAccPropServices interface.</summary>
    </member>
    <member name="M:Accessibility.IAccPropServices.ClearHmenuProps(Accessibility._RemotableHandle@,System.UInt32,System.Guid@,System.Int32)">
      <summary>The <see cref="T:Accessibility.IAccPropServices" /> interface and all of its exposed members are part of a managed wrapper for the Component Object Model (COM) IAccPropServices interface.</summary>
      <param name="hmenu">Identifies the HMENU-based accessible element to be annotated.</param>
      <param name="idChild">Specifies the child ID of the accessible element.</param>
      <param name="paProps">Specifies an array of properties to be reset. These properties will revert to the default behavior that they displayed before they were annotated.</param>
      <param name="cProps">Specifies the number of properties in the <paramref name="paProps" /> array.</param>
    </member>
    <member name="M:Accessibility.IAccPropServices.ClearHwndProps(Accessibility._RemotableHandle@,System.UInt32,System.UInt32,System.Guid@,System.Int32)">
      <summary>The <see cref="T:Accessibility.IAccPropServices" /> interface and all of its exposed members are part of a managed wrapper for the Component Object Model (COM) IAccPropServices interface.</summary>
      <param name="hwnd">Identifies the accessible element that is to be annotated. This replaces the identity string.</param>
      <param name="idObject">Identifies the accessible element that is to be annotated. This replaces the identity string.</param>
      <param name="idChild">Identifies the accessible element that is to be annotated. This replaces the identity string.</param>
      <param name="paProps">Specifies an array of properties that is to be reset. These properties will revert to the default behavior that they displayed before they were annotated.</param>
      <param name="cProps">Specifies the number of properties in the <paramref name="paProps" /> array.</param>
    </member>
    <member name="M:Accessibility.IAccPropServices.ClearProps(System.Byte@,System.UInt32,System.Guid@,System.Int32)">
      <summary>The <see cref="T:Accessibility.IAccPropServices" /> interface and all of its exposed members are part of a managed wrapper for the Component Object Model (COM) IAccPropServices interface.</summary>
      <param name="pIDString">Identifies the accessible element that is to be un-annotated.</param>
      <param name="dwIDStringLen">Length of <paramref name="pIDString" />.</param>
      <param name="paProps">Specifies an array of properties that is to be reset. These properties will revert to the default behavior they displayed before they were annotated.</param>
      <param name="cProps">Specifies the number of properties in the <paramref name="paProps" /> array.</param>
    </member>
    <member name="M:Accessibility.IAccPropServices.ComposeHmenuIdentityString(Accessibility._RemotableHandle@,System.UInt32,System.IntPtr,System.UInt32@)">
      <summary>The <see cref="T:Accessibility.IAccPropServices" /> interface and all of its exposed members are part of a managed wrapper for the Component Object Model (COM) IAccPropServices interface.</summary>
      <param name="hmenu">Identifies the HMENU-based accessible element.</param>
      <param name="idChild">Specifies the child ID of the accessible element.</param>
      <param name="ppIDString">Pointer to a buffer that receives the identity string. The callee allocates this buffer using CoTaskMemAlloc. When finished, the caller must free the buffer by calling CoTaskMemFree.</param>
      <param name="pdwIDStringLen">Pointer to a buffer that receives the length of the identity string.</param>
    </member>
    <member name="M:Accessibility.IAccPropServices.ComposeHwndIdentityString(Accessibility._RemotableHandle@,System.UInt32,System.UInt32,System.IntPtr,System.UInt32@)">
      <summary>The <see cref="T:Accessibility.IAccPropServices" /> interface and all of its exposed members are part of a managed wrapper for the Component Object Model (COM) IAccPropServices interface.</summary>
      <param name="hwnd">Specifies the HWND of the accessible element that the caller wants to identify.</param>
      <param name="idObject">Specifies the object ID of the accessible element.</param>
      <param name="idChild">Specifies the child ID of the accessible element.</param>
      <param name="ppIDString">Pointer to a buffer that receives the identity string. The callee allocates this buffer using CoTaskMemAlloc. When finished, the caller must free the buffer by calling CoTaskMemFree.</param>
      <param name="pdwIDStringLen">Pointer to a buffer that receives the length of the identity string.</param>
    </member>
    <member name="M:Accessibility.IAccPropServices.DecomposeHmenuIdentityString(System.Byte@,System.UInt32,Accessibility._RemotableHandle@,System.UInt32@)">
      <summary>The <see cref="T:Accessibility.IAccPropServices" /> interface and all of its exposed members are part of a managed wrapper for the Component Object Model (COM) IAccPropServices interface.</summary>
      <param name="pIDString">Pointer to a buffer containing identity string of an HMENU-based accessible element.</param>
      <param name="dwIDStringLen">Specifies the length of the identity string specified by <paramref name="pIDString" />.</param>
      <param name="phmenu">Pointer to a buffer that receives the HMENU of the accessible element.</param>
      <param name="pidChild">Pointer to a buffer that receives the child ID of the accessible element.</param>
    </member>
    <member name="M:Accessibility.IAccPropServices.DecomposeHwndIdentityString(System.Byte@,System.UInt32,Accessibility._RemotableHandle@,System.UInt32@,System.UInt32@)">
      <summary>The <see cref="T:Accessibility.IAccPropServices" /> interface and all of its exposed members are part of a managed wrapper for the Component Object Model (COM) IAccPropServices interface.</summary>
      <param name="pIDString">Pointer to a buffer containing identity string of an Hwnd-based accessible element.</param>
      <param name="dwIDStringLen">Specifies the length of the identity string specified by <paramref name="pIDString" />.</param>
      <param name="phwnd">Pointer to a buffer that receives the HWND of the accessible element.</param>
      <param name="pidObject">Pointer to a buffer that receives the object ID of the accessible element.</param>
      <param name="pidChild">Pointer to a buffer that receives the child ID of the accessible element.</param>
    </member>
    <member name="M:Accessibility.IAccPropServices.SetHmenuProp(Accessibility._RemotableHandle@,System.UInt32,System.Guid,System.Object)">
      <summary>The <see cref="T:Accessibility.IAccPropServices" /> interface and all of its exposed members are part of a managed wrapper for the Component Object Model (COM) IAccPropServices interface.</summary>
      <param name="hmenu">Identifies the HMENU-based accessible element to be annotated.</param>
      <param name="idChild">Specifies the child ID of the accessible element.</param>
      <param name="idProp">Specifies which property of the accessible element is to be annotated.</param>
      <param name="var">Specifies a new value for the <paramref name="idProp" /> property.</param>
    </member>
    <member name="M:Accessibility.IAccPropServices.SetHmenuPropServer(Accessibility._RemotableHandle@,System.UInt32,System.Guid@,System.Int32,Accessibility.IAccPropServer,Accessibility.AnnoScope)">
      <summary>The <see cref="T:Accessibility.IAccPropServices" /> interface and all of its exposed members are part of a managed wrapper for the Component Object Model (COM) IAccPropServices interface.</summary>
      <param name="hmenu">Identifies the HMENU-accessible element to be annotated.</param>
      <param name="idChild">Identifies the accessible element that is to be annotated. This replaces the identity string.</param>
      <param name="paProps">Specifies an array of properties that is to be handled by the specified callback object.</param>
      <param name="cProps">Specifies the number of properties in the <paramref name="paProps" /> array.</param>
      <param name="pServer">Specifies the callback object, which will be invoked when a client requests one of the overridden properties.</param>
      <param name="AnnoScope">May be ANNO_THIS, indicating that the annotation affects the indicated accessible element only; or ANNO_CONTAINER, indicating that it applies to the element and its immediate element children.</param>
    </member>
    <member name="M:Accessibility.IAccPropServices.SetHmenuPropStr(Accessibility._RemotableHandle@,System.UInt32,System.Guid,System.String)">
      <summary>The <see cref="T:Accessibility.IAccPropServices" /> interface and all of its exposed members are part of a managed wrapper for the Component Object Model (COM) IAccPropServices interface.</summary>
      <param name="hmenu">Identifies the HMENU-based accessible element to be annotated.</param>
      <param name="idChild">Specifies the child ID of the accessible element.</param>
      <param name="idProp">Specifies which property of the accessible element is to be annotated.</param>
      <param name="str">Specifies a new value for the <paramref name="idProp" /> property.</param>
    </member>
    <member name="M:Accessibility.IAccPropServices.SetHwndProp(Accessibility._RemotableHandle@,System.UInt32,System.UInt32,System.Guid,System.Object)">
      <summary>The <see cref="T:Accessibility.IAccPropServices" /> interface and all of its exposed members are part of a managed wrapper for the Component Object Model (COM) IAccPropServices interface.</summary>
      <param name="hwnd">Identifies the accessible element that is to be annotated. This replaces the identity string.</param>
      <param name="idObject">Identifies the accessible element that is to be annotated. This replaces the identity string.</param>
      <param name="idChild">Identifies the accessible element that is to be annotated. This replaces the identity string.</param>
      <param name="idProp">Specifies which property of that element is to be annotated.</param>
      <param name="var">Specifies a new value for that property.</param>
    </member>
    <member name="M:Accessibility.IAccPropServices.SetHwndPropServer(Accessibility._RemotableHandle@,System.UInt32,System.UInt32,System.Guid@,System.Int32,Accessibility.IAccPropServer,Accessibility.AnnoScope)">
      <summary>The <see cref="T:Accessibility.IAccPropServices" /> interface and all of its exposed members are part of a managed wrapper for the Component Object Model (COM) IAccPropServices interface.</summary>
      <param name="hwnd">Identifies the accessible element that is to be annotated. This replaces the identity string.</param>
      <param name="idObject">Identifies the accessible element that is to be annotated. This replaces the identity string.</param>
      <param name="idChild">Identifies the accessible element that is to be annotated. This replaces the identity string.</param>
      <param name="paProps">Specifies an array of properties that is to be handled by the specified callback object.</param>
      <param name="cProps">Specifies the number of properties in the <paramref name="paProps" /> array.</param>
      <param name="pServer">Specifies the callback object, which will be invoked when a client requests one of the overridden properties.</param>
      <param name="AnnoScope">May be ANNO_THIS, indicating that the annotation affects the indicated accessible element only; or ANNO_CONTAINER, indicating that it applies to the element and its immediate element children.</param>
    </member>
    <member name="M:Accessibility.IAccPropServices.SetHwndPropStr(Accessibility._RemotableHandle@,System.UInt32,System.UInt32,System.Guid,System.String)">
      <summary>The <see cref="T:Accessibility.IAccPropServices" /> interface and all of its exposed members are part of a managed wrapper for the Component Object Model (COM) IAccPropServices interface.</summary>
      <param name="hwnd">Identifies the accessible element that is to be annotated. This replaces the identity string.</param>
      <param name="idObject">Identifies the accessible element that is to be annotated. This replaces the identity string.</param>
      <param name="idChild">Identifies the accessible element that is to be annotated. This replaces the identity string.</param>
      <param name="idProp">Specifies which property of that element is to be annotated.</param>
      <param name="str">Specifies a new value for that property.</param>
    </member>
    <member name="M:Accessibility.IAccPropServices.SetPropServer(System.Byte@,System.UInt32,System.Guid@,System.Int32,Accessibility.IAccPropServer,Accessibility.AnnoScope)">
      <summary>The <see cref="T:Accessibility.IAccPropServices" /> interface and all of its exposed members are part of a managed wrapper for the Component Object Model (COM) IAccPropServices interface.</summary>
      <param name="pIDString">Identifies the accessible element that is to be annotated.</param>
      <param name="dwIDStringLen">Specifies the length of the string identified by the <paramref name="pIDString" /> parameter.</param>
      <param name="paProps">Specifies an array of properties to be handled by the specified callback object.</param>
      <param name="cProps">Specifies an array of properties to be handled by the specified callback object.</param>
      <param name="pServer">Specifies the callback object that will be invoked when a client requests one of the overridden properties.</param>
      <param name="AnnoScope">May be ANNO_THIS, indicating that the annotation affects the indicated accessible element only; or ANNO_CONTAINER, indicating that it applies to the element and its immediate element children.</param>
    </member>
    <member name="M:Accessibility.IAccPropServices.SetPropValue(System.Byte@,System.UInt32,System.Guid,System.Object)">
      <summary>The <see cref="T:Accessibility.IAccPropServices" /> interface and all of its exposed members are part of a managed wrapper for the Component Object Model (COM) IAccPropServices interface.</summary>
      <param name="pIDString">Identifies the accessible element that is to be annotated.</param>
      <param name="dwIDStringLen">Specifies the length of the string identified by the <paramref name="pIDString" /> parameter.</param>
      <param name="idProp">Specifies the property of the accessible element to be annotated.</param>
      <param name="var">Specifies a new value for the property.</param>
    </member>
  </members>
</doc>
=== C:/Users/treeman/Desktop/windows nt source code\xbox\Xbox Live Source\XONLINE_MAIN\public\ext\sdk\CLR\netfx40rtm\Profile\Client\Microsoft.Build.Conversion.v4.0.xml ===
﻿<?xml version="1.0" encoding="utf-8"?>
<doc>
  <assembly>
    <name>Microsoft.Build.Conversion.v4.0</name>
  </assembly>
  <members>
    <member name="T:Microsoft.Build.Conversion.ProjectFileConverter">
      <summary>Converts a Visual Studio project file to the Visual Studio 2010 project file format. </summary>
    </member>
    <member name="M:Microsoft.Build.Conversion.ProjectFileConverter.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.Build.Conversion.ProjectFileConverter" /> class.</summary>
    </member>
    <member name="P:Microsoft.Build.Conversion.ProjectFileConverter.ConversionSkippedBecauseProjectAlreadyConverted">
      <summary>Gets a value indicating whether the last attempted conversion was skipped because the project file is already in the latest format.</summary>
      <returns>true if the last attempted conversion was skipped because the project file is already in the latest format; otherwise, false.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:Microsoft.Build.Conversion.ProjectFileConverter.ConversionWarnings">
      <summary>Gets a list of warnings generated during the conversion.</summary>
      <returns>A string array containing any warnings generated during the conversion.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:Microsoft.Build.Conversion.ProjectFileConverter.Convert">
      <summary>Converts the project specified by the <see cref="P:Microsoft.Build.Conversion.ProjectFileConverter.OldProjectFile" /> property and saves it in the file specified by the <see cref="P:Microsoft.Build.Conversion.ProjectFileConverter.NewProjectFile" /> property.</summary>
    </member>
    <member name="M:Microsoft.Build.Conversion.ProjectFileConverter.Convert(Microsoft.Build.BuildEngine.ProjectLoadSettings)">
      <summary>Converts the project specified by the <see cref="P:Microsoft.Build.Conversion.ProjectFileConverter.OldProjectFile" /> property and saves it in the file specified by the <see cref="P:Microsoft.Build.Conversion.ProjectFileConverter.NewProjectFile" /> property.</summary>
      <param name="projectLoadSettings">A <see cref="T:Microsoft.Build.BuildEngine.ProjectLoadSettings" /> flag that determine whether the project ignores non-existent .target files when loading.</param>
    </member>
    <member name="M:Microsoft.Build.Conversion.ProjectFileConverter.Convert(System.String)">
      <summary>This is the entry point method, which performs the project file format conversion. This method will overwrite "newProjectFile" if it already exists, so the caller of this method should confirm with the user that that's what he really wants to do.</summary>
      <param name="msbuildBinPath">The fully qualified path to MSBuild.exe.</param>
    </member>
    <member name="M:Microsoft.Build.Conversion.ProjectFileConverter.ConvertInMemory">
      <summary>Creates a new project in memory from the <see cref="P:Microsoft.Build.Conversion.ProjectFileConverter.OldProjectFile" />.</summary>
    </member>
    <member name="M:Microsoft.Build.Conversion.ProjectFileConverter.ConvertInMemory(Microsoft.Build.BuildEngine.Engine)">
      <summary>Creates a new project in memory from the <see cref="P:Microsoft.Build.Conversion.ProjectFileConverter.OldProjectFile" />.</summary>
      <param name="engine">The <see cref="T:Microsoft.Build.BuildEngine.Engine" /> in which to create the new project.</param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:Microsoft.Build.Conversion.ProjectFileConverter.ConvertInMemory(Microsoft.Build.BuildEngine.Engine,Microsoft.Build.BuildEngine.ProjectLoadSettings)">
      <summary>This is the entry point method, which performs the project file format conversion. This method will simply create a new MSBuild Project object in memory, instead of trying to write it to disk.</summary>
      <param name="engine">The <see cref="T:Microsoft.Build.BuildEngine.Engine" /> in which to create the new project.</param>
      <param name="projectLoadSettings">A <see cref="T:Microsoft.Build.BuildEngine.ProjectLoadSettings" /> flag that determine whether the project ignores non-existent .target files when loading.</param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:Microsoft.Build.Conversion.ProjectFileConverter.IsUserFile">
      <summary>Gets or sets a value indicating whether the project file being converted is a .user file.</summary>
      <returns>true if the project file being converted is a .user file; otherwise, false.</returns>
    </member>
    <member name="P:Microsoft.Build.Conversion.ProjectFileConverter.NewProjectFile">
      <summary>Gets or sets the new project file name.</summary>
      <returns>A string representing the new project file name.</returns>
    </member>
    <member name="P:Microsoft.Build.Conversion.ProjectFileConverter.OldProjectFile">
      <summary>Gets or sets the old project file name.</summary>
      <returns>The old project file name.</returns>
    </member>
    <member name="P:Microsoft.Build.Conversion.ProjectFileConverter.SolutionFile">
      <summary>Gets or sets the name of the solution file that contains the project being converted.</summary>
      <returns>The name of the solution file that contains the project being converted.</returns>
    </member>
  </members>
</doc>
=== C:/Users/treeman/Desktop/windows nt source code\xbox\Xbox Live Source\XONLINE_MAIN\public\ext\sdk\CLR\netfx40rtm\System.xml ===
﻿<?xml version="1.0" encoding="utf-8"?>
<doc>
  <assembly>
    <name>System</name>
  </assembly>
  <members>
    <member name="T:Microsoft.CSharp.CSharpCodeProvider">
      <summary>Provides access to instances of the C# code generator and code compiler.</summary>
    </member>
    <member name="M:Microsoft.CSharp.CSharpCodeProvider.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.CSharp.CSharpCodeProvider" /> class. </summary>
    </member>
    <member name="M:Microsoft.CSharp.CSharpCodeProvider.#ctor(System.Collections.Generic.IDictionary{System.String,System.String})">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.CSharp.CSharpCodeProvider" /> class by using the specified provider options. </summary>
      <param name="providerOptions">A <see cref="T:System.Collections.Generic.IDictionary`2" /> object that contains the provider options from the configuration file.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="providerOptions" /> is null.</exception>
    </member>
    <member name="M:Microsoft.CSharp.CSharpCodeProvider.CreateCompiler">
      <summary>Gets an instance of the C# code compiler.</summary>
      <returns>An instance of the C# <see cref="T:System.CodeDom.Compiler.ICodeCompiler" /> implementation.</returns>
    </member>
    <member name="M:Microsoft.CSharp.CSharpCodeProvider.CreateGenerator">
      <summary>Gets an instance of the C# code generator.</summary>
      <returns>An instance of the C# <see cref="T:System.CodeDom.Compiler.ICodeGenerator" /> implementation.</returns>
    </member>
    <member name="P:Microsoft.CSharp.CSharpCodeProvider.FileExtension">
      <summary>Gets the file name extension to use when creating source code files.</summary>
      <returns>The file name extension to use for generated source code files.</returns>
    </member>
    <member name="M:Microsoft.CSharp.CSharpCodeProvider.GenerateCodeFromMember(System.CodeDom.CodeTypeMember,System.IO.TextWriter,System.CodeDom.Compiler.CodeGeneratorOptions)">
      <summary>Generates code for the specified class member using the specified text writer and code generator options.</summary>
      <param name="member">A <see cref="T:System.CodeDom.CodeTypeMember" /> to generate code for.</param>
      <param name="writer">The <see cref="T:System.IO.TextWriter" /> to write to.</param>
      <param name="options">The <see cref="T:System.CodeDom.Compiler.CodeGeneratorOptions" /> to use when generating the code.</param>
    </member>
    <member name="M:Microsoft.CSharp.CSharpCodeProvider.GetConverter(System.Type)">
      <summary>Gets a <see cref="T:System.ComponentModel.TypeConverter" /> for the specified type of object.</summary>
      <returns>A <see cref="T:System.ComponentModel.TypeConverter" /> for the specified type.</returns>
      <param name="type">The type of object to retrieve a type converter for. </param>
    </member>
    <member name="T:Microsoft.VisualBasic.VBCodeProvider">
      <summary>Provides access to instances of the Visual Basic code generator and code compiler.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:Microsoft.VisualBasic.VBCodeProvider.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.VisualBasic.VBCodeProvider" /> class. </summary>
    </member>
    <member name="M:Microsoft.VisualBasic.VBCodeProvider.#ctor(System.Collections.Generic.IDictionary{System.String,System.String})">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.VisualBasic.VBCodeProvider" /> class by using the specified provider options. </summary>
      <param name="providerOptions">A <see cref="T:System.Collections.Generic.IDictionary`2" /> object that contains the provider options from the configuration file.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="providerOptions" /> is null.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.VBCodeProvider.CreateCompiler">
      <summary>Gets an instance of the Visual Basic code compiler.</summary>
      <returns>An instance of the Visual Basic <see cref="T:System.CodeDom.Compiler.ICodeCompiler" /> implementation.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:Microsoft.VisualBasic.VBCodeProvider.CreateGenerator">
      <summary>Gets an instance of the Visual Basic code generator.</summary>
      <returns>An instance of the Visual Basic <see cref="T:System.CodeDom.Compiler.ICodeGenerator" /> implementation.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:Microsoft.VisualBasic.VBCodeProvider.FileExtension">
      <summary>Gets the file name extension to use when creating source code files.</summary>
      <returns>The file name extension to use for generated source code files.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:Microsoft.VisualBasic.VBCodeProvider.GenerateCodeFromMember(System.CodeDom.CodeTypeMember,System.IO.TextWriter,System.CodeDom.Compiler.CodeGeneratorOptions)">
      <summary>Generates code for the specified class member using the specified text writer and code generator options.</summary>
      <param name="member">A <see cref="T:System.CodeDom.CodeTypeMember" /> to generate code for.</param>
      <param name="writer">The <see cref="T:System.IO.TextWriter" /> to write to.</param>
      <param name="options">The <see cref="T:System.CodeDom.Compiler.CodeGeneratorOptions" /> to use when generating the code.</param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:Microsoft.VisualBasic.VBCodeProvider.GetConverter(System.Type)">
      <summary>Gets a <see cref="T:System.ComponentModel.TypeConverter" /> for the specified type of object.</summary>
      <returns>A <see cref="T:System.ComponentModel.TypeConverter" /> for the specified type.</returns>
      <param name="type">The type of object to retrieve a type converter for. </param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:Microsoft.VisualBasic.VBCodeProvider.LanguageOptions">
      <summary>Gets a language features identifier.</summary>
      <returns>A <see cref="T:System.CodeDom.Compiler.LanguageOptions" /> that indicates special features of the language.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="T:Microsoft.Win32.IntranetZoneCredentialPolicy">
      <summary>Defines a credential policy to be used for resource requests that are made using <see cref="T:System.Net.WebRequest" /> and its derived classes.</summary>
    </member>
    <member name="M:Microsoft.Win32.IntranetZoneCredentialPolicy.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.Win32.IntranetZoneCredentialPolicy" /> class.</summary>
    </member>
    <member name="M:Microsoft.Win32.IntranetZoneCredentialPolicy.ShouldSendCredential(System.Uri,System.Net.WebRequest,System.Net.NetworkCredential,System.Net.IAuthenticationModule)">
      <summary>Returns a <see cref="T:System.Boolean" /> that indicates whether the client's credentials are sent with a request for a resource that was made using <see cref="T:System.Net.WebRequest" />.</summary>
      <returns>true if the requested resource is in the same domain as the client making the request; otherwise, false.</returns>
      <param name="challengeUri">The <see cref="T:System.Uri" /> that will receive the request.</param>
      <param name="request">The <see cref="T:System.Net.WebRequest" /> that represents the resource being requested.</param>
      <param name="credential">The <see cref="T:System.Net.NetworkCredential" /> that will be sent with the request if this method returns true.</param>
      <param name="authModule">The <see cref="T:System.Net.IAuthenticationModule" /> that will conduct the authentication, if authentication is required.</param>
    </member>
    <member name="T:Microsoft.Win32.PowerModeChangedEventArgs">
      <summary>Provides data for the <see cref="E:Microsoft.Win32.SystemEvents.PowerModeChanged" /> event.</summary>
    </member>
    <member name="M:Microsoft.Win32.PowerModeChangedEventArgs.#ctor(Microsoft.Win32.PowerModes)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.Win32.PowerModeChangedEventArgs" /> class using the specified power mode event type.</summary>
      <param name="mode">One of the <see cref="T:Microsoft.Win32.PowerModes" /> values that represents the type of power mode event. </param>
    </member>
    <member name="P:Microsoft.Win32.PowerModeChangedEventArgs.Mode">
      <summary>Gets an identifier that indicates the type of the power mode event that has occurred.</summary>
      <returns>One of the <see cref="T:Microsoft.Win32.PowerModes" /> values.</returns>
    </member>
    <member name="T:Microsoft.Win32.PowerModeChangedEventHandler">
      <summary>Represents the method that will handle the <see cref="E:Microsoft.Win32.SystemEvents.PowerModeChanged" /> event.</summary>
      <param name="sender">The source of the event. When this event is raised by the <see cref="T:Microsoft.Win32.SystemEvents" /> class, this object is always null. </param>
      <param name="e">A <see cref="T:Microsoft.Win32.PowerModeChangedEventArgs" /> that contains the event data. </param>
    </member>
    <member name="T:Microsoft.Win32.PowerModes">
      <summary>Defines identifiers for power mode events reported by the operating system.</summary>
    </member>
    <member name="F:Microsoft.Win32.PowerModes.Resume">
      <summary>The operating system is about to resume from a suspended state.</summary>
    </member>
    <member name="F:Microsoft.Win32.PowerModes.StatusChange">
      <summary>A power mode status notification event has been raised by the operating system. This might indicate a weak or charging battery, a transition between AC power and battery, or another change in the status of the system power supply.</summary>
    </member>
    <member name="F:Microsoft.Win32.PowerModes.Suspend">
      <summary>The operating system is about to be suspended.</summary>
    </member>
    <member name="T:Microsoft.Win32.SessionEndedEventArgs">
      <summary>Provides data for the <see cref="E:Microsoft.Win32.SystemEvents.SessionEnded" /> event.</summary>
    </member>
    <member name="M:Microsoft.Win32.SessionEndedEventArgs.#ctor(Microsoft.Win32.SessionEndReasons)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.Win32.SessionEndedEventArgs" /> class.</summary>
      <param name="reason">One of the <see cref="T:Microsoft.Win32.SessionEndReasons" /> values indicating how the session ended. </param>
    </member>
    <member name="P:Microsoft.Win32.SessionEndedEventArgs.Reason">
      <summary>Gets an identifier that indicates how the session ended.</summary>
      <returns>One of the <see cref="T:Microsoft.Win32.SessionEndReasons" /> values that indicates how the session ended.</returns>
    </member>
    <member name="T:Microsoft.Win32.SessionEndedEventHandler">
      <summary>Represents the method that will handle the <see cref="E:Microsoft.Win32.SystemEvents.SessionEnded" /> event.</summary>
      <param name="sender">The source of the event. When this event is raised by the <see cref="T:Microsoft.Win32.SystemEvents" /> class, this object is always null. </param>
      <param name="e">A <see cref="T:Microsoft.Win32.SessionEndedEventArgs" /> that contains the event data. </param>
    </member>
    <member name="T:Microsoft.Win32.SessionEndingEventArgs">
      <summary>Provides data for the <see cref="E:Microsoft.Win32.SystemEvents.SessionEnding" /> event.</summary>
    </member>
    <member name="M:Microsoft.Win32.SessionEndingEventArgs.#ctor(Microsoft.Win32.SessionEndReasons)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.Win32.SessionEndingEventArgs" /> class using the specified value indicating the type of session close event that is occurring.</summary>
      <param name="reason">One of the <see cref="T:Microsoft.Win32.SessionEndReasons" /> that specifies how the session ends. </param>
    </member>
    <member name="P:Microsoft.Win32.SessionEndingEventArgs.Cancel">
      <summary>Gets or sets a value indicating whether to cancel the user request to end the session.</summary>
      <returns>true to cancel the user request to end the session; otherwise, false.</returns>
    </member>
    <member name="P:Microsoft.Win32.SessionEndingEventArgs.Reason">
      <summary>Gets the reason the session is ending.</summary>
      <returns>One of the <see cref="T:Microsoft.Win32.SessionEndReasons" /> values that specifies how the session is ending.</returns>
    </member>
    <member name="T:Microsoft.Win32.SessionEndingEventHandler">
      <summary>Represents the method that will handle the <see cref="E:Microsoft.Win32.SystemEvents.SessionEnding" /> event from the operating system.</summary>
      <param name="sender">The source of the event. When this event is raised by the <see cref="T:Microsoft.Win32.SystemEvents" /> class, this object is always null. </param>
      <param name="e">A <see cref="T:Microsoft.Win32.SessionEndingEventArgs" /> that contains the event data. </param>
    </member>
    <member name="T:Microsoft.Win32.SessionEndReasons">
      <summary>Defines identifiers that represent how the current logon session is ending.</summary>
    </member>
    <member name="F:Microsoft.Win32.SessionEndReasons.Logoff">
      <summary>The user is logging off and ending the current user session. The operating system continues to run.</summary>
    </member>
    <member name="F:Microsoft.Win32.SessionEndReasons.SystemShutdown">
      <summary>The operating system is shutting down.</summary>
    </member>
    <member name="T:Microsoft.Win32.SessionSwitchEventArgs">
      <summary>Provides data for the <see cref="E:Microsoft.Win32.SystemEvents.SessionSwitch" /> event.</summary>
    </member>
    <member name="M:Microsoft.Win32.SessionSwitchEventArgs.#ctor(Microsoft.Win32.SessionSwitchReason)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.Win32.SessionSwitchEventArgs" /> class using the specified session change event type identifer.</summary>
      <param name="reason">A <see cref="T:Microsoft.Win32.SessionSwitchReason" /> that indicates the type of session change event. </param>
    </member>
    <member name="P:Microsoft.Win32.SessionSwitchEventArgs.Reason">
      <summary>Gets an identifier that indicates the type of session change event.</summary>
      <returns>A <see cref="T:Microsoft.Win32.SessionSwitchReason" /> indicating the type of the session change event.</returns>
    </member>
    <member name="T:Microsoft.Win32.SessionSwitchEventHandler">
      <summary>Represents the method that will handle the <see cref="E:Microsoft.Win32.SystemEvents.SessionSwitch" /> event.</summary>
      <param name="sender">The source of the event. </param>
      <param name="e">A <see cref="T:Microsoft.Win32.SessionSwitchEventArgs" /> indicating the type of the session change event. </param>
    </member>
    <member name="T:Microsoft.Win32.SessionSwitchReason">
      <summary>Defines identifiers used to represent the type of a session switch event.</summary>
    </member>
    <member name="F:Microsoft.Win32.SessionSwitchReason.ConsoleConnect">
      <summary>A session has been connected from the console.</summary>
    </member>
    <member name="F:Microsoft.Win32.SessionSwitchReason.ConsoleDisconnect">
      <summary>A session has been disconnected from the console.</summary>
    </member>
    <member name="F:Microsoft.Win32.SessionSwitchReason.RemoteConnect">
      <summary>A session has been connected from a remote connection.</summary>
    </member>
    <member name="F:Microsoft.Win32.SessionSwitchReason.RemoteDisconnect">
      <summary>A session has been disconnected from a remote connection.</summary>
    </member>
    <member name="F:Microsoft.Win32.SessionSwitchReason.SessionLogon">
      <summary>A user has logged on to a session.</summary>
    </member>
    <member name="F:Microsoft.Win32.SessionSwitchReason.SessionLogoff">
      <summary>A user has logged off from a session.</summary>
    </member>
    <member name="F:Microsoft.Win32.SessionSwitchReason.SessionLock">
      <summary>A session has been locked.</summary>
    </member>
    <member name="F:Microsoft.Win32.SessionSwitchReason.SessionUnlock">
      <summary>A session has been unlocked.</summary>
    </member>
    <member name="F:Microsoft.Win32.SessionSwitchReason.SessionRemoteControl">
      <summary>A session has changed its status to or from remote controlled mode.</summary>
    </member>
    <member name="T:Microsoft.Win32.SystemEvents">
      <summary>Provides access to system event notifications. This class cannot be inherited.</summary>
    </member>
    <member name="M:Microsoft.Win32.SystemEvents.CreateTimer(System.Int32)">
      <summary>Creates a new window timer associated with the system events window.</summary>
      <returns>The ID of the new timer.</returns>
      <param name="interval">Specifies the interval between timer notifications, in milliseconds.</param>
      <exception cref="T:System.ArgumentException">The interval is less than or equal to zero. </exception>
      <exception cref="T:System.InvalidOperationException">System event notifications are not supported under the current context. Server processes, for example, might not support global system event notifications.</exception>
      <exception cref="T:System.Runtime.InteropServices.ExternalException">The attempt to create a system events window thread did not succeed, or the attempt to create the timer did not succeed.</exception>
    </member>
    <member name="E:Microsoft.Win32.SystemEvents.DisplaySettingsChanged">
      <summary>Occurs when the user changes the display settings.</summary>
      <exception cref="T:System.InvalidOperationException">System event notifications are not supported under the current context. Server processes, for example, might not support global system event notifications.</exception>
      <exception cref="T:System.Runtime.InteropServices.ExternalException">The attempt to create a system events window thread did not succeed.</exception>
    </member>
    <member name="E:Microsoft.Win32.SystemEvents.DisplaySettingsChanging">
      <summary>Occurs when the display settings are changing.</summary>
      <exception cref="T:System.InvalidOperationException">System event notifications are not supported under the current context. Server processes, for example, might not support global system event notifications.</exception>
      <exception cref="T:System.Runtime.InteropServices.ExternalException">The attempt to create a system events window thread did not succeed.</exception>
    </member>
    <member name="E:Microsoft.Win32.SystemEvents.EventsThreadShutdown">
      <summary>Occurs before the thread that listens for system events is terminated.</summary>
      <exception cref="T:System.InvalidOperationException">System event notifications are not supported under the current context. Server processes, for example, might not support global system event notifications.</exception>
      <exception cref="T:System.Runtime.InteropServices.ExternalException">The attempt to create a system events window thread did not succeed.</exception>
    </member>
    <member name="E:Microsoft.Win32.SystemEvents.InstalledFontsChanged">
      <summary>Occurs when the user adds fonts to or removes fonts from the system.</summary>
      <exception cref="T:System.InvalidOperationException">System event notifications are not supported under the current context. Server processes, for example, might not support global system event notifications.</exception>
      <exception cref="T:System.Runtime.InteropServices.ExternalException">The attempt to create a system events window thread did not succeed.</exception>
    </member>
    <member name="M:Microsoft.Win32.SystemEvents.InvokeOnEventsThread(System.Delegate)">
      <summary>Invokes the specified delegate using the thread that listens for system events.</summary>
      <param name="method">A delegate to invoke using the thread that listens for system events. </param>
      <exception cref="T:System.InvalidOperationException">System event notifications are not supported under the current context. Server processes, for example, might not support global system event notifications.</exception>
      <exception cref="T:System.Runtime.InteropServices.ExternalException">The attempt to create a system events window thread did not succeed.</exception>
    </member>
    <member name="M:Microsoft.Win32.SystemEvents.KillTimer(System.IntPtr)">
      <summary>Terminates the timer specified by the given id.</summary>
      <param name="timerId">The ID of the timer to terminate. </param>
      <exception cref="T:System.InvalidOperationException">System event notifications are not supported under the current context. Server processes, for example, might not support global system event notifications.</exception>
      <exception cref="T:System.Runtime.InteropServices.ExternalException">The attempt to create a system events window thread did not succeed, or the attempt to terminate the timer did not succeed. </exception>
    </member>
    <member name="E:Microsoft.Win32.SystemEvents.LowMemory">
      <summary>Occurs when the system is running out of available RAM.</summary>
      <exception cref="T:System.InvalidOperationException">System event notifications are not supported under the current context. Server processes, for example, might not support global system event notifications.</exception>
      <exception cref="T:System.Runtime.InteropServices.ExternalException">The attempt to create a system events window thread did not succeed.</exception>
    </member>
    <member name="E:Microsoft.Win32.SystemEvents.PaletteChanged">
      <summary>Occurs when the user switches to an application that uses a different palette.</summary>
      <exception cref="T:System.InvalidOperationException">System event notifications are not supported under the current context. Server processes, for example, might not support global system event notifications.</exception>
      <exception cref="T:System.Runtime.InteropServices.ExternalException">The attempt to create a system events window thread did not succeed.</exception>
    </member>
    <member name="E:Microsoft.Win32.SystemEvents.PowerModeChanged">
      <summary>Occurs when the user suspends or resumes the system.</summary>
      <exception cref="T:System.InvalidOperationException">System event notifications are not supported under the current context. Server processes, for example, might not support global system event notifications.</exception>
      <exception cref="T:System.Runtime.InteropServices.ExternalException">The attempt to create a system events window thread did not succeed.</exception>
    </member>
    <member name="E:Microsoft.Win32.SystemEvents.SessionEnded">
      <summary>Occurs when the user is logging off or shutting down the system.</summary>
      <exception cref="T:System.InvalidOperationException">System event notifications are not supported under the current context. Server processes, for example, might not support global system event notifications.</exception>
      <exception cref="T:System.Runtime.InteropServices.ExternalException">The attempt to create a system events window thread did not succeed.</exception>
    </member>
    <member name="E:Microsoft.Win32.SystemEvents.SessionEnding">
      <summary>Occurs when the user is trying to log off or shut down the system.</summary>
      <exception cref="T:System.InvalidOperationException">System event notifications are not supported under the current context. Server processes, for example, might not support global system event notifications.</exception>
      <exception cref="T:System.Runtime.InteropServices.ExternalException">The attempt to create a system events window thread did not succeed.</exception>
    </member>
    <member name="E:Microsoft.Win32.SystemEvents.SessionSwitch">
      <summary>Occurs when the currently logged-in user has changed.</summary>
      <exception cref="T:System.InvalidOperationException">System event notifications are not supported under the current context. Server processes, for example, might not support global system event notifications.</exception>
      <exception cref="T:System.Runtime.InteropServices.ExternalException">The attempt to create a system events window thread did not succeed.</exception>
    </member>
    <member name="E:Microsoft.Win32.SystemEvents.TimeChanged">
      <summary>Occurs when the user changes the time on the system clock.</summary>
      <exception cref="T:System.InvalidOperationException">System event notifications are not supported under the current context. Server processes, for example, might not support global system event notifications.</exception>
      <exception cref="T:System.Runtime.InteropServices.ExternalException">The attempt to create a system events window thread did not succeed.</exception>
    </member>
    <member name="E:Microsoft.Win32.SystemEvents.TimerElapsed">
      <summary>Occurs when a windows timer interval has expired.</summary>
      <exception cref="T:System.InvalidOperationException">System event notifications are not supported under the current context. Server processes, for example, might not support global system event notifications.</exception>
      <exception cref="T:System.Runtime.InteropServices.ExternalException">The attempt to create a system events window thread did not succeed.</exception>
    </member>
    <member name="E:Microsoft.Win32.SystemEvents.UserPreferenceChanged">
      <summary>Occurs when a user preference has changed.</summary>
      <exception cref="T:System.InvalidOperationException">System event notifications are not supported under the current context. Server processes, for example, might not support global system event notifications.</exception>
      <exception cref="T:System.Runtime.InteropServices.ExternalException">The attempt to create a system events window thread did not succeed.</exception>
    </member>
    <member name="E:Microsoft.Win32.SystemEvents.UserPreferenceChanging">
      <summary>Occurs when a user preference is changing.</summary>
      <exception cref="T:System.InvalidOperationException">System event notifications are not supported under the current context. Server processes, for example, might not support global system event notifications.</exception>
      <exception cref="T:System.Runtime.InteropServices.ExternalException">The attempt to create a system events window thread did not succeed.</exception>
    </member>
    <member name="T:Microsoft.Win32.TimerElapsedEventArgs">
      <summary>Provides data for the <see cref="E:Microsoft.Win32.SystemEvents.TimerElapsed" /> event.</summary>
    </member>
    <member name="M:Microsoft.Win32.TimerElapsedEventArgs.#ctor(System.IntPtr)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.Win32.TimerElapsedEventArgs" /> class.</summary>
      <param name="timerId">The ID number for the timer. </param>
    </member>
    <member name="P:Microsoft.Win32.TimerElapsedEventArgs.TimerId">
      <summary>Gets the ID number for the timer.</summary>
      <returns>The ID number for the timer.</returns>
    </member>
    <member name="T:Microsoft.Win32.TimerElapsedEventHandler">
      <summary>Represents the method that will handle the <see cref="E:Microsoft.Win32.SystemEvents.TimerElapsed" /> event.</summary>
      <param name="sender">The source of the event. When this event is raised by the <see cref="T:Microsoft.Win32.SystemEvents" /> class, this object is always null. </param>
      <param name="e">A <see cref="T:Microsoft.Win32.TimerElapsedEventArgs" /> that contains the event data. </param>
    </member>
    <member name="T:Microsoft.Win32.UserPreferenceCategory">
      <summary>Defines identifiers that represent categories of user preferences.</summary>
    </member>
    <member name="F:Microsoft.Win32.UserPreferenceCategory.Accessibility">
      <summary>Indicates user preferences associated with accessibility features of the system for users with disabilities.</summary>
    </member>
    <member name="F:Microsoft.Win32.UserPreferenceCategory.Color">
      <summary>Indicates user preferences associated with system colors. This category includes such as the default color of windows or menus.</summary>
    </member>
    <member name="F:Microsoft.Win32.UserPreferenceCategory.Desktop">
      <summary>Indicates user preferences associated with the system desktop. This category includes the background image or background image layout of the desktop.</summary>
    </member>
    <member name="F:Microsoft.Win32.UserPreferenceCategory.General">
      <summary>Indicates user preferences that are not associated with any other category.</summary>
    </member>
    <member name="F:Microsoft.Win32.UserPreferenceCategory.Icon">
      <summary>Indicates user preferences for icon settings, including icon height and spacing.</summary>
    </member>
    <member name="F:Microsoft.Win32.UserPreferenceCategory.Keyboard">
      <summary>Indicates user preferences for keyboard settings, such as the key down repeat rate and delay.</summary>
    </member>
    <member name="F:Microsoft.Win32.UserPreferenceCategory.Menu">
      <summary>Indicates user preferences for menu settings, such as menu delays and text alignment.</summary>
    </member>
    <member name="F:Microsoft.Win32.UserPreferenceCategory.Mouse">
      <summary>Indicates user preferences for mouse settings, such as double-click time and mouse sensitivity.</summary>
    </member>
    <member name="F:Microsoft.Win32.UserPreferenceCategory.Policy">
      <summary>Indicates user preferences for policy settings, such as user rights and access levels.</summary>
    </member>
    <member name="F:Microsoft.Win32.UserPreferenceCategory.Power">
      <summary>Indicates the user preferences for system power settings. This category includes power feature settings, such as the idle time before the system automatically enters low power mode.</summary>
    </member>
    <member name="F:Microsoft.Win32.UserPreferenceCategory.Screensaver">
      <summary>Indicates user preferences associated with the screensaver.</summary>
    </member>
    <member name="F:Microsoft.Win32.UserPreferenceCategory.Window">
      <summary>Indicates user preferences associated with the dimensions and characteristics of windows on the system.</summary>
    </member>
    <member name="F:Microsoft.Win32.UserPreferenceCategory.Locale">
      <summary>Indicates changes in user preferences for regional settings, such as the character encoding and culture strings.</summary>
    </member>
    <member name="F:Microsoft.Win32.UserPreferenceCategory.VisualStyle">
      <summary>Indicates user preferences associated with visual styles, such as enabling or disabling visual styles and switching from one visual style to another.</summary>
    </member>
    <member name="T:Microsoft.Win32.UserPreferenceChangedEventArgs">
      <summary>Provides data for the <see cref="E:Microsoft.Win32.SystemEvents.UserPreferenceChanged" /> event.</summary>
    </member>
    <member name="M:Microsoft.Win32.UserPreferenceChangedEventArgs.#ctor(Microsoft.Win32.UserPreferenceCategory)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.Win32.UserPreferenceChangedEventArgs" /> class using the specified user preference category identifier.</summary>
      <param name="category">One of the <see cref="T:Microsoft.Win32.UserPreferenceCategory" /> values that indicates the user preference category that has changed. </param>
    </member>
    <member name="P:Microsoft.Win32.UserPreferenceChangedEventArgs.Category">
      <summary>Gets the category of user preferences that has changed.</summary>
      <returns>One of the <see cref="T:Microsoft.Win32.UserPreferenceCategory" /> values that indicates the category of user preferences that has changed.</returns>
    </member>
    <member name="T:Microsoft.Win32.UserPreferenceChangedEventHandler">
      <summary>Represents the method that will handle the <see cref="E:Microsoft.Win32.SystemEvents.UserPreferenceChanged" /> event.</summary>
      <param name="sender">The source of the event. When this event is raised by the <see cref="T:Microsoft.Win32.SystemEvents" /> class, this object is always null. </param>
      <param name="e">A <see cref="T:Microsoft.Win32.UserPreferenceChangedEventArgs" /> that contains the event data. </param>
    </member>
    <member name="T:Microsoft.Win32.UserPreferenceChangingEventArgs">
      <summary>Provides data for the <see cref="E:Microsoft.Win32.SystemEvents.UserPreferenceChanging" /> event.</summary>
    </member>
    <member name="M:Microsoft.Win32.UserPreferenceChangingEventArgs.#ctor(Microsoft.Win32.UserPreferenceCategory)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.Win32.UserPreferenceChangingEventArgs" /> class using the specified user preference category identifier.</summary>
      <param name="category">One of the <see cref="T:Microsoft.Win32.UserPreferenceCategory" /> values that indicate the user preference category that is changing. </param>
    </member>
    <member name="P:Microsoft.Win32.UserPreferenceChangingEventArgs.Category">
      <summary>Gets the category of user preferences that is changing.</summary>
      <returns>One of the <see cref="T:Microsoft.Win32.UserPreferenceCategory" /> values that indicates the category of user preferences that is changing.</returns>
    </member>
    <member name="T:Microsoft.Win32.UserPreferenceChangingEventHandler">
      <summary>Represents the method that will handle the <see cref="E:Microsoft.Win32.SystemEvents.UserPreferenceChanging" /> event.</summary>
      <param name="sender">The source of the event. When this event is raised by the <see cref="T:Microsoft.Win32.SystemEvents" /> class, this object is always null. </param>
      <param name="e">A <see cref="T:Microsoft.Win32.UserPreferenceChangedEventArgs" /> that contains the event data. </param>
    </member>
    <member name="T:System.FileStyleUriParser">
      <summary>A customizable parser based on the File scheme.</summary>
    </member>
    <member name="M:System.FileStyleUriParser.#ctor">
      <summary>Creates a customizable parser based on the File scheme.</summary>
    </member>
    <member name="T:System.FtpStyleUriParser">
      <summary>A customizable parser based on the File Transfer Protocol (FTP) scheme.</summary>
    </member>
    <member name="M:System.FtpStyleUriParser.#ctor">
      <summary>Creates a customizable parser based on the File Transfer Protocol (FTP) scheme.</summary>
    </member>
    <member name="T:System.GenericUriParser">
      <summary>A customizable parser for a hierarchical URI.</summary>
    </member>
    <member name="M:System.GenericUriParser.#ctor(System.GenericUriParserOptions)">
      <summary>Create a customizable parser for a hierarchical URI.</summary>
      <param name="options">Specify the options for this <see cref="T:System.GenericUriParser" />.</param>
    </member>
    <member name="T:System.GenericUriParserOptions">
      <summary>Specifies options for a <see cref="T:System.UriParser" />.</summary>
    </member>
    <member name="F:System.GenericUriParserOptions.Default">
      <summary>The parser:</summary>
    </member>
    <member name="F:System.GenericUriParserOptions.GenericAuthority">
      <summary>The parser allows a registry-based authority.</summary>
    </member>
    <member name="F:System.GenericUriParserOptions.AllowEmptyAuthority">
      <summary>The parser allows a URI with no authority.</summary>
    </member>
    <member name="F:System.GenericUriParserOptions.NoUserInfo">
      <summary>The scheme does not define a user information part.</summary>
    </member>
    <member name="F:System.GenericUriParserOptions.NoPort">
      <summary>The scheme does not define a port.</summary>
    </member>
    <member name="F:System.GenericUriParserOptions.NoQuery">
      <summary>The scheme does not define a query part.</summary>
    </member>
    <member name="F:System.GenericUriParserOptions.NoFragment">
      <summary>The scheme does not define a fragment part.</summary>
    </member>
    <member name="F:System.GenericUriParserOptions.DontConvertPathBackslashes">
      <summary>The parser does not convert back slashes into forward slashes.</summary>
    </member>
    <member name="F:System.GenericUriParserOptions.DontCompressPath">
      <summary>The parser does not canonicalize the URI.</summary>
    </member>
    <member name="F:System.GenericUriParserOptions.DontUnescapePathDotsAndSlashes">
      <summary>The parser does not unescape path dots, forward slashes, or back slashes.</summary>
    </member>
    <member name="F:System.GenericUriParserOptions.Idn">
      <summary>The parser supports Internationalized Domain Name (IDN) parsing (IDN) of host names. Whether IDN is used is dictated by configuration values. See the Remarks for more information.</summary>
    </member>
    <member name="F:System.GenericUriParserOptions.IriParsing">
      <summary>The parser supports the parsing rules specified in RFC 3987 for International Resource Identifiers (IRI). Whether IRI is used is dictated by configuration values. See the Remarks for more information.</summary>
    </member>
    <member name="T:System.GopherStyleUriParser">
      <summary>A customizable parser based on the Gopher scheme.</summary>
    </member>
    <member name="M:System.GopherStyleUriParser.#ctor">
      <summary>Creates a customizable parser based on the Gopher scheme.</summary>
    </member>
    <member name="T:System.HttpStyleUriParser">
      <summary>A customizable parser based on the HTTP scheme.</summary>
    </member>
    <member name="M:System.HttpStyleUriParser.#ctor">
      <summary>Create a customizable parser based on the HTTP scheme.</summary>
    </member>
    <member name="T:System.LdapStyleUriParser">
      <summary>A customizable parser based on the Lightweight Directory Access Protocol (LDAP) scheme.</summary>
    </member>
    <member name="M:System.LdapStyleUriParser.#ctor">
      <summary>Creates a customizable parser based on the Lightweight Directory Access Protocol (LDAP) scheme.</summary>
    </member>
    <member name="T:System.NetPipeStyleUriParser">
      <summary>A parser based on the NetPipe scheme for the "Indigo" system.</summary>
    </member>
    <member name="M:System.NetPipeStyleUriParser.#ctor">
      <summary>Create a parser based on the NetPipe scheme for the "Indigo" system.</summary>
    </member>
    <member name="T:System.NetTcpStyleUriParser">
      <summary>A parser based on the NetTcp scheme for the "Indigo" system.</summary>
    </member>
    <member name="M:System.NetTcpStyleUriParser.#ctor">
      <summary>Create a parser based on the NetTcp scheme for the "Indigo" system.</summary>
    </member>
    <member name="T:System.NewsStyleUriParser">
      <summary>A customizable parser based on the news scheme using the Network News Transfer Protocol (NNTP).</summary>
    </member>
    <member name="M:System.NewsStyleUriParser.#ctor">
      <summary>Create a customizable parser based on the news scheme using the Network News Transfer Protocol (NNTP).</summary>
    </member>
    <member name="T:System.Uri">
      <summary>Provides an object representation of a uniform resource identifier (URI) and easy access to the parts of the URI.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Uri.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Initializes a new instance of the <see cref="T:System.Uri" /> class from the specified instances of the <see cref="T:System.Runtime.Serialization.SerializationInfo" /> and <see cref="T:System.Runtime.Serialization.StreamingContext" /> classes.</summary>
      <param name="serializationInfo">An instance of the <see cref="T:System.Runtime.Serialization.SerializationInfo" /> class containing the information required to serialize the new <see cref="T:System.Uri" /> instance. </param>
      <param name="streamingContext">An instance of the <see cref="T:System.Runtime.Serialization.StreamingContext" /> class containing the source of the serialized stream associated with the new <see cref="T:System.Uri" /> instance. </param>
      <exception cref="T:System.ArgumentNullException">The <paramref name="serializationInfo" /> parameter contains a null URI. </exception>
      <exception cref="T:System.UriFormatException">The <paramref name="serializationInfo" /> parameter contains a URI that is empty.-or- The scheme specified is not correctly formed. See <see cref="M:System.Uri.CheckSchemeName(System.String)" />.-or- The URI contains too many slashes.-or- The password specified in the URI is not valid.-or- The host name specified in URI is not valid.-or- The file name specified in the URI is not valid. -or- The user name specified in the URI is not valid.-or- The host or authority name specified in the URI cannot be terminated by backslashes.-or- The port number specified in the URI is not valid or cannot be parsed.-or- The length of URI exceeds 65519 characters.-or- The length of the scheme specified in the URI exceeds 1023 characters.-or- There is an invalid character sequence in the URI.-or- The MS-DOS path specified in the URI must start with c:\\.</exception>
    </member>
    <member name="M:System.Uri.#ctor(System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.Uri" /> class with the specified URI.</summary>
      <param name="uriString">A URI. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="uriString" /> is null. </exception>
      <exception cref="T:System.UriFormatException">
        <paramref name="uriString" /> is empty.-or- The scheme specified in <paramref name="uriString" /> is not correctly formed. See <see cref="M:System.Uri.CheckSchemeName(System.String)" />.-or- <paramref name="uriString" /> contains too many slashes.-or- The password specified in <paramref name="uriString" /> is not valid.-or- The host name specified in <paramref name="uriString" /> is not valid.-or- The file name specified in <paramref name="uriString" /> is not valid. -or- The user name specified in <paramref name="uriString" /> is not valid.-or- The host or authority name specified in <paramref name="uriString" /> cannot be terminated by backslashes.-or- The port number specified in <paramref name="uriString" /> is not valid or cannot be parsed.-or- The length of <paramref name="uriString" /> exceeds 65519 characters.-or- The length of the scheme specified in <paramref name="uriString" /> exceeds 1023 characters.-or- There is an invalid character sequence in <paramref name="uriString" />.-or- The MS-DOS path specified in <paramref name="uriString" /> must start with c:\\.</exception>
    </member>
    <member name="M:System.Uri.#ctor(System.String,System.Boolean)">
      <summary>Initializes a new instance of the <see cref="T:System.Uri" /> class with the specified URI, with explicit control of character escaping.</summary>
      <param name="uriString">The URI. </param>
      <param name="dontEscape">true if <paramref name="uriString" /> is completely escaped; otherwise, false. See Remarks. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="uriString" /> is null. </exception>
      <exception cref="T:System.UriFormatException">
        <paramref name="uriString" /> is empty or contains only spaces.-or- The scheme specified in <paramref name="uriString" /> is not valid.-or- <paramref name="uriString" /> contains too many slashes.-or- The password specified in <paramref name="uriString" /> is not valid.-or- The host name specified in <paramref name="uriString" /> is not valid.-or- The file name specified in <paramref name="uriString" /> is not valid. -or- The user name specified in <paramref name="uriString" /> is not valid.-or- The host or authority name specified in <paramref name="uriString" /> cannot be terminated by backslashes.-or- The port number specified in <paramref name="uriString" /> is not valid or cannot be parsed.-or- The length of <paramref name="uriString" /> exceeds 65519 characters.-or- The length of the scheme specified in <paramref name="uriString" /> exceeds 1023 characters.-or- There is an invalid character sequence in <paramref name="uriString" />.-or- The MS-DOS path specified in <paramref name="uriString" /> must start with c:\\.</exception>
    </member>
    <member name="M:System.Uri.#ctor(System.String,System.UriKind)">
      <summary>Initializes a new instance of the <see cref="T:System.Uri" /> class with the specified URI. This constructor allows you to specify if the URI string is a relative URI, absolute URI, or is indeterminate.</summary>
      <param name="uriString">A string that identifies the resource to be represented by the <see cref="T:System.Uri" /> instance.</param>
      <param name="uriKind">Specifies whether the URI string is a relative URI, absolute URI, or is indeterminate.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="uriKind" /> is invalid. </exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="uriString" /> is null. </exception>
      <exception cref="T:System.UriFormatException">
        <paramref name="uriString" /> contains a relative URI and <paramref name="uriKind" /> is <see cref="F:System.UriKind.Absolute" />.or<paramref name="uriString" /> contains an absolute URI and <paramref name="uriKind" /> is <see cref="F:System.UriKind.Relative" />.or<paramref name="uriString" /> is empty.-or- The scheme specified in <paramref name="uriString" /> is not correctly formed. See <see cref="M:System.Uri.CheckSchemeName(System.String)" />.-or- <paramref name="uriString" /> contains too many slashes.-or- The password specified in <paramref name="uriString" /> is not valid.-or- The host name specified in <paramref name="uriString" /> is not valid.-or- The file name specified in <paramref name="uriString" /> is not valid. -or- The user name specified in <paramref name="uriString" /> is not valid.-or- The host or authority name specified in <paramref name="uriString" /> cannot be terminated by backslashes.-or- The port number specified in <paramref name="uriString" /> is not valid or cannot be parsed.-or- The length of <paramref name="uriString" /> exceeds 65519 characters.-or- The length of the scheme specified in <paramref name="uriString" /> exceeds 1023 characters.-or- There is an invalid character sequence in <paramref name="uriString" />.-or- The MS-DOS path specified in <paramref name="uriString" /> must start with c:\\.</exception>
    </member>
    <member name="M:System.Uri.#ctor(System.Uri,System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.Uri" /> class based on the specified base URI and relative URI string.</summary>
      <param name="baseUri">The base URI. </param>
      <param name="relativeUri">The relative URI to add to the base URI. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="uriString" /> is null. </exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="baseUri" /> is not an absolute <see cref="T:System.Uri" /> instance. </exception>
      <exception cref="T:System.UriFormatException">The URI formed by combining <paramref name="baseUri" /> and <paramref name="relativeUri" /> is empty or contains only spaces.-or- The scheme specified in the URI formed by combining <paramref name="baseUri" /> and <paramref name="relativeUri" /> is not valid.-or- The URI formed by combining <paramref name="baseUri" /> and <paramref name="relativeUri" /> contains too many slashes.-or- The password specified in the URI formed by combining <paramref name="baseUri" /> and <paramref name="relativeUri" /> is not valid.-or- The host name specified in the URI formed by combining <paramref name="baseUri" /> and <paramref name="relativeUri" /> is not valid.-or- The file name specified in the URI formed by combining <paramref name="baseUri" /> and <paramref name="relativeUri" /> is not valid. -or- The user name specified in the URI formed by combining <paramref name="baseUri" /> and <paramref name="relativeUri" /> is not valid.-or- The host or authority name specified in the URI formed by combining <paramref name="baseUri" /> and <paramref name="relativeUri" /> cannot be terminated by backslashes.-or- The port number specified in the URI formed by combining <paramref name="baseUri" /> and <paramref name="relativeUri" /> is not valid or cannot be parsed.-or- The length of the URI formed by combining <paramref name="baseUri" /> and <paramref name="relativeUri" /> exceeds 65519 characters.-or- The length of the scheme specified in the URI formed by combining <paramref name="baseUri" /> and <paramref name="relativeUri" /> exceeds 1023 characters.-or- There is an invalid character sequence in the URI formed by combining <paramref name="baseUri" /> and <paramref name="relativeUri" />.-or- The MS-DOS path specified in <paramref name="uriString" /> must start with c:\\.</exception>
    </member>
    <member name="M:System.Uri.#ctor(System.Uri,System.String,System.Boolean)">
      <summary>Initializes a new instance of the <see cref="T:System.Uri" /> class based on the specified base and relative URIs, with explicit control of character escaping.</summary>
      <param name="baseUri">The base URI. </param>
      <param name="relativeUri">The relative URI to add to the base URI. </param>
      <param name="dontEscape">true if <paramref name="uriString" /> is completely escaped; otherwise, false. See Remarks. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="uriString" /> is null. </exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="baseUri" /> is not an absolute <see cref="T:System.Uri" /> instance. </exception>
      <exception cref="T:System.UriFormatException">The URI formed by combining <paramref name="baseUri" /> and <paramref name="relativeUri" /> is empty or contains only spaces.-or- The scheme specified in the URI formed by combining <paramref name="baseUri" /> and <paramref name="relativeUri" /> is not valid.-or- The URI formed by combining <paramref name="baseUri" /> and <paramref name="relativeUri" /> contains too many slashes.-or- The password specified in the URI formed by combining <paramref name="baseUri" /> and <paramref name="relativeUri" /> is not valid.-or- The host name specified in the URI formed by combining <paramref name="baseUri" /> and <paramref name="relativeUri" /> is not valid.-or- The file name specified in the URI formed by combining <paramref name="baseUri" /> and <paramref name="relativeUri" /> is not valid. -or- The user name specified in the URI formed by combining <paramref name="baseUri" /> and <paramref name="relativeUri" /> is not valid.-or- The host or authority name specified in the URI formed by combining <paramref name="baseUri" /> and <paramref name="relativeUri" /> cannot be terminated by backslashes.-or- The port number specified in the URI formed by combining <paramref name="baseUri" /> and <paramref name="relativeUri" /> is not valid or cannot be parsed.-or- The length of the URI formed by combining <paramref name="baseUri" /> and <paramref name="relativeUri" /> exceeds 65519 characters.-or- The length of the scheme specified in the URI formed by combining <paramref name="baseUri" /> and <paramref name="relativeUri" /> exceeds 1023 characters.-or- There is an invalid character sequence in the URI formed by combining <paramref name="baseUri" /> and <paramref name="relativeUri" />.-or- The MS-DOS path specified in <paramref name="uriString" /> must start with c:\\.</exception>
    </member>
    <member name="M:System.Uri.#ctor(System.Uri,System.Uri)">
      <summary>Initializes a new instance of the <see cref="T:System.Uri" /> class based on the combination of a specified base <see cref="T:System.Uri" /> instance and a relative <see cref="T:System.Uri" /> instance.</summary>
      <param name="baseUri">An absolute <see cref="T:System.Uri" /> that is the base for the new <see cref="T:System.Uri" /> instance. </param>
      <param name="relativeUri">A relative <see cref="T:System.Uri" /> instance that is combined with <paramref name="baseUri" />. </param>
      <exception cref="T:System.ArgumentException">
        <paramref name="baseUri" /> is null.-or- <paramref name="baseUri" /> is not an absolute <see cref="T:System.Uri" /> instance. </exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="baseUri" /> is not an absolute <see cref="T:System.Uri" /> instance. </exception>
      <exception cref="T:System.UriFormatException">The URI formed by combining <paramref name="baseUri" /> and <paramref name="relativeUri" /> is empty or contains only spaces.-or- The scheme specified in the URI formed by combining <paramref name="baseUri" /> and <paramref name="relativeUri" /> is not valid.-or- The URI formed by combining <paramref name="baseUri" /> and <paramref name="relativeUri" /> contains too many slashes.-or- The password specified in the URI formed by combining <paramref name="baseUri" /> and <paramref name="relativeUri" /> is not valid.-or- The host name specified in the URI formed by combining <paramref name="baseUri" /> and <paramref name="relativeUri" /> is not valid.-or- The file name specified in the URI formed by combining <paramref name="baseUri" /> and <paramref name="relativeUri" /> is not valid. -or- The user name specified in the URI formed by combining <paramref name="baseUri" /> and <paramref name="relativeUri" /> is not valid.-or- The host or authority name specified in the URI formed by combining <paramref name="baseUri" /> and <paramref name="relativeUri" /> cannot be terminated by backslashes.-or- The port number specified in the URI formed by combining <paramref name="baseUri" /> and <paramref name="relativeUri" /> is not valid or cannot be parsed.-or- The length of the URI formed by combining <paramref name="baseUri" /> and <paramref name="relativeUri" /> exceeds 65519 characters.-or- The length of the scheme specified in the URI formed by combining <paramref name="baseUri" /> and <paramref name="relativeUri" /> exceeds 1023 characters.-or- There is an invalid character sequence in the URI formed by combining <paramref name="baseUri" /> and <paramref name="relativeUri" />.-or- The MS-DOS path specified in <paramref name="uriString" /> must start with c:\\.</exception>
    </member>
    <member name="P:System.Uri.AbsolutePath">
      <summary>Gets the absolute path of the URI.</summary>
      <returns>A <see cref="T:System.String" /> containing the absolute path to the resource.</returns>
      <exception cref="T:System.InvalidOperationException">This instance represents a relative URI, and this property is valid only for absolute URIs. </exception>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
      </PermissionSet>
    </member>
    <member name="P:System.Uri.AbsoluteUri">
      <summary>Gets the absolute URI.</summary>
      <returns>A <see cref="T:System.String" /> containing the entire URI.</returns>
      <exception cref="T:System.InvalidOperationException">This instance represents a relative URI, and this property is valid only for absolute URIs. </exception>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
      </PermissionSet>
    </member>
    <member name="P:System.Uri.Authority">
      <summary>Gets the Domain Name System (DNS) host name or IP address and the port number for a server.</summary>
      <returns>A <see cref="T:System.String" /> containing the authority component of the URI represented by this instance.</returns>
      <exception cref="T:System.InvalidOperationException">This instance represents a relative URI, and this property is valid only for absolute URIs. </exception>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
      </PermissionSet>
    </member>
    <member name="M:System.Uri.Canonicalize">
      <summary>Converts the internally stored URI to canonical form.</summary>
      <exception cref="T:System.InvalidOperationException">This instance represents a relative URI, and this method is valid only for absolute URIs. </exception>
      <exception cref="T:System.UriFormatException">The URI is incorrectly formed.</exception>
    </member>
    <member name="M:System.Uri.CheckHostName(System.String)">
      <summary>Determines whether the specified host name is a valid DNS name.</summary>
      <returns>A <see cref="T:System.UriHostNameType" /> that indicates the type of the host name. If the type of the host name cannot be determined or if the host name is null or a zero-length string, this method returns <see cref="F:System.UriHostNameType.Unknown" />.</returns>
      <param name="name">The host name to validate. This can be an IPv4 or IPv6 address or an Internet host name. </param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Uri.CheckSchemeName(System.String)">
      <summary>Determines whether the specified scheme name is valid.</summary>
      <returns>A <see cref="T:System.Boolean" /> value that is true if the scheme name is valid; otherwise, false.</returns>
      <param name="schemeName">The scheme name to validate. </param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Uri.CheckSecurity">
      <summary>Calling this method has no effect.</summary>
    </member>
    <member name="M:System.Uri.Compare(System.Uri,System.Uri,System.UriComponents,System.UriFormat,System.StringComparison)">
      <summary>Compares the specified parts of two URIs using the specified comparison rules.</summary>
      <returns>An <see cref="T:System.Int32" /> value that indicates the lexical relationship between the compared <see cref="T:System.Uri" /> components.ValueMeaningLess than zero<paramref name="uri1" /> is less than <paramref name="uri2" />.Zero<paramref name="uri1" /> equals <paramref name="uri2" />.Greater than zero<paramref name="uri1" /> is greater than <paramref name="uri2" />.</returns>
      <param name="uri1">The first <see cref="T:System.Uri" />.</param>
      <param name="uri2">The second <see cref="T:System.Uri" />.</param>
      <param name="partsToCompare">A bitwise combination of the <see cref="T:System.UriComponents" /> values that specifies the parts of <paramref name="uri1" /> and <paramref name="uri2" /> to compare.</param>
      <param name="compareFormat">One of the <see cref="T:System.UriFormat" /> values that specifies the character escaping used when the URI components are compared.</param>
      <param name="comparisonType">One of the <see cref="T:System.StringComparison" /> values.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="comparisonType" /> is not a valid <see cref="T:System.StringComparison" /> value.</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="P:System.Uri.DnsSafeHost">
      <summary>Gets an unescaped host name that is safe to use for DNS resolution.</summary>
      <returns>A <see cref="T:System.String" /> that contains the unescaped host part of the URI that is suitable for DNS resolution; or the original unescaped host string, if it is already suitable for resolution.</returns>
      <exception cref="T:System.InvalidOperationException">This instance represents a relative URI, and this property is valid only for absolute URIs. </exception>
      <filterpriority>2</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
      </PermissionSet>
    </member>
    <member name="M:System.Uri.Equals(System.Object)">
      <summary>Compares two <see cref="T:System.Uri" /> instances for equality.</summary>
      <returns>A <see cref="T:System.Boolean" /> value that is true if the two instances represent the same URI; otherwise, false.</returns>
      <param name="comparand">The <see cref="T:System.Uri" /> instance or a URI identifier to compare with the current instance. </param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Uri.Escape">
      <summary>Converts any unsafe or reserved characters in the path component to their hexadecimal character representations.</summary>
      <exception cref="T:System.UriFormatException">The URI passed from the constructor is invalid. This exception can occur if a URI has too many characters or the URI is relative.</exception>
    </member>
    <member name="M:System.Uri.EscapeDataString(System.String)">
      <summary>Converts a string to its escaped representation.</summary>
      <returns>A <see cref="T:System.String" /> that contains the escaped representation of <paramref name="stringToEscape" />.</returns>
      <param name="stringToEscape">The string to escape.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="stringToEscape" /> is null. </exception>
      <exception cref="T:System.UriFormatException">The length of <paramref name="stringToEscape" /> exceeds 32766 characters.</exception>
    </member>
    <member name="M:System.Uri.EscapeString(System.String)">
      <summary>Converts a string to its escaped representation.</summary>
      <returns>The escaped representation of the string.</returns>
      <param name="str">The string to transform to its escaped representation. </param>
    </member>
    <member name="M:System.Uri.EscapeUriString(System.String)">
      <summary>Converts a URI string to its escaped representation.</summary>
      <returns>A <see cref="T:System.String" /> that contains the escaped representation of <paramref name="stringToEscape" />.</returns>
      <param name="stringToEscape">The string to escape.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="stringToEscape" /> is null. </exception>
      <exception cref="T:System.UriFormatException">The length of <paramref name="stringToEscape" /> exceeds 32766 characters.</exception>
    </member>
    <member name="P:System.Uri.Fragment">
      <summary>Gets the escaped URI fragment.</summary>
      <returns>A <see cref="T:System.String" /> that contains any URI fragment information.</returns>
      <exception cref="T:System.InvalidOperationException">This instance represents a relative URI, and this property is valid only for absolute URIs. </exception>
      <filterpriority>2</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
      </PermissionSet>
    </member>
    <member name="M:System.Uri.FromHex(System.Char)">
      <summary>Gets the decimal value of a hexadecimal digit.</summary>
      <returns>An <see cref="T:System.Int32" /> value that contains a number from 0 to 15 that corresponds to the specified hexadecimal digit.</returns>
      <param name="digit">The hexadecimal digit (0-9, a-f, A-F) to convert. </param>
      <exception cref="T:System.ArgumentException">
        <paramref name="digit" /> is not a valid hexadecimal digit (0-9, a-f, A-F). </exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Uri.GetComponents(System.UriComponents,System.UriFormat)">
      <summary>Gets the specified components of the current instance using the specified escaping for special characters.</summary>
      <returns>A <see cref="T:System.String" /> that contains the components.</returns>
      <param name="components">A bitwise combination of the <see cref="T:System.UriComponents" /> values that specifies which parts of the current instance to return to the caller.</param>
      <param name="format">One of the <see cref="T:System.UriFormat" /> values that controls how special characters are escaped. </param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="uriComponents" /> is not a combination of valid <see cref="T:System.UriComponents" /> values.</exception>
      <exception cref="T:System.InvalidOperationException">The current <see cref="T:System.Uri" /> is not an absolute URI. Relative URIs cannot be used with this method.</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Uri.GetHashCode">
      <summary>Gets the hash code for the URI.</summary>
      <returns>An <see cref="T:System.Int32" /> containing the hash value generated for this URI.</returns>
      <filterpriority>2</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
      </PermissionSet>
    </member>
    <member name="M:System.Uri.GetLeftPart(System.UriPartial)">
      <summary>Gets the specified portion of a <see cref="T:System.Uri" /> instance.</summary>
      <returns>A <see cref="T:System.String" /> that contains the specified portion of the <see cref="T:System.Uri" /> instance.</returns>
      <param name="part">One of the <see cref="T:System.UriPartial" /> values that specifies the end of the URI portion to return. </param>
      <exception cref="T:System.InvalidOperationException">The current <see cref="T:System.Uri" /> instance is not an absolute instance. </exception>
      <exception cref="T:System.ArgumentException">The specified <paramref name="part" /> is not valid. </exception>
      <filterpriority>2</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
      </PermissionSet>
    </member>
    <member name="M:System.Uri.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Returns the data needed to serialize the current instance.</summary>
      <param name="serializationInfo">A <see cref="T:System.Runtime.Serialization.SerializationInfo" /> object containing the information required to serialize the <see cref="T:System.Uri" />.</param>
      <param name="streamingContext">A <see cref="T:System.Runtime.Serialization.StreamingContext" /> object containing the source and destination of the serialized stream associated with the <see cref="T:System.Uri" />.</param>
    </member>
    <member name="M:System.Uri.HexEscape(System.Char)">
      <summary>Converts a specified character into its hexadecimal equivalent.</summary>
      <returns>The hexadecimal representation of the specified character.</returns>
      <param name="character">The character to convert to hexadecimal representation. </param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="character" /> is greater than 255. </exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Uri.HexUnescape(System.String,System.Int32@)">
      <summary>Converts a specified hexadecimal representation of a character to the character.</summary>
      <returns>The character represented by the hexadecimal encoding at position <paramref name="index" />. If the character at <paramref name="index" /> is not hexadecimal encoded, the character at <paramref name="index" /> is returned. The value of <paramref name="index" /> is incremented to point to the character following the one returned.</returns>
      <param name="pattern">The hexadecimal representation of a character. </param>
      <param name="index">The location in <paramref name="pattern" /> where the hexadecimal representation of a character begins. </param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> is less than 0 or greater than or equal to the number of characters in <paramref name="pattern" />. </exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="P:System.Uri.Host">
      <summary>Gets the host component of this instance.</summary>
      <returns>A <see cref="T:System.String" /> that contains the host name. This is usually the DNS host name or IP address of the server.</returns>
      <exception cref="T:System.InvalidOperationException">This instance represents a relative URI, and this property is valid only for absolute URIs. </exception>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
      </PermissionSet>
    </member>
    <member name="P:System.Uri.HostNameType">
      <summary>Gets the type of the host name specified in the URI.</summary>
      <returns>A member of the <see cref="T:System.UriHostNameType" /> enumeration.</returns>
      <exception cref="T:System.InvalidOperationException">This instance represents a relative URI, and this property is valid only for absolute URIs. </exception>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
      </PermissionSet>
    </member>
    <member name="P:System.Uri.IsAbsoluteUri">
      <summary>Gets whether the <see cref="T:System.Uri" /> instance is absolute.</summary>
      <returns>A <see cref="T:System.Boolean" /> value that is true if the <see cref="T:System.Uri" /> instance is absolute; otherwise, false.</returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Uri.IsBadFileSystemCharacter(System.Char)">
      <summary>Gets whether a character is invalid in a file system name.</summary>
      <returns>A <see cref="T:System.Boolean" /> value that is true if the specified character is invalid; otherwise false.</returns>
      <param name="character">The <see cref="T:System.Char" /> to test. </param>
    </member>
    <member name="M:System.Uri.IsBaseOf(System.Uri)">
      <summary>Determines whether the current <see cref="T:System.Uri" /> instance is a base of the specified <see cref="T:System.Uri" /> instance.</summary>
      <returns>true if the current <see cref="T:System.Uri" /> instance is a base of <paramref name="uri" />; otherwise, false.</returns>
      <param name="uri">The specified <see cref="T:System.Uri" /> instance to test. </param>
      <filterpriority>2</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="P:System.Uri.IsDefaultPort">
      <summary>Gets whether the port value of the URI is the default for this scheme.</summary>
      <returns>A <see cref="T:System.Boolean" /> value that is true if the value in the <see cref="P:System.Uri.Port" /> property is the default port for this scheme; otherwise, false.</returns>
      <exception cref="T:System.InvalidOperationException">This instance represents a relative URI, and this property is valid only for absolute URIs. </exception>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
      </PermissionSet>
    </member>
    <member name="M:System.Uri.IsExcludedCharacter(System.Char)">
      <summary>Gets whether the specified character should be escaped.</summary>
      <returns>A <see cref="T:System.Boolean" /> value that is true if the specified character should be escaped; otherwise, false.</returns>
      <param name="character">The <see cref="T:System.Char" /> to test. </param>
    </member>
    <member name="P:System.Uri.IsFile">
      <summary>Gets a value indicating whether the specified <see cref="T:System.Uri" /> is a file URI.</summary>
      <returns>A <see cref="T:System.Boolean" /> value that is true if the <see cref="T:System.Uri" /> is a file URI; otherwise, false.</returns>
      <exception cref="T:System.InvalidOperationException">This instance represents a relative URI, and this property is valid only for absolute URIs. </exception>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
      </PermissionSet>
    </member>
    <member name="M:System.Uri.IsHexDigit(System.Char)">
      <summary>Determines whether a specified character is a valid hexadecimal digit.</summary>
      <returns>A <see cref="T:System.Boolean" /> value that is true if the character is a valid hexadecimal digit; otherwise false.</returns>
      <param name="character">The character to validate. </param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Uri.IsHexEncoding(System.String,System.Int32)">
      <summary>Determines whether a character in a string is hexadecimal encoded.</summary>
      <returns>A <see cref="T:System.Boolean" /> value that is true if <paramref name="pattern" /> is hexadecimal encoded at the specified location; otherwise, false.</returns>
      <param name="pattern">The string to check. </param>
      <param name="index">The location in <paramref name="pattern" /> to check for hexadecimal encoding. </param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="P:System.Uri.IsLoopback">
      <summary>Gets whether the specified <see cref="T:System.Uri" /> references the local host.</summary>
      <returns>A <see cref="T:System.Boolean" /> value that is true if this <see cref="T:System.Uri" /> references the local host; otherwise, false.</returns>
      <exception cref="T:System.InvalidOperationException">This instance represents a relative URI, and this property is valid only for absolute URIs. </exception>
      <filterpriority>2</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
      </PermissionSet>
    </member>
    <member name="M:System.Uri.IsReservedCharacter(System.Char)">
      <summary>Gets whether the specified character is a reserved character.</summary>
      <returns>A <see cref="T:System.Boolean" /> value that is true if the specified character is a reserved character otherwise, false.</returns>
      <param name="character">The <see cref="T:System.Char" /> to test. </param>
    </member>
    <member name="P:System.Uri.IsUnc">
      <summary>Gets whether the specified <see cref="T:System.Uri" /> is a universal naming convention (UNC) path.</summary>
      <returns>A <see cref="T:System.Boolean" /> value that is true if the <see cref="T:System.Uri" /> is a UNC path; otherwise, false.</returns>
      <exception cref="T:System.InvalidOperationException">This instance represents a relative URI, and this property is valid only for absolute URIs. </exception>
      <filterpriority>2</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
      </PermissionSet>
    </member>
    <member name="M:System.Uri.IsWellFormedOriginalString">
      <summary>Indicates whether the string used to construct this <see cref="T:System.Uri" /> was well-formed and is not required to be further escaped.</summary>
      <returns>A <see cref="T:System.Boolean" /> value that is true if the string was well-formed; else false.</returns>
    </member>
    <member name="M:System.Uri.IsWellFormedUriString(System.String,System.UriKind)">
      <summary>Indicates whether the string is well-formed by attempting to construct a URI with the string and ensures that the string does not require further escaping.</summary>
      <returns>A <see cref="T:System.Boolean" /> value that is true if the string was well-formed; else false.</returns>
      <param name="uriString">A URI.</param>
      <param name="uriKind">The type of the URI in <paramref name="uriString" />.</param>
    </member>
    <member name="P:System.Uri.LocalPath">
      <summary>Gets a local operating-system representation of a file name.</summary>
      <returns>A <see cref="T:System.String" /> that contains the local operating-system representation of a file name.</returns>
      <exception cref="T:System.InvalidOperationException">This instance represents a relative URI, and this property is valid only for absolute URIs. </exception>
      <filterpriority>2</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
      </PermissionSet>
    </member>
    <member name="M:System.Uri.MakeRelative(System.Uri)">
      <summary>Determines the difference between two <see cref="T:System.Uri" /> instances.</summary>
      <returns>If the hostname and scheme of this URI instance and <paramref name="toUri" /> are the same, then this method returns a <see cref="T:System.String" /> that represents a relative URI that, when appended to the current URI instance, yields the <paramref name="toUri" /> parameter.If the hostname or scheme is different, then this method returns a <see cref="T:System.String" /> that represents the <paramref name="toUri" /> parameter.</returns>
      <param name="toUri">The URI to compare to the current URI. </param>
      <exception cref="T:System.InvalidOperationException">This instance represents a relative URI, and this method is valid only for absolute URIs. </exception>
      <filterpriority>2</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
      </PermissionSet>
    </member>
    <member name="M:System.Uri.MakeRelativeUri(System.Uri)">
      <summary>Determines the difference between two <see cref="T:System.Uri" /> instances.</summary>
      <returns>If the hostname and scheme of this URI instance and <paramref name="toUri" /> are the same, then this method returns a relative <see cref="T:System.Uri" /> that, when appended to the current URI instance, yields <paramref name="toUri" />.If the hostname or scheme is different, then this method returns a <see cref="T:System.Uri" />  that represents the <paramref name="toUri" /> parameter.</returns>
      <param name="uri">The URI to compare to the current URI.</param>
      <exception cref="T:System.InvalidOperationException">This instance represents a relative URI, and this property is valid only for absolute URIs. </exception>
    </member>
    <member name="M:System.Uri.op_Equality(System.Uri,System.Uri)">
      <summary>Determines whether two <see cref="T:System.Uri" /> instances have the same value.</summary>
      <returns>A <see cref="T:System.Boolean" /> value that is true if the <see cref="T:System.Uri" /> instances are equivalent; otherwise, false.</returns>
      <param name="uri1">A <see cref="T:System.Uri" /> instance to compare with <paramref name="uri2" />. </param>
      <param name="uri2">A <see cref="T:System.Uri" /> instance to compare with <paramref name="uri1" />. </param>
      <filterpriority>3</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:System.Uri.op_Inequality(System.Uri,System.Uri)">
      <summary>Determines whether two <see cref="T:System.Uri" /> instances do not have the same value.</summary>
      <returns>A <see cref="T:System.Boolean" /> value that is true if the two <see cref="T:System.Uri" /> instances are not equal; otherwise, false. If either parameter is null, this method returns true.</returns>
      <param name="uri1">A <see cref="T:System.Uri" /> instance to compare with <paramref name="uri2" />. </param>
      <param name="uri2">A <see cref="T:System.Uri" /> instance to compare with <paramref name="uri1" />. </param>
      <filterpriority>3</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
      </PermissionSet>
    </member>
    <member name="P:System.Uri.OriginalString">
      <summary>Gets the original URI string that was passed to the <see cref="T:System.Uri" /> constructor.</summary>
      <returns>A <see cref="T:System.String" /> containing the exact URI specified when this instance was constructed; otherwise, <see cref="F:System.String.Empty" />.</returns>
      <exception cref="T:System.InvalidOperationException">This instance represents a relative URI, and this property is valid only for absolute URIs. </exception>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
      </PermissionSet>
    </member>
    <member name="M:System.Uri.Parse">
      <summary>Parses the URI of the current instance to ensure it contains all the parts required for a valid URI.</summary>
      <exception cref="T:System.UriFormatException">The Uri passed from the constructor is invalid. </exception>
    </member>
    <member name="P:System.Uri.PathAndQuery">
      <summary>Gets the <see cref="P:System.Uri.AbsolutePath" /> and <see cref="P:System.Uri.Query" /> properties separated by a question mark (?).</summary>
      <returns>A <see cref="T:System.String" /> that contains the <see cref="P:System.Uri.AbsolutePath" /> and <see cref="P:System.Uri.Query" /> properties separated by a question mark (?).</returns>
      <exception cref="T:System.InvalidOperationException">This instance represents a relative URI, and this property is valid only for absolute URIs. </exception>
      <filterpriority>2</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
      </PermissionSet>
    </member>
    <member name="P:System.Uri.Port">
      <summary>Gets the port number of this URI.</summary>
      <returns>An <see cref="T:System.Int32" /> value that contains the port number for this URI.</returns>
      <exception cref="T:System.InvalidOperationException">This instance represents a relative URI, and this property is valid only for absolute URIs. </exception>
      <filterpriority>2</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
      </PermissionSet>
    </member>
    <member name="P:System.Uri.Query">
      <summary>Gets any query information included in the specified URI.</summary>
      <returns>A <see cref="T:System.String" /> that contains any query information included in the specified URI.</returns>
      <exception cref="T:System.InvalidOperationException">This instance represents a relative URI, and this property is valid only for absolute URIs. </exception>
      <filterpriority>2</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
      </PermissionSet>
    </member>
    <member name="P:System.Uri.Scheme">
      <summary>Gets the scheme name for this URI.</summary>
      <returns>A <see cref="T:System.String" /> that contains the scheme for this URI, converted to lowercase.</returns>
      <exception cref="T:System.InvalidOperationException">This instance represents a relative URI, and this property is valid only for absolute URIs. </exception>
      <filterpriority>2</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
      </PermissionSet>
    </member>
    <member name="F:System.Uri.SchemeDelimiter">
      <summary>Specifies the characters that separate the communication protocol scheme from the address portion of the URI. This field is read-only.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="P:System.Uri.Segments">
      <summary>Gets an array containing the path segments that make up the specified URI.</summary>
      <returns>A <see cref="T:System.String" /> array that contains the path segments that make up the specified URI.</returns>
      <exception cref="T:System.InvalidOperationException">This instance represents a relative URI, and this property is valid only for absolute URIs. </exception>
      <filterpriority>2</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
      </PermissionSet>
    </member>
    <member name="M:System.Uri.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Returns the data needed to serialize the current instance.</summary>
      <param name="serializationInfo">A <see cref="T:System.Runtime.Serialization.SerializationInfo" /> object containing the information required to serialize the <see cref="T:System.Uri" />.</param>
      <param name="streamingContext">A <see cref="T:System.Runtime.Serialization.StreamingContext" /> object containing the source and destination of the serialized stream associated with the <see cref="T:System.Uri" />.</param>
    </member>
    <member name="M:System.Uri.ToString">
      <summary>Gets a canonical string representation for the specified <see cref="T:System.Uri" /> instance.</summary>
      <returns>A <see cref="T:System.String" /> instance that contains the unescaped canonical representation of the <see cref="T:System.Uri" /> instance. All characters are unescaped except #, ?, and %.</returns>
      <filterpriority>2</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
      </PermissionSet>
    </member>
    <member name="M:System.Uri.TryCreate(System.String,System.UriKind,System.Uri@)">
      <summary>Creates a new <see cref="T:System.Uri" /> using the specified <see cref="T:System.String" /> instance and a <see cref="T:System.UriKind" />.</summary>
      <returns>A <see cref="T:System.Boolean" /> value that is true if the <see cref="T:System.Uri" /> was successfully created; otherwise, false.</returns>
      <param name="uriString">The <see cref="T:System.String" /> representing the <see cref="T:System.Uri" />.</param>
      <param name="uriKind">The type of the Uri.</param>
      <param name="result">When this method returns, contains the constructed <see cref="T:System.Uri" />.</param>
    </member>
    <member name="M:System.Uri.TryCreate(System.Uri,System.String,System.Uri@)">
      <summary>Creates a new <see cref="T:System.Uri" /> using the specified base and relative <see cref="T:System.String" /> instances.</summary>
      <returns>A <see cref="T:System.Boolean" /> value that is true if the <see cref="T:System.Uri" /> was successfully created; otherwise, false.</returns>
      <param name="baseUri">The base <see cref="T:System.Uri" />.</param>
      <param name="relativeUri">The relative <see cref="T:System.Uri" />, represented as a <see cref="T:System.String" />, to add to the base <see cref="T:System.Uri" />.</param>
      <param name="result">When this method returns, contains a <see cref="T:System.Uri" /> constructed from <paramref name="baseUri" /> and <paramref name="relativeUri" />. This parameter is passed uninitialized.</param>
    </member>
    <member name="M:System.Uri.TryCreate(System.Uri,System.Uri,System.Uri@)">
      <summary>Creates a new <see cref="T:System.Uri" /> using the specified base and relative <see cref="T:System.Uri" /> instances.</summary>
      <returns>A <see cref="T:System.Boolean" /> value that is true if the <see cref="T:System.Uri" /> was successfully created; otherwise, false.</returns>
      <param name="baseUri">The base <see cref="T:System.Uri" />. </param>
      <param name="relativeUri">The relative <see cref="T:System.Uri" /> to add to the base <see cref="T:System.Uri" />. </param>
      <param name="result">When this method returns, contains a <see cref="T:System.Uri" /> constructed from <paramref name="baseUri" /> and <paramref name="relativeUri" />. This parameter is passed uninitialized.</param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Uri.Unescape(System.String)">
      <summary>Converts the specified string by replacing any escape sequences with their unescaped representation.</summary>
      <returns>A <see cref="T:System.String" /> that contains the unescaped value of the <paramref name="path" /> parameter.</returns>
      <param name="path">The <see cref="T:System.String" /> to convert. </param>
    </member>
    <member name="M:System.Uri.UnescapeDataString(System.String)">
      <summary>Converts a string to its unescaped representation.</summary>
      <returns>A <see cref="T:System.String" /> that contains the unescaped representation of <paramref name="stringToUnescape" />. </returns>
      <param name="stringToUnescape">The string to unescape.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="stringToUnescape" /> is null. </exception>
    </member>
    <member name="F:System.Uri.UriSchemeFile">
      <summary>Specifies that the URI is a pointer to a file. This field is read-only.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="F:System.Uri.UriSchemeFtp">
      <summary>Specifies that the URI is accessed through the File Transfer Protocol (FTP). This field is read-only.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="F:System.Uri.UriSchemeGopher">
      <summary>Specifies that the URI is accessed through the Gopher protocol. This field is read-only.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="F:System.Uri.UriSchemeHttp">
      <summary>Specifies that the URI is accessed through the Hypertext Transfer Protocol (HTTP). This field is read-only.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="F:System.Uri.UriSchemeHttps">
      <summary>Specifies that the URI is accessed through the Secure Hypertext Transfer Protocol (HTTPS). This field is read-only.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="F:System.Uri.UriSchemeMailto">
      <summary>Specifies that the URI is an e-mail address and is accessed through the Simple Mail Transport Protocol (SMTP). This field is read-only.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="F:System.Uri.UriSchemeNetPipe">
      <summary>Specifies that the URI is accessed through the NetPipe scheme of the "Indigo" system. This field is read-only.</summary>
    </member>
    <member name="F:System.Uri.UriSchemeNetTcp">
      <summary>Specifies that the URI is accessed through the NetTcp scheme of the "Indigo" system. This field is read-only.</summary>
    </member>
    <member name="F:System.Uri.UriSchemeNews">
      <summary>Specifies that the URI is an Internet news group and is accessed through the Network News Transport Protocol (NNTP). This field is read-only.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="F:System.Uri.UriSchemeNntp">
      <summary>Specifies that the URI is an Internet news group and is accessed through the Network News Transport Protocol (NNTP). This field is read-only.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="P:System.Uri.UserEscaped">
      <summary>Indicates that the URI string was completely escaped before the <see cref="T:System.Uri" /> instance was created.</summary>
      <returns>A <see cref="T:System.Boolean" /> value that is true if the <paramref name="dontEscape" /> parameter was set to true when the <see cref="T:System.Uri" /> instance was created; otherwise, false.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.Uri.UserInfo">
      <summary>Gets the user name, password, or other user-specific information associated with the specified URI.</summary>
      <returns>A <see cref="T:System.String" /> that contains the user information associated with the URI. The returned value does not include the '@' character reserved for delimiting the user information part of the URI.</returns>
      <exception cref="T:System.InvalidOperationException">This instance represents a relative URI, and this property is valid only for absolute URIs. </exception>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
      </PermissionSet>
    </member>
    <member name="T:System.UriBuilder">
      <summary>Provides a custom constructor for uniform resource identifiers (URIs) and modifies URIs for the <see cref="T:System.Uri" /> class.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.UriBuilder.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.UriBuilder" /> class.</summary>
    </member>
    <member name="M:System.UriBuilder.#ctor(System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.UriBuilder" /> class with the specified URI.</summary>
      <param name="uri">A URI string. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="uri" /> is null. </exception>
      <exception cref="T:System.UriFormatException">
        <paramref name="uri" /> is a zero length string or contains only spaces.-or- The parsing routine detected a scheme in an invalid form.-or- The parser detected more than two consecutive slashes in a URI that does not use the "file" scheme.-or- <paramref name="uri" /> is not a valid URI. </exception>
    </member>
    <member name="M:System.UriBuilder.#ctor(System.String,System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.UriBuilder" /> class with the specified scheme and host.</summary>
      <param name="schemeName">An Internet access protocol. </param>
      <param name="hostName">A DNS-style domain name or IP address. </param>
    </member>
    <member name="M:System.UriBuilder.#ctor(System.String,System.String,System.Int32)">
      <summary>Initializes a new instance of the <see cref="T:System.UriBuilder" /> class with the specified scheme, host, and port.</summary>
      <param name="scheme">An Internet access protocol. </param>
      <param name="host">A DNS-style domain name or IP address. </param>
      <param name="portNumber">An IP port number for the service. </param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="portNumber" /> is less than 0 or greater than 65,535. </exception>
    </member>
    <member name="M:System.UriBuilder.#ctor(System.String,System.String,System.Int32,System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.UriBuilder" /> class with the specified scheme, host, port number, and path.</summary>
      <param name="scheme">An Internet access protocol. </param>
      <param name="host">A DNS-style domain name or IP address. </param>
      <param name="port">An IP port number for the service. </param>
      <param name="pathValue">The path to the Internet resource. </param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="port" /> is less than 0 or greater than 65,535. </exception>
    </member>
    <member name="M:System.UriBuilder.#ctor(System.String,System.String,System.Int32,System.String,System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.UriBuilder" /> class with the specified scheme, host, port number, path and query string or fragment identifier.</summary>
      <param name="scheme">An Internet access protocol. </param>
      <param name="host">A DNS-style domain name or IP address. </param>
      <param name="port">An IP port number for the service. </param>
      <param name="path">The path to the Internet resource. </param>
      <param name="extraValue">A query string or fragment identifier. </param>
      <exception cref="T:System.ArgumentException">
        <paramref name="extraValue" /> is neither null nor <see cref="F:System.String.Empty" />, nor does a valid fragment identifier begin with a number sign (#), nor a valid query string begin with a question mark (?). </exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="port" /> is less than 0 or greater than 65,535. </exception>
    </member>
    <member name="M:System.UriBuilder.#ctor(System.Uri)">
      <summary>Initializes a new instance of the <see cref="T:System.UriBuilder" /> class with the specified <see cref="T:System.Uri" /> instance.</summary>
      <param name="uri">An instance of the <see cref="T:System.Uri" /> class. </param>
      <exception cref="T:System.NullReferenceException">
        <paramref name="uri" /> is null. </exception>
    </member>
    <member name="M:System.UriBuilder.Equals(System.Object)">
      <summary>Compares an existing <see cref="T:System.Uri" /> instance with the contents of the <see cref="T:System.UriBuilder" /> for equality.</summary>
      <returns>true if <paramref name="rparam" /> represents the same <see cref="T:System.Uri" /> as the <see cref="T:System.Uri" /> constructed by this <see cref="T:System.UriBuilder" /> instance; otherwise, false.</returns>
      <param name="rparam">The object to compare with the current instance. </param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.UriBuilder.Fragment">
      <summary>Gets or sets the fragment portion of the URI.</summary>
      <returns>The fragment portion of the URI. The fragment identifier ("#") is added to the beginning of the fragment.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.UriBuilder.GetHashCode">
      <summary>Returns the hash code for the URI.</summary>
      <returns>The hash code generated for the URI.</returns>
      <filterpriority>2</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="P:System.UriBuilder.Host">
      <summary>Gets or sets the Domain Name System (DNS) host name or IP address of a server.</summary>
      <returns>The DNS host name or IP address of the server.</returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="P:System.UriBuilder.Password">
      <summary>Gets or sets the password associated with the user that accesses the URI.</summary>
      <returns>The password of the user that accesses the URI.</returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="P:System.UriBuilder.Path">
      <summary>Gets or sets the path to the resource referenced by the URI.</summary>
      <returns>The path to the resource referenced by the URI.</returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="P:System.UriBuilder.Port">
      <summary>Gets or sets the port number of the URI.</summary>
      <returns>The port number of the URI.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">The port cannot be set to a value less than 0 or greater than 65,535. </exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="P:System.UriBuilder.Query">
      <summary>Gets or sets any query information included in the URI.</summary>
      <returns>The query information included in the URI.</returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="P:System.UriBuilder.Scheme">
      <summary>Gets or sets the scheme name of the URI.</summary>
      <returns>The scheme of the URI.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">The scheme cannot be set to an invalid scheme name. </exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.UriBuilder.ToString">
      <summary>Returns the display string for the specified <see cref="T:System.UriBuilder" /> instance.</summary>
      <returns>The string that contains the unescaped display string of the <see cref="T:System.UriBuilder" />.</returns>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
      </PermissionSet>
    </member>
    <member name="P:System.UriBuilder.Uri">
      <summary>Gets the <see cref="T:System.Uri" /> instance constructed by the specified <see cref="T:System.UriBuilder" /> instance.</summary>
      <returns>A <see cref="T:System.Uri" /> that contains the URI constructed by the <see cref="T:System.UriBuilder" />.</returns>
      <exception cref="T:System.UriFormatException">The URI constructed by the <see cref="T:System.UriBuilder" /> properties is invalid. </exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="P:System.UriBuilder.UserName">
      <summary>The user name associated with the user that accesses the URI.</summary>
      <returns>The user name of the user that accesses the URI.</returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="T:System.UriComponents">
      <summary>Specifies the parts of a <see cref="T:System.Uri" />.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="F:System.UriComponents.Scheme">
      <summary>The <see cref="P:System.Uri.Scheme" /> data.</summary>
    </member>
    <member name="F:System.UriComponents.UserInfo">
      <summary>The <see cref="P:System.Uri.UserInfo" /> data.</summary>
    </member>
    <member name="F:System.UriComponents.Host">
      <summary>The <see cref="P:System.Uri.Host" /> data.</summary>
    </member>
    <member name="F:System.UriComponents.Port">
      <summary>The <see cref="P:System.Uri.Port" /> data.</summary>
    </member>
    <member name="F:System.UriComponents.Path">
      <summary>The <see cref="P:System.Uri.LocalPath" /> data.</summary>
    </member>
    <member name="F:System.UriComponents.Query">
      <summary>The <see cref="P:System.Uri.Query" /> data.</summary>
    </member>
    <member name="F:System.UriComponents.Fragment">
      <summary>The <see cref="P:System.Uri.Fragment" /> data.</summary>
    </member>
    <member name="F:System.UriComponents.StrongPort">
      <summary>The <see cref="P:System.Uri.Port" /> data. If no port data is in the <see cref="T:System.Uri" /> and a default port has been assigned to the <see cref="P:System.Uri.Scheme" />, the default port is returned. If there is no default port, -1 is returned.</summary>
    </member>
    <member name="F:System.UriComponents.KeepDelimiter">
      <summary>Specifies that the delimiter should be included.</summary>
    </member>
    <member name="F:System.UriComponents.SerializationInfoString">
      <summary>The complete <see cref="T:System.Uri" /> context that is needed for Uri Serializers. The context includes the IPv6 scope.</summary>
    </member>
    <member name="F:System.UriComponents.AbsoluteUri">
      <summary>The <see cref="P:System.Uri.Scheme" />, <see cref="P:System.Uri.UserInfo" />, <see cref="P:System.Uri.Host" />, <see cref="P:System.Uri.Port" />, <see cref="P:System.Uri.LocalPath" />, <see cref="P:System.Uri.Query" />, and <see cref="P:System.Uri.Fragment" /> data.</summary>
    </member>
    <member name="F:System.UriComponents.HostAndPort">
      <summary>The <see cref="P:System.Uri.Host" /> and <see cref="P:System.Uri.Port" /> data. If no port data is in the Uri and a default port has been assigned to the <see cref="P:System.Uri.Scheme" />, the default port is returned. If there is no default port, -1 is returned.</summary>
    </member>
    <member name="F:System.UriComponents.StrongAuthority">
      <summary>The <see cref="P:System.Uri.UserInfo" />, <see cref="P:System.Uri.Host" />, and <see cref="P:System.Uri.Port" /> data. If no port data is in the <see cref="T:System.Uri" /> and a default port has been assigned to the <see cref="P:System.Uri.Scheme" />, the default port is returned. If there is no default port, -1 is returned.</summary>
    </member>
    <member name="F:System.UriComponents.SchemeAndServer">
      <summary>The <see cref="P:System.Uri.Scheme" />, <see cref="P:System.Uri.Host" />, and <see cref="P:System.Uri.Port" /> data.</summary>
    </member>
    <member name="F:System.UriComponents.HttpRequestUrl">
      <summary>The <see cref="P:System.Uri.Scheme" />, <see cref="P:System.Uri.Host" />, <see cref="P:System.Uri.Port" />, <see cref="P:System.Uri.LocalPath" />, and <see cref="P:System.Uri.Query" /> data.</summary>
    </member>
    <member name="F:System.UriComponents.PathAndQuery">
      <summary>The <see cref="P:System.Uri.LocalPath" /> and <see cref="P:System.Uri.Query" /> data. Also see <see cref="P:System.Uri.PathAndQuery" />. </summary>
    </member>
    <member name="T:System.UriFormat">
      <summary>Controls how URI information is escaped.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="F:System.UriFormat.UriEscaped">
      <summary>Escaping is performed according to the rules in RFC 2396.</summary>
    </member>
    <member name="F:System.UriFormat.Unescaped">
      <summary>No escaping is performed.</summary>
    </member>
    <member name="F:System.UriFormat.SafeUnescaped">
      <summary>Characters that have a reserved meaning in the requested URI components remain escaped. All others are not escaped. See Remarks.</summary>
    </member>
    <member name="T:System.UriFormatException">
      <summary>The exception that is thrown when an invalid Uniform Resource Identifier (URI) is detected.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.UriFormatException.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.UriFormatException" /> class.</summary>
    </member>
    <member name="M:System.UriFormatException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Initializes a new instance of the <see cref="T:System.UriFormatException" /> class from the specified <see cref="T:System.Runtime.Serialization.SerializationInfo" /> and <see cref="T:System.Runtime.Serialization.StreamingContext" /> instances.</summary>
      <param name="serializationInfo">A <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that contains the information that is required to serialize the new <see cref="T:System.UriFormatException" />. </param>
      <param name="streamingContext">A <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains the source of the serialized stream that is associated with the new <see cref="T:System.UriFormatException" />. </param>
    </member>
    <member name="M:System.UriFormatException.#ctor(System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.UriFormatException" /> class with the specified message.</summary>
      <param name="textString">The error message string. </param>
    </member>
    <member name="M:System.UriFormatException.#ctor(System.String,System.Exception)">
      <summary>Initializes a new instance of the <see cref="T:System.UriFormatException" /> class with a specified error message and a reference to the inner exception that is the cause of this exception.</summary>
      <param name="textString">The message that describes the exception. The caller of this constructor is required to ensure that this string has been localized for the current system culture. </param>
      <param name="e">The exception that is the cause of the current exception. If the <paramref name="innerException" /> parameter is not null, the current exception is raised in a catch block that handles the inner exception. </param>
    </member>
    <member name="M:System.UriFormatException.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Populates a <see cref="T:System.Runtime.Serialization.SerializationInfo" /> instance with the data that is needed to serialize the <see cref="T:System.UriFormatException" />.</summary>
      <param name="serializationInfo">A <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that will hold the serialized data for the <see cref="T:System.UriFormatException" />.</param>
      <param name="streamingContext">A <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains the destination of the serialized stream that is associated with the new <see cref="T:System.UriFormatException" />. </param>
    </member>
    <member name="T:System.UriHostNameType">
      <summary>Defines host name types for the <see cref="M:System.Uri.CheckHostName(System.String)" /> method.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="F:System.UriHostNameType.Unknown">
      <summary>The type of the host name is not supplied.</summary>
    </member>
    <member name="F:System.UriHostNameType.Basic">
      <summary>The host is set, but the type cannot be determined.</summary>
    </member>
    <member name="F:System.UriHostNameType.Dns">
      <summary>The host name is a domain name system (DNS) style host name.</summary>
    </member>
    <member name="F:System.UriHostNameType.IPv4">
      <summary>The host name is an Internet Protocol (IP) version 4 host address.</summary>
    </member>
    <member name="F:System.UriHostNameType.IPv6">
      <summary>The host name is an Internet Protocol (IP) version 6 host address.</summary>
    </member>
    <member name="T:System.UriIdnScope">
      <summary>Provides the possible values for the configuration setting of the <see cref="T:System.Configuration.IdnElement" /> in the <see cref="N:System.Configuration" /> namespace.</summary>
    </member>
    <member name="F:System.UriIdnScope.None">
      <summary>This value will not convert any Unicode domain names to use Punycode. This is the default value which is consistent with the .NET Framework 2.0 behavior.</summary>
    </member>
    <member name="F:System.UriIdnScope.AllExceptIntranet">
      <summary>This value will convert all external Unicode domain names to use the Punycode equivalents (IDN names). In this case to handle international names on the local Intranet, the DNS servers that are used for the Intranet should support Unicode names.</summary>
    </member>
    <member name="F:System.UriIdnScope.All">
      <summary>This value will convert any Unicode domain names to their Punycode equivalents (IDN names).</summary>
    </member>
    <member name="T:System.UriKind">
      <summary>Defines the kinds of <see cref="T:System.Uri" />s for the <see cref="M:System.Uri.IsWellFormedUriString(System.String,System.UriKind)" /> and several <see cref="Overload:System.Uri.#ctor" /> methods.</summary>
    </member>
    <member name="F:System.UriKind.RelativeOrAbsolute">
      <summary>The kind of the Uri is indeterminate.</summary>
    </member>
    <member name="F:System.UriKind.Absolute">
      <summary>The Uri is an absolute Uri.</summary>
    </member>
    <member name="F:System.UriKind.Relative">
      <summary>The Uri is a relative Uri.</summary>
    </member>
    <member name="T:System.UriParser">
      <summary>Parses a new URI scheme. This is an abstract class.</summary>
    </member>
    <member name="M:System.UriParser.#ctor">
      <summary>Constructs a default URI parser.</summary>
    </member>
    <member name="M:System.UriParser.GetComponents(System.Uri,System.UriComponents,System.UriFormat)">
      <summary>Gets the components from a URI.</summary>
      <returns>A string that contains the components.</returns>
      <param name="uri">The URI to parse.</param>
      <param name="components">The <see cref="T:System.UriComponents" /> to retrieve from <paramref name="uri" />.</param>
      <param name="format">One of the <see cref="T:System.UriFormat" /> values that controls how special characters are escaped.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="uriFormat" /> is invalid.- or -<paramref name="uriComponents" /> is not a combination of valid <see cref="T:System.UriComponents" /> values. </exception>
      <exception cref="T:System.InvalidOperationException">
        <paramref name="uri" /> requires user-driven parsing- or -<paramref name="uri" /> is not an absolute URI. Relative URIs cannot be used with this method.</exception>
    </member>
    <member name="M:System.UriParser.InitializeAndValidate(System.Uri,System.UriFormatException@)">
      <summary>Initialize the state of the parser and validate the URI.</summary>
      <param name="uri">The T:System.Uri to validate.</param>
      <param name="parsingError">Validation errors, if any.</param>
    </member>
    <member name="M:System.UriParser.IsBaseOf(System.Uri,System.Uri)">
      <summary>Determines whether <paramref name="baseUri" /> is a base URI for <paramref name="relativeUri" />.</summary>
      <returns>true if <paramref name="baseUri" /> is a base URI for <paramref name="relativeUri" />; otherwise, false.</returns>
      <param name="baseUri">The base URI.</param>
      <param name="relativeUri">The URI to test.</param>
    </member>
    <member name="M:System.UriParser.IsKnownScheme(System.String)">
      <summary>Indicates whether the parser for a scheme is registered.</summary>
      <returns>true if <paramref name="schemeName" /> has been registered; otherwise, false.</returns>
      <param name="schemeName">The scheme name to check.</param>
      <exception cref="T:System.ArgumentNullException">The <paramref name="schemeName" /> parameter is null.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">The <paramref name="schemeName" /> parameter is not valid. </exception>
    </member>
    <member name="M:System.UriParser.IsWellFormedOriginalString(System.Uri)">
      <summary>Indicates whether a URI is well-formed.</summary>
      <returns>true if <paramref name="uri" /> is well-formed; otherwise, false.</returns>
      <param name="uri">The URI to check.</param>
    </member>
    <member name="M:System.UriParser.OnNewUri">
      <summary>Invoked by a <see cref="T:System.Uri" /> constructor to get a <see cref="T:System.UriParser" /> instance</summary>
      <returns>A <see cref="T:System.UriParser" /> for the constructed <see cref="T:System.Uri" />.</returns>
    </member>
    <member name="M:System.UriParser.OnRegister(System.String,System.Int32)">
      <summary>Invoked by the Framework when a <see cref="T:System.UriParser" /> method is registered.</summary>
      <param name="schemeName">The scheme that is associated with this <see cref="T:System.UriParser" />.</param>
      <param name="defaultPort">The port number of the scheme.</param>
    </member>
    <member name="M:System.UriParser.Register(System.UriParser,System.String,System.Int32)">
      <summary>Associates a scheme and port number with a <see cref="T:System.UriParser" />.</summary>
      <param name="uriParser">The URI parser to register.</param>
      <param name="schemeName">The name of the scheme that is associated with this parser.</param>
      <param name="defaultPort">The default port number for the specified scheme.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="uriParser" /> parameter is null- or -<paramref name="schemeName" /> parameter is null.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="schemeName" /> parameter is not valid- or -<paramref name="defaultPort" /> parameter is not valid. The <paramref name="defaultPort" /> parameter is less than -1 or greater than 65,534.</exception>
    </member>
    <member name="M:System.UriParser.Resolve(System.Uri,System.Uri,System.UriFormatException@)">
      <summary>Called by <see cref="T:System.Uri" /> constructors and <see cref="Overload:System.Uri.TryCreate" /> to resolve a relative URI.</summary>
      <returns>The string of the resolved relative <see cref="T:System.Uri" />.</returns>
      <param name="baseUri">A base URI.</param>
      <param name="relativeUri">A relative URI.</param>
      <param name="parsingError">Errors during the resolve process, if any.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="baseUri" /> parameter is not an absolute <see cref="T:System.Uri" />- or -<paramref name="baseUri" /> parameter requires user-driven parsing.</exception>
    </member>
    <member name="T:System.UriPartial">
      <summary>Defines the parts of a URI for the <see cref="M:System.Uri.GetLeftPart(System.UriPartial)" /> method.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="F:System.UriPartial.Scheme">
      <summary>The scheme segment of the URI.</summary>
    </member>
    <member name="F:System.UriPartial.Authority">
      <summary>The scheme and authority segments of the URI.</summary>
    </member>
    <member name="F:System.UriPartial.Path">
      <summary>The scheme, authority, and path segments of the URI.</summary>
    </member>
    <member name="F:System.UriPartial.Query">
      <summary>The scheme, authority, path, and query segments of the URI.</summary>
    </member>
    <member name="T:System.UriTypeConverter">
      <summary>Converts a <see cref="T:System.String" /> type to a <see cref="T:System.Uri" /> type, and vice versa.</summary>
    </member>
    <member name="M:System.UriTypeConverter.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.UriTypeConverter" /> class.</summary>
    </member>
    <member name="M:System.UriTypeConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)">
      <summary>Returns whether this converter can convert an object of the given type to the type of this converter.</summary>
      <returns>true if <paramref name="sourceType" /> is a <see cref="T:System.String" /> type or a <see cref="T:System.Uri" /> type can be assigned from <paramref name="sourceType" />; otherwise, false.</returns>
      <param name="context">An <see cref="T:System.ComponentModel.ITypeDescriptorContext" />  that provides a format context.</param>
      <param name="sourceType">A <see cref="T:System.Type" /> that represents the type that you want to convert from.</param>
      <exception cref="T:System.ArgumentNullException">The <paramref name="sourceType" /> parameter is null.</exception>
    </member>
    <member name="M:System.UriTypeConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)">
      <summary>Returns whether this converter can convert the object to the specified type, using the specified context.</summary>
      <returns>true if <paramref name="destinationType" /> is of type <see cref="T:System.ComponentModel.Design.Serialization.InstanceDescriptor" />, <see cref="T:System.String" />, or <see cref="T:System.Uri" />; otherwise, false.</returns>
      <param name="context">An <see cref="T:System.ComponentModel.ITypeDescriptorContext" />  that provides a format context.</param>
      <param name="destinationType">A <see cref="T:System.Type" /> that represents the type that you want to convert to.</param>
    </member>
    <member name="M:System.UriTypeConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
      <summary>Converts the given object to the type of this converter, using the specified context and culture information.</summary>
      <returns>An <see cref="T:System.Object" /> that represents the converted value.</returns>
      <param name="context">An <see cref="T:System.ComponentModel.ITypeDescriptorContext" />  that provides a format context.</param>
      <param name="culture">The <see cref="T:System.Globalization.CultureInfo" /> to use as the current culture.</param>
      <param name="value">The <see cref="T:System.Object" /> to convert.</param>
      <exception cref="T:System.NotSupportedException">The conversion cannot be performed.</exception>
    </member>
    <member name="M:System.UriTypeConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
      <summary>Converts a given value object to the specified type, using the specified context and culture information.</summary>
      <returns>An <see cref="T:System.Object" /> that represents the converted value.</returns>
      <param name="context">An <see cref="T:System.ComponentModel.ITypeDescriptorContext" />  that provides a format context.</param>
      <param name="culture">A <see cref="T:System.Globalization.CultureInfo" />. If null is passed, the current culture is assumed.</param>
      <param name="value">The <see cref="T:System.Object" /> to convert.</param>
      <param name="destinationType">The <see cref="T:System.Type" /> to convert the <paramref name="value" /> parameter to.</param>
      <exception cref="T:System.ArgumentNullException">The <paramref name="destinationType" /> parameter is null.</exception>
      <exception cref="T:System.NotSupportedException">The conversion cannot be performed.</exception>
    </member>
    <member name="M:System.UriTypeConverter.IsValid(System.ComponentModel.ITypeDescriptorContext,System.Object)">
      <summary>Returns whether the given value object is a <see cref="T:System.Uri" /> or a <see cref="T:System.Uri" /> can be created from it.</summary>
      <returns>true if <paramref name="value" /> is a <see cref="T:System.Uri" /> or a <see cref="T:System.String" /> from which a <see cref="T:System.Uri" /> can be created; otherwise, false.</returns>
      <param name="context">An <see cref="T:System.ComponentModel.ITypeDescriptorContext" />  that provides a format context.</param>
      <param name="value">The <see cref="T:System.Object" /> to test for validity.</param>
    </member>
    <member name="T:System.CodeDom.CodeArgumentReferenceExpression">
      <summary>Represents a reference to the value of an argument passed to a method.</summary>
    </member>
    <member name="M:System.CodeDom.CodeArgumentReferenceExpression.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.CodeDom.CodeArgumentReferenceExpression" /> class.</summary>
    </member>
    <member name="M:System.CodeDom.CodeArgumentReferenceExpression.#ctor(System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.CodeDom.CodeArgumentReferenceExpression" /> class using the specified parameter name.</summary>
      <param name="parameterName">The name of the parameter to reference. </param>
    </member>
    <member name="P:System.CodeDom.CodeArgumentReferenceExpression.ParameterName">
      <summary>Gets or sets the name of the parameter this expression references.</summary>
      <returns>The name of the parameter to reference.</returns>
    </member>
    <member name="T:System.CodeDom.CodeArrayCreateExpression">
      <summary>Represents an expression that creates an array.</summary>
    </member>
    <member name="M:System.CodeDom.CodeArrayCreateExpression.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.CodeDom.CodeArrayCreateExpression" /> class.</summary>
    </member>
    <member name="M:System.CodeDom.CodeArrayCreateExpression.#ctor(System.CodeDom.CodeTypeReference,System.CodeDom.CodeExpression)">
      <summary>Initializes a new instance of the <see cref="T:System.CodeDom.CodeArrayCreateExpression" /> class using the specified array data type and code expression indicating the number of indexes for the array.</summary>
      <param name="createType">A <see cref="T:System.CodeDom.CodeTypeReference" /> indicating the data type of the array to create. </param>
      <param name="size">An expression that indicates the number of indexes of the array to create. </param>
    </member>
    <member name="M:System.CodeDom.CodeArrayCreateExpression.#ctor(System.CodeDom.CodeTypeReference,System.CodeDom.CodeExpression[])">
      <summary>Initializes a new instance of the <see cref="T:System.CodeDom.CodeArrayCreateExpression" /> class using the specified array data type and initialization expressions.</summary>
      <param name="createType">A <see cref="T:System.CodeDom.CodeTypeReference" /> that indicates the data type of the array to create. </param>
      <param name="initializers">An array of expressions to use to initialize the array. </param>
    </member>
    <member name="M:System.CodeDom.CodeArrayCreateExpression.#ctor(System.CodeDom.CodeTypeReference,System.Int32)">
      <summary>Initializes a new instance of the <see cref="T:System.CodeDom.CodeArrayCreateExpression" /> class using the specified array data type and number of indexes for the array.</summary>
      <param name="createType">A <see cref="T:System.CodeDom.CodeTypeReference" /> indicating the data type of the array to create. </param>
      <param name="size">The number of indexes of the array to create. </param>
    </member>
    <member name="M:System.CodeDom.CodeArrayCreateExpression.#ctor(System.String,System.CodeDom.CodeExpression)">
      <summary>Initializes a new instance of the <see cref="T:System.CodeDom.CodeArrayCreateExpression" /> class using the specified array data type name and code expression indicating the number of indexes for the array.</summary>
      <param name="createType">The name of the data type of the array to create. </param>
      <param name="size">An expression that indicates the number of indexes of the array to create. </param>
    </member>
    <member name="M:System.CodeDom.CodeArrayCreateExpression.#ctor(System.String,System.CodeDom.CodeExpression[])">
      <summary>Initializes a new instance of the <see cref="T:System.CodeDom.CodeArrayCreateExpression" /> class using the specified array data type name and initializers.</summary>
      <param name="createType">The name of the data type of the array to create. </param>
      <param name="initializers">An array of expressions to use to initialize the array. </param>
    </member>
    <member name="M:System.CodeDom.CodeArrayCreateExpression.#ctor(System.String,System.Int32)">
      <summary>Initializes a new instance of the <see cref="T:System.CodeDom.CodeArrayCreateExpression" /> class using the specified array data type name and number of indexes for the array.</summary>
      <param name="createType">The name of the data type of the array to create. </param>
      <param name="size">The number of indexes of the array to create. </param>
    </member>
    <member name="M:System.CodeDom.CodeArrayCreateExpression.#ctor(System.Type,System.CodeDom.CodeExpression)">
      <summary>Initializes a new instance of the <see cref="T:System.CodeDom.CodeArrayCreateExpression" /> class using the specified array data type and code expression indicating the number of indexes for the array.</summary>
      <param name="createType">The data type of the array to create. </param>
      <param name="size">An expression that indicates the number of indexes of the array to create. </param>
    </member>
    <member name="M:System.CodeDom.CodeArrayCreateExpression.#ctor(System.Type,System.CodeDom.CodeExpression[])">
      <summary>Initializes a new instance of the <see cref="T:System.CodeDom.CodeArrayCreateExpression" /> class using the specified array data type and initializers.</summary>
      <param name="createType">The data type of the array to create. </param>
      <param name="initializers">An array of expressions to use to initialize the array. </param>
    </member>
    <member name="M:System.CodeDom.CodeArrayCreateExpression.#ctor(System.Type,System.Int32)">
      <summary>Initializes a new instance of the <see cref="T:System.CodeDom.CodeArrayCreateExpression" /> class using the specified array data type and number of indexes for the array.</summary>
      <param name="createType">The data type of the array to create. </param>
      <param name="size">The number of indexes of the array to create. </param>
    </member>
    <member name="P:System.CodeDom.CodeArrayCreateExpression.CreateType">
      <summary>Gets or sets the type of array to create.</summary>
      <returns>A <see cref="T:System.CodeDom.CodeTypeReference" /> that indicates the type of the array.</returns>
    </member>
    <member name="P:System.CodeDom.CodeArrayCreateExpression.Initializers">
      <summary>Gets the initializers with which to initialize the array.</summary>
      <returns>A <see cref="T:System.CodeDom.CodeExpressionCollection" /> that indicates the initialization values.</returns>
    </member>
    <member name="P:System.CodeDom.CodeArrayCreateExpression.Size">
      <summary>Gets or sets the number of indexes in the array.</summary>
      <returns>The number of indexes in the array.</returns>
    </member>
    <member name="P:System.CodeDom.CodeArrayCreateExpression.SizeExpression">
      <summary>Gets or sets the expression that indicates the size of the array.</summary>
      <returns>A <see cref="T:System.CodeDom.CodeExpression" /> that indicates the size of the array.</returns>
    </member>
    <member name="T:System.CodeDom.CodeArrayIndexerExpression">
      <summary>Represents a reference to an index of an array.</summary>
    </member>
    <member name="M:System.CodeDom.CodeArrayIndexerExpression.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.CodeDom.CodeArrayIndexerExpression" /> class.</summary>
    </member>
    <member name="M:System.CodeDom.CodeArrayIndexerExpression.#ctor(System.CodeDom.CodeExpression,System.CodeDom.CodeExpression[])">
      <summary>Initializes a new instance of the <see cref="T:System.CodeDom.CodeArrayIndexerExpression" /> class using the specified target object and indexes.</summary>
      <param name="targetObject">A <see cref="T:System.CodeDom.CodeExpression" /> that indicates the array the indexer targets. </param>
      <param name="indices">The index or indexes to reference. </param>
    </member>
    <member name="P:System.CodeDom.CodeArrayIndexerExpression.Indices">
      <summary>Gets or sets the index or indexes of the indexer expression.</summary>
      <returns>A <see cref="T:System.CodeDom.CodeExpressionCollection" /> that indicates the index or indexes of the indexer expression.</returns>
    </member>
    <member name="P:System.CodeDom.CodeArrayIndexerExpression.TargetObject">
      <summary>Gets or sets the target object of the array indexer.</summary>
      <returns>A <see cref="T:System.CodeDom.CodeExpression" /> that represents the array being indexed.</returns>
    </member>
    <member name="T:System.CodeDom.CodeAssignStatement">
      <summary>Represents a simple assignment statement.</summary>
    </member>
    <member name="M:System.CodeDom.CodeAssignStatement.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.CodeDom.CodeAssignStatement" /> class.</summary>
    </member>
    <member name="M:System.CodeDom.CodeAssignStatement.#ctor(System.CodeDom.CodeExpression,System.CodeDom.CodeExpression)">
      <summary>Initializes a new instance of the <see cref="T:System.CodeDom.CodeAssignStatement" /> class using the specified expressions.</summary>
      <param name="left">The variable to assign to. </param>
      <param name="right">The value to assign. </param>
    </member>
    <member name="P:System.CodeDom.CodeAssignStatement.Left">
      <summary>Gets or sets the expression representing the object or reference to assign to.</summary>
      <returns>A <see cref="T:System.CodeDom.CodeExpression" /> that indicates the object or reference to assign to.</returns>
    </member>
    <member name="P:System.CodeDom.CodeAssignStatement.Right">
      <summary>Gets or sets the expression representing the object or reference to assign.</summary>
      <returns>A <see cref="T:System.CodeDom.CodeExpression" /> that indicates the object or reference to assign.</returns>
    </member>
    <member name="T:System.CodeDom.CodeAttachEventStatement">
      <summary>Represents a statement that attaches an event-handler delegate to an event.</summary>
    </member>
    <member name="M:System.CodeDom.CodeAttachEventStatement.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.CodeDom.CodeAttachEventStatement" /> class.</summary>
    </member>
    <member name="M:System.CodeDom.CodeAttachEventStatement.#ctor(System.CodeDom.CodeEventReferenceExpression,System.CodeDom.CodeExpression)">
      <summary>Initializes a new instance of the <see cref="T:System.CodeDom.CodeAttachEventStatement" /> class using the specified event and delegate.</summary>
      <param name="eventRef">A <see cref="T:System.CodeDom.CodeEventReferenceExpression" /> that indicates the event to attach an event handler to. </param>
      <param name="listener">A <see cref="T:System.CodeDom.CodeExpression" /> that indicates the new event handler. </param>
    </member>
    <member name="M:System.CodeDom.CodeAttachEventStatement.#ctor(System.CodeDom.CodeExpression,System.String,System.CodeDom.CodeExpression)">
      <summary>Initializes a new instance of the <see cref="T:System.CodeDom.CodeAttachEventStatement" /> class using the specified object containing the event, event name, and event-handler delegate.</summary>
      <param name="targetObject">A <see cref="T:System.CodeDom.CodeExpression" /> that indicates the object that contains the event. </param>
      <param name="eventName">The name of the event to attach an event handler to. </param>
      <param name="listener">A <see cref="T:System.CodeDom.CodeExpression" /> that indicates the new event handler. </param>
    </member>
    <member name="P:System.CodeDom.CodeAttachEventStatement.Event">
      <summary>Gets or sets the event to attach an event-handler delegate to.</summary>
      <returns>A <see cref="T:System.CodeDom.CodeEventReferenceExpression" /> that indicates the event to attach an event handler to.</returns>
    </member>
    <member name="P:System.CodeDom.CodeAttachEventStatement.Listener">
      <summary>Gets or sets the new event-handler delegate to attach to the event.</summary>
      <returns>A <see cref="T:System.CodeDom.CodeExpression" /> that indicates the new event handler to attach.</returns>
    </member>
    <member name="T:System.CodeDom.CodeAttributeArgument">
      <summary>Represents an argument used in a metadata attribute declaration.</summary>
    </member>
    <member name="M:System.CodeDom.CodeAttributeArgument.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.CodeDom.CodeAttributeArgument" /> class.</summary>
    </member>
    <member name="M:System.CodeDom.CodeAttributeArgument.#ctor(System.CodeDom.CodeExpression)">
      <summary>Initializes a new instance of the <see cref="T:System.CodeDom.CodeAttributeArgument" /> class using the specified value.</summary>
      <param name="value">A <see cref="T:System.CodeDom.CodeExpression" /> that represents the value of the argument. </param>
    </member>
    <member name="M:System.CodeDom.CodeAttributeArgument.#ctor(System.String,System.CodeDom.CodeExpression)">
      <summary>Initializes a new instance of the <see cref="T:System.CodeDom.CodeAttributeArgument" /> class using the specified name and value.</summary>
      <param name="name">The name of the attribute property the argument applies to. </param>
      <param name="value">A <see cref="T:System.CodeDom.CodeExpression" /> that represents the value of the argument. </param>
    </member>
    <member name="P:System.CodeDom.CodeAttributeArgument.Name">
      <summary>Gets or sets the name of the attribute.</summary>
      <returns>The name of the attribute property the argument is for.</returns>
    </member>
    <member name="P:System.CodeDom.CodeAttributeArgument.Value">
      <summary>Gets or sets the value for the attribute argument.</summary>
      <returns>A <see cref="T:System.CodeDom.CodeExpression" /> that indicates the value for the attribute argument.</returns>
    </member>
    <member name="T:System.CodeDom.CodeAttributeArgumentCollection">
      <summary>Represents a collection of <see cref="T:System.CodeDom.CodeAttributeArgument" /> objects.</summary>
    </member>
    <member name="M:System.CodeDom.CodeAttributeArgumentCollection.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.CodeDom.CodeAttributeArgumentCollection" /> class.</summary>
    </member>
    <member name="M:System.CodeDom.CodeAttributeArgumentCollection.#ctor(System.CodeDom.CodeAttributeArgument[])">
      <summary>Initializes a new instance of the <see cref="T:System.CodeDom.CodeAttributeArgumentCollection" /> class containing the specified array of <see cref="T:System.CodeDom.CodeAttributeArgument" /> objects.</summary>
      <param name="value">An array of <see cref="T:System.CodeDom.CodeAttributeArgument" /> objects with which to initialize the collection. </param>
      <exception cref="T:System.ArgumentNullException">One or more objects in the array are null.</exception>
    </member>
    <member name="M:System.CodeDom.CodeAttributeArgumentCollection.#ctor(System.CodeDom.CodeAttributeArgumentCollection)">
      <summary>Initializes a new instance of the <see cref="T:System.CodeDom.CodeAttributeArgumentCollection" /> class containing the elements of the specified source collection.</summary>
      <param name="value">A <see cref="T:System.CodeDom.CodeAttributeArgumentCollection" /> with which to initialize the collection. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="value" /> is null.</exception>
    </member>
    <member name="M:System.CodeDom.CodeAttributeArgumentCollection.Add(System.CodeDom.CodeAttributeArgument)">
      <summary>Adds the specified <see cref="T:System.CodeDom.CodeAttributeArgument" /> object to the collection.</summary>
      <returns>The index at which the new element was inserted.</returns>
      <param name="value">The <see cref="T:System.CodeDom.CodeAttributeArgument" /> object to add. </param>
    </member>
    <member name="M:System.CodeDom.CodeAttributeArgumentCollection.AddRange(System.CodeDom.CodeAttributeArgument[])">
      <summary>Copies the elements of the specified <see cref="T:System.CodeDom.CodeAttributeArgument" /> array to the end of the collection.</summary>
      <param name="value">An array of type <see cref="T:System.CodeDom.CodeAttributeArgument" /> that contains the objects to add to the collection. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="value" /> is null.</exception>
    </member>
    <member name="M:System.CodeDom.CodeAttributeArgumentCollection.AddRange(System.CodeDom.CodeAttributeArgumentCollection)">
      <summary>Copies the contents of another <see cref="T:System.CodeDom.CodeAttributeArgumentCollection" /> object to the end of the collection.</summary>
      <param name="value">A <see cref="T:System.CodeDom.CodeAttributeArgumentCollection" /> that contains the objects to add to the collection. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="value" /> is null.</exception>
    </member>
    <member name="M:System.CodeDom.CodeAttributeArgumentCollection.Contains(System.CodeDom.CodeAttributeArgument)">
      <summary>Gets a value that indicates whether the collection contains the specified <see cref="T:System.CodeDom.CodeAttributeArgument" /> object.</summary>
      <returns>true if the collection contains the specified object; otherwise, false.</returns>
      <param name="value">The <see cref="T:System.CodeDom.CodeAttributeArgument" /> object to locate in the collection. </param>
    </member>
    <member name="M:System.CodeDom.CodeAttributeArgumentCollection.CopyTo(System.CodeDom.CodeAttributeArgument[],System.Int32)">
      <summary>Copies the collection objects to a one-dimensional <see cref="T:System.Array" /> instance beginning at the specified index.</summary>
      <param name="array">The one-dimensional <see cref="T:System.Array" /> that is the destination of the values copied from the collection. </param>
      <param name="index">The index of the array at which to begin inserting. </param>
      <exception cref="T:System.ArgumentException">The destination array is multidimensional.-or- The number of elements in the <see cref="T:System.CodeDom.CodeAttributeArgumentCollection" /> is greater than the available space between the index of the target array specified by the <paramref name="index" /> parameter and the end of the target array. </exception>
      <exception cref="T:System.ArgumentNullException">The <paramref name="array" /> parameter is null. </exception>
      <exception cref="T:System.ArgumentOutOfRangeException">The <paramref name="index" /> parameter is less than the target array's minimum index. </exception>
    </member>
    <member name="M:System.CodeDom.CodeAttributeArgumentCollection.IndexOf(System.CodeDom.CodeAttributeArgument)">
      <summary>Gets the index of the specified <see cref="T:System.CodeDom.CodeAttributeArgument" /> object in the collection, if it exists in the collection.</summary>
      <returns>The index of the specified object, if found, in the collection; otherwise, -1.</returns>
      <param name="value">The <see cref="T:System.CodeDom.CodeAttributeArgument" /> object to locate in the collection. </param>
    </member>
    <member name="M:System.CodeDom.CodeAttributeArgumentCollection.Insert(System.Int32,System.CodeDom.CodeAttributeArgument)">
      <summary>Inserts the specified <see cref="T:System.CodeDom.CodeAttributeArgument" /> object into the collection at the specified index.</summary>
      <param name="index">The zero-based index where the specified object should be inserted. </param>
      <param name="value">The <see cref="T:System.CodeDom.CodeAttributeArgument" /> object to insert. </param>
    </member>
    <member name="P:System.CodeDom.CodeAttributeArgumentCollection.Item(System.Int32)">
      <summary>Gets or sets the <see cref="T:System.CodeDom.CodeAttributeArgument" /> object at the specified index in the collection.</summary>
      <returns>A <see cref="T:System.CodeDom.CodeAttributeArgument" /> at each valid index.</returns>
      <param name="index">The index of the collection to access. </param>
      <exception cref="T:System.ArgumentOutOfRangeException">The <paramref name="index" /> parameter is outside the valid range of indexes for the collection. </exception>
    </member>
    <member name="M:System.CodeDom.CodeAttributeArgumentCollection.Remove(System.CodeDom.CodeAttributeArgument)">
      <summary>Removes the specified <see cref="T:System.CodeDom.CodeAttributeArgument" /> object from the collection.</summary>
      <param name="value">The <see cref="T:System.CodeDom.CodeAttributeArgument" /> object to remove from the collection. </param>
      <exception cref="T:System.ArgumentException">The specified object is not found in the collection. </exception>
    </member>
    <member name="T:System.CodeDom.CodeAttributeDeclaration">
      <summary>Represents an attribute declaration.</summary>
    </member>
    <member name="M:System.CodeDom.CodeAttributeDeclaration.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.CodeDom.CodeAttributeDeclaration" /> class.</summary>
    </member>
    <member name="M:System.CodeDom.CodeAttributeDeclaration.#ctor(System.CodeDom.CodeTypeReference)">
      <summary>Initializes a new instance of the <see cref="T:System.CodeDom.CodeAttributeDeclaration" /> class using the specified code type reference.</summary>
      <param name="attributeType">The <see cref="T:System.CodeDom.CodeTypeReference" /> that identifies the attribute.</param>
    </member>
    <member name="M:System.CodeDom.CodeAttributeDeclaration.#ctor(System.CodeDom.CodeTypeReference,System.CodeDom.CodeAttributeArgument[])">
      <summary>Initializes a new instance of the <see cref="T:System.CodeDom.CodeAttributeDeclaration" /> class using the specified code type reference and arguments.</summary>
      <param name="attributeType">The <see cref="T:System.CodeDom.CodeTypeReference" /> that identifies the attribute.</param>
      <param name="arguments">An array of type <see cref="T:System.CodeDom.CodeAttributeArgument" /> that contains the arguments for the attribute.</param>
    </member>
    <member name="M:System.CodeDom.CodeAttributeDeclaration.#ctor(System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.CodeDom.CodeAttributeDeclaration" /> class using the specified name.</summary>
      <param name="name">The name of the attribute. </param>
    </member>
    <member name="M:System.CodeDom.CodeAttributeDeclaration.#ctor(System.String,System.CodeDom.CodeAttributeArgument[])">
      <summary>Initializes a new instance of the <see cref="T:System.CodeDom.CodeAttributeDeclaration" /> class using the specified name and arguments.</summary>
      <param name="name">The name of the attribute. </param>
      <param name="arguments">An array of type <see cref="T:System.CodeDom.CodeAttributeArgument" />  that contains the arguments for the attribute. </param>
    </member>
    <member name="P:System.CodeDom.CodeAttributeDeclaration.Arguments">
      <summary>Gets the arguments for the attribute.</summary>
      <returns>A <see cref="T:System.CodeDom.CodeAttributeArgumentCollection" /> that contains the arguments for the attribute.</returns>
    </member>
    <member name="P:System.CodeDom.CodeAttributeDeclaration.AttributeType">
      <summary>Gets the code type reference for the code attribute declaration.</summary>
      <returns>A <see cref="T:System.CodeDom.CodeTypeReference" /> that identifies the <see cref="T:System.CodeDom.CodeAttributeDeclaration" />.</returns>
    </member>
    <member name="P:System.CodeDom.CodeAttributeDeclaration.Name">
      <summary>Gets or sets the name of the attribute being declared.</summary>
      <returns>The name of the attribute.</returns>
    </member>
    <member name="T:System.CodeDom.CodeAttributeDeclarationCollection">
      <summary>Represents a collection of <see cref="T:System.CodeDom.CodeAttributeDeclaration" /> objects.</summary>
    </member>
    <member name="M:System.CodeDom.CodeAttributeDeclarationCollection.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.CodeDom.CodeAttributeDeclarationCollection" /> class.</summary>
    </member>
    <member name="M:System.CodeDom.CodeAttributeDeclarationCollection.#ctor(System.CodeDom.CodeAttributeDeclaration[])">
      <summary>Initializes a new instance of the <see cref="T:System.CodeDom.CodeAttributeDeclarationCollection" /> class containing the specified array of <see cref="T:System.CodeDom.CodeAttributeDeclaration" /> objects.</summary>
      <param name="value">An array of <see cref="T:System.CodeDom.CodeAttributeDeclaration" /> objects with which to initialize the collection. </param>
      <exception cref="T:System.ArgumentNullException">One or more objects in the array are null.</exception>
    </member>
    <member name="M:System.CodeDom.CodeAttributeDeclarationCollection.#ctor(System.CodeDom.CodeAttributeDeclarationCollection)">
      <summary>Initializes a new instance of the <see cref="T:System.CodeDom.CodeAttributeDeclarationCollection" /> class containing the elements of the specified source collection.</summary>
      <param name="value">A <see cref="T:System.CodeDom.CodeAttributeDeclarationCollection" /> with which to initialize the collection. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="value" /> is null.</exception>
    </member>
    <member name="M:System.CodeDom.CodeAttributeDeclarationCollection.Add(System.CodeDom.CodeAttributeDeclaration)">
      <summary>Adds a <see cref="T:System.CodeDom.CodeAttributeDeclaration" /> object with the specified value to the collection.</summary>
      <returns>The index at which the new element was inserted.</returns>
      <param name="value">The <see cref="T:System.CodeDom.CodeAttributeDeclaration" /> object to add. </param>
    </member>
    <member name="M:System.CodeDom.CodeAttributeDeclarationCollection.AddRange(System.CodeDom.CodeAttributeDeclaration[])">
      <summary>Copies the elements of the specified <see cref="T:System.CodeDom.CodeAttributeDeclaration" /> array to the end of the collection.</summary>
      <param name="value">An array of type <see cref="T:System.CodeDom.CodeAttributeDeclaration" /> that contains the objects to add to the collection. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="value" /> is null.</exception>
    </member>
    <member name="M:System.CodeDom.CodeAttributeDeclarationCollection.AddRange(System.CodeDom.CodeAttributeDeclarationCollection)">
      <summary>Copies the contents of another <see cref="T:System.CodeDom.CodeAttributeDeclarationCollection" /> object to the end of the collection.</summary>
      <param name="value">A <see cref="T:System.CodeDom.CodeAttributeDeclarationCollection" /> that contains the objects to add to the collection. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="value" /> is null.</exception>
    </member>
    <member name="M:System.CodeDom.CodeAttributeDeclarationCollection.Contains(System.CodeDom.CodeAttributeDeclaration)">
      <summary>Gets or sets a value that indicates whether the collection contains the specified <see cref="T:System.CodeDom.CodeAttributeDeclaration" /> object.</summary>
      <returns>true if the collection contains the specified object; otherwise, false.</returns>
      <param name="value">The <see cref="T:System.CodeDom.CodeAttributeDeclaration" /> object to locate. </param>
    </member>
    <member name="M:System.CodeDom.CodeAttributeDeclarationCollection.CopyTo(System.CodeDom.CodeAttributeDeclaration[],System.Int32)">
      <summary>Copies the collection objects to a one-dimensional <see cref="T:System.Array" /> instance beginning at the specified index.</summary>
      <param name="array">The one-dimensional <see cref="T:System.Array" /> that is the destination of the values copied from the collection. </param>
      <param name="index">The index of the array at which to begin inserting. </param>
      <exception cref="T:System.ArgumentException">The destination array is multidimensional.-or- The number of elements in the <see cref="T:System.CodeDom.CodeAttributeDeclarationCollection" /> is greater than the available space between the index of the target array specified by the <paramref name="index" /> parameter and the end of the target array. </exception>
      <exception cref="T:System.ArgumentNullException">The <paramref name="array" /> parameter is null. </exception>
      <exception cref="T:System.ArgumentOutOfRangeException">The <paramref name="index" /> parameter is less than the target array's minimum index. </exception>
    </member>
    <member name="M:System.CodeDom.CodeAttributeDeclarationCollection.IndexOf(System.CodeDom.CodeAttributeDeclaration)">
      <summary>Gets the index of the specified <see cref="T:System.CodeDom.CodeAttributeDeclaration" /> object in the collection, if it exists in the collection.</summary>
      <returns>The index in the collection of the specified object, if found; otherwise, -1.</returns>
      <param name="value">The <see cref="T:System.CodeDom.CodeAttributeDeclaration" /> object to locate in the collection. </param>
    </member>
    <member name="M:System.CodeDom.CodeAttributeDeclarationCollection.Insert(System.Int32,System.CodeDom.CodeAttributeDeclaration)">
      <summary>Inserts the specified <see cref="T:System.CodeDom.CodeAttributeDeclaration" /> object into the collection at the specified index.</summary>
      <param name="index">The zero-based index where the specified object should be inserted. </param>
      <param name="value">The <see cref="T:System.CodeDom.CodeAttributeDeclaration" /> object to insert. </param>
    </member>
    <member name="P:System.CodeDom.CodeAttributeDeclarationCollection.Item(System.Int32)">
      <summary>Gets or sets the <see cref="T:System.CodeDom.CodeAttributeDeclaration" /> object at the specified index.</summary>
      <returns>A <see cref="T:System.CodeDom.CodeAttributeDeclaration" /> at each valid index.</returns>
      <param name="index">The index of the collection to access. </param>
      <exception cref="T:System.ArgumentOutOfRangeException">The <paramref name="index" /> parameter is outside the valid range of indexes for the collection. </exception>
    </member>
    <member name="M:System.CodeDom.CodeAttributeDeclarationCollection.Remove(System.CodeDom.CodeAttributeDeclaration)">
      <summary>Removes the specified <see cref="T:System.CodeDom.CodeAttributeDeclaration" /> object from the collection.</summary>
      <param name="value">The <see cref="T:System.CodeDom.CodeAttributeDeclaration" /> object to remove from the collection. </param>
      <exception cref="T:System.ArgumentException">The specified object is not found in the collection. </exception>
    </member>
    <member name="T:System.CodeDom.CodeBaseReferenceExpression">
      <summary>Represents a reference to the base class.</summary>
    </member>
    <member name="M:System.CodeDom.CodeBaseReferenceExpression.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.CodeDom.CodeBaseReferenceExpression" /> class. </summary>
    </member>
    <member name="T:System.CodeDom.CodeBinaryOperatorExpression">
      <summary>Represents an expression that consists of a binary operation between two expressions.</summary>
    </member>
    <member name="M:System.CodeDom.CodeBinaryOperatorExpression.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.CodeDom.CodeBinaryOperatorExpression" /> class.</summary>
    </member>
    <member name="M:System.CodeDom.CodeBinaryOperatorExpression.#ctor(System.CodeDom.CodeExpression,System.CodeDom.CodeBinaryOperatorType,System.CodeDom.CodeExpression)">
      <summary>Initializes a new instance of the <see cref="T:System.CodeDom.CodeBinaryOperatorExpression" /> class using the specified parameters.</summary>
      <param name="left">The <see cref="T:System.CodeDom.CodeExpression" /> on the left of the operator. </param>
      <param name="op">A <see cref="T:System.CodeDom.CodeBinaryOperatorType" /> indicating the type of operator. </param>
      <param name="right">The <see cref="T:System.CodeDom.CodeExpression" /> on the right of the operator. </param>
    </member>
    <member name="P:System.CodeDom.CodeBinaryOperatorExpression.Left">
      <summary>Gets or sets the code expression on the left of the operator.</summary>
      <returns>A <see cref="T:System.CodeDom.CodeExpression" /> that indicates the left operand.</returns>
    </member>
    <member name="P:System.CodeDom.CodeBinaryOperatorExpression.Operator">
      <summary>Gets or sets the operator in the binary operator expression.</summary>
      <returns>A <see cref="T:System.CodeDom.CodeBinaryOperatorType" /> that indicates the type of operator in the expression.</returns>
    </member>
    <member name="P:System.CodeDom.CodeBinaryOperatorExpression.Right">
      <summary>Gets or sets the code expression on the right of the operator.</summary>
      <returns>A <see cref="T:System.CodeDom.CodeExpression" /> that indicates the right operand.</returns>
    </member>
    <member name="T:System.CodeDom.CodeBinaryOperatorType">
      <summary>Defines identifiers for supported binary operators.</summary>
    </member>
    <member name="F:System.CodeDom.CodeBinaryOperatorType.Add">
      <summary>Addition operator.</summary>
    </member>
    <member name="F:System.CodeDom.CodeBinaryOperatorType.Subtract">
      <summary>Subtraction operator.</summary>
    </member>
    <member name="F:System.CodeDom.CodeBinaryOperatorType.Multiply">
      <summary>Multiplication operator.</summary>
    </member>
    <member name="F:System.CodeDom.CodeBinaryOperatorType.Divide">
      <summary>Division operator.</summary>
    </member>
    <member name="F:System.CodeDom.CodeBinaryOperatorType.Modulus">
      <summary>Modulus operator.</summary>
    </member>
    <member name="F:System.CodeDom.CodeBinaryOperatorType.Assign">
      <summary>Assignment operator.</summary>
    </member>
    <member name="F:System.CodeDom.CodeBinaryOperatorType.IdentityInequality">
      <summary>Identity not equal operator.</summary>
    </member>
    <member name="F:System.CodeDom.CodeBinaryOperatorType.IdentityEquality">
      <summary>Identity equal operator.</summary>
    </member>
    <member name="F:System.CodeDom.CodeBinaryOperatorType.ValueEquality">
      <summary>Value equal operator.</summary>
    </member>
    <member name="F:System.CodeDom.CodeBinaryOperatorType.BitwiseOr">
      <summary>Bitwise or operator.</summary>
    </member>
    <member name="F:System.CodeDom.CodeBinaryOperatorType.BitwiseAnd">
      <summary>Bitwise and operator.</summary>
    </member>
    <member name="F:System.CodeDom.CodeBinaryOperatorType.BooleanOr">
      <summary>Boolean or operator. This represents a short circuiting operator. A short circuiting operator will evaluate only as many expressions as necessary before returning a correct value.</summary>
    </member>
    <member name="F:System.CodeDom.CodeBinaryOperatorType.BooleanAnd">
      <summary>Boolean and operator. This represents a short circuiting operator. A short circuiting operator will evaluate only as many expressions as necessary before returning a correct value.</summary>
    </member>
    <member name="F:System.CodeDom.CodeBinaryOperatorType.LessThan">
      <summary>Less than operator.</summary>
    </member>
    <member name="F:System.CodeDom.CodeBinaryOperatorType.LessThanOrEqual">
      <summary>Less than or equal operator.</summary>
    </member>
    <member name="F:System.CodeDom.CodeBinaryOperatorType.GreaterThan">
      <summary>Greater than operator.</summary>
    </member>
    <member name="F:System.CodeDom.CodeBinaryOperatorType.GreaterThanOrEqual">
      <summary>Greater than or equal operator.</summary>
    </member>
    <member name="T:System.CodeDom.CodeCastExpression">
      <summary>Represents an expression cast to a data type or interface.</summary>
    </member>
    <member name="M:System.CodeDom.CodeCastExpression.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.CodeDom.CodeCastExpression" /> class.</summary>
    </member>
    <member name="M:System.CodeDom.CodeCastExpression.#ctor(System.CodeDom.CodeTypeReference,System.CodeDom.CodeExpression)">
      <summary>Initializes a new instance of the <see cref="T:System.CodeDom.CodeCastExpression" /> class using the specified destination type and expression.</summary>
      <param name="targetType">A <see cref="T:System.CodeDom.CodeTypeReference" /> that indicates the destination type of the cast. </param>
      <param name="expression">The <see cref="T:System.CodeDom.CodeExpression" /> to cast. </param>
    </member>
    <member name="M:System.CodeDom.CodeCastExpression.#ctor(System.String,System.CodeDom.CodeExpression)">
      <summary>Initializes a new instance of the <see cref="T:System.CodeDom.CodeCastExpression" /> class using the specified destination type and expression.</summary>
      <param name="targetType">The name of the destination type of the cast. </param>
      <param name="expression">The <see cref="T:System.CodeDom.CodeExpression" /> to cast. </param>
    </member>
    <member name="M:System.CodeDom.CodeCastExpression.#ctor(System.Type,System.CodeDom.CodeExpression)">
      <summary>Initializes a new instance of the <see cref="T:System.CodeDom.CodeCastExpression" /> class using the specified destination type and expression.</summary>
      <param name="targetType">The destination data type of the cast. </param>
      <param name="expression">The <see cref="T:System.CodeDom.CodeExpression" /> to cast. </param>
    </member>
    <member name="P:System.CodeDom.CodeCastExpression.Expression">
      <summary>Gets or sets the expression to cast.</summary>
      <returns>A <see cref="T:System.CodeDom.CodeExpression" /> that indicates the code to cast.</returns>
    </member>
    <member name="P:System.CodeDom.CodeCastExpression.TargetType">
      <summary>Gets or sets the destination type of the cast.</summary>
      <returns>A <see cref="T:System.CodeDom.CodeTypeReference" /> that indicates the destination type to cast to.</returns>
    </member>
    <member name="T:System.CodeDom.CodeCatchClause">
      <summary>Represents a catch exception block of a try/catch statement.</summary>
    </member>
    <member name="M:System.CodeDom.CodeCatchClause.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.CodeDom.CodeCatchClause" /> class.</summary>
    </member>
    <member name="M:System.CodeDom.CodeCatchClause.#ctor(System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.CodeDom.CodeCatchClause" /> class using the specified local variable name for the exception.</summary>
      <param name="localName">The name of the local variable declared in the catch clause for the exception. This is optional. </param>
    </member>
    <member name="M:System.CodeDom.CodeCatchClause.#ctor(System.String,System.CodeDom.CodeTypeReference)">
      <summary>Initializes a new instance of the <see cref="T:System.CodeDom.CodeCatchClause" /> class using the specified local variable name for the exception and exception type.</summary>
      <param name="localName">The name of the local variable declared in the catch clause for the exception. This is optional. </param>
      <param name="catchExceptionType">A <see cref="T:System.CodeDom.CodeTypeReference" /> that indicates the type of exception to catch. </param>
    </member>
    <member name="M:System.CodeDom.CodeCatchClause.#ctor(System.String,System.CodeDom.CodeTypeReference,System.CodeDom.CodeStatement[])">
      <summary>Initializes a new instance of the <see cref="T:System.CodeDom.CodeCatchClause" /> class using the specified local variable name for the exception, exception type and statement collection.</summary>
      <param name="localName">The name of the local variable declared in the catch clause for the exception. This is optional. </param>
      <param name="catchExceptionType">A <see cref="T:System.CodeDom.CodeTypeReference" /> that indicates the type of exception to catch. </param>
      <param name="statements">An array of <see cref="T:System.CodeDom.CodeStatement" /> objects that represent the contents of the catch block. </param>
    </member>
    <member name="P:System.CodeDom.CodeCatchClause.CatchExceptionType">
      <summary>Gets or sets the type of the exception to handle with the catch block.</summary>
      <returns>A <see cref="T:System.CodeDom.CodeTypeReference" /> that indicates the type of the exception to handle.</returns>
    </member>
    <member name="P:System.CodeDom.CodeCatchClause.LocalName">
      <summary>Gets or sets the variable name of the exception that the catch clause handles.</summary>
      <returns>The name for the exception variable that the catch clause handles.</returns>
    </member>
    <member name="P:System.CodeDom.CodeCatchClause.Statements">
      <summary>Gets the statements within the catch block.</summary>
      <returns>A <see cref="T:System.CodeDom.CodeStatementCollection" /> containing the statements within the catch block.</returns>
    </member>
    <member name="T:System.CodeDom.CodeCatchClauseCollection">
      <summary>Represents a collection of <see cref="T:System.CodeDom.CodeCatchClause" /> objects.</summary>
    </member>
    <member name="M:System.CodeDom.CodeCatchClauseCollection.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.CodeDom.CodeCatchClauseCollection" /> class.</summary>
    </member>
    <member name="M:System.CodeDom.CodeCatchClauseCollection.#ctor(System.CodeDom.CodeCatchClause[])">
      <summary>Initializes a new instance of the <see cref="T:System.CodeDom.CodeCatchClauseCollection" /> class containing the specified array of <see cref="T:System.CodeDom.CodeCatchClause" /> objects.</summary>
      <param name="value">An array of <see cref="T:System.CodeDom.CodeCatchClause" /> objects with which to initialize the collection. </param>
      <exception cref="T:System.ArgumentNullException">One or more objects in the array are null.</exception>
    </member>
    <member name="M:System.CodeDom.CodeCatchClauseCollection.#ctor(System.CodeDom.CodeCatchClauseCollection)">
      <summary>Initializes a new instance of the <see cref="T:System.CodeDom.CodeCatchClauseCollection" /> class containing the elements of the specified source collection.</summary>
      <param name="value">A <see cref="T:System.CodeDom.CodeCatchClauseCollection" /> with which to initialize the collection. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="value" /> is null.</exception>
    </member>
    <member name="M:System.CodeDom.CodeCatchClauseCollection.Add(System.CodeDom.CodeCatchClause)">
      <summary>Adds the specified <see cref="T:System.CodeDom.CodeCatchClause" /> object to the collection.</summary>
      <returns>The index at which the new element was inserted.</returns>
      <param name="value">The <see cref="T:System.CodeDom.CodeCatchClause" /> object to add. </param>
    </member>
    <member name="M:System.CodeDom.CodeCatchClauseCollection.AddRange(System.CodeDom.CodeCatchClause[])">
      <summary>Copies the elements of the specified <see cref="T:System.CodeDom.CodeCatchClause" /> array to the end of the collection.</summary>
      <param name="value">An array of type <see cref="T:System.CodeDom.CodeCatchClause" /> that contains the objects to add to the collection. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="value" /> is null.</exception>
    </member>
    <member name="M:System.CodeDom.CodeCatchClauseCollection.AddRange(System.CodeDom.CodeCatchClauseCollection)">
      <summary>Copies the contents of another <see cref="T:System.CodeDom.CodeCatchClauseCollection" /> object to the end of the collection.</summary>
      <param name="value">A <see cref="T:System.CodeDom.CodeCatchClauseCollection" /> that contains the objects to add to the collection. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="value" /> is null.</exception>
    </member>
    <member name="M:System.CodeDom.CodeCatchClauseCollection.Contains(System.CodeDom.CodeCatchClause)">
      <summary>Gets a value that indicates whether the collection contains the specified <see cref="T:System.CodeDom.CodeCatchClause" /> object.</summary>
      <returns>true if the collection contains the specified object; otherwise, false.</returns>
      <param name="value">The <see cref="T:System.CodeDom.CodeCatchClause" /> object to locate in the collection. </param>
    </member>
    <member name="M:System.CodeDom.CodeCatchClauseCollection.CopyTo(System.CodeDom.CodeCatchClause[],System.Int32)">
      <summary>Copies the collection objects to a one-dimensional <see cref="T:System.Array" /> instance beginning at the specified index.</summary>
      <param name="array">The one-dimensional <see cref="T:System.Array" /> that is the destination of the values copied from the collection. </param>
      <param name="index">The index of the array at which to begin inserting. </param>
      <exception cref="T:System.ArgumentException">The destination array is multidimensional.-or- The number of elements in the <see cref="T:System.CodeDom.CodeCatchClauseCollection" /> is greater than the available space between the index of the target array specified by the <paramref name="index" /> parameter and the end of the target array. </exception>
      <exception cref="T:System.ArgumentNullException">The <paramref name="array" /> parameter is null. </exception>
      <exception cref="T:System.ArgumentOutOfRangeException">The <paramref name="index" /> parameter is less than the target array's minimum index. </exception>
    </member>
    <member name="M:System.CodeDom.CodeCatchClauseCollection.IndexOf(System.CodeDom.CodeCatchClause)">
      <summary>Gets the index of the specified <see cref="T:System.CodeDom.CodeCatchClause" /> object in the collection, if it exists in the collection.</summary>
      <returns>The index of the specified object, if found, in the collection; otherwise, -1.</returns>
      <param name="value">The <see cref="T:System.CodeDom.CodeCatchClause" /> object to locate in the collection. </param>
    </member>
    <member name="M:System.CodeDom.CodeCatchClauseCollection.Insert(System.Int32,System.CodeDom.CodeCatchClause)">
      <summary>Inserts the specified <see cref="T:System.CodeDom.CodeCatchClause" /> object into the collection at the specified index.</summary>
      <param name="index">The zero-based index where the specified object should be inserted. </param>
      <param name="value">The <see cref="T:System.CodeDom.CodeCatchClause" /> object to insert. </param>
    </member>
    <member name="P:System.CodeDom.CodeCatchClauseCollection.Item(System.Int32)">
      <summary>Gets or sets the <see cref="T:System.CodeDom.CodeCatchClause" /> object at the specified index in the collection.</summary>
      <returns>A <see cref="T:System.CodeDom.CodeCatchClause" /> object at each valid index.</returns>
      <param name="index">The index of the collection to access. </param>
      <exception cref="T:System.ArgumentOutOfRangeException">The <paramref name="index" /> parameter is outside the valid range of indexes for the collection. </exception>
    </member>
    <member name="M:System.CodeDom.CodeCatchClauseCollection.Remove(System.CodeDom.CodeCatchClause)">
      <summary>Removes the specified <see cref="T:System.CodeDom.CodeCatchClause" /> object from the collection.</summary>
      <param name="value">The <see cref="T:System.CodeDom.CodeCatchClause" /> object to remove from the collection. </param>
      <exception cref="T:System.ArgumentException">The specified object is not found in the collection. </exception>
    </member>
    <member name="T:System.CodeDom.CodeChecksumPragma">
      <summary>Represents a code checksum pragma code entity.  </summary>
    </member>
    <member name="M:System.CodeDom.CodeChecksumPragma.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.CodeDom.CodeChecksumPragma" /> class. </summary>
    </member>
    <member name="M:System.CodeDom.CodeChecksumPragma.#ctor(System.String,System.Guid,System.Byte[])">
      <summary>Initializes a new instance of the <see cref="T:System.CodeDom.CodeChecksumPragma" /> class using a file name, a GUID representing the checksum algorithm, and a byte stream representing the checksum data.</summary>
      <param name="fileName">The path to the checksum file.</param>
      <param name="checksumAlgorithmId">A <see cref="T:System.Guid" /> that identifies the checksum algorithm to use.</param>
      <param name="checksumData">A byte array that contains the checksum data.</param>
    </member>
    <member name="P:System.CodeDom.CodeChecksumPragma.ChecksumAlgorithmId">
      <summary>Gets or sets a GUID that identifies the checksum algorithm to use.</summary>
      <returns>A <see cref="T:System.Guid" /> that identifies the checksum algorithm to use.</returns>
    </member>
    <member name="P:System.CodeDom.CodeChecksumPragma.ChecksumData">
      <summary>Gets or sets the value of the data for the checksum calculation.</summary>
      <returns>A byte array that contains the data for the checksum calculation.</returns>
    </member>
    <member name="P:System.CodeDom.CodeChecksumPragma.FileName">
      <summary>Gets or sets the path to the checksum file.</summary>
      <returns>The path to the checksum file.</returns>
    </member>
    <member name="T:System.CodeDom.CodeComment">
      <summary>Represents a comment.</summary>
    </member>
    <member name="M:System.CodeDom.CodeComment.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.CodeDom.CodeComment" /> class.</summary>
    </member>
    <member name="M:System.CodeDom.CodeComment.#ctor(System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.CodeDom.CodeComment" /> class with the specified text as contents.</summary>
      <param name="text">The contents of the comment. </param>
    </member>
    <member name="M:System.CodeDom.CodeComment.#ctor(System.String,System.Boolean)">
      <summary>Initializes a new instance of the <see cref="T:System.CodeDom.CodeComment" /> class using the specified text and documentation comment flag.</summary>
      <param name="text">The contents of the comment. </param>
      <param name="docComment">true if the comment is a documentation comment; otherwise, false. </param>
    </member>
    <member name="P:System.CodeDom.CodeComment.DocComment">
      <summary>Gets or sets a value that indicates whether the comment is a documentation comment.</summary>
      <returns>true if the comment is a documentation comment; otherwise, false.</returns>
    </member>
    <member name="P:System.CodeDom.CodeComment.Text">
      <summary>Gets or sets the text of the comment.</summary>
      <returns>A string containing the comment text.</returns>
    </member>
    <member name="T:System.CodeDom.CodeCommentStatement">
      <summary>Represents a statement consisting of a single comment.</summary>
    </member>
    <member name="M:System.CodeDom.CodeCommentStatement.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.CodeDom.CodeCommentStatement" /> class.</summary>
    </member>
    <member name="M:System.CodeDom.CodeCommentStatement.#ctor(System.CodeDom.CodeComment)">
      <summary>Initializes a new instance of the <see cref="T:System.CodeDom.CodeCommentStatement" /> class using the specified comment.</summary>
      <param name="comment">A <see cref="T:System.CodeDom.CodeComment" /> that indicates the comment. </param>
    </member>
    <member name="M:System.CodeDom.CodeCommentStatement.#ctor(System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.CodeDom.CodeCommentStatement" /> class using the specified text as contents.</summary>
      <param name="text">The contents of the comment. </param>
    </member>
    <member name="M:System.CodeDom.CodeCommentStatement.#ctor(System.String,System.Boolean)">
      <summary>Initializes a new instance of the <see cref="T:System.CodeDom.CodeCommentStatement" /> class using the specified text and documentation comment flag.</summary>
      <param name="text">The contents of the comment. </param>
      <param name="docComment">true if the comment is a documentation comment; otherwise, false. </param>
    </member>
    <member name="P:System.CodeDom.CodeCommentStatement.Comment">
      <summary>Gets or sets the contents of the comment.</summary>
      <returns>A <see cref="T:System.CodeDom.CodeComment" /> that indicates the comment.</returns>
    </member>
    <member name="T:System.CodeDom.CodeCommentStatementCollection">
      <summary>Represents a collection of <see cref="T:System.CodeDom.CodeCommentStatement" /> objects.</summary>
    </member>
    <member name="M:System.CodeDom.CodeCommentStatementCollection.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.CodeDom.CodeCommentStatementCollection" /> class.</summary>
    </member>
    <member name="M:System.CodeDom.CodeCommentStatementCollection.#ctor(System.CodeDom.CodeCommentStatement[])">
      <summary>Initializes a new instance of the <see cref="T:System.CodeDom.CodeCommentStatementCollection" /> class containing the specified array of <see cref="T:System.CodeDom.CodeCommentStatement" /> objects.</summary>
      <param name="value">An array of <see cref="T:System.CodeDom.CodeCommentStatement" /> objects with which to initialize the collection. </param>
      <exception cref="T:System.ArgumentNullException">One or more objects in the array are null.</exception>
    </member>
    <member name="M:System.CodeDom.CodeCommentStatementCollection.#ctor(System.CodeDom.CodeCommentStatementCollection)">
      <summary>Initializes a new instance of the <see cref="T:System.CodeDom.CodeCommentStatementCollection" /> class containing the elements of the specified source collection.</summary>
      <param name="value">A <see cref="T:System.CodeDom.CodeCommentStatementCollection" /> with which to initialize the collection. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="value" /> is null.</exception>
    </member>
    <member name="M:System.CodeDom.CodeCommentStatementCollection.Add(System.CodeDom.CodeCommentStatement)">
      <summary>Adds the specified <see cref="T:System.CodeDom.CodeCommentStatement" /> object to the collection.</summary>
      <returns>The index at which the new element was inserted.</returns>
      <param name="value">The <see cref="T:System.CodeDom.CodeCommentStatement" /> object to add. </param>
    </member>
    <member name="M:System.CodeDom.CodeCommentStatementCollection.AddRange(System.CodeDom.CodeCommentStatement[])">
      <summary>Copies the elements of the specified <see cref="T:System.CodeDom.CodeCommentStatement" /> array to the end of the collection.</summary>
      <param name="value">An array of type <see cref="T:System.CodeDom.CodeCommentStatement" /> that contains the objects to add to the collection. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="value" /> is null.</exception>
    </member>
    <member name="M:System.CodeDom.CodeCommentStatementCollection.AddRange(System.CodeDom.CodeCommentStatementCollection)">
      <summary>Copies the contents of another <see cref="T:System.CodeDom.CodeCommentStatementCollection" /> object to the end of the collection.</summary>
      <param name="value">A <see cref="T:System.CodeDom.CodeCommentStatementCollection" /> that contains the objects to add to the collection. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="value" /> is null.</exception>
    </member>
    <member name="M:System.CodeDom.CodeCommentStatementCollection.Contains(System.CodeDom.CodeCommentStatement)">
      <summary>Gets a value that indicates whether the collection contains the specified <see cref="T:System.CodeDom.CodeCommentStatement" /> object.</summary>
      <returns>true if the collection contains the specified object; otherwise, false.</returns>
      <param name="value">The <see cref="T:System.CodeDom.CodeCommentStatement" /> to search for in the collection. </param>
    </member>
    <member name="M:System.CodeDom.CodeCommentStatementCollection.CopyTo(System.CodeDom.CodeCommentStatement[],System.Int32)">
      <summary>Copies the collection objects to the specified one-dimensional <see cref="T:System.Array" /> beginning at the specified index.</summary>
      <param name="array">The one-dimensional <see cref="T:System.Array" /> that is the destination of the values copied from the collection. </param>
      <param name="index">The index of the array at which to begin inserting. </param>
      <exception cref="T:System.ArgumentException">The destination array is multidimensional.-or- The number of elements in the <see cref="T:System.CodeDom.CodeCommentStatementCollection" /> is greater than the available space between the index of the target array specified by the <paramref name="index" /> parameter and the end of the target array. </exception>
      <exception cref="T:System.ArgumentNullException">The <paramref name="array" /> parameter is null. </exception>
      <exception cref="T:System.ArgumentOutOfRangeException">The <paramref name="index" /> parameter is less than the target array's minimum index. </exception>
    </member>
    <member name="M:System.CodeDom.CodeCommentStatementCollection.IndexOf(System.CodeDom.CodeCommentStatement)">
      <summary>Gets the index of the specified <see cref="T:System.CodeDom.CodeCommentStatement" /> object in the collection, if it exists in the collection.</summary>
      <returns>The index of the specified object, if found, in the collection; otherwise, -1.</returns>
      <param name="value">The <see cref="T:System.CodeDom.CodeCommentStatement" /> object to locate. </param>
    </member>
    <member name="M:System.CodeDom.CodeCommentStatementCollection.Insert(System.Int32,System.CodeDom.CodeCommentStatement)">
      <summary>Inserts a <see cref="T:System.CodeDom.CodeCommentStatement" /> object into the collection at the specified index.</summary>
      <param name="index">The zero-based index where the item should be inserted. </param>
      <param name="value">The <see cref="T:System.CodeDom.CodeCommentStatement" /> object to insert. </param>
    </member>
    <member name="P:System.CodeDom.CodeCommentStatementCollection.Item(System.Int32)">
      <summary>Gets or sets the <see cref="T:System.CodeDom.CodeCommentStatement" /> object at the specified index in the collection.</summary>
      <returns>A <see cref="T:System.CodeDom.CodeCommentStatement" /> object at each valid index.</returns>
      <param name="index">The index of the collection to access. </param>
      <exception cref="T:System.ArgumentOutOfRangeException">The <paramref name="index" /> parameter is outside the valid range of indexes for the collection. </exception>
    </member>
    <member name="M:System.CodeDom.CodeCommentStatementCollection.Remove(System.CodeDom.CodeCommentStatement)">
      <summary>Removes the specified <see cref="T:System.CodeDom.CodeCommentStatement" /> object from the collection.</summary>
      <param name="value">The <see cref="T:System.CodeDom.CodeCommentStatement" /> object to remove from the collection. </param>
      <exception cref="T:System.ArgumentException">The specified object is not found in the collection. </exception>
    </member>
    <member name="T:System.CodeDom.CodeCompileUnit">
      <summary>Provides a container for a CodeDOM program graph.</summary>
    </member>
    <member name="M:System.CodeDom.CodeCompileUnit.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.CodeDom.CodeCompileUnit" /> class.</summary>
    </member>
    <member name="P:System.CodeDom.CodeCompileUnit.AssemblyCustomAttributes">
      <summary>Gets a collection of custom attributes for the generated assembly.</summary>
      <returns>A <see cref="T:System.CodeDom.CodeAttributeDeclarationCollection" /> that indicates the custom attributes for the generated assembly.</returns>
    </member>
    <member name="P:System.CodeDom.CodeCompileUnit.EndDirectives">
      <summary>Gets a <see cref="T:System.CodeDom.CodeDirectiveCollection" /> object containing end directives.</summary>
      <returns>A <see cref="T:System.CodeDom.CodeDirectiveCollection" /> object containing end directives.</returns>
    </member>
    <member name="P:System.CodeDom.CodeCompileUnit.Namespaces">
      <summary>Gets the collection of namespaces.</summary>
      <returns>A <see cref="T:System.CodeDom.CodeNamespaceCollection" /> that indicates the namespaces that the compile unit uses.</returns>
    </member>
    <member name="P:System.CodeDom.CodeCompileUnit.ReferencedAssemblies">
      <summary>Gets the referenced assemblies.</summary>
      <returns>A <see cref="T:System.Collections.Specialized.StringCollection" /> that contains the file names of the referenced assemblies.</returns>
    </member>
    <member name="P:System.CodeDom.CodeCompileUnit.StartDirectives">
      <summary>Gets a <see cref="T:System.CodeDom.CodeDirectiveCollection" /> object containing start directives.</summary>
      <returns>A <see cref="T:System.CodeDom.CodeDirectiveCollection" /> object containing start directives.</returns>
    </member>
    <member name="T:System.CodeDom.CodeConditionStatement">
      <summary>Represents a conditional branch statement, typically represented as an if statement.</summary>
    </member>
    <member name="M:System.CodeDom.CodeConditionStatement.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.CodeDom.CodeConditionStatement" /> class.</summary>
    </member>
    <member name="M:System.CodeDom.CodeConditionStatement.#ctor(System.CodeDom.CodeExpression,System.CodeDom.CodeStatement[])">
      <summary>Initializes a new instance of the <see cref="T:System.CodeDom.CodeConditionStatement" /> class using the specified condition and statements.</summary>
      <param name="condition">A <see cref="T:System.CodeDom.CodeExpression" /> that indicates the expression to evaluate. </param>
      <param name="trueStatements">An array of type <see cref="T:System.CodeDom.CodeStatement" /> containing the statements to execute if the condition is true. </param>
    </member>
    <member name="M:System.CodeDom.CodeConditionStatement.#ctor(System.CodeDom.CodeExpression,System.CodeDom.CodeStatement[],System.CodeDom.CodeStatement[])">
      <summary>Initializes a new instance of the <see cref="T:System.CodeDom.CodeConditionStatement" /> class using the specified condition and statements.</summary>
      <param name="condition">A <see cref="T:System.CodeDom.CodeExpression" /> that indicates the condition to evaluate. </param>
      <param name="trueStatements">An array of type <see cref="T:System.CodeDom.CodeStatement" /> containing the statements to execute if the condition is true. </param>
      <param name="falseStatements">An array of type <see cref="T:System.CodeDom.CodeStatement" /> containing the statements to execute if the condition is false. </param>
    </member>
    <member name="P:System.CodeDom.CodeConditionStatement.Condition">
      <summary>Gets or sets the expression to evaluate true or false.</summary>
      <returns>A <see cref="T:System.CodeDom.CodeExpression" /> to evaluate true or false.</returns>
    </member>
    <member name="P:System.CodeDom.CodeConditionStatement.FalseStatements">
      <summary>Gets the collection of statements to execute if the conditional expression evaluates to false.</summary>
      <returns>A <see cref="T:System.CodeDom.CodeStatementCollection" /> containing the statements to execute if the conditional expression evaluates to false.</returns>
    </member>
    <member name="P:System.CodeDom.CodeConditionStatement.TrueStatements">
      <summary>Gets the collection of statements to execute if the conditional expression evaluates to true.</summary>
      <returns>A <see cref="T:System.CodeDom.CodeStatementCollection" /> containing the statements to execute if the conditional expression evaluates to true.</returns>
    </member>
    <member name="T:System.CodeDom.CodeConstructor">
      <summary>Represents a declaration for an instance constructor of a type.</summary>
    </member>
    <member name="M:System.CodeDom.CodeConstructor.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.CodeDom.CodeConstructor" /> class.</summary>
    </member>
    <member name="P:System.CodeDom.CodeConstructor.BaseConstructorArgs">
      <summary>Gets the collection of base constructor arguments.</summary>
      <returns>A <see cref="T:System.CodeDom.CodeExpressionCollection" /> that contains the base constructor arguments.</returns>
    </member>
    <member name="P:System.CodeDom.CodeConstructor.ChainedConstructorArgs">
      <summary>Gets the collection of chained constructor arguments.</summary>
      <returns>A <see cref="T:System.CodeDom.CodeExpressionCollection" /> that contains the chained constructor arguments.</returns>
    </member>
    <member name="T:System.CodeDom.CodeDefaultValueExpression">
      <summary>Represents a reference to a default value.</summary>
    </member>
    <member name="M:System.CodeDom.CodeDefaultValueExpression.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.CodeDom.CodeDefaultValueExpression" /> class. </summary>
    </member>
    <member name="M:System.CodeDom.CodeDefaultValueExpression.#ctor(System.CodeDom.CodeTypeReference)">
      <summary>Initializes a new instance of the <see cref="T:System.CodeDom.CodeDefaultValueExpression" /> class using the specified code type reference.</summary>
      <param name="type">A <see cref="T:System.CodeDom.CodeTypeReference" /> that specifies the reference to a value type.</param>
    </member>
    <member name="P:System.CodeDom.CodeDefaultValueExpression.Type">
      <summary>Gets or sets the data type reference for a default value.</summary>
      <returns>A <see cref="T:System.CodeDom.CodeTypeReference" /> object representing a data type that has a default value.</returns>
    </member>
    <member name="T:System.CodeDom.CodeDelegateCreateExpression">
      <summary>Represents an expression that creates a delegate.</summary>
    </member>
    <member name="M:System.CodeDom.CodeDelegateCreateExpression.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.CodeDom.CodeDelegateCreateExpression" /> class.</summary>
    </member>
    <member name="M:System.CodeDom.CodeDelegateCreateExpression.#ctor(System.CodeDom.CodeTypeReference,System.CodeDom.CodeExpression,System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.CodeDom.CodeDelegateCreateExpression" /> class.</summary>
      <param name="delegateType">A <see cref="T:System.CodeDom.CodeTypeReference" /> that indicates the data type of the delegate. </param>
      <param name="targetObject">A <see cref="T:System.CodeDom.CodeExpression" /> that indicates the object containing the event-handler method. </param>
      <param name="methodName">The name of the event-handler method. </param>
    </member>
    <member name="P:System.CodeDom.CodeDelegateCreateExpression.DelegateType">
      <summary>Gets or sets the data type of the delegate.</summary>
      <returns>A <see cref="T:System.CodeDom.CodeTypeReference" /> that indicates the data type of the delegate.</returns>
    </member>
    <member name="P:System.CodeDom.CodeDelegateCreateExpression.MethodName">
      <summary>Gets or sets the name of the event handler method.</summary>
      <returns>The name of the event handler method.</returns>
    </member>
    <member name="P:System.CodeDom.CodeDelegateCreateExpression.TargetObject">
      <summary>Gets or sets the object that contains the event-handler method.</summary>
      <returns>A <see cref="T:System.CodeDom.CodeExpression" /> that indicates the object containing the event-handler method.</returns>
    </member>
    <member name="T:System.CodeDom.CodeDelegateInvokeExpression">
      <summary>Represents an expression that raises an event.</summary>
    </member>
    <member name="M:System.CodeDom.CodeDelegateInvokeExpression.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.CodeDom.CodeDelegateInvokeExpression" /> class.</summary>
    </member>
    <member name="M:System.CodeDom.CodeDelegateInvokeExpression.#ctor(System.CodeDom.CodeExpression)">
      <summary>Initializes a new instance of the <see cref="T:System.CodeDom.CodeDelegateInvokeExpression" /> class using the specified target object.</summary>
      <param name="targetObject">A <see cref="T:System.CodeDom.CodeExpression" /> that indicates the target object. </param>
    </member>
    <member name="M:System.CodeDom.CodeDelegateInvokeExpression.#ctor(System.CodeDom.CodeExpression,System.CodeDom.CodeExpression[])">
      <summary>Initializes a new instance of the <see cref="T:System.CodeDom.CodeDelegateInvokeExpression" /> class using the specified target object and parameters.</summary>
      <param name="targetObject">A <see cref="T:System.CodeDom.CodeExpression" /> that indicates the target object. </param>
      <param name="parameters">An array of <see cref="T:System.CodeDom.CodeExpression" /> objects that indicate the parameters. </param>
    </member>
    <member name="P:System.CodeDom.CodeDelegateInvokeExpression.Parameters">
      <summary>Gets or sets the parameters to pass to the event handling methods attached to the event.</summary>
      <returns>A <see cref="T:System.CodeDom.CodeExpression" /> that indicates the parameters to pass to the event handling methods attached to the event.</returns>
    </member>
    <member name="P:System.CodeDom.CodeDelegateInvokeExpression.TargetObject">
      <summary>Gets or sets the event to invoke.</summary>
      <returns>A <see cref="T:System.CodeDom.CodeExpression" /> that indicates the event to invoke.</returns>
    </member>
    <member name="T:System.CodeDom.CodeDirectionExpression">
      <summary>Represents an expression used as a method invoke parameter along with a reference direction indicator.</summary>
    </member>
    <member name="M:System.CodeDom.CodeDirectionExpression.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.CodeDom.CodeDirectionExpression" /> class.</summary>
    </member>
    <member name="M:System.CodeDom.CodeDirectionExpression.#ctor(System.CodeDom.FieldDirection,System.CodeDom.CodeExpression)">
      <summary>Initializes a new instance of the <see cref="T:System.CodeDom.CodeDirectionExpression" /> class using the specified field direction and expression.</summary>
      <param name="direction">A <see cref="T:System.CodeDom.FieldDirection" /> that indicates the field direction of the expression. </param>
      <param name="expression">A <see cref="T:System.CodeDom.CodeExpression" /> that indicates the code expression to represent. </param>
    </member>
    <member name="P:System.CodeDom.CodeDirectionExpression.Direction">
      <summary>Gets or sets the field direction for this direction expression.</summary>
      <returns>A <see cref="T:System.CodeDom.FieldDirection" /> that indicates the field direction for this direction expression.</returns>
    </member>
    <member name="P:System.CodeDom.CodeDirectionExpression.Expression">
      <summary>Gets or sets the code expression to represent.</summary>
      <returns>A <see cref="T:System.CodeDom.CodeExpression" /> that indicates the expression to represent.</returns>
    </member>
    <member name="T:System.CodeDom.CodeDirective">
      <summary>Serves as the base class for code directive classes.</summary>
    </member>
    <member name="M:System.CodeDom.CodeDirective.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.CodeDom.CodeDirective" /> class. </summary>
    </member>
    <member name="T:System.CodeDom.CodeDirectiveCollection">
      <summary>Represents a collection of <see cref="T:System.CodeDom.CodeDirective" /> objects.</summary>
    </member>
    <member name="M:System.CodeDom.CodeDirectiveCollection.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.CodeDom.CodeDirectiveCollection" /> class. </summary>
    </member>
    <member name="M:System.CodeDom.CodeDirectiveCollection.#ctor(System.CodeDom.CodeDirective[])">
      <summary>Initializes a new instance of the <see cref="T:System.CodeDom.CodeDirectiveCollection" /> class with the code directive objects in the specified array. </summary>
      <param name="value">An array of <see cref="T:System.CodeDom.CodeDirective" /> objects with which to initialize the collection.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="value" /> is null.</exception>
    </member>
    <member name="M:System.CodeDom.CodeDirectiveCollection.#ctor(System.CodeDom.CodeDirectiveCollection)">
      <summary>Initializes a new instance of the <see cref="T:System.CodeDom.CodeDirectiveCollection" /> class with the elements in the specified code directive collection.</summary>
      <param name="value">A <see cref="T:System.CodeDom.CodeDirectiveCollection" /> object with which to initialize the collection.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="value" /> is null.</exception>
    </member>
    <member name="M:System.CodeDom.CodeDirectiveCollection.Add(System.CodeDom.CodeDirective)">
      <summary>Adds the specified <see cref="T:System.CodeDom.CodeDirective" /> object to the collection.</summary>
      <returns>The index position at which the new element was inserted.</returns>
      <param name="value">The <see cref="T:System.CodeDom.CodeDirective" /> object to add.</param>
    </member>
    <member name="M:System.CodeDom.CodeDirectiveCollection.AddRange(System.CodeDom.CodeDirective[])">
      <summary>Adds an array of <see cref="T:System.CodeDom.CodeDirective" /> objects to the end of the collection.</summary>
      <param name="value">An array of <see cref="T:System.CodeDom.CodeDirective" /> objects to add to the collection.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="value" /> is null.</exception>
    </member>
    <member name="M:System.CodeDom.CodeDirectiveCollection.AddRange(System.CodeDom.CodeDirectiveCollection)">
      <summary>Adds the contents of the specified <see cref="T:System.CodeDom.CodeDirectiveCollection" /> object to the end of the collection.</summary>
      <param name="value">A <see cref="T:System.CodeDom.CodeDirectiveCollection" /> object containing the <see cref="T:System.CodeDom.CodeDirective" /> objects to add to the collection.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="value" /> is null.</exception>
    </member>
    <member name="M:System.CodeDom.CodeDirectiveCollection.Contains(System.CodeDom.CodeDirective)">
      <summary>Gets a value indicating whether the collection contains the specified <see cref="T:System.CodeDom.CodeDirective" /> object.</summary>
      <returns>true if the collection contains the specified object; otherwise, false.</returns>
      <param name="value">The <see cref="T:System.CodeDom.CodeDirective" /> object to search for in the collection.</param>
    </member>
    <member name="M:System.CodeDom.CodeDirectiveCollection.CopyTo(System.CodeDom.CodeDirective[],System.Int32)">
      <summary>Copies the contents of the collection to a one-dimensional array beginning at the specified index.</summary>
      <param name="array">An array of type <see cref="T:System.CodeDom.CodeDirective" /> that is the destination of the values copied from the collection. </param>
      <param name="index">The index in the array at which to begin inserting collection objects. </param>
      <exception cref="T:System.ArgumentException">The destination array is multidimensional.-or- The number of elements in the <see cref="T:System.CodeDom.CodeDirectiveCollection" /> is greater than the available space between the index of the target array specified by <paramref name="index" /> and the end of the target array. </exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="array" /> is null. </exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> is less than the target array's minimum index. </exception>
    </member>
    <member name="M:System.CodeDom.CodeDirectiveCollection.IndexOf(System.CodeDom.CodeDirective)">
      <summary>Gets the index in the collection of the specified <see cref="T:System.CodeDom.CodeDirective" /> object, if it exists in the collection.</summary>
      <returns>The index position in the collection of the specified object, if found; otherwise, -1.</returns>
      <param name="value">The <see cref="T:System.CodeDom.CodeDirective" /> object to locate in the collection.</param>
    </member>
    <member name="M:System.CodeDom.CodeDirectiveCollection.Insert(System.Int32,System.CodeDom.CodeDirective)">
      <summary>Inserts the specified <see cref="T:System.CodeDom.CodeDirective" /> object into the collection at the specified index.</summary>
      <param name="index">The zero-based index position where the specified object should be inserted. </param>
      <param name="value">The <see cref="T:System.CodeDom.CodeDirective" /> object to insert. </param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> is less than 0. -or-<paramref name="index" /> is greater than <see cref="P:System.Collections.CollectionBase.Count" />.</exception>
    </member>
    <member name="P:System.CodeDom.CodeDirectiveCollection.Item(System.Int32)">
      <summary>Gets or sets the <see cref="T:System.CodeDom.CodeDirective" /> object at the specified index in the collection.</summary>
      <returns>The <see cref="T:System.CodeDom.CodeDirective" /> at the index position.</returns>
      <param name="index">The index position to access.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> is outside the valid range of index positions for the collection. </exception>
    </member>
    <member name="M:System.CodeDom.CodeDirectiveCollection.Remove(System.CodeDom.CodeDirective)">
      <summary>Removes the specified <see cref="T:System.CodeDom.CodeDirective" /> object from the collection.</summary>
      <param name="value">The <see cref="T:System.CodeDom.CodeDirective" /> object to remove from the collection.</param>
      <exception cref="T:System.ArgumentException">The specified object is not found in the collection. </exception>
    </member>
    <member name="T:System.CodeDom.CodeEntryPointMethod">
      <summary>Represents the entry point method of an executable.</summary>
    </member>
    <member name="M:System.CodeDom.CodeEntryPointMethod.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.CodeDom.CodeEntryPointMethod" /> class.</summary>
    </member>
    <member name="T:System.CodeDom.CodeEventReferenceExpression">
      <summary>Represents a reference to an event.</summary>
    </member>
    <member name="M:System.CodeDom.CodeEventReferenceExpression.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.CodeDom.CodeEventReferenceExpression" /> class.</summary>
    </member>
    <member name="M:System.CodeDom.CodeEventReferenceExpression.#ctor(System.CodeDom.CodeExpression,System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.CodeDom.CodeEventReferenceExpression" /> class using the specified target object and event name.</summary>
      <param name="targetObject">A <see cref="T:System.CodeDom.CodeExpression" /> that indicates the object that contains the event. </param>
      <param name="eventName">The name of the event to reference. </param>
    </member>
    <member name="P:System.CodeDom.CodeEventReferenceExpression.EventName">
      <summary>Gets or sets the name of the event.</summary>
      <returns>The name of the event.</returns>
    </member>
    <member name="P:System.CodeDom.CodeEventReferenceExpression.TargetObject">
      <summary>Gets or sets the object that contains the event.</summary>
      <returns>A <see cref="T:System.CodeDom.CodeExpression" /> that indicates the object that contains the event.</returns>
    </member>
    <member name="T:System.CodeDom.CodeExpression">
      <summary>Represents a code expression. This is a base class for other code expression objects that is never instantiated.</summary>
    </member>
    <member name="M:System.CodeDom.CodeExpression.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.CodeDom.CodeExpression" /> class. </summary>
    </member>
    <member name="T:System.CodeDom.CodeExpressionCollection">
      <summary>Represents a collection of <see cref="T:System.CodeDom.CodeExpression" /> objects.</summary>
    </member>
    <member name="M:System.CodeDom.CodeExpressionCollection.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.CodeDom.CodeExpressionCollection" /> class.</summary>
    </member>
    <member name="M:System.CodeDom.CodeExpressionCollection.#ctor(System.CodeDom.CodeExpression[])">
      <summary>Initializes a new instance of the <see cref="T:System.CodeDom.CodeExpressionCollection" /> class containing the specified array of <see cref="T:System.CodeDom.CodeExpression" /> objects.</summary>
      <param name="value">An array of <see cref="T:System.CodeDom.CodeExpression" /> objects with which to initialize the collection. </param>
      <exception cref="T:System.ArgumentNullException">One or more objects in the array are null.</exception>
    </member>
    <member name="M:System.CodeDom.CodeExpressionCollection.#ctor(System.CodeDom.CodeExpressionCollection)">
      <summary>Initializes a new instance of the <see cref="T:System.CodeDom.CodeExpressionCollection" /> class containing the elements of the specified source collection.</summary>
      <param name="value">A <see cref="T:System.CodeDom.CodeExpressionCollection" /> with which to initialize the collection. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="value" /> is null.</exception>
    </member>
    <member name="M:System.CodeDom.CodeExpressionCollection.Add(System.CodeDom.CodeExpression)">
      <summary>Adds the specified <see cref="T:System.CodeDom.CodeExpression" /> object to the collection.</summary>
      <returns>The index at which the new element was inserted.</returns>
      <param name="value">The <see cref="T:System.CodeDom.CodeExpression" /> object to add. </param>
    </member>
    <member name="M:System.CodeDom.CodeExpressionCollection.AddRange(System.CodeDom.CodeExpression[])">
      <summary>Copies the elements of the specified array to the end of the collection.</summary>
      <param name="value">An array of type <see cref="T:System.CodeDom.CodeExpression" /> that contains the objects to add to the collection. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="value" /> is null.</exception>
    </member>
    <member name="M:System.CodeDom.CodeExpressionCollection.AddRange(System.CodeDom.CodeExpressionCollection)">
      <summary>Copies the contents of another <see cref="T:System.CodeDom.CodeExpressionCollection" /> object to the end of the collection.</summary>
      <param name="value">A <see cref="T:System.CodeDom.CodeExpressionCollection" /> that contains the objects to add to the collection. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="value" /> is null.</exception>
    </member>
    <member name="M:System.CodeDom.CodeExpressionCollection.Contains(System.CodeDom.CodeExpression)">
      <summary>Gets a value that indicates whether the collection contains the specified <see cref="T:System.CodeDom.CodeExpression" /> object.</summary>
      <returns>true if the collection contains the specified object; otherwise, false.</returns>
      <param name="value">The <see cref="T:System.CodeDom.CodeExpression" /> object to locate in the collection. </param>
    </member>
    <member name="M:System.CodeDom.CodeExpressionCollection.CopyTo(System.CodeDom.CodeExpression[],System.Int32)">
      <summary>Copies the collection objects to a one-dimensional <see cref="T:System.Array" /> instance beginning at the specified index.</summary>
      <param name="array">The one-dimensional <see cref="T:System.Array" /> that is the destination of the values copied from the collection. </param>
      <param name="index">The index of the array at which to begin inserting. </param>
      <exception cref="T:System.ArgumentException">The destination array is multidimensional.-or- The number of elements in the <see cref="T:System.CodeDom.CodeExpressionCollection" /> is greater than the available space between the index of the target array specified by the <paramref name="index" /> parameter and the end of the target array. </exception>
      <exception cref="T:System.ArgumentNullException">The <paramref name="array" /> parameter is null. </exception>
      <exception cref="T:System.ArgumentOutOfRangeException">The <paramref name="index" /> parameter is less than the target array's minimum index. </exception>
    </member>
    <member name="M:System.CodeDom.CodeExpressionCollection.IndexOf(System.CodeDom.CodeExpression)">
      <summary>Gets the index of the specified <see cref="T:System.CodeDom.CodeExpression" /> object in the collection, if it exists in the collection.</summary>
      <returns>The index of the specified object, if found, in the collection; otherwise, -1.</returns>
      <param name="value">The <see cref="T:System.CodeDom.CodeExpression" /> object to locate in the collection. </param>
    </member>
    <member name="M:System.CodeDom.CodeExpressionCollection.Insert(System.Int32,System.CodeDom.CodeExpression)">
      <summary>Inserts the specified <see cref="T:System.CodeDom.CodeExpression" /> object into the collection at the specified index.</summary>
      <param name="index">The zero-based index where the specified object should be inserted. </param>
      <param name="value">The <see cref="T:System.CodeDom.CodeExpression" /> object to insert. </param>
    </member>
    <member name="P:System.CodeDom.CodeExpressionCollection.Item(System.Int32)">
      <summary>Gets or sets the <see cref="T:System.CodeDom.CodeExpression" /> object at the specified index in the collection.</summary>
      <returns>A <see cref="T:System.CodeDom.CodeExpression" /> object at each valid index.</returns>
      <param name="index">The zero-based index of the collection to access. </param>
      <exception cref="T:System.ArgumentOutOfRangeException">The <paramref name="index" /> parameter is outside the valid range of indexes for the collection. </exception>
    </member>
    <member name="M:System.CodeDom.CodeExpressionCollection.Remove(System.CodeDom.CodeExpression)">
      <summary>Removes the specified <see cref="T:System.CodeDom.CodeExpression" /> object from the collection.</summary>
      <param name="value">The <see cref="T:System.CodeDom.CodeExpression" /> object to remove from the collection. </param>
      <exception cref="T:System.ArgumentException">The specified object is not found in the collection. </exception>
    </member>
    <member name="T:System.CodeDom.CodeExpressionStatement">
      <summary>Represents a statement that consists of a single expression.</summary>
    </member>
    <member name="M:System.CodeDom.CodeExpressionStatement.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.CodeDom.CodeExpressionStatement" /> class.</summary>
    </member>
    <member name="M:System.CodeDom.CodeExpressionStatement.#ctor(System.CodeDom.CodeExpression)">
      <summary>Initializes a new instance of the <see cref="T:System.CodeDom.CodeExpressionStatement" /> class by using the specified expression.</summary>
      <param name="expression">A <see cref="T:System.CodeDom.CodeExpression" /> for the statement. </param>
    </member>
    <member name="P:System.CodeDom.CodeExpressionStatement.Expression">
      <summary>Gets or sets the expression for the statement.</summary>
      <returns>A <see cref="T:System.CodeDom.CodeExpression" /> that indicates the expression for the statement.</returns>
    </member>
    <member name="T:System.CodeDom.CodeFieldReferenceExpression">
      <summary>Represents a reference to a field.</summary>
    </member>
    <member name="M:System.CodeDom.CodeFieldReferenceExpression.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.CodeDom.CodeFieldReferenceExpression" /> class.</summary>
    </member>
    <member name="M:System.CodeDom.CodeFieldReferenceExpression.#ctor(System.CodeDom.CodeExpression,System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.CodeDom.CodeFieldReferenceExpression" /> class using the specified target object and field name.</summary>
      <param name="targetObject">A <see cref="T:System.CodeDom.CodeExpression" /> that indicates the object that contains the field. </param>
      <param name="fieldName">The name of the field. </param>
    </member>
    <member name="P:System.CodeDom.CodeFieldReferenceExpression.FieldName">
      <summary>Gets or sets the name of the field to reference.</summary>
      <returns>A string containing the field name.</returns>
    </member>
    <member name="P:System.CodeDom.CodeFieldReferenceExpression.TargetObject">
      <summary>Gets or sets the object that contains the field to reference.</summary>
      <returns>A <see cref="T:System.CodeDom.CodeExpression" /> that indicates the object that contains the field to reference.</returns>
    </member>
    <member name="T:System.CodeDom.CodeGotoStatement">
      <summary>Represents a goto statement.</summary>
    </member>
    <member name="M:System.CodeDom.CodeGotoStatement.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.CodeDom.CodeGotoStatement" /> class. </summary>
    </member>
    <member name="M:System.CodeDom.CodeGotoStatement.#ctor(System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.CodeDom.CodeGotoStatement" /> class using the specified label name.</summary>
      <param name="label">The name of the label at which to continue program execution. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="Label" /> is null.</exception>
    </member>
    <member name="P:System.CodeDom.CodeGotoStatement.Label">
      <summary>Gets or sets the name of the label at which to continue program execution.</summary>
      <returns>A string that indicates the name of the label at which to continue program execution.</returns>
      <exception cref="T:System.ArgumentNullException">The label cannot be set because<paramref name=" value" /> is null or an empty string.</exception>
    </member>
    <member name="T:System.CodeDom.CodeIndexerExpression">
      <summary>Represents a reference to an indexer property of an object.</summary>
    </member>
    <member name="M:System.CodeDom.CodeIndexerExpression.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.CodeDom.CodeIndexerExpression" /> class.</summary>
    </member>
    <member name="M:System.CodeDom.CodeIndexerExpression.#ctor(System.CodeDom.CodeExpression,System.CodeDom.CodeExpression[])">
      <summary>Initializes a new instance of the <see cref="T:System.CodeDom.CodeIndexerExpression" /> class using the specified target object and index.</summary>
      <param name="targetObject">The target object. </param>
      <param name="indices">The index or indexes of the indexer expression. </param>
    </member>
    <member name="P:System.CodeDom.CodeIndexerExpression.Indices">
      <summary>Gets the collection of indexes of the indexer expression.</summary>
      <returns>A <see cref="T:System.CodeDom.CodeExpressionCollection" /> that indicates the index or indexes of the indexer expression.</returns>
    </member>
    <member name="P:System.CodeDom.CodeIndexerExpression.TargetObject">
      <summary>Gets or sets the target object that can be indexed.</summary>
      <returns>A <see cref="T:System.CodeDom.CodeExpression" /> that indicates the indexer object.</returns>
    </member>
    <member name="T:System.CodeDom.CodeIterationStatement">
      <summary>Represents a for statement, or a loop through a block of statements, using a test expression as a condition for continuing to loop.</summary>
    </member>
    <member name="M:System.CodeDom.CodeIterationStatement.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.CodeDom.CodeIterationStatement" /> class.</summary>
    </member>
    <member name="M:System.CodeDom.CodeIterationStatement.#ctor(System.CodeDom.CodeStatement,System.CodeDom.CodeExpression,System.CodeDom.CodeStatement,System.CodeDom.CodeStatement[])">
      <summary>Initializes a new instance of the <see cref="T:System.CodeDom.CodeIterationStatement" /> class using the specified parameters.</summary>
      <param name="initStatement">A <see cref="T:System.CodeDom.CodeStatement" /> containing the loop initialization statement. </param>
      <param name="testExpression">A <see cref="T:System.CodeDom.CodeExpression" /> containing the expression to test for exit condition. </param>
      <param name="incrementStatement">A <see cref="T:System.CodeDom.CodeStatement" /> containing the per-cycle increment statement. </param>
      <param name="statements">An array of type <see cref="T:System.CodeDom.CodeStatement" /> containing the statements within the loop. </param>
    </member>
    <member name="P:System.CodeDom.CodeIterationStatement.IncrementStatement">
      <summary>Gets or sets the statement that is called after each loop cycle.</summary>
      <returns>A <see cref="T:System.CodeDom.CodeStatement" /> that indicates the per cycle increment statement.</returns>
    </member>
    <member name="P:System.CodeDom.CodeIterationStatement.InitStatement">
      <summary>Gets or sets the loop initialization statement.</summary>
      <returns>A <see cref="T:System.CodeDom.CodeStatement" /> that indicates the loop initialization statement.</returns>
    </member>
    <member name="P:System.CodeDom.CodeIterationStatement.Statements">
      <summary>Gets the collection of statements to be executed within the loop.</summary>
      <returns>An array of type <see cref="T:System.CodeDom.CodeStatement" /> that indicates the statements within the loop.</returns>
    </member>
    <member name="P:System.CodeDom.CodeIterationStatement.TestExpression">
      <summary>Gets or sets the expression to test as the condition that continues the loop.</summary>
      <returns>A <see cref="T:System.CodeDom.CodeExpression" /> that indicates the expression to test.</returns>
    </member>
    <member name="T:System.CodeDom.CodeLabeledStatement">
      <summary>Represents a labeled statement or a stand-alone label.</summary>
    </member>
    <member name="M:System.CodeDom.CodeLabeledStatement.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.CodeDom.CodeLabeledStatement" /> class.</summary>
    </member>
    <member name="M:System.CodeDom.CodeLabeledStatement.#ctor(System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.CodeDom.CodeLabeledStatement" /> class using the specified label name.</summary>
      <param name="label">The name of the label. </param>
    </member>
    <member name="M:System.CodeDom.CodeLabeledStatement.#ctor(System.String,System.CodeDom.CodeStatement)">
      <summary>Initializes a new instance of the <see cref="T:System.CodeDom.CodeLabeledStatement" /> class using the specified label name and statement.</summary>
      <param name="label">The name of the label. </param>
      <param name="statement">The <see cref="T:System.CodeDom.CodeStatement" /> to associate with the label. </param>
    </member>
    <member name="P:System.CodeDom.CodeLabeledStatement.Label">
      <summary>Gets or sets the name of the label.</summary>
      <returns>The name of the label.</returns>
    </member>
    <member name="P:System.CodeDom.CodeLabeledStatement.Statement">
      <summary>Gets or sets the optional associated statement.</summary>
      <returns>A <see cref="T:System.CodeDom.CodeStatement" /> that indicates the statement associated with the label.</returns>
    </member>
    <member name="T:System.CodeDom.CodeLinePragma">
      <summary>Represents a specific location within a specific file.</summary>
    </member>
    <member name="M:System.CodeDom.CodeLinePragma.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.CodeDom.CodeLinePragma" /> class. </summary>
    </member>
    <member name="M:System.CodeDom.CodeLinePragma.#ctor(System.String,System.Int32)">
      <summary>Initializes a new instance of the <see cref="T:System.CodeDom.CodeLinePragma" /> class.</summary>
      <param name="fileName">The file name of the associated file. </param>
      <param name="lineNumber">The line number to store a reference to. </param>
    </member>
    <member name="P:System.CodeDom.CodeLinePragma.FileName">
      <summary>Gets or sets the name of the associated file.</summary>
      <returns>The file name of the associated file.</returns>
    </member>
    <member name="P:System.CodeDom.CodeLinePragma.LineNumber">
      <summary>Gets or sets the line number of the associated reference.</summary>
      <returns>The line number.</returns>
    </member>
    <member name="T:System.CodeDom.CodeMemberEvent">
      <summary>Represents a declaration for an event of a type.</summary>
    </member>
    <member name="M:System.CodeDom.CodeMemberEvent.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.CodeDom.CodeMemberEvent" /> class.</summary>
    </member>
    <member name="P:System.CodeDom.CodeMemberEvent.ImplementationTypes">
      <summary>Gets or sets the data type that the member event implements.</summary>
      <returns>A <see cref="T:System.CodeDom.CodeTypeReferenceCollection" /> that indicates the data type or types that the member event implements.</returns>
    </member>
    <member name="P:System.CodeDom.CodeMemberEvent.PrivateImplementationType">
      <summary>Gets or sets the privately implemented data type, if any.</summary>
      <returns>A <see cref="T:System.CodeDom.CodeTypeReference" /> that indicates the data type that the event privately implements.</returns>
    </member>
    <member name="P:System.CodeDom.CodeMemberEvent.Type">
      <summary>Gets or sets the data type of the delegate type that handles the event.</summary>
      <returns>A <see cref="T:System.CodeDom.CodeTypeReference" /> that indicates the delegate type that handles the event.</returns>
    </member>
    <member name="T:System.CodeDom.CodeMemberField">
      <summary>Represents a declaration for a field of a type.</summary>
    </member>
    <member name="M:System.CodeDom.CodeMemberField.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.CodeDom.CodeMemberField" /> class.</summary>
    </member>
    <member name="M:System.CodeDom.CodeMemberField.#ctor(System.CodeDom.CodeTypeReference,System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.CodeDom.CodeMemberField" /> class using the specified field type and field name.</summary>
      <param name="type">A <see cref="T:System.CodeDom.CodeTypeReference" /> that indicates the type of the field. </param>
      <param name="name">The name of the field. </param>
    </member>
    <member name="M:System.CodeDom.CodeMemberField.#ctor(System.String,System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.CodeDom.CodeMemberField" /> class using the specified field type and field name.</summary>
      <param name="type">The data type of the field. </param>
      <param name="name">The name of the field. </param>
    </member>
    <member name="M:System.CodeDom.CodeMemberField.#ctor(System.Type,System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.CodeDom.CodeMemberField" /> class using the specified field type and field name.</summary>
      <param name="type">The data type of the field. </param>
      <param name="name">The name of the field. </param>
    </member>
    <member name="P:System.CodeDom.CodeMemberField.InitExpression">
      <summary>Gets or sets the initialization expression for the field.</summary>
      <returns>The initialization expression for the field.</returns>
    </member>
    <member name="P:System.CodeDom.CodeMemberField.Type">
      <summary>Gets or sets the data type of the field.</summary>
      <returns>A <see cref="T:System.CodeDom.CodeTypeReference" /> that indicates the data type of the field.</returns>
    </member>
    <member name="T:System.CodeDom.CodeMemberMethod">
      <summary>Represents a declaration for a method of a type.</summary>
    </member>
    <member name="M:System.CodeDom.CodeMemberMethod.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.CodeDom.CodeMemberMethod" /> class. </summary>
    </member>
    <member name="P:System.CodeDom.CodeMemberMethod.ImplementationTypes">
      <summary>Gets the data types of the interfaces implemented by this method, unless it is a private method implementation, which is indicated by the <see cref="P:System.CodeDom.CodeMemberMethod.PrivateImplementationType" /> property.</summary>
      <returns>A <see cref="T:System.CodeDom.CodeTypeReferenceCollection" /> that indicates the interfaces implemented by this method.</returns>
    </member>
    <member name="P:System.CodeDom.CodeMemberMethod.Parameters">
      <summary>Gets the parameter declarations for the method.</summary>
      <returns>A <see cref="T:System.CodeDom.CodeParameterDeclarationExpressionCollection" /> that indicates the method parameters.</returns>
    </member>
    <member name="E:System.CodeDom.CodeMemberMethod.PopulateImplementationTypes">
      <summary>An event that will be raised the first time the <see cref="P:System.CodeDom.CodeMemberMethod.ImplementationTypes" /> collection is accessed.</summary>
    </member>
    <member name="E:System.CodeDom.CodeMemberMethod.PopulateParameters">
      <summary>An event that will be raised the first time the <see cref="P:System.CodeDom.CodeMemberMethod.Parameters" /> collection is accessed.</summary>
    </member>
    <member name="E:System.CodeDom.CodeMemberMethod.PopulateStatements">
      <summary>An event that will be raised the first time the <see cref="P:System.CodeDom.CodeMemberMethod.Statements" /> collection is accessed.</summary>
    </member>
    <member name="P:System.CodeDom.CodeMemberMethod.PrivateImplementationType">
      <summary>Gets or sets the data type of the interface this method, if private, implements a method of, if any.</summary>
      <returns>A <see cref="T:System.CodeDom.CodeTypeReference" /> that indicates the data type of the interface with the method that the private method whose declaration is represented by this <see cref="T:System.CodeDom.CodeMemberMethod" /> implements.</returns>
    </member>
    <member name="P:System.CodeDom.CodeMemberMethod.ReturnType">
      <summary>Gets or sets the data type of the return value of the method.</summary>
      <returns>A <see cref="T:System.CodeDom.CodeTypeReference" /> that indicates the data type of the value returned by the method.</returns>
    </member>
    <member name="P:System.CodeDom.CodeMemberMethod.ReturnTypeCustomAttributes">
      <summary>Gets the custom attributes of the return type of the method.</summary>
      <returns>A <see cref="T:System.CodeDom.CodeAttributeDeclarationCollection" /> that indicates the custom attributes.</returns>
    </member>
    <member name="P:System.CodeDom.CodeMemberMethod.Statements">
      <summary>Gets the statements within the method.</summary>
      <returns>A <see cref="T:System.CodeDom.CodeStatementCollection" /> that indicates the statements within the method.</returns>
    </member>
    <member name="P:System.CodeDom.CodeMemberMethod.TypeParameters">
      <summary>Gets the type parameters for the current generic method.</summary>
      <returns>A <see cref="T:System.CodeDom.CodeTypeParameterCollection" /> that contains the type parameters for the generic method.</returns>
    </member>
    <member name="T:System.CodeDom.CodeMemberProperty">
      <summary>Represents a declaration for a property of a type.</summary>
    </member>
    <member name="M:System.CodeDom.CodeMemberProperty.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.CodeDom.CodeMemberProperty" /> class.</summary>
    </member>
    <member name="P:System.CodeDom.CodeMemberProperty.GetStatements">
      <summary>Gets the collection of get statements for the property.</summary>
      <returns>A <see cref="T:System.CodeDom.CodeStatementCollection" /> that contains the get statements for the member property.</returns>
    </member>
    <member name="P:System.CodeDom.CodeMemberProperty.HasGet">
      <summary>Gets or sets a value indicating whether the property has a get method accessor.</summary>
      <returns>true if the Count property of the <see cref="P:System.CodeDom.CodeMemberProperty.GetStatements" /> collection is non-zero, or if the value of this property has been set to true; otherwise, false.</returns>
    </member>
    <member name="P:System.CodeDom.CodeMemberProperty.HasSet">
      <summary>Gets or sets a value indicating whether the property has a set method accessor.</summary>
      <returns>true if the <see cref="P:System.Collections.CollectionBase.Count" /> property of the <see cref="P:System.CodeDom.CodeMemberProperty.SetStatements" /> collection is non-zero; otherwise, false.</returns>
    </member>
    <member name="P:System.CodeDom.CodeMemberProperty.ImplementationTypes">
      <summary>Gets the data types of any interfaces that the property implements.</summary>
      <returns>A <see cref="T:System.CodeDom.CodeTypeReferenceCollection" /> that indicates the data types the property implements.</returns>
    </member>
    <member name="P:System.CodeDom.CodeMemberProperty.Parameters">
      <summary>Gets the collection of declaration expressions for the property.</summary>
      <returns>A <see cref="T:System.CodeDom.CodeParameterDeclarationExpressionCollection" /> that indicates the declaration expressions for the property.</returns>
    </member>
    <member name="P:System.CodeDom.CodeMemberProperty.PrivateImplementationType">
      <summary>Gets or sets the data type of the interface, if any, this property, if private, implements.</summary>
      <returns>A <see cref="T:System.CodeDom.CodeTypeReference" /> that indicates the data type of the interface, if any, the property, if private, implements.</returns>
    </member>
    <member name="P:System.CodeDom.CodeMemberProperty.SetStatements">
      <summary>Gets the collection of set statements for the property.</summary>
      <returns>A <see cref="T:System.CodeDom.CodeStatementCollection" /> that contains the set statements for the member property.</returns>
    </member>
    <member name="P:System.CodeDom.CodeMemberProperty.Type">
      <summary>Gets or sets the data type of the property.</summary>
      <returns>A <see cref="T:System.CodeDom.CodeTypeReference" /> that indicates the data type of the property.</returns>
    </member>
    <member name="T:System.CodeDom.CodeMethodInvokeExpression">
      <summary>Represents an expression that invokes a method.</summary>
    </member>
    <member name="M:System.CodeDom.CodeMethodInvokeExpression.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.CodeDom.CodeMethodInvokeExpression" /> class.</summary>
    </member>
    <member name="M:System.CodeDom.CodeMethodInvokeExpression.#ctor(System.CodeDom.CodeExpression,System.String,System.CodeDom.CodeExpression[])">
      <summary>Initializes a new instance of the <see cref="T:System.CodeDom.CodeMethodInvokeExpression" /> class using the specified target object, method name, and parameters.</summary>
      <param name="targetObject">A <see cref="T:System.CodeDom.CodeExpression" /> that indicates the target object with the method to invoke. </param>
      <param name="methodName">The name of the method to invoke. </param>
      <param name="parameters">An array of <see cref="T:System.CodeDom.CodeExpression" /> objects that indicate the parameters to call the method with. </param>
    </member>
    <member name="M:System.CodeDom.CodeMethodInvokeExpression.#ctor(System.CodeDom.CodeMethodReferenceExpression,System.CodeDom.CodeExpression[])">
      <summary>Initializes a new instance of the <see cref="T:System.CodeDom.CodeMethodInvokeExpression" /> class using the specified method and parameters.</summary>
      <param name="method">A <see cref="T:System.CodeDom.CodeMethodReferenceExpression" /> that indicates the method to invoke. </param>
      <param name="parameters">An array of <see cref="T:System.CodeDom.CodeExpression" /> objects that indicate the parameters with which to invoke the method. </param>
    </member>
    <member name="P:System.CodeDom.CodeMethodInvokeExpression.Method">
      <summary>Gets or sets the method to invoke.</summary>
      <returns>A <see cref="T:System.CodeDom.CodeMethodReferenceExpression" /> that indicates the method to invoke.</returns>
    </member>
    <member name="P:System.CodeDom.CodeMethodInvokeExpression.Parameters">
      <summary>Gets the parameters to invoke the method with.</summary>
      <returns>A <see cref="T:System.CodeDom.CodeExpressionCollection" /> that indicates the parameters to invoke the method with.</returns>
    </member>
    <member name="T:System.CodeDom.CodeMethodReferenceExpression">
      <summary>Represents a reference to a method.</summary>
    </member>
    <member name="M:System.CodeDom.CodeMethodReferenceExpression.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.CodeDom.CodeMethodReferenceExpression" /> class.</summary>
    </member>
    <member name="M:System.CodeDom.CodeMethodReferenceExpression.#ctor(System.CodeDom.CodeExpression,System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.CodeDom.CodeMethodReferenceExpression" /> class using the specified target object and method name.</summary>
      <param name="targetObject">A <see cref="T:System.CodeDom.CodeExpression" /> that indicates the object to target. </param>
      <param name="methodName">The name of the method to call. </param>
    </member>
    <member name="M:System.CodeDom.CodeMethodReferenceExpression.#ctor(System.CodeDom.CodeExpression,System.String,System.CodeDom.CodeTypeReference[])">
      <summary>Initializes a new instance of the <see cref="T:System.CodeDom.CodeMethodReferenceExpression" /> class using the specified target object, method name, and generic type arguments.</summary>
      <param name="targetObject">A <see cref="T:System.CodeDom.CodeExpression" /> that indicates the object to target. </param>
      <param name="methodName">The name of the method to call. </param>
      <param name="typeParameters">An array of <see cref="T:System.CodeDom.CodeTypeReference" /> values that specify the <see cref="P:System.CodeDom.CodeMethodReferenceExpression.TypeArguments" /> for this <see cref="T:System.CodeDom.CodeMethodReferenceExpression" />.</param>
    </member>
    <member name="P:System.CodeDom.CodeMethodReferenceExpression.MethodName">
      <summary>Gets or sets the name of the method to reference.</summary>
      <returns>The name of the method to reference.</returns>
    </member>
    <member name="P:System.CodeDom.CodeMethodReferenceExpression.TargetObject">
      <summary>Gets or sets the expression that indicates the method to reference.</summary>
      <returns>A <see cref="T:System.CodeDom.CodeExpression" /> that represents the method to reference.</returns>
    </member>
    <member name="P:System.CodeDom.CodeMethodReferenceExpression.TypeArguments">
      <summary>Gets the type arguments for the current generic method reference expression.</summary>
      <returns>A <see cref="T:System.CodeDom.CodeTypeReferenceCollection" /> containing the type arguments for the current code <see cref="T:System.CodeDom.CodeMethodReferenceExpression" />.</returns>
    </member>
    <member name="T:System.CodeDom.CodeMethodReturnStatement">
      <summary>Represents a return value statement.</summary>
    </member>
    <member name="M:System.CodeDom.CodeMethodReturnStatement.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.CodeDom.CodeMethodReturnStatement" /> class.</summary>
    </member>
    <member name="M:System.CodeDom.CodeMethodReturnStatement.#ctor(System.CodeDom.CodeExpression)">
      <summary>Initializes a new instance of the <see cref="T:System.CodeDom.CodeMethodReturnStatement" /> class using the specified expression.</summary>
      <param name="expression">A <see cref="T:System.CodeDom.CodeExpression" /> that indicates the return value. </param>
    </member>
    <member name="P:System.CodeDom.CodeMethodReturnStatement.Expression">
      <summary>Gets or sets the return value.</summary>
      <returns>A <see cref="T:System.CodeDom.CodeExpression" /> that indicates the value to return for the return statement, or null if the statement is part of a subroutine.</returns>
    </member>
    <member name="T:System.CodeDom.CodeNamespace">
      <summary>Represents a namespace declaration.</summary>
    </member>
    <member name="M:System.CodeDom.CodeNamespace.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.CodeDom.CodeNamespace" /> class.</summary>
    </member>
    <member name="M:System.CodeDom.CodeNamespace.#ctor(System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.CodeDom.CodeNamespace" /> class using the specified name.</summary>
      <param name="name">The name of the namespace being declared. </param>
    </member>
    <member name="P:System.CodeDom.CodeNamespace.Comments">
      <summary>Gets the comments for the namespace.</summary>
      <returns>A <see cref="T:System.CodeDom.CodeCommentStatementCollection" /> that indicates the comments for the namespace.</returns>
    </member>
    <member name="P:System.CodeDom.CodeNamespace.Imports">
      <summary>Gets the collection of namespace import directives used by the namespace.</summary>
      <returns>A <see cref="T:System.CodeDom.CodeNamespaceImportCollection" /> that indicates the namespace import directives used by the namespace.</returns>
    </member>
    <member name="P:System.CodeDom.CodeNamespace.Name">
      <summary>Gets or sets the name of the namespace.</summary>
      <returns>The name of the namespace.</returns>
    </member>
    <member name="E:System.CodeDom.CodeNamespace.PopulateComments">
      <summary>An event that will be raised the first time the <see cref="P:System.CodeDom.CodeNamespace.Comments" /> collection is accessed.</summary>
    </member>
    <member name="E:System.CodeDom.CodeNamespace.PopulateImports">
      <summary>An event that will be raised the first time the <see cref="P:System.CodeDom.CodeNamespace.Imports" /> collection is accessed.</summary>
    </member>
    <member name="E:System.CodeDom.CodeNamespace.PopulateTypes">
      <summary>An event that will be raised the first time the <see cref="P:System.CodeDom.CodeNamespace.Types" /> collection is accessed.</summary>
    </member>
    <member name="P:System.CodeDom.CodeNamespace.Types">
      <summary>Gets the collection of types that the namespace contains.</summary>
      <returns>A <see cref="T:System.CodeDom.CodeTypeDeclarationCollection" /> that indicates the types contained in the namespace.</returns>
    </member>
    <member name="T:System.CodeDom.CodeNamespaceCollection">
      <summary>Represents a collection of <see cref="T:System.CodeDom.CodeNamespace" /> objects.</summary>
    </member>
    <member name="M:System.CodeDom.CodeNamespaceCollection.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.CodeDom.CodeNamespaceCollection" /> class.</summary>
    </member>
    <member name="M:System.CodeDom.CodeNamespaceCollection.#ctor(System.CodeDom.CodeNamespace[])">
      <summary>Initializes a new instance of the <see cref="T:System.CodeDom.CodeNamespaceCollection" /> class that contains the specified array of <see cref="T:System.CodeDom.CodeNamespace" /> objects.</summary>
      <param name="value">An array of <see cref="T:System.CodeDom.CodeNamespace" /> objects with which to initialize the collection. </param>
      <exception cref="T:System.ArgumentNullException">One or more objects in the array are null.</exception>
    </member>
    <member name="M:System.CodeDom.CodeNamespaceCollection.#ctor(System.CodeDom.CodeNamespaceCollection)">
      <summary>Initializes a new instance of the <see cref="T:System.CodeDom.CodeNamespaceCollection" /> class that contains the elements of the specified source collection.</summary>
      <param name="value">The <see cref="T:System.CodeDom.CodeNamespaceCollection" /> with which to initialize the collection. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="value" /> is null.</exception>
    </member>
    <member name="M:System.CodeDom.CodeNamespaceCollection.Add(System.CodeDom.CodeNamespace)">
      <summary>Adds the specified <see cref="T:System.CodeDom.CodeNamespace" /> object to the collection.</summary>
      <returns>The index at which the new element was inserted.</returns>
      <param name="value">The <see cref="T:System.CodeDom.CodeNamespace" /> to add. </param>
    </member>
    <member name="M:System.CodeDom.CodeNamespaceCollection.AddRange(System.CodeDom.CodeNamespace[])">
      <summary>Copies the elements of the specified <see cref="T:System.CodeDom.CodeNamespace" /> array to the end of the collection.</summary>
      <param name="value">An array of type <see cref="T:System.CodeDom.CodeNamespace" /> that contains the objects to add to the collection. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="value" /> is null.</exception>
    </member>
    <member name="M:System.CodeDom.CodeNamespaceCollection.AddRange(System.CodeDom.CodeNamespaceCollection)">
      <summary>Adds the contents of the specified <see cref="T:System.CodeDom.CodeNamespaceCollection" /> object to the end of the collection.</summary>
      <param name="value">A <see cref="T:System.CodeDom.CodeNamespaceCollection" /> that contains the objects to add to the collection. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="value" /> is null.</exception>
    </member>
    <member name="M:System.CodeDom.CodeNamespaceCollection.Contains(System.CodeDom.CodeNamespace)">
      <summary>Gets a value that indicates whether the collection contains the specified <see cref="T:System.CodeDom.CodeNamespace" /> object.</summary>
      <returns>true if the <see cref="T:System.CodeDom.CodeNamespace" /> is contained in the collection; otherwise, false.</returns>
      <param name="value">The <see cref="T:System.CodeDom.CodeNamespace" /> to search for in the collection. </param>
    </member>
    <member name="M:System.CodeDom.CodeNamespaceCollection.CopyTo(System.CodeDom.CodeNamespace[],System.Int32)">
      <summary>Copies the collection objects to a one-dimensional <see cref="T:System.Array" /> instance, starting at the specified index.</summary>
      <param name="array">The one-dimensional <see cref="T:System.Array" /> that is the destination of the values copied from the collection. </param>
      <param name="index">The index of the array at which to begin inserting. </param>
      <exception cref="T:System.ArgumentException">The destination array is multidimensional.-or- The number of elements in the <see cref="T:System.CodeDom.CodeNamespaceCollection" /> is greater than the available space between the index of the target array specified by the <paramref name="index" /> parameter and the end of the target array. </exception>
      <exception cref="T:System.ArgumentNullException">The <paramref name="array" /> parameter is null. </exception>
      <exception cref="T:System.ArgumentOutOfRangeException">The <paramref name="index" /> parameter is less than the target array's minimum index. </exception>
    </member>
    <member name="M:System.CodeDom.CodeNamespaceCollection.IndexOf(System.CodeDom.CodeNamespace)">
      <summary>Gets the index of the specified <see cref="T:System.CodeDom.CodeNamespace" /> object in the <see cref="T:System.CodeDom.CodeNamespaceCollection" />, if it exists in the collection.</summary>
      <returns>The index of the specified <see cref="T:System.CodeDom.CodeNamespace" />, if it is found, in the collection; otherwise, -1.</returns>
      <param name="value">The <see cref="T:System.CodeDom.CodeNamespace" /> to locate. </param>
    </member>
    <member name="M:System.CodeDom.CodeNamespaceCollection.Insert(System.Int32,System.CodeDom.CodeNamespace)">
      <summary>Inserts the specified <see cref="T:System.CodeDom.CodeNamespace" /> object into the collection at the specified index.</summary>
      <param name="index">The zero-based index where the new item should be inserted. </param>
      <param name="value">The <see cref="T:System.CodeDom.CodeNamespace" /> to insert. </param>
    </member>
    <member name="P:System.CodeDom.CodeNamespaceCollection.Item(System.Int32)">
      <summary>Gets or sets the <see cref="T:System.CodeDom.CodeNamespaceCollection" /> object at the specified index in the collection.</summary>
      <returns>A <see cref="T:System.CodeDom.CodeNamespace" /> at each valid index.</returns>
      <param name="index">The index of the collection to access. </param>
      <exception cref="T:System.ArgumentOutOfRangeException">The <paramref name="index" /> parameter is outside the valid range of indexes for the collection. </exception>
    </member>
    <member name="M:System.CodeDom.CodeNamespaceCollection.Remove(System.CodeDom.CodeNamespace)">
      <summary>Removes the specified <see cref="T:System.CodeDom.CodeNamespace" /> object from the collection.</summary>
      <param name="value">The <see cref="T:System.CodeDom.CodeNamespace" /> to remove from the collection. </param>
      <exception cref="T:System.ArgumentException">The specified object is not found in the collection. </exception>
    </member>
    <member name="T:System.CodeDom.CodeNamespaceImport">
      <summary>Represents a namespace import directive that indicates a namespace to use.</summary>
    </member>
    <member name="M:System.CodeDom.CodeNamespaceImport.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.CodeDom.CodeNamespaceImport" /> class.</summary>
    </member>
    <member name="M:System.CodeDom.CodeNamespaceImport.#ctor(System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.CodeDom.CodeNamespaceImport" /> class using the specified namespace to import.</summary>
      <param name="nameSpace">The name of the namespace to import. </param>
    </member>
    <member name="P:System.CodeDom.CodeNamespaceImport.LinePragma">
      <summary>Gets or sets the line and file the statement occurs on.</summary>
      <returns>A <see cref="T:System.CodeDom.CodeLinePragma" /> that indicates the context of the statement.</returns>
    </member>
    <member name="P:System.CodeDom.CodeNamespaceImport.Namespace">
      <summary>Gets or sets the namespace to import.</summary>
      <returns>The name of the namespace to import.</returns>
    </member>
    <member name="T:System.CodeDom.CodeNamespaceImportCollection">
      <summary>Represents a collection of <see cref="T:System.CodeDom.CodeNamespaceImport" /> objects.</summary>
    </member>
    <member name="M:System.CodeDom.CodeNamespaceImportCollection.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.CodeDom.CodeNamespaceImportCollection" /> class. </summary>
    </member>
    <member name="M:System.CodeDom.CodeNamespaceImportCollection.Add(System.CodeDom.CodeNamespaceImport)">
      <summary>Adds a <see cref="T:System.CodeDom.CodeNamespaceImport" /> object to the collection.</summary>
      <param name="value">The <see cref="T:System.CodeDom.CodeNamespaceImport" /> object to add to the collection. </param>
    </member>
    <member name="M:System.CodeDom.CodeNamespaceImportCollection.AddRange(System.CodeDom.CodeNamespaceImport[])">
      <summary>Adds a set of <see cref="T:System.CodeDom.CodeNamespaceImport" /> objects to the collection.</summary>
      <param name="value">An array of type <see cref="T:System.CodeDom.CodeNamespaceImport" /> that contains the objects to add to the collection. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="value" /> is null.</exception>
    </member>
    <member name="M:System.CodeDom.CodeNamespaceImportCollection.Clear">
      <summary>Clears the collection of members.</summary>
    </member>
    <member name="P:System.CodeDom.CodeNamespaceImportCollection.Count">
      <summary>Gets the number of namespaces in the collection.</summary>
      <returns>The number of namespaces in the collection.</returns>
    </member>
    <member name="M:System.CodeDom.CodeNamespaceImportCollection.GetEnumerator">
      <summary>Gets an enumerator that enumerates the collection members.</summary>
      <returns>An <see cref="T:System.Collections.IEnumerator" /> that indicates the collection members.</returns>
    </member>
    <member name="P:System.CodeDom.CodeNamespaceImportCollection.Item(System.Int32)">
      <summary>Gets or sets the <see cref="T:System.CodeDom.CodeNamespaceImport" /> object at the specified index in the collection.</summary>
      <returns>A <see cref="T:System.CodeDom.CodeNamespaceImport" /> object at each valid index.</returns>
      <param name="index">The index of the collection to access. </param>
      <exception cref="T:System.ArgumentOutOfRangeException">The <paramref name="index" /> parameter is outside the valid range of indexes for the collection. </exception>
    </member>
    <member name="M:System.CodeDom.CodeNamespaceImportCollection.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
      <summary>Copies the elements of the <see cref="T:System.Collections.ICollection" /> to an <see cref="T:System.Array" />, starting at a particular <see cref="T:System.Array" /> index.</summary>
      <param name="array">The one-dimensional <see cref="T:System.Array" /> that is the destination of the elements copied from the <see cref="T:System.Collections.ICollection" />. The array must have zero-based indexing.</param>
      <param name="index">The zero-based index in <paramref name="array" /> at which copying begins.</param>
    </member>
    <member name="P:System.CodeDom.CodeNamespaceImportCollection.System#Collections#ICollection#Count">
      <summary>Gets the number of elements contained in the <see cref="T:System.Collections.ICollection" />.</summary>
      <returns>The number of elements contained in the <see cref="T:System.Collections.ICollection" />.</returns>
    </member>
    <member name="P:System.CodeDom.CodeNamespaceImportCollection.System#Collections#ICollection#IsSynchronized">
      <summary>Gets a value indicating whether access to the <see cref="T:System.Collections.ICollection" /> is synchronized (thread safe).</summary>
      <returns>true if access to the <see cref="T:System.Collections.ICollection" /> is synchronized (thread safe); otherwise, false. This property always returns false. </returns>
    </member>
    <member name="P:System.CodeDom.CodeNamespaceImportCollection.System#Collections#ICollection#SyncRoot">
      <summary>Gets an object that can be used to synchronize access to the <see cref="T:System.Collections.ICollection" />.</summary>
      <returns>An object that can be used to synchronize access to the <see cref="T:System.Collections.ICollection" />.  This property always returns null.</returns>
    </member>
    <member name="M:System.CodeDom.CodeNamespaceImportCollection.System#Collections#IEnumerable#GetEnumerator">
      <summary>Returns an enumerator that can iterate through a collection.</summary>
      <returns>An <see cref="T:System.Collections.IEnumerator" /> that can be used to iterate through the collection.</returns>
    </member>
    <member name="M:System.CodeDom.CodeNamespaceImportCollection.System#Collections#IList#Add(System.Object)">
      <summary>Adds an object to the <see cref="T:System.Collections.IList" />.</summary>
      <returns>The position at which the new element was inserted.</returns>
      <param name="value">The <see cref="T:System.Object" /> to add to the <see cref="T:System.Collections.IList" />.</param>
    </member>
    <member name="M:System.CodeDom.CodeNamespaceImportCollection.System#Collections#IList#Clear">
      <summary>Removes all items from the <see cref="T:System.Collections.IList" />.</summary>
    </member>
    <member name="M:System.CodeDom.CodeNamespaceImportCollection.System#Collections#IList#Contains(System.Object)">
      <summary>Determines whether the <see cref="T:System.Collections.IList" /> contains a specific value.</summary>
      <returns>true if the value is in the list; otherwise, false. </returns>
      <param name="value">The <see cref="T:System.Object" /> to locate in the <see cref="T:System.Collections.IList" />.</param>
    </member>
    <member name="M:System.CodeDom.CodeNamespaceImportCollection.System#Collections#IList#IndexOf(System.Object)">
      <summary>Determines the index of a specific item in the <see cref="T:System.Collections.IList" />. </summary>
      <returns>The index of <paramref name="value" /> if it is found in the list; otherwise, -1.</returns>
      <param name="value">The <see cref="T:System.Object" /> to locate in the <see cref="T:System.Collections.IList" />.</param>
    </member>
    <member name="M:System.CodeDom.CodeNamespaceImportCollection.System#Collections#IList#Insert(System.Int32,System.Object)">
      <summary>Inserts an item in the <see cref="T:System.Collections.IList" /> at the specified position. </summary>
      <param name="index">The zero-based index at which <paramref name="value" /> should be inserted.</param>
      <param name="value">The <see cref="T:System.Object" /> to insert into the <see cref="T:System.Collections.IList" />.</param>
    </member>
    <member name="P:System.CodeDom.CodeNamespaceImportCollection.System#Collections#IList#IsFixedSize">
      <summary>Gets a value indicating whether the <see cref="T:System.Collections.IList" /> has a fixed size.</summary>
      <returns>true if the <see cref="T:System.Collections.IList" /> has a fixed size; otherwise, false.  This property always returns false.</returns>
    </member>
    <member name="P:System.CodeDom.CodeNamespaceImportCollection.System#Collections#IList#IsReadOnly">
      <summary>Gets a value indicating whether the <see cref="T:System.Collections.IList" /> is read-only.</summary>
      <returns>true if the <see cref="T:System.Collections.IList" /> is read-only; otherwise, false.  This property always returns false.</returns>
    </member>
    <member name="P:System.CodeDom.CodeNamespaceImportCollection.System#Collections#IList#Item(System.Int32)">
      <summary>Gets or sets the element at the specified index.</summary>
      <returns>The element at the specified index.</returns>
      <param name="index">The zero-based index of the element to get or set.</param>
    </member>
    <member name="M:System.CodeDom.CodeNamespaceImportCollection.System#Collections#IList#Remove(System.Object)">
      <summary>Removes the first occurrence of a specific object from the <see cref="T:System.Collections.IList" />. </summary>
      <param name="value">The <see cref="T:System.Object" /> to remove from the <see cref="T:System.Collections.IList" />.</param>
    </member>
    <member name="M:System.CodeDom.CodeNamespaceImportCollection.System#Collections#IList#RemoveAt(System.Int32)">
      <summary>Removes the element at the specified index of the <see cref="T:System.Collections.IList" />. </summary>
      <param name="index">The zero-based index of the element to remove.</param>
    </member>
    <member name="T:System.CodeDom.CodeObject">
      <summary>Provides a common base class for most Code Document Object Model (CodeDOM) objects.</summary>
    </member>
    <member name="M:System.CodeDom.CodeObject.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.CodeDom.CodeObject" /> class.</summary>
    </member>
    <member name="P:System.CodeDom.CodeObject.UserData">
      <summary>Gets the user-definable data for the current object.</summary>
      <returns>An <see cref="T:System.Collections.IDictionary" /> containing user data for the current object.</returns>
    </member>
    <member name="T:System.CodeDom.CodeObjectCreateExpression">
      <summary>Represents an expression that creates a new instance of a type.</summary>
    </member>
    <member name="M:System.CodeDom.CodeObjectCreateExpression.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.CodeDom.CodeObjectCreateExpression" /> class.</summary>
    </member>
    <member name="M:System.CodeDom.CodeObjectCreateExpression.#ctor(System.CodeDom.CodeTypeReference,System.CodeDom.CodeExpression[])">
      <summary>Initializes a new instance of the <see cref="T:System.CodeDom.CodeObjectCreateExpression" /> class using the specified type and parameters.</summary>
      <param name="createType">A <see cref="T:System.CodeDom.CodeTypeReference" /> that indicates the data type of the object to create. </param>
      <param name="parameters">An array of <see cref="T:System.CodeDom.CodeExpression" /> objects that indicates the parameters to use to create the object. </param>
    </member>
    <member name="M:System.CodeDom.CodeObjectCreateExpression.#ctor(System.String,System.CodeDom.CodeExpression[])">
      <summary>Initializes a new instance of the <see cref="T:System.CodeDom.CodeObjectCreateExpression" /> class using the specified type and parameters.</summary>
      <param name="createType">The name of the data type of object to create. </param>
      <param name="parameters">An array of <see cref="T:System.CodeDom.CodeExpression" /> objects that indicates the parameters to use to create the object. </param>
    </member>
    <member name="M:System.CodeDom.CodeObjectCreateExpression.#ctor(System.Type,System.CodeDom.CodeExpression[])">
      <summary>Initializes a new instance of the <see cref="T:System.CodeDom.CodeObjectCreateExpression" /> class using the specified type and parameters.</summary>
      <param name="createType">The data type of the object to create. </param>
      <param name="parameters">An array of <see cref="T:System.CodeDom.CodeExpression" /> objects that indicates the parameters to use to create the object. </param>
    </member>
    <member name="P:System.CodeDom.CodeObjectCreateExpression.CreateType">
      <summary>Gets or sets the data type of the object to create.</summary>
      <returns>A <see cref="T:System.CodeDom.CodeTypeReference" /> to the data type of the object to create.</returns>
    </member>
    <member name="P:System.CodeDom.CodeObjectCreateExpression.Parameters">
      <summary>Gets or sets the parameters to use in creating the object.</summary>
      <returns>A <see cref="T:System.CodeDom.CodeExpressionCollection" /> that indicates the parameters to use when creating the object.</returns>
    </member>
    <member name="T:System.CodeDom.CodeParameterDeclarationExpression">
      <summary>Represents a parameter declaration for a method, property, or constructor.</summary>
    </member>
    <member name="M:System.CodeDom.CodeParameterDeclarationExpression.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.CodeDom.CodeParameterDeclarationExpression" /> class.</summary>
    </member>
    <member name="M:System.CodeDom.CodeParameterDeclarationExpression.#ctor(System.CodeDom.CodeTypeReference,System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.CodeDom.CodeParameterDeclarationExpression" /> class using the specified parameter type and name.</summary>
      <param name="type">A <see cref="T:System.CodeDom.CodeTypeReference" /> that indicates the type of the parameter to declare. </param>
      <param name="name">The name of the parameter to declare. </param>
    </member>
    <member name="M:System.CodeDom.CodeParameterDeclarationExpression.#ctor(System.String,System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.CodeDom.CodeParameterDeclarationExpression" /> class using the specified parameter type and name.</summary>
      <param name="type">The name of the type of the parameter to declare. </param>
      <param name="name">The name of the parameter to declare. </param>
    </member>
    <member name="M:System.CodeDom.CodeParameterDeclarationExpression.#ctor(System.Type,System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.CodeDom.CodeParameterDeclarationExpression" /> class using the specified parameter type and name.</summary>
      <param name="type">The data type of the parameter to declare. </param>
      <param name="name">The name of the parameter to declare. </param>
    </member>
    <member name="P:System.CodeDom.CodeParameterDeclarationExpression.CustomAttributes">
      <summary>Gets or sets the custom attributes for the parameter declaration.</summary>
      <returns>A <see cref="T:System.CodeDom.CodeAttributeDeclarationCollection" /> that indicates the custom attributes.</returns>
    </member>
    <member name="P:System.CodeDom.CodeParameterDeclarationExpression.Direction">
      <summary>Gets or sets the direction of the field.</summary>
      <returns>A <see cref="T:System.CodeDom.FieldDirection" /> that indicates the direction of the field.</returns>
    </member>
    <member name="P:System.CodeDom.CodeParameterDeclarationExpression.Name">
      <summary>Gets or sets the name of the parameter.</summary>
      <returns>The name of the parameter.</returns>
    </member>
    <member name="P:System.CodeDom.CodeParameterDeclarationExpression.Type">
      <summary>Gets or sets the type of the parameter.</summary>
      <returns>A <see cref="T:System.CodeDom.CodeTypeReference" /> that indicates the data type of the parameter.</returns>
    </member>
    <member name="T:System.CodeDom.CodeParameterDeclarationExpressionCollection">
      <summary>Represents a collection of <see cref="T:System.CodeDom.CodeParameterDeclarationExpression" /> objects.</summary>
    </member>
    <member name="M:System.CodeDom.CodeParameterDeclarationExpressionCollection.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.CodeDom.CodeParameterDeclarationExpressionCollection" /> class.</summary>
    </member>
    <member name="M:System.CodeDom.CodeParameterDeclarationExpressionCollection.#ctor(System.CodeDom.CodeParameterDeclarationExpression[])">
      <summary>Initializes a new instance of the <see cref="T:System.CodeDom.CodeParameterDeclarationExpressionCollection" /> class containing the specified array of <see cref="T:System.CodeDom.CodeParameterDeclarationExpression" /> objects.</summary>
      <param name="value">An array of <see cref="T:System.CodeDom.CodeParameterDeclarationExpression" /> objects with which to initialize the collection. </param>
      <exception cref="T:System.ArgumentNullException">one or more objects in the array are null.</exception>
    </member>
    <member name="M:System.CodeDom.CodeParameterDeclarationExpressionCollection.#ctor(System.CodeDom.CodeParameterDeclarationExpressionCollection)">
      <summary>Initializes a new instance of the <see cref="T:System.CodeDom.CodeParameterDeclarationExpressionCollection" /> class containing the elements of the specified source collection.</summary>
      <param name="value">A <see cref="T:System.CodeDom.CodeParameterDeclarationExpressionCollection" /> with which to initialize the collection. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="value" /> is null.</exception>
    </member>
    <member name="M:System.CodeDom.CodeParameterDeclarationExpressionCollection.Add(System.CodeDom.CodeParameterDeclarationExpression)">
      <summary>Adds the specified <see cref="T:System.CodeDom.CodeParameterDeclarationExpression" /> to the collection.</summary>
      <returns>The index at which the new element was inserted.</returns>
      <param name="value">The <see cref="T:System.CodeDom.CodeParameterDeclarationExpression" /> to add. </param>
    </member>
    <member name="M:System.CodeDom.CodeParameterDeclarationExpressionCollection.AddRange(System.CodeDom.CodeParameterDeclarationExpression[])">
      <summary>Copies the elements of the specified array to the end of the collection.</summary>
      <param name="value">An array of type <see cref="T:System.CodeDom.CodeParameterDeclarationExpression" /> containing the objects to add to the collection. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="value" /> is null.</exception>
    </member>
    <member name="M:System.CodeDom.CodeParameterDeclarationExpressionCollection.AddRange(System.CodeDom.CodeParameterDeclarationExpressionCollection)">
      <summary>Adds the contents of another <see cref="T:System.CodeDom.CodeParameterDeclarationExpressionCollection" /> to the end of the collection.</summary>
      <param name="value">A <see cref="T:System.CodeDom.CodeParameterDeclarationExpressionCollection" /> containing the objects to add to the collection. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="value" /> is null.</exception>
    </member>
    <member name="M:System.CodeDom.CodeParameterDeclarationExpressionCollection.Contains(System.CodeDom.CodeParameterDeclarationExpression)">
      <summary>Gets a value indicating whether the collection contains the specified <see cref="T:System.CodeDom.CodeParameterDeclarationExpression" />.</summary>
      <returns>true if the collection contains the specified object; otherwise, false.</returns>
      <param name="value">A <see cref="T:System.CodeDom.CodeParameterDeclarationExpression" /> to search for in the collection. </param>
    </member>
    <member name="M:System.CodeDom.CodeParameterDeclarationExpressionCollection.CopyTo(System.CodeDom.CodeParameterDeclarationExpression[],System.Int32)">
      <summary>Copies the collection objects to a one-dimensional <see cref="T:System.Array" /> instance beginning at the specified index.</summary>
      <param name="array">The one-dimensional <see cref="T:System.Array" /> that is the destination of the values copied from the collection. </param>
      <param name="index">The index of the array at which to begin inserting. </param>
      <exception cref="T:System.ArgumentException">The destination array is multidimensional.-or- The number of elements in the <see cref="T:System.CodeDom.CodeParameterDeclarationExpressionCollection" /> is greater than the available space between the index of the target array specified by the <paramref name="index" /> parameter and the end of the target array. </exception>
      <exception cref="T:System.ArgumentNullException">The <paramref name="array" /> parameter is null. </exception>
      <exception cref="T:System.ArgumentOutOfRangeException">The <paramref name="index" /> parameter is less than the target array's minimum index. </exception>
    </member>
    <member name="M:System.CodeDom.CodeParameterDeclarationExpressionCollection.IndexOf(System.CodeDom.CodeParameterDeclarationExpression)">
      <summary>Gets the index in the collection of the specified <see cref="T:System.CodeDom.CodeParameterDeclarationExpression" />, if it exists in the collection.</summary>
      <returns>The index in the collection of the specified object, if found; otherwise, -1.</returns>
      <param name="value">The <see cref="T:System.CodeDom.CodeParameterDeclarationExpression" /> to locate in the collection. </param>
    </member>
    <member name="M:System.CodeDom.CodeParameterDeclarationExpressionCollection.Insert(System.Int32,System.CodeDom.CodeParameterDeclarationExpression)">
      <summary>Inserts the specified <see cref="T:System.CodeDom.CodeParameterDeclarationExpression" /> into the collection at the specified index.</summary>
      <param name="index">The zero-based index where the specified object should be inserted. </param>
      <param name="value">The <see cref="T:System.CodeDom.CodeParameterDeclarationExpression" /> to insert. </param>
    </member>
    <member name="P:System.CodeDom.CodeParameterDeclarationExpressionCollection.Item(System.Int32)">
      <summary>Gets or sets the <see cref="T:System.CodeDom.CodeParameterDeclarationExpression" /> at the specified index in the collection.</summary>
      <returns>A <see cref="T:System.CodeDom.CodeParameterDeclarationExpression" /> at each valid index.</returns>
      <param name="index">The index of the collection to access. </param>
      <exception cref="T:System.ArgumentOutOfRangeException">The <paramref name="index" /> parameter is outside the valid range of indexes for the collection. </exception>
    </member>
    <member name="M:System.CodeDom.CodeParameterDeclarationExpressionCollection.Remove(System.CodeDom.CodeParameterDeclarationExpression)">
      <summary>Removes the specified <see cref="T:System.CodeDom.CodeParameterDeclarationExpression" /> from the collection.</summary>
      <param name="value">The <see cref="T:System.CodeDom.CodeParameterDeclarationExpression" /> to remove from the collection. </param>
      <exception cref="T:System.ArgumentException">The specified object is not found in the collection. </exception>
    </member>
    <member name="T:System.CodeDom.CodePrimitiveExpression">
      <summary>Represents a primitive data type value.</summary>
    </member>
    <member name="M:System.CodeDom.CodePrimitiveExpression.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.CodeDom.CodePrimitiveExpression" /> class.</summary>
    </member>
    <member name="M:System.CodeDom.CodePrimitiveExpression.#ctor(System.Object)">
      <summary>Initializes a new instance of the <see cref="T:System.CodeDom.CodePrimitiveExpression" /> class using the specified object.</summary>
      <param name="value">The object to represent. </param>
    </member>
    <member name="P:System.CodeDom.CodePrimitiveExpression.Value">
      <summary>Gets or sets the primitive data type to represent.</summary>
      <returns>The primitive data type instance to represent the value of.</returns>
    </member>
    <member name="T:System.CodeDom.CodePropertyReferenceExpression">
      <summary>Represents a reference to the value of a property.</summary>
    </member>
    <member name="M:System.CodeDom.CodePropertyReferenceExpression.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.CodeDom.CodePropertyReferenceExpression" /> class.</summary>
    </member>
    <member name="M:System.CodeDom.CodePropertyReferenceExpression.#ctor(System.CodeDom.CodeExpression,System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.CodeDom.CodePropertyReferenceExpression" /> class using the specified target object and property name.</summary>
      <param name="targetObject">A <see cref="T:System.CodeDom.CodeExpression" /> that indicates the object that contains the property to reference. </param>
      <param name="propertyName">The name of the property to reference. </param>
    </member>
    <member name="P:System.CodeDom.CodePropertyReferenceExpression.PropertyName">
      <summary>Gets or sets the name of the property to reference.</summary>
      <returns>The name of the property to reference.</returns>
    </member>
    <member name="P:System.CodeDom.CodePropertyReferenceExpression.TargetObject">
      <summary>Gets or sets the object that contains the property to reference.</summary>
      <returns>A <see cref="T:System.CodeDom.CodeExpression" /> that indicates the object that contains the property to reference.</returns>
    </member>
    <member name="T:System.CodeDom.CodePropertySetValueReferenceExpression">
      <summary>Represents the value argument of a property set method call within a property set method.</summary>
    </member>
    <member name="M:System.CodeDom.CodePropertySetValueReferenceExpression.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.CodeDom.CodePropertySetValueReferenceExpression" /> class. </summary>
    </member>
    <member name="T:System.CodeDom.CodeRegionDirective">
      <summary>Specifies the name and mode for a code region.</summary>
    </member>
    <member name="M:System.CodeDom.CodeRegionDirective.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.CodeDom.CodeRegionDirective" /> class with default values. </summary>
    </member>
    <member name="M:System.CodeDom.CodeRegionDirective.#ctor(System.CodeDom.CodeRegionMode,System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.CodeDom.CodeRegionDirective" /> class, specifying its mode and name. </summary>
      <param name="regionMode">One of the <see cref="T:System.CodeDom.CodeRegionMode" /> values.</param>
      <param name="regionText">The name for the region.</param>
    </member>
    <member name="P:System.CodeDom.CodeRegionDirective.RegionMode">
      <summary>Gets or sets the mode for the region directive.</summary>
      <returns>One of the <see cref="T:System.CodeDom.CodeRegionMode" /> values. The default is <see cref="F:System.CodeDom.CodeRegionMode.None" />.</returns>
    </member>
    <member name="P:System.CodeDom.CodeRegionDirective.RegionText">
      <summary>Gets or sets the name of the region.</summary>
      <returns>The name of the region.</returns>
    </member>
    <member name="T:System.CodeDom.CodeRegionMode">
      <summary>Specifies the start or end of a code region.</summary>
    </member>
    <member name="F:System.CodeDom.CodeRegionMode.None">
      <summary>Not used.</summary>
    </member>
    <member name="F:System.CodeDom.CodeRegionMode.Start">
      <summary>Start of the region.</summary>
    </member>
    <member name="F:System.CodeDom.CodeRegionMode.End">
      <summary>End of the region.</summary>
    </member>
    <member name="T:System.CodeDom.CodeRemoveEventStatement">
      <summary>Represents a statement that removes an event handler.</summary>
    </member>
    <member name="M:System.CodeDom.CodeRemoveEventStatement.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.CodeDom.CodeRemoveEventStatement" /> class.</summary>
    </member>
    <member name="M:System.CodeDom.CodeRemoveEventStatement.#ctor(System.CodeDom.CodeEventReferenceExpression,System.CodeDom.CodeExpression)">
      <summary>Initializes a new instance of the <see cref="T:System.CodeDom.CodeRemoveEventStatement" /> class with the specified event and event handler.</summary>
      <param name="eventRef">A <see cref="T:System.CodeDom.CodeEventReferenceExpression" /> that indicates the event to detach the event handler from. </param>
      <param name="listener">A <see cref="T:System.CodeDom.CodeExpression" /> that indicates the event handler to remove. </param>
    </member>
    <member name="M:System.CodeDom.CodeRemoveEventStatement.#ctor(System.CodeDom.CodeExpression,System.String,System.CodeDom.CodeExpression)">
      <summary>Initializes a new instance of the <see cref="T:System.CodeDom.CodeRemoveEventStatement" /> class using the specified target object, event name, and event handler.</summary>
      <param name="targetObject">A <see cref="T:System.CodeDom.CodeExpression" /> that indicates the object that contains the event. </param>
      <param name="eventName">The name of the event. </param>
      <param name="listener">A <see cref="T:System.CodeDom.CodeExpression" /> that indicates the event handler to remove. </param>
    </member>
    <member name="P:System.CodeDom.CodeRemoveEventStatement.Event">
      <summary>Gets or sets the event to remove a listener from.</summary>
      <returns>A <see cref="T:System.CodeDom.CodeEventReferenceExpression" /> that indicates the event to remove a listener from.</returns>
    </member>
    <member name="P:System.CodeDom.CodeRemoveEventStatement.Listener">
      <summary>Gets or sets the event handler to remove.</summary>
      <returns>A <see cref="T:System.CodeDom.CodeExpression" /> that indicates the event handler to remove.</returns>
    </member>
    <member name="T:System.CodeDom.CodeSnippetCompileUnit">
      <summary>Represents a literal code fragment that can be compiled.</summary>
    </member>
    <member name="M:System.CodeDom.CodeSnippetCompileUnit.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.CodeDom.CodeSnippetCompileUnit" /> class. </summary>
    </member>
    <member name="M:System.CodeDom.CodeSnippetCompileUnit.#ctor(System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.CodeDom.CodeSnippetCompileUnit" /> class.</summary>
      <param name="value">The literal code fragment to represent. </param>
    </member>
    <member name="P:System.CodeDom.CodeSnippetCompileUnit.LinePragma">
      <summary>Gets or sets the line and file information about where the code is located in a source code document.</summary>
      <returns>A <see cref="T:System.CodeDom.CodeLinePragma" /> that indicates the position of the code fragment.</returns>
    </member>
    <member name="P:System.CodeDom.CodeSnippetCompileUnit.Value">
      <summary>Gets or sets the literal code fragment to represent.</summary>
      <returns>The literal code fragment.</returns>
    </member>
    <member name="T:System.CodeDom.CodeSnippetExpression">
      <summary>Represents a literal expression.</summary>
    </member>
    <member name="M:System.CodeDom.CodeSnippetExpression.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.CodeDom.CodeSnippetExpression" /> class.</summary>
    </member>
    <member name="M:System.CodeDom.CodeSnippetExpression.#ctor(System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.CodeDom.CodeSnippetExpression" /> class using the specified literal expression.</summary>
      <param name="value">The literal expression to represent. </param>
    </member>
    <member name="P:System.CodeDom.CodeSnippetExpression.Value">
      <summary>Gets or sets the literal string of code.</summary>
      <returns>The literal string.</returns>
    </member>
    <member name="T:System.CodeDom.CodeSnippetStatement">
      <summary>Represents a statement using a literal code fragment.</summary>
    </member>
    <member name="M:System.CodeDom.CodeSnippetStatement.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.CodeDom.CodeSnippetStatement" /> class.</summary>
    </member>
    <member name="M:System.CodeDom.CodeSnippetStatement.#ctor(System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.CodeDom.CodeSnippetStatement" /> class using the specified code fragment.</summary>
      <param name="value">The literal code fragment of the statement to represent. </param>
    </member>
    <member name="P:System.CodeDom.CodeSnippetStatement.Value">
      <summary>Gets or sets the literal code fragment statement.</summary>
      <returns>The literal code fragment statement.</returns>
    </member>
    <member name="T:System.CodeDom.CodeSnippetTypeMember">
      <summary>Represents a member of a type using a literal code fragment.</summary>
    </member>
    <member name="M:System.CodeDom.CodeSnippetTypeMember.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.CodeDom.CodeSnippetTypeMember" /> class.</summary>
    </member>
    <member name="M:System.CodeDom.CodeSnippetTypeMember.#ctor(System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.CodeDom.CodeSnippetTypeMember" /> class using the specified text.</summary>
      <param name="text">The literal code fragment for the type member. </param>
    </member>
    <member name="P:System.CodeDom.CodeSnippetTypeMember.Text">
      <summary>Gets or sets the literal code fragment for the type member.</summary>
      <returns>The literal code fragment for the type member.</returns>
    </member>
    <member name="T:System.CodeDom.CodeStatement">
      <summary>Represents the abstract base class from which all code statements derive.</summary>
    </member>
    <member name="M:System.CodeDom.CodeStatement.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.CodeDom.CodeStatement" /> class. </summary>
    </member>
    <member name="P:System.CodeDom.CodeStatement.EndDirectives">
      <summary>Gets a <see cref="T:System.CodeDom.CodeDirectiveCollection" /> object that contains end directives.</summary>
      <returns>A <see cref="T:System.CodeDom.CodeDirectiveCollection" /> object containing end directives.</returns>
    </member>
    <member name="P:System.CodeDom.CodeStatement.LinePragma">
      <summary>Gets or sets the line on which the code statement occurs. </summary>
      <returns>A <see cref="T:System.CodeDom.CodeLinePragma" /> object that indicates the context of the code statement.</returns>
    </member>
    <member name="P:System.CodeDom.CodeStatement.StartDirectives">
      <summary>Gets a <see cref="T:System.CodeDom.CodeDirectiveCollection" /> object that contains start directives.</summary>
      <returns>A <see cref="T:System.CodeDom.CodeDirectiveCollection" /> object containing start directives.</returns>
    </member>
    <member name="T:System.CodeDom.CodeStatementCollection">
      <summary>Represents a collection of <see cref="T:System.CodeDom.CodeStatement" /> objects.</summary>
    </member>
    <member name="M:System.CodeDom.CodeStatementCollection.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.CodeDom.CodeStatementCollection" /> class.</summary>
    </member>
    <member name="M:System.CodeDom.CodeStatementCollection.#ctor(System.CodeDom.CodeStatement[])">
      <summary>Initializes a new instance of the <see cref="T:System.CodeDom.CodeStatementCollection" /> class that contains the specified array of <see cref="T:System.CodeDom.CodeStatement" /> objects.</summary>
      <param name="value">An array of <see cref="T:System.CodeDom.CodeStatement" /> objects with which to initialize the collection. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="value" /> is null.</exception>
    </member>
    <member name="M:System.CodeDom.CodeStatementCollection.#ctor(System.CodeDom.CodeStatementCollection)">
      <summary>Initializes a new instance of the <see cref="T:System.CodeDom.CodeStatementCollection" /> class that contains the elements of the specified source collection.</summary>
      <param name="value">A <see cref="T:System.CodeDom.CodeStatementCollection" /> object with which to initialize the collection. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="value" /> is null.</exception>
    </member>
    <member name="M:System.CodeDom.CodeStatementCollection.Add(System.CodeDom.CodeExpression)">
      <summary>Adds the specified <see cref="T:System.CodeDom.CodeExpression" /> object to the collection.</summary>
      <returns>The index at which the new element was inserted.</returns>
      <param name="value">The <see cref="T:System.CodeDom.CodeExpression" /> object to add. </param>
    </member>
    <member name="M:System.CodeDom.CodeStatementCollection.Add(System.CodeDom.CodeStatement)">
      <summary>Adds the specified <see cref="T:System.CodeDom.CodeStatement" /> object to the collection.</summary>
      <returns>The index at which the new element was inserted.</returns>
      <param name="value">The <see cref="T:System.CodeDom.CodeStatement" /> object to add. </param>
    </member>
    <member name="M:System.CodeDom.CodeStatementCollection.AddRange(System.CodeDom.CodeStatement[])">
      <summary>Adds a set of <see cref="T:System.CodeDom.CodeStatement" /> objects to the collection.</summary>
      <param name="value">An array of <see cref="T:System.CodeDom.CodeStatement" /> objects to add to the collection. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="value" /> is null.</exception>
    </member>
    <member name="M:System.CodeDom.CodeStatementCollection.AddRange(System.CodeDom.CodeStatementCollection)">
      <summary>Adds the contents of another <see cref="T:System.CodeDom.CodeStatementCollection" /> object to the end of the collection.</summary>
      <param name="value">A <see cref="T:System.CodeDom.CodeStatementCollection" /> object that contains the objects to add to the collection. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="value" /> is null.</exception>
    </member>
    <member name="M:System.CodeDom.CodeStatementCollection.Contains(System.CodeDom.CodeStatement)">
      <summary>Gets a value that indicates whether the collection contains the specified <see cref="T:System.CodeDom.CodeStatement" /> object.</summary>
      <returns>true if the collection contains the specified object; otherwise, false.</returns>
      <param name="value">The <see cref="T:System.CodeDom.CodeStatement" /> object to search for in the collection. </param>
    </member>
    <member name="M:System.CodeDom.CodeStatementCollection.CopyTo(System.CodeDom.CodeStatement[],System.Int32)">
      <summary>Copies the elements of the <see cref="T:System.CodeDom.CodeStatementCollection" /> object to a one-dimensional <see cref="T:System.Array" /> instance, starting at the specified index.</summary>
      <param name="array">The one-dimensional <see cref="T:System.Array" /> that is the destination of the values copied from the collection. </param>
      <param name="index">The index of the array at which to begin inserting. </param>
      <exception cref="T:System.ArgumentException">The destination array is multidimensional.-or- The number of elements in the <see cref="T:System.CodeDom.CodeStatementCollection" /> is greater than the available space between the index of the target array specified by the <paramref name="index" /> parameter and the end of the target array. </exception>
      <exception cref="T:System.ArgumentNullException">The <paramref name="array" /> parameter is null. </exception>
      <exception cref="T:System.ArgumentOutOfRangeException">The <paramref name="index" /> parameter is less than the target array's minimum index. </exception>
    </member>
    <member name="M:System.CodeDom.CodeStatementCollection.IndexOf(System.CodeDom.CodeStatement)">
      <summary>Gets the index of the specified <see cref="T:System.CodeDom.CodeStatement" /> object in the <see cref="T:System.CodeDom.CodeStatementCollection" />, if it exists in the collection.</summary>
      <returns>The index of the specified object, if it is found, in the collection; otherwise, -1.</returns>
      <param name="value">The <see cref="T:System.CodeDom.CodeStatement" /> to locate in the collection. </param>
    </member>
    <member name="M:System.CodeDom.CodeStatementCollection.Insert(System.Int32,System.CodeDom.CodeStatement)">
      <summary>Inserts the specified <see cref="T:System.CodeDom.CodeStatement" /> object into the collection at the specified index.</summary>
      <param name="index">The zero-based index where the specified object should be inserted. </param>
      <param name="value">The <see cref="T:System.CodeDom.CodeStatement" /> object to insert. </param>
    </member>
    <member name="P:System.CodeDom.CodeStatementCollection.Item(System.Int32)">
      <summary>Gets or sets the <see cref="T:System.CodeDom.CodeStatement" /> object at the specified index in the collection.</summary>
      <returns>A <see cref="T:System.CodeDom.CodeStatement" /> at each valid index.</returns>
      <param name="index">The index of the collection to access. </param>
      <exception cref="T:System.ArgumentOutOfRangeException">The <paramref name="index" /> parameter is outside the valid range of indexes for the collection. </exception>
    </member>
    <member name="M:System.CodeDom.CodeStatementCollection.Remove(System.CodeDom.CodeStatement)">
      <summary>Removes the specified <see cref="T:System.CodeDom.CodeStatement" /> object from the collection.</summary>
      <param name="value">The <see cref="T:System.CodeDom.CodeStatement" /> to remove from the collection. </param>
      <exception cref="T:System.ArgumentException">The specified object is not found in the collection. </exception>
    </member>
    <member name="T:System.CodeDom.CodeThisReferenceExpression">
      <summary>Represents a reference to the current local class instance.</summary>
    </member>
    <member name="M:System.CodeDom.CodeThisReferenceExpression.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.CodeDom.CodeThisReferenceExpression" /> class. </summary>
    </member>
    <member name="T:System.CodeDom.CodeThrowExceptionStatement">
      <summary>Represents a statement that throws an exception.</summary>
    </member>
    <member name="M:System.CodeDom.CodeThrowExceptionStatement.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.CodeDom.CodeThrowExceptionStatement" /> class.</summary>
    </member>
    <member name="M:System.CodeDom.CodeThrowExceptionStatement.#ctor(System.CodeDom.CodeExpression)">
      <summary>Initializes a new instance of the <see cref="T:System.CodeDom.CodeThrowExceptionStatement" /> class with the specified exception type instance.</summary>
      <param name="toThrow">A <see cref="T:System.CodeDom.CodeExpression" /> that indicates the exception to throw. </param>
    </member>
    <member name="P:System.CodeDom.CodeThrowExceptionStatement.ToThrow">
      <summary>Gets or sets the exception to throw.</summary>
      <returns>A <see cref="T:System.CodeDom.CodeExpression" /> representing an instance of the exception to throw.</returns>
    </member>
    <member name="T:System.CodeDom.CodeTryCatchFinallyStatement">
      <summary>Represents a try block with any number of catch clauses and, optionally, a finally block.</summary>
    </member>
    <member name="M:System.CodeDom.CodeTryCatchFinallyStatement.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.CodeDom.CodeTryCatchFinallyStatement" /> class.</summary>
    </member>
    <member name="M:System.CodeDom.CodeTryCatchFinallyStatement.#ctor(System.CodeDom.CodeStatement[],System.CodeDom.CodeCatchClause[])">
      <summary>Initializes a new instance of the <see cref="T:System.CodeDom.CodeTryCatchFinallyStatement" /> class using the specified statements for try and catch clauses.</summary>
      <param name="tryStatements">An array of <see cref="T:System.CodeDom.CodeStatement" /> objects that indicate the statements to try. </param>
      <param name="catchClauses">An array of <see cref="T:System.CodeDom.CodeCatchClause" /> objects that indicate the clauses to catch. </param>
    </member>
    <member name="M:System.CodeDom.CodeTryCatchFinallyStatement.#ctor(System.CodeDom.CodeStatement[],System.CodeDom.CodeCatchClause[],System.CodeDom.CodeStatement[])">
      <summary>Initializes a new instance of the <see cref="T:System.CodeDom.CodeTryCatchFinallyStatement" /> class using the specified statements for try, catch clauses, and finally statements.</summary>
      <param name="tryStatements">An array of <see cref="T:System.CodeDom.CodeStatement" /> objects that indicate the statements to try. </param>
      <param name="catchClauses">An array of <see cref="T:System.CodeDom.CodeCatchClause" /> objects that indicate the clauses to catch. </param>
      <param name="finallyStatements">An array of <see cref="T:System.CodeDom.CodeStatement" /> objects that indicate the finally statements to use. </param>
    </member>
    <member name="P:System.CodeDom.CodeTryCatchFinallyStatement.CatchClauses">
      <summary>Gets the catch clauses to use.</summary>
      <returns>A <see cref="T:System.CodeDom.CodeCatchClauseCollection" /> that indicates the catch clauses to use.</returns>
    </member>
    <member name="P:System.CodeDom.CodeTryCatchFinallyStatement.FinallyStatements">
      <summary>Gets the finally statements to use.</summary>
      <returns>A <see cref="T:System.CodeDom.CodeStatementCollection" /> that indicates the finally statements.</returns>
    </member>
    <member name="P:System.CodeDom.CodeTryCatchFinallyStatement.TryStatements">
      <summary>Gets the statements to try.</summary>
      <returns>A <see cref="T:System.CodeDom.CodeStatementCollection" /> that indicates the statements to try.</returns>
    </member>
    <member name="T:System.CodeDom.CodeTypeConstructor">
      <summary>Represents a static constructor for a class.</summary>
    </member>
    <member name="M:System.CodeDom.CodeTypeConstructor.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.CodeDom.CodeTypeConstructor" /> class.</summary>
    </member>
    <member name="T:System.CodeDom.CodeTypeDeclaration">
      <summary>Represents a type declaration for a class, structure, interface, or enumeration.</summary>
    </member>
    <member name="M:System.CodeDom.CodeTypeDeclaration.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.CodeDom.CodeTypeDeclaration" /> class.</summary>
    </member>
    <member name="M:System.CodeDom.CodeTypeDeclaration.#ctor(System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.CodeDom.CodeTypeDeclaration" /> class with the specified name.</summary>
      <param name="name">The name for the new type. </param>
    </member>
    <member name="P:System.CodeDom.CodeTypeDeclaration.BaseTypes">
      <summary>Gets the base types of the type.</summary>
      <returns>A <see cref="T:System.CodeDom.CodeTypeReferenceCollection" /> object that indicates the base types of the type.</returns>
    </member>
    <member name="P:System.CodeDom.CodeTypeDeclaration.IsClass">
      <summary>Gets or sets a value indicating whether the type is a class or reference type.</summary>
      <returns>true if the type is a class or reference type; otherwise, false.</returns>
    </member>
    <member name="P:System.CodeDom.CodeTypeDeclaration.IsEnum">
      <summary>Gets or sets a value indicating whether the type is an enumeration.</summary>
      <returns>true if the type is an enumeration; otherwise, false.</returns>
    </member>
    <member name="P:System.CodeDom.CodeTypeDeclaration.IsInterface">
      <summary>Gets or sets a value indicating whether the type is an interface.</summary>
      <returns>true if the type is an interface; otherwise, false.</returns>
    </member>
    <member name="P:System.CodeDom.CodeTypeDeclaration.IsPartial">
      <summary>Gets or sets a value indicating whether the type declaration is complete or partial.</summary>
      <returns>true if the class or structure declaration is a partial representation of the implementation; false if the declaration is a complete implementation of the class or structure. The default is false.</returns>
    </member>
    <member name="P:System.CodeDom.CodeTypeDeclaration.IsStruct">
      <summary>Gets or sets a value indicating whether the type is a value type (struct).</summary>
      <returns>true if the type is a value type; otherwise, false.</returns>
    </member>
    <member name="P:System.CodeDom.CodeTypeDeclaration.Members">
      <summary>Gets the collection of class members for the represented type.</summary>
      <returns>A <see cref="T:System.CodeDom.CodeTypeMemberCollection" /> object that indicates the class members.</returns>
    </member>
    <member name="E:System.CodeDom.CodeTypeDeclaration.PopulateBaseTypes">
      <summary>Occurs when the <see cref="P:System.CodeDom.CodeTypeDeclaration.BaseTypes" /> collection is accessed for the first time.</summary>
    </member>
    <member name="E:System.CodeDom.CodeTypeDeclaration.PopulateMembers">
      <summary>Occurs when the <see cref="P:System.CodeDom.CodeTypeDeclaration.Members" /> collection is accessed for the first time.</summary>
    </member>
    <member name="P:System.CodeDom.CodeTypeDeclaration.TypeAttributes">
      <summary>Gets or sets the attributes of the type.</summary>
      <returns>A <see cref="T:System.Reflection.TypeAttributes" /> object that indicates the attributes of the type.</returns>
    </member>
    <member name="P:System.CodeDom.CodeTypeDeclaration.TypeParameters">
      <summary>Gets the type parameters for the type declaration.</summary>
      <returns>A <see cref="T:System.CodeDom.CodeTypeParameterCollection" /> that contains the type parameters for the type declaration.</returns>
    </member>
    <member name="T:System.CodeDom.CodeTypeDeclarationCollection">
      <summary>Represents a collection of <see cref="T:System.CodeDom.CodeTypeDeclaration" /> objects.</summary>
    </member>
    <member name="M:System.CodeDom.CodeTypeDeclarationCollection.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.CodeDom.CodeTypeDeclarationCollection" /> class.</summary>
    </member>
    <member name="M:System.CodeDom.CodeTypeDeclarationCollection.#ctor(System.CodeDom.CodeTypeDeclaration[])">
      <summary>Initializes a new instance of the <see cref="T:System.CodeDom.CodeTypeDeclarationCollection" /> class that contains the specified array of <see cref="T:System.CodeDom.CodeTypeDeclaration" /> objects.</summary>
      <param name="value">An array of <see cref="T:System.CodeDom.CodeTypeDeclaration" /> objects with which to initialize the collection. </param>
    </member>
    <member name="M:System.CodeDom.CodeTypeDeclarationCollection.#ctor(System.CodeDom.CodeTypeDeclarationCollection)">
      <summary>Initializes a new instance of the <see cref="T:System.CodeDom.CodeTypeDeclarationCollection" /> class that contains the elements of the specified source collection.</summary>
      <param name="value">A <see cref="T:System.CodeDom.CodeTypeDeclarationCollection" /> object with which to initialize the collection. </param>
    </member>
    <member name="M:System.CodeDom.CodeTypeDeclarationCollection.Add(System.CodeDom.CodeTypeDeclaration)">
      <summary>Adds the specified <see cref="T:System.CodeDom.CodeTypeDeclaration" /> object to the collection.</summary>
      <returns>The index at which the new element was inserted.</returns>
      <param name="value">The <see cref="T:System.CodeDom.CodeTypeDeclaration" /> object to add. </param>
    </member>
    <member name="M:System.CodeDom.CodeTypeDeclarationCollection.AddRange(System.CodeDom.CodeTypeDeclaration[])">
      <summary>Copies the elements of the specified array to the end of the collection.</summary>
      <param name="value">An array of type <see cref="T:System.CodeDom.CodeTypeDeclaration" /> that contains the objects to add to the collection. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="value" /> is null.</exception>
    </member>
    <member name="M:System.CodeDom.CodeTypeDeclarationCollection.AddRange(System.CodeDom.CodeTypeDeclarationCollection)">
      <summary>Adds the contents of another <see cref="T:System.CodeDom.CodeTypeDeclarationCollection" /> object to the end of the collection.</summary>
      <param name="value">A <see cref="T:System.CodeDom.CodeTypeDeclarationCollection" /> object that contains the objects to add to the collection. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="value" /> is null.</exception>
    </member>
    <member name="M:System.CodeDom.CodeTypeDeclarationCollection.Contains(System.CodeDom.CodeTypeDeclaration)">
      <summary>Gets a value that indicates whether the collection contains the specified <see cref="T:System.CodeDom.CodeTypeDeclaration" /> object.</summary>
      <returns>true if the collection contains the specified object; otherwise, false.</returns>
      <param name="value">The <see cref="T:System.CodeDom.CodeTypeDeclaration" /> object to search for in the collection. </param>
    </member>
    <member name="M:System.CodeDom.CodeTypeDeclarationCollection.CopyTo(System.CodeDom.CodeTypeDeclaration[],System.Int32)">
      <summary>Copies the elements in the <see cref="T:System.CodeDom.CodeTypeDeclarationCollection" /> object to a one-dimensional <see cref="T:System.Array" /> instance, starting at the specified index.</summary>
      <param name="array">The one-dimensional <see cref="T:System.Array" /> that is the destination of the values copied from the collection. </param>
      <param name="index">The index of the array at which to begin inserting. </param>
      <exception cref="T:System.ArgumentException">The destination array is multidimensional.-or- The number of elements in the <see cref="T:System.CodeDom.CodeTypeDeclarationCollection" /> is greater than the available space between the index of the target array specified by the <paramref name="index" /> parameter and the end of the target array. </exception>
      <exception cref="T:System.ArgumentNullException">The <paramref name="array" /> parameter is null. </exception>
      <exception cref="T:System.ArgumentOutOfRangeException">The <paramref name="index" /> parameter is less than the target array's minimum index. </exception>
    </member>
    <member name="M:System.CodeDom.CodeTypeDeclarationCollection.IndexOf(System.CodeDom.CodeTypeDeclaration)">
      <summary>Gets the index of the specified <see cref="T:System.CodeDom.CodeTypeDeclaration" /> object in the <see cref="T:System.CodeDom.CodeTypeDeclarationCollection" />, if it exists in the collection.</summary>
      <returns>The index of the specified object, if it is found, in the collection; otherwise, -1.</returns>
      <param name="value">The <see cref="T:System.CodeDom.CodeTypeDeclaration" /> to locate in the collection. </param>
    </member>
    <member name="M:System.CodeDom.CodeTypeDeclarationCollection.Insert(System.Int32,System.CodeDom.CodeTypeDeclaration)">
      <summary>Inserts the specified <see cref="T:System.CodeDom.CodeTypeDeclaration" /> object into the collection at the specified index.</summary>
      <param name="index">The zero-based index where the specified object should be inserted. </param>
      <param name="value">The <see cref="T:System.CodeDom.CodeTypeDeclaration" /> object to insert. </param>
    </member>
    <member name="P:System.CodeDom.CodeTypeDeclarationCollection.Item(System.Int32)">
      <summary>Gets or sets the <see cref="T:System.CodeDom.CodeTypeDeclaration" /> object at the specified index in the collection.</summary>
      <returns>A <see cref="T:System.CodeDom.CodeTypeDeclaration" /> at each valid index.</returns>
      <param name="index">The index of the collection to access. </param>
      <exception cref="T:System.ArgumentOutOfRangeException">The <paramref name="index" /> parameter is outside the valid range of indexes for the collection. </exception>
    </member>
    <member name="M:System.CodeDom.CodeTypeDeclarationCollection.Remove(System.CodeDom.CodeTypeDeclaration)">
      <summary>Removes the specified <see cref="T:System.CodeDom.CodeTypeDeclaration" /> object from the collection.</summary>
      <param name="value">The <see cref="T:System.CodeDom.CodeTypeDeclaration" /> to remove from the collection. </param>
      <exception cref="T:System.ArgumentException">The specified object is not found in the collection. </exception>
    </member>
    <member name="T:System.CodeDom.CodeTypeDelegate">
      <summary>Represents a delegate declaration.</summary>
    </member>
    <member name="M:System.CodeDom.CodeTypeDelegate.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.CodeDom.CodeTypeDelegate" /> class.</summary>
    </member>
    <member name="M:System.CodeDom.CodeTypeDelegate.#ctor(System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.CodeDom.CodeTypeDelegate" /> class.</summary>
      <param name="name">The name of the delegate. </param>
    </member>
    <member name="P:System.CodeDom.CodeTypeDelegate.Parameters">
      <summary>Gets the parameters of the delegate.</summary>
      <returns>A <see cref="T:System.CodeDom.CodeParameterDeclarationExpressionCollection" /> that indicates the parameters of the delegate.</returns>
    </member>
    <member name="P:System.CodeDom.CodeTypeDelegate.ReturnType">
      <summary>Gets or sets the return type of the delegate.</summary>
      <returns>A <see cref="T:System.CodeDom.CodeTypeReference" /> that indicates the return type of the delegate.</returns>
    </member>
    <member name="T:System.CodeDom.CodeTypeMember">
      <summary>Provides a base class for a member of a type. Type members include fields, methods, properties, constructors and nested types.</summary>
    </member>
    <member name="M:System.CodeDom.CodeTypeMember.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.CodeDom.CodeTypeMember" /> class. </summary>
    </member>
    <member name="P:System.CodeDom.CodeTypeMember.Attributes">
      <summary>Gets or sets the attributes of the member.</summary>
      <returns>A bitwise combination of the <see cref="T:System.CodeDom.MemberAttributes" /> values used to indicate the attributes of the member. The default value is <see cref="F:System.CodeDom.MemberAttributes.Private" /> | <see cref="F:System.CodeDom.MemberAttributes.Final" />. </returns>
    </member>
    <member name="P:System.CodeDom.CodeTypeMember.Comments">
      <summary>Gets the collection of comments for the type member.</summary>
      <returns>A <see cref="T:System.CodeDom.CodeCommentStatementCollection" /> that indicates the comments for the member.</returns>
    </member>
    <member name="P:System.CodeDom.CodeTypeMember.CustomAttributes">
      <summary>Gets or sets the custom attributes of the member.</summary>
      <returns>A <see cref="T:System.CodeDom.CodeAttributeDeclarationCollection" /> that indicates the custom attributes of the member.</returns>
    </member>
    <member name="P:System.CodeDom.CodeTypeMember.EndDirectives">
      <summary>Gets the end directives for the member.</summary>
      <returns>A <see cref="T:System.CodeDom.CodeDirectiveCollection" /> object containing end directives.</returns>
    </member>
    <member name="P:System.CodeDom.CodeTypeMember.LinePragma">
      <summary>Gets or sets the line on which the type member statement occurs.</summary>
      <returns>A <see cref="T:System.CodeDom.CodeLinePragma" /> object that indicates the location of the type member declaration.</returns>
    </member>
    <member name="P:System.CodeDom.CodeTypeMember.Name">
      <summary>Gets or sets the name of the member.</summary>
      <returns>The name of the member.</returns>
    </member>
    <member name="P:System.CodeDom.CodeTypeMember.StartDirectives">
      <summary>Gets the start directives for the member.</summary>
      <returns>A <see cref="T:System.CodeDom.CodeDirectiveCollection" /> object containing start directives.</returns>
    </member>
    <member name="T:System.CodeDom.CodeTypeMemberCollection">
      <summary>Represents a collection of <see cref="T:System.CodeDom.CodeTypeMember" /> objects.</summary>
    </member>
    <member name="M:System.CodeDom.CodeTypeMemberCollection.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.CodeDom.CodeTypeMemberCollection" /> class.</summary>
    </member>
    <member name="M:System.CodeDom.CodeTypeMemberCollection.#ctor(System.CodeDom.CodeTypeMember[])">
      <summary>Initializes a new instance of the <see cref="T:System.CodeDom.CodeTypeMemberCollection" /> class containing the specified array of <see cref="T:System.CodeDom.CodeTypeMember" /> objects.</summary>
      <param name="value">An array of <see cref="T:System.CodeDom.CodeTypeMember" /> objects with which to initialize the collection. </param>
    </member>
    <member name="M:System.CodeDom.CodeTypeMemberCollection.#ctor(System.CodeDom.CodeTypeMemberCollection)">
      <summary>Initializes a new instance of the <see cref="T:System.CodeDom.CodeTypeMemberCollection" /> class containing the elements of the specified source collection.</summary>
      <param name="value">A <see cref="T:System.CodeDom.CodeTypeMemberCollection" /> with which to initialize the collection. </param>
    </member>
    <member name="M:System.CodeDom.CodeTypeMemberCollection.Add(System.CodeDom.CodeTypeMember)">
      <summary>Adds a <see cref="T:System.CodeDom.CodeTypeMember" /> with the specified value to the collection.</summary>
      <returns>The index at which the new element was inserted.</returns>
      <param name="value">The <see cref="T:System.CodeDom.CodeTypeMember" /> to add. </param>
    </member>
    <member name="M:System.CodeDom.CodeTypeMemberCollection.AddRange(System.CodeDom.CodeTypeMember[])">
      <summary>Copies the elements of the specified <see cref="T:System.CodeDom.CodeTypeMember" /> array to the end of the collection.</summary>
      <param name="value">An array of type <see cref="T:System.CodeDom.CodeTypeMember" /> containing the objects to add to the collection. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="value" /> is null.</exception>
    </member>
    <member name="M:System.CodeDom.CodeTypeMemberCollection.AddRange(System.CodeDom.CodeTypeMemberCollection)">
      <summary>Adds the contents of another <see cref="T:System.CodeDom.CodeTypeMemberCollection" /> to the end of the collection.</summary>
      <param name="value">A <see cref="T:System.CodeDom.CodeTypeMemberCollection" /> containing the objects to add to the collection. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="value" /> is null.</exception>
    </member>
    <member name="M:System.CodeDom.CodeTypeMemberCollection.Contains(System.CodeDom.CodeTypeMember)">
      <summary>Gets a value indicating whether the collection contains the specified <see cref="T:System.CodeDom.CodeTypeMember" />.</summary>
      <returns>true if the collection contains the specified object; otherwise, false.</returns>
      <param name="value">The <see cref="T:System.CodeDom.CodeTypeMember" /> to search for in the collection. </param>
    </member>
    <member name="M:System.CodeDom.CodeTypeMemberCollection.CopyTo(System.CodeDom.CodeTypeMember[],System.Int32)">
      <summary>Copies the collection objects to a one-dimensional <see cref="T:System.Array" /> instance, beginning at the specified index.</summary>
      <param name="array">The one-dimensional <see cref="T:System.Array" /> that is the destination of the values copied from the collection. </param>
      <param name="index">The index of the array at which to begin inserting. </param>
      <exception cref="T:System.ArgumentException">The destination array is multidimensional.-or- The number of elements in the <see cref="T:System.CodeDom.CodeTypeMemberCollection" /> is greater than the available space between the index of the target array specified by the <paramref name="index" /> parameter and the end of the target array. </exception>
      <exception cref="T:System.ArgumentNullException">The <paramref name="array" /> parameter is null. </exception>
      <exception cref="T:System.ArgumentOutOfRangeException">The <paramref name="index" /> parameter is less than the target array's minimum index. </exception>
    </member>
    <member name="M:System.CodeDom.CodeTypeMemberCollection.IndexOf(System.CodeDom.CodeTypeMember)">
      <summary>Gets the index in the collection of the specified <see cref="T:System.CodeDom.CodeTypeMember" />, if it exists in the collection.</summary>
      <returns>The index in the collection of the specified object, if found; otherwise, -1.</returns>
      <param name="value">The <see cref="T:System.CodeDom.CodeTypeMember" /> to locate in the collection. </param>
    </member>
    <member name="M:System.CodeDom.CodeTypeMemberCollection.Insert(System.Int32,System.CodeDom.CodeTypeMember)">
      <summary>Inserts the specified <see cref="T:System.CodeDom.CodeTypeMember" /> into the collection at the specified index.</summary>
      <param name="index">The zero-based index where the specified object should be inserted. </param>
      <param name="value">The <see cref="T:System.CodeDom.CodeTypeMember" /> to insert. </param>
    </member>
    <member name="P:System.CodeDom.CodeTypeMemberCollection.Item(System.Int32)">
      <summary>Gets or sets the <see cref="T:System.CodeDom.CodeTypeMember" /> at the specified index in the collection.</summary>
      <returns>A <see cref="T:System.CodeDom.CodeTypeMember" /> at each valid index.</returns>
      <param name="index">The index of the collection to access. </param>
      <exception cref="T:System.ArgumentOutOfRangeException">The <paramref name="index" /> parameter is outside the valid range of indexes for the collection. </exception>
    </member>
    <member name="M:System.CodeDom.CodeTypeMemberCollection.Remove(System.CodeDom.CodeTypeMember)">
      <summary>Removes a specific <see cref="T:System.CodeDom.CodeTypeMember" /> from the collection.</summary>
      <param name="value">The <see cref="T:System.CodeDom.CodeTypeMember" /> to remove from the collection. </param>
      <exception cref="T:System.ArgumentException">The specified object is not found in the collection. </exception>
    </member>
    <member name="T:System.CodeDom.CodeTypeOfExpression">
      <summary>Represents a typeof expression, an expression that returns a <see cref="T:System.Type" /> for a specified type name.</summary>
    </member>
    <member name="M:System.CodeDom.CodeTypeOfExpression.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.CodeDom.CodeTypeOfExpression" /> class.</summary>
    </member>
    <member name="M:System.CodeDom.CodeTypeOfExpression.#ctor(System.CodeDom.CodeTypeReference)">
      <summary>Initializes a new instance of the <see cref="T:System.CodeDom.CodeTypeOfExpression" /> class.</summary>
      <param name="type">A <see cref="T:System.CodeDom.CodeTypeReference" /> that indicates the data type for the typeof expression. </param>
    </member>
    <member name="M:System.CodeDom.CodeTypeOfExpression.#ctor(System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.CodeDom.CodeTypeOfExpression" /> class using the specified type.</summary>
      <param name="type">The name of the data type for the typeof expression. </param>
    </member>
    <member name="M:System.CodeDom.CodeTypeOfExpression.#ctor(System.Type)">
      <summary>Initializes a new instance of the <see cref="T:System.CodeDom.CodeTypeOfExpression" /> class using the specified type.</summary>
      <param name="type">The data type of the data type of the typeof expression. </param>
    </member>
    <member name="P:System.CodeDom.CodeTypeOfExpression.Type">
      <summary>Gets or sets the data type referenced by the typeof expression.</summary>
      <returns>A <see cref="T:System.CodeDom.CodeTypeReference" /> that indicates the data type referenced by the typeof expression. This property will never return null, and defaults to the <see cref="T:System.Void" /> type.</returns>
    </member>
    <member name="T:System.CodeDom.CodeTypeParameter">
      <summary>Represents a type parameter of a generic type or method.</summary>
    </member>
    <member name="M:System.CodeDom.CodeTypeParameter.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.CodeDom.CodeTypeParameter" /> class. </summary>
    </member>
    <member name="M:System.CodeDom.CodeTypeParameter.#ctor(System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.CodeDom.CodeTypeParameter" /> class with the specified type parameter name. </summary>
      <param name="name">The name of the type parameter.</param>
    </member>
    <member name="P:System.CodeDom.CodeTypeParameter.Constraints">
      <summary>Gets the constraints for the type parameter.</summary>
      <returns>A <see cref="T:System.CodeDom.CodeTypeReferenceCollection" /> object that contains the constraints for the type parameter.</returns>
    </member>
    <member name="P:System.CodeDom.CodeTypeParameter.CustomAttributes">
      <summary>Gets the custom attributes of the type parameter.</summary>
      <returns>A <see cref="T:System.CodeDom.CodeAttributeDeclarationCollection" /> that indicates the custom attributes of the type parameter. The default is null.</returns>
    </member>
    <member name="P:System.CodeDom.CodeTypeParameter.HasConstructorConstraint">
      <summary>Gets or sets a value indicating whether the type parameter has a constructor constraint.</summary>
      <returns>true if the type parameter has a constructor constraint; otherwise, false. The default is false.</returns>
    </member>
    <member name="P:System.CodeDom.CodeTypeParameter.Name">
      <summary>Gets or sets the name of the type parameter.</summary>
      <returns>The name of the type parameter. The default is an empty string ("").</returns>
    </member>
    <member name="T:System.CodeDom.CodeTypeParameterCollection">
      <summary>Represents a collection of <see cref="T:System.CodeDom.CodeTypeParameter" /> objects.</summary>
    </member>
    <member name="M:System.CodeDom.CodeTypeParameterCollection.#ctor">
      <summary>Initializes a new, empty instance of the <see cref="T:System.CodeDom.CodeTypeParameterCollection" /> class. </summary>
    </member>
    <member name="M:System.CodeDom.CodeTypeParameterCollection.#ctor(System.CodeDom.CodeTypeParameter[])">
      <summary>Initializes a new instance of the <see cref="T:System.CodeDom.CodeTypeParameterCollection" /> class containing the specified array of <see cref="T:System.CodeDom.CodeTypeParameter" /> objects. </summary>
      <param name="value">An array of <see cref="T:System.CodeDom.CodeTypeParameter" /> objects with which to initialize the collection.</param>
    </member>
    <member name="M:System.CodeDom.CodeTypeParameterCollection.#ctor(System.CodeDom.CodeTypeParameterCollection)">
      <summary>Initializes a new instance of the <see cref="T:System.CodeDom.CodeTypeParameterCollection" /> class containing the elements of the specified source collection.</summary>
      <param name="value">A <see cref="T:System.CodeDom.CodeTypeParameterCollection" /> with which to initialize the collection.</param>
    </member>
    <member name="M:System.CodeDom.CodeTypeParameterCollection.Add(System.CodeDom.CodeTypeParameter)">
      <summary>Adds the specified <see cref="T:System.CodeDom.CodeTypeParameter" /> object to the collection.</summary>
      <returns>The zero-based index at which the new element was inserted.</returns>
      <param name="value">The <see cref="T:System.CodeDom.CodeTypeParameter" /> to add.</param>
    </member>
    <member name="M:System.CodeDom.CodeTypeParameterCollection.Add(System.String)">
      <summary>Adds the specified <see cref="T:System.CodeDom.CodeTypeParameter" /> object to the collection using the specified data type name.</summary>
      <param name="value">The name of a data type for which to add the <see cref="T:System.CodeDom.CodeTypeParameter" /> object to the collection.</param>
    </member>
    <member name="M:System.CodeDom.CodeTypeParameterCollection.AddRange(System.CodeDom.CodeTypeParameter[])">
      <summary>Copies the elements of the specified <see cref="T:System.CodeDom.CodeTypeParameter" /> array to the end of the collection.</summary>
      <param name="value">An array of type <see cref="T:System.CodeDom.CodeTypeParameter" /> containing the objects to add to the collection.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="value" /> is null.</exception>
    </member>
    <member name="M:System.CodeDom.CodeTypeParameterCollection.AddRange(System.CodeDom.CodeTypeParameterCollection)">
      <summary>Copies the elements of the specified <see cref="T:System.CodeDom.CodeTypeParameterCollection" /> to the end of the collection.</summary>
      <param name="value">A <see cref="T:System.CodeDom.CodeTypeParameterCollection" /> containing the <see cref="T:System.CodeDom.CodeTypeParameter" /> objects to add to the collection.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="value" /> is null.</exception>
    </member>
    <member name="M:System.CodeDom.CodeTypeParameterCollection.Contains(System.CodeDom.CodeTypeParameter)">
      <summary>Determines whether the collection contains the specified <see cref="T:System.CodeDom.CodeTypeParameter" /> object.</summary>
      <returns>true if the <see cref="T:System.CodeDom.CodeTypeParameter" /> object is contained in the collection; otherwise, false.</returns>
      <param name="value">The <see cref="T:System.CodeDom.CodeTypeParameter" /> object to search for in the collection.</param>
    </member>
    <member name="M:System.CodeDom.CodeTypeParameterCollection.CopyTo(System.CodeDom.CodeTypeParameter[],System.Int32)">
      <summary>Copies the items in the collection to the specified one-dimensional <see cref="T:System.Array" /> at the specified index.</summary>
      <param name="array">The one-dimensional <see cref="T:System.Array" /> that is the destination of the values copied from the collection. </param>
      <param name="index">The index of the array at which to begin inserting. </param>
      <exception cref="T:System.ArgumentException">
        <paramref name="array" /> is multidimensional.-or- The number of elements in the <see cref="T:System.CodeDom.CodeTypeParameterCollection" /> is greater than the available space between the index of the target array specified by <paramref name="index" /> and the end of the target array. </exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="array" /> is null. </exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> is less than the target array's lowest index. </exception>
    </member>
    <member name="M:System.CodeDom.CodeTypeParameterCollection.IndexOf(System.CodeDom.CodeTypeParameter)">
      <summary>Gets the index in the collection of the specified <see cref="T:System.CodeDom.CodeTypeParameter" /> object, if it exists in the collection.</summary>
      <returns>The zero-based index of the specified <see cref="T:System.CodeDom.CodeTypeParameter" /> object in the collection if found; otherwise, -1.</returns>
      <param name="value">The <see cref="T:System.CodeDom.CodeTypeParameter" /> object to locate in the collection.</param>
    </member>
    <member name="M:System.CodeDom.CodeTypeParameterCollection.Insert(System.Int32,System.CodeDom.CodeTypeParameter)">
      <summary>Inserts the specified <see cref="T:System.CodeDom.CodeTypeParameter" /> object into the collection at the specified index.</summary>
      <param name="index">The zero-based index at which to insert the item. </param>
      <param name="value">The <see cref="T:System.CodeDom.CodeTypeParameter" /> object to insert. </param>
    </member>
    <member name="P:System.CodeDom.CodeTypeParameterCollection.Item(System.Int32)">
      <summary>Gets or sets the <see cref="T:System.CodeDom.CodeTypeParameter" /> object at the specified index in the collection.</summary>
      <returns>The <see cref="T:System.CodeDom.CodeTypeParameter" /> object at the specified index.</returns>
      <param name="index">The zero-based index of the collection object to access.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> is outside the valid range of indexes for the collection. </exception>
    </member>
    <member name="M:System.CodeDom.CodeTypeParameterCollection.Remove(System.CodeDom.CodeTypeParameter)">
      <summary>Removes the specified <see cref="T:System.CodeDom.CodeTypeParameter" /> object from the collection.</summary>
      <param name="value">The <see cref="T:System.CodeDom.CodeTypeParameter" /> object to remove from the collection.</param>
      <exception cref="T:System.ArgumentException">The specified object is not found in the collection. </exception>
    </member>
    <member name="T:System.CodeDom.CodeTypeReference">
      <summary>Represents a reference to a type.</summary>
    </member>
    <member name="M:System.CodeDom.CodeTypeReference.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.CodeDom.CodeTypeReference" /> class. </summary>
    </member>
    <member name="M:System.CodeDom.CodeTypeReference.#ctor(System.CodeDom.CodeTypeParameter)">
      <summary>Initializes a new instance of the <see cref="T:System.CodeDom.CodeTypeReference" /> class using the specified code type parameter. </summary>
      <param name="typeParameter">A <see cref="T:System.CodeDom.CodeTypeParameter" /> that represents the type of the type parameter.</param>
    </member>
    <member name="M:System.CodeDom.CodeTypeReference.#ctor(System.CodeDom.CodeTypeReference,System.Int32)">
      <summary>Initializes a new instance of the <see cref="T:System.CodeDom.CodeTypeReference" /> class using the specified array type and rank.</summary>
      <param name="arrayType">A <see cref="T:System.CodeDom.CodeTypeReference" /> that indicates the type of the array. </param>
      <param name="rank">The number of dimensions in the array. </param>
    </member>
    <member name="M:System.CodeDom.CodeTypeReference.#ctor(System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.CodeDom.CodeTypeReference" /> class using the specified type name.</summary>
      <param name="typeName">The name of the type to reference. </param>
    </member>
    <member name="M:System.CodeDom.CodeTypeReference.#ctor(System.String,System.CodeDom.CodeTypeReference[])">
      <summary>Initializes a new instance of the <see cref="T:System.CodeDom.CodeTypeReference" /> class using the specified type name and type arguments.</summary>
      <param name="typeName">The name of the type to reference.</param>
      <param name="typeArguments">An array of <see cref="T:System.CodeDom.CodeTypeReference" /> values.</param>
    </member>
    <member name="M:System.CodeDom.CodeTypeReference.#ctor(System.String,System.CodeDom.CodeTypeReferenceOptions)">
      <summary>Initializes a new instance of the <see cref="T:System.CodeDom.CodeTypeReference" /> class using the specified type name and code type reference option.</summary>
      <param name="typeName">The name of the type to reference.</param>
      <param name="codeTypeReferenceOption">The code type reference option, one of the <see cref="T:System.CodeDom.CodeTypeReferenceOptions" /> values.</param>
    </member>
    <member name="M:System.CodeDom.CodeTypeReference.#ctor(System.String,System.Int32)">
      <summary>Initializes a new instance of the <see cref="T:System.CodeDom.CodeTypeReference" /> class using the specified array type name and rank.</summary>
      <param name="baseType">The name of the type of the elements of the array. </param>
      <param name="rank">The number of dimensions of the array. </param>
    </member>
    <member name="M:System.CodeDom.CodeTypeReference.#ctor(System.Type)">
      <summary>Initializes a new instance of the <see cref="T:System.CodeDom.CodeTypeReference" /> class using the specified type.</summary>
      <param name="type">The <see cref="T:System.Type" /> to reference. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="type " />is null.</exception>
    </member>
    <member name="M:System.CodeDom.CodeTypeReference.#ctor(System.Type,System.CodeDom.CodeTypeReferenceOptions)">
      <summary>Initializes a new instance of the <see cref="T:System.CodeDom.CodeTypeReference" /> class using the specified type and code type reference.</summary>
      <param name="type">The <see cref="T:System.Type" /> to reference.</param>
      <param name="codeTypeReferenceOption">The code type reference option, one of the <see cref="T:System.CodeDom.CodeTypeReferenceOptions" /> values. </param>
    </member>
    <member name="P:System.CodeDom.CodeTypeReference.ArrayElementType">
      <summary>Gets or sets the type of the elements in the array.</summary>
      <returns>A <see cref="T:System.CodeDom.CodeTypeReference" /> that indicates the type of the array elements.</returns>
    </member>
    <member name="P:System.CodeDom.CodeTypeReference.ArrayRank">
      <summary>Gets or sets the array rank of the array.</summary>
      <returns>The number of dimensions of the array.</returns>
    </member>
    <member name="P:System.CodeDom.CodeTypeReference.BaseType">
      <summary>Gets or sets the name of the type being referenced.</summary>
      <returns>The name of the type being referenced.</returns>
    </member>
    <member name="P:System.CodeDom.CodeTypeReference.Options">
      <summary>Gets or sets the code type reference option.</summary>
      <returns>A bitwise combination of the <see cref="T:System.CodeDom.CodeTypeReferenceOptions" /> values. </returns>
    </member>
    <member name="P:System.CodeDom.CodeTypeReference.TypeArguments">
      <summary>Gets the type arguments for the current generic type reference.</summary>
      <returns>A <see cref="T:System.CodeDom.CodeTypeReferenceCollection" /> containing the type arguments for the current <see cref="T:System.CodeDom.CodeTypeReference" /> object.</returns>
    </member>
    <member name="T:System.CodeDom.CodeTypeReferenceCollection">
      <summary>Represents a collection of <see cref="T:System.CodeDom.CodeTypeReference" /> objects.</summary>
    </member>
    <member name="M:System.CodeDom.CodeTypeReferenceCollection.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.CodeDom.CodeTypeReferenceCollection" /> class.</summary>
    </member>
    <member name="M:System.CodeDom.CodeTypeReferenceCollection.#ctor(System.CodeDom.CodeTypeReference[])">
      <summary>Initializes a new instance of the <see cref="T:System.CodeDom.CodeTypeReferenceCollection" /> class containing the specified array of <see cref="T:System.CodeDom.CodeTypeReference" /> objects.</summary>
      <param name="value">An array of <see cref="T:System.CodeDom.CodeTypeReference" /> objects with which to initialize the collection. </param>
    </member>
    <member name="M:System.CodeDom.CodeTypeReferenceCollection.#ctor(System.CodeDom.CodeTypeReferenceCollection)">
      <summary>Initializes a new instance of the <see cref="T:System.CodeDom.CodeTypeReferenceCollection" /> class containing the elements of the specified source collection.</summary>
      <param name="value">A <see cref="T:System.CodeDom.CodeTypeReferenceCollection" /> with which to initialize the collection. </param>
    </member>
    <member name="M:System.CodeDom.CodeTypeReferenceCollection.Add(System.CodeDom.CodeTypeReference)">
      <summary>Adds the specified <see cref="T:System.CodeDom.CodeTypeReference" /> to the collection.</summary>
      <returns>The index at which the new element was inserted.</returns>
      <param name="value">The <see cref="T:System.CodeDom.CodeTypeReference" /> to add. </param>
    </member>
    <member name="M:System.CodeDom.CodeTypeReferenceCollection.Add(System.String)">
      <summary>Adds a <see cref="T:System.CodeDom.CodeTypeReference" /> to the collection using the specified data type name.</summary>
      <param name="value">The name of a data type for which to add a <see cref="T:System.CodeDom.CodeTypeReference" /> to the collection. </param>
    </member>
    <member name="M:System.CodeDom.CodeTypeReferenceCollection.Add(System.Type)">
      <summary>Adds a <see cref="T:System.CodeDom.CodeTypeReference" /> to the collection using the specified data type.</summary>
      <param name="value">The data type for which to add a <see cref="T:System.CodeDom.CodeTypeReference" /> to the collection. </param>
    </member>
    <member name="M:System.CodeDom.CodeTypeReferenceCollection.AddRange(System.CodeDom.CodeTypeReference[])">
      <summary>Copies the elements of the specified <see cref="T:System.CodeDom.CodeTypeReference" /> array to the end of the collection.</summary>
      <param name="value">An array of type <see cref="T:System.CodeDom.CodeTypeReference" /> containing the objects to add to the collection. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="value" /> is null.</exception>
    </member>
    <member name="M:System.CodeDom.CodeTypeReferenceCollection.AddRange(System.CodeDom.CodeTypeReferenceCollection)">
      <summary>Adds the contents of the specified <see cref="T:System.CodeDom.CodeTypeReferenceCollection" /> to the end of the collection.</summary>
      <param name="value">A <see cref="T:System.CodeDom.CodeTypeReferenceCollection" /> containing the objects to add to the collection. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="value" /> is null.</exception>
    </member>
    <member name="M:System.CodeDom.CodeTypeReferenceCollection.Contains(System.CodeDom.CodeTypeReference)">
      <summary>Gets a value indicating whether the collection contains the specified <see cref="T:System.CodeDom.CodeTypeReference" />.</summary>
      <returns>true if the <see cref="T:System.CodeDom.CodeTypeReference" /> is contained in the collection; otherwise, false.</returns>
      <param name="value">The <see cref="T:System.CodeDom.CodeTypeReference" /> to search for in the collection. </param>
    </member>
    <member name="M:System.CodeDom.CodeTypeReferenceCollection.CopyTo(System.CodeDom.CodeTypeReference[],System.Int32)">
      <summary>Copies the items in the collection to the specified one-dimensional <see cref="T:System.Array" /> at the specified index.</summary>
      <param name="array">The one-dimensional <see cref="T:System.Array" /> that is the destination of the values copied from the collection. </param>
      <param name="index">The index of the array at which to begin inserting. </param>
      <exception cref="T:System.ArgumentException">The <paramref name="array" /> parameter is multidimensional.-or- The number of elements in the <see cref="T:System.CodeDom.CodeTypeReferenceCollection" /> is greater than the available space between the index of the target array specified by the <paramref name="index" /> parameter and the end of the target array. </exception>
      <exception cref="T:System.ArgumentNullException">The <paramref name="array" /> parameter is null. </exception>
      <exception cref="T:System.ArgumentOutOfRangeException">The <paramref name="index" /> parameter is less than the target array's minimum index. </exception>
    </member>
    <member name="M:System.CodeDom.CodeTypeReferenceCollection.IndexOf(System.CodeDom.CodeTypeReference)">
      <summary>Gets the index in the collection of the specified <see cref="T:System.CodeDom.CodeTypeReference" />, if it exists in the collection.</summary>
      <returns>The index of the specified <see cref="T:System.CodeDom.CodeTypeReference" /> in the collection if found; otherwise, -1.</returns>
      <param name="value">The <see cref="T:System.CodeDom.CodeTypeReference" /> to locate in the collection. </param>
    </member>
    <member name="M:System.CodeDom.CodeTypeReferenceCollection.Insert(System.Int32,System.CodeDom.CodeTypeReference)">
      <summary>Inserts a <see cref="T:System.CodeDom.CodeTypeReference" /> into the collection at the specified index.</summary>
      <param name="index">The zero-based index where the item should be inserted. </param>
      <param name="value">The <see cref="T:System.CodeDom.CodeTypeReference" /> to insert. </param>
    </member>
    <member name="P:System.CodeDom.CodeTypeReferenceCollection.Item(System.Int32)">
      <summary>Gets or sets the <see cref="T:System.CodeDom.CodeTypeReference" /> at the specified index in the collection.</summary>
      <returns>A <see cref="T:System.CodeDom.CodeTypeReference" /> at each valid index.</returns>
      <param name="index">The index of the collection to access. </param>
      <exception cref="T:System.ArgumentOutOfRangeException">The <paramref name="index" /> parameter is outside the valid range of indexes for the collection. </exception>
    </member>
    <member name="M:System.CodeDom.CodeTypeReferenceCollection.Remove(System.CodeDom.CodeTypeReference)">
      <summary>Removes the specified <see cref="T:System.CodeDom.CodeTypeReference" /> from the collection.</summary>
      <param name="value">The <see cref="T:System.CodeDom.CodeTypeReference" /> to remove from the collection. </param>
      <exception cref="T:System.ArgumentException">The specified object is not found in the collection. </exception>
    </member>
    <member name="T:System.CodeDom.CodeTypeReferenceExpression">
      <summary>Represents a reference to a data type.</summary>
    </member>
    <member name="M:System.CodeDom.CodeTypeReferenceExpression.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.CodeDom.CodeTypeReferenceExpression" /> class.</summary>
    </member>
    <member name="M:System.CodeDom.CodeTypeReferenceExpression.#ctor(System.CodeDom.CodeTypeReference)">
      <summary>Initializes a new instance of the <see cref="T:System.CodeDom.CodeTypeReferenceExpression" /> class using the specified type.</summary>
      <param name="type">A <see cref="T:System.CodeDom.CodeTypeReference" /> that indicates the data type to reference. </param>
    </member>
    <member name="M:System.CodeDom.CodeTypeReferenceExpression.#ctor(System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.CodeDom.CodeTypeReferenceExpression" /> class using the specified data type name.</summary>
      <param name="type">The name of the data type to reference. </param>
    </member>
    <member name="M:System.CodeDom.CodeTypeReferenceExpression.#ctor(System.Type)">
      <summary>Initializes a new instance of the <see cref="T:System.CodeDom.CodeTypeReferenceExpression" /> class using the specified data type.</summary>
      <param name="type">An instance of the data type to reference. </param>
    </member>
    <member name="P:System.CodeDom.CodeTypeReferenceExpression.Type">
      <summary>Gets or sets the data type to reference.</summary>
      <returns>A <see cref="T:System.CodeDom.CodeTypeReference" /> that indicates the data type to reference.</returns>
    </member>
    <member name="T:System.CodeDom.CodeTypeReferenceOptions">
      <summary>Specifies how the code type reference is to be resolved.</summary>
    </member>
    <member name="F:System.CodeDom.CodeTypeReferenceOptions.GlobalReference">
      <summary>Resolve the type from the root namespace.</summary>
    </member>
    <member name="F:System.CodeDom.CodeTypeReferenceOptions.GenericTypeParameter">
      <summary>Resolve the type from the type parameter.</summary>
    </member>
    <member name="T:System.CodeDom.CodeVariableDeclarationStatement">
      <summary>Represents a variable declaration.</summary>
    </member>
    <member name="M:System.CodeDom.CodeVariableDeclarationStatement.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.CodeDom.CodeVariableDeclarationStatement" /> class.</summary>
    </member>
    <member name="M:System.CodeDom.CodeVariableDeclarationStatement.#ctor(System.CodeDom.CodeTypeReference,System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.CodeDom.CodeVariableDeclarationStatement" /> class using the specified type and name.</summary>
      <param name="type">A <see cref="T:System.CodeDom.CodeTypeReference" /> that indicates the data type of the variable. </param>
      <param name="name">The name of the variable. </param>
    </member>
    <member name="M:System.CodeDom.CodeVariableDeclarationStatement.#ctor(System.CodeDom.CodeTypeReference,System.String,System.CodeDom.CodeExpression)">
      <summary>Initializes a new instance of the <see cref="T:System.CodeDom.CodeVariableDeclarationStatement" /> class using the specified data type, variable name, and initialization expression.</summary>
      <param name="type">A <see cref="T:System.CodeDom.CodeTypeReference" /> that indicates the type of the variable. </param>
      <param name="name">The name of the variable. </param>
      <param name="initExpression">A <see cref="T:System.CodeDom.CodeExpression" /> that indicates the initialization expression for the variable. </param>
    </member>
    <member name="M:System.CodeDom.CodeVariableDeclarationStatement.#ctor(System.String,System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.CodeDom.CodeVariableDeclarationStatement" /> class using the specified data type name and variable name.</summary>
      <param name="type">The name of the data type of the variable. </param>
      <param name="name">The name of the variable. </param>
    </member>
    <member name="M:System.CodeDom.CodeVariableDeclarationStatement.#ctor(System.String,System.String,System.CodeDom.CodeExpression)">
      <summary>Initializes a new instance of the <see cref="T:System.CodeDom.CodeVariableDeclarationStatement" /> class using the specified data type, variable name, and initialization expression.</summary>
      <param name="type">The name of the data type of the variable. </param>
      <param name="name">The name of the variable. </param>
      <param name="initExpression">A <see cref="T:System.CodeDom.CodeExpression" /> that indicates the initialization expression for the variable. </param>
    </member>
    <member name="M:System.CodeDom.CodeVariableDeclarationStatement.#ctor(System.Type,System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.CodeDom.CodeVariableDeclarationStatement" /> class using the specified data type and variable name.</summary>
      <param name="type">The data type for the variable. </param>
      <param name="name">The name of the variable. </param>
    </member>
    <member name="M:System.CodeDom.CodeVariableDeclarationStatement.#ctor(System.Type,System.String,System.CodeDom.CodeExpression)">
      <summary>Initializes a new instance of the <see cref="T:System.CodeDom.CodeVariableDeclarationStatement" /> class using the specified data type, variable name, and initialization expression.</summary>
      <param name="type">The data type of the variable. </param>
      <param name="name">The name of the variable. </param>
      <param name="initExpression">A <see cref="T:System.CodeDom.CodeExpression" /> that indicates the initialization expression for the variable. </param>
    </member>
    <member name="P:System.CodeDom.CodeVariableDeclarationStatement.InitExpression">
      <summary>Gets or sets the initialization expression for the variable.</summary>
      <returns>A <see cref="T:System.CodeDom.CodeExpression" /> that indicates the initialization expression for the variable.</returns>
    </member>
    <member name="P:System.CodeDom.CodeVariableDeclarationStatement.Name">
      <summary>Gets or sets the name of the variable.</summary>
      <returns>The name of the variable.</returns>
    </member>
    <member name="P:System.CodeDom.CodeVariableDeclarationStatement.Type">
      <summary>Gets or sets the data type of the variable.</summary>
      <returns>A <see cref="T:System.CodeDom.CodeTypeReference" /> that indicates the data type of the variable.</returns>
    </member>
    <member name="T:System.CodeDom.CodeVariableReferenceExpression">
      <summary>Represents a reference to a local variable.</summary>
    </member>
    <member name="M:System.CodeDom.CodeVariableReferenceExpression.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.CodeDom.CodeVariableReferenceExpression" /> class.</summary>
    </member>
    <member name="M:System.CodeDom.CodeVariableReferenceExpression.#ctor(System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.CodeDom.CodeVariableReferenceExpression" /> class using the specified local variable name.</summary>
      <param name="variableName">The name of the local variable to reference. </param>
    </member>
    <member name="P:System.CodeDom.CodeVariableReferenceExpression.VariableName">
      <summary>Gets or sets the name of the local variable to reference.</summary>
      <returns>The name of the local variable to reference.</returns>
    </member>
    <member name="T:System.CodeDom.FieldDirection">
      <summary>Defines identifiers used to indicate the direction of parameter and argument declarations.</summary>
    </member>
    <member name="F:System.CodeDom.FieldDirection.In">
      <summary>An incoming field.</summary>
    </member>
    <member name="F:System.CodeDom.FieldDirection.Out">
      <summary>An outgoing field.</summary>
    </member>
    <member name="F:System.CodeDom.FieldDirection.Ref">
      <summary>A field by reference.</summary>
    </member>
    <member name="T:System.CodeDom.MemberAttributes">
      <summary>Defines member attribute identifiers for class members.</summary>
    </member>
    <member name="F:System.CodeDom.MemberAttributes.Abstract">
      <summary>An abstract member.</summary>
    </member>
    <member name="F:System.CodeDom.MemberAttributes.Final">
      <summary>A member that cannot be overridden in a derived class.</summary>
    </member>
    <member name="F:System.CodeDom.MemberAttributes.Static">
      <summary>A static member. In Visual Basic, this is equivalent to the Shared keyword.</summary>
    </member>
    <member name="F:System.CodeDom.MemberAttributes.Override">
      <summary>A member that overrides a base class member.</summary>
    </member>
    <member name="F:System.CodeDom.MemberAttributes.Const">
      <summary>A constant member.</summary>
    </member>
    <member name="F:System.CodeDom.MemberAttributes.New">
      <summary>A new member.</summary>
    </member>
    <member name="F:System.CodeDom.MemberAttributes.Overloaded">
      <summary>An overloaded member. Some languages, such as Visual Basic, require overloaded members to be explicitly indicated.</summary>
    </member>
    <member name="F:System.CodeDom.MemberAttributes.Assembly">
      <summary>A member that is accessible to any class within the same assembly.</summary>
    </member>
    <member name="F:System.CodeDom.MemberAttributes.FamilyAndAssembly">
      <summary>A member that is accessible within its class, and derived classes in the same assembly.</summary>
    </member>
    <member name="F:System.CodeDom.MemberAttributes.Family">
      <summary>A member that is accessible within the family of its class and derived classes.</summary>
    </member>
    <member name="F:System.CodeDom.MemberAttributes.FamilyOrAssembly">
      <summary>A member that is accessible within its class, its derived classes in any assembly, and any class in the same assembly.</summary>
    </member>
    <member name="F:System.CodeDom.MemberAttributes.Private">
      <summary>A private member.</summary>
    </member>
    <member name="F:System.CodeDom.MemberAttributes.Public">
      <summary>A public member.</summary>
    </member>
    <member name="F:System.CodeDom.MemberAttributes.AccessMask">
      <summary>An access mask.</summary>
    </member>
    <member name="F:System.CodeDom.MemberAttributes.ScopeMask">
      <summary>A scope mask.</summary>
    </member>
    <member name="F:System.CodeDom.MemberAttributes.VTableMask">
      <summary>A VTable mask.</summary>
    </member>
    <member name="T:System.CodeDom.Compiler.CodeCompiler">
      <summary>Provides an example implementation of the <see cref="T:System.CodeDom.Compiler.ICodeCompiler" /> interface.</summary>
    </member>
    <member name="M:System.CodeDom.Compiler.CodeCompiler.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.CodeDom.Compiler.CodeCompiler" /> class. </summary>
    </member>
    <member name="M:System.CodeDom.Compiler.CodeCompiler.CmdArgsFromParameters(System.CodeDom.Compiler.CompilerParameters)">
      <summary>Gets the command arguments to be passed to the compiler from the specified <see cref="T:System.CodeDom.Compiler.CompilerParameters" />.</summary>
      <returns>The command arguments.</returns>
      <param name="options">A <see cref="T:System.CodeDom.Compiler.CompilerParameters" /> that indicates the compiler options. </param>
    </member>
    <member name="P:System.CodeDom.Compiler.CodeCompiler.CompilerName">
      <summary>Gets the name of the compiler executable.</summary>
      <returns>The name of the compiler executable.</returns>
    </member>
    <member name="P:System.CodeDom.Compiler.CodeCompiler.FileExtension">
      <summary>Gets the file name extension to use for source files.</summary>
      <returns>The file name extension to use for source files.</returns>
    </member>
    <member name="M:System.CodeDom.Compiler.CodeCompiler.FromDom(System.CodeDom.Compiler.CompilerParameters,System.CodeDom.CodeCompileUnit)">
      <summary>Compiles the specified compile unit using the specified options, and returns the results from the compilation.</summary>
      <returns>The results of compilation.</returns>
      <param name="options">A <see cref="T:System.CodeDom.Compiler.CompilerParameters" /> object that indicates the compiler options. </param>
      <param name="e">A <see cref="T:System.CodeDom.CodeCompileUnit" /> object that indicates the source to compile. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="options" /> is null.</exception>
    </member>
    <member name="M:System.CodeDom.Compiler.CodeCompiler.FromDomBatch(System.CodeDom.Compiler.CompilerParameters,System.CodeDom.CodeCompileUnit[])">
      <summary>Compiles the specified compile units using the specified options, and returns the results from the compilation.</summary>
      <returns>The results of compilation.</returns>
      <param name="options">A <see cref="T:System.CodeDom.Compiler.CompilerParameters" /> object that indicates the compiler options. </param>
      <param name="ea">An array of <see cref="T:System.CodeDom.CodeCompileUnit" /> objects that indicates the source to compile. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="options" /> is null.-or-<paramref name="ea" /> is null.</exception>
    </member>
    <member name="M:System.CodeDom.Compiler.CodeCompiler.FromFile(System.CodeDom.Compiler.CompilerParameters,System.String)">
      <summary>Compiles the specified file using the specified options, and returns the results from the compilation.</summary>
      <returns>The results of compilation.</returns>
      <param name="options">A <see cref="T:System.CodeDom.Compiler.CompilerParameters" /> object that indicates the compiler options. </param>
      <param name="fileName">The file name to compile. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="options" /> is null. -or-<paramref name="fileName" /> is null.</exception>
    </member>
    <member name="M:System.CodeDom.Compiler.CodeCompiler.FromFileBatch(System.CodeDom.Compiler.CompilerParameters,System.String[])">
      <summary>Compiles the specified files using the specified options, and returns the results from the compilation.</summary>
      <returns>The results of compilation.</returns>
      <param name="options">A <see cref="T:System.CodeDom.Compiler.CompilerParameters" /> object that indicates the compiler options. </param>
      <param name="fileNames">An array of strings that indicates the file names of the files to compile. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="options" /> is null.-or-<paramref name="fileNames" /> is null.</exception>
    </member>
    <member name="M:System.CodeDom.Compiler.CodeCompiler.FromSource(System.CodeDom.Compiler.CompilerParameters,System.String)">
      <summary>Compiles the specified source code string using the specified options, and returns the results from the compilation.</summary>
      <returns>The results of compilation.</returns>
      <param name="options">A <see cref="T:System.CodeDom.Compiler.CompilerParameters" /> object that indicates the compiler options. </param>
      <param name="source">The source code string to compile. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="options" /> is null.</exception>
    </member>
    <member name="M:System.CodeDom.Compiler.CodeCompiler.FromSourceBatch(System.CodeDom.Compiler.CompilerParameters,System.String[])">
      <summary>Compiles the specified source code strings using the specified options, and returns the results from the compilation.</summary>
      <returns>The results of compilation.</returns>
      <param name="options">A <see cref="T:System.CodeDom.Compiler.CompilerParameters" /> object that indicates the compiler options. </param>
      <param name="sources">An array of strings containing the source code to compile. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="options" /> is null.-or-<paramref name="sources" /> is null.</exception>
    </member>
    <member name="M:System.CodeDom.Compiler.CodeCompiler.GetResponseFileCmdArgs(System.CodeDom.Compiler.CompilerParameters,System.String)">
      <summary>Gets the command arguments to use when invoking the compiler to generate a response file.</summary>
      <returns>The command arguments to use to generate a response file, or null if there are no response file arguments.</returns>
      <param name="options">A <see cref="T:System.CodeDom.Compiler.CompilerParameters" /> object that indicates the compiler options. </param>
      <param name="cmdArgs">A command arguments string. </param>
    </member>
    <member name="M:System.CodeDom.Compiler.CodeCompiler.JoinStringArray(System.String[],System.String)">
      <summary>Joins the specified string arrays.</summary>
      <returns>The concatenated string.</returns>
      <param name="sa">The array of strings to join. </param>
      <param name="separator">The separator to use. </param>
    </member>
    <member name="M:System.CodeDom.Compiler.CodeCompiler.ProcessCompilerOutputLine(System.CodeDom.Compiler.CompilerResults,System.String)">
      <summary>Processes the specified line from the specified <see cref="T:System.CodeDom.Compiler.CompilerResults" />.</summary>
      <param name="results">A <see cref="T:System.CodeDom.Compiler.CompilerResults" /> that indicates the results of compilation. </param>
      <param name="line">The line to process. </param>
    </member>
    <member name="M:System.CodeDom.Compiler.CodeCompiler.System#CodeDom#Compiler#ICodeCompiler#CompileAssemblyFromDom(System.CodeDom.Compiler.CompilerParameters,System.CodeDom.CodeCompileUnit)">
      <summary>For a description of this member, see <see cref="M:System.CodeDom.Compiler.ICodeCompiler.CompileAssemblyFromDom(System.CodeDom.Compiler.CompilerParameters,System.CodeDom.CodeCompileUnit)" />. </summary>
      <returns>The results of compilation.</returns>
      <param name="options">A <see cref="T:System.CodeDom.Compiler.CompilerParameters" /> object that indicates the compiler options. </param>
      <param name="e">A <see cref="T:System.CodeDom.CodeCompileUnit" /> that indicates the source to compile. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="options" /> is null.</exception>
    </member>
    <member name="M:System.CodeDom.Compiler.CodeCompiler.System#CodeDom#Compiler#ICodeCompiler#CompileAssemblyFromDomBatch(System.CodeDom.Compiler.CompilerParameters,System.CodeDom.CodeCompileUnit[])">
      <summary>For a description of this member, see <see cref="M:System.CodeDom.Compiler.ICodeCompiler.CompileAssemblyFromDomBatch(System.CodeDom.Compiler.CompilerParameters,System.CodeDom.CodeCompileUnit[])" />. </summary>
      <returns>The results of compilation.</returns>
      <param name="options">A <see cref="T:System.CodeDom.Compiler.CompilerParameters" /> object that indicates the compiler options. </param>
      <param name="ea">An array of <see cref="T:System.CodeDom.CodeCompileUnit" /> objects that indicates the source to compile. </param>
    </member>
    <member name="M:System.CodeDom.Compiler.CodeCompiler.System#CodeDom#Compiler#ICodeCompiler#CompileAssemblyFromFile(System.CodeDom.Compiler.CompilerParameters,System.String)">
      <summary>For a description of this member, see <see cref="M:System.CodeDom.Compiler.ICodeCompiler.CompileAssemblyFromFile(System.CodeDom.Compiler.CompilerParameters,System.String)" />. </summary>
      <returns>The results of compilation.</returns>
      <param name="options">A <see cref="T:System.CodeDom.Compiler.CompilerParameters" /> object that indicates the compiler options. </param>
      <param name="fileName">The file name to compile. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="options" /> is null.</exception>
    </member>
    <member name="M:System.CodeDom.Compiler.CodeCompiler.System#CodeDom#Compiler#ICodeCompiler#CompileAssemblyFromFileBatch(System.CodeDom.Compiler.CompilerParameters,System.String[])">
      <summary>For a description of this member, see <see cref="M:System.CodeDom.Compiler.ICodeCompiler.CompileAssemblyFromFileBatch(System.CodeDom.Compiler.CompilerParameters,System.String[])" />. </summary>
      <returns>The results of compilation.</returns>
      <param name="options">A <see cref="T:System.CodeDom.Compiler.CompilerParameters" /> object that indicates the compiler options. </param>
      <param name="fileNames">An array of strings that indicates the file names to compile. </param>
    </member>
    <member name="M:System.CodeDom.Compiler.CodeCompiler.System#CodeDom#Compiler#ICodeCompiler#CompileAssemblyFromSource(System.CodeDom.Compiler.CompilerParameters,System.String)">
      <summary>For a description of this member, see <see cref="M:System.CodeDom.Compiler.ICodeCompiler.CompileAssemblyFromSource(System.CodeDom.Compiler.CompilerParameters,System.String)" />.</summary>
      <returns>The results of compilation.</returns>
      <param name="options">A <see cref="T:System.CodeDom.Compiler.CompilerParameters" /> object that indicates the compiler options. </param>
      <param name="source">A string that indicates the source code to compile. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="options" /> is null.</exception>
    </member>
    <member name="M:System.CodeDom.Compiler.CodeCompiler.System#CodeDom#Compiler#ICodeCompiler#CompileAssemblyFromSourceBatch(System.CodeDom.Compiler.CompilerParameters,System.String[])">
      <summary>For a description of this member, see <see cref="M:System.CodeDom.Compiler.ICodeCompiler.CompileAssemblyFromSourceBatch(System.CodeDom.Compiler.CompilerParameters,System.String[])" />. </summary>
      <returns>The results of compilation.</returns>
      <param name="options">A <see cref="T:System.CodeDom.Compiler.CompilerParameters" /> object that indicates the compiler options. </param>
      <param name="sources">An array of strings that indicates the source code to compile. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="options" /> is null.</exception>
    </member>
    <member name="T:System.CodeDom.Compiler.CodeDomProvider">
      <summary>Provides a base class for <see cref="T:System.CodeDom.Compiler.CodeDomProvider" /> implementations. This class is abstract.</summary>
    </member>
    <member name="M:System.CodeDom.Compiler.CodeDomProvider.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.CodeDom.Compiler.CodeDomProvider" /> class. </summary>
    </member>
    <member name="M:System.CodeDom.Compiler.CodeDomProvider.CompileAssemblyFromDom(System.CodeDom.Compiler.CompilerParameters,System.CodeDom.CodeCompileUnit[])">
      <summary>Compiles an assembly based on the <see cref="N:System.CodeDom" /> trees contained in the specified array of <see cref="T:System.CodeDom.CodeCompileUnit" /> objects, using the specified compiler settings.</summary>
      <returns>A <see cref="T:System.CodeDom.Compiler.CompilerResults" /> object that indicates the results of the compilation.</returns>
      <param name="options">A <see cref="T:System.CodeDom.Compiler.CompilerParameters" /> object that indicates the settings for the compilation.</param>
      <param name="compilationUnits">An array of type <see cref="T:System.CodeDom.CodeCompileUnit" /> that indicates the code to compile.</param>
      <exception cref="T:System.NotImplementedException">Neither this method nor the <see cref="M:System.CodeDom.Compiler.CodeDomProvider.CreateCompiler" /> method is overridden in a derived class.</exception>
    </member>
    <member name="M:System.CodeDom.Compiler.CodeDomProvider.CompileAssemblyFromFile(System.CodeDom.Compiler.CompilerParameters,System.String[])">
      <summary>Compiles an assembly from the source code contained in the specified files, using the specified compiler settings.</summary>
      <returns>A <see cref="T:System.CodeDom.Compiler.CompilerResults" /> object that indicates the results of compilation.</returns>
      <param name="options">A <see cref="T:System.CodeDom.Compiler.CompilerParameters" /> object that indicates the settings for the compilation. </param>
      <param name="fileNames">An array of the names of the files to compile. </param>
      <exception cref="T:System.NotImplementedException">Neither this method nor the <see cref="M:System.CodeDom.Compiler.CodeDomProvider.CreateCompiler" /> method is overridden in a derived class.</exception>
    </member>
    <member name="M:System.CodeDom.Compiler.CodeDomProvider.CompileAssemblyFromSource(System.CodeDom.Compiler.CompilerParameters,System.String[])">
      <summary>Compiles an assembly from the specified array of strings containing source code, using the specified compiler settings.</summary>
      <returns>A <see cref="T:System.CodeDom.Compiler.CompilerResults" /> object that indicates the results of compilation.</returns>
      <param name="options">A <see cref="T:System.CodeDom.Compiler.CompilerParameters" /> object that indicates the compiler settings for this compilation. </param>
      <param name="sources">An array of source code strings to compile. </param>
      <exception cref="T:System.NotImplementedException">Neither this method nor the <see cref="M:System.CodeDom.Compiler.CodeDomProvider.CreateCompiler" /> method is overridden in a derived class.</exception>
    </member>
    <member name="M:System.CodeDom.Compiler.CodeDomProvider.CreateCompiler">
      <summary>When overridden in a derived class, creates a new code compiler. </summary>
      <returns>An <see cref="T:System.CodeDom.Compiler.ICodeCompiler" /> that can be used for compilation of <see cref="N:System.CodeDom" /> based source code representations. </returns>
    </member>
    <member name="M:System.CodeDom.Compiler.CodeDomProvider.CreateEscapedIdentifier(System.String)">
      <summary>Creates an escaped identifier for the specified value.</summary>
      <returns>The escaped identifier for the value.</returns>
      <param name="value">The string for which to create an escaped identifier.</param>
      <exception cref="T:System.NotImplementedException">Neither this method nor the <see cref="M:System.CodeDom.Compiler.CodeDomProvider.CreateGenerator" /> method is overridden in a derived class.</exception>
    </member>
    <member name="M:System.CodeDom.Compiler.CodeDomProvider.CreateGenerator">
      <summary>When overridden in a derived class, creates a new code generator.</summary>
      <returns>An <see cref="T:System.CodeDom.Compiler.ICodeGenerator" /> that can be used to generate <see cref="N:System.CodeDom" /> based source code representations.</returns>
    </member>
    <member name="M:System.CodeDom.Compiler.CodeDomProvider.CreateGenerator(System.IO.TextWriter)">
      <summary>When overridden in a derived class, creates a new code generator using the specified <see cref="T:System.IO.TextWriter" /> for output.</summary>
      <returns>An <see cref="T:System.CodeDom.Compiler.ICodeGenerator" /> that can be used to generate <see cref="N:System.CodeDom" /> based source code representations.</returns>
      <param name="output">A <see cref="T:System.IO.TextWriter" /> to use to output. </param>
    </member>
    <member name="M:System.CodeDom.Compiler.CodeDomProvider.CreateGenerator(System.String)">
      <summary>When overridden in a derived class, creates a new code generator using the specified file name for output.</summary>
      <returns>An <see cref="T:System.CodeDom.Compiler.ICodeGenerator" /> that can be used to generate <see cref="N:System.CodeDom" /> based source code representations.</returns>
      <param name="fileName">The file name to output to. </param>
    </member>
    <member name="M:System.CodeDom.Compiler.CodeDomProvider.CreateParser">
      <summary>When overridden in a derived class, creates a new code parser.</summary>
      <returns>An <see cref="T:System.CodeDom.Compiler.ICodeParser" /> that can be used to parse source code. The base implementation always returns null.</returns>
    </member>
    <member name="M:System.CodeDom.Compiler.CodeDomProvider.CreateProvider(System.String)">
      <summary>Gets a <see cref="T:System.CodeDom.Compiler.CodeDomProvider" /> instance for the specified language.</summary>
      <returns>A CodeDOM provider that is implemented for the specified language name.</returns>
      <param name="language">The language name. </param>
      <exception cref="T:System.Configuration.ConfigurationErrorsException">The <paramref name="language" /> does not have a configured provider on this computer. </exception>
      <exception cref="T:System.ArgumentNullException">The <paramref name="language" /> is null. </exception>
      <exception cref="T:System.Security.SecurityException">The caller does not have the required permission. </exception>
    </member>
    <member name="M:System.CodeDom.Compiler.CodeDomProvider.CreateProvider(System.String,System.Collections.Generic.IDictionary{System.String,System.String})">
      <summary>Gets a <see cref="T:System.CodeDom.Compiler.CodeDomProvider" /> instance for the specified language and provider options.</summary>
      <returns>A CodeDOM provider that is implemented for the specified language name and options.</returns>
      <param name="language">The language name.</param>
      <param name="providerOptions">A collection of provider options from the configuration file.</param>
    </member>
    <member name="M:System.CodeDom.Compiler.CodeDomProvider.CreateValidIdentifier(System.String)">
      <summary>Creates a valid identifier for the specified value.</summary>
      <returns>A valid identifier for the specified value.</returns>
      <param name="value">The string for which to generate a valid identifier.</param>
      <exception cref="T:System.NotImplementedException">Neither this method nor the <see cref="M:System.CodeDom.Compiler.CodeDomProvider.CreateGenerator" /> method is overridden in a derived class.</exception>
    </member>
    <member name="P:System.CodeDom.Compiler.CodeDomProvider.FileExtension">
      <summary>Gets the default file name extension to use for source code files in the current language.</summary>
      <returns>A file name extension corresponding to the extension of the source files of the current language. The base implementation always returns <see cref="F:System.String.Empty" />.</returns>
    </member>
    <member name="M:System.CodeDom.Compiler.CodeDomProvider.GenerateCodeFromCompileUnit(System.CodeDom.CodeCompileUnit,System.IO.TextWriter,System.CodeDom.Compiler.CodeGeneratorOptions)">
      <summary>Generates code for the specified Code Document Object Model (CodeDOM) compilation unit and sends it to the specified text writer, using the specified options.</summary>
      <param name="compileUnit">A <see cref="T:System.CodeDom.CodeCompileUnit" /> for which to generate code. </param>
      <param name="writer">The <see cref="T:System.IO.TextWriter" /> to which the output code is sent. </param>
      <param name="options">A <see cref="T:System.CodeDom.Compiler.CodeGeneratorOptions" /> that indicates the options to use for generating code. </param>
      <exception cref="T:System.NotImplementedException">Neither this method nor the <see cref="M:System.CodeDom.Compiler.CodeDomProvider.CreateGenerator" /> method is overridden in a derived class.</exception>
    </member>
    <member name="M:System.CodeDom.Compiler.CodeDomProvider.GenerateCodeFromExpression(System.CodeDom.CodeExpression,System.IO.TextWriter,System.CodeDom.Compiler.CodeGeneratorOptions)">
      <summary>Generates code for the specified Code Document Object Model (CodeDOM) expression and sends it to the specified text writer, using the specified options.</summary>
      <param name="expression">A <see cref="T:System.CodeDom.CodeExpression" /> object that indicates the expression for which to generate code. </param>
      <param name="writer">The <see cref="T:System.IO.TextWriter" /> to which output code is sent. </param>
      <param name="options">A <see cref="T:System.CodeDom.Compiler.CodeGeneratorOptions" /> that indicates the options to use for generating code. </param>
      <exception cref="T:System.NotImplementedException">Neither this method nor the <see cref="M:System.CodeDom.Compiler.CodeDomProvider.CreateGenerator" /> method is overridden in a derived class.</exception>
    </member>
    <member name="M:System.CodeDom.Compiler.CodeDomProvider.GenerateCodeFromMember(System.CodeDom.CodeTypeMember,System.IO.TextWriter,System.CodeDom.Compiler.CodeGeneratorOptions)">
      <summary>Generates code for the specified Code Document Object Model (CodeDOM) member declaration and sends it to the specified text writer, using the specified options.</summary>
      <param name="member">A <see cref="T:System.CodeDom.CodeTypeMember" /> object that indicates the member for which to generate code. </param>
      <param name="writer">The <see cref="T:System.IO.TextWriter" /> to which output code is sent. </param>
      <param name="options">A <see cref="T:System.CodeDom.Compiler.CodeGeneratorOptions" /> that indicates the options to use for generating code. </param>
      <exception cref="T:System.NotImplementedException">This method is not overridden in a derived class.</exception>
    </member>
    <member name="M:System.CodeDom.Compiler.CodeDomProvider.GenerateCodeFromNamespace(System.CodeDom.CodeNamespace,System.IO.TextWriter,System.CodeDom.Compiler.CodeGeneratorOptions)">
      <summary>Generates code for the specified Code Document Object Model (CodeDOM) namespace and sends it to the specified text writer, using the specified options.</summary>
      <param name="codeNamespace">A <see cref="T:System.CodeDom.CodeNamespace" /> object that indicates the namespace for which to generate code. </param>
      <param name="writer">The <see cref="T:System.IO.TextWriter" /> to which output code is sent. </param>
      <param name="options">A <see cref="T:System.CodeDom.Compiler.CodeGeneratorOptions" /> that indicates the options to use for generating code. </param>
      <exception cref="T:System.NotImplementedException">Neither this method nor the <see cref="M:System.CodeDom.Compiler.CodeDomProvider.CreateGenerator" /> method is overridden in a derived class.</exception>
    </member>
    <member name="M:System.CodeDom.Compiler.CodeDomProvider.GenerateCodeFromStatement(System.CodeDom.CodeStatement,System.IO.TextWriter,System.CodeDom.Compiler.CodeGeneratorOptions)">
      <summary>Generates code for the specified Code Document Object Model (CodeDOM) statement and sends it to the specified text writer, using the specified options.</summary>
      <param name="statement">A <see cref="T:System.CodeDom.CodeStatement" /> containing the CodeDOM elements for which to generate code. </param>
      <param name="writer">The <see cref="T:System.IO.TextWriter" /> to which output code is sent. </param>
      <param name="options">A <see cref="T:System.CodeDom.Compiler.CodeGeneratorOptions" /> that indicates the options to use for generating code. </param>
      <exception cref="T:System.NotImplementedException">Neither this method nor the <see cref="M:System.CodeDom.Compiler.CodeDomProvider.CreateGenerator" /> method is overridden in a derived class.</exception>
    </member>
    <member name="M:System.CodeDom.Compiler.CodeDomProvider.GenerateCodeFromType(System.CodeDom.CodeTypeDeclaration,System.IO.TextWriter,System.CodeDom.Compiler.CodeGeneratorOptions)">
      <summary>Generates code for the specified Code Document Object Model (CodeDOM) type declaration and sends it to the specified text writer, using the specified options.</summary>
      <param name="codeType">A <see cref="T:System.CodeDom.CodeTypeDeclaration" /> object that indicates the type for which to generate code. </param>
      <param name="writer">The <see cref="T:System.IO.TextWriter" /> to which output code is sent. </param>
      <param name="options">A <see cref="T:System.CodeDom.Compiler.CodeGeneratorOptions" /> that indicates the options to use for generating code. </param>
      <exception cref="T:System.NotImplementedException">Neither this method nor the <see cref="M:System.CodeDom.Compiler.CodeDomProvider.CreateGenerator" /> method is overridden in a derived class.</exception>
    </member>
    <member name="M:System.CodeDom.Compiler.CodeDomProvider.GetAllCompilerInfo">
      <summary>Returns the language provider and compiler configuration settings for this computer.</summary>
      <returns>An array of type <see cref="T:System.CodeDom.Compiler.CompilerInfo" /> representing the settings of all configured <see cref="T:System.CodeDom.Compiler.CodeDomProvider" /> implementations.</returns>
      <exception cref="T:System.Security.SecurityException">The caller does not have the required permission. </exception>
    </member>
    <member name="M:System.CodeDom.Compiler.CodeDomProvider.GetCompilerInfo(System.String)">
      <summary>Returns the language provider and compiler configuration settings for the specified language.</summary>
      <returns>A <see cref="T:System.CodeDom.Compiler.CompilerInfo" /> object populated with settings of the configured <see cref="T:System.CodeDom.Compiler.CodeDomProvider" /> implementation.</returns>
      <param name="language">A language name. </param>
      <exception cref="T:System.Configuration.ConfigurationException">The <paramref name="language" /> does not have a configured provider on this computer. </exception>
      <exception cref="T:System.Configuration.ConfigurationErrorsException">The <paramref name="language" /> is null. </exception>
      <exception cref="T:System.Security.SecurityException">The caller does not have the required permission. </exception>
    </member>
    <member name="M:System.CodeDom.Compiler.CodeDomProvider.GetConverter(System.Type)">
      <summary>Gets a <see cref="T:System.ComponentModel.TypeConverter" /> for the specified data type.</summary>
      <returns>A <see cref="T:System.ComponentModel.TypeConverter" /> for the specified type, or null if a <see cref="T:System.ComponentModel.TypeConverter" /> for the specified type cannot be found.</returns>
      <param name="type">The type of object to retrieve a type converter for. </param>
    </member>
    <member name="M:System.CodeDom.Compiler.CodeDomProvider.GetLanguageFromExtension(System.String)">
      <summary>Returns a language name associated with the specified file name extension, as configured in the <see cref="T:System.CodeDom.Compiler.CodeDomProvider" /> compiler configuration section.</summary>
      <returns>A language name associated with the file name extension, as configured in the <see cref="T:System.CodeDom.Compiler.CodeDomProvider" /> compiler configuration settings.</returns>
      <param name="extension">A file name extension. </param>
      <exception cref="T:System.Configuration.ConfigurationException">The <paramref name="extension" /> does not have a configured language provider on this computer. </exception>
      <exception cref="T:System.Configuration.ConfigurationErrorsException">The <paramref name="extension" /> is null. </exception>
      <exception cref="T:System.Security.SecurityException">The caller does not have the required permission. </exception>
    </member>
    <member name="M:System.CodeDom.Compiler.CodeDomProvider.GetTypeOutput(System.CodeDom.CodeTypeReference)">
      <summary>Gets the type indicated by the specified <see cref="T:System.CodeDom.CodeTypeReference" />.</summary>
      <returns>A text representation of the specified type, formatted for the language in which code is generated by this code generator. In Visual Basic, for example, passing in a <see cref="T:System.CodeDom.CodeTypeReference" /> for the <see cref="T:System.Int32" /> type will return "Integer".</returns>
      <param name="type">A <see cref="T:System.CodeDom.CodeTypeReference" /> that indicates the type to return.</param>
      <exception cref="T:System.NotImplementedException">Neither this method nor the <see cref="M:System.CodeDom.Compiler.CodeDomProvider.CreateGenerator" /> method is overridden in a derived class.</exception>
    </member>
    <member name="M:System.CodeDom.Compiler.CodeDomProvider.IsDefinedExtension(System.String)">
      <summary>Tests whether a file name extension has an associated <see cref="T:System.CodeDom.Compiler.CodeDomProvider" /> implementation configured on the computer.</summary>
      <returns>true if a <see cref="T:System.CodeDom.Compiler.CodeDomProvider" /> implementation is configured for the specified file name extension; otherwise, false.</returns>
      <param name="extension">A file name extension. </param>
      <exception cref="T:System.ArgumentNullException">The <paramref name="extension" /> is null. </exception>
      <exception cref="T:System.Security.SecurityException">The caller does not have the required permission. </exception>
    </member>
    <member name="M:System.CodeDom.Compiler.CodeDomProvider.IsDefinedLanguage(System.String)">
      <summary>Tests whether a language has a <see cref="T:System.CodeDom.Compiler.CodeDomProvider" /> implementation configured on the computer.</summary>
      <returns>true if a <see cref="T:System.CodeDom.Compiler.CodeDomProvider" /> implementation is configured for the specified language; otherwise, false.</returns>
      <param name="language">The language name. </param>
      <exception cref="T:System.ArgumentNullException">The <paramref name="language" /> is null. </exception>
      <exception cref="T:System.Security.SecurityException">The caller does not have the required permission. </exception>
    </member>
    <member name="M:System.CodeDom.Compiler.CodeDomProvider.IsValidIdentifier(System.String)">
      <summary>Returns a value that indicates whether the specified value is a valid identifier for the current language.</summary>
      <returns>true if the <paramref name="value" /> parameter is a valid identifier; otherwise, false.</returns>
      <param name="value">The value to verify as a valid identifier.</param>
      <exception cref="T:System.NotImplementedException">Neither this method nor the <see cref="M:System.CodeDom.Compiler.CodeDomProvider.CreateGenerator" /> method is overridden in a derived class.</exception>
    </member>
    <member name="P:System.CodeDom.Compiler.CodeDomProvider.LanguageOptions">
      <summary>Gets a language features identifier.</summary>
      <returns>A <see cref="T:System.CodeDom.Compiler.LanguageOptions" /> that indicates special features of the language.</returns>
    </member>
    <member name="M:System.CodeDom.Compiler.CodeDomProvider.Parse(System.IO.TextReader)">
      <summary>Compiles the code read from the specified text stream into a <see cref="T:System.CodeDom.CodeCompileUnit" />.</summary>
      <returns>A <see cref="T:System.CodeDom.CodeCompileUnit" /> that contains a representation of the parsed code.</returns>
      <param name="codeStream">A <see cref="T:System.IO.TextReader" /> object that is used to read the code to be parsed. </param>
      <exception cref="T:System.NotImplementedException">Neither this method nor the <see cref="M:System.CodeDom.Compiler.CodeDomProvider.CreateGenerator" /> method is overridden in a derived class.</exception>
    </member>
    <member name="M:System.CodeDom.Compiler.CodeDomProvider.Supports(System.CodeDom.Compiler.GeneratorSupport)">
      <summary>Returns a value indicating whether the specified code generation support is provided.</summary>
      <returns>true if the specified code generation support is provided; otherwise, false.</returns>
      <param name="generatorSupport">A <see cref="T:System.CodeDom.Compiler.GeneratorSupport" /> object that indicates the type of code generation support to verify.</param>
      <exception cref="T:System.NotImplementedException">Neither this method nor the <see cref="M:System.CodeDom.Compiler.CodeDomProvider.CreateGenerator" /> method is overridden in a derived class.</exception>
    </member>
    <member name="T:System.CodeDom.Compiler.CodeGenerator">
      <summary>Provides an example implementation of the <see cref="T:System.CodeDom.Compiler.ICodeGenerator" /> interface. This class is abstract.</summary>
    </member>
    <member name="M:System.CodeDom.Compiler.CodeGenerator.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.CodeDom.Compiler.CodeGenerator" /> class. </summary>
    </member>
    <member name="M:System.CodeDom.Compiler.CodeGenerator.ContinueOnNewLine(System.String)">
      <summary>Generates a line-continuation character and outputs the specified string on a new line.</summary>
      <param name="st">The string to write on the new line. </param>
    </member>
    <member name="M:System.CodeDom.Compiler.CodeGenerator.CreateEscapedIdentifier(System.String)">
      <summary>Creates an escaped identifier for the specified value.</summary>
      <returns>The escaped identifier for the value.</returns>
      <param name="value">The string to create an escaped identifier for. </param>
    </member>
    <member name="M:System.CodeDom.Compiler.CodeGenerator.CreateValidIdentifier(System.String)">
      <summary>Creates a valid identifier for the specified value.</summary>
      <returns>A valid identifier for the value.</returns>
      <param name="value">A string to create a valid identifier for. </param>
    </member>
    <member name="P:System.CodeDom.Compiler.CodeGenerator.CurrentClass">
      <summary>Gets the code type declaration for the current class.</summary>
      <returns>The code type declaration for the current class.</returns>
    </member>
    <member name="P:System.CodeDom.Compiler.CodeGenerator.CurrentMember">
      <summary>Gets the current member of the class.</summary>
      <returns>The current member of the class.</returns>
    </member>
    <member name="P:System.CodeDom.Compiler.CodeGenerator.CurrentMemberName">
      <summary>Gets the current member name.</summary>
      <returns>The name of the current member.</returns>
    </member>
    <member name="P:System.CodeDom.Compiler.CodeGenerator.CurrentTypeName">
      <summary>Gets the current class name.</summary>
      <returns>The current class name.</returns>
    </member>
    <member name="M:System.CodeDom.Compiler.CodeGenerator.GenerateArgumentReferenceExpression(System.CodeDom.CodeArgumentReferenceExpression)">
      <summary>Generates code for the specified argument reference expression.</summary>
      <param name="e">A <see cref="T:System.CodeDom.CodeArgumentReferenceExpression" /> that indicates the expression to generate code for. </param>
    </member>
    <member name="M:System.CodeDom.Compiler.CodeGenerator.GenerateArrayCreateExpression(System.CodeDom.CodeArrayCreateExpression)">
      <summary>Generates code for the specified array creation expression.</summary>
      <param name="e">A <see cref="T:System.CodeDom.CodeArrayCreateExpression" /> that indicates the expression to generate code for. </param>
    </member>
    <member name="M:System.CodeDom.Compiler.CodeGenerator.GenerateArrayIndexerExpression(System.CodeDom.CodeArrayIndexerExpression)">
      <summary>Generates code for the specified array indexer expression.</summary>
      <param name="e">A <see cref="T:System.CodeDom.CodeArrayIndexerExpression" /> that indicates the expression to generate code for. </param>
    </member>
    <member name="M:System.CodeDom.Compiler.CodeGenerator.GenerateAssignStatement(System.CodeDom.CodeAssignStatement)">
      <summary>Generates code for the specified assignment statement.</summary>
      <param name="e">A <see cref="T:System.CodeDom.CodeAssignStatement" /> that indicates the statement to generate code for. </param>
    </member>
    <member name="M:System.CodeDom.Compiler.CodeGenerator.GenerateAttachEventStatement(System.CodeDom.CodeAttachEventStatement)">
      <summary>Generates code for the specified attach event statement.</summary>
      <param name="e">A <see cref="T:System.CodeDom.CodeAttachEventStatement" /> that indicates the statement to generate code for. </param>
    </member>
    <member name="M:System.CodeDom.Compiler.CodeGenerator.GenerateAttributeDeclarationsEnd(System.CodeDom.CodeAttributeDeclarationCollection)">
      <summary>Generates code for the specified attribute block end.</summary>
      <param name="attributes">A <see cref="T:System.CodeDom.CodeAttributeDeclarationCollection" /> that indicates the end of the attribute block to generate code for. </param>
    </member>
    <member name="M:System.CodeDom.Compiler.CodeGenerator.GenerateAttributeDeclarationsStart(System.CodeDom.CodeAttributeDeclarationCollection)">
      <summary>Generates code for the specified attribute block start.</summary>
      <param name="attributes">A <see cref="T:System.CodeDom.CodeAttributeDeclarationCollection" /> that indicates the start of the attribute block to generate code for. </param>
    </member>
    <member name="M:System.CodeDom.Compiler.CodeGenerator.GenerateBaseReferenceExpression(System.CodeDom.CodeBaseReferenceExpression)">
      <summary>Generates code for the specified base reference expression.</summary>
      <param name="e">A <see cref="T:System.CodeDom.CodeBaseReferenceExpression" /> that indicates the expression to generate code for. </param>
    </member>
    <member name="M:System.CodeDom.Compiler.CodeGenerator.GenerateBinaryOperatorExpression(System.CodeDom.CodeBinaryOperatorExpression)">
      <summary>Generates code for the specified binary operator expression.</summary>
      <param name="e">A <see cref="T:System.CodeDom.CodeBinaryOperatorExpression" /> that indicates the expression to generate code for. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="e" /> is null.</exception>
    </member>
    <member name="M:System.CodeDom.Compiler.CodeGenerator.GenerateCastExpression(System.CodeDom.CodeCastExpression)">
      <summary>Generates code for the specified cast expression.</summary>
      <param name="e">A <see cref="T:System.CodeDom.CodeCastExpression" /> that indicates the expression to generate code for. </param>
    </member>
    <member name="M:System.CodeDom.Compiler.CodeGenerator.GenerateCodeFromMember(System.CodeDom.CodeTypeMember,System.IO.TextWriter,System.CodeDom.Compiler.CodeGeneratorOptions)">
      <summary>Generates code for the specified class member using the specified text writer and code generator options.</summary>
      <param name="member">The class member to generate code for.</param>
      <param name="writer">The text writer to output code to.</param>
      <param name="options">The options to use when generating the code. </param>
      <exception cref="T:System.InvalidOperationException">The <see cref="P:System.CodeDom.Compiler.CodeGenerator.Output" /> property is not null.</exception>
    </member>
    <member name="M:System.CodeDom.Compiler.CodeGenerator.GenerateComment(System.CodeDom.CodeComment)">
      <summary>Generates code for the specified comment.</summary>
      <param name="e">A <see cref="T:System.CodeDom.CodeComment" /> to generate code for. </param>
    </member>
    <member name="M:System.CodeDom.Compiler.CodeGenerator.GenerateCommentStatement(System.CodeDom.CodeCommentStatement)">
      <summary>Generates code for the specified comment statement.</summary>
      <param name="e">The statement to generate code for. </param>
      <exception cref="T:System.AgrumentException">The <see cref="P:System.CodeDom.CodeCommentStatement.Comment" /> property of <paramref name="e " />is not set.</exception>
    </member>
    <member name="M:System.CodeDom.Compiler.CodeGenerator.GenerateCommentStatements(System.CodeDom.CodeCommentStatementCollection)">
      <summary>Generates code for the specified comment statements.</summary>
      <param name="e">The expression to generate code for. </param>
    </member>
    <member name="M:System.CodeDom.Compiler.CodeGenerator.GenerateCompileUnit(System.CodeDom.CodeCompileUnit)">
      <summary>Generates code for the specified compile unit.</summary>
      <param name="e">The compile unit to generate code for. </param>
    </member>
    <member name="M:System.CodeDom.Compiler.CodeGenerator.GenerateCompileUnitEnd(System.CodeDom.CodeCompileUnit)">
      <summary>Generates code for the end of a compile unit.</summary>
      <param name="e">The compile unit to generate code for. </param>
    </member>
    <member name="M:System.CodeDom.Compiler.CodeGenerator.GenerateCompileUnitStart(System.CodeDom.CodeCompileUnit)">
      <summary>Generates code for the start of a compile unit.</summary>
      <param name="e">The compile unit to generate code for. </param>
    </member>
    <member name="M:System.CodeDom.Compiler.CodeGenerator.GenerateConditionStatement(System.CodeDom.CodeConditionStatement)">
      <summary>Generates code for the specified conditional statement.</summary>
      <param name="e">The statement to generate code for. </param>
    </member>
    <member name="M:System.CodeDom.Compiler.CodeGenerator.GenerateConstructor(System.CodeDom.CodeConstructor,System.CodeDom.CodeTypeDeclaration)">
      <summary>Generates code for the specified constructor.</summary>
      <param name="e">The constructor to generate code for. </param>
      <param name="c">The type of the object that this constructor constructs. </param>
    </member>
    <member name="M:System.CodeDom.Compiler.CodeGenerator.GenerateDecimalValue(System.Decimal)">
      <summary>Generates code for the specified decimal value.</summary>
      <param name="d">The decimal value to generate code for. </param>
    </member>
    <member name="M:System.CodeDom.Compiler.CodeGenerator.GenerateDefaultValueExpression(System.CodeDom.CodeDefaultValueExpression)">
      <summary>Generates code for the specified reference to a default value.</summary>
      <param name="e">The reference to generate code for.</param>
    </member>
    <member name="M:System.CodeDom.Compiler.CodeGenerator.GenerateDelegateCreateExpression(System.CodeDom.CodeDelegateCreateExpression)">
      <summary>Generates code for the specified delegate creation expression.</summary>
      <param name="e">The expression to generate code for. </param>
    </member>
    <member name="M:System.CodeDom.Compiler.CodeGenerator.GenerateDelegateInvokeExpression(System.CodeDom.CodeDelegateInvokeExpression)">
      <summary>Generates code for the specified delegate invoke expression.</summary>
      <param name="e">The expression to generate code for. </param>
    </member>
    <member name="M:System.CodeDom.Compiler.CodeGenerator.GenerateDirectionExpression(System.CodeDom.CodeDirectionExpression)">
      <summary>Generates code for the specified direction expression.</summary>
      <param name="e">The expression to generate code for. </param>
    </member>
    <member name="M:System.CodeDom.Compiler.CodeGenerator.GenerateDirectives(System.CodeDom.CodeDirectiveCollection)">
      <summary>Generates code for the specified code directives.</summary>
      <param name="directives">The code directives to generate code for.</param>
    </member>
    <member name="M:System.CodeDom.Compiler.CodeGenerator.GenerateDoubleValue(System.Double)">
      <summary>Generates code for a double-precision floating point number.</summary>
      <param name="d">The value to generate code for. </param>
    </member>
    <member name="M:System.CodeDom.Compiler.CodeGenerator.GenerateEntryPointMethod(System.CodeDom.CodeEntryPointMethod,System.CodeDom.CodeTypeDeclaration)">
      <summary>Generates code for the specified entry point method.</summary>
      <param name="e">The entry point for the code. </param>
      <param name="c">The code that declares the type. </param>
    </member>
    <member name="M:System.CodeDom.Compiler.CodeGenerator.GenerateEvent(System.CodeDom.CodeMemberEvent,System.CodeDom.CodeTypeDeclaration)">
      <summary>Generates code for the specified event.</summary>
      <param name="e">The member event to generate code for. </param>
      <param name="c">The type of the object that this event occurs on. </param>
    </member>
    <member name="M:System.CodeDom.Compiler.CodeGenerator.GenerateEventReferenceExpression(System.CodeDom.CodeEventReferenceExpression)">
      <summary>Generates code for the specified event reference expression.</summary>
      <param name="e">The expression to generate code for. </param>
    </member>
    <member name="M:System.CodeDom.Compiler.CodeGenerator.GenerateExpression(System.CodeDom.CodeExpression)">
      <summary>Generates code for the specified code expression.</summary>
      <param name="e">The code expression to generate code for. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="e" /> is null.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="e" /> is not a valid <see cref="T:System.CodeDom.CodeStatement" />. </exception>
    </member>
    <member name="M:System.CodeDom.Compiler.CodeGenerator.GenerateExpressionStatement(System.CodeDom.CodeExpressionStatement)">
      <summary>Generates code for the specified expression statement.</summary>
      <param name="e">The statement to generate code for. </param>
    </member>
    <member name="M:System.CodeDom.Compiler.CodeGenerator.GenerateField(System.CodeDom.CodeMemberField)">
      <summary>Generates code for the specified member field.</summary>
      <param name="e">The field to generate code for. </param>
    </member>
    <member name="M:System.CodeDom.Compiler.CodeGenerator.GenerateFieldReferenceExpression(System.CodeDom.CodeFieldReferenceExpression)">
      <summary>Generates code for the specified field reference expression.</summary>
      <param name="e">The expression to generate code for. </param>
    </member>
    <member name="M:System.CodeDom.Compiler.CodeGenerator.GenerateGotoStatement(System.CodeDom.CodeGotoStatement)">
      <summary>Generates code for the specified goto statement.</summary>
      <param name="e">The expression to generate code for. </param>
    </member>
    <member name="M:System.CodeDom.Compiler.CodeGenerator.GenerateIndexerExpression(System.CodeDom.CodeIndexerExpression)">
      <summary>Generates code for the specified indexer expression.</summary>
      <param name="e">The expression to generate code for. </param>
    </member>
    <member name="M:System.CodeDom.Compiler.CodeGenerator.GenerateIterationStatement(System.CodeDom.CodeIterationStatement)">
      <summary>Generates code for the specified iteration statement.</summary>
      <param name="e">The statement to generate code for. </param>
    </member>
    <member name="M:System.CodeDom.Compiler.CodeGenerator.GenerateLabeledStatement(System.CodeDom.CodeLabeledStatement)">
      <summary>Generates code for the specified labeled statement.</summary>
      <param name="e">The statement to generate code for. </param>
    </member>
    <member name="M:System.CodeDom.Compiler.CodeGenerator.GenerateLinePragmaEnd(System.CodeDom.CodeLinePragma)">
      <summary>Generates code for the specified line pragma end.</summary>
      <param name="e">The end of the line pragma to generate code for. </param>
    </member>
    <member name="M:System.CodeDom.Compiler.CodeGenerator.GenerateLinePragmaStart(System.CodeDom.CodeLinePragma)">
      <summary>Generates code for the specified line pragma start.</summary>
      <param name="e">The start of the line pragma to generate code for. </param>
    </member>
    <member name="M:System.CodeDom.Compiler.CodeGenerator.GenerateMethod(System.CodeDom.CodeMemberMethod,System.CodeDom.CodeTypeDeclaration)">
      <summary>Generates code for the specified method.</summary>
      <param name="e">The member method to generate code for. </param>
      <param name="c">The type of the object that this method occurs on. </param>
    </member>
    <member name="M:System.CodeDom.Compiler.CodeGenerator.GenerateMethodInvokeExpression(System.CodeDom.CodeMethodInvokeExpression)">
      <summary>Generates code for the specified method invoke expression.</summary>
      <param name="e">The expression to generate code for. </param>
    </member>
    <member name="M:System.CodeDom.Compiler.CodeGenerator.GenerateMethodReferenceExpression(System.CodeDom.CodeMethodReferenceExpression)">
      <summary>Generates code for the specified method reference expression.</summary>
      <param name="e">The expression to generate code for. </param>
    </member>
    <member name="M:System.CodeDom.Compiler.CodeGenerator.GenerateMethodReturnStatement(System.CodeDom.CodeMethodReturnStatement)">
      <summary>Generates code for the specified method return statement.</summary>
      <param name="e">The statement to generate code for. </param>
    </member>
    <member name="M:System.CodeDom.Compiler.CodeGenerator.GenerateNamespace(System.CodeDom.CodeNamespace)">
      <summary>Generates code for the specified namespace.</summary>
      <param name="e">The namespace to generate code for. </param>
    </member>
    <member name="M:System.CodeDom.Compiler.CodeGenerator.GenerateNamespaceEnd(System.CodeDom.CodeNamespace)">
      <summary>Generates code for the end of a namespace.</summary>
      <param name="e">The namespace to generate code for. </param>
    </member>
    <member name="M:System.CodeDom.Compiler.CodeGenerator.GenerateNamespaceImport(System.CodeDom.CodeNamespaceImport)">
      <summary>Generates code for the specified namespace import.</summary>
      <param name="e">The namespace import to generate code for. </param>
    </member>
    <member name="M:System.CodeDom.Compiler.CodeGenerator.GenerateNamespaceImports(System.CodeDom.CodeNamespace)">
      <summary>Generates code for the specified namespace import.</summary>
      <param name="e">The namespace import to generate code for. </param>
    </member>
    <member name="M:System.CodeDom.Compiler.CodeGenerator.GenerateNamespaces(System.CodeDom.CodeCompileUnit)">
      <summary>Generates code for the namespaces in the specified compile unit.</summary>
      <param name="e">The compile unit to generate namespaces for. </param>
    </member>
    <member name="M:System.CodeDom.Compiler.CodeGenerator.GenerateNamespaceStart(System.CodeDom.CodeNamespace)">
      <summary>Generates code for the start of a namespace.</summary>
      <param name="e">The namespace to generate code for. </param>
    </member>
    <member name="M:System.CodeDom.Compiler.CodeGenerator.GenerateObjectCreateExpression(System.CodeDom.CodeObjectCreateExpression)">
      <summary>Generates code for the specified object creation expression.</summary>
      <param name="e">The expression to generate code for. </param>
    </member>
    <member name="M:System.CodeDom.Compiler.CodeGenerator.GenerateParameterDeclarationExpression(System.CodeDom.CodeParameterDeclarationExpression)">
      <summary>Generates code for the specified parameter declaration expression.</summary>
      <param name="e">The expression to generate code for. </param>
    </member>
    <member name="M:System.CodeDom.Compiler.CodeGenerator.GeneratePrimitiveExpression(System.CodeDom.CodePrimitiveExpression)">
      <summary>Generates code for the specified primitive expression.</summary>
      <param name="e">The expression to generate code for. </param>
      <exception cref="T:System.ArgumentException">
        <paramref name="e" /> uses an invalid data type. Only the following data types are valid:stringcharbyteInt16Int32Int64SingleDoubleDecimal</exception>
    </member>
    <member name="M:System.CodeDom.Compiler.CodeGenerator.GenerateProperty(System.CodeDom.CodeMemberProperty,System.CodeDom.CodeTypeDeclaration)">
      <summary>Generates code for the specified property.</summary>
      <param name="e">The property to generate code for. </param>
      <param name="c">The type of the object that this property occurs on. </param>
    </member>
    <member name="M:System.CodeDom.Compiler.CodeGenerator.GeneratePropertyReferenceExpression(System.CodeDom.CodePropertyReferenceExpression)">
      <summary>Generates code for the specified property reference expression.</summary>
      <param name="e">The expression to generate code for. </param>
    </member>
    <member name="M:System.CodeDom.Compiler.CodeGenerator.GeneratePropertySetValueReferenceExpression(System.CodeDom.CodePropertySetValueReferenceExpression)">
      <summary>Generates code for the specified property set value reference expression.</summary>
      <param name="e">The expression to generate code for. </param>
    </member>
    <member name="M:System.CodeDom.Compiler.CodeGenerator.GenerateRemoveEventStatement(System.CodeDom.CodeRemoveEventStatement)">
      <summary>Generates code for the specified remove event statement.</summary>
      <param name="e">The statement to generate code for. </param>
    </member>
    <member name="M:System.CodeDom.Compiler.CodeGenerator.GenerateSingleFloatValue(System.Single)">
      <summary>Generates code for a single-precision floating point number.</summary>
      <param name="s">The value to generate code for. </param>
    </member>
    <member name="M:System.CodeDom.Compiler.CodeGenerator.GenerateSnippetCompileUnit(System.CodeDom.CodeSnippetCompileUnit)">
      <summary>Outputs the code of the specified literal code fragment compile unit.</summary>
      <param name="e">The literal code fragment compile unit to generate code for. </param>
    </member>
    <member name="M:System.CodeDom.Compiler.CodeGenerator.GenerateSnippetExpression(System.CodeDom.CodeSnippetExpression)">
      <summary>Outputs the code of the specified literal code fragment expression.</summary>
      <param name="e">The expression to generate code for. </param>
    </member>
    <member name="M:System.CodeDom.Compiler.CodeGenerator.GenerateSnippetMember(System.CodeDom.CodeSnippetTypeMember)">
      <summary>Outputs the code of the specified literal code fragment class member.</summary>
      <param name="e">The member to generate code for. </param>
    </member>
    <member name="M:System.CodeDom.Compiler.CodeGenerator.GenerateSnippetStatement(System.CodeDom.CodeSnippetStatement)">
      <summary>Outputs the code of the specified literal code fragment statement.</summary>
      <param name="e">The statement to generate code for. </param>
    </member>
    <member name="M:System.CodeDom.Compiler.CodeGenerator.GenerateStatement(System.CodeDom.CodeStatement)">
      <summary>Generates code for the specified statement.</summary>
      <param name="e">The statement to generate code for. </param>
      <exception cref="T:System.ArgumentException">
        <paramref name="e" /> is not a valid <see cref="T:System.CodeDom.CodeStatement" />.</exception>
    </member>
    <member name="M:System.CodeDom.Compiler.CodeGenerator.GenerateStatements(System.CodeDom.CodeStatementCollection)">
      <summary>Generates code for the specified statement collection.</summary>
      <param name="stms">The statements to generate code for. </param>
    </member>
    <member name="M:System.CodeDom.Compiler.CodeGenerator.GenerateThisReferenceExpression(System.CodeDom.CodeThisReferenceExpression)">
      <summary>Generates code for the specified this reference expression.</summary>
      <param name="e">The expression to generate code for. </param>
    </member>
    <member name="M:System.CodeDom.Compiler.CodeGenerator.GenerateThrowExceptionStatement(System.CodeDom.CodeThrowExceptionStatement)">
      <summary>Generates code for the specified throw exception statement.</summary>
      <param name="e">The statement to generate code for. </param>
    </member>
    <member name="M:System.CodeDom.Compiler.CodeGenerator.GenerateTryCatchFinallyStatement(System.CodeDom.CodeTryCatchFinallyStatement)">
      <summary>Generates code for the specified try...catch...finally statement.</summary>
      <param name="e">The statement to generate code for. </param>
    </member>
    <member name="M:System.CodeDom.Compiler.CodeGenerator.GenerateTypeConstructor(System.CodeDom.CodeTypeConstructor)">
      <summary>Generates code for the specified class constructor.</summary>
      <param name="e">The class constructor to generate code for. </param>
    </member>
    <member name="M:System.CodeDom.Compiler.CodeGenerator.GenerateTypeEnd(System.CodeDom.CodeTypeDeclaration)">
      <summary>Generates code for the specified end of the class.</summary>
      <param name="e">The end of the class to generate code for. </param>
    </member>
    <member name="M:System.CodeDom.Compiler.CodeGenerator.GenerateTypeOfExpression(System.CodeDom.CodeTypeOfExpression)">
      <summary>Generates code for the specified type of expression.</summary>
      <param name="e">The expression to generate code for. </param>
    </member>
    <member name="M:System.CodeDom.Compiler.CodeGenerator.GenerateTypeReferenceExpression(System.CodeDom.CodeTypeReferenceExpression)">
      <summary>Generates code for the specified type reference expression.</summary>
      <param name="e">The expression to generate code for. </param>
    </member>
    <member name="M:System.CodeDom.Compiler.CodeGenerator.GenerateTypes(System.CodeDom.CodeNamespace)">
      <summary>Generates code for the specified namespace and the classes it contains.</summary>
      <param name="e">The namespace to generate classes for. </param>
    </member>
    <member name="M:System.CodeDom.Compiler.CodeGenerator.GenerateTypeStart(System.CodeDom.CodeTypeDeclaration)">
      <summary>Generates code for the specified start of the class.</summary>
      <param name="e">The start of the class to generate code for. </param>
    </member>
    <member name="M:System.CodeDom.Compiler.CodeGenerator.GenerateVariableDeclarationStatement(System.CodeDom.CodeVariableDeclarationStatement)">
      <summary>Generates code for the specified variable declaration statement.</summary>
      <param name="e">The statement to generate code for. </param>
    </member>
    <member name="M:System.CodeDom.Compiler.CodeGenerator.GenerateVariableReferenceExpression(System.CodeDom.CodeVariableReferenceExpression)">
      <summary>Generates code for the specified variable reference expression.</summary>
      <param name="e">The expression to generate code for. </param>
    </member>
    <member name="M:System.CodeDom.Compiler.CodeGenerator.GetTypeOutput(System.CodeDom.CodeTypeReference)">
      <summary>Gets the name of the specified data type.</summary>
      <returns>The name of the data type reference.</returns>
      <param name="value">The type whose name will be returned. </param>
    </member>
    <member name="P:System.CodeDom.Compiler.CodeGenerator.Indent">
      <summary>Gets or sets the amount of spaces to indent each indentation level.</summary>
      <returns>The number of spaces to indent for each indentation level.</returns>
    </member>
    <member name="P:System.CodeDom.Compiler.CodeGenerator.IsCurrentClass">
      <summary>Gets a value indicating whether the current object being generated is a class.</summary>
      <returns>true if the current object is a class; otherwise, false.</returns>
    </member>
    <member name="P:System.CodeDom.Compiler.CodeGenerator.IsCurrentDelegate">
      <summary>Gets a value indicating whether the current object being generated is a delegate.</summary>
      <returns>true if the current object is a delegate; otherwise, false.</returns>
    </member>
    <member name="P:System.CodeDom.Compiler.CodeGenerator.IsCurrentEnum">
      <summary>Gets a value indicating whether the current object being generated is an enumeration.</summary>
      <returns>true if the current object is an enumeration; otherwise, false.</returns>
    </member>
    <member name="P:System.CodeDom.Compiler.CodeGenerator.IsCurrentInterface">
      <summary>Gets a value indicating whether the current object being generated is an interface.</summary>
      <returns>true if the current object is an interface; otherwise, false.</returns>
    </member>
    <member name="P:System.CodeDom.Compiler.CodeGenerator.IsCurrentStruct">
      <summary>Gets a value indicating whether the current object being generated is a value type or struct.</summary>
      <returns>true if the current object is a value type or struct; otherwise, false.</returns>
    </member>
    <member name="M:System.CodeDom.Compiler.CodeGenerator.IsValidIdentifier(System.String)">
      <summary>Gets a value indicating whether the specified value is a valid identifier.</summary>
      <returns>true if the value is a valid identifier; otherwise, false.</returns>
      <param name="value">The value to test for conflicts with valid identifiers. </param>
    </member>
    <member name="M:System.CodeDom.Compiler.CodeGenerator.IsValidLanguageIndependentIdentifier(System.String)">
      <summary>Gets a value indicating whether the specified string is a valid identifier.</summary>
      <returns>true if the specified string is a valid identifier; otherwise, false.</returns>
      <param name="value">The string to test for validity. </param>
    </member>
    <member name="P:System.CodeDom.Compiler.CodeGenerator.NullToken">
      <summary>Gets the token that represents null.</summary>
      <returns>The token that represents null.</returns>
    </member>
    <member name="P:System.CodeDom.Compiler.CodeGenerator.Options">
      <summary>Gets the options to be used by the code generator.</summary>
      <returns>An object that indicates the options for the code generator to use.</returns>
    </member>
    <member name="P:System.CodeDom.Compiler.CodeGenerator.Output">
      <summary>Gets the text writer to use for output.</summary>
      <returns>The text writer to use for output.</returns>
    </member>
    <member name="M:System.CodeDom.Compiler.CodeGenerator.OutputAttributeArgument(System.CodeDom.CodeAttributeArgument)">
      <summary>Outputs an argument in an attribute block.</summary>
      <param name="arg">The attribute argument to generate code for. </param>
    </member>
    <member name="M:System.CodeDom.Compiler.CodeGenerator.OutputAttributeDeclarations(System.CodeDom.CodeAttributeDeclarationCollection)">
      <summary>Generates code for the specified attribute declaration collection.</summary>
      <param name="attributes">The attributes to generate code for. </param>
    </member>
    <member name="M:System.CodeDom.Compiler.CodeGenerator.OutputDirection(System.CodeDom.FieldDirection)">
      <summary>Generates code for the specified <see cref="T:System.CodeDom.FieldDirection" />.</summary>
      <param name="dir">One of the enumeration values that indicates the attribute of the field. </param>
    </member>
    <member name="M:System.CodeDom.Compiler.CodeGenerator.OutputExpressionList(System.CodeDom.CodeExpressionCollection)">
      <summary>Generates code for the specified expression list.</summary>
      <param name="expressions">The expressions to generate code for. </param>
    </member>
    <member name="M:System.CodeDom.Compiler.CodeGenerator.OutputExpressionList(System.CodeDom.CodeExpressionCollection,System.Boolean)">
      <summary>Generates code for the specified expression list.</summary>
      <param name="expressions">The expressions to generate code for. </param>
      <param name="newlineBetweenItems">true to insert a new line after each item; otherwise, false. </param>
    </member>
    <member name="M:System.CodeDom.Compiler.CodeGenerator.OutputFieldScopeModifier(System.CodeDom.MemberAttributes)">
      <summary>Outputs a field scope modifier that corresponds to the specified attributes.</summary>
      <param name="attributes">One of the enumeration values that specifies the attributes. </param>
    </member>
    <member name="M:System.CodeDom.Compiler.CodeGenerator.OutputIdentifier(System.String)">
      <summary>Outputs the specified identifier.</summary>
      <param name="ident">The identifier to output. </param>
    </member>
    <member name="M:System.CodeDom.Compiler.CodeGenerator.OutputMemberAccessModifier(System.CodeDom.MemberAttributes)">
      <summary>Generates code for the specified member access modifier.</summary>
      <param name="attributes">One of the enumeration values that indicates the member access modifier to generate code for. </param>
    </member>
    <member name="M:System.CodeDom.Compiler.CodeGenerator.OutputMemberScopeModifier(System.CodeDom.MemberAttributes)">
      <summary>Generates code for the specified member scope modifier.</summary>
      <param name="attributes">One of the enumeration values that indicates the member scope modifier to generate code for. </param>
    </member>
    <member name="M:System.CodeDom.Compiler.CodeGenerator.OutputOperator(System.CodeDom.CodeBinaryOperatorType)">
      <summary>Generates code for the specified operator.</summary>
      <param name="op">The operator to generate code for. </param>
    </member>
    <member name="M:System.CodeDom.Compiler.CodeGenerator.OutputParameters(System.CodeDom.CodeParameterDeclarationExpressionCollection)">
      <summary>Generates code for the specified parameters.</summary>
      <param name="parameters">The parameter declaration expressions to generate code for. </param>
    </member>
    <member name="M:System.CodeDom.Compiler.CodeGenerator.OutputType(System.CodeDom.CodeTypeReference)">
      <summary>Generates code for the specified type.</summary>
      <param name="typeRef">The type to generate code for. </param>
    </member>
    <member name="M:System.CodeDom.Compiler.CodeGenerator.OutputTypeAttributes(System.Reflection.TypeAttributes,System.Boolean,System.Boolean)">
      <summary>Generates code for the specified type attributes.</summary>
      <param name="attributes">One of the enumeration values that indicates the type attributes to generate code for. </param>
      <param name="isStruct">true if the type is a struct; otherwise, false. </param>
      <param name="isEnum">true if the type is an enum; otherwise, false. </param>
    </member>
    <member name="M:System.CodeDom.Compiler.CodeGenerator.OutputTypeNamePair(System.CodeDom.CodeTypeReference,System.String)">
      <summary>Generates code for the specified object type and name pair.</summary>
      <param name="typeRef">The type. </param>
      <param name="name">The name for the object. </param>
    </member>
    <member name="M:System.CodeDom.Compiler.CodeGenerator.QuoteSnippetString(System.String)">
      <summary>Converts the specified string by formatting it with escape codes.</summary>
      <returns>The converted string.</returns>
      <param name="value">The string to convert. </param>
    </member>
    <member name="M:System.CodeDom.Compiler.CodeGenerator.Supports(System.CodeDom.Compiler.GeneratorSupport)">
      <summary>Gets a value indicating whether the specified code generation support is provided.</summary>
      <returns>true if the specified code generation support is provided; otherwise, false.</returns>
      <param name="support">The type of code generation support to test for. </param>
    </member>
    <member name="M:System.CodeDom.Compiler.CodeGenerator.System#CodeDom#Compiler#ICodeGenerator#CreateEscapedIdentifier(System.String)">
      <summary>Creates an escaped identifier for the specified value.</summary>
      <returns>The escaped identifier for the value.</returns>
      <param name="value">The string to create an escaped identifier for.</param>
    </member>
    <member name="M:System.CodeDom.Compiler.CodeGenerator.System#CodeDom#Compiler#ICodeGenerator#CreateValidIdentifier(System.String)">
      <summary>Creates a valid identifier for the specified value.</summary>
      <returns>A valid identifier for the specified value.</returns>
      <param name="value">The string to generate a valid identifier for.</param>
    </member>
    <member name="M:System.CodeDom.Compiler.CodeGenerator.System#CodeDom#Compiler#ICodeGenerator#GenerateCodeFromCompileUnit(System.CodeDom.CodeCompileUnit,System.IO.TextWriter,System.CodeDom.Compiler.CodeGeneratorOptions)">
      <summary>Generates code for the specified Code Document Object Model (CodeDOM) compilation unit and outputs it to the specified text writer using the specified options.</summary>
      <param name="e">The CodeDOM compilation unit to generate code for.</param>
      <param name="w">The text writer to output code to.</param>
      <param name="o">The options to use for generating code.</param>
      <exception cref="T:System.InvalidOperationException">
        <paramref name="w" /> is not available. <paramref name="w" /> may have been closed before the method call was made.</exception>
    </member>
    <member name="M:System.CodeDom.Compiler.CodeGenerator.System#CodeDom#Compiler#ICodeGenerator#GenerateCodeFromExpression(System.CodeDom.CodeExpression,System.IO.TextWriter,System.CodeDom.Compiler.CodeGeneratorOptions)">
      <summary>Generates code for the specified Code Document Object Model (CodeDOM) expression and outputs it to the specified text writer.</summary>
      <param name="e">The expression to generate code for.</param>
      <param name="w">The text writer to output code to.</param>
      <param name="o">The options to use for generating code.</param>
      <exception cref="T:System.InvalidOperationException">
        <paramref name="w" /> is not available. <paramref name="w" /> may have been closed before the method call was made.</exception>
    </member>
    <member name="M:System.CodeDom.Compiler.CodeGenerator.System#CodeDom#Compiler#ICodeGenerator#GenerateCodeFromNamespace(System.CodeDom.CodeNamespace,System.IO.TextWriter,System.CodeDom.Compiler.CodeGeneratorOptions)">
      <summary>Generates code for the specified Code Document Object Model (CodeDOM) namespace and outputs it to the specified text writer using the specified options.</summary>
      <param name="e">The namespace to generate code for.</param>
      <param name="w">The text writer to output code to.</param>
      <param name="o">The options to use for generating code.</param>
      <exception cref="T:System.InvalidOperationException">
        <paramref name="w" /> is not available. <paramref name="w" /> may have been closed before the method call was made.</exception>
    </member>
    <member name="M:System.CodeDom.Compiler.CodeGenerator.System#CodeDom#Compiler#ICodeGenerator#GenerateCodeFromStatement(System.CodeDom.CodeStatement,System.IO.TextWriter,System.CodeDom.Compiler.CodeGeneratorOptions)">
      <summary>Generates code for the specified Code Document Object Model (CodeDOM) statement and outputs it to the specified text writer using the specified options.</summary>
      <param name="e">The statement that contains the CodeDOM elements to translate.</param>
      <param name="w">The text writer to output code to.</param>
      <param name="o">The options to use for generating code.</param>
      <exception cref="T:System.InvalidOperationException">
        <paramref name="w" /> is not available. <paramref name="w" /> may have been closed before the method call was made.</exception>
    </member>
    <member name="M:System.CodeDom.Compiler.CodeGenerator.System#CodeDom#Compiler#ICodeGenerator#GenerateCodeFromType(System.CodeDom.CodeTypeDeclaration,System.IO.TextWriter,System.CodeDom.Compiler.CodeGeneratorOptions)">
      <summary>Generates code for the specified Code Document Object Model (CodeDOM) type declaration and outputs it to the specified text writer using the specified options.</summary>
      <param name="e">The type to generate code for.</param>
      <param name="w">The text writer to output code to.</param>
      <param name="o">The options to use for generating code.</param>
      <exception cref="T:System.InvalidOperationException">
        <paramref name="w" /> is not available. <paramref name="w" /> may have been closed before the method call was made.</exception>
    </member>
    <member name="M:System.CodeDom.Compiler.CodeGenerator.System#CodeDom#Compiler#ICodeGenerator#GetTypeOutput(System.CodeDom.CodeTypeReference)">
      <summary>Gets the type indicated by the specified <see cref="T:System.CodeDom.CodeTypeReference" />.</summary>
      <returns>The name of the data type reference.</returns>
      <param name="type">The type to return.</param>
    </member>
    <member name="M:System.CodeDom.Compiler.CodeGenerator.System#CodeDom#Compiler#ICodeGenerator#IsValidIdentifier(System.String)">
      <summary>Gets a value that indicates whether the specified value is a valid identifier for the current language.</summary>
      <returns>true if the <paramref name="value" /> parameter is a valid identifier; otherwise, false.</returns>
      <param name="value">The value to test.</param>
    </member>
    <member name="M:System.CodeDom.Compiler.CodeGenerator.System#CodeDom#Compiler#ICodeGenerator#Supports(System.CodeDom.Compiler.GeneratorSupport)">
      <summary>Gets a value indicating whether the generator provides support for the language features represented by the specified <see cref="T:System.CodeDom.Compiler.GeneratorSupport" />  object.</summary>
      <returns>true if the specified capabilities are supported; otherwise, false.</returns>
      <param name="support">The capabilities to test the generator for.</param>
    </member>
    <member name="M:System.CodeDom.Compiler.CodeGenerator.System#CodeDom#Compiler#ICodeGenerator#ValidateIdentifier(System.String)">
      <summary>Throws an exception if the specified value is not a valid identifier.</summary>
      <param name="value">The identifier to validate.</param>
    </member>
    <member name="M:System.CodeDom.Compiler.CodeGenerator.ValidateIdentifier(System.String)">
      <summary>Throws an exception if the specified string is not a valid identifier.</summary>
      <param name="value">The identifier to test for validity as an identifier. </param>
      <exception cref="T:System.ArgumentException">If the specified identifier is invalid or conflicts with reserved or language keywords. </exception>
    </member>
    <member name="M:System.CodeDom.Compiler.CodeGenerator.ValidateIdentifiers(System.CodeDom.CodeObject)">
      <summary>Attempts to validate each identifier field contained in the specified <see cref="T:System.CodeDom.CodeObject" /> or <see cref="N:System.CodeDom" /> tree.</summary>
      <param name="e">An object to test for invalid identifiers. </param>
      <exception cref="T:System.ArgumentException">The specified <see cref="T:System.CodeDom.CodeObject" /> contains an invalid identifier. </exception>
    </member>
    <member name="T:System.CodeDom.Compiler.CodeGeneratorOptions">
      <summary>Represents a set of options used by a code generator.</summary>
    </member>
    <member name="M:System.CodeDom.Compiler.CodeGeneratorOptions.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.CodeDom.Compiler.CodeGeneratorOptions" /> class.</summary>
    </member>
    <member name="P:System.CodeDom.Compiler.CodeGeneratorOptions.BlankLinesBetweenMembers">
      <summary>Gets or sets a value indicating whether to insert blank lines between members.</summary>
      <returns>true if blank lines should be inserted; otherwise, false. By default, the value of this property is true.</returns>
    </member>
    <member name="P:System.CodeDom.Compiler.CodeGeneratorOptions.BracingStyle">
      <summary>Gets or sets the style to use for bracing.</summary>
      <returns>A string containing the bracing style to use.</returns>
    </member>
    <member name="P:System.CodeDom.Compiler.CodeGeneratorOptions.ElseOnClosing">
      <summary>Gets or sets a value indicating whether to append an else, catch, or finally block, including brackets, at the closing line of each previous if or try block.</summary>
      <returns>true if an else should be appended; otherwise, false. The default value of this property is false.</returns>
    </member>
    <member name="P:System.CodeDom.Compiler.CodeGeneratorOptions.IndentString">
      <summary>Gets or sets the string to use for indentations.</summary>
      <returns>A string containing the characters to use for indentations.</returns>
    </member>
    <member name="P:System.CodeDom.Compiler.CodeGeneratorOptions.Item(System.String)">
      <summary>Gets or sets the object at the specified index.</summary>
      <returns>The object associated with the specified name. If no object associated with the specified name exists in the collection, null.</returns>
      <param name="index">The name associated with the object to retrieve. </param>
    </member>
    <member name="P:System.CodeDom.Compiler.CodeGeneratorOptions.VerbatimOrder">
      <summary>Gets or sets a value indicating whether to generate members in the order in which they occur in member collections.</summary>
      <returns>true to generate the members in the order in which they occur in the member collection; otherwise, false. The default value of this property is false.</returns>
    </member>
    <member name="T:System.CodeDom.Compiler.CodeParser">
      <summary>Provides an empty implementation of the <see cref="T:System.CodeDom.Compiler.ICodeParser" /> interface.</summary>
    </member>
    <member name="M:System.CodeDom.Compiler.CodeParser.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.CodeDom.Compiler.CodeParser" /> class. </summary>
    </member>
    <member name="M:System.CodeDom.Compiler.CodeParser.Parse(System.IO.TextReader)">
      <summary>Compiles the specified text stream into a <see cref="T:System.CodeDom.CodeCompileUnit" />.</summary>
      <returns>A <see cref="T:System.CodeDom.CodeCompileUnit" /> containing the code model produced from parsing the code.</returns>
      <param name="codeStream">A <see cref="T:System.IO.TextReader" /> that is used to read the code to be parsed. </param>
    </member>
    <member name="T:System.CodeDom.Compiler.CompilerError">
      <summary>Represents a compiler error or warning.</summary>
    </member>
    <member name="M:System.CodeDom.Compiler.CompilerError.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.CodeDom.Compiler.CompilerError" /> class.</summary>
    </member>
    <member name="M:System.CodeDom.Compiler.CompilerError.#ctor(System.String,System.Int32,System.Int32,System.String,System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.CodeDom.Compiler.CompilerError" /> class using the specified file name, line, column, error number, and error text.</summary>
      <param name="fileName">The file name of the file that the compiler was compiling when it encountered the error. </param>
      <param name="line">The line of the source of the error. </param>
      <param name="column">The column of the source of the error. </param>
      <param name="errorNumber">The error number of the error. </param>
      <param name="errorText">The error message text. </param>
    </member>
    <member name="P:System.CodeDom.Compiler.CompilerError.Column">
      <summary>Gets or sets the column number where the source of the error occurs.</summary>
      <returns>The column number of the source file where the compiler encountered the error.</returns>
    </member>
    <member name="P:System.CodeDom.Compiler.CompilerError.ErrorNumber">
      <summary>Gets or sets the error number.</summary>
      <returns>The error number as a string.</returns>
    </member>
    <member name="P:System.CodeDom.Compiler.CompilerError.ErrorText">
      <summary>Gets or sets the text of the error message.</summary>
      <returns>The text of the error message.</returns>
    </member>
    <member name="P:System.CodeDom.Compiler.CompilerError.FileName">
      <summary>Gets or sets the file name of the source file that contains the code which caused the error.</summary>
      <returns>The file name of the source file that contains the code which caused the error.</returns>
    </member>
    <member name="P:System.CodeDom.Compiler.CompilerError.IsWarning">
      <summary>Gets or sets a value that indicates whether the error is a warning.</summary>
      <returns>true if the error is a warning; otherwise, false.</returns>
    </member>
    <member name="P:System.CodeDom.Compiler.CompilerError.Line">
      <summary>Gets or sets the line number where the source of the error occurs.</summary>
      <returns>The line number of the source file where the compiler encountered the error.</returns>
    </member>
    <member name="M:System.CodeDom.Compiler.CompilerError.ToString">
      <summary>Provides an implementation of Object's <see cref="M:System.Object.ToString" /> method.</summary>
      <returns>A string representation of the compiler error.</returns>
    </member>
    <member name="T:System.CodeDom.Compiler.CompilerErrorCollection">
      <summary>Represents a collection of <see cref="T:System.CodeDom.Compiler.CompilerError" /> objects.</summary>
    </member>
    <member name="M:System.CodeDom.Compiler.CompilerErrorCollection.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.CodeDom.Compiler.CompilerErrorCollection" /> class.</summary>
    </member>
    <member name="M:System.CodeDom.Compiler.CompilerErrorCollection.#ctor(System.CodeDom.Compiler.CompilerError[])">
      <summary>Initializes a new instance of <see cref="T:System.CodeDom.Compiler.CompilerErrorCollection" /> that contains the specified array of <see cref="T:System.CodeDom.Compiler.CompilerError" /> objects.</summary>
      <param name="value">An array of <see cref="T:System.CodeDom.Compiler.CompilerError" /> objects to initialize the collection with. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="value" /> is null.</exception>
    </member>
    <member name="M:System.CodeDom.Compiler.CompilerErrorCollection.#ctor(System.CodeDom.Compiler.CompilerErrorCollection)">
      <summary>Initializes a new instance of the <see cref="T:System.CodeDom.Compiler.CompilerErrorCollection" /> class that contains the contents of the specified <see cref="T:System.CodeDom.Compiler.CompilerErrorCollection" />.</summary>
      <param name="value">A <see cref="T:System.CodeDom.Compiler.CompilerErrorCollection" /> object with which to initialize the collection. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="value" /> is null.</exception>
    </member>
    <member name="M:System.CodeDom.Compiler.CompilerErrorCollection.Add(System.CodeDom.Compiler.CompilerError)">
      <summary>Adds the specified <see cref="T:System.CodeDom.Compiler.CompilerError" /> object to the error collection.</summary>
      <returns>The index at which the new element was inserted.</returns>
      <param name="value">The <see cref="T:System.CodeDom.Compiler.CompilerError" /> object to add. </param>
    </member>
    <member name="M:System.CodeDom.Compiler.CompilerErrorCollection.AddRange(System.CodeDom.Compiler.CompilerError[])">
      <summary>Copies the elements of an array to the end of the error collection.</summary>
      <param name="value">An array of type <see cref="T:System.CodeDom.Compiler.CompilerError" /> that contains the objects to add to the collection. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="value" /> is null.</exception>
    </member>
    <member name="M:System.CodeDom.Compiler.CompilerErrorCollection.AddRange(System.CodeDom.Compiler.CompilerErrorCollection)">
      <summary>Adds the contents of the specified compiler error collection to the end of the error collection.</summary>
      <param name="value">A <see cref="T:System.CodeDom.Compiler.CompilerErrorCollection" /> object that contains the objects to add to the collection. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="value" /> is null.</exception>
    </member>
    <member name="M:System.CodeDom.Compiler.CompilerErrorCollection.Contains(System.CodeDom.Compiler.CompilerError)">
      <summary>Gets a value that indicates whether the collection contains the specified <see cref="T:System.CodeDom.Compiler.CompilerError" /> object.</summary>
      <returns>true if the <see cref="T:System.CodeDom.Compiler.CompilerError" /> is contained in the collection; otherwise, false.</returns>
      <param name="value">The <see cref="T:System.CodeDom.Compiler.CompilerError" /> to locate. </param>
    </member>
    <member name="M:System.CodeDom.Compiler.CompilerErrorCollection.CopyTo(System.CodeDom.Compiler.CompilerError[],System.Int32)">
      <summary>Copies the collection values to a one-dimensional <see cref="T:System.Array" /> instance at the specified index.</summary>
      <param name="array">The one-dimensional <see cref="T:System.Array" /> that is the destination of the values copied from <see cref="T:System.CodeDom.Compiler.CompilerErrorCollection" />. </param>
      <param name="index">The index in the array at which to start copying. </param>
      <exception cref="T:System.ArgumentException">The array indicated by the <paramref name="array" /> parameter is multidimensional.-or- The number of elements in the <see cref="T:System.CodeDom.Compiler.CompilerErrorCollection" /> is greater than the available space between the index value of the <paramref name="arrayIndex" /> parameter in the array indicated by the <paramref name="array" /> parameter and the end of the array indicated by the <paramref name="array" /> parameter. </exception>
      <exception cref="T:System.ArgumentNullException">The <paramref name="array" /> parameter is null. </exception>
      <exception cref="T:System.ArgumentOutOfRangeException">The <paramref name="index" /> parameter is less than the lowbound of the array indicated by the <paramref name="array" /> parameter. </exception>
    </member>
    <member name="P:System.CodeDom.Compiler.CompilerErrorCollection.HasErrors">
      <summary>Gets a value that indicates whether the collection contains errors.</summary>
      <returns>true if the collection contains errors; otherwise, false.</returns>
    </member>
    <member name="P:System.CodeDom.Compiler.CompilerErrorCollection.HasWarnings">
      <summary>Gets a value that indicates whether the collection contains warnings.</summary>
      <returns>true if the collection contains warnings; otherwise, false.</returns>
    </member>
    <member name="M:System.CodeDom.Compiler.CompilerErrorCollection.IndexOf(System.CodeDom.Compiler.CompilerError)">
      <summary>Gets the index of the specified <see cref="T:System.CodeDom.Compiler.CompilerError" /> object in the collection, if it exists in the collection.</summary>
      <returns>The index of the specified <see cref="T:System.CodeDom.Compiler.CompilerError" /> in the <see cref="T:System.CodeDom.Compiler.CompilerErrorCollection" />, if found; otherwise, -1.</returns>
      <param name="value">The <see cref="T:System.CodeDom.Compiler.CompilerError" /> to locate. </param>
    </member>
    <member name="M:System.CodeDom.Compiler.CompilerErrorCollection.Insert(System.Int32,System.CodeDom.Compiler.CompilerError)">
      <summary>Inserts the specified <see cref="T:System.CodeDom.Compiler.CompilerError" /> into the collection at the specified index.</summary>
      <param name="index">The zero-based index where the compiler error should be inserted. </param>
      <param name="value">The <see cref="T:System.CodeDom.Compiler.CompilerError" /> to insert. </param>
    </member>
    <member name="P:System.CodeDom.Compiler.CompilerErrorCollection.Item(System.Int32)">
      <summary>Gets or sets the <see cref="T:System.CodeDom.Compiler.CompilerError" /> at the specified index.</summary>
      <returns>A <see cref="T:System.CodeDom.Compiler.CompilerError" /> at each valid index.</returns>
      <param name="index">The zero-based index of the entry to locate in the collection. </param>
      <exception cref="T:System.ArgumentOutOfRangeException">The index value indicated by the <paramref name="index" /> parameter is outside the valid range of indexes for the collection. </exception>
    </member>
    <member name="M:System.CodeDom.Compiler.CompilerErrorCollection.Remove(System.CodeDom.Compiler.CompilerError)">
      <summary>Removes a specific <see cref="T:System.CodeDom.Compiler.CompilerError" /> from the collection.</summary>
      <param name="value">The <see cref="T:System.CodeDom.Compiler.CompilerError" /> to remove from the <see cref="T:System.CodeDom.Compiler.CompilerErrorCollection" />. </param>
      <exception cref="T:System.ArgumentException">The specified object is not found in the collection. </exception>
    </member>
    <member name="T:System.CodeDom.Compiler.CompilerInfo">
      <summary>Represents the configuration settings of a language provider. This class cannot be inherited.</summary>
    </member>
    <member name="P:System.CodeDom.Compiler.CompilerInfo.CodeDomProviderType">
      <summary>Gets the type of the configured <see cref="T:System.CodeDom.Compiler.CodeDomProvider" /> implementation.</summary>
      <returns>A read-only <see cref="T:System.Type" /> instance that represents the configured language provider type.</returns>
      <exception cref="T:System.Configuration.ConfigurationException">The language provider is not configured on this computer. </exception>
      <exception cref="T:System.Configuration.ConfigurationErrorsException">Cannot locate the type because it is a null or empty string.-or-Cannot locate the type because the name for the <see cref="T:System.CodeDom.Compiler.CodeDomProvider" /> cannot be found in the configuration file.</exception>
    </member>
    <member name="M:System.CodeDom.Compiler.CompilerInfo.CreateDefaultCompilerParameters">
      <summary>Gets the configured compiler settings for the language provider implementation.</summary>
      <returns>A read-only <see cref="T:System.CodeDom.Compiler.CompilerParameters" /> instance that contains the compiler options and settings configured for the language provider. </returns>
    </member>
    <member name="M:System.CodeDom.Compiler.CompilerInfo.CreateProvider">
      <summary>Returns a <see cref="T:System.CodeDom.Compiler.CodeDomProvider" /> instance for the current language provider settings.</summary>
      <returns>A CodeDOM provider associated with the language provider configuration. </returns>
    </member>
    <member name="M:System.CodeDom.Compiler.CompilerInfo.CreateProvider(System.Collections.Generic.IDictionary{System.String,System.String})">
      <summary>Returns a <see cref="T:System.CodeDom.Compiler.CodeDomProvider" /> instance for the current language provider settings and specified options.</summary>
      <returns>A CodeDOM provider associated with the language provider configuration and specified options.</returns>
      <param name="providerOptions">A collection of provider options from the configuration file.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="providerOptions " />is null.</exception>
      <exception cref="T:System.InvalidOperationException">The provider does not support options.</exception>
    </member>
    <member name="M:System.CodeDom.Compiler.CompilerInfo.Equals(System.Object)">
      <summary>Determines whether the specified object represents the same language provider and compiler settings as the current <see cref="T:System.CodeDom.Compiler.CompilerInfo" />.</summary>
      <returns>true if <paramref name="o" /> is a <see cref="T:System.CodeDom.Compiler.CompilerInfo" /> object and its value is the same as this instance; otherwise, false.</returns>
      <param name="o">The object to compare with the current <see cref="T:System.CodeDom.Compiler.CompilerInfo" />. </param>
    </member>
    <member name="M:System.CodeDom.Compiler.CompilerInfo.GetExtensions">
      <summary>Returns the file name extensions supported by the language provider.</summary>
      <returns>An array of file name extensions supported by the language provider.</returns>
    </member>
    <member name="M:System.CodeDom.Compiler.CompilerInfo.GetHashCode">
      <summary>Returns the hash code for the current instance.</summary>
      <returns>A 32-bit signed integer hash code for the current <see cref="T:System.CodeDom.Compiler.CompilerInfo" /> instance, suitable for use in hashing algorithms and data structures such as a hash table. </returns>
    </member>
    <member name="M:System.CodeDom.Compiler.CompilerInfo.GetLanguages">
      <summary>Gets the language names supported by the language provider.</summary>
      <returns>An array of language names supported by the language provider.</returns>
    </member>
    <member name="P:System.CodeDom.Compiler.CompilerInfo.IsCodeDomProviderTypeValid">
      <summary>Returns a value indicating whether the language provider implementation is configured on the computer.</summary>
      <returns>true if the language provider implementation type is configured on the computer; otherwise, false.</returns>
    </member>
    <member name="T:System.CodeDom.Compiler.CompilerParameters">
      <summary>Represents the parameters used to invoke a compiler.</summary>
    </member>
    <member name="M:System.CodeDom.Compiler.CompilerParameters.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.CodeDom.Compiler.CompilerParameters" /> class.</summary>
    </member>
    <member name="M:System.CodeDom.Compiler.CompilerParameters.#ctor(System.String[])">
      <summary>Initializes a new instance of the <see cref="T:System.CodeDom.Compiler.CompilerParameters" /> class using the specified assembly names.</summary>
      <param name="assemblyNames">The names of the assemblies to reference. </param>
    </member>
    <member name="M:System.CodeDom.Compiler.CompilerParameters.#ctor(System.String[],System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.CodeDom.Compiler.CompilerParameters" /> class using the specified assembly names and output file name.</summary>
      <param name="assemblyNames">The names of the assemblies to reference. </param>
      <param name="outputName">The output file name. </param>
    </member>
    <member name="M:System.CodeDom.Compiler.CompilerParameters.#ctor(System.String[],System.String,System.Boolean)">
      <summary>Initializes a new instance of the <see cref="T:System.CodeDom.Compiler.CompilerParameters" /> class using the specified assembly names, output name, and a value indicating whether to include debug information.</summary>
      <param name="assemblyNames">The names of the assemblies to reference. </param>
      <param name="outputName">The output file name. </param>
      <param name="includeDebugInformation">true if debug information should be included; false if debug information should be excluded. </param>
    </member>
    <member name="P:System.CodeDom.Compiler.CompilerParameters.CompilerOptions">
      <summary>Gets or sets the optional additional-command line arguments string to use when invoking the compiler.</summary>
      <returns>Any additional command line arguments for the compiler.</returns>
    </member>
    <member name="P:System.CodeDom.Compiler.CompilerParameters.EmbeddedResources">
      <summary>Gets the .NET Framework resource files to include when compiling the assembly output.</summary>
      <returns>A <see cref="T:System.Collections.Specialized.StringCollection" /> containing the file paths of .NET Framework resources to include in the generated assembly.</returns>
    </member>
    <member name="P:System.CodeDom.Compiler.CompilerParameters.Evidence">
      <summary>Specifies an evidence object that represents the security policy permissions to grant the compiled assembly.</summary>
      <returns>An <see cref="T:System.Security.Policy.Evidence" /> object that represents the security policy permissions to grant the compiled assembly.</returns>
    </member>
    <member name="P:System.CodeDom.Compiler.CompilerParameters.GenerateExecutable">
      <summary>Gets or sets a value indicating whether to generate an executable.</summary>
      <returns>true if an executable should be generated; otherwise, false.</returns>
    </member>
    <member name="P:System.CodeDom.Compiler.CompilerParameters.GenerateInMemory">
      <summary>Gets or sets a value indicating whether to generate the output in memory.</summary>
      <returns>true if the compiler should generate the output in memory; otherwise, false.</returns>
    </member>
    <member name="P:System.CodeDom.Compiler.CompilerParameters.IncludeDebugInformation">
      <summary>Gets or sets a value indicating whether to include debug information in the compiled executable.</summary>
      <returns>true if debug information should be generated; otherwise, false.</returns>
    </member>
    <member name="P:System.CodeDom.Compiler.CompilerParameters.LinkedResources">
      <summary>Gets the .NET Framework resource files that are referenced in the current source.</summary>
      <returns>A <see cref="T:System.Collections.Specialized.StringCollection" /> containing the file paths of .NET Framework resources that are referenced by the source.</returns>
    </member>
    <member name="P:System.CodeDom.Compiler.CompilerParameters.MainClass">
      <summary>Gets or sets the name of the main class.</summary>
      <returns>The name of the main class.</returns>
    </member>
    <member name="P:System.CodeDom.Compiler.CompilerParameters.OutputAssembly">
      <summary>Gets or sets the name of the output assembly.</summary>
      <returns>The name of the output assembly.</returns>
    </member>
    <member name="P:System.CodeDom.Compiler.CompilerParameters.ReferencedAssemblies">
      <summary>Gets the assemblies referenced by the current project.</summary>
      <returns>A <see cref="T:System.Collections.Specialized.StringCollection" /> that contains the assembly names that are referenced by the source to compile.</returns>
    </member>
    <member name="P:System.CodeDom.Compiler.CompilerParameters.TempFiles">
      <summary>Gets or sets the collection that contains the temporary files.</summary>
      <returns>A <see cref="T:System.CodeDom.Compiler.TempFileCollection" /> that contains the temporary files.</returns>
    </member>
    <member name="P:System.CodeDom.Compiler.CompilerParameters.TreatWarningsAsErrors">
      <summary>Gets or sets a value indicating whether to treat warnings as errors.</summary>
      <returns>true if warnings should be treated as errors; otherwise, false.</returns>
    </member>
    <member name="P:System.CodeDom.Compiler.CompilerParameters.UserToken">
      <summary>Gets or sets the user token to use when creating the compiler process.</summary>
      <returns>The user token to use.</returns>
    </member>
    <member name="P:System.CodeDom.Compiler.CompilerParameters.WarningLevel">
      <summary>Gets or sets the warning level at which the compiler aborts compilation.</summary>
      <returns>The warning level at which the compiler aborts compilation.</returns>
    </member>
    <member name="P:System.CodeDom.Compiler.CompilerParameters.Win32Resource">
      <summary>Gets or sets the file name of a Win32 resource file to link into the compiled assembly.</summary>
      <returns>A Win32 resource file that will be linked into the compiled assembly.</returns>
    </member>
    <member name="T:System.CodeDom.Compiler.CompilerResults">
      <summary>Represents the results of compilation that are returned from a compiler.</summary>
    </member>
    <member name="M:System.CodeDom.Compiler.CompilerResults.#ctor(System.CodeDom.Compiler.TempFileCollection)">
      <summary>Initializes a new instance of the <see cref="T:System.CodeDom.Compiler.CompilerResults" /> class that uses the specified temporary files.</summary>
      <param name="tempFiles">A <see cref="T:System.CodeDom.Compiler.TempFileCollection" /> with which to manage and store references to intermediate files generated during compilation. </param>
    </member>
    <member name="P:System.CodeDom.Compiler.CompilerResults.CompiledAssembly">
      <summary>Gets or sets the compiled assembly.</summary>
      <returns>An <see cref="T:System.Reflection.Assembly" /> that indicates the compiled assembly.</returns>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="P:System.CodeDom.Compiler.CompilerResults.Errors">
      <summary>Gets the collection of compiler errors and warnings.</summary>
      <returns>A <see cref="T:System.CodeDom.Compiler.CompilerErrorCollection" /> that indicates the errors and warnings resulting from compilation, if any.</returns>
    </member>
    <member name="P:System.CodeDom.Compiler.CompilerResults.Evidence">
      <summary>Indicates the evidence object that represents the security policy permissions of the compiled assembly.</summary>
      <returns>An <see cref="T:System.Security.Policy.Evidence" /> object that represents the security policy permissions of the compiled assembly.</returns>
    </member>
    <member name="P:System.CodeDom.Compiler.CompilerResults.NativeCompilerReturnValue">
      <summary>Gets or sets the compiler's return value.</summary>
      <returns>The compiler's return value.</returns>
    </member>
    <member name="P:System.CodeDom.Compiler.CompilerResults.Output">
      <summary>Gets the compiler output messages.</summary>
      <returns>A <see cref="T:System.Collections.Specialized.StringCollection" /> that contains the output messages.</returns>
    </member>
    <member name="P:System.CodeDom.Compiler.CompilerResults.PathToAssembly">
      <summary>Gets or sets the path of the compiled assembly.</summary>
      <returns>The path of the assembly, or null if the assembly was generated in memory.</returns>
    </member>
    <member name="P:System.CodeDom.Compiler.CompilerResults.TempFiles">
      <summary>Gets or sets the temporary file collection to use.</summary>
      <returns>A <see cref="T:System.CodeDom.Compiler.TempFileCollection" /> with which to manage and store references to intermediate files generated during compilation.</returns>
    </member>
    <member name="T:System.CodeDom.Compiler.Executor">
      <summary>Provides command execution functions for invoking compilers. This class cannot be inherited.</summary>
    </member>
    <member name="M:System.CodeDom.Compiler.Executor.ExecWait(System.String,System.CodeDom.Compiler.TempFileCollection)">
      <summary>Executes the command using the specified temporary files and waits for the call to return.</summary>
      <param name="cmd">The command to execute. </param>
      <param name="tempFiles">A <see cref="T:System.CodeDom.Compiler.TempFileCollection" /> with which to manage and store references to intermediate files generated during compilation. </param>
    </member>
    <member name="M:System.CodeDom.Compiler.Executor.ExecWaitWithCapture(System.IntPtr,System.String,System.CodeDom.Compiler.TempFileCollection,System.String@,System.String@)">
      <summary>Executes the specified command using the specified user token and temporary files, and waits for the call to return, storing output and error information from the compiler in the specified strings.</summary>
      <returns>The return value from the compiler.</returns>
      <param name="userToken">The token to start the compiler process with. </param>
      <param name="cmd">The command to execute. </param>
      <param name="tempFiles">A <see cref="T:System.CodeDom.Compiler.TempFileCollection" /> with which to manage and store references to intermediate files generated during compilation. </param>
      <param name="outputName">A reference to a string that will store the compiler's message output. </param>
      <param name="errorName">A reference to a string that will store the name of the error or errors encountered. </param>
    </member>
    <member name="M:System.CodeDom.Compiler.Executor.ExecWaitWithCapture(System.IntPtr,System.String,System.String,System.CodeDom.Compiler.TempFileCollection,System.String@,System.String@)">
      <summary>Executes the specified command using the specified user token, current directory, and temporary files; then waits for the call to return, storing output and error information from the compiler in the specified strings.</summary>
      <returns>The return value from the compiler.</returns>
      <param name="userToken">The token to start the compiler process with. </param>
      <param name="cmd">The command to execute. </param>
      <param name="currentDir">The directory to start the process in. </param>
      <param name="tempFiles">A <see cref="T:System.CodeDom.Compiler.TempFileCollection" /> with which to manage and store references to intermediate files generated during compilation. </param>
      <param name="outputName">A reference to a string that will store the compiler's message output. </param>
      <param name="errorName">A reference to a string that will store the name of the error or errors encountered. </param>
    </member>
    <member name="M:System.CodeDom.Compiler.Executor.ExecWaitWithCapture(System.String,System.CodeDom.Compiler.TempFileCollection,System.String@,System.String@)">
      <summary>Executes the specified command using the specified temporary files and waits for the call to return, storing output and error information from the compiler in the specified strings.</summary>
      <returns>The return value from the compiler.</returns>
      <param name="cmd">The command to execute. </param>
      <param name="tempFiles">A <see cref="T:System.CodeDom.Compiler.TempFileCollection" /> with which to manage and store references to intermediate files generated during compilation. </param>
      <param name="outputName">A reference to a string that will store the compiler's message output. </param>
      <param name="errorName">A reference to a string that will store the name of the error or errors encountered. </param>
    </member>
    <member name="M:System.CodeDom.Compiler.Executor.ExecWaitWithCapture(System.String,System.String,System.CodeDom.Compiler.TempFileCollection,System.String@,System.String@)">
      <summary>Executes the specified command using the specified current directory and temporary files, and waits for the call to return, storing output and error information from the compiler in the specified strings.</summary>
      <returns>The return value from the compiler.</returns>
      <param name="cmd">The command to execute. </param>
      <param name="currentDir">The current directory. </param>
      <param name="tempFiles">A <see cref="T:System.CodeDom.Compiler.TempFileCollection" /> with which to manage and store references to intermediate files generated during compilation. </param>
      <param name="outputName">A reference to a string that will store the compiler's message output. </param>
      <param name="errorName">A reference to a string that will store the name of the error or errors encountered. </param>
    </member>
    <member name="T:System.CodeDom.Compiler.GeneratedCodeAttribute">
      <summary>Identifies code generated by a tool. This class cannot be inherited.</summary>
    </member>
    <member name="M:System.CodeDom.Compiler.GeneratedCodeAttribute.#ctor(System.String,System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.CodeDom.Compiler.GeneratedCodeAttribute" /> class specifying the name and version of the tool that generated the code.</summary>
      <param name="tool">The name of the tool that generated the code.</param>
      <param name="version">The version of the tool that generated the code.</param>
    </member>
    <member name="P:System.CodeDom.Compiler.GeneratedCodeAttribute.Tool">
      <summary>Gets the name of the tool that generated the code.</summary>
      <returns>The name of the tool that generated to code.</returns>
    </member>
    <member name="P:System.CodeDom.Compiler.GeneratedCodeAttribute.Version">
      <summary>Gets the version of the tool that generated the code.</summary>
      <returns>The version of the tool that generated the code.</returns>
    </member>
    <member name="T:System.CodeDom.Compiler.GeneratorSupport">
      <summary>Defines identifiers used to determine whether a code generator supports certain types of code elements.</summary>
    </member>
    <member name="F:System.CodeDom.Compiler.GeneratorSupport.ArraysOfArrays">
      <summary>Indicates the generator supports arrays of arrays.</summary>
    </member>
    <member name="F:System.CodeDom.Compiler.GeneratorSupport.EntryPointMethod">
      <summary>Indicates the generator supports a program entry point method designation. This is used when building executables.</summary>
    </member>
    <member name="F:System.CodeDom.Compiler.GeneratorSupport.GotoStatements">
      <summary>Indicates the generator supports goto statements.</summary>
    </member>
    <member name="F:System.CodeDom.Compiler.GeneratorSupport.MultidimensionalArrays">
      <summary>Indicates the generator supports referencing multidimensional arrays. Currently, the CodeDom cannot be used to instantiate multidimensional arrays.</summary>
    </member>
    <member name="F:System.CodeDom.Compiler.GeneratorSupport.StaticConstructors">
      <summary>Indicates the generator supports static constructors.</summary>
    </member>
    <member name="F:System.CodeDom.Compiler.GeneratorSupport.TryCatchStatements">
      <summary>Indicates the generator supports try...catch statements.</summary>
    </member>
    <member name="F:System.CodeDom.Compiler.GeneratorSupport.ReturnTypeAttributes">
      <summary>Indicates the generator supports return type attribute declarations.</summary>
    </member>
    <member name="F:System.CodeDom.Compiler.GeneratorSupport.DeclareValueTypes">
      <summary>Indicates the generator supports value type declarations.</summary>
    </member>
    <member name="F:System.CodeDom.Compiler.GeneratorSupport.DeclareEnums">
      <summary>Indicates the generator supports enumeration declarations.</summary>
    </member>
    <member name="F:System.CodeDom.Compiler.GeneratorSupport.DeclareDelegates">
      <summary>Indicates the generator supports delegate declarations.</summary>
    </member>
    <member name="F:System.CodeDom.Compiler.GeneratorSupport.DeclareInterfaces">
      <summary>Indicates the generator supports interface declarations.</summary>
    </member>
    <member name="F:System.CodeDom.Compiler.GeneratorSupport.DeclareEvents">
      <summary>Indicates the generator supports event declarations.</summary>
    </member>
    <member name="F:System.CodeDom.Compiler.GeneratorSupport.AssemblyAttributes">
      <summary>Indicates the generator supports assembly attributes.</summary>
    </member>
    <member name="F:System.CodeDom.Compiler.GeneratorSupport.ParameterAttributes">
      <summary>Indicates the generator supports parameter attributes.</summary>
    </member>
    <member name="F:System.CodeDom.Compiler.GeneratorSupport.ReferenceParameters">
      <summary>Indicates the generator supports reference and out parameters.</summary>
    </member>
    <member name="F:System.CodeDom.Compiler.GeneratorSupport.ChainedConstructorArguments">
      <summary>Indicates the generator supports chained constructor arguments.</summary>
    </member>
    <member name="F:System.CodeDom.Compiler.GeneratorSupport.NestedTypes">
      <summary>Indicates the generator supports the declaration of nested types.</summary>
    </member>
    <member name="F:System.CodeDom.Compiler.GeneratorSupport.MultipleInterfaceMembers">
      <summary>Indicates the generator supports the declaration of members that implement multiple interfaces.</summary>
    </member>
    <member name="F:System.CodeDom.Compiler.GeneratorSupport.PublicStaticMembers">
      <summary>Indicates the generator supports public static members.</summary>
    </member>
    <member name="F:System.CodeDom.Compiler.GeneratorSupport.ComplexExpressions">
      <summary>Indicates the generator supports complex expressions.</summary>
    </member>
    <member name="F:System.CodeDom.Compiler.GeneratorSupport.Win32Resources">
      <summary>Indicates the generator supports compilation with Win32 resources.</summary>
    </member>
    <member name="F:System.CodeDom.Compiler.GeneratorSupport.Resources">
      <summary>Indicates the generator supports compilation with .NET Framework resources. These can be default resources compiled directly into an assembly, or resources referenced in a satellite assembly.</summary>
    </member>
    <member name="F:System.CodeDom.Compiler.GeneratorSupport.PartialTypes">
      <summary>Indicates the generator supports partial type declarations.</summary>
    </member>
    <member name="F:System.CodeDom.Compiler.GeneratorSupport.GenericTypeReference">
      <summary>Indicates the generator supports generic type references.</summary>
    </member>
    <member name="F:System.CodeDom.Compiler.GeneratorSupport.GenericTypeDeclaration">
      <summary>Indicates the generator supports generic type declarations.</summary>
    </member>
    <member name="F:System.CodeDom.Compiler.GeneratorSupport.DeclareIndexerProperties">
      <summary>Indicates the generator supports the declaration of indexer properties.</summary>
    </member>
    <member name="T:System.CodeDom.Compiler.ICodeCompiler">
      <summary>Defines an interface for invoking compilation of source code or a CodeDOM tree using a specific compiler.</summary>
    </member>
    <member name="M:System.CodeDom.Compiler.ICodeCompiler.CompileAssemblyFromDom(System.CodeDom.Compiler.CompilerParameters,System.CodeDom.CodeCompileUnit)">
      <summary>Compiles an assembly from the <see cref="N:System.CodeDom" /> tree contained in the specified <see cref="T:System.CodeDom.CodeCompileUnit" />, using the specified compiler settings.</summary>
      <returns>A <see cref="T:System.CodeDom.Compiler.CompilerResults" /> object that indicates the results of compilation.</returns>
      <param name="options">A <see cref="T:System.CodeDom.Compiler.CompilerParameters" /> object that indicates the settings for compilation. </param>
      <param name="compilationUnit">A <see cref="T:System.CodeDom.CodeCompileUnit" /> that indicates the code to compile. </param>
    </member>
    <member name="M:System.CodeDom.Compiler.ICodeCompiler.CompileAssemblyFromDomBatch(System.CodeDom.Compiler.CompilerParameters,System.CodeDom.CodeCompileUnit[])">
      <summary>Compiles an assembly based on the <see cref="N:System.CodeDom" /> trees contained in the specified array of <see cref="T:System.CodeDom.CodeCompileUnit" /> objects, using the specified compiler settings.</summary>
      <returns>A <see cref="T:System.CodeDom.Compiler.CompilerResults" /> object that indicates the results of compilation.</returns>
      <param name="options">A <see cref="T:System.CodeDom.Compiler.CompilerParameters" /> object that indicates the settings for compilation. </param>
      <param name="compilationUnits">An array of type <see cref="T:System.CodeDom.CodeCompileUnit" /> that indicates the code to compile. </param>
    </member>
    <member name="M:System.CodeDom.Compiler.ICodeCompiler.CompileAssemblyFromFile(System.CodeDom.Compiler.CompilerParameters,System.String)">
      <summary>Compiles an assembly from the source code contained within the specified file, using the specified compiler settings.</summary>
      <returns>A <see cref="T:System.CodeDom.Compiler.CompilerResults" /> object that indicates the results of compilation.</returns>
      <param name="options">A <see cref="T:System.CodeDom.Compiler.CompilerParameters" /> object that indicates the settings for compilation. </param>
      <param name="fileName">The file name of the file that contains the source code to compile. </param>
    </member>
    <member name="M:System.CodeDom.Compiler.ICodeCompiler.CompileAssemblyFromFileBatch(System.CodeDom.Compiler.CompilerParameters,System.String[])">
      <summary>Compiles an assembly from the source code contained within the specified files, using the specified compiler settings.</summary>
      <returns>A <see cref="T:System.CodeDom.Compiler.CompilerResults" /> object that indicates the results of compilation.</returns>
      <param name="options">A <see cref="T:System.CodeDom.Compiler.CompilerParameters" /> object that indicates the settings for compilation. </param>
      <param name="fileNames">The file names of the files to compile. </param>
    </member>
    <member name="M:System.CodeDom.Compiler.ICodeCompiler.CompileAssemblyFromSource(System.CodeDom.Compiler.CompilerParameters,System.String)">
      <summary>Compiles an assembly from the specified string containing source code, using the specified compiler settings.</summary>
      <returns>A <see cref="T:System.CodeDom.Compiler.CompilerResults" /> object that indicates the results of compilation.</returns>
      <param name="options">A <see cref="T:System.CodeDom.Compiler.CompilerParameters" /> object that indicates the settings for compilation. </param>
      <param name="source">The source code to compile. </param>
    </member>
    <member name="M:System.CodeDom.Compiler.ICodeCompiler.CompileAssemblyFromSourceBatch(System.CodeDom.Compiler.CompilerParameters,System.String[])">
      <summary>Compiles an assembly from the specified array of strings containing source code, using the specified compiler settings.</summary>
      <returns>A <see cref="T:System.CodeDom.Compiler.CompilerResults" /> object that indicates the results of compilation.</returns>
      <param name="options">A <see cref="T:System.CodeDom.Compiler.CompilerParameters" /> object that indicates the settings for compilation. </param>
      <param name="sources">The source code strings to compile. </param>
    </member>
    <member name="T:System.CodeDom.Compiler.ICodeGenerator">
      <summary>Defines an interface for generating code.</summary>
    </member>
    <member name="M:System.CodeDom.Compiler.ICodeGenerator.CreateEscapedIdentifier(System.String)">
      <summary>Creates an escaped identifier for the specified value.</summary>
      <returns>The escaped identifier for the value.</returns>
      <param name="value">The string to create an escaped identifier for. </param>
    </member>
    <member name="M:System.CodeDom.Compiler.ICodeGenerator.CreateValidIdentifier(System.String)">
      <summary>Creates a valid identifier for the specified value.</summary>
      <returns>A valid identifier for the specified value.</returns>
      <param name="value">The string to generate a valid identifier for. </param>
    </member>
    <member name="M:System.CodeDom.Compiler.ICodeGenerator.GenerateCodeFromCompileUnit(System.CodeDom.CodeCompileUnit,System.IO.TextWriter,System.CodeDom.Compiler.CodeGeneratorOptions)">
      <summary>Generates code for the specified Code Document Object Model (CodeDOM) compilation unit and outputs it to the specified text writer using the specified options.</summary>
      <param name="e">A <see cref="T:System.CodeDom.CodeCompileUnit" /> to generate code for. </param>
      <param name="w">The <see cref="T:System.IO.TextWriter" /> to output code to. </param>
      <param name="o">A <see cref="T:System.CodeDom.Compiler.CodeGeneratorOptions" /> that indicates the options to use for generating code. </param>
    </member>
    <member name="M:System.CodeDom.Compiler.ICodeGenerator.GenerateCodeFromExpression(System.CodeDom.CodeExpression,System.IO.TextWriter,System.CodeDom.Compiler.CodeGeneratorOptions)">
      <summary>Generates code for the specified Code Document Object Model (CodeDOM) expression and outputs it to the specified text writer.</summary>
      <param name="e">A <see cref="T:System.CodeDom.CodeExpression" /> that indicates the expression to generate code for. </param>
      <param name="w">The <see cref="T:System.IO.TextWriter" /> to output code to. </param>
      <param name="o">A <see cref="T:System.CodeDom.Compiler.CodeGeneratorOptions" /> that indicates the options to use for generating code. </param>
    </member>
    <member name="M:System.CodeDom.Compiler.ICodeGenerator.GenerateCodeFromNamespace(System.CodeDom.CodeNamespace,System.IO.TextWriter,System.CodeDom.Compiler.CodeGeneratorOptions)">
      <summary>Generates code for the specified Code Document Object Model (CodeDOM) namespace and outputs it to the specified text writer using the specified options.</summary>
      <param name="e">A <see cref="T:System.CodeDom.CodeNamespace" /> that indicates the namespace to generate code for. </param>
      <param name="w">The <see cref="T:System.IO.TextWriter" /> to output code to. </param>
      <param name="o">A <see cref="T:System.CodeDom.Compiler.CodeGeneratorOptions" /> that indicates the options to use for generating code. </param>
    </member>
    <member name="M:System.CodeDom.Compiler.ICodeGenerator.GenerateCodeFromStatement(System.CodeDom.CodeStatement,System.IO.TextWriter,System.CodeDom.Compiler.CodeGeneratorOptions)">
      <summary>Generates code for the specified Code Document Object Model (CodeDOM) statement and outputs it to the specified text writer using the specified options.</summary>
      <param name="e">A <see cref="T:System.CodeDom.CodeStatement" /> containing the CodeDOM elements to translate. </param>
      <param name="w">The <see cref="T:System.IO.TextWriter" /> to output code to. </param>
      <param name="o">A <see cref="T:System.CodeDom.Compiler.CodeGeneratorOptions" /> that indicates the options to use for generating code. </param>
    </member>
    <member name="M:System.CodeDom.Compiler.ICodeGenerator.GenerateCodeFromType(System.CodeDom.CodeTypeDeclaration,System.IO.TextWriter,System.CodeDom.Compiler.CodeGeneratorOptions)">
      <summary>Generates code for the specified Code Document Object Model (CodeDOM) type declaration and outputs it to the specified text writer using the specified options.</summary>
      <param name="e">A <see cref="T:System.CodeDom.CodeTypeDeclaration" /> that indicates the type to generate code for. </param>
      <param name="w">The <see cref="T:System.IO.TextWriter" /> to output code to. </param>
      <param name="o">A <see cref="T:System.CodeDom.Compiler.CodeGeneratorOptions" /> that indicates the options to use for generating code. </param>
    </member>
    <member name="M:System.CodeDom.Compiler.ICodeGenerator.GetTypeOutput(System.CodeDom.CodeTypeReference)">
      <summary>Gets the type indicated by the specified <see cref="T:System.CodeDom.CodeTypeReference" />.</summary>
      <returns>A text representation of the specified type for the language this code generator is designed to generate code in. For example, in Visual Basic, passing in type System.Int32 will return "Integer".</returns>
      <param name="type">A <see cref="T:System.CodeDom.CodeTypeReference" /> that indicates the type to return. </param>
    </member>
    <member name="M:System.CodeDom.Compiler.ICodeGenerator.IsValidIdentifier(System.String)">
      <summary>Gets a value that indicates whether the specified value is a valid identifier for the current language.</summary>
      <returns>true if the <paramref name="value" /> parameter is a valid identifier; otherwise, false.</returns>
      <param name="value">The value to test for being a valid identifier. </param>
    </member>
    <member name="M:System.CodeDom.Compiler.ICodeGenerator.Supports(System.CodeDom.Compiler.GeneratorSupport)">
      <summary>Gets a value indicating whether the generator provides support for the language features represented by the specified <see cref="T:System.CodeDom.Compiler.GeneratorSupport" /> object.</summary>
      <returns>true if the specified capabilities are supported; otherwise, false.</returns>
      <param name="supports">The capabilities to test the generator for. </param>
    </member>
    <member name="M:System.CodeDom.Compiler.ICodeGenerator.ValidateIdentifier(System.String)">
      <summary>Throws an exception if the specified value is not a valid identifier.</summary>
      <param name="value">The identifier to validate. </param>
      <exception cref="T:System.ArgumentException">The identifier is not valid. </exception>
    </member>
    <member name="T:System.CodeDom.Compiler.ICodeParser">
      <summary>Defines an interface for parsing code into a <see cref="T:System.CodeDom.CodeCompileUnit" />.</summary>
    </member>
    <member name="M:System.CodeDom.Compiler.ICodeParser.Parse(System.IO.TextReader)">
      <summary>When implemented in a derived class, compiles the specified text stream into a <see cref="T:System.CodeDom.CodeCompileUnit" />.</summary>
      <returns>A <see cref="T:System.CodeDom.CodeCompileUnit" /> that contains a representation of the parsed code.</returns>
      <param name="codeStream">A <see cref="T:System.IO.TextReader" /> that can be used to read the code to be compiled. </param>
    </member>
    <member name="T:System.CodeDom.Compiler.IndentedTextWriter">
      <summary>Provides a text writer that can indent new lines by a tab string token.</summary>
    </member>
    <member name="M:System.CodeDom.Compiler.IndentedTextWriter.#ctor(System.IO.TextWriter)">
      <summary>Initializes a new instance of the <see cref="T:System.CodeDom.Compiler.IndentedTextWriter" /> class using the specified text writer and default tab string.</summary>
      <param name="writer">The <see cref="T:System.IO.TextWriter" /> to use for output. </param>
    </member>
    <member name="M:System.CodeDom.Compiler.IndentedTextWriter.#ctor(System.IO.TextWriter,System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.CodeDom.Compiler.IndentedTextWriter" /> class using the specified text writer and tab string.</summary>
      <param name="writer">The <see cref="T:System.IO.TextWriter" /> to use for output. </param>
      <param name="tabString">The tab string to use for indentation. </param>
    </member>
    <member name="M:System.CodeDom.Compiler.IndentedTextWriter.Close">
      <summary>Closes the document being written to.</summary>
    </member>
    <member name="F:System.CodeDom.Compiler.IndentedTextWriter.DefaultTabString">
      <summary>Specifies the default tab string. This field is constant. </summary>
    </member>
    <member name="P:System.CodeDom.Compiler.IndentedTextWriter.Encoding">
      <summary>Gets the encoding for the text writer to use.</summary>
      <returns>An <see cref="T:System.Text.Encoding" /> that indicates the encoding for the text writer to use.</returns>
    </member>
    <member name="M:System.CodeDom.Compiler.IndentedTextWriter.Flush">
      <summary>Flushes the stream.</summary>
    </member>
    <member name="P:System.CodeDom.Compiler.IndentedTextWriter.Indent">
      <summary>Gets or sets the number of spaces to indent.</summary>
      <returns>The number of spaces to indent.</returns>
    </member>
    <member name="P:System.CodeDom.Compiler.IndentedTextWriter.InnerWriter">
      <summary>Gets the <see cref="T:System.IO.TextWriter" /> to use.</summary>
      <returns>The <see cref="T:System.IO.TextWriter" /> to use.</returns>
    </member>
    <member name="P:System.CodeDom.Compiler.IndentedTextWriter.NewLine">
      <summary>Gets or sets the new line character to use.</summary>
      <returns>The new line character to use.</returns>
    </member>
    <member name="M:System.CodeDom.Compiler.IndentedTextWriter.OutputTabs">
      <summary>Outputs the tab string once for each level of indentation according to the <see cref="P:System.CodeDom.Compiler.IndentedTextWriter.Indent" /> property.</summary>
    </member>
    <member name="M:System.CodeDom.Compiler.IndentedTextWriter.Write(System.Boolean)">
      <summary>Writes the text representation of a Boolean value to the text stream.</summary>
      <param name="value">The Boolean value to write. </param>
    </member>
    <member name="M:System.CodeDom.Compiler.IndentedTextWriter.Write(System.Char)">
      <summary>Writes a character to the text stream.</summary>
      <param name="value">The character to write. </param>
    </member>
    <member name="M:System.CodeDom.Compiler.IndentedTextWriter.Write(System.Char[])">
      <summary>Writes a character array to the text stream.</summary>
      <param name="buffer">The character array to write. </param>
    </member>
    <member name="M:System.CodeDom.Compiler.IndentedTextWriter.Write(System.Char[],System.Int32,System.Int32)">
      <summary>Writes a subarray of characters to the text stream.</summary>
      <param name="buffer">The character array to write data from. </param>
      <param name="index">Starting index in the buffer. </param>
      <param name="count">The number of characters to write. </param>
    </member>
    <member name="M:System.CodeDom.Compiler.IndentedTextWriter.Write(System.Double)">
      <summary>Writes the text representation of a Double to the text stream.</summary>
      <param name="value">The double to write. </param>
    </member>
    <member name="M:System.CodeDom.Compiler.IndentedTextWriter.Write(System.Int32)">
      <summary>Writes the text representation of an integer to the text stream.</summary>
      <param name="value">The integer to write. </param>
    </member>
    <member name="M:System.CodeDom.Compiler.IndentedTextWriter.Write(System.Int64)">
      <summary>Writes the text representation of an 8-byte integer to the text stream.</summary>
      <param name="value">The 8-byte integer to write. </param>
    </member>
    <member name="M:System.CodeDom.Compiler.IndentedTextWriter.Write(System.Object)">
      <summary>Writes the text representation of an object to the text stream.</summary>
      <param name="value">The object to write. </param>
    </member>
    <member name="M:System.CodeDom.Compiler.IndentedTextWriter.Write(System.Single)">
      <summary>Writes the text representation of a Single to the text stream.</summary>
      <param name="value">The single to write. </param>
    </member>
    <member name="M:System.CodeDom.Compiler.IndentedTextWriter.Write(System.String)">
      <summary>Writes the specified string to the text stream.</summary>
      <param name="s">The string to write. </param>
    </member>
    <member name="M:System.CodeDom.Compiler.IndentedTextWriter.Write(System.String,System.Object)">
      <summary>Writes out a formatted string, using the same semantics as specified.</summary>
      <param name="format">The formatting string. </param>
      <param name="arg0">The object to write into the formatted string. </param>
    </member>
    <member name="M:System.CodeDom.Compiler.IndentedTextWriter.Write(System.String,System.Object,System.Object)">
      <summary>Writes out a formatted string, using the same semantics as specified.</summary>
      <param name="format">The formatting string to use. </param>
      <param name="arg0">The first object to write into the formatted string. </param>
      <param name="arg1">The second object to write into the formatted string. </param>
    </member>
    <member name="M:System.CodeDom.Compiler.IndentedTextWriter.Write(System.String,System.Object[])">
      <summary>Writes out a formatted string, using the same semantics as specified.</summary>
      <param name="format">The formatting string to use. </param>
      <param name="arg">The argument array to output. </param>
    </member>
    <member name="M:System.CodeDom.Compiler.IndentedTextWriter.WriteLine">
      <summary>Writes a line terminator.</summary>
    </member>
    <member name="M:System.CodeDom.Compiler.IndentedTextWriter.WriteLine(System.Boolean)">
      <summary>Writes the text representation of a Boolean, followed by a line terminator, to the text stream.</summary>
      <param name="value">The Boolean to write. </param>
    </member>
    <member name="M:System.CodeDom.Compiler.IndentedTextWriter.WriteLine(System.Char)">
      <summary>Writes a character, followed by a line terminator, to the text stream.</summary>
      <param name="value">The character to write. </param>
    </member>
    <member name="M:System.CodeDom.Compiler.IndentedTextWriter.WriteLine(System.Char[])">
      <summary>Writes a character array, followed by a line terminator, to the text stream.</summary>
      <param name="buffer">The character array to write. </param>
    </member>
    <member name="M:System.CodeDom.Compiler.IndentedTextWriter.WriteLine(System.Char[],System.Int32,System.Int32)">
      <summary>Writes a subarray of characters, followed by a line terminator, to the text stream.</summary>
      <param name="buffer">The character array to write data from. </param>
      <param name="index">Starting index in the buffer. </param>
      <param name="count">The number of characters to write. </param>
    </member>
    <member name="M:System.CodeDom.Compiler.IndentedTextWriter.WriteLine(System.Double)">
      <summary>Writes the text representation of a Double, followed by a line terminator, to the text stream.</summary>
      <param name="value">The double to write. </param>
    </member>
    <member name="M:System.CodeDom.Compiler.IndentedTextWriter.WriteLine(System.Int32)">
      <summary>Writes the text representation of an integer, followed by a line terminator, to the text stream.</summary>
      <param name="value">The integer to write. </param>
    </member>
    <member name="M:System.CodeDom.Compiler.IndentedTextWriter.WriteLine(System.Int64)">
      <summary>Writes the text representation of an 8-byte integer, followed by a line terminator, to the text stream.</summary>
      <param name="value">The 8-byte integer to write. </param>
    </member>
    <member name="M:System.CodeDom.Compiler.IndentedTextWriter.WriteLine(System.Object)">
      <summary>Writes the text representation of an object, followed by a line terminator, to the text stream.</summary>
      <param name="value">The object to write. </param>
    </member>
    <member name="M:System.CodeDom.Compiler.IndentedTextWriter.WriteLine(System.Single)">
      <summary>Writes the text representation of a Single, followed by a line terminator, to the text stream.</summary>
      <param name="value">The single to write. </param>
    </member>
    <member name="M:System.CodeDom.Compiler.IndentedTextWriter.WriteLine(System.String)">
      <summary>Writes the specified string, followed by a line terminator, to the text stream.</summary>
      <param name="s">The string to write. </param>
    </member>
    <member name="M:System.CodeDom.Compiler.IndentedTextWriter.WriteLine(System.String,System.Object)">
      <summary>Writes out a formatted string, followed by a line terminator, using the same semantics as specified.</summary>
      <param name="format">The formatting string. </param>
      <param name="arg0">The object to write into the formatted string. </param>
    </member>
    <member name="M:System.CodeDom.Compiler.IndentedTextWriter.WriteLine(System.String,System.Object,System.Object)">
      <summary>Writes out a formatted string, followed by a line terminator, using the same semantics as specified.</summary>
      <param name="format">The formatting string to use. </param>
      <param name="arg0">The first object to write into the formatted string. </param>
      <param name="arg1">The second object to write into the formatted string. </param>
    </member>
    <member name="M:System.CodeDom.Compiler.IndentedTextWriter.WriteLine(System.String,System.Object[])">
      <summary>Writes out a formatted string, followed by a line terminator, using the same semantics as specified.</summary>
      <param name="format">The formatting string to use. </param>
      <param name="arg">The argument array to output. </param>
    </member>
    <member name="M:System.CodeDom.Compiler.IndentedTextWriter.WriteLine(System.UInt32)">
      <summary>Writes the text representation of a UInt32, followed by a line terminator, to the text stream.</summary>
      <param name="value">A UInt32 to output. </param>
    </member>
    <member name="M:System.CodeDom.Compiler.IndentedTextWriter.WriteLineNoTabs(System.String)">
      <summary>Writes the specified string to a line without tabs.</summary>
      <param name="s">The string to write. </param>
    </member>
    <member name="T:System.CodeDom.Compiler.LanguageOptions">
      <summary>Defines identifiers that indicate special features of a language.</summary>
    </member>
    <member name="F:System.CodeDom.Compiler.LanguageOptions.None">
      <summary>The language has default characteristics.</summary>
    </member>
    <member name="F:System.CodeDom.Compiler.LanguageOptions.CaseInsensitive">
      <summary>The language is case-insensitive.</summary>
    </member>
    <member name="T:System.CodeDom.Compiler.TempFileCollection">
      <summary>Represents a collection of temporary files.</summary>
    </member>
    <member name="M:System.CodeDom.Compiler.TempFileCollection.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.CodeDom.Compiler.TempFileCollection" /> class with default values.</summary>
    </member>
    <member name="M:System.CodeDom.Compiler.TempFileCollection.#ctor(System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.CodeDom.Compiler.TempFileCollection" /> class using the specified temporary directory that is set to delete the temporary files after their generation and use, by default.</summary>
      <param name="tempDir">A path to the temporary directory to use for storing the temporary files. </param>
    </member>
    <member name="M:System.CodeDom.Compiler.TempFileCollection.#ctor(System.String,System.Boolean)">
      <summary>Initializes a new instance of the <see cref="T:System.CodeDom.Compiler.TempFileCollection" /> class using the specified temporary directory and specified value indicating whether to keep or delete the temporary files after their generation and use, by default.</summary>
      <param name="tempDir">A path to the temporary directory to use for storing the temporary files. </param>
      <param name="keepFiles">true if the temporary files should be kept after use; false if the temporary files should be deleted. </param>
    </member>
    <member name="M:System.CodeDom.Compiler.TempFileCollection.AddExtension(System.String)">
      <summary>Adds a file name with the specified file name extension to the collection.</summary>
      <returns>A file name with the specified extension that was just added to the collection.</returns>
      <param name="fileExtension">The file name extension for the auto-generated temporary file name to add to the collection. </param>
    </member>
    <member name="M:System.CodeDom.Compiler.TempFileCollection.AddExtension(System.String,System.Boolean)">
      <summary>Adds a file name with the specified file name extension to the collection, using the specified value indicating whether the file should be deleted or retained.</summary>
      <returns>A file name with the specified extension that was just added to the collection.</returns>
      <param name="fileExtension">The file name extension for the auto-generated temporary file name to add to the collection. </param>
      <param name="keepFile">true if the file should be kept after use; false if the file should be deleted. </param>
      <exception cref="T:System.ArgumentException">
        <paramref name="fileExtension" /> is null or an empty string.</exception>
    </member>
    <member name="M:System.CodeDom.Compiler.TempFileCollection.AddFile(System.String,System.Boolean)">
      <summary>Adds the specified file to the collection, using the specified value indicating whether to keep the file after the collection is disposed or when the <see cref="M:System.CodeDom.Compiler.TempFileCollection.Delete" /> method is called.</summary>
      <param name="fileName">The name of the file to add to the collection. </param>
      <param name="keepFile">true if the file should be kept after use; false if the file should be deleted. </param>
      <exception cref="T:System.ArgumentException">
        <paramref name="fileName" /> is null or an empty string.-or-<paramref name="fileName" /> is a duplicate.</exception>
    </member>
    <member name="P:System.CodeDom.Compiler.TempFileCollection.BasePath">
      <summary>Gets the full path to the base file name, without a file name extension, on the temporary directory path, that is used to generate temporary file names for the collection.</summary>
      <returns>The full path to the base file name, without a file name extension, on the temporary directory path, that is used to generate temporary file names for the collection.</returns>
      <exception cref="T:System.Security.SecurityException">If the <see cref="P:System.CodeDom.Compiler.TempFileCollection.BasePath" /> property has not been set or is set to null, and <see cref="F:System.Security.Permissions.FileIOPermissionAccess.AllAccess" /> is not granted for the temporary directory indicated by the <see cref="P:System.CodeDom.Compiler.TempFileCollection.TempDir" /> property. </exception>
    </member>
    <member name="M:System.CodeDom.Compiler.TempFileCollection.CopyTo(System.String[],System.Int32)">
      <summary>Copies the members of the collection to the specified string, beginning at the specified index.</summary>
      <param name="fileNames">The array of strings to copy to. </param>
      <param name="start">The index of the array to begin copying to. </param>
    </member>
    <member name="P:System.CodeDom.Compiler.TempFileCollection.Count">
      <summary>Gets the number of files in the collection.</summary>
      <returns>The number of files in the collection.</returns>
    </member>
    <member name="M:System.CodeDom.Compiler.TempFileCollection.Delete">
      <summary>Deletes the temporary files within this collection that were not marked to be kept.</summary>
    </member>
    <member name="M:System.CodeDom.Compiler.TempFileCollection.Dispose(System.Boolean)">
      <summary>Releases the unmanaged resources used by the <see cref="T:System.CodeDom.Compiler.TempFileCollection" /> and optionally releases the managed resources.</summary>
      <param name="disposing">true to release both managed and unmanaged resources; false to release only unmanaged resources. </param>
    </member>
    <member name="M:System.CodeDom.Compiler.TempFileCollection.Finalize">
      <summary>Attempts to delete the temporary files before this object is reclaimed by garbage collection.</summary>
    </member>
    <member name="M:System.CodeDom.Compiler.TempFileCollection.GetEnumerator">
      <summary>Gets an enumerator that can enumerate the members of the collection.</summary>
      <returns>An <see cref="T:System.Collections.IEnumerator" /> that contains the collection's members.</returns>
    </member>
    <member name="P:System.CodeDom.Compiler.TempFileCollection.KeepFiles">
      <summary>Gets or sets a value indicating whether to keep the files, by default, when the <see cref="M:System.CodeDom.Compiler.TempFileCollection.Delete" /> method is called or the collection is disposed.</summary>
      <returns>true if the files should be kept; otherwise, false.</returns>
    </member>
    <member name="M:System.CodeDom.Compiler.TempFileCollection.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
      <summary>Copies the elements of the collection to an array, starting at the specified index of the target array. </summary>
      <param name="array">The one-dimensional <see cref="T:System.Array" /> that is the destination of the elements copied from <see cref="T:System.Collections.ICollection" />. The <see cref="T:System.Array" /> must have zero-based indexing.</param>
      <param name="start">The zero-based index in array at which copying begins.</param>
    </member>
    <member name="P:System.CodeDom.Compiler.TempFileCollection.System#Collections#ICollection#Count">
      <summary>Gets the number of elements contained in the collection.</summary>
      <returns>The number of elements contained in the <see cref="T:System.Collections.ICollection" />.</returns>
    </member>
    <member name="P:System.CodeDom.Compiler.TempFileCollection.System#Collections#ICollection#IsSynchronized">
      <summary>Gets a value indicating whether access to the collection is synchronized (thread safe).</summary>
      <returns>true if access to the <see cref="T:System.Collections.ICollection" /> is synchronized (thread safe); otherwise, false.</returns>
    </member>
    <member name="P:System.CodeDom.Compiler.TempFileCollection.System#Collections#ICollection#SyncRoot">
      <summary>Gets an object that can be used to synchronize access to the collection.</summary>
      <returns>An object that can be used to synchronize access to the <see cref="T:System.Collections.ICollection" />.</returns>
    </member>
    <member name="M:System.CodeDom.Compiler.TempFileCollection.System#Collections#IEnumerable#GetEnumerator">
      <summary>Returns an enumerator that iterates through a collection. </summary>
      <returns>An <see cref="T:System.Collections.IEnumerator" /> that can be used to iterate through the collection.</returns>
    </member>
    <member name="M:System.CodeDom.Compiler.TempFileCollection.System#IDisposable#Dispose">
      <summary>Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources. </summary>
    </member>
    <member name="P:System.CodeDom.Compiler.TempFileCollection.TempDir">
      <summary>Gets the temporary directory to store the temporary files in.</summary>
      <returns>The temporary directory to store the temporary files in.</returns>
    </member>
    <member name="T:System.Collections.Concurrent.BlockingCollection`1">
      <summary>Provides blocking and bounding capabilities for thread-safe collections that implement <see cref="T:System.Collections.Concurrent.IProducerConsumerCollection{T}" />.</summary>
      <typeparam name="T">The type of elements in the collection.</typeparam>
    </member>
    <member name="M:System.Collections.Concurrent.BlockingCollection`1.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Collections.Concurrent.BlockingCollection{T}" /> class without an upper-bound.</summary>
    </member>
    <member name="M:System.Collections.Concurrent.BlockingCollection`1.#ctor(System.Collections.Concurrent.IProducerConsumerCollection{`0})">
      <summary>Initializes a new instance of the <see cref="T:System.Collections.Concurrent.BlockingCollection{T}" /> class without an upper-bound and using the provided <see cref="T:System.Collections.Concurrent.IProducerConsumerCollection{T}" /> as its underlying data store.</summary>
      <param name="collection">The collection to use as the underlying data store.</param>
      <exception cref="T:System.ArgumentNullException">The <paramref name="collection" /> argument is null.</exception>
    </member>
    <member name="M:System.Collections.Concurrent.BlockingCollection`1.#ctor(System.Collections.Concurrent.IProducerConsumerCollection{`0},System.Int32)">
      <summary>Initializes a new instance of the <see cref="T:System.Collections.Concurrent.BlockingCollection{T}" /> class with the specified upper-bound and using the provided <see cref="T:System.Collections.Concurrent.IProducerConsumerCollection{T}" /> as its underlying data store.</summary>
      <param name="collection">The collection to use as the underlying data store.</param>
      <param name="boundedCapacity">The bounded size of the collection.</param>
      <exception cref="T:System.ArgumentNullException">The <paramref name="collection" /> argument is null.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">The <paramref name="boundedCapacity" /> is not a positive value.</exception>
      <exception cref="T:System.ArgumentException">The supplied <paramref name="collection" /> contains more values than is permitted by <paramref name="boundedCapacity" />.</exception>
    </member>
    <member name="M:System.Collections.Concurrent.BlockingCollection`1.#ctor(System.Int32)">
      <summary>Initializes a new instance of the <see cref="T:System.Collections.Concurrent.BlockingCollection{T}" /> class with the specified upper-bound.</summary>
      <param name="boundedCapacity">The bounded size of the collection.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">The <paramref name="boundedCapacity" /> is not a positive value.</exception>
    </member>
    <member name="M:System.Collections.Concurrent.BlockingCollection`1.Add(`0)">
      <summary>Adds the item to the <see cref="T:System.Collections.Concurrent.BlockingCollection{T}" />.</summary>
      <param name="item">The item to be added to the collection. The value can be a null reference.</param>
      <exception cref="T:System.ObjectDisposedException">The <see cref="T:System.Collections.Concurrent.BlockingCollection{T}" /> has been disposed.</exception>
      <exception cref="T:System.InvalidOperationException">The <see cref="T:System.Collections.Concurrent.BlockingCollection{T}" /> has been marked as complete with regards to additions.-or-The underlying collection didn't accept the item.</exception>
    </member>
    <member name="M:System.Collections.Concurrent.BlockingCollection`1.Add(`0,System.Threading.CancellationToken)">
      <summary>Adds the item to the <see cref="T:System.Collections.Concurrent.BlockingCollection{T}" />.</summary>
      <param name="item">The item to be added to the collection. The value can be a null reference.</param>
      <param name="cancellationToken">A cancellation token to observe.</param>
      <exception cref="T:System.OperationCanceledException">If the <see cref="T:System.Threading.CancellationToken" /> is canceled.</exception>
      <exception cref="T:System.ObjectDisposedException">The <see cref="T:System.Collections.Concurrent.BlockingCollection{T}" /> has been disposed or the <see cref="T:System.Threading.CancellationTokenSource" /> that owns <paramref name="cancellationToken" /> has been disposed.</exception>
      <exception cref="T:System.InvalidOperationException">The <see cref="T:System.Collections.Concurrent.BlockingCollection{T}" /> has been marked as complete with regards to additions.-or-The underlying collection didn't accept the item.</exception>
    </member>
    <member name="M:System.Collections.Concurrent.BlockingCollection`1.AddToAny(System.Collections.Concurrent.BlockingCollection{`0}[],`0)">
      <summary>Adds the specified item to any one of the specified <see cref="T:System.Collections.Concurrent.BlockingCollection{T}" /> instances.</summary>
      <returns>The index of the collection in the <paramref name="collections" /> array to which the item was added.</returns>
      <param name="collections">The array of collections.</param>
      <param name="item">The item to be added to one of the collections.</param>
      <exception cref="T:System.ObjectDisposedException">At least one of the <see cref="T:System.Collections.Concurrent.BlockingCollection{T}" /> instances has been disposed.</exception>
      <exception cref="T:System.ArgumentNullException">The <paramref name="collections" /> argument is null.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">The count of <paramref name="collections" /> is greater than the maximum size of 62 for STA and 63 for MTA.</exception>
      <exception cref="T:System.ArgumentException">The <paramref name="collections" /> argument is a 0-length array or contains a null element, or at least one of collections has been marked as complete for adding.</exception>
      <exception cref="T:System.InvalidOperationException">At least one underlying collection didn't accept the item.</exception>
    </member>
    <member name="M:System.Collections.Concurrent.BlockingCollection`1.AddToAny(System.Collections.Concurrent.BlockingCollection{`0}[],`0,System.Threading.CancellationToken)">
      <summary>Adds the specified item to any one of the specified <see cref="T:System.Collections.Concurrent.BlockingCollection{T}" /> instances.</summary>
      <returns>The index of the collection in the <paramref name="collections" /> array to which the item was added.</returns>
      <param name="collections">The array of collections.</param>
      <param name="item">The item to be added to one of the collections.</param>
      <param name="cancellationToken">A cancellation token to observe.</param>
      <exception cref="T:System.OperationCanceledException">If the <see cref="T:System.Threading.CancellationToken" /> is canceled.</exception>
      <exception cref="T:System.InvalidOperationException">At least one underlying collection didn't accept the item.</exception>
      <exception cref="T:System.ArgumentNullException">The <paramref name="collections" /> argument is null.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">The count of <paramref name="collections" /> is greater than the maximum size of 62 for STA and 63 for MTA.</exception>
      <exception cref="T:System.ArgumentException">The <paramref name="collections" /> argument is a 0-length array or contains a null element, or at least one of collections has been marked as complete for adding.</exception>
      <exception cref="T:System.ObjectDisposedException">At least one of the <see cref="T:System.Collections.Concurrent.BlockingCollection{T}" /> instances has been disposed.</exception>
    </member>
    <member name="P:System.Collections.Concurrent.BlockingCollection`1.BoundedCapacity">
      <summary>Gets the bounded capacity of this <see cref="T:System.Collections.Concurrent.BlockingCollection{T}" /> instance.</summary>
      <returns>The bounded capacity of this collection, or int.MaxValue if no bound was supplied.</returns>
      <exception cref="T:System.ObjectDisposedException">The <see cref="T:System.Collections.Concurrent.BlockingCollection{T}" /> has been disposed.</exception>
    </member>
    <member name="M:System.Collections.Concurrent.BlockingCollection`1.CompleteAdding">
      <summary>Marks the <see cref="T:System.Collections.Concurrent.BlockingCollection{T}" /> instances as not accepting any more additions.</summary>
      <exception cref="T:System.ObjectDisposedException">The <see cref="T:System.Collections.Concurrent.BlockingCollection{T}" /> has been disposed.</exception>
    </member>
    <member name="M:System.Collections.Concurrent.BlockingCollection`1.CopyTo(`0[],System.Int32)">
      <summary>Copies all of the items in the <see cref="T:System.Collections.Concurrent.BlockingCollection{T}" /> instance to a compatible one-dimensional array, starting at the specified index of the target array.</summary>
      <param name="array">The one-dimensional array that is the destination of the elements copied from the <see cref="T:System.Collections.Concurrent.BlockingCollection{T}" /> instance. The array must have zero-based indexing.</param>
      <param name="index">The zero-based index in <paramref name="array" /> at which copying begins.</param>
      <exception cref="T:System.ObjectDisposedException">The <see cref="T:System.Collections.Concurrent.BlockingCollection{T}" /> has been disposed.</exception>
      <exception cref="T:System.ArgumentNullException">The <paramref name="array" /> argument is null.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">The <paramref name="index" /> argument is less than zero.</exception>
      <exception cref="T:System.ArgumentException">The <paramref name="index" /> argument is equal to or greater than the length of the <paramref name="array" />.The destination array is too small to hold all of the BlockingCcollection elements.The array rank doesn't match.The array type is incompatible with the type of the BlockingCollection elements.</exception>
    </member>
    <member name="P:System.Collections.Concurrent.BlockingCollection`1.Count">
      <summary>Gets the number of items contained in the <see cref="T:System.Collections.Concurrent.BlockingCollection{T}" />.</summary>
      <returns>The number of items contained in the <see cref="T:System.Collections.Concurrent.BlockingCollection{T}" />.</returns>
      <exception cref="T:System.ObjectDisposedException">The <see cref="T:System.Collections.Concurrent.BlockingCollection{T}" /> has been disposed.</exception>
    </member>
    <member name="M:System.Collections.Concurrent.BlockingCollection`1.Dispose">
      <summary>Releases all resources used by the current instance of the <see cref="T:System.Collections.Concurrent.BlockingCollection`1" /> class.</summary>
    </member>
    <member name="M:System.Collections.Concurrent.BlockingCollection`1.Dispose(System.Boolean)">
      <summary>Releases resources used by the <see cref="T:System.Collections.Concurrent.BlockingCollection{T}" /> instance.</summary>
      <param name="disposing">Whether being disposed explicitly (true) or due to a finalizer (false).</param>
    </member>
    <member name="M:System.Collections.Concurrent.BlockingCollection`1.GetConsumingEnumerable">
      <summary>Provides a consuming <see cref="T:System.Collections.Generics.IEnumerable{T}" /> for items in the collection.</summary>
      <returns>An <see cref="T:System.Collections.Generics.IEnumerable{T}" /> that removes and returns items from the collection.</returns>
      <exception cref="T:System.ObjectDisposedException">The <see cref="T:System.Collections.Concurrent.BlockingCollection{T}" /> has been disposed.</exception>
    </member>
    <member name="M:System.Collections.Concurrent.BlockingCollection`1.GetConsumingEnumerable(System.Threading.CancellationToken)">
      <summary>Provides a consuming <see cref="T:System.Collections.Generics.IEnumerable{T}" /> for items in the collection.</summary>
      <returns>An <see cref="T:System.Collections.Generics.IEnumerable{T}" /> that removes and returns items from the collection.</returns>
      <param name="cancellationToken">A cancellation token to observe.</param>
      <exception cref="T:System.OperationCanceledException">If the <see cref="T:System.Threading.CancellationToken" /> is canceled.</exception>
      <exception cref="T:System.ObjectDisposedException">The <see cref="T:System.Collections.Concurrent.BlockingCollection{T}" /> has been disposed or the <see cref="T:System.Threading.CancellationTokenSource" /> that created <paramref name="cancellationToken" /> has been disposed</exception>
    </member>
    <member name="P:System.Collections.Concurrent.BlockingCollection`1.IsAddingCompleted">
      <summary>Gets whether this <see cref="T:System.Collections.Concurrent.BlockingCollection{T}" /> has been marked as complete for adding.</summary>
      <returns>Whether this collection has been marked as complete for adding.</returns>
      <exception cref="T:System.ObjectDisposedException">The <see cref="T:System.Collections.Concurrent.BlockingCollection{T}" /> has been disposed.</exception>
    </member>
    <member name="P:System.Collections.Concurrent.BlockingCollection`1.IsCompleted">
      <summary>Gets whether this <see cref="T:System.Collections.Concurrent.BlockingCollection{T}" /> has been marked as complete for adding and is empty.</summary>
      <returns>Whether this collection has been marked as complete for adding and is empty.</returns>
      <exception cref="T:System.ObjectDisposedException">The <see cref="T:System.Collections.Concurrent.BlockingCollection{T}" /> has been disposed.</exception>
    </member>
    <member name="M:System.Collections.Concurrent.BlockingCollection`1.System#Collections#Generic#IEnumerable{T}#GetEnumerator">
      <summary>Provides an <see cref="T:System.Collections.Generics.IEnumerator{T}" /> for items in the collection.</summary>
      <returns>An <see cref="T:System.Collections.Generics.IEnumerator{T}" /> for the items in the collection.</returns>
      <exception cref="T:System.ObjectDisposedException">The <see cref="T:System.Collections.Concurrent.BlockingCollection{T}" /> has been disposed.</exception>
    </member>
    <member name="M:System.Collections.Concurrent.BlockingCollection`1.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
      <summary>Copies all of the items in the <see cref="T:System.Collections.Concurrent.BlockingCollection{T}" /> instance to a compatible one-dimensional array, starting at the specified index of the target array.</summary>
      <param name="array">The one-dimensional array that is the destination of the elements copied from the <see cref="T:System.Collections.Concurrent.BlockingCollection{T}" /> instance. The array must have zero-based indexing.</param>
      <param name="index">The zero-based index in <paramref name="array" /> at which copying begins.</param>
      <exception cref="T:System.ObjectDisposedException">The <see cref="T:System.Collections.Concurrent.BlockingCollection{T}" /> has been disposed.</exception>
      <exception cref="T:System.ArgumentNullException">The <paramref name="array" /> argument is null.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">The <paramref name="index" /> argument is less than zero.</exception>
      <exception cref="T:System.ArgumentException">The <paramref name="index" /> argument is equal to or greater than the length of the <paramref name="array" />, the array is multidimensional, or the type parameter for the collection cannot be cast automatically to the type of the destination array.</exception>
    </member>
    <member name="P:System.Collections.Concurrent.BlockingCollection`1.System#Collections#ICollection#IsSynchronized">
      <summary>Gets a value indicating whether access to the <see cref="T:System.Collections.ICollection" /> is synchronized.</summary>
      <returns>always returns false.</returns>
      <exception cref="T:System.ObjectDisposedException">The <see cref="T:System.Collections.Concurrent.BlockingCollection{T}" /> has been disposed.</exception>
    </member>
    <member name="P:System.Collections.Concurrent.BlockingCollection`1.System#Collections#ICollection#SyncRoot">
      <summary>Gets an object that can be used to synchronize access to the <see cref="T:System.Collections.ICollection" />. This property is not supported.</summary>
      <returns>returns null.</returns>
      <exception cref="T:System.NotSupportedException">The SyncRoot property is not supported.</exception>
    </member>
    <member name="M:System.Collections.Concurrent.BlockingCollection`1.System#Collections#IEnumerable#GetEnumerator">
      <summary>Provides an <see cref="T:System.Collections.IEnumerator" /> for items in the collection.</summary>
      <returns>An <see cref="T:System.Collections.IEnumerator" /> for the items in the collection.</returns>
      <exception cref="T:System.ObjectDisposedException">The <see cref="T:System.Collections.Concurrent.BlockingCollection{T}" /> has been disposed.</exception>
    </member>
    <member name="M:System.Collections.Concurrent.BlockingCollection`1.Take">
      <summary>Takes an item from the <see cref="T:System.Collections.Concurrent.BlockingCollection{T}" />.</summary>
      <returns>The item removed from the collection.</returns>
      <exception cref="T:System.ObjectDisposedException">The <see cref="T:System.Collections.Concurrent.BlockingCollection{T}" /> has been disposed.</exception>
      <exception cref="T:System.InvalidOperationException">The underlying collection was modified outside of this <see cref="T:System.Collections.Concurrent.BlockingCollection{T}" /> instance.</exception>
    </member>
    <member name="M:System.Collections.Concurrent.BlockingCollection`1.Take(System.Threading.CancellationToken)">
      <summary>Takes an item from the <see cref="T:System.Collections.Concurrent.BlockingCollection{T}" />.</summary>
      <returns>The item removed from the collection.</returns>
      <param name="cancellationToken">Object that can be used to cancel the take operation.</param>
      <exception cref="T:System.OperationCanceledException">The <see cref="T:System.Threading.CancellationToken" /> is canceled.</exception>
      <exception cref="T:System.ObjectDisposedException">The <see cref="T:System.Collections.Concurrent.BlockingCollection{T}" /> has been disposed or the <see cref="T:System.Threading.CancellationTokenSource" /> that created the token was canceled.</exception>
      <exception cref="T:System.InvalidOperationException">The underlying collection was modified outside of this <see cref="T:System.Collections.Concurrent.BlockingCollection{T}" /> instance or the BlockingCollection is marked as complete for adding.</exception>
    </member>
    <member name="M:System.Collections.Concurrent.BlockingCollection`1.TakeFromAny(System.Collections.Concurrent.BlockingCollection{`0}[],`0@)">
      <summary>Takes an item from any one of the specified <see cref="T:System.Collections.Concurrent.BlockingCollection{T}" /> instances.</summary>
      <returns>The index of the collection in the <paramref name="collections" /> array from which the item was removed, or -1 if an item could not be removed.</returns>
      <param name="collections">The array of collections.</param>
      <param name="item">The item removed from one of the collections.</param>
      <exception cref="T:System.ObjectDisposedException">At least one of the <see cref="T:System.Collections.Concurrent.BlockingCollection{T}" /> instances has been disposed.</exception>
      <exception cref="T:System.ArgumentNullException">The <paramref name="collections" /> argument is null.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">The count of <paramref name="collections" /> is greater than the maximum size of 62 for STA and 63 for MTA.</exception>
      <exception cref="T:System.ArgumentException">The <paramref name="collections" /> argument is a 0-length array or contains a null element.</exception>
      <exception cref="T:System.InvalidOperationException">At least one of the underlying collections was modified outside of its <see cref="T:System.Collections.Concurrent.BlockingCollection{T}" /> instance.</exception>
    </member>
    <member name="M:System.Collections.Concurrent.BlockingCollection`1.TakeFromAny(System.Collections.Concurrent.BlockingCollection{`0}[],`0@,System.Threading.CancellationToken)">
      <summary>Takes an item from any one of the specified <see cref="T:System.Collections.Concurrent.BlockingCollection{T}" /> instances while observing the specified cancellation token.</summary>
      <returns>The index of the collection in the <paramref name="collections" /> array from which the item was removed, or -1 if an item could not be removed.</returns>
      <param name="collections">The array of collections.</param>
      <param name="item">The item removed from one of the collections.</param>
      <param name="cancellationToken">A cancellation token to observe.</param>
      <exception cref="T:System.OperationCanceledException">If the <see cref="T:System.Threading.CancellationToken" /> is canceled.</exception>
      <exception cref="T:System.InvalidOperationException">At least one of the underlying collections was modified outside of its <see cref="T:System.Collections.Concurrent.BlockingCollection{T}" /> instance.</exception>
      <exception cref="T:System.ArgumentNullException">The <paramref name="collections" /> argument is null.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">The count of <paramref name="collections" /> is greater than the maximum size of 62 for STA and 63 for MTA.</exception>
      <exception cref="T:System.ArgumentException">The <paramref name="collections" /> argument is a 0-length array or contains a null element.</exception>
      <exception cref="T:System.ObjectDisposedException">At least one of the <see cref="T:System.Collections.Concurrent.BlockingCollection{T}" /> instances has been disposed.</exception>
    </member>
    <member name="M:System.Collections.Concurrent.BlockingCollection`1.ToArray">
      <summary>Copies the items from the <see cref="T:System.Collections.Concurrent.BlockingCollection{T}" /> instance into a new array.</summary>
      <returns>An array containing copies of the elements of the collection.</returns>
      <exception cref="T:System.ObjectDisposedException">The <see cref="T:System.Collections.Concurrent.BlockingCollection{T}" /> has been disposed.</exception>
    </member>
    <member name="M:System.Collections.Concurrent.BlockingCollection`1.TryAdd(`0)">
      <summary>Attempts to add the specified item to the <see cref="T:System.Collections.Concurrent.BlockingCollection{T}" />.</summary>
      <returns>true if the <paramref name="item" /> could be added. If the item is a duplicate, and the underlying collection does not accept duplicate items, then an <see cref="T:System.InvalidOperationException" /> is thrown.</returns>
      <param name="item">The item to be added to the collection.</param>
      <exception cref="T:System.ObjectDisposedException">The <see cref="T:System.Collections.Concurrent.BlockingCollection{T}" /> has been disposed.</exception>
      <exception cref="T:System.InvalidOperationException">The <see cref="T:System.Collections.Concurrent.BlockingCollection{T}" /> has been marked as complete with regards to additions.-or-The underlying collection didn't accept the item.</exception>
    </member>
    <member name="M:System.Collections.Concurrent.BlockingCollection`1.TryAdd(`0,System.Int32)">
      <summary>Attempts to add the specified item to the <see cref="T:System.Collections.Concurrent.BlockingCollection{T}" /> within the specified time period.</summary>
      <returns>true if the <paramref name="item" /> could be added to the collection within the specified time; otherwise, false. If the item is a duplicate, and the underlying collection does not accept duplicate items, then an <see cref="T:System.InvalidOperationException" /> is thrown.</returns>
      <param name="item">The item to be added to the collection.</param>
      <param name="millisecondsTimeout">The number of milliseconds to wait, or <see cref="F:System.Threading.Timeout.Infinite" /> (-1) to wait indefinitely.</param>
      <exception cref="T:System.ObjectDisposedException">The <see cref="T:System.Collections.Concurrent.BlockingCollection{T}" /> has been disposed.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="millisecondsTimeout" /> is a negative number other than -1, which represents an infinite time-out.</exception>
      <exception cref="T:System.InvalidOperationException">The <see cref="T:System.Collections.Concurrent.BlockingCollection{T}" /> has been marked as complete with regards to additions.-or-The underlying collection didn't accept the item.</exception>
    </member>
    <member name="M:System.Collections.Concurrent.BlockingCollection`1.TryAdd(`0,System.Int32,System.Threading.CancellationToken)">
      <summary>Attempts to add the specified item to the <see cref="T:System.Collections.Concurrent.BlockingCollection{T}" /> within the specified time period, while observing a cancellation token.</summary>
      <returns>true if the <paramref name="item" /> could be added to the collection within the specified  time; otherwise, false. If the item is a duplicate, and the underlying collection does not accept duplicate items, then an <see cref="T:System.InvalidOperationException" /> is thrown.</returns>
      <param name="item">The item to be added to the collection.</param>
      <param name="millisecondsTimeout">The number of milliseconds to wait, or <see cref="F:System.Threading.Timeout.Infinite" /> (-1) to wait indefinitely.</param>
      <param name="cancellationToken">A cancellation token to observe.</param>
      <exception cref="T:System.OperationCanceledException">If the <see cref="T:System.Threading.CancellationToken" /> is canceled.</exception>
      <exception cref="T:System.ObjectDisposedException">The <see cref="T:System.Collections.Concurrent.BlockingCollection{T}" /> has been disposed or the underlying <see cref="T:System.Threading.CancellationTokenSource" /> has been disposed.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="millisecondsTimeout" /> is a negative number other than -1, which represents an infinite time-out.</exception>
      <exception cref="T:System.InvalidOperationException">The <see cref="T:System.Collections.Concurrent.BlockingCollection{T}" /> has been marked as complete with regards to additions.-or-The underlying collection didn't accept the item.</exception>
    </member>
    <member name="M:System.Collections.Concurrent.BlockingCollection`1.TryAdd(`0,System.TimeSpan)">
      <summary>Attempts to add the specified item to the <see cref="T:System.Collections.Concurrent.BlockingCollection{T}" />.</summary>
      <returns>true if the <paramref name="item" /> could be added to the collection within the specified time; otherwise, false.</returns>
      <param name="item">The item to be added to the collection.</param>
      <param name="timeout">A <see cref="T:System.TimeSpan" /> that represents the number of milliseconds to wait, or a <see cref="T:System.TimeSpan" /> that represents -1 milliseconds to wait indefinitely.</param>
      <exception cref="T:System.ObjectDisposedException">The <see cref="T:System.Collections.Concurrent.BlockingCollection{T}" /> has been disposed.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="timeout" /> is a negative number other than -1 milliseconds, which represents an infinite time-out -or- timeout is greater than <see cref="F:System.Int32.MaxValue" />.</exception>
      <exception cref="T:System.InvalidOperationException">The <see cref="T:System.Collections.Concurrent.BlockingCollection{T}" /> has been marked as complete with regards to additions.-or-The underlying collection didn't accept the item.</exception>
    </member>
    <member name="M:System.Collections.Concurrent.BlockingCollection`1.TryAddToAny(System.Collections.Concurrent.BlockingCollection{`0}[],`0)">
      <summary>Attempts to add the specified item to any one of the specified <see cref="T:System.Collections.Concurrent.BlockingCollection{T}" /> instances.</summary>
      <returns>The index of the collection in the <paramref name="collections" /> array to which the item was added, or -1 if the item could not be added.</returns>
      <param name="collections">The array of collections.</param>
      <param name="item">The item to be added to one of the collections.</param>
      <exception cref="T:System.ObjectDisposedException">At least one of the <see cref="T:System.Collections.Concurrent.BlockingCollection{T}" /> instances has been disposed.</exception>
      <exception cref="T:System.ArgumentNullException">The <paramref name="collections" /> argument is null.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">The count of <paramref name="collections" /> is greater than the maximum size of 62 for STA and 63 for MTA.</exception>
      <exception cref="T:System.ArgumentException">The <paramref name="collections" /> argument is a 0-length array or contains a null element, or at least one of collections has been marked as complete for adding.</exception>
      <exception cref="T:System.InvalidOperationException">At least one underlying collection didn't accept the item.</exception>
    </member>
    <member name="M:System.Collections.Concurrent.BlockingCollection`1.TryAddToAny(System.Collections.Concurrent.BlockingCollection{`0}[],`0,System.Int32)">
      <summary>Attempts to add the specified item to any one of the specified <see cref="T:System.Collections.Concurrent.BlockingCollection{T}" /> instances.</summary>
      <returns>The index of the collection in the <paramref name="collections" /> array to which the item was added, or -1 if the item could not be added.</returns>
      <param name="collections">The array of collections.</param>
      <param name="item">The item to be added to one of the collections.</param>
      <param name="millisecondsTimeout">The number of milliseconds to wait, or <see cref="F:System.Threading.Timeout.Infinite" /> (-1) to wait indefinitely.</param>
      <exception cref="T:System.ObjectDisposedException">At least one of the <see cref="T:System.Collections.Concurrent.BlockingCollection{T}" /> instances has been disposed.</exception>
      <exception cref="T:System.ArgumentNullException">The <paramref name="collections" /> argument is null.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="millisecondsTimeout" /> is a negative number other than -1, which represents an infinite time-out.-or-The count of <paramref name="collections" /> is greater than the maximum size of 62 for STA and 63 for MTA.</exception>
      <exception cref="T:System.ArgumentException">The <paramref name="collections" /> argument is a 0-length array or contains a null element, or at least one of collections has been marked as complete for adding.</exception>
      <exception cref="T:System.InvalidOperationException">At least one underlying collection didn't accept the item.</exception>
    </member>
    <member name="M:System.Collections.Concurrent.BlockingCollection`1.TryAddToAny(System.Collections.Concurrent.BlockingCollection{`0}[],`0,System.Int32,System.Threading.CancellationToken)">
      <summary>Attempts to add the specified item to any one of the specified <see cref="T:System.Collections.Concurrent.BlockingCollection{T}" /> instances.</summary>
      <returns>The index of the collection in the <paramref name="collections" /> array to which the item was added, or -1 if the item could not be added.</returns>
      <param name="collections">The array of collections.</param>
      <param name="item">The item to be added to one of the collections.</param>
      <param name="millisecondsTimeout">The number of milliseconds to wait, or <see cref="F:System.Threading.Timeout.Infinite" /> (-1) to wait indefinitely.</param>
      <param name="cancellationToken">A cancellation token to observe.</param>
      <exception cref="T:System.OperationCanceledException">If the <see cref="T:System.Threading.CancellationToken" /> is canceled.</exception>
      <exception cref="T:System.InvalidOperationException">At least one underlying collection didn't accept the item.</exception>
      <exception cref="T:System.ArgumentNullException">The <paramref name="collections" /> argument is null.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="millisecondsTimeout" /> is a negative number other than -1, which represents an infinite time-out.-or-The count of <paramref name="collections" /> is greater than the maximum size of 62 for STA and 63 for MTA.</exception>
      <exception cref="T:System.ArgumentException">The <paramref name="collections" /> argument is a 0-length array or contains a null element, or at least one of collections has been marked as complete for adding.</exception>
      <exception cref="T:System.ObjectDisposedException">At least one of the <see cref="T:System.Collections.Concurrent.BlockingCollection{T}" /> instances has been disposed.</exception>
    </member>
    <member name="M:System.Collections.Concurrent.BlockingCollection`1.TryAddToAny(System.Collections.Concurrent.BlockingCollection{`0}[],`0,System.TimeSpan)">
      <summary>Adds the specified item to any one of the specified <see cref="T:System.Collections.Concurrent.BlockingCollection{T}" /> instances while observing the specified cancellation token.</summary>
      <returns>The index of the collection in the <paramref name="collections" /> array to which the item was added, or -1 if the item could not be added.</returns>
      <param name="collections">The array of collections.</param>
      <param name="item">The item to be added to one of the collections.</param>
      <param name="timeout">A <see cref="T:System.TimeSpan" /> that represents the number of milliseconds to wait, or a <see cref="T:System.TimeSpan" /> that represents -1 milliseconds to wait indefinitely.</param>
      <exception cref="T:System.ObjectDisposedException">At least one of the <see cref="T:System.Collections.Concurrent.BlockingCollection{T}" /> instances or the <see cref="T:System.Threading.CancellationTokenSource" /> that created <paramref name="cancellationToken" /> has been disposed.</exception>
      <exception cref="T:System.ArgumentNullException">The <paramref name="collections" /> argument is null.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="timeout" /> is a negative number other than -1 milliseconds, which represents an infinite time-out -or- timeout is greater than <see cref="F:System.Int32.MaxValue" />.-or-The count of <paramref name="collections" /> is greater than the maximum size of 62 for STA and 63 for MTA.</exception>
      <exception cref="T:System.ArgumentException">The <paramref name="collections" /> argument is a 0-length array or contains a null element, or at least one of collections has been marked as complete for adding.</exception>
      <exception cref="T:System.InvalidOperationException">At least one underlying collection didn't accept the item.</exception>
    </member>
    <member name="M:System.Collections.Concurrent.BlockingCollection`1.TryTake(`0@)">
      <summary>Attempts to remove an item from the <see cref="T:System.Collections.Concurrent.BlockingCollection{T}" />.</summary>
      <returns>true if an item could be removed.</returns>
      <param name="item">The item removed from the collection.</param>
      <exception cref="T:System.ObjectDisposedException">The <see cref="T:System.Collections.Concurrent.BlockingCollection{T}" /> has been disposed.</exception>
      <exception cref="T:System.InvalidOperationException">The underlying collection was modified outside of this <see cref="T:System.Collections.Concurrent.BlockingCollection{T}" /> instance.</exception>
    </member>
    <member name="M:System.Collections.Concurrent.BlockingCollection`1.TryTake(`0@,System.Int32)">
      <summary>Attempts to remove an item from the <see cref="T:System.Collections.Concurrent.BlockingCollection{T}" /> in the specified time period.</summary>
      <returns>true if an item could be removed from the collection within the specified  time; otherwise, false.</returns>
      <param name="item">The item removed from the collection.</param>
      <param name="millisecondsTimeout">The number of milliseconds to wait, or <see cref="F:System.Threading.Timeout.Infinite" /> (-1) to wait indefinitely.</param>
      <exception cref="T:System.ObjectDisposedException">The <see cref="T:System.Collections.Concurrent.BlockingCollection{T}" /> has been disposed.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="millisecondsTimeout" /> is a negative number other than -1, which represents an infinite time-out.</exception>
      <exception cref="T:System.InvalidOperationException">The underlying collection was modified outside of this <see cref="T:System.Collections.Concurrent.BlockingCollection{T}" /> instance.</exception>
    </member>
    <member name="M:System.Collections.Concurrent.BlockingCollection`1.TryTake(`0@,System.Int32,System.Threading.CancellationToken)">
      <summary>Attempts to remove an item from the <see cref="T:System.Collections.Concurrent.BlockingCollection{T}" /> in the specified time period while observing a cancellation token.</summary>
      <returns>true if an item could be removed from the collection within the specified  time; otherwise, false.</returns>
      <param name="item">The item removed from the collection.</param>
      <param name="millisecondsTimeout">The number of milliseconds to wait, or <see cref="F:System.Threading.Timeout.Infinite" /> (-1) to wait indefinitely.</param>
      <param name="cancellationToken">A cancellation token to observe.</param>
      <exception cref="T:System.OperationCanceledException">If the <see cref="T:System.Threading.CancellationToken" /> is canceled.</exception>
      <exception cref="T:System.ObjectDisposedException">The <see cref="T:System.Collections.Concurrent.BlockingCollection{T}" /> has been disposed or the underlying <see cref="T:System.Threading.CancellationTokenSource" /> has been disposed.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="millisecondsTimeout" /> is a negative number other than -1, which represents an infinite time-out.</exception>
      <exception cref="T:System.InvalidOperationException">The underlying collection was modified outside of this <see cref="T:System.Collections.Concurrent.BlockingCollection{T}" /> instance.</exception>
    </member>
    <member name="M:System.Collections.Concurrent.BlockingCollection`1.TryTake(`0@,System.TimeSpan)">
      <summary>Attempts to remove an item from the <see cref="T:System.Collections.Concurrent.BlockingCollection{T}" /> in the specified time period.</summary>
      <returns>true if an item could be removed from the collection within the specified  time; otherwise, false.</returns>
      <param name="item">The item removed from the collection.</param>
      <param name="timeout">A <see cref="T:System.TimeSpan" /> that represents the number of milliseconds to wait, or a <see cref="T:System.TimeSpan" /> that represents -1 milliseconds to wait indefinitely. </param>
      <exception cref="T:System.ObjectDisposedException">The <see cref="T:System.Collections.Concurrent.BlockingCollection{T}" /> has been disposed.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="timeout" /> is a negative number other than -1 milliseconds, which represents an infinite time-out -or- timeout is greater than <see cref="F:System.Int32.MaxValue" />.</exception>
      <exception cref="T:System.InvalidOperationException">The underlying collection was modified outside of this <see cref="T:System.Collections.Concurrent.BlockingCollection{T}" /> instance.</exception>
    </member>
    <member name="M:System.Collections.Concurrent.BlockingCollection`1.TryTakeFromAny(System.Collections.Concurrent.BlockingCollection{`0}[],`0@)">
      <summary>Attempts to remove an item from any one of the specified <see cref="T:System.Collections.Concurrent.BlockingCollection{T}" /> instances.</summary>
      <returns>The index of the collection in the <paramref name="collections" /> array from which the item was removed, or -1 if an item could not be removed.</returns>
      <param name="collections">The array of collections.</param>
      <param name="item">The item removed from one of the collections.</param>
      <exception cref="T:System.ObjectDisposedException">At least one of the <see cref="T:System.Collections.Concurrent.BlockingCollection{T}" /> instances has been disposed.</exception>
      <exception cref="T:System.ArgumentNullException">The <paramref name="collections" /> argument is null.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">The count of <paramref name="collections" /> is greater than the maximum size of 62 for STA and 63 for MTA.</exception>
      <exception cref="T:System.ArgumentException">The <paramref name="collections" /> argument is a 0-length array or contains a null element.</exception>
      <exception cref="T:System.InvalidOperationException">At least one of the underlying collections was modified outside of its <see cref="T:System.Collections.Concurrent.BlockingCollection{T}" /> instance.</exception>
    </member>
    <member name="M:System.Collections.Concurrent.BlockingCollection`1.TryTakeFromAny(System.Collections.Concurrent.BlockingCollection{`0}[],`0@,System.Int32)">
      <summary>Attempts to remove an item from any one of the specified <see cref="T:System.Collections.Concurrent.BlockingCollection{T}" /> instances.</summary>
      <returns>The index of the collection in the <paramref name="collections" /> array from which the item was removed, or -1 if an item could not be removed.</returns>
      <param name="collections">The array of collections.</param>
      <param name="item">The item removed from one of the collections.</param>
      <param name="millisecondsTimeout">The number of milliseconds to wait, or <see cref="F:System.Threading.Timeout.Infinite" /> (-1) to wait indefinitely.</param>
      <exception cref="T:System.ObjectDisposedException">At least one of the <see cref="T:System.Collections.Concurrent.BlockingCollection{T}" /> instances has been disposed.</exception>
      <exception cref="T:System.ArgumentNullException">The <paramref name="collections" /> argument is null.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="millisecondsTimeout" /> is a negative number other than -1, which represents an infinite time-out.-or-The count of <paramref name="collections" /> is greater than the maximum size of 62 for STA and 63 for MTA.</exception>
      <exception cref="T:System.ArgumentException">The <paramref name="collections" /> argument is a 0-length array or contains a null element.</exception>
      <exception cref="T:System.InvalidOperationException">At least one of the underlying collections was modified outside of its <see cref="T:System.Collections.Concurrent.BlockingCollection{T}" /> instance.</exception>
    </member>
    <member name="M:System.Collections.Concurrent.BlockingCollection`1.TryTakeFromAny(System.Collections.Concurrent.BlockingCollection{`0}[],`0@,System.Int32,System.Threading.CancellationToken)">
      <summary>Attempts to remove an item from any one of the specified <see cref="T:System.Collections.Concurrent.BlockingCollection{T}" /> instances.</summary>
      <returns>The index of the collection in the <paramref name="collections" /> array from which the item was removed, or -1 if an item could not be removed.</returns>
      <param name="collections">The array of collections.</param>
      <param name="item">The item removed from one of the collections.</param>
      <param name="millisecondsTimeout">The number of milliseconds to wait, or <see cref="F:System.Threading.Timeout.Infinite" /> (-1) to wait indefinitely.</param>
      <param name="cancellationToken">A cancellation token to observe.</param>
      <exception cref="T:System.OperationCanceledException">If the <see cref="T:System.Threading.CancellationToken" /> is canceled.</exception>
      <exception cref="T:System.InvalidOperationException">At least one of the underlying collections was modified outside of its <see cref="T:System.Collections.Concurrent.BlockingCollection{T}" /> instance.</exception>
      <exception cref="T:System.ArgumentNullException">The <paramref name="collections" /> argument is null.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="millisecondsTimeout" /> is a negative number other than -1, which represents an infinite time-out.-or-The count of <paramref name="collections" /> is greater than the maximum size of 62 for STA and 63 for MTA.</exception>
      <exception cref="T:System.ArgumentException">The <paramref name="collections" /> argument is a 0-length array or contains a null element.</exception>
      <exception cref="T:System.ObjectDisposedException">At least one of the <see cref="T:System.Collections.Concurrent.BlockingCollection{T}" /> instances has been disposed.</exception>
    </member>
    <member name="M:System.Collections.Concurrent.BlockingCollection`1.TryTakeFromAny(System.Collections.Concurrent.BlockingCollection{`0}[],`0@,System.TimeSpan)">
      <summary>Attempts to remove an item from any one of the specified <see cref="T:System.Collections.Concurrent.BlockingCollection{T}" /> instances.</summary>
      <returns>The index of the collection in the <paramref name="collections" /> array from which the item was removed, or -1 if an item could not be removed.</returns>
      <param name="collections">The array of collections.</param>
      <param name="item">The item removed from one of the collections.</param>
      <param name="timeout">A <see cref="T:System.TimeSpan" /> that represents the number of milliseconds to wait, or a <see cref="T:System.TimeSpan" /> that represents -1 milliseconds to wait indefinitely.</param>
      <exception cref="T:System.ObjectDisposedException">At least one of the <see cref="T:System.Collections.Concurrent.BlockingCollection{T}" /> instances has been disposed.</exception>
      <exception cref="T:System.ArgumentNullException">The <paramref name="collections" /> argument is null.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="timeout" /> is a negative number other than -1 milliseconds, which represents an infinite time-out -or- timeout is greater than <see cref="F:System.Int32.MaxValue" />.-or-The count of <paramref name="collections" /> is greater than the maximum size of 62 for STA and 63 for MTA.</exception>
      <exception cref="T:System.ArgumentException">The <paramref name="collections" /> argument is a 0-length array or contains a null element.</exception>
      <exception cref="T:System.InvalidOperationException">At least one of the underlying collections was modified outside of its <see cref="T:System.Collections.Concurrent.BlockingCollection{T}" /> instance.</exception>
    </member>
    <member name="T:System.Collections.Concurrent.ConcurrentBag`1">
      <summary>Represents a thread-safe, unordered collection of objects.</summary>
      <typeparam name="T">The type of the elements to be stored in the collection.</typeparam>
    </member>
    <member name="M:System.Collections.Concurrent.ConcurrentBag`1.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Collections.Concurrent.ConcurrentBag`1" /> class.</summary>
    </member>
    <member name="M:System.Collections.Concurrent.ConcurrentBag`1.#ctor(System.Collections.Generic.IEnumerable{`0})">
      <summary>Initializes a new instance of the <see cref="T:System.Collections.Concurrent.ConcurrentBag`1" /> class that contains elements copied from the specified collection.</summary>
      <param name="collection">The collection whose elements are copied to the new <see cref="T:System.Collections.Concurrent.ConcurrentBag`1" />.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="collection" /> is a null reference (Nothing in Visual Basic).</exception>
    </member>
    <member name="M:System.Collections.Concurrent.ConcurrentBag`1.Add(`0)">
      <summary>Adds an object to the <see cref="T:System.Collections.Concurrent.ConcurrentBag`1" />.</summary>
      <param name="item">The object to be added to the <see cref="T:System.Collections.Concurrent.ConcurrentBag`1" />. The value can be a null reference (Nothing in Visual Basic) for reference types.</param>
    </member>
    <member name="M:System.Collections.Concurrent.ConcurrentBag`1.CopyTo(`0[],System.Int32)">
      <summary>Copies the <see cref="T:System.Collections.Concurrent.ConcurrentBag`1" /> elements to an existing one-dimensional <see cref="T:System.Array" />, starting at the specified array index.</summary>
      <param name="array">The one-dimensional <see cref="T:System.Array" /> that is the destination of the elements copied from the <see cref="T:System.Collections.Concurrent.ConcurrentBag`1" />. The <see cref="T:System.Array" /> must have zero-based indexing.</param>
      <param name="index">The zero-based index in <paramref name="array" /> at which copying begins.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="array" /> is a null reference (Nothing in Visual Basic).</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> is less than zero.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="index" /> is equal to or greater than the length of the <paramref name="array" /> -or- the number of elements in the source <see cref="T:System.Collections.Concurrent.ConcurrentBag`1" /> is greater than the available space from <paramref name="index" /> to the end of the destination <paramref name="array" />.</exception>
    </member>
    <member name="P:System.Collections.Concurrent.ConcurrentBag`1.Count">
      <summary>Gets the number of elements contained in the <see cref="T:System.Collections.Concurrent.ConcurrentBag`1" />.</summary>
      <returns>The number of elements contained in the <see cref="T:System.Collections.Concurrent.ConcurrentBag`1" />.</returns>
    </member>
    <member name="M:System.Collections.Concurrent.ConcurrentBag`1.GetEnumerator">
      <summary>Returns an enumerator that iterates through the <see cref="T:System.Collections.Concurrent.ConcurrentBag`1" />.</summary>
      <returns>An enumerator for the contents of the <see cref="T:System.Collections.Concurrent.ConcurrentBag`1" />.</returns>
    </member>
    <member name="P:System.Collections.Concurrent.ConcurrentBag`1.IsEmpty">
      <summary>Gets a value that indicates whether the <see cref="T:System.Collections.Concurrent.ConcurrentBag`1" /> is empty.</summary>
      <returns>true if the <see cref="T:System.Collections.Concurrent.ConcurrentBag`1" /> is empty; otherwise, false.</returns>
    </member>
    <member name="M:System.Collections.Concurrent.ConcurrentBag`1.System#Collections#Concurrent#IProducerConsumerCollection{T}#TryAdd(`0)">
      <summary>Attempts to add an object to the <see cref="T:System.Collections.Concurrent.ConcurrentBag`1" />.</summary>
      <returns>Always returns true</returns>
      <param name="item">The object to be added to the <see cref="T:System.Collections.Concurrent.ConcurrentBag`1" />. The value can be a null reference (Nothing in Visual Basic) for reference types.</param>
    </member>
    <member name="M:System.Collections.Concurrent.ConcurrentBag`1.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
      <summary>Copies the elements of the <see cref="T:System.Collections.ICollection" /> to an <see cref="T:System.Array" />, starting at a particular <see cref="T:System.Array" /> index.</summary>
      <param name="array">The one-dimensional <see cref="T:System.Array" /> that is the destination of the elements copied from the <see cref="T:System.Collections.Concurrent.ConcurrentBag`1" />. The <see cref="T:System.Array" /> must have zero-based indexing.</param>
      <param name="index">The zero-based index in <paramref name="array" /> at which copying begins.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="array" /> is a null reference (Nothing in Visual Basic).</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> is less than zero.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="array" /> is multidimensional. -or- <paramref name="array" /> does not have zero-based indexing. -or- <paramref name="index" /> is equal to or greater than the length of the <paramref name="array" /> -or- The number of elements in the source <see cref="T:System.Collections.ICollection" /> is greater than the available space from <paramref name="index" /> to the end of the destination <paramref name="array" />. -or- The type of the source <see cref="T:System.Collections.ICollection" /> cannot be cast automatically to the type of the destination <paramref name="array" />.</exception>
    </member>
    <member name="P:System.Collections.Concurrent.ConcurrentBag`1.System#Collections#ICollection#IsSynchronized">
      <summary>Gets a value indicating whether access to the <see cref="T:System.Collections.ICollection" /> is synchronized with the SyncRoot.</summary>
      <returns>true if access to the <see cref="T:System.Collections.ICollection" /> is synchronized with the SyncRoot; otherwise, false. For <see cref="T:System.Collections.Concurrent.ConcurrentBag`1" />, this property always returns false.</returns>
    </member>
    <member name="P:System.Collections.Concurrent.ConcurrentBag`1.System#Collections#ICollection#SyncRoot">
      <summary>Gets an object that can be used to synchronize access to the <see cref="T:System.Collections.ICollection" />. This property is not supported.</summary>
      <returns>Returns null  (Nothing in Visual Basic).</returns>
      <exception cref="T:System.NotSupportedException">The SyncRoot property is not supported.</exception>
    </member>
    <member name="M:System.Collections.Concurrent.ConcurrentBag`1.System#Collections#IEnumerable#GetEnumerator">
      <summary>Returns an enumerator that iterates through the <see cref="T:System.Collections.Concurrent.ConcurrentBag`1" />.</summary>
      <returns>An enumerator for the contents of the <see cref="T:System.Collections.Concurrent.ConcurrentBag`1" />.</returns>
    </member>
    <member name="M:System.Collections.Concurrent.ConcurrentBag`1.ToArray">
      <summary>Copies the <see cref="T:System.Collections.Concurrent.ConcurrentBag`1" /> elements to a new array.</summary>
      <returns>A new array containing a snapshot of elements copied from the <see cref="T:System.Collections.Concurrent.ConcurrentBag`1" />.</returns>
    </member>
    <member name="M:System.Collections.Concurrent.ConcurrentBag`1.TryPeek(`0@)">
      <summary>Attempts to return an object from the <see cref="T:System.Collections.Concurrent.ConcurrentBag`1" /> without removing it.</summary>
      <returns>true if and object was returned successfully; otherwise, false.</returns>
      <param name="result">When this method returns, <paramref name="result" /> contains an object from the <see cref="T:System.Collections.Concurrent.ConcurrentBag`1" /> or the default value of  if the operation failed.</param>
    </member>
    <member name="M:System.Collections.Concurrent.ConcurrentBag`1.TryTake(`0@)">
      <summary>Attempts to remove and return an object from the <see cref="T:System.Collections.Concurrent.ConcurrentBag`1" />.</summary>
      <returns>true if an object was removed successfully; otherwise, false.</returns>
      <param name="result">When this method returns, <paramref name="result" /> contains the object removed from the <see cref="T:System.Collections.Concurrent.ConcurrentBag`1" /> or the default value of  if the operation failed.</param>
    </member>
    <member name="T:System.Collections.Generic.ISet`1">
      <summary>Provides the base interface for the abstraction of sets.</summary>
      <typeparam name="T">The type of elements in the set.</typeparam>
    </member>
    <member name="M:System.Collections.Generic.ISet`1.Add(`0)">
      <summary>Adds an element to the current set and returns a value to indicate if the element was successfully added. </summary>
      <returns>true if the element is added to the set; false if the element is already in the set.</returns>
      <param name="item">The element to add to the set.</param>
    </member>
    <member name="M:System.Collections.Generic.ISet`1.ExceptWith(System.Collections.Generic.IEnumerable{`0})">
      <summary>Removes all elements in the specified collection from the current set.</summary>
      <param name="other">The collection of items to remove from the set.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="other" /> is null.</exception>
    </member>
    <member name="M:System.Collections.Generic.ISet`1.IntersectWith(System.Collections.Generic.IEnumerable{`0})">
      <summary>Modifies the current set so that it contains only elements that are also in a specified collection.</summary>
      <param name="other">The collection to compare to the current set.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="other" /> is null.</exception>
    </member>
    <member name="M:System.Collections.Generic.ISet`1.IsProperSubsetOf(System.Collections.Generic.IEnumerable{`0})">
      <summary>Determines whether the current set is a property (strict) subset of a specified collection.</summary>
      <returns>true if the current set is a correct subset of <paramref name="other" />; otherwise, false.</returns>
      <param name="other">The collection to compare to the current set.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="other" /> is null.</exception>
    </member>
    <member name="M:System.Collections.Generic.ISet`1.IsProperSupersetOf(System.Collections.Generic.IEnumerable{`0})">
      <summary>Determines whether the current set is a correct superset of a specified collection.</summary>
      <returns>true if the <see cref="T:System.Collections.Generic.ISet`1" /> object is a correct superset of <paramref name="other" />; otherwise, false.</returns>
      <param name="other">The collection to compare to the current set. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="other" /> is null.</exception>
    </member>
    <member name="M:System.Collections.Generic.ISet`1.IsSubsetOf(System.Collections.Generic.IEnumerable{`0})">
      <summary>Determines whether a set is a subset of a specified collection.</summary>
      <returns>true if the current set is a subset of <paramref name="other" />; otherwise, false.</returns>
      <param name="other">The collection to compare to the current set.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="other" /> is null.</exception>
    </member>
    <member name="M:System.Collections.Generic.ISet`1.IsSupersetOf(System.Collections.Generic.IEnumerable{`0})">
      <summary>Determines whether the current set is a superset of a specified collection.</summary>
      <returns>true if the current set is a superset of <paramref name="other" />; otherwise, false.</returns>
      <param name="other">The collection to compare to the current set.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="other" /> is null.</exception>
    </member>
    <member name="M:System.Collections.Generic.ISet`1.Overlaps(System.Collections.Generic.IEnumerable{`0})">
      <summary>Determines whether the current set overlaps with the specified collection.</summary>
      <returns>true if the current set and <paramref name="other" /> share at least one common element; otherwise, false.</returns>
      <param name="other">The collection to compare to the current set.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="other" /> is null.</exception>
    </member>
    <member name="M:System.Collections.Generic.ISet`1.SetEquals(System.Collections.Generic.IEnumerable{`0})">
      <summary>Determines whether the current set and the specified collection contain the same elements.</summary>
      <returns>true if the current set is equal to <paramref name="other" />; otherwise, false.</returns>
      <param name="other">The collection to compare to the current set.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="other" /> is null.</exception>
    </member>
    <member name="M:System.Collections.Generic.ISet`1.SymmetricExceptWith(System.Collections.Generic.IEnumerable{`0})">
      <summary>Modifies the current set so that it contains only elements that are present either in the current set or in the specified collection, but not both. </summary>
      <param name="other">The collection to compare to the current set.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="other" /> is null.</exception>
    </member>
    <member name="M:System.Collections.Generic.ISet`1.UnionWith(System.Collections.Generic.IEnumerable{`0})">
      <summary>Modifies the current set so that it contains all elements that are present in both the current set and in the specified collection.</summary>
      <param name="other">The collection to compare to the current set.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="other" /> is null.</exception>
    </member>
    <member name="T:System.Collections.Generic.LinkedList`1">
      <summary>Represents a doubly linked list.</summary>
      <typeparam name="T">Specifies the element type of the linked list.</typeparam>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Collections.Generic.LinkedList`1.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Collections.Generic.LinkedList`1" /> class that is empty.</summary>
    </member>
    <member name="M:System.Collections.Generic.LinkedList`1.#ctor(System.Collections.Generic.IEnumerable{`0})">
      <summary>Initializes a new instance of the <see cref="T:System.Collections.Generic.LinkedList`1" /> class that contains elements copied from the specified <see cref="T:System.Collections.IEnumerable" /> and has sufficient capacity to accommodate the number of elements copied. </summary>
      <param name="collection">The <see cref="T:System.Collections.IEnumerable" /> whose elements are copied to the new <see cref="T:System.Collections.Generic.LinkedList`1" />.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="collection" /> is null.</exception>
    </member>
    <member name="M:System.Collections.Generic.LinkedList`1.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Initializes a new instance of the <see cref="T:System.Collections.Generic.LinkedList`1" /> class that is serializable with the specified <see cref="T:System.Runtime.Serialization.SerializationInfo" /> and <see cref="T:System.Runtime.Serialization.StreamingContext" />.</summary>
      <param name="info">A <see cref="T:System.Runtime.Serialization.SerializationInfo" /> object containing the information required to serialize the <see cref="T:System.Collections.Generic.LinkedList`1" />.</param>
      <param name="context">A <see cref="T:System.Runtime.Serialization.StreamingContext" /> object containing the source and destination of the serialized stream associated with the <see cref="T:System.Collections.Generic.LinkedList`1" />.</param>
    </member>
    <member name="M:System.Collections.Generic.LinkedList`1.AddAfter(System.Collections.Generic.LinkedListNode{`0},System.Collections.Generic.LinkedListNode{`0})">
      <summary>Adds the specified new node after the specified existing node in the <see cref="T:System.Collections.Generic.LinkedList`1" />.</summary>
      <param name="node">The <see cref="T:System.Collections.Generic.LinkedListNode`1" /> after which to insert <paramref name="newNode" />.</param>
      <param name="newNode">The new <see cref="T:System.Collections.Generic.LinkedListNode`1" /> to add to the <see cref="T:System.Collections.Generic.LinkedList`1" />.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="node" /> is null.-or-<paramref name="newNode" /> is null.</exception>
      <exception cref="T:System.InvalidOperationException">
        <paramref name="node" /> is not in the current <see cref="T:System.Collections.Generic.LinkedList`1" />.-or-<paramref name="newNode" /> belongs to another <see cref="T:System.Collections.Generic.LinkedList`1" />.</exception>
    </member>
    <member name="M:System.Collections.Generic.LinkedList`1.AddAfter(System.Collections.Generic.LinkedListNode{`0},`0)">
      <summary>Adds a new node containing the specified value after the specified existing node in the <see cref="T:System.Collections.Generic.LinkedList`1" />.</summary>
      <returns>The new <see cref="T:System.Collections.Generic.LinkedListNode`1" /> containing <paramref name="value" />.</returns>
      <param name="node">The <see cref="T:System.Collections.Generic.LinkedListNode`1" /> after which to insert a new <see cref="T:System.Collections.Generic.LinkedListNode`1" /> containing <paramref name="value" />.</param>
      <param name="value">The value to add to the <see cref="T:System.Collections.Generic.LinkedList`1" />.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="node" /> is null.</exception>
      <exception cref="T:System.InvalidOperationException">
        <paramref name="node" /> is not in the current <see cref="T:System.Collections.Generic.LinkedList`1" />.</exception>
    </member>
    <member name="M:System.Collections.Generic.LinkedList`1.AddBefore(System.Collections.Generic.LinkedListNode{`0},System.Collections.Generic.LinkedListNode{`0})">
      <summary>Adds the specified new node before the specified existing node in the <see cref="T:System.Collections.Generic.LinkedList`1" />.</summary>
      <param name="node">The <see cref="T:System.Collections.Generic.LinkedListNode`1" /> before which to insert <paramref name="newNode" />.</param>
      <param name="newNode">The new <see cref="T:System.Collections.Generic.LinkedListNode`1" /> to add to the <see cref="T:System.Collections.Generic.LinkedList`1" />.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="node" /> is null.-or-<paramref name="newNode" /> is null.</exception>
      <exception cref="T:System.InvalidOperationException">
        <paramref name="node" /> is not in the current <see cref="T:System.Collections.Generic.LinkedList`1" />.-or-<paramref name="newNode" /> belongs to another <see cref="T:System.Collections.Generic.LinkedList`1" />.</exception>
    </member>
    <member name="M:System.Collections.Generic.LinkedList`1.AddBefore(System.Collections.Generic.LinkedListNode{`0},`0)">
      <summary>Adds a new node containing the specified value before the specified existing node in the <see cref="T:System.Collections.Generic.LinkedList`1" />.</summary>
      <returns>The new <see cref="T:System.Collections.Generic.LinkedListNode`1" /> containing <paramref name="value" />.</returns>
      <param name="node">The <see cref="T:System.Collections.Generic.LinkedListNode`1" /> before which to insert a new <see cref="T:System.Collections.Generic.LinkedListNode`1" /> containing <paramref name="value" />.</param>
      <param name="value">The value to add to the <see cref="T:System.Collections.Generic.LinkedList`1" />.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="node" /> is null.</exception>
      <exception cref="T:System.InvalidOperationException">
        <paramref name="node" /> is not in the current <see cref="T:System.Collections.Generic.LinkedList`1" />.</exception>
    </member>
    <member name="M:System.Collections.Generic.LinkedList`1.AddFirst(System.Collections.Generic.LinkedListNode{`0})">
      <summary>Adds the specified new node at the start of the <see cref="T:System.Collections.Generic.LinkedList`1" />.</summary>
      <param name="node">The new <see cref="T:System.Collections.Generic.LinkedListNode`1" /> to add at the start of the <see cref="T:System.Collections.Generic.LinkedList`1" />.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="node" /> is null.</exception>
      <exception cref="T:System.InvalidOperationException">
        <paramref name="node" /> belongs to another <see cref="T:System.Collections.Generic.LinkedList`1" />.</exception>
    </member>
    <member name="M:System.Collections.Generic.LinkedList`1.AddFirst(`0)">
      <summary>Adds a new node containing the specified value at the start of the <see cref="T:System.Collections.Generic.LinkedList`1" />.</summary>
      <returns>The new <see cref="T:System.Collections.Generic.LinkedListNode`1" /> containing <paramref name="value" />.</returns>
      <param name="value">The value to add at the start of the <see cref="T:System.Collections.Generic.LinkedList`1" />.</param>
    </member>
    <member name="M:System.Collections.Generic.LinkedList`1.AddLast(System.Collections.Generic.LinkedListNode{`0})">
      <summary>Adds the specified new node at the end of the <see cref="T:System.Collections.Generic.LinkedList`1" />.</summary>
      <param name="node">The new <see cref="T:System.Collections.Generic.LinkedListNode`1" /> to add at the end of the <see cref="T:System.Collections.Generic.LinkedList`1" />.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="node" /> is null.</exception>
      <exception cref="T:System.InvalidOperationException">
        <paramref name="node" /> belongs to another <see cref="T:System.Collections.Generic.LinkedList`1" />.</exception>
    </member>
    <member name="M:System.Collections.Generic.LinkedList`1.AddLast(`0)">
      <summary>Adds a new node containing the specified value at the end of the <see cref="T:System.Collections.Generic.LinkedList`1" />.</summary>
      <returns>The new <see cref="T:System.Collections.Generic.LinkedListNode`1" /> containing <paramref name="value" />.</returns>
      <param name="value">The value to add at the end of the <see cref="T:System.Collections.Generic.LinkedList`1" />.</param>
    </member>
    <member name="M:System.Collections.Generic.LinkedList`1.Clear">
      <summary>Removes all nodes from the <see cref="T:System.Collections.Generic.LinkedList`1" />.</summary>
    </member>
    <member name="M:System.Collections.Generic.LinkedList`1.Contains(`0)">
      <summary>Determines whether a value is in the <see cref="T:System.Collections.Generic.LinkedList`1" />.</summary>
      <returns>true if <paramref name="value" /> is found in the <see cref="T:System.Collections.Generic.LinkedList`1" />; otherwise, false.</returns>
      <param name="value">The value to locate in the <see cref="T:System.Collections.Generic.LinkedList`1" />. The value can be null for reference types.</param>
    </member>
    <member name="M:System.Collections.Generic.LinkedList`1.CopyTo(`0[],System.Int32)">
      <summary>Copies the entire <see cref="T:System.Collections.Generic.LinkedList`1" /> to a compatible one-dimensional <see cref="T:System.Array" />, starting at the specified index of the target array.</summary>
      <param name="array">The one-dimensional <see cref="T:System.Array" /> that is the destination of the elements copied from <see cref="T:System.Collections.Generic.LinkedList`1" />. The <see cref="T:System.Array" /> must have zero-based indexing.</param>
      <param name="index">The zero-based index in <paramref name="array" /> at which copying begins.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="array" /> is null.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> is less than zero.</exception>
      <exception cref="T:System.ArgumentException">The number of elements in the source <see cref="T:System.Collections.Generic.LinkedList`1" /> is greater than the available space from <paramref name="index" /> to the end of the destination <paramref name="array" />.</exception>
    </member>
    <member name="P:System.Collections.Generic.LinkedList`1.Count">
      <summary>Gets the number of nodes actually contained in the <see cref="T:System.Collections.Generic.LinkedList`1" />.</summary>
      <returns>The number of nodes actually contained in the <see cref="T:System.Collections.Generic.LinkedList`1" />.</returns>
    </member>
    <member name="M:System.Collections.Generic.LinkedList`1.Find(`0)">
      <summary>Finds the first node that contains the specified value.</summary>
      <returns>The first <see cref="T:System.Collections.Generic.LinkedListNode`1" /> that contains the specified value, if found; otherwise, null.</returns>
      <param name="value">The value to locate in the <see cref="T:System.Collections.Generic.LinkedList`1" />.</param>
    </member>
    <member name="M:System.Collections.Generic.LinkedList`1.FindLast(`0)">
      <summary>Finds the last node that contains the specified value.</summary>
      <returns>The last <see cref="T:System.Collections.Generic.LinkedListNode`1" /> that contains the specified value, if found; otherwise, null.</returns>
      <param name="value">The value to locate in the <see cref="T:System.Collections.Generic.LinkedList`1" />.</param>
    </member>
    <member name="P:System.Collections.Generic.LinkedList`1.First">
      <summary>Gets the first node of the <see cref="T:System.Collections.Generic.LinkedList`1" />.</summary>
      <returns>The first <see cref="T:System.Collections.Generic.LinkedListNode`1" /> of the <see cref="T:System.Collections.Generic.LinkedList`1" />.</returns>
    </member>
    <member name="M:System.Collections.Generic.LinkedList`1.GetEnumerator">
      <summary>Returns an enumerator that iterates through the <see cref="T:System.Collections.Generic.LinkedList`1" />.</summary>
      <returns>An <see cref="T:System.Collections.Generic.LinkedList`1.Enumerator" /> for the <see cref="T:System.Collections.Generic.LinkedList`1" />.</returns>
    </member>
    <member name="M:System.Collections.Generic.LinkedList`1.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Implements the <see cref="T:System.Runtime.Serialization.ISerializable" /> interface and returns the data needed to serialize the <see cref="T:System.Collections.Generic.LinkedList`1" /> instance.</summary>
      <param name="info">A <see cref="T:System.Runtime.Serialization.SerializationInfo" /> object that contains the information required to serialize the <see cref="T:System.Collections.Generic.LinkedList`1" /> instance.</param>
      <param name="context">A <see cref="T:System.Runtime.Serialization.StreamingContext" /> object that contains the source and destination of the serialized stream associated with the <see cref="T:System.Collections.Generic.LinkedList`1" /> instance.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="info" /> is null.</exception>
    </member>
    <member name="P:System.Collections.Generic.LinkedList`1.Last">
      <summary>Gets the last node of the <see cref="T:System.Collections.Generic.LinkedList`1" />.</summary>
      <returns>The last <see cref="T:System.Collections.Generic.LinkedListNode`1" /> of the <see cref="T:System.Collections.Generic.LinkedList`1" />.</returns>
    </member>
    <member name="M:System.Collections.Generic.LinkedList`1.OnDeserialization(System.Object)">
      <summary>Implements the <see cref="T:System.Runtime.Serialization.ISerializable" /> interface and raises the deserialization event when the deserialization is complete.</summary>
      <param name="sender">The source of the deserialization event.</param>
      <exception cref="T:System.Runtime.Serialization.SerializationException">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> object associated with the current <see cref="T:System.Collections.Generic.LinkedList`1" /> instance is invalid.</exception>
    </member>
    <member name="M:System.Collections.Generic.LinkedList`1.Remove(System.Collections.Generic.LinkedListNode{`0})">
      <summary>Removes the specified node from the <see cref="T:System.Collections.Generic.LinkedList`1" />.</summary>
      <param name="node">The <see cref="T:System.Collections.Generic.LinkedListNode`1" /> to remove from the <see cref="T:System.Collections.Generic.LinkedList`1" />.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="node" /> is null.</exception>
      <exception cref="T:System.InvalidOperationException">
        <paramref name="node" /> is not in the current <see cref="T:System.Collections.Generic.LinkedList`1" />.</exception>
    </member>
    <member name="M:System.Collections.Generic.LinkedList`1.Remove(`0)">
      <summary>Removes the first occurrence of the specified value from the <see cref="T:System.Collections.Generic.LinkedList`1" />.</summary>
      <returns>true if the element containing <paramref name="value" /> is successfully removed; otherwise, false.  This method also returns false if <paramref name="value" /> was not found in the original <see cref="T:System.Collections.Generic.LinkedList`1" />.</returns>
      <param name="value">The value to remove from the <see cref="T:System.Collections.Generic.LinkedList`1" />.</param>
    </member>
    <member name="M:System.Collections.Generic.LinkedList`1.RemoveFirst">
      <summary>Removes the node at the start of the <see cref="T:System.Collections.Generic.LinkedList`1" />.</summary>
      <exception cref="T:System.InvalidOperationException">The <see cref="T:System.Collections.Generic.LinkedList`1" /> is empty.</exception>
    </member>
    <member name="M:System.Collections.Generic.LinkedList`1.RemoveLast">
      <summary>Removes the node at the end of the <see cref="T:System.Collections.Generic.LinkedList`1" />.</summary>
      <exception cref="T:System.InvalidOperationException">The <see cref="T:System.Collections.Generic.LinkedList`1" /> is empty.</exception>
    </member>
    <member name="M:System.Collections.Generic.LinkedList`1.System#Collections#Generic#ICollection{T}#Add(`0)">
      <summary>Adds an item at the end of the <see cref="T:System.Collections.Generic.ICollection`1" />.</summary>
      <param name="value">The value to add at the end of the <see cref="T:System.Collections.Generic.ICollection`1" />.</param>
    </member>
    <member name="P:System.Collections.Generic.LinkedList`1.System#Collections#Generic#ICollection{T}#IsReadOnly">
      <summary>Gets a value indicating whether the <see cref="T:System.Collections.Generic.ICollection`1" /> is read-only.</summary>
      <returns>true if the <see cref="T:System.Collections.Generic.ICollection`1" /> is read-only; otherwise, false.  In the default implementation of <see cref="T:System.Collections.Generic.LinkedList`1" />, this property always returns false.</returns>
    </member>
    <member name="M:System.Collections.Generic.LinkedList`1.System#Collections#Generic#IEnumerable{T}#GetEnumerator">
      <summary>Returns an enumerator that iterates through a collection.</summary>
      <returns>An <see cref="T:System.Collections.Generic.IEnumerator`1" /> that can be used to iterate through the collection.</returns>
    </member>
    <member name="M:System.Collections.Generic.LinkedList`1.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
      <summary>Copies the elements of the <see cref="T:System.Collections.ICollection" /> to an <see cref="T:System.Array" />, starting at a particular <see cref="T:System.Array" /> index.</summary>
      <param name="array">The one-dimensional <see cref="T:System.Array" /> that is the destination of the elements copied from <see cref="T:System.Collections.ICollection" />. The <see cref="T:System.Array" /> must have zero-based indexing.</param>
      <param name="index">The zero-based index in <paramref name="array" /> at which copying begins.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="array" /> is null.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> is less than zero.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="array" /> is multidimensional.-or-<paramref name="array" /> does not have zero-based indexing.-or-The number of elements in the source <see cref="T:System.Collections.ICollection" /> is greater than the available space from <paramref name="index" /> to the end of the destination <paramref name="array" />.-or-The type of the source <see cref="T:System.Collections.ICollection" /> cannot be cast automatically to the type of the destination <paramref name="array" />.</exception>
    </member>
    <member name="P:System.Collections.Generic.LinkedList`1.System#Collections#ICollection#IsSynchronized">
      <summary>Gets a value indicating whether access to the <see cref="T:System.Collections.ICollection" /> is synchronized (thread safe).</summary>
      <returns>true if access to the <see cref="T:System.Collections.ICollection" /> is synchronized (thread safe); otherwise, false.  In the default implementation of <see cref="T:System.Collections.Generic.LinkedList`1" />, this property always returns false.</returns>
    </member>
    <member name="P:System.Collections.Generic.LinkedList`1.System#Collections#ICollection#SyncRoot">
      <summary>Gets an object that can be used to synchronize access to the <see cref="T:System.Collections.ICollection" />.</summary>
      <returns>An object that can be used to synchronize access to the <see cref="T:System.Collections.ICollection" />.  In the default implementation of <see cref="T:System.Collections.Generic.LinkedList`1" />, this property always returns the current instance.</returns>
    </member>
    <member name="M:System.Collections.Generic.LinkedList`1.System#Collections#IEnumerable#GetEnumerator">
      <summary>Returns an enumerator that iterates through the linked list as a collection.</summary>
      <returns>An <see cref="T:System.Collections.IEnumerator" /> that can be used to iterate through the linked list as a collection.</returns>
    </member>
    <member name="T:System.Collections.Generic.LinkedList`1.Enumerator">
      <summary>Enumerates the elements of a <see cref="T:System.Collections.Generic.LinkedList`1" />.</summary>
    </member>
    <member name="P:System.Collections.Generic.LinkedList`1.Enumerator.Current">
      <summary>Gets the element at the current position of the enumerator.</summary>
      <returns>The element in the <see cref="T:System.Collections.Generic.LinkedList`1" /> at the current position of the enumerator.</returns>
    </member>
    <member name="M:System.Collections.Generic.LinkedList`1.Enumerator.Dispose">
      <summary>Releases all resources used by the <see cref="T:System.Collections.Generic.LinkedList`1.Enumerator" />.</summary>
    </member>
    <member name="M:System.Collections.Generic.LinkedList`1.Enumerator.MoveNext">
      <summary>Advances the enumerator to the next element of the <see cref="T:System.Collections.Generic.LinkedList`1" />.</summary>
      <returns>true if the enumerator was successfully advanced to the next element; false if the enumerator has passed the end of the collection.</returns>
      <exception cref="T:System.InvalidOperationException">The collection was modified after the enumerator was created. </exception>
    </member>
    <member name="P:System.Collections.Generic.LinkedList`1.Enumerator.System#Collections#IEnumerator#Current">
      <summary>Gets the element at the current position of the enumerator.</summary>
      <returns>The element in the collection at the current position of the enumerator.</returns>
      <exception cref="T:System.InvalidOperationException">The enumerator is positioned before the first element of the collection or after the last element. </exception>
    </member>
    <member name="M:System.Collections.Generic.LinkedList`1.Enumerator.System#Collections#IEnumerator#Reset">
      <summary>Sets the enumerator to its initial position, which is before the first element in the collection. This class cannot be inherited.</summary>
      <exception cref="T:System.InvalidOperationException">The collection was modified after the enumerator was created. </exception>
    </member>
    <member name="M:System.Collections.Generic.LinkedList`1.Enumerator.System#Runtime#Serialization#IDeserializationCallback#OnDeserialization(System.Object)">
      <summary>Implements the <see cref="T:System.Runtime.Serialization.ISerializable" /> interface and raises the deserialization event when the deserialization is complete.</summary>
      <param name="sender">The source of the deserialization event.</param>
      <exception cref="T:System.Runtime.Serialization.SerializationException">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> object associated with the current <see cref="T:System.Collections.Generic.LinkedList`1" /> instance is invalid.</exception>
    </member>
    <member name="M:System.Collections.Generic.LinkedList`1.Enumerator.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Implements the <see cref="T:System.Runtime.Serialization.ISerializable" /> interface and returns the data needed to serialize the <see cref="T:System.Collections.Generic.LinkedList`1" /> instance.</summary>
      <param name="info">A <see cref="T:System.Runtime.Serialization.SerializationInfo" /> object that contains the information required to serialize the <see cref="T:System.Collections.Generic.LinkedList`1" /> instance.</param>
      <param name="context">A <see cref="T:System.Runtime.Serialization.StreamingContext" /> object that contains the source and destination of the serialized stream associated with the <see cref="T:System.Collections.Generic.LinkedList`1" /> instance.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="info" /> is null.</exception>
    </member>
    <member name="T:System.Collections.Generic.LinkedListNode`1">
      <summary>Represents a node in a <see cref="T:System.Collections.Generic.LinkedList`1" />. This class cannot be inherited.</summary>
      <typeparam name="T">Specifies the element type of the linked list.</typeparam>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Collections.Generic.LinkedListNode`1.#ctor(`0)">
      <summary>Initializes a new instance of the <see cref="T:System.Collections.Generic.LinkedListNode`1" /> class, containing the specified value.</summary>
      <param name="value">The value to contain in the <see cref="T:System.Collections.Generic.LinkedListNode`1" />.</param>
    </member>
    <member name="P:System.Collections.Generic.LinkedListNode`1.List">
      <summary>Gets the <see cref="T:System.Collections.Generic.LinkedList`1" /> that the <see cref="T:System.Collections.Generic.LinkedListNode`1" /> belongs to.</summary>
      <returns>A reference to the <see cref="T:System.Collections.Generic.LinkedList`1" /> that the <see cref="T:System.Collections.Generic.LinkedListNode`1" /> belongs to, or null if the <see cref="T:System.Collections.Generic.LinkedListNode`1" /> is not linked.</returns>
    </member>
    <member name="P:System.Collections.Generic.LinkedListNode`1.Next">
      <summary>Gets the next node in the <see cref="T:System.Collections.Generic.LinkedList`1" />.</summary>
      <returns>A reference to the next node in the <see cref="T:System.Collections.Generic.LinkedList`1" />, or null if the current node is the last element (<see cref="P:System.Collections.Generic.LinkedList`1.Last" />) of the <see cref="T:System.Collections.Generic.LinkedList`1" />.</returns>
    </member>
    <member name="P:System.Collections.Generic.LinkedListNode`1.Previous">
      <summary>Gets the previous node in the <see cref="T:System.Collections.Generic.LinkedList`1" />.</summary>
      <returns>A reference to the previous node in the <see cref="T:System.Collections.Generic.LinkedList`1" />, or null if the current node is the first element (<see cref="P:System.Collections.Generic.LinkedList`1.First" />) of the <see cref="T:System.Collections.Generic.LinkedList`1" />.</returns>
    </member>
    <member name="P:System.Collections.Generic.LinkedListNode`1.Value">
      <summary>Gets the value contained in the node.</summary>
      <returns>The value contained in the node.</returns>
    </member>
    <member name="T:System.Collections.Generic.Queue`1">
      <summary>Represents a first-in, first-out collection of objects.</summary>
      <typeparam name="T">Specifies the type of elements in the queue.</typeparam>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Collections.Generic.Queue`1.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Collections.Generic.Queue`1" /> class that is empty and has the default initial capacity.</summary>
    </member>
    <member name="M:System.Collections.Generic.Queue`1.#ctor(System.Collections.Generic.IEnumerable{`0})">
      <summary>Initializes a new instance of the <see cref="T:System.Collections.Generic.Queue`1" /> class that contains elements copied from the specified collection and has sufficient capacity to accommodate the number of elements copied.</summary>
      <param name="collection">The collection whose elements are copied to the new <see cref="T:System.Collections.Generic.Queue`1" />.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="collection" /> is null.</exception>
    </member>
    <member name="M:System.Collections.Generic.Queue`1.#ctor(System.Int32)">
      <summary>Initializes a new instance of the <see cref="T:System.Collections.Generic.Queue`1" /> class that is empty and has the specified initial capacity.</summary>
      <param name="capacity">The initial number of elements that the <see cref="T:System.Collections.Generic.Queue`1" /> can contain.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="capacity" /> is less than zero.</exception>
    </member>
    <member name="M:System.Collections.Generic.Queue`1.Clear">
      <summary>Removes all objects from the <see cref="T:System.Collections.Generic.Queue`1" />.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Collections.Generic.Queue`1.Contains(`0)">
      <summary>Determines whether an element is in the <see cref="T:System.Collections.Generic.Queue`1" />.</summary>
      <returns>true if <paramref name="item" /> is found in the <see cref="T:System.Collections.Generic.Queue`1" />; otherwise, false.</returns>
      <param name="item">The object to locate in the <see cref="T:System.Collections.Generic.Queue`1" />. The value can be null for reference types.</param>
    </member>
    <member name="M:System.Collections.Generic.Queue`1.CopyTo(`0[],System.Int32)">
      <summary>Copies the <see cref="T:System.Collections.Generic.Queue`1" /> elements to an existing one-dimensional <see cref="T:System.Array" />, starting at the specified array index.</summary>
      <param name="array">The one-dimensional <see cref="T:System.Array" /> that is the destination of the elements copied from <see cref="T:System.Collections.Generic.Queue`1" />. The <see cref="T:System.Array" /> must have zero-based indexing.</param>
      <param name="arrayIndex">The zero-based index in <paramref name="array" /> at which copying begins.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="array" /> is null.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="arrayIndex" /> is less than zero.</exception>
      <exception cref="T:System.ArgumentException">The number of elements in the source <see cref="T:System.Collections.Generic.Queue`1" /> is greater than the available space from <paramref name="arrayIndex" /> to the end of the destination <paramref name="array" />.</exception>
    </member>
    <member name="P:System.Collections.Generic.Queue`1.Count">
      <summary>Gets the number of elements contained in the <see cref="T:System.Collections.Generic.Queue`1" />.</summary>
      <returns>The number of elements contained in the <see cref="T:System.Collections.Generic.Queue`1" />.</returns>
    </member>
    <member name="M:System.Collections.Generic.Queue`1.Dequeue">
      <summary>Removes and returns the object at the beginning of the <see cref="T:System.Collections.Generic.Queue`1" />.</summary>
      <returns>The object that is removed from the beginning of the <see cref="T:System.Collections.Generic.Queue`1" />.</returns>
      <exception cref="T:System.InvalidOperationException">The <see cref="T:System.Collections.Generic.Queue`1" /> is empty.</exception>
    </member>
    <member name="M:System.Collections.Generic.Queue`1.Enqueue(`0)">
      <summary>Adds an object to the end of the <see cref="T:System.Collections.Generic.Queue`1" />.</summary>
      <param name="item">The object to add to the <see cref="T:System.Collections.Generic.Queue`1" />. The value can be null for reference types.</param>
    </member>
    <member name="M:System.Collections.Generic.Queue`1.GetEnumerator">
      <summary>Returns an enumerator that iterates through the <see cref="T:System.Collections.Generic.Queue`1" />.</summary>
      <returns>An <see cref="T:System.Collections.Generic.Queue`1.Enumerator" /> for the <see cref="T:System.Collections.Generic.Queue`1" />.</returns>
    </member>
    <member name="M:System.Collections.Generic.Queue`1.Peek">
      <summary>Returns the object at the beginning of the <see cref="T:System.Collections.Generic.Queue`1" /> without removing it.</summary>
      <returns>The object at the beginning of the <see cref="T:System.Collections.Generic.Queue`1" />.</returns>
      <exception cref="T:System.InvalidOperationException">The <see cref="T:System.Collections.Generic.Queue`1" /> is empty.</exception>
    </member>
    <member name="M:System.Collections.Generic.Queue`1.System#Collections#Generic#IEnumerable{T}#GetEnumerator">
      <summary>Returns an enumerator that iterates through a collection.</summary>
      <returns>An <see cref="T:System.Collections.Generic.IEnumerator`1" /> that can be used to iterate through the collection.</returns>
    </member>
    <member name="M:System.Collections.Generic.Queue`1.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
      <summary>Copies the elements of the <see cref="T:System.Collections.ICollection" /> to an <see cref="T:System.Array" />, starting at a particular <see cref="T:System.Array" /> index.</summary>
      <param name="array">The one-dimensional <see cref="T:System.Array" /> that is the destination of the elements copied from <see cref="T:System.Collections.ICollection" />. The <see cref="T:System.Array" /> must have zero-based indexing.</param>
      <param name="index">The zero-based index in <paramref name="array" /> at which copying begins.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="array" /> is null.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> is less than zero.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="array" /> is multidimensional.-or-<paramref name="array" /> does not have zero-based indexing.-or-The number of elements in the source <see cref="T:System.Collections.ICollection" /> is greater than the available space from <paramref name="index" /> to the end of the destination <paramref name="array" />.-or-The type of the source <see cref="T:System.Collections.ICollection" /> cannot be cast automatically to the type of the destination <paramref name="array" />.</exception>
    </member>
    <member name="P:System.Collections.Generic.Queue`1.System#Collections#ICollection#IsSynchronized">
      <summary>Gets a value indicating whether access to the <see cref="T:System.Collections.ICollection" /> is synchronized (thread safe).</summary>
      <returns>true if access to the <see cref="T:System.Collections.ICollection" /> is synchronized (thread safe); otherwise, false.  In the default implementation of <see cref="T:System.Collections.Generic.Queue`1" />, this property always returns false.</returns>
    </member>
    <member name="P:System.Collections.Generic.Queue`1.System#Collections#ICollection#SyncRoot">
      <summary>Gets an object that can be used to synchronize access to the <see cref="T:System.Collections.ICollection" />.</summary>
      <returns>An object that can be used to synchronize access to the <see cref="T:System.Collections.ICollection" />.  In the default implementation of <see cref="T:System.Collections.Generic.Queue`1" />, this property always returns the current instance.</returns>
    </member>
    <member name="M:System.Collections.Generic.Queue`1.System#Collections#IEnumerable#GetEnumerator">
      <summary>Returns an enumerator that iterates through a collection.</summary>
      <returns>An <see cref="T:System.Collections.IEnumerator" /> that can be used to iterate through the collection.</returns>
    </member>
    <member name="M:System.Collections.Generic.Queue`1.ToArray">
      <summary>Copies the <see cref="T:System.Collections.Generic.Queue`1" /> elements to a new array.</summary>
      <returns>A new array containing elements copied from the <see cref="T:System.Collections.Generic.Queue`1" />.</returns>
    </member>
    <member name="M:System.Collections.Generic.Queue`1.TrimExcess">
      <summary>Sets the capacity to the actual number of elements in the <see cref="T:System.Collections.Generic.Queue`1" />, if that number is less than 90 percent of current capacity.</summary>
    </member>
    <member name="T:System.Collections.Generic.Queue`1.Enumerator">
      <summary>Enumerates the elements of a <see cref="T:System.Collections.Generic.Queue`1" />.</summary>
    </member>
    <member name="P:System.Collections.Generic.Queue`1.Enumerator.Current">
      <summary>Gets the element at the current position of the enumerator.</summary>
      <returns>The element in the <see cref="T:System.Collections.Generic.Queue`1" /> at the current position of the enumerator.</returns>
      <exception cref="T:System.InvalidOperationException">The enumerator is positioned before the first element of the collection or after the last element. </exception>
    </member>
    <member name="M:System.Collections.Generic.Queue`1.Enumerator.Dispose">
      <summary>Releases all resources used by the <see cref="T:System.Collections.Generic.Queue`1.Enumerator" />.</summary>
    </member>
    <member name="M:System.Collections.Generic.Queue`1.Enumerator.MoveNext">
      <summary>Advances the enumerator to the next element of the <see cref="T:System.Collections.Generic.Queue`1" />.</summary>
      <returns>true if the enumerator was successfully advanced to the next element; false if the enumerator has passed the end of the collection.</returns>
      <exception cref="T:System.InvalidOperationException">The collection was modified after the enumerator was created. </exception>
    </member>
    <member name="P:System.Collections.Generic.Queue`1.Enumerator.System#Collections#IEnumerator#Current">
      <summary>Gets the element at the current position of the enumerator.</summary>
      <returns>The element in the collection at the current position of the enumerator.</returns>
      <exception cref="T:System.InvalidOperationException">The enumerator is positioned before the first element of the collection or after the last element. </exception>
    </member>
    <member name="M:System.Collections.Generic.Queue`1.Enumerator.System#Collections#IEnumerator#Reset">
      <summary>Sets the enumerator to its initial position, which is before the first element in the collection.</summary>
      <exception cref="T:System.InvalidOperationException">The collection was modified after the enumerator was created. </exception>
    </member>
    <member name="T:System.Collections.Generic.SortedDictionary`2">
      <summary>Represents a collection of key/value pairs that are sorted on the key. </summary>
      <typeparam name="TKey">The type of the keys in the dictionary.</typeparam>
      <typeparam name="TValue">The type of the values in the dictionary.</typeparam>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Collections.Generic.SortedDictionary`2.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Collections.Generic.SortedDictionary`2" /> class that is empty and uses the default <see cref="T:System.Collections.Generic.IComparer`1" /> implementation for the key type.</summary>
    </member>
    <member name="M:System.Collections.Generic.SortedDictionary`2.#ctor(System.Collections.Generic.IComparer{`0})">
      <summary>Initializes a new instance of the <see cref="T:System.Collections.Generic.SortedDictionary`2" /> class that is empty and uses the specified <see cref="T:System.Collections.Generic.IComparer`1" /> implementation to compare keys.</summary>
      <param name="comparer">The <see cref="T:System.Collections.Generic.IComparer`1" /> implementation to use when comparing keys, or null to use the default <see cref="T:System.Collections.Generic.Comparer`1" /> for the type of the key.</param>
    </member>
    <member name="M:System.Collections.Generic.SortedDictionary`2.#ctor(System.Collections.Generic.IDictionary{`0,`1})">
      <summary>Initializes a new instance of the <see cref="T:System.Collections.Generic.SortedDictionary`2" /> class that contains elements copied from the specified <see cref="T:System.Collections.Generic.IDictionary`2" /> and uses the default <see cref="T:System.Collections.Generic.IComparer`1" /> implementation for the key type.</summary>
      <param name="dictionary">The <see cref="T:System.Collections.Generic.IDictionary`2" /> whose elements are copied to the new <see cref="T:System.Collections.Generic.SortedDictionary`2" />.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="dictionary" /> is null.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="dictionary" /> contains one or more duplicate keys.</exception>
    </member>
    <member name="M:System.Collections.Generic.SortedDictionary`2.#ctor(System.Collections.Generic.IDictionary{`0,`1},System.Collections.Generic.IComparer{`0})">
      <summary>Initializes a new instance of the <see cref="T:System.Collections.Generic.SortedDictionary`2" /> class that contains elements copied from the specified <see cref="T:System.Collections.Generic.IDictionary`2" /> and uses the specified <see cref="T:System.Collections.Generic.IComparer`1" /> implementation to compare keys.</summary>
      <param name="dictionary">The <see cref="T:System.Collections.Generic.IDictionary`2" /> whose elements are copied to the new <see cref="T:System.Collections.Generic.SortedDictionary`2" />.</param>
      <param name="comparer">The <see cref="T:System.Collections.Generic.IComparer`1" /> implementation to use when comparing keys, or null to use the default <see cref="T:System.Collections.Generic.Comparer`1" /> for the type of the key.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="dictionary" /> is null.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="dictionary" /> contains one or more duplicate keys.</exception>
    </member>
    <member name="M:System.Collections.Generic.SortedDictionary`2.Add(`0,`1)">
      <summary>Adds an element with the specified key and value into the <see cref="T:System.Collections.Generic.SortedDictionary`2" />.</summary>
      <param name="key">The key of the element to add.</param>
      <param name="value">The value of the element to add. The value can be null for reference types.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="key" /> is null.</exception>
      <exception cref="T:System.ArgumentException">An element with the same key already exists in the <see cref="T:System.Collections.Generic.SortedDictionary`2" />.</exception>
    </member>
    <member name="M:System.Collections.Generic.SortedDictionary`2.Clear">
      <summary>Removes all elements from the <see cref="T:System.Collections.Generic.SortedDictionary`2" />.</summary>
    </member>
    <member name="P:System.Collections.Generic.SortedDictionary`2.Comparer">
      <summary>Gets the <see cref="T:System.Collections.Generic.IComparer`1" /> used to order the elements of the <see cref="T:System.Collections.Generic.SortedDictionary`2" />.</summary>
      <returns>The <see cref="T:System.Collections.Generic.IComparer`1" /> used to order the elements of the <see cref="T:System.Collections.Generic.SortedDictionary`2" /></returns>
    </member>
    <member name="M:System.Collections.Generic.SortedDictionary`2.ContainsKey(`0)">
      <summary>Determines whether the <see cref="T:System.Collections.Generic.SortedDictionary`2" /> contains an element with the specified key.</summary>
      <returns>true if the <see cref="T:System.Collections.Generic.SortedDictionary`2" /> contains an element with the specified key; otherwise, false.</returns>
      <param name="key">The key to locate in the <see cref="T:System.Collections.Generic.SortedDictionary`2" />.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="key" /> is null.</exception>
    </member>
    <member name="M:System.Collections.Generic.SortedDictionary`2.ContainsValue(`1)">
      <summary>Determines whether the <see cref="T:System.Collections.Generic.SortedDictionary`2" /> contains an element with the specified value.</summary>
      <returns>true if the <see cref="T:System.Collections.Generic.SortedDictionary`2" /> contains an element with the specified value; otherwise, false.</returns>
      <param name="value">The value to locate in the <see cref="T:System.Collections.Generic.SortedDictionary`2" />. The value can be null for reference types.</param>
    </member>
    <member name="M:System.Collections.Generic.SortedDictionary`2.CopyTo(System.Collections.Generic.KeyValuePair{`0,`1}[],System.Int32)">
      <summary>Copies the elements of the <see cref="T:System.Collections.Generic.SortedDictionary`2" /> to the specified array of <see cref="T:System.Collections.Generic.KeyValuePair`2" /> structures, starting at the specified index.</summary>
      <param name="array">The one-dimensional array of <see cref="T:System.Collections.Generic.KeyValuePair`2" /> structures that is the destination of the elements copied from the current <see cref="T:System.Collections.Generic.SortedDictionary`2" /> The array must have zero-based indexing.</param>
      <param name="index">The zero-based index in <paramref name="array" /> at which copying begins.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="array" /> is null.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> is less than 0.</exception>
      <exception cref="T:System.ArgumentException">The number of elements in the source <see cref="T:System.Collections.Generic.SortedDictionary`2" /> is greater than the available space from <paramref name="index" /> to the end of the destination <paramref name="array" />.</exception>
    </member>
    <member name="P:System.Collections.Generic.SortedDictionary`2.Count">
      <summary>Gets the number of key/value pairs contained in the <see cref="T:System.Collections.Generic.SortedDictionary`2" />.</summary>
      <returns>The number of key/value pairs contained in the <see cref="T:System.Collections.Generic.SortedDictionary`2" />.</returns>
    </member>
    <member name="M:System.Collections.Generic.SortedDictionary`2.GetEnumerator">
      <summary>Returns an enumerator that iterates through the <see cref="T:System.Collections.Generic.SortedDictionary`2" />.</summary>
      <returns>A <see cref="T:System.Collections.Generic.SortedDictionary`2.Enumerator" /> for the <see cref="T:System.Collections.Generic.SortedDictionary`2" />.</returns>
    </member>
    <member name="P:System.Collections.Generic.SortedDictionary`2.Item(`0)">
      <summary>Gets or sets the value associated with the specified key.</summary>
      <returns>The value associated with the specified key. If the specified key is not found, a get operation throws a <see cref="T:System.Collections.Generic.KeyNotFoundException" />, and a set operation creates a new element with the specified key.</returns>
      <param name="key">The key of the value to get or set.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="key" /> is null.</exception>
      <exception cref="T:System.Collections.Generic.KeyNotFoundException">The property is retrieved and <paramref name="key" /> does not exist in the collection.</exception>
    </member>
    <member name="P:System.Collections.Generic.SortedDictionary`2.Keys">
      <summary>Gets a collection containing the keys in the <see cref="T:System.Collections.Generic.SortedDictionary`2" />.</summary>
      <returns>A <see cref="T:System.Collections.Generic.SortedDictionary`2.KeyCollection" /> containing the keys in the <see cref="T:System.Collections.Generic.SortedDictionary`2" />.</returns>
    </member>
    <member name="M:System.Collections.Generic.SortedDictionary`2.Remove(`0)">
      <summary>Removes the element with the specified key from the <see cref="T:System.Collections.Generic.SortedDictionary`2" />.</summary>
      <returns>true if the element is successfully removed; otherwise, false.  This method also returns false if <paramref name="key" /> is not found in the <see cref="T:System.Collections.Generic.SortedDictionary`2" />.</returns>
      <param name="key">The key of the element to remove.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="key" /> is null.</exception>
    </member>
    <member name="M:System.Collections.Generic.SortedDictionary`2.System#Collections#Generic#ICollection{T}#Add(System.Collections.Generic.KeyValuePair{`0,`1})">
      <summary>Adds an item to the <see cref="T:System.Collections.Generic.ICollection`1" />.</summary>
      <param name="keyValuePair">The <see cref="T:System.Collections.Generic.KeyValuePair`2" /> structure to add to the <see cref="T:System.Collections.Generic.ICollection`1" />.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="keyValuePair" /> is null.</exception>
      <exception cref="T:System.ArgumentException">An element with the same key already exists in the <see cref="T:System.Collections.Generic.SortedDictionary`2" />.</exception>
    </member>
    <member name="M:System.Collections.Generic.SortedDictionary`2.System#Collections#Generic#ICollection{T}#Contains(System.Collections.Generic.KeyValuePair{`0,`1})">
      <summary>Determines whether the <see cref="T:System.Collections.Generic.ICollection`1" /> contains a specific key and value.</summary>
      <returns>true if <paramref name="keyValuePair" /> is found in the <see cref="T:System.Collections.Generic.ICollection`1" />; otherwise, false.</returns>
      <param name="keyValuePair">The <see cref="T:System.Collections.Generic.KeyValuePair`2" /> structure to locate in the <see cref="T:System.Collections.Generic.ICollection`1" />.</param>
    </member>
    <member name="P:System.Collections.Generic.SortedDictionary`2.System#Collections#Generic#ICollection{T}#IsReadOnly">
      <summary>Gets a value indicating whether the <see cref="T:System.Collections.Generic.ICollection`1" /> is read-only.</summary>
      <returns>true if the <see cref="T:System.Collections.Generic.ICollection`1" /> is read-only; otherwise, false. In the default implementation of <see cref="T:System.Collections.Generic.SortedDictionary`2" />, this property always returns false.</returns>
    </member>
    <member name="M:System.Collections.Generic.SortedDictionary`2.System#Collections#Generic#ICollection{T}#Remove(System.Collections.Generic.KeyValuePair{`0,`1})">
      <summary>Removes the first occurrence of the specified element from the <see cref="T:System.Collections.Generic.ICollection`1" />.</summary>
      <returns>true if <paramref name="keyValuePair" /> was successfully removed from the <see cref="T:System.Collections.Generic.ICollection`1" />; otherwise, false. This method also returns false if <paramref name="keyValuePair" /> was not found in the <see cref="T:System.Collections.Generic.ICollection`1" />.</returns>
      <param name="keyValuePair">The <see cref="T:System.Collections.Generic.KeyValuePair`2" /> structure to remove from the <see cref="T:System.Collections.Generic.ICollection`1" />.</param>
    </member>
    <member name="P:System.Collections.Generic.SortedDictionary`2.System#Collections#Generic#IDictionary{TKey@TValue}#Keys">
      <summary>Gets an <see cref="T:System.Collections.Generic.ICollection`1" /> containing the keys of the <see cref="T:System.Collections.Generic.IDictionary`2" />.</summary>
      <returns>An <see cref="T:System.Collections.Generic.ICollection`1" /> containing the keys of the <see cref="T:System.Collections.Generic.IDictionary`2" />.</returns>
    </member>
    <member name="P:System.Collections.Generic.SortedDictionary`2.System#Collections#Generic#IDictionary{TKey@TValue}#Values">
      <summary>Gets an <see cref="T:System.Collections.Generic.ICollection`1" /> containing the values in the <see cref="T:System.Collections.Generic.IDictionary`2" />.</summary>
      <returns>An <see cref="T:System.Collections.Generic.ICollection`1" /> containing the values in the <see cref="T:System.Collections.Generic.IDictionary`2" />.</returns>
    </member>
    <member name="M:System.Collections.Generic.SortedDictionary`2.System#Collections#Generic#IEnumerable{T}#GetEnumerator">
      <summary>Returns an enumerator that iterates through a collection.</summary>
      <returns>An <see cref="T:System.Collections.IEnumerator" /> that can be used to iterate through the collection.</returns>
    </member>
    <member name="M:System.Collections.Generic.SortedDictionary`2.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
      <summary>Copies the elements of the <see cref="T:System.Collections.Generic.ICollection`1" /> to an array, starting at the specified array index.</summary>
      <param name="array">The one-dimensional array that is the destination of the elements copied from the <see cref="T:System.Collections.Generic.ICollection`1" />. The array must have zero-based indexing.</param>
      <param name="index">The zero-based index in <paramref name="array" /> at which copying begins.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="array" /> is null.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> is less than 0.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="array" /> is multidimensional.-or-<paramref name="array" /> does not have zero-based indexing.-or-The number of elements in the source <see cref="T:System.Collections.Generic.ICollection`1" /> is greater than the available space from <paramref name="index" /> to the end of the destination <paramref name="array" />.-or-The type of the source <see cref="T:System.Collections.Generic.ICollection`1" /> cannot be cast automatically to the type of the destination <paramref name="array" />.</exception>
    </member>
    <member name="P:System.Collections.Generic.SortedDictionary`2.System#Collections#ICollection#IsSynchronized">
      <summary>Gets a value indicating whether access to the <see cref="T:System.Collections.ICollection" /> is synchronized (thread safe).</summary>
      <returns>true if access to the <see cref="T:System.Collections.ICollection" /> is synchronized (thread safe); otherwise, false.  In the default implementation of <see cref="T:System.Collections.Generic.SortedDictionary`2" />, this property always returns false.</returns>
    </member>
    <member name="P:System.Collections.Generic.SortedDictionary`2.System#Collections#ICollection#SyncRoot">
      <summary>Gets an object that can be used to synchronize access to the <see cref="T:System.Collections.ICollection" />.</summary>
      <returns>An object that can be used to synchronize access to the <see cref="T:System.Collections.ICollection" />. </returns>
    </member>
    <member name="M:System.Collections.Generic.SortedDictionary`2.System#Collections#IDictionary#Add(System.Object,System.Object)">
      <summary>Adds an element with the provided key and value to the <see cref="T:System.Collections.IDictionary" />.</summary>
      <param name="key">The object to use as the key of the element to add.</param>
      <param name="value">The object to use as the value of the element to add.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="key" /> is null.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="key" /> is of a type that is not assignable to the key type <paramref name="TKey" /> of the <see cref="T:System.Collections.IDictionary" />.-or-<paramref name="value" /> is of a type that is not assignable to the value type <paramref name="TValue" /> of the <see cref="T:System.Collections.IDictionary" />.-or-An element with the same key already exists in the <see cref="T:System.Collections.IDictionary" />.</exception>
    </member>
    <member name="M:System.Collections.Generic.SortedDictionary`2.System#Collections#IDictionary#Contains(System.Object)">
      <summary>Determines whether the <see cref="T:System.Collections.IDictionary" /> contains an element with the specified key.</summary>
      <returns>true if the <see cref="T:System.Collections.IDictionary" /> contains an element with the key; otherwise, false.</returns>
      <param name="key">The key to locate in the <see cref="T:System.Collections.IDictionary" />.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="key" /> is null.</exception>
    </member>
    <member name="M:System.Collections.Generic.SortedDictionary`2.System#Collections#IDictionary#GetEnumerator">
      <summary>Returns an <see cref="T:System.Collections.IDictionaryEnumerator" /> for the <see cref="T:System.Collections.IDictionary" />.</summary>
      <returns>An <see cref="T:System.Collections.IDictionaryEnumerator" /> for the <see cref="T:System.Collections.IDictionary" />.</returns>
    </member>
    <member name="P:System.Collections.Generic.SortedDictionary`2.System#Collections#IDictionary#IsFixedSize">
      <summary>Gets a value indicating whether the <see cref="T:System.Collections.IDictionary" /> has a fixed size.</summary>
      <returns>true if the <see cref="T:System.Collections.IDictionary" /> has a fixed size; otherwise, false.  In the default implementation of <see cref="T:System.Collections.Generic.SortedDictionary`2" />, this property always returns false.</returns>
    </member>
    <member name="P:System.Collections.Generic.SortedDictionary`2.System#Collections#IDictionary#IsReadOnly">
      <summary>Gets a value indicating whether the <see cref="T:System.Collections.IDictionary" /> is read-only.</summary>
      <returns>true if the <see cref="T:System.Collections.IDictionary" /> is read-only; otherwise, false.  In the default implementation of <see cref="T:System.Collections.Generic.SortedDictionary`2" />, this property always returns false.</returns>
    </member>
    <member name="P:System.Collections.Generic.SortedDictionary`2.System#Collections#IDictionary#Item(System.Object)">
      <summary>Gets or sets the element with the specified key.</summary>
      <returns>The element with the specified key, or null if <paramref name="key" /> is not in the dictionary or <paramref name="key" /> is of a type that is not assignable to the key type <paramref name="TKey" /> of the <see cref="T:System.Collections.Generic.SortedDictionary`2" />.</returns>
      <param name="key">The key of the element to get.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="key" /> is null.</exception>
      <exception cref="T:System.ArgumentException">A value is being assigned, and <paramref name="key" /> is of a type that is not assignable to the key type <paramref name="TKey" /> of the <see cref="T:System.Collections.Generic.SortedDictionary`2" />.-or-A value is being assigned, and <paramref name="value" /> is of a type that is not assignable to the value type <paramref name="TValue" /> of the <see cref="T:System.Collections.Generic.SortedDictionary`2" />.</exception>
    </member>
    <member name="P:System.Collections.Generic.SortedDictionary`2.System#Collections#IDictionary#Keys">
      <summary>Gets an <see cref="T:System.Collections.ICollection" /> containing the keys of the <see cref="T:System.Collections.IDictionary" />.</summary>
      <returns>An <see cref="T:System.Collections.ICollection" /> containing the keys of the <see cref="T:System.Collections.IDictionary" />.</returns>
    </member>
    <member name="M:System.Collections.Generic.SortedDictionary`2.System#Collections#IDictionary#Remove(System.Object)">
      <summary>Removes the element with the specified key from the <see cref="T:System.Collections.IDictionary" />.</summary>
      <param name="key">The key of the element to remove.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="key" /> is null.</exception>
    </member>
    <member name="P:System.Collections.Generic.SortedDictionary`2.System#Collections#IDictionary#Values">
      <summary>Gets an <see cref="T:System.Collections.ICollection" /> containing the values in the <see cref="T:System.Collections.IDictionary" />.</summary>
      <returns>An <see cref="T:System.Collections.ICollection" /> containing the values in the <see cref="T:System.Collections.IDictionary" />.</returns>
    </member>
    <member name="M:System.Collections.Generic.SortedDictionary`2.System#Collections#IEnumerable#GetEnumerator">
      <summary>Returns an enumerator that iterates through the collection.</summary>
      <returns>An <see cref="T:System.Collections.Generic.IEnumerator`1" /> that can be used to iterate through the collection.</returns>
    </member>
    <member name="M:System.Collections.Generic.SortedDictionary`2.TryGetValue(`0,`1@)">
      <summary>Gets the value associated with the specified key.</summary>
      <returns>true if the <see cref="T:System.Collections.Generic.SortedDictionary`2" /> contains an element with the specified key; otherwise, false.</returns>
      <param name="key">The key of the value to get.</param>
      <param name="value">When this method returns, the value associated with the specified key, if the key is found; otherwise, the default value for the type of the <paramref name="value" /> parameter. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="key" /> is null.</exception>
    </member>
    <member name="P:System.Collections.Generic.SortedDictionary`2.Values">
      <summary>Gets a collection containing the values in the <see cref="T:System.Collections.Generic.SortedDictionary`2" />.</summary>
      <returns>A <see cref="T:System.Collections.Generic.SortedDictionary`2.ValueCollection" /> containing the values in the <see cref="T:System.Collections.Generic.SortedDictionary`2" />.</returns>
    </member>
    <member name="T:System.Collections.Generic.SortedDictionary`2.Enumerator">
      <summary>Enumerates the elements of a <see cref="T:System.Collections.Generic.SortedDictionary`2" />.</summary>
    </member>
    <member name="P:System.Collections.Generic.SortedDictionary`2.Enumerator.Current">
      <summary>Gets the element at the current position of the enumerator.</summary>
      <returns>The element in the <see cref="T:System.Collections.Generic.SortedDictionary`2" /> at the current position of the enumerator.</returns>
    </member>
    <member name="M:System.Collections.Generic.SortedDictionary`2.Enumerator.Dispose">
      <summary>Releases all resources used by the <see cref="T:System.Collections.Generic.SortedDictionary`2.Enumerator" />.</summary>
    </member>
    <member name="M:System.Collections.Generic.SortedDictionary`2.Enumerator.MoveNext">
      <summary>Advances the enumerator to the next element of the <see cref="T:System.Collections.Generic.SortedDictionary`2" />.</summary>
      <returns>true if the enumerator was successfully advanced to the next element; false if the enumerator has passed the end of the collection.</returns>
      <exception cref="T:System.InvalidOperationException">The collection was modified after the enumerator was created. </exception>
    </member>
    <member name="P:System.Collections.Generic.SortedDictionary`2.Enumerator.System#Collections#IDictionaryEnumerator#Entry">
      <summary>Gets the element at the current position of the enumerator as a <see cref="T:System.Collections.DictionaryEntry" /> structure.</summary>
      <returns>The element in the collection at the current position of the dictionary, as a <see cref="T:System.Collections.DictionaryEntry" /> structure.</returns>
      <exception cref="T:System.InvalidOperationException">The enumerator is positioned before the first element of the collection or after the last element. </exception>
    </member>
    <member name="P:System.Collections.Generic.SortedDictionary`2.Enumerator.System#Collections#IDictionaryEnumerator#Key">
      <summary>Gets the key of the element at the current position of the enumerator.</summary>
      <returns>The key of the element in the collection at the current position of the enumerator.</returns>
      <exception cref="T:System.InvalidOperationException">The enumerator is positioned before the first element of the collection or after the last element. </exception>
    </member>
    <member name="P:System.Collections.Generic.SortedDictionary`2.Enumerator.System#Collections#IDictionaryEnumerator#Value">
      <summary>Gets the value of the element at the current position of the enumerator.</summary>
      <returns>The value of the element in the collection at the current position of the enumerator.</returns>
      <exception cref="T:System.InvalidOperationException">The enumerator is positioned before the first element of the collection or after the last element. </exception>
    </member>
    <member name="P:System.Collections.Generic.SortedDictionary`2.Enumerator.System#Collections#IEnumerator#Current">
      <summary>Gets the element at the current position of the enumerator.</summary>
      <returns>The element in the collection at the current position of the enumerator.</returns>
      <exception cref="T:System.InvalidOperationException">The enumerator is positioned before the first element of the collection or after the last element. </exception>
    </member>
    <member name="M:System.Collections.Generic.SortedDictionary`2.Enumerator.System#Collections#IEnumerator#Reset">
      <summary>Sets the enumerator to its initial position, which is before the first element in the collection.</summary>
      <exception cref="T:System.InvalidOperationException">The collection was modified after the enumerator was created. </exception>
    </member>
    <member name="T:System.Collections.Generic.SortedDictionary`2.KeyCollection">
      <summary>Represents the collection of keys in a <see cref="T:System.Collections.Generic.SortedDictionary`2" />. This class cannot be inherited. </summary>
    </member>
    <member name="M:System.Collections.Generic.SortedDictionary`2.KeyCollection.#ctor(System.Collections.Generic.SortedDictionary{`0,`1})">
      <summary>Initializes a new instance of the <see cref="T:System.Collections.Generic.SortedDictionary`2.KeyCollection" /> class that reflects the keys in the specified <see cref="T:System.Collections.Generic.SortedDictionary`2" />.</summary>
      <param name="dictionary">The <see cref="T:System.Collections.Generic.SortedDictionary`2" /> whose keys are reflected in the new <see cref="T:System.Collections.Generic.SortedDictionary`2.KeyCollection" />.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="dictionary" /> is null.</exception>
    </member>
    <member name="M:System.Collections.Generic.SortedDictionary`2.KeyCollection.CopyTo(`0[],System.Int32)">
      <summary>Copies the <see cref="T:System.Collections.Generic.SortedDictionary`2.KeyCollection" /> elements to an existing one-dimensional array, starting at the specified array index.</summary>
      <param name="array">The one-dimensional array that is the destination of the elements copied from the <see cref="T:System.Collections.Generic.SortedDictionary`2.KeyCollection" />. The array must have zero-based indexing.</param>
      <param name="index">The zero-based index in <paramref name="array" /> at which copying begins.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="array" /> is null. </exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> is less than 0.</exception>
      <exception cref="T:System.ArgumentException">The number of elements in the source <see cref="T:System.Collections.Generic.SortedDictionary`2.KeyCollection" /> is greater than the available space from <paramref name="index" /> to the end of the destination <paramref name="array" />.</exception>
    </member>
    <member name="P:System.Collections.Generic.SortedDictionary`2.KeyCollection.Count">
      <summary>Gets the number of elements contained in the <see cref="T:System.Collections.Generic.SortedDictionary`2.KeyCollection" />.</summary>
      <returns>The number of elements contained in the <see cref="T:System.Collections.Generic.SortedDictionary`2.KeyCollection" />.</returns>
    </member>
    <member name="M:System.Collections.Generic.SortedDictionary`2.KeyCollection.GetEnumerator">
      <summary>Returns an enumerator that iterates through the <see cref="T:System.Collections.Generic.SortedDictionary`2.KeyCollection" />.</summary>
      <returns>A <see cref="T:System.Collections.Generic.SortedDictionary`2.KeyCollection.Enumerator" /> structure for the <see cref="T:System.Collections.Generic.SortedDictionary`2.KeyCollection" />.</returns>
    </member>
    <member name="M:System.Collections.Generic.SortedDictionary`2.KeyCollection.System#Collections#Generic#ICollection{T}#Add(`0)">
      <summary>Adds an item to the <see cref="T:System.Collections.Generic.ICollection`1" />.  This implementation always throws a <see cref="T:System.NotSupportedException" />.</summary>
      <param name="item">The object to add to the <see cref="T:System.Collections.Generic.ICollection`1" />.</param>
      <exception cref="T:System.NotSupportedException">Always thrown; the collection is read-only.</exception>
    </member>
    <member name="M:System.Collections.Generic.SortedDictionary`2.KeyCollection.System#Collections#Generic#ICollection{T}#Clear">
      <summary>Removes all items from the <see cref="T:System.Collections.Generic.ICollection`1" />.  This implementation always throws a <see cref="T:System.NotSupportedException" />.</summary>
      <exception cref="T:System.NotSupportedException">Always thrown; the collection is read-only.</exception>
    </member>
    <member name="M:System.Collections.Generic.SortedDictionary`2.KeyCollection.System#Collections#Generic#ICollection{T}#Contains(`0)">
      <summary>Determines whether the <see cref="T:System.Collections.Generic.ICollection`1" /> contains the specified value.</summary>
      <returns>true if <paramref name="item" /> is found in the <see cref="T:System.Collections.Generic.ICollection`1" />; otherwise, false.</returns>
      <param name="item">The object to locate in the <see cref="T:System.Collections.Generic.ICollection`1" />.</param>
    </member>
    <member name="P:System.Collections.Generic.SortedDictionary`2.KeyCollection.System#Collections#Generic#ICollection{T}#IsReadOnly">
      <summary>Gets a value indicating whether the <see cref="T:System.Collections.Generic.ICollection`1" /> is read-only.</summary>
      <returns>true if the <see cref="T:System.Collections.Generic.ICollection`1" /> is read-only; otherwise, false.  In the default implementation of <see cref="T:System.Collections.Generic.SortedDictionary`2.KeyCollection" />, this property always returns false.</returns>
    </member>
    <member name="M:System.Collections.Generic.SortedDictionary`2.KeyCollection.System#Collections#Generic#ICollection{T}#Remove(`0)">
      <summary>Removes the first occurrence of a specific object from the <see cref="T:System.Collections.Generic.ICollection`1" />.  This implementation always throws a <see cref="T:System.NotSupportedException" />.</summary>
      <returns>true if <paramref name="item" /> is successfully removed from the <see cref="T:System.Collections.Generic.ICollection`1" />; otherwise, false. This method also returns false if <paramref name="item" /> is not found in the <see cref="T:System.Collections.Generic.ICollection`1" />.</returns>
      <param name="item">The object to remove from the <see cref="T:System.Collections.Generic.ICollection`1" />.</param>
      <exception cref="T:System.NotSupportedException">Always thrown; the collection is read-only.</exception>
    </member>
    <member name="M:System.Collections.Generic.SortedDictionary`2.KeyCollection.System#Collections#Generic#IEnumerable{T}#GetEnumerator">
      <summary>Returns an enumerator that iterates through the collection.</summary>
      <returns>An <see cref="T:System.Collections.Generic.IEnumerator`1" /> that can be used to iterate through the collection.</returns>
    </member>
    <member name="M:System.Collections.Generic.SortedDictionary`2.KeyCollection.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
      <summary>Copies the elements of the <see cref="T:System.Collections.ICollection" /> to an array, starting at a particular array index.</summary>
      <param name="array">The one-dimensional array that is the destination of the elements copied from the <see cref="T:System.Collections.ICollection" />. The array must have zero-based indexing.</param>
      <param name="index">The zero-based index in <paramref name="array" /> at which copying begins.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="array" /> is null.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> is less than 0.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="array" /> is multidimensional.-or-<paramref name="array" /> does not have zero-based indexing.-or-The number of elements in the source <see cref="T:System.Collections.ICollection" /> is greater than the available space from <paramref name="index" /> to the end of the destination <paramref name="array" />.-or-The type of the source <see cref="T:System.Collections.ICollection" /> cannot be cast automatically to the type of the destination <paramref name="array" />.</exception>
    </member>
    <member name="P:System.Collections.Generic.SortedDictionary`2.KeyCollection.System#Collections#ICollection#IsSynchronized">
      <summary>Gets a value indicating whether access to the <see cref="T:System.Collections.ICollection" /> is synchronized (thread safe).</summary>
      <returns>true if access to the <see cref="T:System.Collections.ICollection" /> is synchronized (thread safe); otherwise, false.  In the default implementation of <see cref="T:System.Collections.Generic.SortedDictionary`2.KeyCollection" />, this property always returns false.</returns>
    </member>
    <member name="P:System.Collections.Generic.SortedDictionary`2.KeyCollection.System#Collections#ICollection#SyncRoot">
      <summary>Gets an object that can be used to synchronize access to the <see cref="T:System.Collections.ICollection" />.</summary>
      <returns>An object that can be used to synchronize access to the <see cref="T:System.Collections.ICollection" />.  In the default implementation of <see cref="T:System.Collections.Generic.SortedDictionary`2.KeyCollection" />, this property always returns the current instance.</returns>
    </member>
    <member name="M:System.Collections.Generic.SortedDictionary`2.KeyCollection.System#Collections#IEnumerable#GetEnumerator">
      <summary>Returns an enumerator that iterates through the collection.</summary>
      <returns>An <see cref="T:System.Collections.IEnumerator" /> that can be used to iterate through the collection.</returns>
    </member>
    <member name="T:System.Collections.Generic.SortedDictionary`2.KeyCollection.Enumerator">
      <summary>Enumerates the elements of a <see cref="T:System.Collections.Generic.SortedDictionary`2.KeyCollection" />.</summary>
    </member>
    <member name="P:System.Collections.Generic.SortedDictionary`2.KeyCollection.Enumerator.Current">
      <summary>Gets the element at the current position of the enumerator.</summary>
      <returns>The element in the <see cref="T:System.Collections.Generic.SortedDictionary`2.KeyCollection" /> at the current position of the enumerator.</returns>
    </member>
    <member name="M:System.Collections.Generic.SortedDictionary`2.KeyCollection.Enumerator.Dispose">
      <summary>Releases all resources used by the <see cref="T:System.Collections.Generic.SortedDictionary`2.KeyCollection.Enumerator" />.</summary>
    </member>
    <member name="M:System.Collections.Generic.SortedDictionary`2.KeyCollection.Enumerator.MoveNext">
      <summary>Advances the enumerator to the next element of the <see cref="T:System.Collections.Generic.SortedDictionary`2.KeyCollection" />.</summary>
      <returns>true if the enumerator was successfully advanced to the next element; false if the enumerator has passed the end of the collection.</returns>
      <exception cref="T:System.InvalidOperationException">The collection was modified after the enumerator was created. </exception>
    </member>
    <member name="P:System.Collections.Generic.SortedDictionary`2.KeyCollection.Enumerator.System#Collections#IEnumerator#Current">
      <summary>Gets the element at the current position of the enumerator.</summary>
      <returns>The element in the collection at the current position of the enumerator.</returns>
      <exception cref="T:System.InvalidOperationException">The enumerator is positioned before the first element of the collection or after the last element. </exception>
    </member>
    <member name="M:System.Collections.Generic.SortedDictionary`2.KeyCollection.Enumerator.System#Collections#IEnumerator#Reset">
      <summary>Sets the enumerator to its initial position, which is before the first element in the collection.</summary>
      <exception cref="T:System.InvalidOperationException">The collection was modified after the enumerator was created. </exception>
    </member>
    <member name="T:System.Collections.Generic.SortedDictionary`2.ValueCollection">
      <summary>Represents the collection of values in a <see cref="T:System.Collections.Generic.SortedDictionary`2" />. This class cannot be inherited</summary>
    </member>
    <member name="M:System.Collections.Generic.SortedDictionary`2.ValueCollection.#ctor(System.Collections.Generic.SortedDictionary{`0,`1})">
      <summary>Initializes a new instance of the <see cref="T:System.Collections.Generic.SortedDictionary`2.ValueCollection" /> class that reflects the values in the specified <see cref="T:System.Collections.Generic.SortedDictionary`2" />.</summary>
      <param name="dictionary">The <see cref="T:System.Collections.Generic.SortedDictionary`2" /> whose values are reflected in the new <see cref="T:System.Collections.Generic.SortedDictionary`2.ValueCollection" />.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="dictionary" /> is null.</exception>
    </member>
    <member name="M:System.Collections.Generic.SortedDictionary`2.ValueCollection.CopyTo(`1[],System.Int32)">
      <summary>Copies the <see cref="T:System.Collections.Generic.SortedDictionary`2.ValueCollection" /> elements to an existing one-dimensional array, starting at the specified array index.</summary>
      <param name="array">The one-dimensional array that is the destination of the elements copied from the <see cref="T:System.Collections.Generic.SortedDictionary`2.ValueCollection" />. The array must have zero-based indexing.</param>
      <param name="index">The zero-based index in <paramref name="array" /> at which copying begins.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="array" /> is null.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> is less than 0.</exception>
      <exception cref="T:System.ArgumentException">The number of elements in the source <see cref="T:System.Collections.Generic.SortedDictionary`2.ValueCollection" /> is greater than the available space from <paramref name="index" /> to the end of the destination <paramref name="array" />.</exception>
    </member>
    <member name="P:System.Collections.Generic.SortedDictionary`2.ValueCollection.Count">
      <summary>Gets the number of elements contained in the <see cref="T:System.Collections.Generic.SortedDictionary`2.ValueCollection" />.</summary>
      <returns>The number of elements contained in the <see cref="T:System.Collections.Generic.SortedDictionary`2.ValueCollection" />.</returns>
    </member>
    <member name="M:System.Collections.Generic.SortedDictionary`2.ValueCollection.GetEnumerator">
      <summary>Returns an enumerator that iterates through the <see cref="T:System.Collections.Generic.SortedDictionary`2.ValueCollection" />.</summary>
      <returns>A <see cref="T:System.Collections.Generic.SortedDictionary`2.ValueCollection.Enumerator" /> structure for the <see cref="T:System.Collections.Generic.SortedDictionary`2.ValueCollection" />.</returns>
    </member>
    <member name="M:System.Collections.Generic.SortedDictionary`2.ValueCollection.System#Collections#Generic#ICollection{T}#Add(`1)">
      <summary>Adds an item to the <see cref="T:System.Collections.Generic.ICollection`1" />.  This implementation always throws a <see cref="T:System.NotSupportedException" />.</summary>
      <param name="item">The object to add to the <see cref="T:System.Collections.Generic.ICollection`1" />.</param>
      <exception cref="T:System.NotSupportedException">Always thrown; the collection is read-only.</exception>
    </member>
    <member name="M:System.Collections.Generic.SortedDictionary`2.ValueCollection.System#Collections#Generic#ICollection{T}#Clear">
      <summary>Removes all items from the <see cref="T:System.Collections.Generic.ICollection`1" />.  This implementation always throws a <see cref="T:System.NotSupportedException" />.</summary>
      <exception cref="T:System.NotSupportedException">Always thrown; the collection is read-only.</exception>
    </member>
    <member name="M:System.Collections.Generic.SortedDictionary`2.ValueCollection.System#Collections#Generic#ICollection{T}#Contains(`1)">
      <summary>Determines whether the <see cref="T:System.Collections.Generic.ICollection`1" /> contains a specified value.</summary>
      <returns>true if <paramref name="item" /> is found in the <see cref="T:System.Collections.Generic.ICollection`1" />; otherwise, false.</returns>
      <param name="item">The object to locate in the <see cref="T:System.Collections.Generic.ICollection`1" />.</param>
    </member>
    <member name="P:System.Collections.Generic.SortedDictionary`2.ValueCollection.System#Collections#Generic#ICollection{T}#IsReadOnly">
      <summary>Gets a value indicating whether the <see cref="T:System.Collections.Generic.ICollection`1" /> is read-only.</summary>
      <returns>true if the <see cref="T:System.Collections.Generic.ICollection`1" /> is read-only; otherwise, false.  In the default implementation of <see cref="T:System.Collections.Generic.SortedDictionary`2.ValueCollection" />, this property always returns false.</returns>
    </member>
    <member name="M:System.Collections.Generic.SortedDictionary`2.ValueCollection.System#Collections#Generic#ICollection{T}#Remove(`1)">
      <summary>Removes the first occurrence of a specific object from the <see cref="T:System.Collections.Generic.ICollection`1" />.  This implementation always throws a <see cref="T:System.NotSupportedException" />.</summary>
      <returns>true if <paramref name="item" /> is successfully removed from the <see cref="T:System.Collections.Generic.ICollection`1" />; otherwise, false. This method also returns false if <paramref name="item" /> is not found in the <see cref="T:System.Collections.Generic.ICollection`1" />.</returns>
      <param name="item">The object to remove from the <see cref="T:System.Collections.Generic.ICollection`1" />.</param>
      <exception cref="T:System.NotSupportedException">Always thrown; the collection is read-only.</exception>
    </member>
    <member name="M:System.Collections.Generic.SortedDictionary`2.ValueCollection.System#Collections#Generic#IEnumerable{T}#GetEnumerator">
      <summary>Removes the first occurrence of a specific object from the <see cref="T:System.Collections.Generic.ICollection`1" />.  This implementation always throws a <see cref="T:System.NotSupportedException" />.</summary>
      <returns>true if <paramref name="item" /> is successfully removed from the <see cref="T:System.Collections.Generic.ICollection`1" />; otherwise, false. This method also returns false if <paramref name="item" /> is not found in the <see cref="T:System.Collections.Generic.ICollection`1" />.</returns>
      <exception cref="T:System.NotSupportedException">Always thrown; the collection is read-only.</exception>
    </member>
    <member name="M:System.Collections.Generic.SortedDictionary`2.ValueCollection.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
      <summary>Copies the elements of the <see cref="T:System.Collections.ICollection" /> to an array, starting at a particular array index.</summary>
      <param name="array">The one-dimensional array that is the destination of the elements copied from the <see cref="T:System.Collections.ICollection" />. The array must have zero-based indexing.</param>
      <param name="index">The zero-based index in <paramref name="array" /> at which copying begins.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="array" /> is null.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> is less than 0.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="array" /> is multidimensional.-or-<paramref name="array" /> does not have zero-based indexing.-or-The number of elements in the source <see cref="T:System.Collections.ICollection" /> is greater than the available space from <paramref name="index" /> to the end of the destination <paramref name="array" />.-or-The type of the source <see cref="T:System.Collections.ICollection" /> cannot be cast automatically to the type of the destination <paramref name="array" />.</exception>
    </member>
    <member name="P:System.Collections.Generic.SortedDictionary`2.ValueCollection.System#Collections#ICollection#IsSynchronized">
      <summary>Gets a value indicating whether access to the <see cref="T:System.Collections.ICollection" /> is synchronized (thread safe).</summary>
      <returns>true if access to the <see cref="T:System.Collections.ICollection" /> is synchronized (thread safe); otherwise, false.  In the default implementation of <see cref="T:System.Collections.Generic.SortedDictionary`2.ValueCollection" />, this property always returns false.</returns>
    </member>
    <member name="P:System.Collections.Generic.SortedDictionary`2.ValueCollection.System#Collections#ICollection#SyncRoot">
      <summary>Gets an object that can be used to synchronize access to the <see cref="T:System.Collections.ICollection" />.</summary>
      <returns>An object that can be used to synchronize access to the <see cref="T:System.Collections.ICollection" />.  In the default implementation of <see cref="T:System.Collections.Generic.SortedDictionary`2.ValueCollection" />, this property always returns the current instance.</returns>
    </member>
    <member name="M:System.Collections.Generic.SortedDictionary`2.ValueCollection.System#Collections#IEnumerable#GetEnumerator">
      <summary>Returns an enumerator that iterates through the collection.</summary>
      <returns>An <see cref="T:System.Collections.IEnumerator" /> that can be used to iterate through the collection.</returns>
    </member>
    <member name="T:System.Collections.Generic.SortedDictionary`2.ValueCollection.Enumerator">
      <summary>Enumerates the elements of a <see cref="T:System.Collections.Generic.SortedDictionary`2.ValueCollection" />.</summary>
    </member>
    <member name="P:System.Collections.Generic.SortedDictionary`2.ValueCollection.Enumerator.Current">
      <summary>Gets the element at the current position of the enumerator.</summary>
      <returns>The element in the <see cref="T:System.Collections.Generic.SortedDictionary`2.ValueCollection" /> at the current position of the enumerator.</returns>
    </member>
    <member name="M:System.Collections.Generic.SortedDictionary`2.ValueCollection.Enumerator.Dispose">
      <summary>Releases all resources used by the <see cref="T:System.Collections.Generic.SortedDictionary`2.ValueCollection.Enumerator" />.</summary>
    </member>
    <member name="M:System.Collections.Generic.SortedDictionary`2.ValueCollection.Enumerator.MoveNext">
      <summary>Advances the enumerator to the next element of the <see cref="T:System.Collections.Generic.SortedDictionary`2.ValueCollection" />.</summary>
      <returns>true if the enumerator was successfully advanced to the next element; false if the enumerator has passed the end of the collection.</returns>
      <exception cref="T:System.InvalidOperationException">The collection was modified after the enumerator was created. </exception>
    </member>
    <member name="P:System.Collections.Generic.SortedDictionary`2.ValueCollection.Enumerator.System#Collections#IEnumerator#Current">
      <summary>Gets the element at the current position of the enumerator.</summary>
      <returns>The element in the collection at the current position of the enumerator.</returns>
      <exception cref="T:System.InvalidOperationException">The enumerator is positioned before the first element of the collection or after the last element. </exception>
    </member>
    <member name="M:System.Collections.Generic.SortedDictionary`2.ValueCollection.Enumerator.System#Collections#IEnumerator#Reset">
      <summary>Sets the enumerator to its initial position, which is before the first element in the collection.</summary>
      <exception cref="T:System.InvalidOperationException">The collection was modified after the enumerator was created. </exception>
    </member>
    <member name="T:System.Collections.Generic.SortedList`2">
      <summary>Represents a collection of key/value pairs that are sorted by key based on the associated <see cref="T:System.Collections.Generic.IComparer`1" /> implementation. </summary>
      <typeparam name="TKey">The type of keys in the collection.</typeparam>
      <typeparam name="TValue">The type of values in the collection.</typeparam>
    </member>
    <member name="M:System.Collections.Generic.SortedList`2.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Collections.Generic.SortedList`2" /> class that is empty, has the default initial capacity, and uses the default <see cref="T:System.Collections.Generic.IComparer`1" />.</summary>
    </member>
    <member name="M:System.Collections.Generic.SortedList`2.#ctor(System.Collections.Generic.IComparer{`0})">
      <summary>Initializes a new instance of the <see cref="T:System.Collections.Generic.SortedList`2" /> class that is empty, has the default initial capacity, and uses the specified <see cref="T:System.Collections.Generic.IComparer`1" />.</summary>
      <param name="comparer">The <see cref="T:System.Collections.Generic.IComparer`1" /> implementation to use when comparing keys.-or-null to use the default <see cref="T:System.Collections.Generic.Comparer`1" /> for the type of the key.</param>
    </member>
    <member name="M:System.Collections.Generic.SortedList`2.#ctor(System.Collections.Generic.IDictionary{`0,`1})">
      <summary>Initializes a new instance of the <see cref="T:System.Collections.Generic.SortedList`2" /> class that contains elements copied from the specified <see cref="T:System.Collections.Generic.IDictionary`2" />, has sufficient capacity to accommodate the number of elements copied, and uses the default <see cref="T:System.Collections.Generic.IComparer`1" />.</summary>
      <param name="dictionary">The <see cref="T:System.Collections.Generic.IDictionary`2" /> whose elements are copied to the new <see cref="T:System.Collections.Generic.SortedList`2" />.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="dictionary" /> is null.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="dictionary" /> contains one or more duplicate keys.</exception>
    </member>
    <member name="M:System.Collections.Generic.SortedList`2.#ctor(System.Collections.Generic.IDictionary{`0,`1},System.Collections.Generic.IComparer{`0})">
      <summary>Initializes a new instance of the <see cref="T:System.Collections.Generic.SortedList`2" /> class that contains elements copied from the specified <see cref="T:System.Collections.Generic.IDictionary`2" />, has sufficient capacity to accommodate the number of elements copied, and uses the specified <see cref="T:System.Collections.Generic.IComparer`1" />.</summary>
      <param name="dictionary">The <see cref="T:System.Collections.Generic.IDictionary`2" /> whose elements are copied to the new <see cref="T:System.Collections.Generic.SortedList`2" />.</param>
      <param name="comparer">The <see cref="T:System.Collections.Generic.IComparer`1" /> implementation to use when comparing keys.-or-null to use the default <see cref="T:System.Collections.Generic.Comparer`1" /> for the type of the key.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="dictionary" /> is null.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="dictionary" /> contains one or more duplicate keys.</exception>
    </member>
    <member name="M:System.Collections.Generic.SortedList`2.#ctor(System.Int32)">
      <summary>Initializes a new instance of the <see cref="T:System.Collections.Generic.SortedList`2" /> class that is empty, has the specified initial capacity, and uses the default <see cref="T:System.Collections.Generic.IComparer`1" />.</summary>
      <param name="capacity">The initial number of elements that the <see cref="T:System.Collections.Generic.SortedList`2" /> can contain.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="capacity" /> is less than zero.</exception>
    </member>
    <member name="M:System.Collections.Generic.SortedList`2.#ctor(System.Int32,System.Collections.Generic.IComparer{`0})">
      <summary>Initializes a new instance of the <see cref="T:System.Collections.Generic.SortedList`2" /> class that is empty, has the specified initial capacity, and uses the specified <see cref="T:System.Collections.Generic.IComparer`1" />.</summary>
      <param name="capacity">The initial number of elements that the <see cref="T:System.Collections.Generic.SortedList`2" /> can contain.</param>
      <param name="comparer">The <see cref="T:System.Collections.Generic.IComparer`1" /> implementation to use when comparing keys.-or-null to use the default <see cref="T:System.Collections.Generic.Comparer`1" /> for the type of the key.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="capacity" /> is less than zero.</exception>
    </member>
    <member name="M:System.Collections.Generic.SortedList`2.Add(`0,`1)">
      <summary>Adds an element with the specified key and value into the <see cref="T:System.Collections.Generic.SortedList`2" />.</summary>
      <param name="key">The key of the element to add.</param>
      <param name="value">The value of the element to add. The value can be null for reference types.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="key" /> is null.</exception>
      <exception cref="T:System.ArgumentException">An element with the same key already exists in the <see cref="T:System.Collections.Generic.SortedList`2" />.</exception>
    </member>
    <member name="P:System.Collections.Generic.SortedList`2.Capacity">
      <summary>Gets or sets the number of elements that the <see cref="T:System.Collections.Generic.SortedList`2" /> can contain.</summary>
      <returns>The number of elements that the <see cref="T:System.Collections.Generic.SortedList`2" /> can contain.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <see cref="P:System.Collections.Generic.SortedList`2.Capacity" /> is set to a value that is less than <see cref="P:System.Collections.Generic.SortedList`2.Count" />.</exception>
      <exception cref="T:System.OutOfMemoryException">There is not enough memory available on the system.</exception>
    </member>
    <member name="M:System.Collections.Generic.SortedList`2.Clear">
      <summary>Removes all elements from the <see cref="T:System.Collections.Generic.SortedList`2" />.</summary>
    </member>
    <member name="P:System.Collections.Generic.SortedList`2.Comparer">
      <summary>Gets the <see cref="T:System.Collections.Generic.IComparer`1" /> for the sorted list. </summary>
      <returns>The <see cref="T:System.IComparable`1" /> for the current <see cref="T:System.Collections.Generic.SortedList`2" />.</returns>
    </member>
    <member name="M:System.Collections.Generic.SortedList`2.ContainsKey(`0)">
      <summary>Determines whether the <see cref="T:System.Collections.Generic.SortedList`2" /> contains a specific key.</summary>
      <returns>true if the <see cref="T:System.Collections.Generic.SortedList`2" /> contains an element with the specified key; otherwise, false.</returns>
      <param name="key">The key to locate in the <see cref="T:System.Collections.Generic.SortedList`2" />.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="key" /> is null.</exception>
    </member>
    <member name="M:System.Collections.Generic.SortedList`2.ContainsValue(`1)">
      <summary>Determines whether the <see cref="T:System.Collections.Generic.SortedList`2" /> contains a specific value.</summary>
      <returns>true if the <see cref="T:System.Collections.Generic.SortedList`2" /> contains an element with the specified value; otherwise, false.</returns>
      <param name="value">The value to locate in the <see cref="T:System.Collections.Generic.SortedList`2" />. The value can be null for reference types.</param>
    </member>
    <member name="P:System.Collections.Generic.SortedList`2.Count">
      <summary>Gets the number of key/value pairs contained in the <see cref="T:System.Collections.Generic.SortedList`2" />.</summary>
      <returns>The number of key/value pairs contained in the <see cref="T:System.Collections.Generic.SortedList`2" />.</returns>
    </member>
    <member name="M:System.Collections.Generic.SortedList`2.GetEnumerator">
      <summary>Returns an enumerator that iterates through the <see cref="T:System.Collections.Generic.SortedList`2" />.</summary>
      <returns>An <see cref="T:System.Collections.Generic.IEnumerator`1" /> of type <see cref="T:System.Collections.Generic.KeyValuePair`2" /> for the <see cref="T:System.Collections.Generic.SortedList`2" />.</returns>
    </member>
    <member name="M:System.Collections.Generic.SortedList`2.IndexOfKey(`0)">
      <summary>Searches for the specified key and returns the zero-based index within the entire <see cref="T:System.Collections.Generic.SortedList`2" />.</summary>
      <returns>The zero-based index of <paramref name="key" /> within the entire <see cref="T:System.Collections.Generic.SortedList`2" />, if found; otherwise, -1.</returns>
      <param name="key">The key to locate in the <see cref="T:System.Collections.Generic.SortedList`2" />.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="key" /> is null.</exception>
    </member>
    <member name="M:System.Collections.Generic.SortedList`2.IndexOfValue(`1)">
      <summary>Searches for the specified value and returns the zero-based index of the first occurrence within the entire <see cref="T:System.Collections.Generic.SortedList`2" />.</summary>
      <returns>The zero-based index of the first occurrence of <paramref name="value" /> within the entire <see cref="T:System.Collections.Generic.SortedList`2" />, if found; otherwise, -1.</returns>
      <param name="value">The value to locate in the <see cref="T:System.Collections.Generic.SortedList`2" />.  The value can be null for reference types.</param>
    </member>
    <member name="P:System.Collections.Generic.SortedList`2.Item(`0)">
      <summary>Gets or sets the value associated with the specified key.</summary>
      <returns>The value associated with the specified key. If the specified key is not found, a get operation throws a <see cref="T:System.Collections.Generic.KeyNotFoundException" /> and a set operation creates a new element using the specified key.</returns>
      <param name="key">The key whose value to get or set.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="key" /> is null.</exception>
      <exception cref="T:System.Collections.Generic.KeyNotFoundException">The property is retrieved and <paramref name="key" /> does not exist in the collection.</exception>
    </member>
    <member name="P:System.Collections.Generic.SortedList`2.Keys">
      <summary>Gets a collection containing the keys in the <see cref="T:System.Collections.Generic.SortedList`2" />.</summary>
      <returns>A <see cref="T:System.Collections.Generic.IList`1" /> containing the keys in the <see cref="T:System.Collections.Generic.SortedList`2" />.</returns>
    </member>
    <member name="M:System.Collections.Generic.SortedList`2.Remove(`0)">
      <summary>Removes the element with the specified key from the <see cref="T:System.Collections.Generic.SortedList`2" />.</summary>
      <returns>true if the element is successfully removed; otherwise, false.  This method also returns false if <paramref name="key" /> was not found in the original <see cref="T:System.Collections.Generic.SortedList`2" />.</returns>
      <param name="key">The key of the element to remove.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="key" /> is null.</exception>
    </member>
    <member name="M:System.Collections.Generic.SortedList`2.RemoveAt(System.Int32)">
      <summary>Removes the element at the specified index of the <see cref="T:System.Collections.Generic.SortedList`2" />.</summary>
      <param name="index">The zero-based index of the element to remove.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> is less than zero.-or-<paramref name="index" /> is equal to or greater than <see cref="P:System.Collections.Generic.SortedList`2.Count" />.</exception>
    </member>
    <member name="M:System.Collections.Generic.SortedList`2.System#Collections#Generic#ICollection{T}#Add(System.Collections.Generic.KeyValuePair{`0,`1})">
      <summary>Adds a key/value pair to the <see cref="T:System.Collections.Generic.ICollection`1" />.</summary>
      <param name="keyValuePair">The <see cref="T:System.Collections.Generic.KeyValuePair`2" /> to add to the <see cref="T:System.Collections.Generic.ICollection`1" />.</param>
    </member>
    <member name="M:System.Collections.Generic.SortedList`2.System#Collections#Generic#ICollection{T}#Contains(System.Collections.Generic.KeyValuePair{`0,`1})">
      <summary>Determines whether the <see cref="T:System.Collections.Generic.ICollection`1" /> contains a specific element.</summary>
      <returns>true if <paramref name="keyValuePair" /> is found in the <see cref="T:System.Collections.Generic.ICollection`1" />; otherwise, false.</returns>
      <param name="keyValuePair">The <see cref="T:System.Collections.Generic.KeyValuePair`2" /> to locate in the <see cref="T:System.Collections.Generic.ICollection`1" />.</param>
    </member>
    <member name="M:System.Collections.Generic.SortedList`2.System#Collections#Generic#ICollection{T}#CopyTo(System.Collections.Generic.KeyValuePair{`0,`1}[],System.Int32)">
      <summary>Copies the elements of the <see cref="T:System.Collections.Generic.ICollection`1" /> to an <see cref="T:System.Array" />, starting at a particular <see cref="T:System.Array" /> index.</summary>
      <param name="array">The one-dimensional <see cref="T:System.Array" /> that is the destination of the elements copied from <see cref="T:System.Collections.Generic.ICollection`1" />. The <see cref="T:System.Array" /> must have zero-based indexing.</param>
      <param name="arrayIndex">The zero-based index in <paramref name="array" /> at which copying begins.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="array" /> is null. </exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="arrayIndex" /> is less than zero. </exception>
      <exception cref="T:System.ArgumentException">The number of elements in the source <see cref="T:System.Collections.Generic.ICollection`1" /> is greater than the available space from <paramref name="arrayIndex" /> to the end of the destination <paramref name="array" />.</exception>
    </member>
    <member name="P:System.Collections.Generic.SortedList`2.System#Collections#Generic#ICollection{T}#IsReadOnly">
      <summary>Gets a value indicating whether the <see cref="T:System.Collections.Generic.ICollection`1" /> is read-only.</summary>
      <returns>true if the <see cref="T:System.Collections.Generic.ICollection`1" /> is read-only; otherwise, false.  In the default implementation of <see cref="T:System.Collections.Generic.SortedList`2" />, this property always returns false.</returns>
    </member>
    <member name="M:System.Collections.Generic.SortedList`2.System#Collections#Generic#ICollection{T}#Remove(System.Collections.Generic.KeyValuePair{`0,`1})">
      <summary>Removes the first occurrence of a specific key/value pair from the <see cref="T:System.Collections.Generic.ICollection`1" />.</summary>
      <returns>true if <paramref name="keyValuePair" /> was successfully removed from the <see cref="T:System.Collections.Generic.ICollection`1" />; otherwise, false. This method also returns false if <paramref name="keyValuePair" /> was not found in the original <see cref="T:System.Collections.Generic.ICollection`1" />.</returns>
      <param name="keyValuePair">The <see cref="T:System.Collections.Generic.KeyValuePair`2" /> to remove from the <see cref="T:System.Collections.Generic.ICollection`1" />.</param>
    </member>
    <member name="P:System.Collections.Generic.SortedList`2.System#Collections#Generic#IDictionary{TKey@TValue}#Keys">
      <summary>Gets an <see cref="T:System.Collections.Generic.ICollection`1" /> containing the keys of the <see cref="T:System.Collections.Generic.IDictionary`2" />.</summary>
      <returns>An <see cref="T:System.Collections.Generic.ICollection`1" /> containing the keys of the <see cref="T:System.Collections.Generic.IDictionary`2" />.</returns>
    </member>
    <member name="P:System.Collections.Generic.SortedList`2.System#Collections#Generic#IDictionary{TKey@TValue}#Values">
      <summary>Gets an <see cref="T:System.Collections.Generic.ICollection`1" /> containing the values in the <see cref="T:System.Collections.Generic.IDictionary`2" />.</summary>
      <returns>An <see cref="T:System.Collections.Generic.ICollection`1" /> containing the values in the <see cref="T:System.Collections.Generic.IDictionary`2" />.</returns>
    </member>
    <member name="M:System.Collections.Generic.SortedList`2.System#Collections#Generic#IEnumerable{T}#GetEnumerator">
      <summary>Returns an enumerator that iterates through a collection.</summary>
      <returns>An <see cref="T:System.Collections.Generic.IEnumerator`1" /> that can be used to iterate through the collection.</returns>
    </member>
    <member name="M:System.Collections.Generic.SortedList`2.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
      <summary>Copies the elements of the <see cref="T:System.Collections.ICollection" /> to an <see cref="T:System.Array" />, starting at a particular <see cref="T:System.Array" /> index.</summary>
      <param name="array">The one-dimensional <see cref="T:System.Array" /> that is the destination of the elements copied from <see cref="T:System.Collections.ICollection" />. The <see cref="T:System.Array" /> must have zero-based indexing.</param>
      <param name="arrayIndex">The zero-based index in <paramref name="array" /> at which copying begins.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="array" /> is null.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="arrayIndex" /> is less than zero.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="array" /> is multidimensional.-or-<paramref name="array" /> does not have zero-based indexing.-or-The number of elements in the source <see cref="T:System.Collections.ICollection" /> is greater than the available space from <paramref name="arrayIndex" /> to the end of the destination <paramref name="array" />.-or-The type of the source <see cref="T:System.Collections.ICollection" /> cannot be cast automatically to the type of the destination <paramref name="array" />.</exception>
    </member>
    <member name="P:System.Collections.Generic.SortedList`2.System#Collections#ICollection#IsSynchronized">
      <summary>Gets a value indicating whether access to the <see cref="T:System.Collections.ICollection" /> is synchronized (thread safe).</summary>
      <returns>true if access to the <see cref="T:System.Collections.ICollection" /> is synchronized (thread safe); otherwise, false.  In the default implementation of <see cref="T:System.Collections.Generic.SortedList`2" />, this property always returns false.</returns>
    </member>
    <member name="P:System.Collections.Generic.SortedList`2.System#Collections#ICollection#SyncRoot">
      <summary>Gets an object that can be used to synchronize access to the <see cref="T:System.Collections.ICollection" />.</summary>
      <returns>An object that can be used to synchronize access to the <see cref="T:System.Collections.ICollection" />.  In the default implementation of <see cref="T:System.Collections.Generic.SortedList`2" />, this property always returns the current instance.</returns>
    </member>
    <member name="M:System.Collections.Generic.SortedList`2.System#Collections#IDictionary#Add(System.Object,System.Object)">
      <summary>Adds an element with the provided key and value to the <see cref="T:System.Collections.IDictionary" />.</summary>
      <param name="key">The <see cref="T:System.Object" /> to use as the key of the element to add.</param>
      <param name="value">The <see cref="T:System.Object" /> to use as the value of the element to add.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="key" /> is null.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="key" /> is of a type that is not assignable to the key type <paramref name="TKey" /> of the <see cref="T:System.Collections.IDictionary" />.-or-<paramref name="value" /> is of a type that is not assignable to the value type <paramref name="TValue" /> of the <see cref="T:System.Collections.IDictionary" />.-or-An element with the same key already exists in the <see cref="T:System.Collections.IDictionary" />.</exception>
    </member>
    <member name="M:System.Collections.Generic.SortedList`2.System#Collections#IDictionary#Contains(System.Object)">
      <summary>Determines whether the <see cref="T:System.Collections.IDictionary" /> contains an element with the specified key.</summary>
      <returns>true if the <see cref="T:System.Collections.IDictionary" /> contains an element with the key; otherwise, false.</returns>
      <param name="key">The key to locate in the <see cref="T:System.Collections.IDictionary" />.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="key" /> is null.</exception>
    </member>
    <member name="M:System.Collections.Generic.SortedList`2.System#Collections#IDictionary#GetEnumerator">
      <summary>Returns an <see cref="T:System.Collections.IDictionaryEnumerator" /> for the <see cref="T:System.Collections.IDictionary" />.</summary>
      <returns>An <see cref="T:System.Collections.IDictionaryEnumerator" /> for the <see cref="T:System.Collections.IDictionary" />.</returns>
    </member>
    <member name="P:System.Collections.Generic.SortedList`2.System#Collections#IDictionary#IsFixedSize">
      <summary>Gets a value indicating whether the <see cref="T:System.Collections.IDictionary" /> has a fixed size.</summary>
      <returns>true if the <see cref="T:System.Collections.IDictionary" /> has a fixed size; otherwise, false.  In the default implementation of <see cref="T:System.Collections.Generic.SortedList`2" />, this property always returns false.</returns>
    </member>
    <member name="P:System.Collections.Generic.SortedList`2.System#Collections#IDictionary#IsReadOnly">
      <summary>Gets a value indicating whether the <see cref="T:System.Collections.IDictionary" /> is read-only.</summary>
      <returns>true if the <see cref="T:System.Collections.IDictionary" /> is read-only; otherwise, false.  In the default implementation of <see cref="T:System.Collections.Generic.SortedList`2" />, this property always returns false.</returns>
    </member>
    <member name="P:System.Collections.Generic.SortedList`2.System#Collections#IDictionary#Item(System.Object)">
      <summary>Gets or sets the element with the specified key.</summary>
      <returns>The element with the specified key, or null if <paramref name="key" /> is not in the dictionary or <paramref name="key" /> is of a type that is not assignable to the key type <paramref name="TKey" /> of the <see cref="T:System.Collections.Generic.SortedList`2" />.</returns>
      <param name="key">The key of the element to get or set.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="key" /> is null.</exception>
      <exception cref="T:System.ArgumentException">A value is being assigned, and <paramref name="key" /> is of a type that is not assignable to the key type <paramref name="TKey" /> of the <see cref="T:System.Collections.Generic.SortedList`2" />.-or-A value is being assigned, and <paramref name="value" /> is of a type that is not assignable to the value type <paramref name="TValue" /> of the <see cref="T:System.Collections.Generic.SortedList`2" />.</exception>
    </member>
    <member name="P:System.Collections.Generic.SortedList`2.System#Collections#IDictionary#Keys">
      <summary>Gets an <see cref="T:System.Collections.ICollection" /> containing the keys of the <see cref="T:System.Collections.IDictionary" />.</summary>
      <returns>An <see cref="T:System.Collections.ICollection" /> containing the keys of the <see cref="T:System.Collections.IDictionary" />.</returns>
    </member>
    <member name="M:System.Collections.Generic.SortedList`2.System#Collections#IDictionary#Remove(System.Object)">
      <summary>Removes the element with the specified key from the <see cref="T:System.Collections.IDictionary" />.</summary>
      <param name="key">The key of the element to remove.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="key" /> is null.</exception>
    </member>
    <member name="P:System.Collections.Generic.SortedList`2.System#Collections#IDictionary#Values">
      <summary>Gets an <see cref="T:System.Collections.ICollection" /> containing the values in the <see cref="T:System.Collections.IDictionary" />.</summary>
      <returns>An <see cref="T:System.Collections.ICollection" /> containing the values in the <see cref="T:System.Collections.IDictionary" />.</returns>
    </member>
    <member name="M:System.Collections.Generic.SortedList`2.System#Collections#IEnumerable#GetEnumerator">
      <summary>Returns an enumerator that iterates through a collection.</summary>
      <returns>An <see cref="T:System.Collections.IEnumerator" /> that can be used to iterate through the collection.</returns>
    </member>
    <member name="M:System.Collections.Generic.SortedList`2.TrimExcess">
      <summary>Sets the capacity to the actual number of elements in the <see cref="T:System.Collections.Generic.SortedList`2" />, if that number is less than 90 percent of current capacity.</summary>
    </member>
    <member name="M:System.Collections.Generic.SortedList`2.TryGetValue(`0,`1@)">
      <summary>Gets the value associated with the specified key.</summary>
      <returns>true if the <see cref="T:System.Collections.Generic.SortedList`2" /> contains an element with the specified key; otherwise, false.</returns>
      <param name="key">The key whose value to get.</param>
      <param name="value">When this method returns, the value associated with the specified key, if the key is found; otherwise, the default value for the type of the <paramref name="value" /> parameter. This parameter is passed uninitialized.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="key" /> is null.</exception>
    </member>
    <member name="P:System.Collections.Generic.SortedList`2.Values">
      <summary>Gets a collection containing the values in the <see cref="T:System.Collections.Generic.SortedList`2" />.</summary>
      <returns>A <see cref="T:System.Collections.Generic.IList`1" /> containing the values in the <see cref="T:System.Collections.Generic.SortedList`2" />.</returns>
    </member>
    <member name="T:System.Collections.Generic.SortedSet`1">
      <summary>Represents a collection of objects that is maintained in sorted order.</summary>
      <typeparam name="T">The type of elements in the set.</typeparam>
    </member>
    <member name="M:System.Collections.Generic.SortedSet`1.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Collections.Generic.SortedSet`1" /> class. </summary>
    </member>
    <member name="M:System.Collections.Generic.SortedSet`1.#ctor(System.Collections.Generic.IComparer{`0})">
      <summary>Initializes a new instance of the <see cref="T:System.Collections.Generic.SortedSet`1" /> class that uses a specified comparer.</summary>
      <param name="comparer">The default comparer to use for comparing objects. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="comparer" /> is null.</exception>
    </member>
    <member name="M:System.Collections.Generic.SortedSet`1.#ctor(System.Collections.Generic.IEnumerable{`0})">
      <summary>Initializes a new instance of the <see cref="T:System.Collections.Generic.SortedSet`1" /> class that contains elements copied from a specified enumerable collection.</summary>
      <param name="collection">The enumerable collection to be copied. </param>
    </member>
    <member name="M:System.Collections.Generic.SortedSet`1.#ctor(System.Collections.Generic.IEnumerable{`0},System.Collections.Generic.IComparer{`0})">
      <summary>Initializes a new instance of the <see cref="T:System.Collections.Generic.SortedSet`1" /> class that contains elements copied from a specified enumerable collection and that uses a specified comparer.</summary>
      <param name="collection">The enumerable collection to be copied. </param>
      <param name="comparer">The default comparer to use for comparing objects. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="collection" /> is null.</exception>
    </member>
    <member name="M:System.Collections.Generic.SortedSet`1.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Initializes a new instance of the <see cref="T:System.Collections.Generic.SortedSet`1" /> class that contains serialized data.</summary>
      <param name="info">The object that contains the information that is required to serialize the <see cref="T:System.Collections.Generic.SortedSet`1" /> object.</param>
      <param name="context">The structure that contains the source and destination of the serialized stream associated with the <see cref="T:System.Collections.Generic.SortedSet`1" /> object.</param>
    </member>
    <member name="M:System.Collections.Generic.SortedSet`1.Add(`0)">
      <summary>Adds an element to the set and returns a value that indicates if it was successfully added.</summary>
      <returns>true if <paramref name="item" /> is added to the set; otherwise, false. </returns>
      <param name="item">The element to add to the set.</param>
    </member>
    <member name="M:System.Collections.Generic.SortedSet`1.Clear">
      <summary>Removes all elements from the set.</summary>
    </member>
    <member name="P:System.Collections.Generic.SortedSet`1.Comparer">
      <summary>Gets the <see cref="T:System.Collections.Generic.IEqualityComparer`1" /> object that is used to determine equality for the values in the <see cref="T:System.Collections.Generic.SortedSet`1" />.</summary>
      <returns>The comparer that is used to determine equality for the values in the <see cref="T:System.Collections.Generic.SortedSet`1" />.</returns>
    </member>
    <member name="M:System.Collections.Generic.SortedSet`1.Contains(`0)">
      <summary>Determines whether the set contains a specific element.</summary>
      <returns>true if the set contains <paramref name="item" />; otherwise, false.</returns>
      <param name="item">The element to locate in the set.</param>
    </member>
    <member name="M:System.Collections.Generic.SortedSet`1.CopyTo(`0[])">
      <summary>Copies the complete <see cref="T:System.Collections.Generic.SortedSet`1" /> to a compatible one-dimensional array, starting at the beginning of the target array.</summary>
      <param name="array">A one-dimensional array that is the destination of the elements copied from the <see cref="T:System.Collections.Generic.SortedSet`1" />.</param>
      <exception cref="T:System.ArgumentException">The number of elements in the source <see cref="T:System.Collections.Generic.SortedSet`1" /> exceeds the number of elements that the destination array can contain. </exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="array" /> is null.</exception>
    </member>
    <member name="M:System.Collections.Generic.SortedSet`1.CopyTo(`0[],System.Int32)">
      <summary>Copies the complete <see cref="T:System.Collections.Generic.SortedSet`1" /> to a compatible one-dimensional array, starting at the specified array index.</summary>
      <param name="array">A one-dimensional array that is the destination of the elements copied from the <see cref="T:System.Collections.Generic.SortedSet`1" />. The array must have zero-based indexing.</param>
      <param name="index">The zero-based index in <paramref name="array" /> at which copying begins.</param>
      <exception cref="T:System.ArgumentException">The number of elements in the source array is greater than the available space from <paramref name="index" /> to the end of the destination array.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="array" /> is null.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> is less than zero.</exception>
    </member>
    <member name="M:System.Collections.Generic.SortedSet`1.CopyTo(`0[],System.Int32,System.Int32)">
      <summary>Copies a specified number of elements from <see cref="T:System.Collections.Generic.SortedSet`1" /> to a compatible one-dimensional array, starting at the specified array index.</summary>
      <param name="array">A one-dimensional array that is the destination of the elements copied from the <see cref="T:System.Collections.Generic.SortedSet`1" />. The array must have zero-based indexing.</param>
      <param name="index">The zero-based index in <paramref name="array" /> at which copying begins.</param>
      <param name="count">The number of elements to copy.</param>
      <exception cref="T:System.ArgumentException">The number of elements in the source array is greater than the available space from <paramref name="index" /> to the end of the destination array.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="array" /> is null.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> is less than zero.-or-<paramref name="count" /> is less than zero.</exception>
    </member>
    <member name="P:System.Collections.Generic.SortedSet`1.Count">
      <summary>Gets the number of elements in the <see cref="T:System.Collections.Generic.SortedSet`1" />.</summary>
      <returns>The number of elements in the <see cref="T:System.Collections.Generic.SortedSet`1" />.</returns>
    </member>
    <member name="M:System.Collections.Generic.SortedSet`1.CreateSetComparer">
      <summary>Returns an <see cref="T:System.Collections.IEqualityComparer" /> object that can be used to create a collection that contains individual sets.</summary>
      <returns>A comparer for creating a collection of sets.</returns>
    </member>
    <member name="M:System.Collections.Generic.SortedSet`1.CreateSetComparer(System.Collections.Generic.IEqualityComparer{`0})">
      <summary>Returns an <see cref="T:System.Collections.IEqualityComparer" /> object, according to a specified comparer, that can be used to create a collection that contains individual sets.</summary>
      <returns>A comparer for creating a collection of sets.</returns>
      <param name="memberEqualityComparer">The comparer to use for creating the returned comparer.</param>
    </member>
    <member name="M:System.Collections.Generic.SortedSet`1.ExceptWith(System.Collections.Generic.IEnumerable{`0})">
      <summary>Removes all elements that are in a specified collection from the current <see cref="T:System.Collections.Generic.SortedSet`1" /> object.</summary>
      <param name="other">The collection of items to remove from the <see cref="T:System.Collections.Generic.SortedSet`1" /> object.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="other" /> is null.</exception>
    </member>
    <member name="M:System.Collections.Generic.SortedSet`1.GetEnumerator">
      <summary>Returns an enumerator that iterates through the <see cref="T:System.Collections.Generic.SortedSet`1" />.</summary>
      <returns>An enumerator that iterates through the <see cref="T:System.Collections.Generic.SortedSet`1" />.</returns>
    </member>
    <member name="M:System.Collections.Generic.SortedSet`1.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Implements the <see cref="T:System.Runtime.Serialization.ISerializable" /> interface and returns the data that you must have to serialize a <see cref="T:System.Collections.Generic.SortedSet`1" /> object.</summary>
      <param name="info">A <see cref="T:System.Runtime.Serialization.SerializationInfo" /> object that contains the information that is required to serialize the <see cref="T:System.Collections.Generic.SortedSet`1" /> object.</param>
      <param name="context">A <see cref="T:System.Runtime.Serialization.StreamingContext" /> structure that contains the source and destination of the serialized stream associated with the <see cref="T:System.Collections.Generic.SortedSet`1" /> object.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="info" /> is null.</exception>
    </member>
    <member name="M:System.Collections.Generic.SortedSet`1.GetViewBetween(`0,`0)">
      <summary>Returns a view of a subset in a <see cref="T:System.Collections.Generic.SortedSet`1" />.</summary>
      <returns>A subset view that contains only the values in the specified range.</returns>
      <param name="lowerValue">The lowest desired value in the view.</param>
      <param name="upperValue">The highest desired value in the view. </param>
      <exception cref="T:System.ArgumentException">
        <paramref name="lowerValue" /> is more than <paramref name="upperValue" /> according to the comparer.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">A tried operation on the view was outside the range specified by <paramref name="lowerValue" /> and <paramref name="upperValue" />.</exception>
    </member>
    <member name="M:System.Collections.Generic.SortedSet`1.IntersectWith(System.Collections.Generic.IEnumerable{`0})">
      <summary>Modifies the current <see cref="T:System.Collections.Generic.SortedSet`1" /> object so that it contains only elements that are also in a specified collection.</summary>
      <param name="other">The collection to compare to the current <see cref="T:System.Collections.Generic.SortedSet`1" /> object.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="other" /> is null.</exception>
    </member>
    <member name="M:System.Collections.Generic.SortedSet`1.IsProperSubsetOf(System.Collections.Generic.IEnumerable{`0})">
      <summary>Determines whether a <see cref="T:System.Collections.Generic.SortedSet`1" /> object is a proper subset of the specified collection.</summary>
      <returns>true if the <see cref="T:System.Collections.Generic.SortedSet`1" /> object is a proper subset of <paramref name="other" />; otherwise, false.</returns>
      <param name="other">The collection to compare to the current <see cref="T:System.Collections.Generic.SortedSet`1" /> object.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="other" /> is null.</exception>
    </member>
    <member name="M:System.Collections.Generic.SortedSet`1.IsProperSupersetOf(System.Collections.Generic.IEnumerable{`0})">
      <summary>Determines whether a <see cref="T:System.Collections.Generic.SortedSet`1" /> object is a proper superset of the specified collection.</summary>
      <returns>true if the <see cref="T:System.Collections.Generic.SortedSet`1" /> object is a proper superset of <paramref name="other" />; otherwise, false.</returns>
      <param name="other">The collection to compare to the current <see cref="T:System.Collections.Generic.SortedSet`1" /> object. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="other" /> is null.</exception>
    </member>
    <member name="M:System.Collections.Generic.SortedSet`1.IsSubsetOf(System.Collections.Generic.IEnumerable{`0})">
      <summary>Determines whether a <see cref="T:System.Collections.Generic.SortedSet`1" /> object is a subset of the specified collection.</summary>
      <returns>true if the current <see cref="T:System.Collections.Generic.SortedSet`1" /> object is a subset of <paramref name="other" />; otherwise, false.</returns>
      <param name="other">The collection to compare to the current <see cref="T:System.Collections.Generic.SortedSet`1" /> object.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="other" /> is null.</exception>
    </member>
    <member name="M:System.Collections.Generic.SortedSet`1.IsSupersetOf(System.Collections.Generic.IEnumerable{`0})">
      <summary>Determines whether a <see cref="T:System.Collections.Generic.SortedSet`1" /> object is a superset of the specified collection.</summary>
      <returns>true if the <see cref="T:System.Collections.Generic.SortedSet`1" /> object is a superset of <paramref name="other" />; otherwise, false.</returns>
      <param name="other">The collection to compare to the current <see cref="T:System.Collections.Generic.SortedSet`1" /> object. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="other" /> is null.</exception>
    </member>
    <member name="P:System.Collections.Generic.SortedSet`1.Max">
      <summary>Gets the maximum value in the <see cref="T:System.Collections.Generic.SortedSet`1" />, as defined by the comparer.</summary>
      <returns>The maximum value in the set.</returns>
    </member>
    <member name="P:System.Collections.Generic.SortedSet`1.Min">
      <summary>Gets the minimum value in the <see cref="T:System.Collections.Generic.SortedSet`1" />, as defined by the comparer.</summary>
      <returns>The minimum value in the set.</returns>
    </member>
    <member name="M:System.Collections.Generic.SortedSet`1.OnDeserialization(System.Object)">
      <summary>Implements the <see cref="T:System.Runtime.Serialization.ISerializable" /> interface, and raises the deserialization event when the deserialization is completed.</summary>
      <param name="sender">The source of the deserialization event.</param>
      <exception cref="T:System.Runtime.Serialization.SerializationException">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> object associated with the current <see cref="T:System.Collections.Generic.SortedSet`1" /> object is invalid.</exception>
    </member>
    <member name="M:System.Collections.Generic.SortedSet`1.Overlaps(System.Collections.Generic.IEnumerable{`0})">
      <summary>Determines whether the current <see cref="T:System.Collections.Generic.SortedSet`1" /> object and a specified collection share common elements.</summary>
      <returns>true if the <see cref="T:System.Collections.Generic.SortedSet`1" /> object and <paramref name="other" /> share at least one common element; otherwise, false.</returns>
      <param name="other">The collection to compare to the current <see cref="T:System.Collections.Generic.SortedSet`1" /> object.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="other" /> is null.</exception>
    </member>
    <member name="M:System.Collections.Generic.SortedSet`1.Remove(`0)">
      <summary>Removes a specified item from the <see cref="T:System.Collections.Generic.SortedSet`1" />.</summary>
      <returns>true if the element is found and successfully removed; otherwise, false. </returns>
      <param name="item">The element to remove.</param>
    </member>
    <member name="M:System.Collections.Generic.SortedSet`1.RemoveWhere(System.Predicate{`0})">
      <summary>Removes all elements that match the conditions defined by the specified predicate from a <see cref="T:System.Collections.Generic.SortedSet`1" />.</summary>
      <returns>The number of elements that were removed from the <see cref="T:System.Collections.Generic.SortedSet`1" /> collection.. </returns>
      <param name="match">The delegate that defines the conditions of the elements to remove.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="match" /> is null.</exception>
    </member>
    <member name="M:System.Collections.Generic.SortedSet`1.Reverse">
      <summary>Returns an <see cref="T:System.Collections.Generic.IEnumerable`1" /> that iterates over the <see cref="T:System.Collections.Generic.SortedSet`1" /> in reverse order.</summary>
      <returns>An enumerator that iterates over the <see cref="T:System.Collections.Generic.SortedSet`1" /> in reverse order.</returns>
    </member>
    <member name="M:System.Collections.Generic.SortedSet`1.SetEquals(System.Collections.Generic.IEnumerable{`0})">
      <summary>Determines whether the current <see cref="T:System.Collections.Generic.SortedSet`1" /> object and the specified collection contain the same elements.</summary>
      <returns>true if the current <see cref="T:System.Collections.Generic.SortedSet`1" /> object is equal to <paramref name="other" />; otherwise, false.</returns>
      <param name="other">The collection to compare to the current <see cref="T:System.Collections.Generic.SortedSet`1" /> object.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="other" /> is null.</exception>
    </member>
    <member name="M:System.Collections.Generic.SortedSet`1.SymmetricExceptWith(System.Collections.Generic.IEnumerable{`0})">
      <summary>Modifies the current <see cref="T:System.Collections.Generic.SortedSet`1" /> object so that it contains only elements that are present either in the current object or in the specified collection, but not both.</summary>
      <param name="other">The collection to compare to the current <see cref="T:System.Collections.Generic.SortedSet`1" /> object.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="other" /> is null.</exception>
    </member>
    <member name="M:System.Collections.Generic.SortedSet`1.System#Collections#Generic#ICollection{T}#Add(`0)">
      <summary>Adds an item to an <see cref="T:System.Collections.Generic.ICollection`1" /> object.</summary>
      <param name="item">The object to add to the <see cref="T:System.Collections.Generic.ICollection`1" /> object.</param>
      <exception cref="T:System.NotSupportedException">The <see cref="T:System.Collections.Generic.ICollection`1" /> is read-only.</exception>
    </member>
    <member name="P:System.Collections.Generic.SortedSet`1.System#Collections#Generic#ICollection{T}#IsReadOnly">
      <summary>Gets a value that indicates whether a <see cref="T:System.Collections.ICollection" /> is read-only.</summary>
      <returns>true if the collection is read-only; otherwise, false.</returns>
    </member>
    <member name="M:System.Collections.Generic.SortedSet`1.System#Collections#Generic#IEnumerable{T}#GetEnumerator">
      <summary>Returns an enumerator that iterates through a collection.</summary>
      <returns>An enumerator that can be used to iterate through the collection.</returns>
    </member>
    <member name="M:System.Collections.Generic.SortedSet`1.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
      <summary>Copies the complete <see cref="T:System.Collections.Generic.SortedSet`1" /> to a compatible one-dimensional array, starting at the specified array index.</summary>
      <param name="array">A one-dimensional array that is the destination of the elements copied from the <see cref="T:System.Collections.Generic.SortedSet`1" />. The array must have zero-based indexing.</param>
      <param name="index">The zero-based index in <paramref name="array" /> at which copying begins.</param>
      <exception cref="T:System.ArgumentException">The number of elements in the source array is greater than the available space from <paramref name="index" /> to the end of the destination array. </exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="array" /> is null.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> is less than zero.</exception>
    </member>
    <member name="P:System.Collections.Generic.SortedSet`1.System#Collections#ICollection#IsSynchronized">
      <summary>Gets a value that indicates whether access to the <see cref="T:System.Collections.ICollection" /> is synchronized (thread safe).</summary>
      <returns>true if access to the <see cref="T:System.Collections.ICollection" /> is synchronized; otherwise, false.</returns>
    </member>
    <member name="P:System.Collections.Generic.SortedSet`1.System#Collections#ICollection#SyncRoot">
      <summary>Gets an object that can be used to synchronize access to the <see cref="T:System.Collections.ICollection" />.</summary>
      <returns>An object that can be used to synchronize access to the <see cref="T:System.Collections.ICollection" />. In the default implementation of <see cref="T:System.Collections.Generic.Dictionary`2.KeyCollection" />, this property always returns the current instance.</returns>
    </member>
    <member name="M:System.Collections.Generic.SortedSet`1.System#Collections#IEnumerable#GetEnumerator">
      <summary>Returns an enumerator that iterates through a collection.</summary>
      <returns>An enumerator that can be used to iterate through the collection.</returns>
    </member>
    <member name="M:System.Collections.Generic.SortedSet`1.System#Runtime#Serialization#IDeserializationCallback#OnDeserialization(System.Object)">
      <summary>Implements the <see cref="T:System.Runtime.Serialization.IDeserializationCallback" /> interface, and raises the deserialization event when the deserialization is completed.</summary>
      <param name="sender">The source of the deserialization event.</param>
      <exception cref="T:System.Runtime.Serialization.SerializationException">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> object associated with the current <see cref="T:System.Collections.Generic.SortedSet`1" /> instance is invalid.</exception>
    </member>
    <member name="M:System.Collections.Generic.SortedSet`1.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Implements the <see cref="T:System.Runtime.Serialization.ISerializable" /> interface, and returns the data that you need to serialize the <see cref="T:System.Collections.Generic.SortedSet`1" /> instance.</summary>
      <param name="info">A <see cref="T:System.Runtime.Serialization.SerializationInfo" /> object that contains the information that is required to serialize the <see cref="T:System.Collections.Generic.SortedSet`1" /> instance.</param>
      <param name="context">A <see cref="T:System.Runtime.Serialization.StreamingContext" /> structure that contains the source and destination of the serialized stream associated with the <see cref="T:System.Collections.Generic.SortedSet`1" /> instance.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="info" /> is null.</exception>
    </member>
    <member name="M:System.Collections.Generic.SortedSet`1.UnionWith(System.Collections.Generic.IEnumerable{`0})">
      <summary>Modifies the current <see cref="T:System.Collections.Generic.SortedSet`1" /> object so that it contains all elements that are present in both the current object and in the specified collection.</summary>
      <param name="other">The collection to compare to the current <see cref="T:System.Collections.Generic.SortedSet`1" /> object.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="other" /> is null.</exception>
    </member>
    <member name="T:System.Collections.Generic.SortedSet`1.Enumerator">
      <summary>Enumerates the elements of a <see cref="T:System.Collections.Generic.SortedSet`1" /> object.</summary>
    </member>
    <member name="P:System.Collections.Generic.SortedSet`1.Enumerator.Current">
      <summary>Gets the element at the current position of the enumerator.</summary>
      <returns>The element in the collection at the current position of the enumerator.</returns>
    </member>
    <member name="M:System.Collections.Generic.SortedSet`1.Enumerator.Dispose">
      <summary>Releases all resources used by the <see cref="T:System.Collections.Generic.SortedSet`1.Enumerator" />. </summary>
    </member>
    <member name="M:System.Collections.Generic.SortedSet`1.Enumerator.MoveNext">
      <summary>Advances the enumerator to the next element of the <see cref="T:System.Collections.Generic.SortedSet`1" /> collection.</summary>
      <returns>true if the enumerator was successfully advanced to the next element; false if the enumerator has passed the end of the collection.</returns>
      <exception cref="T:System.InvalidOperationException">The collection was modified after the enumerator was created. </exception>
    </member>
    <member name="P:System.Collections.Generic.SortedSet`1.Enumerator.System#Collections#IEnumerator#Current">
      <summary>Gets the element at the current position of the enumerator.</summary>
      <returns>The element in the collection at the current position of the enumerator.</returns>
      <exception cref="T:System.InvalidOperationException">The enumerator is positioned before the first element of the collection or after the last element. </exception>
    </member>
    <member name="M:System.Collections.Generic.SortedSet`1.Enumerator.System#Collections#IEnumerator#Reset">
      <summary>Sets the enumerator to its initial position, which is before the first element in the collection.</summary>
      <exception cref="T:System.InvalidOperationException">The collection was modified after the enumerator was created. </exception>
    </member>
    <member name="M:System.Collections.Generic.SortedSet`1.Enumerator.System#Runtime#Serialization#IDeserializationCallback#OnDeserialization(System.Object)">
      <summary>Implements the <see cref="T:System.Runtime.Serialization.ISerializable" /> interface and raises the deserialization event when the deserialization is complete.</summary>
      <param name="sender">The source of the deserialization event.</param>
      <exception cref="T:System.Runtime.Serialization.SerializationException">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> object associated with the current <see cref="T:System.Collections.Generic.SortedSet`1" /> instance is invalid.</exception>
    </member>
    <member name="M:System.Collections.Generic.SortedSet`1.Enumerator.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Implements the <see cref="T:System.Runtime.Serialization.ISerializable" /> interface and returns the data needed to serialize the <see cref="T:System.Collections.Generic.SortedSet`1" /> instance.</summary>
      <param name="info">A <see cref="T:System.Runtime.Serialization.SerializationInfo" /> object that contains the information required to serialize the <see cref="T:System.Collections.Generic.SortedSet`1" /> instance.</param>
      <param name="context">A <see cref="T:System.Runtime.Serialization.StreamingContext" /> object that contains the source and destination of the serialized stream associated with the <see cref="T:System.Collections.Generic.SortedSet`1" /> instance.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="info" /> is null.</exception>
    </member>
    <member name="T:System.Collections.Generic.Stack`1">
      <summary>Represents a variable size last-in-first-out (LIFO) collection of instances of the same arbitrary type.</summary>
      <typeparam name="T">Specifies the type of elements in the stack.</typeparam>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Collections.Generic.Stack`1.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Collections.Generic.Stack`1" /> class that is empty and has the default initial capacity.</summary>
    </member>
    <member name="M:System.Collections.Generic.Stack`1.#ctor(System.Collections.Generic.IEnumerable{`0})">
      <summary>Initializes a new instance of the <see cref="T:System.Collections.Generic.Stack`1" /> class that contains elements copied from the specified collection and has sufficient capacity to accommodate the number of elements copied.</summary>
      <param name="collection">The collection to copy elements from.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="collection" /> is null.</exception>
    </member>
    <member name="M:System.Collections.Generic.Stack`1.#ctor(System.Int32)">
      <summary>Initializes a new instance of the <see cref="T:System.Collections.Generic.Stack`1" /> class that is empty and has the specified initial capacity or the default initial capacity, whichever is greater.</summary>
      <param name="capacity">The initial number of elements that the <see cref="T:System.Collections.Generic.Stack`1" /> can contain.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="capacity" /> is less than zero.</exception>
    </member>
    <member name="M:System.Collections.Generic.Stack`1.Clear">
      <summary>Removes all objects from the <see cref="T:System.Collections.Generic.Stack`1" />.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Collections.Generic.Stack`1.Contains(`0)">
      <summary>Determines whether an element is in the <see cref="T:System.Collections.Generic.Stack`1" />.</summary>
      <returns>true if <paramref name="item" /> is found in the <see cref="T:System.Collections.Generic.Stack`1" />; otherwise, false.</returns>
      <param name="item">The object to locate in the <see cref="T:System.Collections.Generic.Stack`1" />. The value can be null for reference types.</param>
    </member>
    <member name="M:System.Collections.Generic.Stack`1.CopyTo(`0[],System.Int32)">
      <summary>Copies the <see cref="T:System.Collections.Generic.Stack`1" /> to an existing one-dimensional <see cref="T:System.Array" />, starting at the specified array index.</summary>
      <param name="array">The one-dimensional <see cref="T:System.Array" /> that is the destination of the elements copied from <see cref="T:System.Collections.Generic.Stack`1" />. The <see cref="T:System.Array" /> must have zero-based indexing.</param>
      <param name="arrayIndex">The zero-based index in <paramref name="array" /> at which copying begins.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="array" /> is null.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="arrayIndex" /> is less than zero.</exception>
      <exception cref="T:System.ArgumentException">The number of elements in the source <see cref="T:System.Collections.Generic.Stack`1" /> is greater than the available space from <paramref name="arrayIndex" /> to the end of the destination <paramref name="array" />.</exception>
    </member>
    <member name="P:System.Collections.Generic.Stack`1.Count">
      <summary>Gets the number of elements contained in the <see cref="T:System.Collections.Generic.Stack`1" />.</summary>
      <returns>The number of elements contained in the <see cref="T:System.Collections.Generic.Stack`1" />.</returns>
    </member>
    <member name="M:System.Collections.Generic.Stack`1.GetEnumerator">
      <summary>Returns an enumerator for the <see cref="T:System.Collections.Generic.Stack`1" />.</summary>
      <returns>An <see cref="T:System.Collections.Generic.Stack`1.Enumerator" /> for the <see cref="T:System.Collections.Generic.Stack`1" />.</returns>
    </member>
    <member name="M:System.Collections.Generic.Stack`1.Peek">
      <summary>Returns the object at the top of the <see cref="T:System.Collections.Generic.Stack`1" /> without removing it.</summary>
      <returns>The object at the top of the <see cref="T:System.Collections.Generic.Stack`1" />.</returns>
      <exception cref="T:System.InvalidOperationException">The <see cref="T:System.Collections.Generic.Stack`1" /> is empty.</exception>
    </member>
    <member name="M:System.Collections.Generic.Stack`1.Pop">
      <summary>Removes and returns the object at the top of the <see cref="T:System.Collections.Generic.Stack`1" />.</summary>
      <returns>The object removed from the top of the <see cref="T:System.Collections.Generic.Stack`1" />.</returns>
      <exception cref="T:System.InvalidOperationException">The <see cref="T:System.Collections.Generic.Stack`1" /> is empty.</exception>
    </member>
    <member name="M:System.Collections.Generic.Stack`1.Push(`0)">
      <summary>Inserts an object at the top of the <see cref="T:System.Collections.Generic.Stack`1" />.</summary>
      <param name="item">The object to push onto the <see cref="T:System.Collections.Generic.Stack`1" />. The value can be null for reference types.</param>
    </member>
    <member name="M:System.Collections.Generic.Stack`1.System#Collections#Generic#IEnumerable{T}#GetEnumerator">
      <summary>Returns an enumerator that iterates through the collection.</summary>
      <returns>An <see cref="T:System.Collections.Generic.IEnumerator`1" /> that can be used to iterate through the collection.</returns>
    </member>
    <member name="M:System.Collections.Generic.Stack`1.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
      <summary>Copies the elements of the <see cref="T:System.Collections.ICollection" /> to an <see cref="T:System.Array" />, starting at a particular <see cref="T:System.Array" /> index.</summary>
      <param name="array">The one-dimensional <see cref="T:System.Array" /> that is the destination of the elements copied from <see cref="T:System.Collections.ICollection" />. The <see cref="T:System.Array" /> must have zero-based indexing.</param>
      <param name="arrayIndex">The zero-based index in <paramref name="array" /> at which copying begins.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="array" /> is null.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="arrayIndex" /> is less than zero.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="array" /> is multidimensional.-or-<paramref name="array" /> does not have zero-based indexing.-or-The number of elements in the source <see cref="T:System.Collections.ICollection" /> is greater than the available space from <paramref name="arrayIndex" /> to the end of the destination <paramref name="array" />.-or-The type of the source <see cref="T:System.Collections.ICollection" /> cannot be cast automatically to the type of the destination <paramref name="array" />.</exception>
    </member>
    <member name="P:System.Collections.Generic.Stack`1.System#Collections#ICollection#IsSynchronized">
      <summary>Gets a value indicating whether access to the <see cref="T:System.Collections.ICollection" /> is synchronized (thread safe).</summary>
      <returns>true if access to the <see cref="T:System.Collections.ICollection" /> is synchronized (thread safe); otherwise, false.  In the default implementation of <see cref="T:System.Collections.Generic.Stack`1" />, this property always returns false.</returns>
    </member>
    <member name="P:System.Collections.Generic.Stack`1.System#Collections#ICollection#SyncRoot">
      <summary>Gets an object that can be used to synchronize access to the <see cref="T:System.Collections.ICollection" />.</summary>
      <returns>An object that can be used to synchronize access to the <see cref="T:System.Collections.ICollection" />.  In the default implementation of <see cref="T:System.Collections.Generic.Stack`1" />, this property always returns the current instance.</returns>
    </member>
    <member name="M:System.Collections.Generic.Stack`1.System#Collections#IEnumerable#GetEnumerator">
      <summary>Returns an enumerator that iterates through a collection.</summary>
      <returns>An <see cref="T:System.Collections.IEnumerator" /> that can be used to iterate through the collection.</returns>
    </member>
    <member name="M:System.Collections.Generic.Stack`1.ToArray">
      <summary>Copies the <see cref="T:System.Collections.Generic.Stack`1" /> to a new array.</summary>
      <returns>A new array containing copies of the elements of the <see cref="T:System.Collections.Generic.Stack`1" />.</returns>
    </member>
    <member name="M:System.Collections.Generic.Stack`1.TrimExcess">
      <summary>Sets the capacity to the actual number of elements in the <see cref="T:System.Collections.Generic.Stack`1" />, if that number is less than 90 percent of current capacity.</summary>
    </member>
    <member name="T:System.Collections.Generic.Stack`1.Enumerator">
      <summary>Enumerates the elements of a <see cref="T:System.Collections.Generic.Stack`1" />.</summary>
    </member>
    <member name="P:System.Collections.Generic.Stack`1.Enumerator.Current">
      <summary>Gets the element at the current position of the enumerator.</summary>
      <returns>The element in the <see cref="T:System.Collections.Generic.Stack`1" /> at the current position of the enumerator.</returns>
      <exception cref="T:System.InvalidOperationException">The enumerator is positioned before the first element of the collection or after the last element. </exception>
    </member>
    <member name="M:System.Collections.Generic.Stack`1.Enumerator.Dispose">
      <summary>Releases all resources used by the <see cref="T:System.Collections.Generic.Stack`1.Enumerator" />.</summary>
    </member>
    <member name="M:System.Collections.Generic.Stack`1.Enumerator.MoveNext">
      <summary>Advances the enumerator to the next element of the <see cref="T:System.Collections.Generic.Stack`1" />.</summary>
      <returns>true if the enumerator was successfully advanced to the next element; false if the enumerator has passed the end of the collection.</returns>
      <exception cref="T:System.InvalidOperationException">The collection was modified after the enumerator was created. </exception>
    </member>
    <member name="P:System.Collections.Generic.Stack`1.Enumerator.System#Collections#IEnumerator#Current">
      <summary>Gets the element at the current position of the enumerator.</summary>
      <returns>The element in the collection at the current position of the enumerator.</returns>
      <exception cref="T:System.InvalidOperationException">The enumerator is positioned before the first element of the collection or after the last element. </exception>
    </member>
    <member name="M:System.Collections.Generic.Stack`1.Enumerator.System#Collections#IEnumerator#Reset">
      <summary>Sets the enumerator to its initial position, which is before the first element in the collection. This class cannot be inherited.</summary>
      <exception cref="T:System.InvalidOperationException">The collection was modified after the enumerator was created. </exception>
    </member>
    <member name="T:System.Collections.ObjectModel.ObservableCollection`1">
      <summary>Represents a dynamic data collection that provides notifications when items get added, removed, or when the whole list is refreshed.</summary>
      <typeparam name="T">The type of elements in the collection.</typeparam>
    </member>
    <member name="M:System.Collections.ObjectModel.ObservableCollection`1.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Collections.ObjectModel.ObservableCollection`1" /> class.</summary>
    </member>
    <member name="M:System.Collections.ObjectModel.ObservableCollection`1.#ctor(System.Collections.Generic.IEnumerable{`0})">
      <summary>Initializes a new instance of the <see cref="T:System.Collections.ObjectModel.ObservableCollection`1" /> class that contains elements copied from the specified collection.</summary>
      <param name="collection">The collection from which the elements are copied.</param>
      <exception cref="T:System.ArgumentNullException">The <paramref name="collection" /> parameter cannot be null.</exception>
    </member>
    <member name="M:System.Collections.ObjectModel.ObservableCollection`1.#ctor(System.Collections.Generic.List{`0})">
      <summary>Initializes a new instance of the <see cref="T:System.Collections.ObjectModel.ObservableCollection`1" /> class that contains elements copied from the specified list.</summary>
      <param name="list">The list from which the elements are copied.</param>
      <exception cref="T:System.ArgumentNullException">The <paramref name="list" /> parameter cannot be null.</exception>
    </member>
    <member name="M:System.Collections.ObjectModel.ObservableCollection`1.BlockReentrancy">
      <summary>Disallows reentrant attempts to change this collection.</summary>
      <returns>An <see cref="T:System.IDisposable" /> object that can be used to dispose of the object.</returns>
    </member>
    <member name="M:System.Collections.ObjectModel.ObservableCollection`1.CheckReentrancy">
      <summary>Checks for reentrant attempts to change this collection.</summary>
      <exception cref="T:System.InvalidOperationException">If there was a call to <see cref="M:System.Collections.ObjectModel.ObservableCollection`1.BlockReentrancy" /> of which the <see cref="T:System.IDisposable" /> return value has not yet been disposed of. Typically, this means when there are additional attempts to change this collection during a <see cref="E:System.Collections.ObjectModel.ObservableCollection`1.CollectionChanged" /> event. However, it depends on when derived classes choose to call <see cref="M:System.Collections.ObjectModel.ObservableCollection`1.BlockReentrancy" />.</exception>
    </member>
    <member name="M:System.Collections.ObjectModel.ObservableCollection`1.ClearItems">
      <summary>Removes all items from the collection.</summary>
    </member>
    <member name="E:System.Collections.ObjectModel.ObservableCollection`1.CollectionChanged">
      <summary>Occurs when an item is added, removed, changed, moved, or the entire list is refreshed.</summary>
    </member>
    <member name="M:System.Collections.ObjectModel.ObservableCollection`1.InsertItem(System.Int32,`0)">
      <summary>Inserts an item into the collection at the specified index.</summary>
      <param name="index">The zero-based index at which <paramref name="item" /> should be inserted.</param>
      <param name="item">The object to insert.</param>
    </member>
    <member name="M:System.Collections.ObjectModel.ObservableCollection`1.Move(System.Int32,System.Int32)">
      <summary>Moves the item at the specified index to a new location in the collection.</summary>
      <param name="oldIndex">The zero-based index specifying the location of the item to be moved.</param>
      <param name="newIndex">The zero-based index specifying the new location of the item.</param>
    </member>
    <member name="M:System.Collections.ObjectModel.ObservableCollection`1.MoveItem(System.Int32,System.Int32)">
      <summary>Moves the item at the specified index to a new location in the collection.</summary>
      <param name="oldIndex">The zero-based index specifying the location of the item to be moved.</param>
      <param name="newIndex">The zero-based index specifying the new location of the item.</param>
    </member>
    <member name="M:System.Collections.ObjectModel.ObservableCollection`1.OnCollectionChanged(System.Collections.Specialized.NotifyCollectionChangedEventArgs)">
      <summary>Raises the <see cref="E:System.Collections.ObjectModel.ObservableCollection`1.CollectionChanged" /> event with the provided arguments.</summary>
      <param name="e">Arguments of the event being raised.</param>
    </member>
    <member name="M:System.Collections.ObjectModel.ObservableCollection`1.OnPropertyChanged(System.ComponentModel.PropertyChangedEventArgs)">
      <summary>Raises the <see cref="E:System.Collections.ObjectModel.ObservableCollection`1.PropertyChanged" /> event with the provided arguments.</summary>
      <param name="e">Arguments of the event being raised.</param>
    </member>
    <member name="E:System.Collections.ObjectModel.ObservableCollection`1.PropertyChanged">
      <summary>Occurs when a property value changes.</summary>
    </member>
    <member name="M:System.Collections.ObjectModel.ObservableCollection`1.RemoveItem(System.Int32)">
      <summary>Removes the item at the specified index of the collection.</summary>
      <param name="index">The zero-based index of the element to remove.</param>
    </member>
    <member name="M:System.Collections.ObjectModel.ObservableCollection`1.SetItem(System.Int32,`0)">
      <summary>Replaces the element at the specified index.</summary>
      <param name="index">The zero-based index of the element to replace.</param>
      <param name="item">The new value for the element at the specified index.</param>
    </member>
    <member name="E:System.Collections.ObjectModel.ObservableCollection`1.System#ComponentModel#INotifyPropertyChanged#PropertyChanged">
      <summary>Occurs when a property value changes.</summary>
    </member>
    <member name="T:System.Collections.ObjectModel.ReadOnlyObservableCollection`1">
      <summary>Represents a read-only <see cref="T:System.Collections.ObjectModel.ObservableCollection`1" />.</summary>
      <typeparam name="T">The type of elements in the collection.</typeparam>
    </member>
    <member name="M:System.Collections.ObjectModel.ReadOnlyObservableCollection`1.#ctor(System.Collections.ObjectModel.ObservableCollection{`0})">
      <summary>Initializes a new instance of the <see cref="T:System.Collections.ObjectModel.ReadOnlyObservableCollection`1" /> class that serves as a wrapper around the specified <see cref="T:System.Collections.ObjectModel.ObservableCollection`1" />.</summary>
      <param name="list">The <see cref="T:System.Collections.ObjectModel.ObservableCollection`1" /> with which to create this instance of the <see cref="T:System.Collections.ObjectModel.ReadOnlyObservableCollection`1" /> class.</param>
    </member>
    <member name="E:System.Collections.ObjectModel.ReadOnlyObservableCollection`1.CollectionChanged">
      <summary>Occurs when an item is added or removed.</summary>
    </member>
    <member name="M:System.Collections.ObjectModel.ReadOnlyObservableCollection`1.OnCollectionChanged(System.Collections.Specialized.NotifyCollectionChangedEventArgs)">
      <summary>Raises the <see cref="E:System.Collections.ObjectModel.ReadOnlyObservableCollection`1.CollectionChanged" /> event using the provided arguments.</summary>
      <param name="args">Arguments of the event being raised.</param>
    </member>
    <member name="M:System.Collections.ObjectModel.ReadOnlyObservableCollection`1.OnPropertyChanged(System.ComponentModel.PropertyChangedEventArgs)">
      <summary>Raises the <see cref="E:System.Collections.ObjectModel.ReadOnlyObservableCollection`1.PropertyChanged" /> event using the provided arguments.</summary>
      <param name="args">Arguments of the event being raised.</param>
    </member>
    <member name="E:System.Collections.ObjectModel.ReadOnlyObservableCollection`1.PropertyChanged">
      <summary>Occurs when a property value changes.</summary>
    </member>
    <member name="E:System.Collections.ObjectModel.ReadOnlyObservableCollection`1.System#Collections#Specialized#INotifyCollectionChanged#CollectionChanged">
      <summary>Occurs when the collection changes.</summary>
    </member>
    <member name="E:System.Collections.ObjectModel.ReadOnlyObservableCollection`1.System#ComponentModel#INotifyPropertyChanged#PropertyChanged">
      <summary>Occurs when a property value changes.</summary>
    </member>
    <member name="T:System.Collections.Specialized.BitVector32">
      <summary>Provides a simple structure that stores Boolean values and small integers in 32 bits of memory.</summary>
    </member>
    <member name="M:System.Collections.Specialized.BitVector32.#ctor(System.Collections.Specialized.BitVector32)">
      <summary>Initializes a new instance of the <see cref="T:System.Collections.Specialized.BitVector32" /> structure containing the data represented in an existing <see cref="T:System.Collections.Specialized.BitVector32" /> structure.</summary>
      <param name="value">A <see cref="T:System.Collections.Specialized.BitVector32" /> structure that contains the data to copy. </param>
    </member>
    <member name="M:System.Collections.Specialized.BitVector32.#ctor(System.Int32)">
      <summary>Initializes a new instance of the <see cref="T:System.Collections.Specialized.BitVector32" /> structure containing the data represented in an integer.</summary>
      <param name="data">An integer representing the data of the new <see cref="T:System.Collections.Specialized.BitVector32" />. </param>
    </member>
    <member name="M:System.Collections.Specialized.BitVector32.CreateMask">
      <summary>Creates the first mask in a series of masks that can be used to retrieve individual bits in a <see cref="T:System.Collections.Specialized.BitVector32" /> that is set up as bit flags.</summary>
      <returns>A mask that isolates the first bit flag in the <see cref="T:System.Collections.Specialized.BitVector32" />.</returns>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
      </PermissionSet>
    </member>
    <member name="M:System.Collections.Specialized.BitVector32.CreateMask(System.Int32)">
      <summary>Creates an additional mask following the specified mask in a series of masks that can be used to retrieve individual bits in a <see cref="T:System.Collections.Specialized.BitVector32" /> that is set up as bit flags.</summary>
      <returns>A mask that isolates the bit flag following the one that <paramref name="previous" /> points to in <see cref="T:System.Collections.Specialized.BitVector32" />.</returns>
      <param name="previous">The mask that indicates the previous bit flag. </param>
      <exception cref="T:System.InvalidOperationException">
        <paramref name="previous" /> indicates the last bit flag in the <see cref="T:System.Collections.Specialized.BitVector32" />. </exception>
    </member>
    <member name="M:System.Collections.Specialized.BitVector32.CreateSection(System.Int16)">
      <summary>Creates the first <see cref="T:System.Collections.Specialized.BitVector32.Section" /> in a series of sections that contain small integers.</summary>
      <returns>A <see cref="T:System.Collections.Specialized.BitVector32.Section" /> that can hold a number from zero to <paramref name="maxValue" />.</returns>
      <param name="maxValue">A 16-bit signed integer that specifies the maximum value for the new <see cref="T:System.Collections.Specialized.BitVector32.Section" />. </param>
      <exception cref="T:System.ArgumentException">
        <paramref name="maxValue" /> is less than 1. </exception>
    </member>
    <member name="M:System.Collections.Specialized.BitVector32.CreateSection(System.Int16,System.Collections.Specialized.BitVector32.Section)">
      <summary>Creates a new <see cref="T:System.Collections.Specialized.BitVector32.Section" /> following the specified <see cref="T:System.Collections.Specialized.BitVector32.Section" /> in a series of sections that contain small integers.</summary>
      <returns>A <see cref="T:System.Collections.Specialized.BitVector32.Section" /> that can hold a number from zero to <paramref name="maxValue" />.</returns>
      <param name="maxValue">A 16-bit signed integer that specifies the maximum value for the new <see cref="T:System.Collections.Specialized.BitVector32.Section" />. </param>
      <param name="previous">The previous <see cref="T:System.Collections.Specialized.BitVector32.Section" /> in the <see cref="T:System.Collections.Specialized.BitVector32" />. </param>
      <exception cref="T:System.ArgumentException">
        <paramref name="maxValue" /> is less than 1. </exception>
      <exception cref="T:System.InvalidOperationException">
        <paramref name="previous" /> includes the final bit in the <see cref="T:System.Collections.Specialized.BitVector32" />.-or- <paramref name="maxValue" /> is greater than the highest value that can be represented by the number of bits after <paramref name="previous" />. </exception>
    </member>
    <member name="P:System.Collections.Specialized.BitVector32.Data">
      <summary>Gets the value of the <see cref="T:System.Collections.Specialized.BitVector32" /> as an integer.</summary>
      <returns>The value of the <see cref="T:System.Collections.Specialized.BitVector32" /> as an integer.</returns>
    </member>
    <member name="M:System.Collections.Specialized.BitVector32.Equals(System.Object)">
      <summary>Determines whether the specified object is equal to the <see cref="T:System.Collections.Specialized.BitVector32" />.</summary>
      <returns>true if the specified object is equal to the <see cref="T:System.Collections.Specialized.BitVector32" />; otherwise, false.</returns>
      <param name="o">The object to compare with the current <see cref="T:System.Collections.Specialized.BitVector32" />. </param>
    </member>
    <member name="M:System.Collections.Specialized.BitVector32.GetHashCode">
      <summary>Serves as a hash function for the <see cref="T:System.Collections.Specialized.BitVector32" />.</summary>
      <returns>A hash code for the <see cref="T:System.Collections.Specialized.BitVector32" />.</returns>
    </member>
    <member name="P:System.Collections.Specialized.BitVector32.Item(System.Collections.Specialized.BitVector32.Section)">
      <summary>Gets or sets the value stored in the specified <see cref="T:System.Collections.Specialized.BitVector32.Section" />.</summary>
      <returns>The value stored in the specified <see cref="T:System.Collections.Specialized.BitVector32.Section" />.</returns>
      <param name="section">A <see cref="T:System.Collections.Specialized.BitVector32.Section" /> that contains the value to get or set. </param>
    </member>
    <member name="P:System.Collections.Specialized.BitVector32.Item(System.Int32)">
      <summary>Gets or sets the state of the bit flag indicated by the specified mask.</summary>
      <returns>true if the specified bit flag is on (1); otherwise, false.</returns>
      <param name="bit">A mask that indicates the bit to get or set. </param>
    </member>
    <member name="M:System.Collections.Specialized.BitVector32.ToString">
      <summary>Returns a string that represents the current <see cref="T:System.Collections.Specialized.BitVector32" />.</summary>
      <returns>A string that represents the current <see cref="T:System.Collections.Specialized.BitVector32" />.</returns>
    </member>
    <member name="M:System.Collections.Specialized.BitVector32.ToString(System.Collections.Specialized.BitVector32)">
      <summary>Returns a string that represents the specified <see cref="T:System.Collections.Specialized.BitVector32" />.</summary>
      <returns>A string that represents the specified <see cref="T:System.Collections.Specialized.BitVector32" />.</returns>
      <param name="value">The <see cref="T:System.Collections.Specialized.BitVector32" /> to represent. </param>
    </member>
    <member name="T:System.Collections.Specialized.BitVector32.Section">
      <summary>Represents a section of the vector that can contain an integer number.</summary>
    </member>
    <member name="M:System.Collections.Specialized.BitVector32.Section.Equals(System.Collections.Specialized.BitVector32.Section)">
      <summary>Determines whether the specified <see cref="T:System.Collections.Specialized.BitVector32.Section" /> object is the same as the current <see cref="T:System.Collections.Specialized.BitVector32.Section" /> object.</summary>
      <returns>true if the <paramref name="obj" /> parameter is the same as the current <see cref="T:System.Collections.Specialized.BitVector32.Section" /> object; otherwise false.</returns>
      <param name="obj">The <see cref="T:System.Collections.Specialized.BitVector32.Section" /> object to compare with the current <see cref="T:System.Collections.Specialized.BitVector32.Section" /> object.</param>
    </member>
    <member name="M:System.Collections.Specialized.BitVector32.Section.Equals(System.Object)">
      <summary>Determines whether the specified object is the same as the current <see cref="T:System.Collections.Specialized.BitVector32.Section" /> object.</summary>
      <returns>true if the specified object is the same as the current <see cref="T:System.Collections.Specialized.BitVector32.Section" /> object; otherwise, false.</returns>
      <param name="o">The object to compare with the current <see cref="T:System.Collections.Specialized.BitVector32.Section" />.</param>
    </member>
    <member name="M:System.Collections.Specialized.BitVector32.Section.GetHashCode">
      <summary>Serves as a hash function for the current <see cref="T:System.Collections.Specialized.BitVector32.Section" />, suitable for hashing algorithms and data structures, such as a hash table.</summary>
      <returns>A hash code for the current <see cref="T:System.Collections.Specialized.BitVector32.Section" />.</returns>
    </member>
    <member name="P:System.Collections.Specialized.BitVector32.Section.Mask">
      <summary>Gets a mask that isolates this section within the <see cref="T:System.Collections.Specialized.BitVector32" />.</summary>
      <returns>A mask that isolates this section within the <see cref="T:System.Collections.Specialized.BitVector32" />.</returns>
    </member>
    <member name="P:System.Collections.Specialized.BitVector32.Section.Offset">
      <summary>Gets the offset of this section from the start of the <see cref="T:System.Collections.Specialized.BitVector32" />.</summary>
      <returns>The offset of this section from the start of the <see cref="T:System.Collections.Specialized.BitVector32" />.</returns>
    </member>
    <member name="M:System.Collections.Specialized.BitVector32.Section.op_Equality(System.Collections.Specialized.BitVector32.Section,System.Collections.Specialized.BitVector32.Section)">
      <summary>Determines whether two specified <see cref="T:System.Collections.Specialized.BitVector32.Section" /> objects are equal.</summary>
      <returns>true if the <paramref name="a" /> and <paramref name="b" /> parameters represent the same <see cref="T:System.Collections.Specialized.BitVector32.Section" /> object, otherwise, false.</returns>
      <param name="a">A <see cref="T:System.Collections.Specialized.BitVector32.Section" /> object.</param>
      <param name="b">A <see cref="T:System.Collections.Specialized.BitVector32.Section" /> object.</param>
    </member>
    <member name="M:System.Collections.Specialized.BitVector32.Section.op_Inequality(System.Collections.Specialized.BitVector32.Section,System.Collections.Specialized.BitVector32.Section)">
      <summary>Determines whether two <see cref="T:System.Collections.Specialized.BitVector32.Section" /> objects have different values.</summary>
      <returns>true if the <paramref name="a" /> and <paramref name="b" /> parameters represent different <see cref="T:System.Collections.Specialized.BitVector32.Section" /> objects; otherwise, false.</returns>
      <param name="a">A <see cref="T:System.Collections.Specialized.BitVector32.Section" /> object.</param>
      <param name="b">A <see cref="T:System.Collections.Specialized.BitVector32.Section" /> object.</param>
    </member>
    <member name="M:System.Collections.Specialized.BitVector32.Section.ToString">
      <summary>Returns a string that represents the current <see cref="T:System.Collections.Specialized.BitVector32.Section" />.</summary>
      <returns>A string that represents the current <see cref="T:System.Collections.Specialized.BitVector32.Section" />.</returns>
    </member>
    <member name="M:System.Collections.Specialized.BitVector32.Section.ToString(System.Collections.Specialized.BitVector32.Section)">
      <summary>Returns a string that represents the specified <see cref="T:System.Collections.Specialized.BitVector32.Section" />.</summary>
      <returns>A string that represents the specified <see cref="T:System.Collections.Specialized.BitVector32.Section" />.</returns>
      <param name="value">The <see cref="T:System.Collections.Specialized.BitVector32.Section" /> to represent.</param>
    </member>
    <member name="T:System.Collections.Specialized.CollectionsUtil">
      <summary>Creates collections that ignore the case in strings.</summary>
    </member>
    <member name="M:System.Collections.Specialized.CollectionsUtil.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Collections.Specialized.CollectionsUtil" /> class. </summary>
    </member>
    <member name="M:System.Collections.Specialized.CollectionsUtil.CreateCaseInsensitiveHashtable">
      <summary>Creates a new case-insensitive instance of the <see cref="T:System.Collections.Hashtable" /> class with the default initial capacity.</summary>
      <returns>A new case-insensitive instance of the <see cref="T:System.Collections.Hashtable" /> class with the default initial capacity.</returns>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="M:System.Collections.Specialized.CollectionsUtil.CreateCaseInsensitiveHashtable(System.Collections.IDictionary)">
      <summary>Copies the entries from the specified dictionary to a new case-insensitive instance of the <see cref="T:System.Collections.Hashtable" /> class with the same initial capacity as the number of entries copied.</summary>
      <returns>A new case-insensitive instance of the <see cref="T:System.Collections.Hashtable" /> class containing the entries from the specified <see cref="T:System.Collections.IDictionary" />.</returns>
      <param name="d">The <see cref="T:System.Collections.IDictionary" /> to copy to a new case-insensitive <see cref="T:System.Collections.Hashtable" />. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="d" /> is null. </exception>
    </member>
    <member name="M:System.Collections.Specialized.CollectionsUtil.CreateCaseInsensitiveHashtable(System.Int32)">
      <summary>Creates a new case-insensitive instance of the <see cref="T:System.Collections.Hashtable" /> class with the specified initial capacity.</summary>
      <returns>A new case-insensitive instance of the <see cref="T:System.Collections.Hashtable" /> class with the specified initial capacity.</returns>
      <param name="capacity">The approximate number of entries that the <see cref="T:System.Collections.Hashtable" /> can initially contain. </param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="capacity" /> is less than zero. </exception>
    </member>
    <member name="M:System.Collections.Specialized.CollectionsUtil.CreateCaseInsensitiveSortedList">
      <summary>Creates a new instance of the <see cref="T:System.Collections.SortedList" /> class that ignores the case of strings.</summary>
      <returns>A new instance of the <see cref="T:System.Collections.SortedList" /> class that ignores the case of strings.</returns>
    </member>
    <member name="T:System.Collections.Specialized.HybridDictionary">
      <summary>Implements IDictionary by using a <see cref="T:System.Collections.Specialized.ListDictionary" /> while the collection is small, and then switching to a <see cref="T:System.Collections.Hashtable" /> when the collection gets large.</summary>
    </member>
    <member name="M:System.Collections.Specialized.HybridDictionary.#ctor">
      <summary>Creates an empty case-sensitive <see cref="T:System.Collections.Specialized.HybridDictionary" />.</summary>
    </member>
    <member name="M:System.Collections.Specialized.HybridDictionary.#ctor(System.Boolean)">
      <summary>Creates an empty <see cref="T:System.Collections.Specialized.HybridDictionary" /> with the specified case sensitivity.</summary>
      <param name="caseInsensitive">A Boolean that denotes whether the <see cref="T:System.Collections.Specialized.HybridDictionary" /> is case-insensitive. </param>
    </member>
    <member name="M:System.Collections.Specialized.HybridDictionary.#ctor(System.Int32)">
      <summary>Creates a case-sensitive <see cref="T:System.Collections.Specialized.HybridDictionary" /> with the specified initial size.</summary>
      <param name="initialSize">The approximate number of entries that the <see cref="T:System.Collections.Specialized.HybridDictionary" /> can initially contain. </param>
    </member>
    <member name="M:System.Collections.Specialized.HybridDictionary.#ctor(System.Int32,System.Boolean)">
      <summary>Creates a <see cref="T:System.Collections.Specialized.HybridDictionary" /> with the specified initial size and case sensitivity.</summary>
      <param name="initialSize">The approximate number of entries that the <see cref="T:System.Collections.Specialized.HybridDictionary" /> can initially contain. </param>
      <param name="caseInsensitive">A Boolean that denotes whether the <see cref="T:System.Collections.Specialized.HybridDictionary" /> is case-insensitive. </param>
    </member>
    <member name="M:System.Collections.Specialized.HybridDictionary.Add(System.Object,System.Object)">
      <summary>Adds an entry with the specified key and value into the <see cref="T:System.Collections.Specialized.HybridDictionary" />.</summary>
      <param name="key">The key of the entry to add. </param>
      <param name="value">The value of the entry to add. The value can be null. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="key" /> is null. </exception>
      <exception cref="T:System.ArgumentException">An entry with the same key already exists in the <see cref="T:System.Collections.Specialized.HybridDictionary" />. </exception>
    </member>
    <member name="M:System.Collections.Specialized.HybridDictionary.Clear">
      <summary>Removes all entries from the <see cref="T:System.Collections.Specialized.HybridDictionary" />.</summary>
    </member>
    <member name="M:System.Collections.Specialized.HybridDictionary.Contains(System.Object)">
      <summary>Determines whether the <see cref="T:System.Collections.Specialized.HybridDictionary" /> contains a specific key.</summary>
      <returns>true if the <see cref="T:System.Collections.Specialized.HybridDictionary" /> contains an entry with the specified key; otherwise, false.</returns>
      <param name="key">The key to locate in the <see cref="T:System.Collections.Specialized.HybridDictionary" />. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="key" /> is null. </exception>
    </member>
    <member name="M:System.Collections.Specialized.HybridDictionary.CopyTo(System.Array,System.Int32)">
      <summary>Copies the <see cref="T:System.Collections.Specialized.HybridDictionary" /> entries to a one-dimensional <see cref="T:System.Array" /> instance at the specified index.</summary>
      <param name="array">The one-dimensional <see cref="T:System.Array" /> that is the destination of the <see cref="T:System.Collections.DictionaryEntry" /> objects copied from <see cref="T:System.Collections.Specialized.HybridDictionary" />. The <see cref="T:System.Array" /> must have zero-based indexing. </param>
      <param name="index">The zero-based index in <paramref name="array" /> at which copying begins. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="array" /> is null. </exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> is less than zero. </exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="array" /> is multidimensional.-or- The number of elements in the source <see cref="T:System.Collections.Specialized.HybridDictionary" /> is greater than the available space from <paramref name="arrayIndex" /> to the end of the destination <paramref name="array" />. </exception>
      <exception cref="T:System.InvalidCastException">The type of the source <see cref="T:System.Collections.Specialized.HybridDictionary" /> cannot be cast automatically to the type of the destination <paramref name="array" />. </exception>
    </member>
    <member name="P:System.Collections.Specialized.HybridDictionary.Count">
      <summary>Gets the number of key/value pairs contained in the <see cref="T:System.Collections.Specialized.HybridDictionary" />.</summary>
      <returns>The number of key/value pairs contained in the <see cref="T:System.Collections.Specialized.HybridDictionary" />.Retrieving the value of this property is an O(1) operation.</returns>
    </member>
    <member name="M:System.Collections.Specialized.HybridDictionary.GetEnumerator">
      <summary>Returns an <see cref="T:System.Collections.IDictionaryEnumerator" /> that iterates through the <see cref="T:System.Collections.Specialized.HybridDictionary" />.</summary>
      <returns>An <see cref="T:System.Collections.IDictionaryEnumerator" /> for the <see cref="T:System.Collections.Specialized.HybridDictionary" />.</returns>
    </member>
    <member name="P:System.Collections.Specialized.HybridDictionary.IsFixedSize">
      <summary>Gets a value indicating whether the <see cref="T:System.Collections.Specialized.HybridDictionary" /> has a fixed size.</summary>
      <returns>This property always returns false.</returns>
    </member>
    <member name="P:System.Collections.Specialized.HybridDictionary.IsReadOnly">
      <summary>Gets a value indicating whether the <see cref="T:System.Collections.Specialized.HybridDictionary" /> is read-only.</summary>
      <returns>This property always returns false.</returns>
    </member>
    <member name="P:System.Collections.Specialized.HybridDictionary.IsSynchronized">
      <summary>Gets a value indicating whether the <see cref="T:System.Collections.Specialized.HybridDictionary" /> is synchronized (thread safe).</summary>
      <returns>This property always returns false.</returns>
    </member>
    <member name="P:System.Collections.Specialized.HybridDictionary.Item(System.Object)">
      <summary>Gets or sets the value associated with the specified key.</summary>
      <returns>The value associated with the specified key. If the specified key is not found, attempting to get it returns null, and attempting to set it creates a new entry using the specified key.</returns>
      <param name="key">The key whose value to get or set. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="key" /> is null. </exception>
    </member>
    <member name="P:System.Collections.Specialized.HybridDictionary.Keys">
      <summary>Gets an <see cref="T:System.Collections.ICollection" /> containing the keys in the <see cref="T:System.Collections.Specialized.HybridDictionary" />.</summary>
      <returns>An <see cref="T:System.Collections.ICollection" /> containing the keys in the <see cref="T:System.Collections.Specialized.HybridDictionary" />.</returns>
    </member>
    <member name="M:System.Collections.Specialized.HybridDictionary.Remove(System.Object)">
      <summary>Removes the entry with the specified key from the <see cref="T:System.Collections.Specialized.HybridDictionary" />.</summary>
      <param name="key">The key of the entry to remove. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="key" /> is null. </exception>
    </member>
    <member name="P:System.Collections.Specialized.HybridDictionary.SyncRoot">
      <summary>Gets an object that can be used to synchronize access to the <see cref="T:System.Collections.Specialized.HybridDictionary" />.</summary>
      <returns>An object that can be used to synchronize access to the <see cref=