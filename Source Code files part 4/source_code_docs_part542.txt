r>
    <member name="P:Microsoft.Build.Framework.XamlTypes.Rule.SwitchPrefix">
      <summary>Gets or sets the prefix to use for all property switches in this <see cref="T:Microsoft.Build.Framework.XamlTypes.Rule" /> for the case when this property <see cref="T:Microsoft.Build.Framework.XamlTypes.Rule" /> represents a tool.</summary>
      <returns>Returns the prefix.</returns>
    </member>
    <member name="P:Microsoft.Build.Framework.XamlTypes.Rule.ToolName">
      <summary>Gets or sets the name of the tool when this rule represents a tool.</summary>
      <returns>Returns the name of the tool.</returns>
    </member>
    <member name="T:Microsoft.Build.Framework.XamlTypes.RuleBag">
      <summary>A container for <see cref="T:Microsoft.Build.Framework.XamlTypes.Rule" /> instances.</summary>
    </member>
    <member name="M:Microsoft.Build.Framework.XamlTypes.RuleBag.#ctor">
      <summary>Default constructor. Required for XAML deserialization.</summary>
    </member>
    <member name="M:Microsoft.Build.Framework.XamlTypes.RuleBag.BeginInit">
      <summary>See <see cref="M:System.ComponentModel.ISupportInitialize.BeginInit" />.</summary>
    </member>
    <member name="M:Microsoft.Build.Framework.XamlTypes.RuleBag.EndInit">
      <summary>See <see cref="M:System.ComponentModel.ISupportInitialize.EndInit" />.</summary>
    </member>
    <member name="M:Microsoft.Build.Framework.XamlTypes.RuleBag.GetSchemaObjects(System.Type)">
      <summary>Returns an enumerator over all instances of static data that have the given type. </summary>
      <returns>Returns an enumerator over all instances of static data that have the given type. Returns Null or Empty list if no objects of the given type are provided by this node.</returns>
      <param name="type">The type of static data to retrieve.</param>
    </member>
    <member name="M:Microsoft.Build.Framework.XamlTypes.RuleBag.GetSchemaObjectTypes">
      <summary>Returns an enumerator over all types of static data for the data-driven features that this node contains.</summary>
      <returns>Returns an enumerator over all types of static data for the data-driven features that this node contains.</returns>
    </member>
    <member name="P:Microsoft.Build.Framework.XamlTypes.RuleBag.Rules">
      <summary>The list of <see cref="T:Microsoft.Build.Framework.XamlTypes.Rule" /> instances that this <see cref="T:Microsoft.Build.Framework.XamlTypes.RuleBag" /> instance contains.</summary>
      <returns>Returns the list of rules. Always returns at least one rule.</returns>
    </member>
    <member name="T:Microsoft.Build.Framework.XamlTypes.RuleSchema">
      <summary>The RuleSchema provides a strongly-typed identity handle to the underlying schema data model.</summary>
    </member>
    <member name="M:Microsoft.Build.Framework.XamlTypes.RuleSchema.#ctor">
      <summary>The default constructor of a rule schema.</summary>
    </member>
    <member name="T:Microsoft.Build.Framework.XamlTypes.StringListProperty">
      <summary>Represents the schema of a list-of-strings property.</summary>
    </member>
    <member name="M:Microsoft.Build.Framework.XamlTypes.StringListProperty.#ctor">
      <summary>Default constructor. Needed for property XAML deserialization.</summary>
    </member>
    <member name="P:Microsoft.Build.Framework.XamlTypes.StringListProperty.CommandLineValueSeparator">
      <summary>Gets or sets the separator to use in delineating individual values of this string list property</summary>
      <returns>Returns the separator.</returns>
    </member>
    <member name="P:Microsoft.Build.Framework.XamlTypes.StringListProperty.RendererValueSeparator">
      <summary>Gets or sets the UI rendering separator. This property is deprecated.</summary>
      <returns>Returns the UI rendering separator. This property is deprecated.</returns>
    </member>
    <member name="P:Microsoft.Build.Framework.XamlTypes.StringListProperty.Subtype">
      <summary>Qualifies this string property to give it a more specific classification.</summary>
      <returns>Returns the property subtype.</returns>
    </member>
    <member name="T:Microsoft.Build.Framework.XamlTypes.StringProperty">
      <summary>Represents the schema of a string property.</summary>
    </member>
    <member name="M:Microsoft.Build.Framework.XamlTypes.StringProperty.#ctor">
      <summary>Default constructor for a string property.</summary>
    </member>
    <member name="P:Microsoft.Build.Framework.XamlTypes.StringProperty.Subtype">
      <summary>Qualifies this string property to give it a more specific classification.</summary>
      <returns>Returns the subtype.</returns>
    </member>
    <member name="T:Microsoft.Build.Framework.XamlTypes.ValueEditor">
      <summary>Represents a value editor.</summary>
    </member>
    <member name="M:Microsoft.Build.Framework.XamlTypes.ValueEditor.#ctor">
      <summary>Default constructor needed for XAML deserialization.</summary>
    </member>
    <member name="M:Microsoft.Build.Framework.XamlTypes.ValueEditor.BeginInit">
      <summary>See <see cref="M:System.ComponentModel.ISupportInitialize.BeginInit" />.</summary>
    </member>
    <member name="P:Microsoft.Build.Framework.XamlTypes.ValueEditor.DisplayName">
      <summary>Gets or sets the UI display name for the editor.</summary>
      <returns>Returns the display name.</returns>
    </member>
    <member name="P:Microsoft.Build.Framework.XamlTypes.ValueEditor.EditorType">
      <summary>Gets of sets the name of this <see cref="T:Microsoft.Build.Framework.XamlTypes.ValueEditor" />. </summary>
      <returns>Returns the name of the editor.</returns>
    </member>
    <member name="M:Microsoft.Build.Framework.XamlTypes.ValueEditor.EndInit">
      <summary>See <see cref="M:System.ComponentModel.ISupportInitialize.EndInit" />.</summary>
    </member>
    <member name="P:Microsoft.Build.Framework.XamlTypes.ValueEditor.Metadata">
      <summary>Gets or sets additional attributes of the editor that are not generic enough to be made properties on this class. </summary>
      <returns>Returns the additional attributes.</returns>
    </member>
  </members>
</doc>
=== C:/Users/treeman/Desktop/windows nt source code\xbox\Xbox Live Source\XONLINE_MAIN\public\ext\sdk\CLR\netfx40rtm\Profile\Client\Microsoft.Build.Utilities.v4.0.xml ===
ï»¿<?xml version="1.0" encoding="utf-8"?>
<doc>
  <assembly>
    <name>Microsoft.Build.Utilities.v4.0</name>
  </assembly>
  <members>
    <member name="T:Microsoft.Build.Utilities.AppDomainIsolatedTask">
      <summary>Provides the same functionality as <see cref="T:Microsoft.Build.Utilities.Task" />, but also derives from <see cref="T:System.MarshalByRefObject" /> so that it can be instantiated in its own app domain.</summary>
    </member>
    <member name="M:Microsoft.Build.Utilities.AppDomainIsolatedTask.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.Build.Utilities.AppDomainIsolatedTask" /> class.</summary>
    </member>
    <member name="M:Microsoft.Build.Utilities.AppDomainIsolatedTask.#ctor(System.Resources.ResourceManager)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.Build.Utilities.AppDomainIsolatedTask" /> class and allows derived <see cref="T:Microsoft.Build.Utilities.Task" /> classes to register their resources.</summary>
      <param name="taskResources">The task resources.</param>
    </member>
    <member name="M:Microsoft.Build.Utilities.AppDomainIsolatedTask.#ctor(System.Resources.ResourceManager,System.String)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.Build.Utilities.AppDomainIsolatedTask" /> class and allows derived <see cref="T:Microsoft.Build.Utilities.Task" /> classes to register their resources, as well as provide a prefix for composing help keywords from string resource names.</summary>
      <param name="taskResources">The task resources.</param>
      <param name="helpKeywordPrefix">The Help keyword prefix.</param>
    </member>
    <member name="P:Microsoft.Build.Utilities.AppDomainIsolatedTask.BuildEngine">
      <summary>Gets or sets the build engine interface that is available to tasks.</summary>
      <returns>The <see cref="T:Microsoft.Build.Framework.IBuildEngine" /> that is available to tasks.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:Microsoft.Build.Utilities.AppDomainIsolatedTask.Execute">
      <summary>Runs the task.</summary>
      <returns>true if successful; otherwise, false.</returns>
    </member>
    <member name="P:Microsoft.Build.Utilities.AppDomainIsolatedTask.HelpKeywordPrefix">
      <summary>Gets or sets the prefix that is used to compose Help keywords from string resource names.</summary>
      <returns>A <see cref="T:System.String" /> that is used to compose Help keywords. This value can be null.</returns>
    </member>
    <member name="P:Microsoft.Build.Utilities.AppDomainIsolatedTask.HostObject">
      <summary>Gets or sets a host object instance that is associated with the derived <see cref="T:Microsoft.Build.Utilities.Task" />.</summary>
      <returns>The <see cref="T:Microsoft.Build.Framework.ITaskHost" /> host object instance that is associated with the derived <see cref="T:Microsoft.Build.Utilities.Task" />. This value can be null.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:Microsoft.Build.Utilities.AppDomainIsolatedTask.InitializeLifetimeService">
      <summary>When overridden in a derived class, gives tasks infinite lease time.</summary>
      <returns>null to specify an infinite lifetime.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:Microsoft.Build.Utilities.AppDomainIsolatedTask.Log">
      <summary>Gets an instance of a task logging helper object that contains task logging methods.</summary>
      <returns>A <see cref="T:Microsoft.Build.Utilities.TaskLoggingHelper" /> that contains task logging methods.</returns>
    </member>
    <member name="P:Microsoft.Build.Utilities.AppDomainIsolatedTask.TaskResources">
      <summary>Gets or sets culture-specific resources of the derived <see cref="T:Microsoft.Build.Utilities.Task" />.</summary>
      <returns>A <see cref="T:System.Resources.ResourceManager" /> that is a culture-specific resource of the derived <see cref="T:Microsoft.Build.Utilities.Task" />. This value can be null.</returns>
    </member>
    <member name="T:Microsoft.Build.Utilities.CanonicalTrackedInputFiles">
      <summary>This class is the filetracking log interpreter for .read. tracking logs in canonical form or those that have been rooted (^) to make them canonical</summary>
    </member>
    <member name="M:Microsoft.Build.Utilities.CanonicalTrackedInputFiles.#ctor(Microsoft.Build.Framework.ITask,Microsoft.Build.Framework.ITaskItem[],Microsoft.Build.Framework.ITaskItem,Microsoft.Build.Framework.ITaskItem[],Microsoft.Build.Utilities.CanonicalTrackedOutputFiles,System.Boolean,System.Boolean)">
      <summary>Constructor for a single input source file</summary>
      <param name="ownerTask">The task that is using file tracker</param>
      <param name="tlogFiles">The .read. tlog files to interpret</param>
      <param name="sourceFile">The primary source file to interpret dependencies for</param>
      <param name="excludedInputPaths">The set of paths that contain files that are to be ignored during up to date check</param>
      <param name="outputs">The output files produced by compiling this source</param>
      <param name="useMinimalRebuildOptimization">WARNING: Minimal rebuild optimization requires 100% accurate computed outputs to be specified!</param>
      <param name="maintainCompositeRootingMarkers">True to keep composite rooting markers around (many-to-one case) or false to shred them (one-to-one or one-to-many case)</param>
    </member>
    <member name="M:Microsoft.Build.Utilities.CanonicalTrackedInputFiles.#ctor(Microsoft.Build.Framework.ITask,Microsoft.Build.Framework.ITaskItem[],Microsoft.Build.Framework.ITaskItem[],Microsoft.Build.Framework.ITaskItem[],Microsoft.Build.Framework.ITaskItem[],System.Boolean,System.Boolean)">
      <summary>Constructor for multiple input source files</summary>
      <param name="ownerTask">The task that is using file tracker</param>
      <param name="tlogFiles">The .read. tlog files to interpret</param>
      <param name="sourceFiles">The primary source files to interpret dependencies for</param>
      <param name="excludedInputPaths">The set of paths that contain files that are to be ignored during up to date check</param>
      <param name="outputs">The output files produced by compiling this set of sources</param>
      <param name="useMinimalRebuildOptimization">WARNING: Minimal rebuild optimization requires 100% accurate computed outputs to be specified!</param>
      <param name="maintainCompositeRootingMarkers">True to keep composite rooting markers around (many-to-one case) or false to shred them (one-to-one or one-to-many case)</param>
    </member>
    <member name="M:Microsoft.Build.Utilities.CanonicalTrackedInputFiles.#ctor(Microsoft.Build.Framework.ITask,Microsoft.Build.Framework.ITaskItem[],Microsoft.Build.Framework.ITaskItem[],Microsoft.Build.Framework.ITaskItem[],Microsoft.Build.Utilities.CanonicalTrackedOutputFiles,System.Boolean,System.Boolean)">
      <summary>Constructor for multiple input source files</summary>
      <param name="ownerTask">The task that is using file tracker</param>
      <param name="tlogFiles">The .read. tlog files to interpret</param>
      <param name="sourceFiles">The primary source files to interpret dependencies for</param>
      <param name="excludedInputPaths">The set of paths that contain files that are to be ignored during up to date check</param>
      <param name="outputs">The output files produced by compiling this set of sources</param>
      <param name="useMinimalRebuildOptimization">WARNING: Minimal rebuild optimization requires 100% accurate computed outputs to be specified!</param>
      <param name="maintainCompositeRootingMarkers">True to keep composite rooting markers around (many-to-one case) or false to shred them (one-to-one or one-to-many case)</param>
    </member>
    <member name="M:Microsoft.Build.Utilities.CanonicalTrackedInputFiles.#ctor(Microsoft.Build.Framework.ITaskItem[],Microsoft.Build.Framework.ITaskItem[],Microsoft.Build.Framework.ITaskItem[],Microsoft.Build.Utilities.CanonicalTrackedOutputFiles,System.Boolean,System.Boolean)">
      <summary>Constructor for multiple input source files</summary>
      <param name="tlogFiles">The .read. tlog files to interpret</param>
      <param name="sourceFiles">The primary source files to interpret dependencies for</param>
      <param name="excludedInputPaths">The set of paths that contain files that are to be ignored during up to date check</param>
      <param name="outputs">The output files produced by compiling this set of sources</param>
      <param name="useMinimalRebuildOptimization">WARNING: Minimal rebuild optimization requires 100% accurate computed outputs to be specified!</param>
      <param name="maintainCompositeRootingMarkers">True to keep composite rooting markers around (many-to-one case) or false to shred them (one-to-one or one-to-many case)</param>
    </member>
    <member name="M:Microsoft.Build.Utilities.CanonicalTrackedInputFiles.#ctor(Microsoft.Build.Framework.ITaskItem[],Microsoft.Build.Framework.ITaskItem[],Microsoft.Build.Utilities.CanonicalTrackedOutputFiles,System.Boolean,System.Boolean)">
      <summary>Constructor for multiple input source files</summary>
      <param name="tlogFiles">The .read. tlog files to interpret</param>
      <param name="sourceFiles">The primary source files to interpret dependencies for</param>
      <param name="outputs">The output files produced by compiling this set of sources</param>
      <param name="useMinimalRebuildOptimization">WARNING: Minimal rebuild optimization requires 100% accurate computed outputs to be specified!</param>
      <param name="maintainCompositeRootingMarkers">True to keep composite rooting markers around (many-to-one case) or false to shred them (one-to-one or one-to-many case)</param>
    </member>
    <member name="M:Microsoft.Build.Utilities.CanonicalTrackedInputFiles.ComputeSourcesNeedingCompilation">
      <summary>This method computes the sources that need to be compiled based on the output files and the full dependency graph of inputs</summary>
      <returns>Array of files that need to be compiled</returns>
    </member>
    <member name="M:Microsoft.Build.Utilities.CanonicalTrackedInputFiles.ComputeSourcesNeedingCompilation(System.Boolean)">
      <summary>This method computes the sources that need to be compiled based on the output files and the full dependency graph of inputs, optionally searching composite rooting markers for subroots that may contain input files</summary>
      <returns>Array of files that need to be compiled</returns>
      <param name="searchForSubRootsInCompositeRootingMarkers">If true, search composite rooting markers for subroots.</param>
    </member>
    <member name="P:Microsoft.Build.Utilities.CanonicalTrackedInputFiles.DependencyTable">
      <summary>Gets the dependency table.</summary>
      <returns>Returns the dependency table.</returns>
    </member>
    <member name="M:Microsoft.Build.Utilities.CanonicalTrackedInputFiles.FileIsExcludedFromDependencyCheck(System.String)">
      <summary>Test to see if the specified file is excluded from tracked dependency checking</summary>
      <param name="fileName">Full path of the file to test</param>
    </member>
    <member name="M:Microsoft.Build.Utilities.CanonicalTrackedInputFiles.RemoveDependenciesFromEntryIfMissing(Microsoft.Build.Framework.ITaskItem)">
      <summary>Remove the output graph entries for the given sources and corresponding outputs</summary>
      <param name="source">Source that should be removed from the graph</param>
    </member>
    <member name="M:Microsoft.Build.Utilities.CanonicalTrackedInputFiles.RemoveDependenciesFromEntryIfMissing(Microsoft.Build.Framework.ITaskItem,Microsoft.Build.Framework.ITaskItem)">
      <summary>Remove the output graph entries for the given sources and corresponding outputs</summary>
      <param name="source">Source that should be removed from the graph</param>
      <param name="correspondingOutput">Outputs that correspond ot the sources (used for same file processing)</param>
    </member>
    <member name="M:Microsoft.Build.Utilities.CanonicalTrackedInputFiles.RemoveDependenciesFromEntryIfMissing(Microsoft.Build.Framework.ITaskItem[])">
      <summary>Remove the output graph entries for the given sources and corresponding outputs</summary>
      <param name="source">Sources that should be removed from the graph</param>
    </member>
    <member name="M:Microsoft.Build.Utilities.CanonicalTrackedInputFiles.RemoveDependenciesFromEntryIfMissing(Microsoft.Build.Framework.ITaskItem[],Microsoft.Build.Framework.ITaskItem[])">
      <summary>Remove the output graph entries for the given sources and corresponding outputs</summary>
      <param name="source">Sources that should be removed from the graph</param>
      <param name="correspondingOutputs">Outputs that correspond ot the sources (used for same file processing)</param>
    </member>
    <member name="M:Microsoft.Build.Utilities.CanonicalTrackedInputFiles.RemoveDependencyFromEntry(Microsoft.Build.Framework.ITaskItem,Microsoft.Build.Framework.ITaskItem)">
      <summary>Remove the output graph entries for the given source and corresponding outputs</summary>
      <param name="source">Source that should be removed from the graph</param>
      <param name="dependencyToRemove">The dependency to remove.</param>
    </member>
    <member name="M:Microsoft.Build.Utilities.CanonicalTrackedInputFiles.RemoveDependencyFromEntry(Microsoft.Build.Framework.ITaskItem[],Microsoft.Build.Framework.ITaskItem)">
      <summary>Remove the output graph entries for the given sources and corresponding outputs</summary>
      <param name="sources">Sources that should be removed from the graph</param>
      <param name="dependencyToRemove">The dependency to remove.</param>
    </member>
    <member name="M:Microsoft.Build.Utilities.CanonicalTrackedInputFiles.RemoveEntriesForSource(Microsoft.Build.Framework.ITaskItem)">
      <summary>Remove the output graph entries for the given sources and corresponding outputs</summary>
      <param name="source">Source that should be removed from the graph</param>
    </member>
    <member name="M:Microsoft.Build.Utilities.CanonicalTrackedInputFiles.RemoveEntriesForSource(Microsoft.Build.Framework.ITaskItem[])">
      <summary>Removes the output graph entries for the given sources and corresponding outputs.</summary>
      <param name="source">Sources that should be removed from the graph</param>
    </member>
    <member name="M:Microsoft.Build.Utilities.CanonicalTrackedInputFiles.RemoveEntryForSourceRoot(System.String)">
      <summary>Removes the entry in the input dependency graph corresponding to a rooting.</summary>
      <param name="rootingMarker">The root to remove.</param>
    </member>
    <member name="M:Microsoft.Build.Utilities.CanonicalTrackedInputFiles.SaveTlog">
      <summary>This method will re-write the tlogs from the current output table new entries will be tracked.</summary>
    </member>
    <member name="M:Microsoft.Build.Utilities.CanonicalTrackedInputFiles.SaveTlog(Microsoft.Build.Utilities.DependencyFilter)">
      <summary>This method will re-write the tlogs from the current dependency. As the sources are compiled, new entries willbe tracked.</summary>
      <param name="includeInTLog">Delegate used to determine whether a particular file should be included in the compacted tlog.</param>
    </member>
    <member name="T:Microsoft.Build.Utilities.CanonicalTrackedOutputFiles">
      <summary>This class is the file tracking log interpreter for .write. tracking logs in canonical form Canoncial .write. logs need to be rooted, since the outputs need to be associated with an input.</summary>
    </member>
    <member name="M:Microsoft.Build.Utilities.CanonicalTrackedOutputFiles.#ctor(Microsoft.Build.Framework.ITask,Microsoft.Build.Framework.ITaskItem[])">
      <summary>Constructor</summary>
      <param name="ownerTask">The task that is using file tracker</param>
      <param name="tlogFiles">The .write. tlog files to interpret</param>
    </member>
    <member name="M:Microsoft.Build.Utilities.CanonicalTrackedOutputFiles.#ctor(Microsoft.Build.Framework.ITask,Microsoft.Build.Framework.ITaskItem[],System.Boolean)">
      <summary>Constructor</summary>
      <param name="ownerTask">The task that is using file tracker</param>
      <param name="tlogFiles">The .write. tlog files to interpret</param>
      <param name="constructOutputsFromTLogs">If true, construct outputs from tlog files.</param>
    </member>
    <member name="M:Microsoft.Build.Utilities.CanonicalTrackedOutputFiles.#ctor(Microsoft.Build.Framework.ITaskItem[])">
      <summary>Constructor</summary>
      <param name="tlogFiles">The .write. tlog files to interpret</param>
    </member>
    <member name="M:Microsoft.Build.Utilities.CanonicalTrackedOutputFiles.AddComputedOutputForSourceRoot(System.String,System.String)">
      <summary>This method adds computed outputs for the given source key to the output graph</summary>
      <param name="sourceKey">The source to add outputs for</param>
      <param name="computedOutput">The computed outputs for this source key.</param>
    </member>
    <member name="M:Microsoft.Build.Utilities.CanonicalTrackedOutputFiles.AddComputedOutputsForSourceRoot(System.String,Microsoft.Build.Framework.ITaskItem[])">
      <summary>This method adds computed outputs for the given source key to the output graph</summary>
      <param name="sourceKey">The source to add outputs for</param>
      <param name="computedOutputs">The computed outputs for this source key.</param>
    </member>
    <member name="M:Microsoft.Build.Utilities.CanonicalTrackedOutputFiles.AddComputedOutputsForSourceRoot(System.String,System.String[])">
      <summary>This method adds computed outputs for the given source key to the output graph</summary>
      <param name="sourceKey">The source to add outputs for</param>
      <param name="computedOutputs">The computed outputs for this source key</param>
    </member>
    <member name="P:Microsoft.Build.Utilities.CanonicalTrackedOutputFiles.DependencyTable">
      <summary>Gets the dependency table.</summary>
      <returns>Returns the dependency table.</returns>
    </member>
    <member name="M:Microsoft.Build.Utilities.CanonicalTrackedOutputFiles.OutputsForNonCompositeSource(Microsoft.Build.Framework.ITaskItem[])">
      <summary>This method determines the outputs for a source root (as in the contents of a rooting marker)</summary>
      <returns>Array of outputs for the source</returns>
      <param name="sources">The sources to find outputs for</param>
    </member>
    <member name="M:Microsoft.Build.Utilities.CanonicalTrackedOutputFiles.OutputsForSource(Microsoft.Build.Framework.ITaskItem[])">
      <summary>This method determines the outputs for a source root (as in the contents of a rooting marker)</summary>
      <returns>Array of outputs for the source</returns>
      <param name="sources">The sources to find outputs for</param>
    </member>
    <member name="M:Microsoft.Build.Utilities.CanonicalTrackedOutputFiles.RemoveDependenciesFromEntryIfMissing(Microsoft.Build.Framework.ITaskItem)">
      <summary>Remove the output graph entries for the given sources and corresponding outputs</summary>
      <param name="source">Source that should be removed from the graph</param>
    </member>
    <member name="M:Microsoft.Build.Utilities.CanonicalTrackedOutputFiles.RemoveDependenciesFromEntryIfMissing(Microsoft.Build.Framework.ITaskItem,Microsoft.Build.Framework.ITaskItem)">
      <summary>Remove the output graph entries for the given sources and corresponding outputs</summary>
      <param name="source">Source that should be removed from the graph</param>
      <param name="correspondingOutput">Outputs that correspond to the sources (used for same file processing)</param>
    </member>
    <member name="M:Microsoft.Build.Utilities.CanonicalTrackedOutputFiles.RemoveDependenciesFromEntryIfMissing(Microsoft.Build.Framework.ITaskItem[])">
      <summary>Remove the output graph entries for the given sources and corresponding outputs</summary>
      <param name="source">Sources that should be removed from the graph</param>
    </member>
    <member name="M:Microsoft.Build.Utilities.CanonicalTrackedOutputFiles.RemoveDependenciesFromEntryIfMissing(Microsoft.Build.Framework.ITaskItem[],Microsoft.Build.Framework.ITaskItem[])">
      <summary>Remove the output graph entries for the given sources and corresponding outputs</summary>
      <param name="source">Sources that should be removed from the graph</param>
      <param name="correspondingOutputs">Outputs that correspond to the sources (used for same file processing)</param>
    </member>
    <member name="M:Microsoft.Build.Utilities.CanonicalTrackedOutputFiles.RemoveDependencyFromEntry(Microsoft.Build.Framework.ITaskItem,Microsoft.Build.Framework.ITaskItem)">
      <summary>Remove the output graph entries for the given source and corresponding outputs</summary>
      <param name="source">Source that should be removed from the graph</param>
      <param name="dependencyToRemove">The dependency to remove.</param>
    </member>
    <member name="M:Microsoft.Build.Utilities.CanonicalTrackedOutputFiles.RemoveDependencyFromEntry(Microsoft.Build.Framework.ITaskItem[],Microsoft.Build.Framework.ITaskItem)">
      <summary>Remove the output graph entries for the given sources and corresponding outputs</summary>
      <param name="sources">Sources that should be removed from the graph</param>
      <param name="dependencyToRemove">The dependency to remove.</param>
    </member>
    <member name="M:Microsoft.Build.Utilities.CanonicalTrackedOutputFiles.RemoveEntriesForSource(Microsoft.Build.Framework.ITaskItem)">
      <summary>Remove the output graph entries for the given sources and corresponding outputs</summary>
      <param name="source">Sources that should be removed from the graph</param>
    </member>
    <member name="M:Microsoft.Build.Utilities.CanonicalTrackedOutputFiles.RemoveEntriesForSource(Microsoft.Build.Framework.ITaskItem,Microsoft.Build.Framework.ITaskItem)">
      <summary>Remove the output graph entries for the given sources and corresponding outputs</summary>
      <param name="source">Sources that should be removed from the graph</param>
      <param name="correspondingOutput">Outputs that correspond to the sources (used for same file processing)</param>
    </member>
    <member name="M:Microsoft.Build.Utilities.CanonicalTrackedOutputFiles.RemoveEntriesForSource(Microsoft.Build.Framework.ITaskItem[])">
      <summary>Remove the output graph entries for the given sources and corresponding outputs</summary>
      <param name="source">Sources that should be removed from the graph</param>
    </member>
    <member name="M:Microsoft.Build.Utilities.CanonicalTrackedOutputFiles.RemoveEntriesForSource(Microsoft.Build.Framework.ITaskItem[],Microsoft.Build.Framework.ITaskItem[])">
      <summary>Remove the output graph entries for the given sources and corresponding outputs</summary>
      <param name="source">Sources that should be removed from the graph</param>
      <param name="correspondingOutputs">Outputs that correspond ot the sources (used for same file processing)</param>
    </member>
    <member name="M:Microsoft.Build.Utilities.CanonicalTrackedOutputFiles.RemoveOutputForSourceRoot(System.String,System.String)">
      <summary>Remove the specified output from the dependency graph for the given source file</summary>
      <param name="sourceRoot">The source root.</param>
      <param name="outputPathToRemove">The output path to be removed</param>
    </member>
    <member name="M:Microsoft.Build.Utilities.CanonicalTrackedOutputFiles.RemoveRootsWithSharedOutputs(Microsoft.Build.Framework.ITaskItem[])">
      <summary>Removes any roots that share the same outputs as the rooting from the dependency graph.</summary>
      <returns>An array of the rooting markers that were removed.</returns>
      <param name="sources">The set of sources that form the rooting markers to be removed.</param>
    </member>
    <member name="M:Microsoft.Build.Utilities.CanonicalTrackedOutputFiles.SaveTlog">
      <summary>This method will re-write the tlogs from the current output table. New entries will be tracked.</summary>
    </member>
    <member name="M:Microsoft.Build.Utilities.CanonicalTrackedOutputFiles.SaveTlog(Microsoft.Build.Utilities.DependencyFilter)">
      <summary>This method will re-write the tlogs from the current output table. New entries will be tracked.</summary>
      <param name="includeInTLog">The dependency filter.</param>
    </member>
    <member name="T:Microsoft.Build.Utilities.CommandLineBuilder">
      <summary>Comprises utility methods for constructing a command line.</summary>
    </member>
    <member name="M:Microsoft.Build.Utilities.CommandLineBuilder.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.Build.Utilities.CommandLineBuilder" /> class.</summary>
    </member>
    <member name="M:Microsoft.Build.Utilities.CommandLineBuilder.#ctor(System.Boolean)">
      <summary>Default constructor</summary>
      <param name="quoteHyphensOnCommandLine">If true, hyphens should be quoted.</param>
    </member>
    <member name="M:Microsoft.Build.Utilities.CommandLineBuilder.AppendFileNameIfNotNull(Microsoft.Build.Framework.ITaskItem)">
      <summary>Appends the command line with the file name of the specified <see cref="T:Microsoft.Build.Framework.ITaskItem" /> object.</summary>
      <param name="fileItem">The task item specification to append to the command line. If it is null, then this method has no effect.</param>
    </member>
    <member name="M:Microsoft.Build.Utilities.CommandLineBuilder.AppendFileNameIfNotNull(System.String)">
      <summary>Appends the command line with file name represented by the parameter, inserting quotation marks if necessary.</summary>
      <param name="fileName">The file name to append. If it is null, then this method has no effect.</param>
    </member>
    <member name="M:Microsoft.Build.Utilities.CommandLineBuilder.AppendFileNamesIfNotNull(Microsoft.Build.Framework.ITaskItem[],System.String)">
      <summary>Appends the command line with the list of file names in the specified <see cref="T:Microsoft.Build.Framework.ITaskItem" /> array, separated by the specified delimiter.</summary>
      <param name="fileItems">The task item specifications to append. If the array is null, then this method has no effect.</param>
      <param name="delimiter">The delimiter to put between task item specifications in the command line.</param>
    </member>
    <member name="M:Microsoft.Build.Utilities.CommandLineBuilder.AppendFileNamesIfNotNull(System.String[],System.String)">
      <summary>Appends the command line with the list of file names in the specified string array, separated by the specified delimiter.</summary>
      <param name="fileNames">The file names to append. If the array is null, then this method has no effect.</param>
      <param name="delimiter">The delimiter to put between file names in the command line.</param>
    </member>
    <member name="M:Microsoft.Build.Utilities.CommandLineBuilder.AppendFileNameWithQuoting(System.String)">
      <summary>Appends the command line with a file name, and surrounds the file name with quotation marks as necessary.</summary>
      <param name="fileName">The file name to append.</param>
    </member>
    <member name="M:Microsoft.Build.Utilities.CommandLineBuilder.AppendQuotedTextToBuffer(System.Text.StringBuilder,System.String)">
      <summary>Appends given text to the buffer after first quoting the text if necessary.</summary>
      <param name="buffer">The buffer to append to.</param>
      <param name="unquotedTextToAppend">The text to be quoted.</param>
    </member>
    <member name="M:Microsoft.Build.Utilities.CommandLineBuilder.AppendSpaceIfNotEmpty">
      <summary>Adds a space to the specified string, given the string is not empty.</summary>
    </member>
    <member name="M:Microsoft.Build.Utilities.CommandLineBuilder.AppendSwitch(System.String)">
      <summary>Appends the command line with the specified switch.</summary>
      <param name="switchName">The name of the switch to append to the command line. This value cannot be null.</param>
    </member>
    <member name="M:Microsoft.Build.Utilities.CommandLineBuilder.AppendSwitchIfNotNull(System.String,Microsoft.Build.Framework.ITaskItem)">
      <summary>Appends the command line with a switch that takes a task item specification that acts a single string parameter.</summary>
      <param name="switchName">The name of the switch to append to the command line. This value cannot be null.</param>
      <param name="parameter">The switch parameter to append to the command line. Quotation marks will be added as necessary. If this value is null, then this method has no effect.</param>
    </member>
    <member name="M:Microsoft.Build.Utilities.CommandLineBuilder.AppendSwitchIfNotNull(System.String,Microsoft.Build.Framework.ITaskItem[],System.String)">
      <summary>Appends the command line with a switch that takes an array of task item specifications that act as string parameters.</summary>
      <param name="switchName">The name of the switch to append to the command line. This value cannot be null.</param>
      <param name="parameters">An array of switch parameters to append to the command line. Quotation marks will be added as necessary. If the array is null, then this method has no effect.</param>
      <param name="delimiter">The delimiter that separates individual parameters. This value can be empty, but it cannot be null.</param>
    </member>
    <member name="M:Microsoft.Build.Utilities.CommandLineBuilder.AppendSwitchIfNotNull(System.String,System.String)">
      <summary>Appends the command line with a switch that takes a single string parameter.</summary>
      <param name="switchName">The name of the switch to append to the command line. This value cannot be null.</param>
      <param name="parameter">The switch parameter to append to the command line. Quotation marks will be added as necessary. If this value is null, then this method has no effect.</param>
    </member>
    <member name="M:Microsoft.Build.Utilities.CommandLineBuilder.AppendSwitchIfNotNull(System.String,System.String[],System.String)">
      <summary>Appends the command line with a switch that takes an array of string parameters.</summary>
      <param name="switchName">The name of the switch to append to the command line. This value cannot be null.</param>
      <param name="parameters">An array of switch parameters to append to the command line. Quotation marks will be added as necessary. If the array is null, then this method has no effect.</param>
      <param name="delimiter">The delimiter that separates individual parameters. This value can be empty, but it cannot be null.</param>
    </member>
    <member name="M:Microsoft.Build.Utilities.CommandLineBuilder.AppendSwitchUnquotedIfNotNull(System.String,Microsoft.Build.Framework.ITaskItem)">
      <summary>Appends the command line with a switch that takes a task item specification as a single string parameter, without attempting to encapsulate the switch parameter with quotation marks.</summary>
      <param name="switchName">The name of the switch to append to the command line. This value cannot be null.</param>
      <param name="parameter">The switch parameter to append to the command line. Quotation marks will not be added. If this value is null, then this method has no effect.</param>
    </member>
    <member name="M:Microsoft.Build.Utilities.CommandLineBuilder.AppendSwitchUnquotedIfNotNull(System.String,Microsoft.Build.Framework.ITaskItem[],System.String)">
      <summary>Appends the command line with a switch that takes an array of task item specifications that act as string parameters, without attempting to encapsulate them with quotation marks.</summary>
      <param name="switchName">The name of the switch to append to the command line. This value cannot be null.</param>
      <param name="parameters">An array of switch parameters to append to the command line. Quotation marks will not be added. If the array is null, then this method has no effect.</param>
      <param name="delimiter">The delimiter that separates individual parameters. This value can be empty, but it cannot be null.</param>
    </member>
    <member name="M:Microsoft.Build.Utilities.CommandLineBuilder.AppendSwitchUnquotedIfNotNull(System.String,System.String)">
      <summary>Appends the command line with a switch that takes a single string parameter, without attempting to encapsulate the switch parameter with quotation marks.</summary>
      <param name="switchName">The name of the switch to append to the command line. This value cannot be null.</param>
      <param name="parameter">The switch parameter to append to the command line. Quotation marks will not be added. If this value is null, then this method has no effect.</param>
    </member>
    <member name="M:Microsoft.Build.Utilities.CommandLineBuilder.AppendSwitchUnquotedIfNotNull(System.String,System.String[],System.String)">
      <summary>Appends the command line with a switch that takes an array of string parameters, without attempting to encapsulate switch parameters with quotation marks.</summary>
      <param name="switchName">The name of the switch to append to the command line. This value cannot be null.</param>
      <param name="parameters">An array of switch parameters to append to the command line. Quotation marks will not be added. If the array is null, then this method has no effect.</param>
      <param name="delimiter">The delimiter that separates individual parameters. This value can be empty, but it cannot be null.</param>
    </member>
    <member name="M:Microsoft.Build.Utilities.CommandLineBuilder.AppendTextUnquoted(System.String)">
      <summary>Appends the command line with string, without attempting to encapsulate the string with quotation marks.</summary>
      <param name="textToAppend">The string to append to the command line.</param>
    </member>
    <member name="M:Microsoft.Build.Utilities.CommandLineBuilder.AppendTextWithQuoting(System.String)">
      <summary>Appends the command line with string, and surrounds the string with quotations marks as necessary.</summary>
      <param name="textToAppend">The string to append to the command line.</param>
    </member>
    <member name="P:Microsoft.Build.Utilities.CommandLineBuilder.CommandLine">
      <summary>Gets the <see cref="T:System.Text.StringBuilder" /> instance representing the command line for inheriting classes.</summary>
      <returns>A <see cref="T:System.Text.StringBuilder" /> for inheriting classes.</returns>
    </member>
    <member name="M:Microsoft.Build.Utilities.CommandLineBuilder.IsQuotingRequired(System.String)">
      <summary>Determines whether the specified string parameter should be surrounded with quotation marks because it contains white space.</summary>
      <returns>true, if the switch parameter should be surrounded with quotation marks; otherwise, false.</returns>
      <param name="parameter">The string to examine for characters that require quotation marks.</param>
    </member>
    <member name="P:Microsoft.Build.Utilities.CommandLineBuilder.Length">
      <summary>Represents the length of the command line.</summary>
    </member>
    <member name="M:Microsoft.Build.Utilities.CommandLineBuilder.ToString">
      <summary>Returns the command line as a string.</summary>
      <returns>A <see cref="T:System.String" /> that represents the command line.</returns>
    </member>
    <member name="M:Microsoft.Build.Utilities.CommandLineBuilder.VerifyThrowNoEmbeddedDoubleQuotes(System.String,System.String)">
      <summary>Returns an error if the command line parameter contains a double-quote (") character. Because double quotes are illegal in command line parameters, this method helps prevent parameter injection attacks.</summary>
      <param name="switchName">A string representing the switch name for the error message.</param>
      <param name="parameter">A string representing the switch parameter to scan for double-quotes.</param>
    </member>
    <member name="T:Microsoft.Build.Utilities.DependencyFilter">
      <summary>Dependency filter delegate. Used during TLog saves in order for tasks to selectively remove dependencies from the written graph.</summary>
      <returns>If the file should actually be written to the TLog (true) or not (false)</returns>
      <param name="fullPath">The full path to the dependency file about to be written to the compacted TLog</param>
    </member>
    <member name="T:Microsoft.Build.Utilities.DotNetFrameworkArchitecture">
      <summary>Used to specify the targeted bitness of the .NET Framework for some methods of ToolLocationHelper</summary>
    </member>
    <member name="F:Microsoft.Build.Utilities.DotNetFrameworkArchitecture.Current">
      <summary>Indicates the .NET Framework that is currently being run under.</summary>
    </member>
    <member name="F:Microsoft.Build.Utilities.DotNetFrameworkArchitecture.Bitness32">
      <summary>Indicates the 32-bit .NET Framework</summary>
    </member>
    <member name="F:Microsoft.Build.Utilities.DotNetFrameworkArchitecture.Bitness64">
      <summary>Indicates the 64-bit .NET Framework</summary>
    </member>
    <member name="T:Microsoft.Build.Utilities.ExecutableType">
      <summary>Enumeration to express the type of executable being wrapped by Tracker.exe</summary>
    </member>
    <member name="F:Microsoft.Build.Utilities.ExecutableType.Native32Bit">
      <summary>32-bit native executable</summary>
    </member>
    <member name="F:Microsoft.Build.Utilities.ExecutableType.Native64Bit">
      <summary>64-bit native executable</summary>
    </member>
    <member name="F:Microsoft.Build.Utilities.ExecutableType.ManagedIL">
      <summary>A managed executable without a specified bitness</summary>
    </member>
    <member name="F:Microsoft.Build.Utilities.ExecutableType.Managed32Bit">
      <summary>A managed executable specifically marked as 32-bit</summary>
    </member>
    <member name="F:Microsoft.Build.Utilities.ExecutableType.Managed64Bit">
      <summary>A managed executable specifically marked as 64-bit</summary>
    </member>
    <member name="F:Microsoft.Build.Utilities.ExecutableType.SameAsCurrentProcess">
      <summary>Use the same bitness as the currently running executable.</summary>
    </member>
    <member name="T:Microsoft.Build.Utilities.FileTracker">
      <summary>This class contains utility functions to encapsulate launching and logging for the Tracker</summary>
    </member>
    <member name="M:Microsoft.Build.Utilities.FileTracker.CreateRootingMarkerResponseFile(Microsoft.Build.Framework.ITaskItem[])">
      <summary>Given a set of source files in the form of ITaskItem, creates a temporary response file containing the rooting marker that corresponds to those sources.</summary>
      <returns>The response file path.</returns>
      <param name="sources">The set of source files.</param>
    </member>
    <member name="M:Microsoft.Build.Utilities.FileTracker.CreateRootingMarkerResponseFile(System.String)">
      <summary>Given a rooting marker, creates a temporary response file with that rooting marker in it.</summary>
      <returns>The response file path.</returns>
      <param name="rootMarker">The rooting marker to put in the response file.</param>
    </member>
    <member name="M:Microsoft.Build.Utilities.FileTracker.EndTrackingContext">
      <summary>Stops tracking file accesses.</summary>
    </member>
    <member name="M:Microsoft.Build.Utilities.FileTracker.EnsureFileTrackerOnPath">
      <summary>Prepends the path to the appropriate FileTracker assembly to the PATH environment variable. Used for inproc tracking.</summary>
      <returns>The old value of PATH</returns>
    </member>
    <member name="M:Microsoft.Build.Utilities.FileTracker.FileIsExcludedFromDependencies(System.String)">
      <summary>Test to see if the specified file is excluded from tracked dependencies</summary>
      <param name="fileName">Full path of the file to test</param>
    </member>
    <member name="M:Microsoft.Build.Utilities.FileTracker.FileIsUnderPath(System.String,System.String)">
      <summary>Test to see if the specified file is under the specified path</summary>
      <param name="fileName">Full path of the file to test</param>
      <param name="path">The path that might contain the file.</param>
    </member>
    <member name="M:Microsoft.Build.Utilities.FileTracker.FindTrackerOnPath">
      <summary>Searches %PATH% for the location of Tracker.exe, and returns the first path that matches.Matching full path to Tracker.exe or null if a matching path is not found.</summary>
    </member>
    <member name="M:Microsoft.Build.Utilities.FileTracker.ForceOutOfProcTracking(Microsoft.Build.Utilities.ExecutableType)">
      <summary>Determines whether we must track out-of-proc, or whether inproc tracking will work.</summary>
      <returns>True if we need to track out-of-proc, false if inproc tracking is OK</returns>
      <param name="toolType">The executable type for the tool being tracked</param>
    </member>
    <member name="M:Microsoft.Build.Utilities.FileTracker.ForceOutOfProcTracking(Microsoft.Build.Utilities.ExecutableType,System.String,System.String)">
      <summary>Determines whether we must track out-of-proc, or whether inproc tracking will work.</summary>
      <returns>True if we need to track out-of-proc, false if inproc tracking is OK</returns>
      <param name="toolType">The executable type for the tool being tracked</param>
      <param name="dllName">The tool being tracked.</param>
      <param name="cancelEventName">The name of the cancel event tracker should listen for, or null if there isn't one</param>
    </member>
    <member name="M:Microsoft.Build.Utilities.FileTracker.FormatRootingMarker(Microsoft.Build.Framework.ITaskItem)">
      <summary>Construct a rooting marker string from the ITaskItem array of primary sources.</summary>
      <param name="source">The primary sources.</param>
    </member>
    <member name="M:Microsoft.Build.Utilities.FileTracker.FormatRootingMarker(Microsoft.Build.Framework.ITaskItem,Microsoft.Build.Framework.ITaskItem)">
      <summary>Construct a rooting marker string from the ITaskItem array of primary sources.</summary>
      <param name="source">The primary sources.</param>
      <param name="output">The output files.</param>
    </member>
    <member name="M:Microsoft.Build.Utilities.FileTracker.FormatRootingMarker(Microsoft.Build.Framework.ITaskItem[])">
      <summary>Construct a rooting marker string from the ITaskItem array of primary sources.</summary>
      <param name="sources">ITaskItem array of primary sources.</param>
    </member>
    <member name="M:Microsoft.Build.Utilities.FileTracker.FormatRootingMarker(Microsoft.Build.Framework.ITaskItem[],Microsoft.Build.Framework.ITaskItem[])">
      <summary>Construct a rooting marker string from the ITaskItem array of primary sources.</summary>
      <param name="sources">ITaskItem array of primary sources.</param>
      <param name="outputs">The output files.</param>
    </member>
    <member name="M:Microsoft.Build.Utilities.FileTracker.GetFileTrackerPath(Microsoft.Build.Utilities.ExecutableType)">
      <summary>Given the ExecutableType of the tool being wrapped and information that we know about our current bitness, figures out and returns the path to the correct FileTracker.dll.</summary>
      <param name="toolType">The ExecutableType of the tool being wrapped.</param>
    </member>
    <member name="M:Microsoft.Build.Utilities.FileTracker.GetTrackerPath(Microsoft.Build.Utilities.ExecutableType)">
      <summary>Given the ExecutableType of the tool being wrapped and information that we know about our current bitness, figures out and returns the path to the correct Tracker.exe.</summary>
      <param name="toolType">The ExecutableType of the tool being wrapped.</param>
    </member>
    <member name="M:Microsoft.Build.Utilities.FileTracker.ResumeTracking">
      <summary>Resume tracking file accesses in the current tracking context.</summary>
    </member>
    <member name="M:Microsoft.Build.Utilities.FileTracker.SetThreadCount(System.Int32)">
      <summary>Set the global thread count, and assign that count to the current thread.</summary>
      <param name="threadCount">The thread count.</param>
    </member>
    <member name="M:Microsoft.Build.Utilities.FileTracker.StartProcess(System.String,System.String,Microsoft.Build.Utilities.ExecutableType)">
      <summary>Start the process; tracking the command.</summary>
      <returns>Process instance</returns>
      <param name="command">The command to track</param>
      <param name="arguments">The command to track's arguments</param>
      <param name="toolType">The type of executable the wrapped tool is</param>
    </member>
    <member name="M:Microsoft.Build.Utilities.FileTracker.StartProcess(System.String,System.String,Microsoft.Build.Utilities.ExecutableType,System.String)">
      <summary>Start the process; tracking the command.</summary>
      <returns>Process instance</returns>
      <param name="command">The command to track</param>
      <param name="arguments">The command to track's arguments</param>
      <param name="toolType">The type of executable the wrapped tool is</param>
      <param name="rootFiles">Rooting marker</param>
    </member>
    <member name="M:Microsoft.Build.Utilities.FileTracker.StartProcess(System.String,System.String,Microsoft.Build.Utilities.ExecutableType,System.String,System.String)">
      <summary>Start the process; tracking the command.</summary>
      <returns>Process instance</returns>
      <param name="command">The command to track</param>
      <param name="arguments">The command to track's arguments</param>
      <param name="toolType">The type of executable the wrapped tool is</param>
      <param name="intermediateDirectory">Intermediate directory where tracking logs will be written</param>
      <param name="rootFiles">Rooting marker</param>
    </member>
    <member name="M:Microsoft.Build.Utilities.FileTracker.StartProcess(System.String,System.String,Microsoft.Build.Utilities.ExecutableType,System.String,System.String,System.String)">
      <summary>Start the process; tracking the command.</summary>
      <returns>Process instance</returns>
      <param name="command">The command to track</param>
      <param name="arguments">The command to track's arguments</param>
      <param name="toolType">The type of executable the wrapped tool is</param>
      <param name="dllName">The name of the dll that will do the tracking</param>
      <param name="intermediateDirectory">Intermediate directory where tracking logs will be written</param>
      <param name="rootFiles">Rooting marker</param>
    </member>
    <member name="M:Microsoft.Build.Utilities.FileTracker.StartProcess(System.String,System.String,Microsoft.Build.Utilities.ExecutableType,System.String,System.String,System.String,System.String)">
      <summary>Start the process; tracking the command.</summary>
      <returns>Process instance</returns>
      <param name="command">The command to track</param>
      <param name="arguments">The command to track's arguments</param>
      <param name="toolType">The type of executable the wrapped tool is</param>
      <param name="dllName">The name of the dll that will do the tracking</param>
      <param name="intermediateDirectory">Intermediate directory where tracking logs will be written</param>
      <param name="rootFiles">Rooting marker</param>
      <param name="cancelEventName">If Tracker should be listening on a particular event for cancellation, pass its name here</param>
    </member>
    <member name="M:Microsoft.Build.Utilities.FileTracker.StartTrackingContext(System.String,System.String)">
      <summary>Starts tracking file accesses.</summary>
      <param name="intermediateDirectory">The directory into which to write the tracking log files</param>
      <param name="taskName">The name of the task calling this function, used to determine the names of the tracking log files</param>
    </member>
    <member name="M:Microsoft.Build.Utilities.FileTracker.StartTrackingContextWithRoot(System.String,System.String,System.String)">
      <summary>Starts tracking file accesses, using the rooting marker in the response file provided. To automatically generate a response file given a rooting marker, call FileTracker.CreateRootingMarkerResponseFile.</summary>
      <param name="intermediateDirectory">The directory into which to write the tracking log files</param>
      <param name="taskName">The name of the task calling this function, used to determine the names of the tracking log files</param>
      <param name="rootMarkerResponseFile">The rooting marker in the response file.</param>
    </member>
    <member name="M:Microsoft.Build.Utilities.FileTracker.StopTrackingAndCleanup">
      <summary>Stop tracking file accesses and get rid of the current tracking contexts.</summary>
    </member>
    <member name="M:Microsoft.Build.Utilities.FileTracker.SuspendTracking">
      <summary>Temporarily suspend tracking of file accesses in the current tracking context.</summary>
    </member>
    <member name="M:Microsoft.Build.Utilities.FileTracker.TrackerArguments(System.String,System.String,System.String,System.String,System.String)">
      <summary>This method constructs the correct Tracker.exe arguments from its parameters</summary>
      <returns>The arguments as a string</returns>
      <param name="command">The command to track</param>
      <param name="arguments">The command to track's arguments</param>
      <param name="dllName">The name of the dll that will do the tracking</param>
      <param name="intermediateDirectory">Intermediate directory where tracking logs will be written</param>
      <param name="rootFiles">Rooting marker</param>
    </member>
    <member name="M:Microsoft.Build.Utilities.FileTracker.TrackerArguments(System.String,System.String,System.String,System.String,System.String,System.String)">
      <summary>This method constructs the correct Tracker.exe arguments from its parameters</summary>
      <returns>The arguments as a string</returns>
      <param name="command">The command to track</param>
      <param name="arguments">The command to track's arguments</param>
      <param name="dllName">The name of the dll that will do the tracking</param>
      <param name="intermediateDirectory">Intermediate directory where tracking logs will be written</param>
      <param name="rootFiles">Rooting marker</param>
      <param name="cancelEventName">If a cancel event has been created that Tracker should be listening for, its name is passed here</param>
    </member>
    <member name="M:Microsoft.Build.Utilities.FileTracker.TrackerCommandArguments(System.String,System.String)">
      <summary>This method constructs the correct Tracker.exe command arguments from its parameters</summary>
      <returns>The arguments as a string</returns>
      <param name="command">The command to track</param>
      <param name="arguments">The command to track's arguments</param>
    </member>
    <member name="M:Microsoft.Build.Utilities.FileTracker.TrackerResponseFileArguments(System.String,System.String,System.String)">
      <summary>This method constructs the correct Tracker.exe response file arguments from its parameters</summary>
      <returns>The arguments as a string</returns>
      <param name="dllName">The name of the dll that will do the tracking</param>
      <param name="intermediateDirectory">Intermediate directory where tracking logs will be written</param>
      <param name="rootFiles">Rooting marker</param>
    </member>
    <member name="M:Microsoft.Build.Utilities.FileTracker.TrackerResponseFileArguments(System.String,System.String,System.String,System.String)">
      <summary>This method constructs the correct Tracker.exe response file arguments from its parameters</summary>
      <returns>The arguments as a string</returns>
      <param name="dllName">The name of the dll that will do the tracking</param>
      <param name="intermediateDirectory">Intermediate directory where tracking logs will be written</param>
      <param name="rootFiles">Rooting marker</param>
      <param name="cancelEventName">If a cancel event has been created that Tracker should be listening for, its name is passed here</param>
    </member>
    <member name="M:Microsoft.Build.Utilities.FileTracker.WriteAllTLogs(System.String,System.String)">
      <summary>Write tracking logs for all contexts and threads.</summary>
      <param name="intermediateDirectory">The directory into which to write the tracking log files</param>
      <param name="taskName">The name of the task calling this function, used to determine the names of the tracking log files</param>
    </member>
    <member name="M:Microsoft.Build.Utilities.FileTracker.WriteContextTLogs(System.String,System.String)">
      <summary>Write tracking logs corresponding to the current tracking context.</summary>
      <param name="intermediateDirectory">The directory into which to write the tracking log files</param>
      <param name="taskName">The name of the task calling this function, used to determine the names of the tracking log files</param>
    </member>
    <member name="T:Microsoft.Build.Utilities.FlatTrackingData">
      <summary>This class is used to track file dependencies during a build.</summary>
    </member>
    <member name="M:Microsoft.Build.Utilities.FlatTrackingData.#ctor(Microsoft.Build.Framework.ITask,Microsoft.Build.Framework.ITaskItem[],System.Boolean)">
      <summary>Constructor</summary>
      <param name="ownerTask">The task that is using file tracker</param>
      <param name="tlogFiles">The tlog files to interpret</param>
      <param name="skipMissingFiles">Ignore files that do not exist on disk</param>
    </member>
    <member name="M:Microsoft.Build.Utilities.FlatTrackingData.#ctor(Microsoft.Build.Framework.ITask,Microsoft.Build.Framework.ITaskItem[],System.DateTime)">
      <summary>Constructor</summary>
      <param name="ownerTask">The task that is using file tracker</param>
      <param name="tlogFiles">The tlog files to interpret</param>
      <param name="missingFileTimeUtc">The DateTime that should be recorded for missing file.</param>
    </member>
    <member name="M:Microsoft.Build.Utilities.FlatTrackingData.#ctor(Microsoft.Build.Framework.ITaskItem[],Microsoft.Build.Framework.ITaskItem[],System.DateTime)">
      <summary>Constructor</summary>
      <param name="tlogFiles">The .write. tlog files to interpret</param>
      <param name="tlogFilesToIgnore">The TLogs to ignore.</param>
      <param name="missingFileTimeUtc">The DateTime that should be recorded for missing file.</param>
    </member>
    <member name="M:Microsoft.Build.Utilities.FlatTrackingData.#ctor(Microsoft.Build.Framework.ITaskItem[],Microsoft.Build.Framework.ITaskItem[],System.DateTime,System.String[],System.Collections.Generic.IDictionary{System.String,System.DateTime})">
      <summary>Constructor</summary>
      <param name="tlogFiles">The .tlog files to interpret</param>
      <param name="tlogFilesToIgnore">The .tlog files to ignore</param>
      <param name="missingFileTimeUtc">The date and time that should be recorded for missing file.</param>
      <param name="excludedInputPaths">The set of paths that contain files to be ignored, including any subdirectories.</param>
      <param name="sharedLastWriteTimeUtcCache">Cache to be used which can be shared between multiple FlatTrackingData instances.</param>
    </member>
    <member name="M:Microsoft.Build.Utilities.FlatTrackingData.#ctor(Microsoft.Build.Framework.ITaskItem[],System.Boolean)">
      <summary>Constructor</summary>
      <param name="tlogFiles">The .write. tlog files to interpret</param>
      <param name="skipMissingFiles">Ignore files that do not exist on disk</param>
    </member>
    <member name="M:Microsoft.Build.Utilities.FlatTrackingData.#ctor(Microsoft.Build.Framework.ITaskItem[],System.DateTime)">
      <summary>Constructor</summary>
      <param name="tlogFiles">The .write. tlog files to interpret</param>
      <param name="missingFileTimeUtc">The DateTime that should be recorded for missing file.</param>
    </member>
    <member name="P:Microsoft.Build.Utilities.FlatTrackingData.DependencyTable">
      <summary>Gets the dependency table.</summary>
      <returns>Returns the dependency table.</returns>
    </member>
    <member name="M:Microsoft.Build.Utilities.FlatTrackingData.FileIsExcludedFromDependencyCheck(System.String)">
      <summary>Returns true if the specified file is excluded from tracked dependency checking.</summary>
      <returns>true if the file is excluded.</returns>
      <param name="fileName">Name of the file to test.</param>
    </member>
    <member name="M:Microsoft.Build.Utilities.FlatTrackingData.FinalizeTLogs(System.Boolean,Microsoft.Build.Framework.ITaskItem[],Microsoft.Build.Framework.ITaskItem[],Microsoft.Build.Framework.ITaskItem[])">
      <summary>Compact and finalize the Tlogs based on the success of the tracked execution. </summary>
      <param name="trackedOperationsSucceeded">True indicates that tracked operations succeeded.</param>
      <param name="readTLogNames">TLogs to be read.</param>
      <param name="writeTLogNames">TLogs to be written.</param>
      <param name="trackedFilesToRemoveFromTLogs">Tracked files to be removed from TLogs.</param>
    </member>
    <member name="M:Microsoft.Build.Utilities.FlatTrackingData.GetLastWriteTimeUtc(System.String)">
      <summary>Returns cached value for last write time of file. Updates the cache the first            time the file is checked.</summary>
      <param name="file">Name of the file</param>
    </member>
    <member name="M:Microsoft.Build.Utilities.FlatTrackingData.IsUpToDate(Microsoft.Build.Utilities.Task,Microsoft.Build.Utilities.UpToDateCheckType,Microsoft.Build.Framework.ITaskItem[],Microsoft.Build.Framework.ITaskItem[])">
      <summary>Checks to see if the tracking data indicates that everything is up to date according to UpToDateCheckType.</summary>
      <returns>Returns true if everything is up to date; false otherwise.</returns>
      <param name="hostTask">The host task.</param>
      <param name="upToDateCheckType">UpToDateCheckType</param>
      <param name="readTLogNames">The array of read tlogs</param>
      <param name="writeTLogNames">The array of write tlogs</param>
    </member>
    <member name="M:Microsoft.Build.Utilities.FlatTrackingData.IsUpToDate(Microsoft.Build.Utilities.TaskLoggingHelper,Microsoft.Build.Utilities.UpToDateCheckType,Microsoft.Build.Utilities.FlatTrackingData,Microsoft.Build.Utilities.FlatTrackingData)">
      <summary>Simple check of up to date state according to the tracking data and the UpToDateCheckType.</summary>
      <returns>Returns true if everything is up to date; false otherwise.</returns>
      <param name="Log">TaskLoggingHelper from the host task</param>
      <param name="upToDateCheckType">UpToDateCheckType to use</param>
      <param name="inputs">FlatTrackingData structure containing the inputs</param>
      <param name="outputs">FlatTrackingData structure containing the outputs</param>
    </member>
    <member name="P:Microsoft.Build.Utilities.FlatTrackingData.MissingFiles">
      <summary>Gets or sets missing files that have been detected in the TLog</summary>
      <returns>Returns missing files that have been detected in the TLog</returns>
    </member>
    <member name="P:Microsoft.Build.Utilities.FlatTrackingData.NewestFileName">
      <summary>Gets or sets the path for the newest file we have seen.</summary>
      <returns>Returns the path for the newest file we have seen.</returns>
    </member>
    <member name="P:Microsoft.Build.Utilities.FlatTrackingData.NewestFileTime">
      <summary>Gets or sets the time for the newest file we have seen</summary>
      <returns>Returns the time for the newest file we have seen.</returns>
    </member>
    <member name="P:Microsoft.Build.Utilities.FlatTrackingData.NewestFileTimeUtc">
      <summary>Gets or sets the UTC time for the newest file we have seen.</summary>
      <returns>Returns the UTC time for the newest file we have seen.</returns>
    </member>
    <member name="P:Microsoft.Build.Utilities.FlatTrackingData.NewestTLogFileName">
      <summary>Gets or sets the path of the newest TLog file.</summary>
      <returns>Returns the path of the newest TLog file.</returns>
    </member>
    <member name="P:Microsoft.Build.Utilities.FlatTrackingData.NewestTLogTime">
      <summary>Gets or sets the time of the newest Tlog.</summary>
      <returns>Returns the time of the newest Tlog.</returns>
    </member>
    <member name="P:Microsoft.Build.Utilities.FlatTrackingData.NewestTLogTimeUtc">
      <summary>Gets or sets the UTC time of the newest Tlog.</summary>
      <returns>Returns the time of the newest Tlog.</returns>
    </member>
    <member name="P:Microsoft.Build.Utilities.FlatTrackingData.OldestFileName">
      <summary>Gets or sets the path for the oldest file we have seen.</summary>
      <returns>Returns the path for the oldest file we have seen.</returns>
    </member>
    <member name="P:Microsoft.Build.Utilities.FlatTrackingData.OldestFileTime">
      <summary>Gets or sets the time for the oldest file we have seen.</summary>
      <returns>Returns the time for the oldest file we have seen.</returns>
    </member>
    <member name="P:Microsoft.Build.Utilities.FlatTrackingData.OldestFileTimeUtc">
      <summary>Gets or sets the UTC time for the oldest file we have seen.</summary>
      <returns>Returns the UTC time for the oldest file we have seen.</returns>
    </member>
    <member name="M:Microsoft.Build.Utilities.FlatTrackingData.SaveTlog">
      <summary>This method will re-write the tlogs from the output table</summary>
    </member>
    <member name="M:Microsoft.Build.Utilities.FlatTrackingData.SaveTlog(Microsoft.Build.Utilities.DependencyFilter)">
      <summary>This method will re-write the tlogs from the current table</summary>
      <param name="includeInTLog">The dependency filter.</param>
    </member>
    <member name="P:Microsoft.Build.Utilities.FlatTrackingData.SkipMissingFiles">
      <summary>Gets or sets a switch that specifies whether files in the TLog, but which no longer exist, be skipped or recorded.</summary>
      <returns>Returns the switch that specifies whether files in the TLog, but which no longer exist, be skipped or recorded.</returns>
    </member>
    <member name="P:Microsoft.Build.Utilities.FlatTrackingData.TlogFiles">
      <summary>Gets or sets the TLog files that back this structure.</summary>
      <returns>Returns the TLog files that back this structure.</returns>
    </member>
    <member name="P:Microsoft.Build.Utilities.FlatTrackingData.TlogsAvailable">
      <summary>Gets or sets a switch that specifies whether all the TLogs that were passed to us are available on disk.</summary>
      <returns>Returns a switch that specifies whether all the TLogs that were passed to us are available on disk.</returns>
    </member>
    <member name="P:Microsoft.Build.Utilities.FlatTrackingData.TreatRootMarkersAsEntries">
      <summary>Gets or sets a switch that specifies whether root markers in the TLog be treated as file accesses, or only as markers.</summary>
      <returns>Returns a switch that specifies whether root markers in the TLog be treated as file accesses, or only as markers.</returns>
    </member>
    <member name="M:Microsoft.Build.Utilities.FlatTrackingData.UpdateFileEntryDetails">
      <summary>Update the current state of entry details for the dependency table</summary>
    </member>
    <member name="T:Microsoft.Build.Utilities.HostObjectInitializationStatus">
      <summary>Defines the next action for <see cref="T:Microsoft.Build.Utilities.ToolTask" /> after an attempt to initialize the host object.</summary>
    </member>
    <member name="F:Microsoft.Build.Utilities.HostObjectInitializationStatus.UseHostObjectToExecute">
      <summary>Indicates that an appropriate host object for this task exists, which can support all of the parameters passed in and should be invoked to do the real work of the task.</summary>
    </member>
    <member name="F:Microsoft.Build.Utilities.HostObjectInitializationStatus.UseAlternateToolToExecute">
      <summary>Indicates that either a host object is not available, or that the host object is not capable of supporting all of the features required for this build. Therefore, <see cref="T:Microsoft.Build.Utilities.ToolTask" /> should fallback to an alternate means of doing the build, such as invoking the command-line tool.</summary>
    </member>
    <member name="F:Microsoft.Build.Utilities.HostObjectInitializationStatus.NoActionReturnSuccess">
      <summary>Indicates that the host object is up to date, and that no further action is necessary.</summary>
    </member>
    <member name="F:Microsoft.Build.Utilities.HostObjectInitializationStatus.NoActionReturnFailure">
      <summary>Indicates that some of the parameters being passed into the task are invalid, and that the task should fail immediately.</summary>
    </member>
    <member name="T:Microsoft.Build.Utilities.Logger">
      <summary>When overridden in a derived form, provides functionality for loggers that handle events raised by the MSBuild engine.</summary>
    </member>
    <member name="M:Microsoft.Build.Utilities.Logger.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.Build.Utilities.Logger" /> class.</summary>
    </member>
    <member name="M:Microsoft.Build.Utilities.Logger.FormatErrorEvent(Microsoft.Build.Framework.BuildErrorEventArgs)">
      <summary>Generates an error message that is in the default format, from a <see cref="T:Microsoft.Build.Framework.BuildErrorEventArgs" /> object.</summary>
      <returns>A <see cref="T:System.String" /> that represents an error message in canonical format.</returns>
      <param name="args">The arguments of the error event.</param>
    </member>
    <member name="M:Microsoft.Build.Utilities.Logger.FormatWarningEvent(Microsoft.Build.Framework.BuildWarningEventArgs)">
      <summary>Generates a warning message that is in the default format, from a <see cref="T:Microsoft.Build.Framework.BuildWarningEventArgs" /> object.</summary>
      <returns>A <see cref="T:System.String" /> that represents a warning message in canonical format.</returns>
      <param name="args">The arguments of the warning event.</param>
    </member>
    <member name="M:Microsoft.Build.Utilities.Logger.Initialize(Microsoft.Build.Framework.IEventSource)">
      <summary>When overridden in a derived class, subscribes the logger to specific events.</summary>
      <param name="eventSource">The available events that a logger can subscribe to.</param>
    </member>
    <member name="M:Microsoft.Build.Utilities.Logger.IsVerbosityAtLeast(Microsoft.Build.Framework.LoggerVerbosity)">
      <summary>Determines whether the current <see cref="P:Microsoft.Build.Utilities.Logger.Verbosity" /> setting is at least the value that is passed in.</summary>
      <returns>true if the current logger verbosity setting is at least the value that is passed in; otherwise, false.</returns>
      <param name="checkVerbosity">The logger verbosity setting passed in.</param>
    </member>
    <member name="P:Microsoft.Build.Utilities.Logger.Parameters">
      <summary>Gets or sets the user-defined parameters of the logger.</summary>
      <returns>The logger parameters. This value can be null.</returns>
    </member>
    <member name="M:Microsoft.Build.Utilities.Logger.Shutdown">
      <summary>When overridden in a derived class, releases the resources allocated to the logger at the time of initialization or during the build.</summary>
    </member>
    <member name="P:Microsoft.Build.Utilities.Logger.Verbosity">
      <summary>Gets or sets the level of detail to show in the event log.</summary>
      <returns>One of the enumeration values. The default is <see cref="F:Microsoft.Build.Framework.LoggerVerbosity.Normal" />.</returns>
    </member>
    <member name="T:Microsoft.Build.Utilities.ProcessorArchitecture">
      <summary>Determines the correct tool in the Toolset that MSBuild should use, based on the current system's processor architecture.</summary>
    </member>
    <member name="F:Microsoft.Build.Utilities.ProcessorArchitecture.AMD64">
      <summary>Represents the AMD64 processor.</summary>
    </member>
    <member name="P:Microsoft.Build.Utilities.ProcessorArchitecture.CurrentProcessArchitecture">
      <summary>Gets the current processor architecture of the system.</summary>
      <returns>A string containing the processor architecture value.</returns>
    </member>
    <member name="F:Microsoft.Build.Utilities.ProcessorArchitecture.IA64">
      <summary>Represents the IA64 processor.</summary>
    </member>
    <member name="F:Microsoft.Build.Utilities.ProcessorArchitecture.MSIL">
      <summary>Represents MSIL.</summary>
    </member>
    <member name="F:Microsoft.Build.Utilities.ProcessorArchitecture.X86">
      <summary>Represents an x86 processor.</summary>
    </member>
    <member name="T:Microsoft.Build.Utilities.TargetDotNetFrameworkVersion">
      <summary>Specifies the version of the .NET Framework to use with the methods in <see cref="T:Microsoft.Build.Utilities.ToolLocationHelper" />.</summary>
    </member>
    <member name="F:Microsoft.Build.Utilities.TargetDotNetFrameworkVersion.Version11">
      <summary>Specifies .NET Framework version 1.1.</summary>
    </member>
    <member name="F:Microsoft.Build.Utilities.TargetDotNetFrameworkVersion.Version20">
      <summary>Specifies .NET Framework version 2.0.</summary>
    </member>
    <member name="F:Microsoft.Build.Utilities.TargetDotNetFrameworkVersion.Version30">
      <summary>Specifies .NET Framework version 3.0.</summary>
    </member>
    <member name="F:Microsoft.Build.Utilities.TargetDotNetFrameworkVersion.Version35">
      <summary>Specifies .NET Framework version 3.5.</summary>
    </member>
    <member name="F:Microsoft.Build.Utilities.TargetDotNetFrameworkVersion.Version40">
      <summary>version 4.0</summary>
    </member>
    <member name="F:Microsoft.Build.Utilities.TargetDotNetFrameworkVersion.VersionLatest">
      <summary>Specifies the most recent released version of the .NET Framework.</summary>
    </member>
    <member name="T:Microsoft.Build.Utilities.Task">
      <summary>When overridden in a derived form, provides functionality for tasks.</summary>
    </member>
    <member name="M:Microsoft.Build.Utilities.Task.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.Build.Utilities.Task" /> class.</summary>
    </member>
    <member name="M:Microsoft.Build.Utilities.Task.#ctor(System.Resources.ResourceManager)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.Build.Utilities.Task" /> class with the specified <see cref="P:Microsoft.Build.Utilities.Task.TaskResources" />.</summary>
      <param name="taskResources">The task resources.</param>
    </member>
    <member name="M:Microsoft.Build.Utilities.Task.#ctor(System.Resources.ResourceManager,System.String)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.Build.Utilities.Task" /> class with the specified <see cref="P:Microsoft.Build.Utilities.Task.TaskResources" /> and <see cref="P:Microsoft.Build.Utilities.Task.HelpKeywordPrefix" />.</summary>
      <param name="taskResources">The task resources.</param>
      <param name="helpKeywordPrefix">The prefix to append to string resources to create Help keywords.</param>
    </member>
    <member name="P:Microsoft.Build.Utilities.Task.BuildEngine">
      <summary>Gets or sets the instance of the <see cref="T:Microsoft.Build.Framework.IBuildEngine" /> object used by the task.</summary>
      <returns>The <see cref="T:Microsoft.Build.Framework.IBuildEngine" /> available to tasks.</returns>
    </member>
    <member name="P:Microsoft.Build.Utilities.Task.BuildEngine2">
      <summary>Gets the instance of the <see cref="T:Microsoft.Build.Framework.IBuildEngine2" /> object used by the task.</summary>
      <returns>The <see cref="T:Microsoft.Build.Framework.IBuildEngine2" /> available to tasks.</returns>
    </member>
    <member name="P:Microsoft.Build.Utilities.Task.BuildEngine3">
      <summary>Gets the instance of the <see cref="T:Microsoft.Build.Framework.IBuildEngine3" /> object used by the task.</summary>
      <returns>The <see cref="T:Microsoft.Build.Framework.IBuildEngine3" /> available to tasks.</returns>
    </member>
    <member name="M:Microsoft.Build.Utilities.Task.Execute">
      <summary>When overridden in a derived class, executes the task.</summary>
      <returns>true if the task successfully executed; otherwise, false.</returns>
    </member>
    <member name="P:Microsoft.Build.Utilities.Task.HelpKeywordPrefix">
      <summary>Gets or sets the prefix used to compose Help keywords from resource names.</summary>
      <returns>The prefix used to compose Help keywords from resource names.</returns>
    </member>
    <member name="P:Microsoft.Build.Utilities.Task.HostObject">
      <summary>Gets or sets the host object associated with the task.</summary>
      <returns>The host object associated with the task. This value can be null.</returns>
    </member>
    <member name="P:Microsoft.Build.Utilities.Task.Log">
      <summary>Gets an instance of a <see cref="T:Microsoft.Build.Utilities.TaskLoggingHelper" /> class containing task logging methods.</summary>
      <returns>The logging helper object.</returns>
    </member>
    <member name="P:Microsoft.Build.Utilities.Task.TaskResources">
      <summary>Gets or sets the culture-specific resources associated with the task.</summary>
      <returns>The culture-specific resources associated with the task. This value can be null.</returns>
    </member>
    <member name="T:Microsoft.Build.Utilities.TaskItem">
      <summary>Defines a single item of the project as it is passed into a task.</summary>
    </member>
    <member name="M:Microsoft.Build.Utilities.TaskItem.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.Build.Utilities.TaskItem" /> class.</summary>
    </member>
    <member name="M:Microsoft.Build.Utilities.TaskItem.#ctor(Microsoft.Build.Framework.ITaskItem)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.Build.Utilities.TaskItem" /> class using the specified source <see cref="T:Microsoft.Build.Framework.ITaskItem" />.</summary>
      <param name="sourceItem">The item to copy.</param>
    </member>
    <member name="M:Microsoft.Build.Utilities.TaskItem.#ctor(System.String)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.Build.Utilities.TaskItem" /> class using the specified item-specification string.</summary>
      <param name="itemSpec">The item specification.</param>
    </member>
    <member name="M:Microsoft.Build.Utilities.TaskItem.#ctor(System.String,System.Collections.IDictionary)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.Build.Utilities.TaskItem" /> class using the specified item-specification string and its metadata.</summary>
      <param name="itemSpec">The item specification.</param>
      <param name="itemMetadata">The custom metadata for the item specification.</param>
    </member>
    <member name="M:Microsoft.Build.Utilities.TaskItem.CloneCustomMetadata">
      <summary>Clones the collection of custom metadata for the item specification.</summary>
      <returns>An <see cref="T:System.Collections.IDictionary" /> that represents a clone of the custom metadata.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:Microsoft.Build.Utilities.TaskItem.CopyMetadataTo(Microsoft.Build.Framework.ITaskItem)">
      <summary>Copies the item-specification metadata to the specified destination task item.</summary>
      <param name="destinationItem">The item that this method will copy metadata to.</param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:Microsoft.Build.Utilities.TaskItem.GetMetadata(System.String)">
      <summary>Retrieves the specified metadata on the item.</summary>
      <returns>A <see cref="T:System.String" /> that represents the metadata value.</returns>
      <param name="metadataName">The name of the metadata to retrieve.</param>
    </member>
    <member name="M:Microsoft.Build.Utilities.TaskItem.InitializeLifetimeService">
      <summary>When overridden in a derived class, gives task items infinite lease time.</summary>
      <returns>null to specify an infinite lifetime.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:Microsoft.Build.Utilities.TaskItem.ItemSpec">
      <summary>Gets or sets the item specification.</summary>
      <returns>A <see cref="T:System.String" /> that represents the item specification.</returns>
    </member>
    <member name="P:Microsoft.Build.Utilities.TaskItem.MetadataCount">
      <summary>Gets the number of metadata set on the item.</summary>
      <returns>An <see cref="T:System.Int32" /> that represents the count of metadata set on the item.</returns>
    </member>
    <member name="P:Microsoft.Build.Utilities.TaskItem.MetadataNames">
      <summary>Gets the names of all the metadata on the item.</summary>
      <returns>An <see cref="T:System.Collections.ICollection" /> of metadata names.</returns>
    </member>
    <member name="M:Microsoft.Build.Utilities.TaskItem.Microsoft#Build#Framework#ITaskItem2#CloneCustomMetadataEscaped">
      <summary>
        <see cref="T:Microsoft.Build.Framework.ITaskItem2" /> implementation which returns a clone of the metadata on this object. Values returned are in their original escaped form.</summary>
      <returns>Returns the cloned metadata, with values' escaping preserved.</returns>
    </member>
    <member name="P:Microsoft.Build.Utilities.TaskItem.Microsoft#Build#Framework#ITaskItem2#EvaluatedIncludeEscaped">
      <summary>
        <see cref="T:Microsoft.Build.Framework.ITaskItem2" /> implementation which gets or sets the item include value.  For disk-based items this would be the file path.</summary>
      <returns>Returns the item include value.</returns>
    </member>
    <member name="M:Microsoft.Build.Utilities.TaskItem.Microsoft#Build#Framework#ITaskItem2#GetMetadataValueEscaped(System.String)">
      <summary>
        <see cref="T:Microsoft.Build.Framework.ITaskItem2" /> implementation which allows the values of metadata on the item to be queried.</summary>
      <returns>Returns the escaped metadata value.</returns>
      <param name="metadataName">The metadata to be queried</param>
    </member>
    <member name="M:Microsoft.Build.Utilities.TaskItem.Microsoft#Build#Framework#ITaskItem2#SetMetadataValueLiteral(System.String,System.String)">
      <summary>
        <see cref="T:Microsoft.Build.Framework.ITaskItem2" /> implementation which allows a piece of custom metadata to be set on the item. Assumes that the value passed in is unescaped, and escapes the value as necessary in order to maintain its value.</summary>
      <param name="metadataName">The metadata name.</param>
      <param name="metadataValue">The metadata value.</param>
    </member>
    <member name="M:Microsoft.Build.Utilities.TaskItem.op_Explicit(Microsoft.Build.Utilities.TaskItem)~System.String">
      <summary>Allows an explicit type cast from a <see cref="T:Microsoft.Build.Utilities.TaskItem" /> to a <see cref="T:System.String" />, and returns the <see cref="P:Microsoft.Build.Utilities.TaskItem.ItemSpec" /> for that item.</summary>
      <returns>The <see cref="P:Microsoft.Build.Utilities.TaskItem.ItemSpec" /> for the item.</returns>
      <param name="taskItemToCast">The item to operate on.</param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:Microsoft.Build.Utilities.TaskItem.RemoveMetadata(System.String)">
      <summary>Removes the specified metadata on the item.</summary>
      <param name="metadataName">The name of metadata to remove.</param>
    </member>
    <member name="M:Microsoft.Build.Utilities.TaskItem.SetMetadata(System.String,System.String)">
      <summary>Sets or modifies the value of the specified metadata on the item.</summary>
      <param name="metadataName">The name of metadata to set or modify.</param>
      <param name="metadataValue">The new value of metadata.</param>
    </member>
    <member name="M:Microsoft.Build.Utilities.TaskItem.ToString">
      <summary>Gets the item specification.</summary>
      <returns>A <see cref="T:System.String" /> that represents the item specification.</returns>
    </member>
    <member name="T:Microsoft.Build.Utilities.TaskLoggingHelper">
      <summary>Provides helper logging methods used by tasks.</summary>
    </member>
    <member name="M:Microsoft.Build.Utilities.TaskLoggingHelper.#ctor(Microsoft.Build.Framework.IBuildEngine,System.String)">
      <summary>Public constructor which can be used by task factories to assist them in logging messages.</summary>
      <param name="buildEngine">The build engine.</param>
      <param name="taskName">The task name.</param>
    </member>
    <member name="M:Microsoft.Build.Utilities.TaskLoggingHelper.#ctor(Microsoft.Build.Framework.ITask)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.Build.Utilities.TaskLoggingHelper" /> class and associates it with the specified task instance.</summary>
      <param name="taskInstance">The task containing an instance of this task.</param>
    </member>
    <member name="P:Microsoft.Build.Utilities.TaskLoggingHelper.BuildEngine">
      <summary>Gets the build engine that is associated with the task.</summary>
      <returns>An <see cref="T:Microsoft.Build.Framework.IBuildEngine" /> that represents the instance of the build engine that is associated with the task.</returns>
    </member>
    <member name="M:Microsoft.Build.Utilities.TaskLoggingHelper.ExtractMessageCode(System.String,System.String@)">
      <summary>Extracts the message code prefix from the given full message string.</summary>
      <returns>The message code prefix that is extracted from the full message string, or null if there is no message code.</returns>
      <param name="message">The full message to parse that includes code prefix.</param>
      <param name="messageWithoutCodePrefix">The message with the code prefix removed.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="message" /> is null.</exception>
    </member>
    <member name="M:Microsoft.Build.Utilities.TaskLoggingHelper.FormatResourceString(System.String,System.Object[])">
      <summary>Loads the specified resource string and optionally formats it using the given arguments.</summary>
      <returns>The formatted string.</returns>
      <param name="resourceName">The name of the string resource to load.</param>
      <param name="args">Optional arguments for formatting the loaded string.</param>
      <exception cref="T:System.ArgumentException">The string resource indicated by <paramref name="resourceName" /> does not exist.</exception>
      <exception cref="T:System.InvalidOperationException">The <see cref="P:Microsoft.Build.Utilities.Task.TaskResources" /> property of the owner task is not set.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="resourceName" /> is null.</exception>
    </member>
    <member name="M:Microsoft.Build.Utilities.TaskLoggingHelper.FormatString(System.String,System.Object[])">
      <summary>Formats the given string using the given arguments.</summary>
      <returns>The formatted string.</returns>
      <param name="unformatted">The string to format.</param>
      <param name="args">Arguments for formatting.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="unformatted" /> is null.</exception>
    </member>
    <member name="M:Microsoft.Build.Utilities.TaskLoggingHelper.GetResourceMessage(System.String)">
      <summary>Gets the message from resource in task library.</summary>
      <returns>Returns the message from resource in task library.</returns>
      <param name="resourceName">The resource name.</param>
    </member>
    <member name="P:Microsoft.Build.Utilities.TaskLoggingHelper.HasLoggedErrors">
      <summary>Gets a value that indicates whether the task has logged any errors through this logging helper object.</summary>
      <returns>true if the task has logged any errors through this logging helper object; otherwise, false.</returns>
    </member>
    <member name="P:Microsoft.Build.Utilities.TaskLoggingHelper.HelpKeywordPrefix">
      <summary>Gets or sets the prefix used to compose Help keywords from resource names.</summary>
      <returns>The prefix used to compose Help keywords from resource names.</returns>
    </member>
    <member name="M:Microsoft.Build.Utilities.TaskLoggingHelper.LogCommandLine(Microsoft.Build.Framework.MessageImportance,System.String)">
      <summary>Logs the command line for an underlying tool, executable file, or shell command of a task using the specified importance level.</summary>
      <param name="importance">One of the values of <see cref="T:Microsoft.Build.Framework.MessageImportance" /> that indicates the importance level of the command line.</param>
      <param name="commandLine">The command line string.</param>
    </member>
    <member name="M:Microsoft.Build.Utilities.TaskLoggingHelper.LogCommandLine(System.String)">
      <summary>Logs the command line for an underlying tool, executable file, or shell command of a task.</summary>
      <param name="commandLine">The command line string.</param>
    </member>
    <member name="M:Microsoft.Build.Utilities.TaskLoggingHelper.LogError(System.String,System.Object[])">
      <summary>Logs an error with the specified message.</summary>
      <param name="message">The message.</param>
      <param name="messageArgs">Optional arguments for formatting the message string.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="message" /> is null.</exception>
    </member>
    <member name="M:Microsoft.Build.Utilities.TaskLoggingHelper.LogError(System.String,System.String,System.String,System.String,System.Int32,System.Int32,System.Int32,System.Int32,System.String,System.Object[])">
      <summary>Logs an error using the specified message and other error details.</summary>
      <param name="subcategory">The description of the error type.</param>
      <param name="errorCode">The error code.</param>
      <param name="helpKeyword">The Help keyword to associate with the error.</param>
      <param name="file">The path to the file containing the error.</param>
      <param name="lineNumber">The line in the file where the error occurs.</param>
      <param name="columnNumber">The column in the file where the error occurs.</param>
      <param name="endLineNumber">The end line in the file where the error occurs.</param>
      <param name="endColumnNumber">The end column in the file where the error occurs.</param>
      <param name="message">The message.</param>
      <param name="messageArgs">Optional arguments for formatting the message string.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="message" /> is null.</exception>
    </member>
    <member name="M:Microsoft.Build.Utilities.TaskLoggingHelper.LogErrorFromException(System.Exception)">
      <summary>Logs an error using the message from the given exception.</summary>
      <param name="exception">The exception to log.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="e" /> is null.</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:Microsoft.Build.Utilities.TaskLoggingHelper.LogErrorFromException(System.Exception,System.Boolean)">
      <summary>Logs an error using the message, and optionally the stack trace, from the given exception.</summary>
      <param name="exception">The exception to log</param>
      <param name="showStackTrace">true to include the stack trace in the log; otherwise, false.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="e" /> is null.</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:Microsoft.Build.Utilities.TaskLoggingHelper.LogErrorFromException(System.Exception,System.Boolean,System.Boolean,System.String)">
      <summary>Logs an error using the message, and optionally the stack-trace from the given exception and any inner exceptions.</summary>
      <param name="exception">The exception to log.</param>
      <param name="showStackTrace">true to include the stack trace in the log; otherwise, false.</param>
      <param name="showDetail">true to log exception types and any inner exceptions; otherwise, false.</param>
      <param name="file">The name of the file related to the exception, or null if the project file should be logged.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="e" /> is null.</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:Microsoft.Build.Utilities.TaskLoggingHelper.LogErrorFromResources(System.String,System.Object[])">
      <summary>Logs an error using the specified resource string.</summary>
      <param name="messageResourceName">The name of the string resource to load.</param>
      <param name="messageArgs">The arguments for formatting the loaded string.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="messageResourceName" /> is null.</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:Microsoft.Build.Utilities.TaskLoggingHelper.LogErrorFromResources(System.String,System.String,System.String,System.String,System.Int32,System.Int32,System.Int32,System.Int32,System.String,System.Object[])">
      <summary>Logs an error using the specified resource string and other error details.</summary>
      <param name="subcategoryResourceName">The name of the string resource that describes the error type.</param>
      <param name="errorCode">The error code.</param>
      <param name="helpKeyword">The Help keyword to associate with the error.</param>
      <param name="file">The path to the file containing the error.</param>
      <param name="lineNumber">The line in the file where the error occurs.</param>
      <param name="columnNumber">The column in the file where the error occurs.</param>
      <param name="endLineNumber">The end line in the file where the error occurs.</param>
      <param name="endColumnNumber">The end column in the file where the error occurs.</param>
      <param name="messageResourceName">The name of the string resource to load.</param>
      <param name="messageArgs">The arguments for formatting the loaded string.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="messageResourceName" /> is null.</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:Microsoft.Build.Utilities.TaskLoggingHelper.LogErrorWithCodeFromResources(System.String,System.Object[])">
      <summary>Logs an error with an error code using the specified resource string.</summary>
      <param name="messageResourceName">The name of the string resource to load.</param>
      <param name="messageArgs">The arguments for formatting the loaded string.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="messageResourceName" /> is null.</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:Microsoft.Build.Utilities.TaskLoggingHelper.LogErrorWithCodeFromResources(System.String,System.String,System.Int32,System.Int32,System.Int32,System.Int32,System.String,System.Object[])">
      <summary>Logs an error using the specified resource string and other error details.</summary>
      <param name="subcategoryResourceName">The name of the string resource that describes the error type.</param>
      <param name="file">The path to the file containing the error.</param>
      <param name="lineNumber">The line in the file where the error occurs.</param>
      <param name="columnNumber">The column in the file where the error occurs.</param>
      <param name="endLineNumber">The end line in the file where the error occurs.</param>
      <param name="endColumnNumber">The end column in the file where the error occurs.</param>
      <param name="messageResourceName">The name of the string resource to load.</param>
      <param name="messageArgs">The arguments for formatting the loaded string.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="messageResourceName" /> is null.</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:Microsoft.Build.Utilities.TaskLoggingHelper.LogExternalProjectFinished(System.String,System.String,System.String,System.Boolean)">
      <summary>Helps log the custom <see cref="T:Microsoft.Build.Framework.ExternalProjectFinishedEventArgs" /> build event.</summary>
      <param name="message">The text message.</param>
      <param name="helpKeyword">The help keyword.</param>
      <param name="projectFile">The name of the project.</param>
      <param name="succeeded">true to indicate that project was built successfully; otherwise, false.</param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:Microsoft.Build.Utilities.TaskLoggingHelper.LogExternalProjectStarted(System.String,System.String,System.String,System.String)">
      <summary>Helps log the custom <see cref="T:Microsoft.Build.Framework.ExternalProjectStartedEventArgs" /> build event.</summary>
      <param name="message">The text message.</param>
      <param name="helpKeyword">The help keyword.</param>
      <param name="projectFile">The name of the project.</param>
      <param name="targetNames">The targets to build. An empty string indicates default targets.</param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:Microsoft.Build.Utilities.TaskLoggingHelper.LogMessage(Microsoft.Build.Framework.MessageImportance,System.String,System.Object[])">
      <summary>Logs a message with the specified string and importance.</summary>
      <param name="importance">One of the enumeration values that specifies the importance of the message.</param>
      <param name="message">The message.</param>
      <param name="messageArgs">The arguments for formatting the message.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="message" /> is null.</exception>
    </member>
    <member name="M:Microsoft.Build.Utilities.TaskLoggingHelper.LogMessage(System.String,System.Object[])">
      <summary>Logs a message with the specified string.</summary>
      <param name="message">The message.</param>
      <param name="messageArgs">The arguments for formatting the message.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="message" /> is null.</exception>
    </member>
    <member name="M:Microsoft.Build.Utilities.TaskLoggingHelper.LogMessageFromResources(Microsoft.Build.Framework.MessageImportance,System.String,System.Object[])">
      <summary>Logs a message with the specified resource string and importance.</summary>
      <param name="importance">One of the enumeration values that specifies the importance of the message.</param>
      <param name="messageResourceName">The name of the string resource to load.</param>
      <param name="messageArgs">The arguments for formatting the loaded string.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="message" /> is null.</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:Microsoft.Build.Utilities.TaskLoggingHelper.LogMessageFromResources(System.String,System.Object[])">
      <summary>Logs a message with the specified resource string.</summary>
      <param name="messageResourceName">The name of the string resource to load.</param>
      <param name="messageArgs">The arguments for formatting the loaded string.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="messageResourceName" /> is null.</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:Microsoft.Build.Utilities.TaskLoggingHelper.LogMessageFromText(System.String,Microsoft.Build.Framework.MessageImportance)">
      <summary>Logs an error message or warning from the given line of text.</summary>
      <returns>true if an error was logged; otherwise, false.</returns>
      <param name="lineOfText">The line of text to log from.</param>
      <param name="messageImportance">One of the values of <see cref="T:Microsoft.Build.Framework.MessageImportance" /> that indicates the importance level of the command line.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="lineOfText" /> is null.</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:Microsoft.Build.Utilities.TaskLoggingHelper.LogMessagesFromFile(System.String)">
      <summary>Logs errors, warnings, and messages for each line of text in the given file.</summary>
      <returns>true to indicate at least one error was logged; otherwise, false.</returns>
      <param name="fileName">The name of the file to log messages from.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="message" /> is null.</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:Microsoft.Build.Utilities.TaskLoggingHelper.LogMessagesFromFile(System.String,Microsoft.Build.Framework.MessageImportance)">
      <summary>Logs errors, warnings, and messages for each line of text in the given file. Also logs the importance of messages.</summary>
      <returns>true to indicate at least one error was logged; otherwise, false.</returns>
      <param name="fileName">The name of the file to log messages from.</param>
      <param name="messageImportance">One of the enumeration values that specifies the importance of logged messages.</param>
      <exception cref="T:System.ArgumentNullException">Thrown when filename is null.</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:Microsoft.Build.Utilities.TaskLoggingHelper.LogMessagesFromStream(System.IO.TextReader,Microsoft.Build.Framework.MessageImportance)">
      <summary>Logs an error message or warning from the given stream.</summary>
      <returns>true if an error was logged; otherwise, false.</returns>
      <param name="stream">A <see cref="T:System.IO.TextReader" /> that reads the stream to log from.</param>
      <param name="messageImportance">One of the values of <see cref="T:Microsoft.Build.Framework.MessageImportance" /> that indicates the importance level of the command line.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="stream" /> is null.</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:Microsoft.Build.Utilities.TaskLoggingHelper.LogWarning(System.String,System.Object[])">
      <summary>Logs a warning with the specified message.</summary>
      <param name="message">The message.</param>
      <param name="messageArgs">Optional arguments for formatting the message string.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="message" /> is null.</exception>
    </member>
    <member name="M:Microsoft.Build.Utilities.TaskLoggingHelper.LogWarning(System.String,System.String,System.String,System.String,System.Int32,System.Int32,System.Int32,System.Int32,System.String,System.Object[])">
      <summary>Logs a warning using the specified message and other warning details.</summary>
      <param name="subcategory">The description of the warning type.</param>
      <param name="warningCode">The warning code.</param>
      <param name="helpKeyword">The Help keyword to associate with the warning.</param>
      <param name="file">The path to the file containing the warning.</param>
      <param name="lineNumber">The line in the file where the warning occurs.</param>
      <param name="columnNumber">The column in the file where the warning occurs.</param>
      <param name="endLineNumber">The end line in the file where the warning occurs.</param>
      <param name="endColumnNumber">The end column in the file where the warning occurs.</param>
      <param name="message">The message.</param>
      <param name="messageArgs">Optional arguments for formatting the message string.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="message" /> is null.</exception>
    </member>
    <member name="M:Microsoft.Build.Utilities.TaskLoggingHelper.LogWarningFromException(System.Exception)">
      <summary>Logs a warning using the message from the specified exception.</summary>
      <param name="exception">The exception to log.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="e" /> is null.</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:Microsoft.Build.Utilities.TaskLoggingHelper.LogWarningFromException(System.Exception,System.Boolean)">
      <summary>Logs a warning using the message, and optionally the stack trace, from the given exception.</summary>
      <param name="exception">The exception to log</param>
      <param name="showStackTrace">true to include the stack trace in the log; otherwise, false.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="e" /> is null.</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:Microsoft.Build.Utilities.TaskLoggingHelper.LogWarningFromResources(System.String,System.Object[])">
      <summary>Logs a warning using the specified resource string.</summary>
      <param name="messageResourceName">The name of the string resource to load.</param>
      <param name="messageArgs">The arguments for formatting the loaded string.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="messageResourceName" /> is null.</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:Microsoft.Build.Utilities.TaskLoggingHelper.LogWarningFromResources(System.String,System.String,System.String,System.String,System.Int32,System.Int32,System.Int32,System.Int32,System.String,System.Object[])">
      <summary>Logs a warning using the specified resource string and other warning details.</summary>
      <param name="subcategoryResourceName">The name of the string resource that describes the warning type.</param>
      <param name="warningCode">The warning code.</param>
      <param name="helpKeyword">The Help keyword to associate with the warning.</param>
      <param name="file">The path to the file containing the warning.</param>
      <param name="lineNumber">The line in the file where the warning occurs.</param>
      <param name="columnNumber">The column in the file where the warning occurs.</param>
      <param name="endLineNumber">The end line in the file where the warning occurs.</param>
      <param name="endColumnNumber">The end column in the file where the warning occurs.</param>
      <param name="messageResourceName">The name of the string resource to load.</param>
      <param name="messageArgs">The arguments for formatting the loaded string.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="messageResourceName" /> is null.</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:Microsoft.Build.Utilities.TaskLoggingHelper.LogWarningWithCodeFromResources(System.String,System.Object[])">
      <summary>Logs a warning with a warning code using the specified resource string.</summary>
      <param name="messageResourceName">The name of the string resource to load.</param>
      <param name="messageArgs">The arguments for formatting the loaded string.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="messageResourceName" /> is null.</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:Microsoft.Build.Utilities.TaskLoggingHelper.LogWarningWithCodeFromResources(System.String,System.String,System.Int32,System.Int32,System.Int32,System.Int32,System.String,System.Object[])">
      <summary>Logs a warning with a warning code using the specified resource string and other warning details.</summary>
      <param name="subcategoryResourceName">The name of the string resource that describes the warning type.</param>
      <param name="file">The path to the file containing the warning.</param>
      <param name="lineNumber">The line in the file where the warning occurs.</param>
      <param name="columnNumber">The column in the file where the warning occurs.</param>
      <param name="endLineNumber">The end line in the file where the warning occurs.</param>
      <param name="endColumnNumber">The end column in the file where the warning occurs.</param>
      <param name="messageResourceName">The name of the string resource to load.</param>
      <param name="messageArgs">The arguments for formatting the loaded string.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="messageResourceName" /> is null.</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:Microsoft.Build.Utilities.TaskLoggingHelper.TaskName">
      <summary>Gets the name of the parent task.</summary>
      <returns>The name of the parent task.</returns>
    </member>
    <member name="P:Microsoft.Build.Utilities.TaskLoggingHelper.TaskResources">
      <summary>Gets or sets the culture-specific resources used by the logging methods.</summary>
      <returns>A <see cref="T:System.Resources.ResourceManager" /> that represents the culture-specific resources used by the logging methods. This value can be null.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="T:Microsoft.Build.Utilities.ToolLocationHelper">
      <summary>Provides utility methods for locating .NET Framework and .NET Framework SDK files and directories.</summary>
    </member>
    <member name="M:Microsoft.Build.Utilities.ToolLocationHelper.GetDisplayNameForTargetFrameworkDirectory(System.String,System.Runtime.Versioning.FrameworkName)">
      <summary>Creates a display name given the target framework details. </summary>
      <returns>Returns a display name given the target framework details. </returns>
      <param name="targetFrameworkDirectory">The target framework directory.</param>
      <param name="frameworkName">The framework name.</param>
    </member>
    <member name="M:Microsoft.Build.Utilities.ToolLocationHelper.GetDotNetFrameworkRootRegistryKey(Microsoft.Build.Utilities.TargetDotNetFrameworkVersion)">
      <summary>Gets the full name of the .NET Framework root registry key.</summary>
      <returns>A string containing the full name of the .NET Framework root registry key.</returns>
      <param name="version">The version of the .NET Framework to target.</param>
    </member>
    <member name="M:Microsoft.Build.Utilities.ToolLocationHelper.GetDotNetFrameworkSdkInstallKeyValue(Microsoft.Build.Utilities.TargetDotNetFrameworkVersion)">
      <summary>Gets the name of the value under the <see cref="M:Microsoft.Build.Utilities.ToolLocationHelper.GetDotNetFrameworkRootRegistryKey(Microsoft.Build.Utilities.TargetDotNetFrameworkVersion)" /> that contains the .NET Framework SDK installation path.</summary>
      <returns>Returns a string containing the name of the registry key value under the <see cref="M:Microsoft.Build.Utilities.ToolLocationHelper.GetDotNetFrameworkRootRegistryKey(Microsoft.Build.Utilities.TargetDotNetFrameworkVersion)" /> that contains the .NET Framework SDK installation path.</returns>
      <param name="version">The version of the .NET Framework to target.</param>
    </member>
    <member name="M:Microsoft.Build.Utilities.ToolLocationHelper.GetDotNetFrameworkSdkRootRegistryKey(Microsoft.Build.Utilities.TargetDotNetFrameworkVersion)">
      <summary>Returns the full name of the .NET Framework SDK root registry key.</summary>
      <returns>Returns a string representation of the registry key root which indicates where to find the .NETFramework sdk.</returns>
      <param name="version">Version of the targeted .NET Framework</param>
    </member>
    <member name="M:Microsoft.Build.Utilities.ToolLocationHelper.GetDotNetFrameworkVersionFolderPrefix(Microsoft.Build.Utilities.TargetDotNetFrameworkVersion)">
      <summary>Gets the prefix of the .NET Framework folder.</summary>
      <returns>Returns the prefix of the .NET Framework folder.</returns>
      <param name="version">The version of the .NET Framework to target.</param>
    </member>
    <member name="M:Microsoft.Build.Utilities.ToolLocationHelper.GetPathToDotNetFramework(Microsoft.Build.Utilities.TargetDotNetFrameworkVersion)">
      <summary>Gets a fully qualified path to the .NET Framework root directory.</summary>
      <returns>A string containing the fully qualified path to the .NET Framework root directory, or a null reference (Nothing in Visual Basic) if the targeted version of the .NET Framework is not installed.</returns>
      <param name="version">The version of the .NET Framework to target.</param>
    </member>
    <member name="M:Microsoft.Build.Utilities.ToolLocationHelper.GetPathToDotNetFramework(Microsoft.Build.Utilities.TargetDotNetFrameworkVersion,Microsoft.Build.Utilities.DotNetFrameworkArchitecture)">
      <summary>Gets a fully qualified path to the framework's root directory.</summary>
      <returns>Returns a fully qualified path to the framework's root directory.</returns>
      <param name="version">Version of the targeted .NET Framework</param>
      <param name="architecture">Desired architecture, or DotNetFrameworkArchitecture.Current for the architecture this process is currently running under.</param>
    </member>
    <member name="M:Microsoft.Build.Utilities.ToolLocationHelper.GetPathToDotNetFrameworkFile(System.String,Microsoft.Build.Utilities.TargetDotNetFrameworkVersion)">
      <summary>Gets a fully qualified path to a file in the .NET Framework directory.</summary>
      <returns>A string containing the fully qualified path to the specified file, or a null reference (Nothing in Visual Basic) if the targeted version of the .NET Framework is not installed.</returns>
      <param name="fileName">The file to locate in the .NET Framework directory.</param>
      <param name="version">The version of the .NET Framework to target.</param>
    </member>
    <member name="M:Microsoft.Build.Utilities.ToolLocationHelper.GetPathToDotNetFrameworkFile(System.String,Microsoft.Build.Utilities.TargetDotNetFrameworkVersion,Microsoft.Build.Utilities.DotNetFrameworkArchitecture)">
      <summary>Gets a fully qualified path to a file in the frameworks root directory for the specified architecture.</summary>
      <returns>Returns a fully qualified path to a file in the frameworks root directory.</returns>
      <param name="fileName">File name to locate in the .NET Framework directory</param>
      <param name="version">Version of the targeted .NET Framework</param>
      <param name="architecture">Desired architecture, or DotNetFrameworkArchitecture.Current for the architecture this process is currently running under.</param>
    </member>
    <member name="M:Microsoft.Build.Utilities.ToolLocationHelper.GetPathToDotNetFrameworkReferenceAssemblies(Microsoft.Build.Utilities.TargetDotNetFrameworkVersion)">
      <summary>Returns the path to the reference assemblies location for the given framework version.</summary>
      <returns>Returns a string containing the fully qualified path to the Reference Assemblies folder, or a null reference (Nothing in Visual Basic) if the targeted version of the .NET Framework is not installed. </returns>
      <param name="version">Version of the targeted .NET Framework</param>
    </member>
    <member name="M:Microsoft.Build.Utilities.ToolLocationHelper.GetPathToDotNetFrameworkSdk(Microsoft.Build.Utilities.TargetDotNetFrameworkVersion)">
      <summary>Gets the fully qualified path to the \bin directory of the .NET Framework SDK.</summary>
      <returns>A string containing the fully qualified path to the \bin directory of the .NET Framework SDK, or a null reference (Nothing in Visual Basic) if the targeted version of the .NET Framework SDK is not installed.</returns>
      <param name="version">The version of the .NET Framework to target.</param>
    </member>
    <member name="M:Microsoft.Build.Utilities.ToolLocationHelper.GetPathToDotNetFrameworkSdkFile(System.String,Microsoft.Build.Utilities.TargetDotNetFrameworkVersion)">
      <summary>Gets the fully qualified path to a file in the .NET Framework SDK.</summary>
      <returns>A string containing the fully qualified path to the \bin directory of the .NET Framework SDK, or a null reference (Nothing in Visual Basic) if the targeted version of the .NET Framework SDK is not installed.</returns>
      <param name="fileName">The file to locate in the .NET Framework SDK.</param>
      <param name="version">The version of the .NET Framework to target.</param>
    </member>
    <member name="M:Microsoft.Build.Utilities.ToolLocationHelper.GetPathToDotNetFrameworkSdkFile(System.String,Microsoft.Build.Utilities.TargetDotNetFrameworkVersion,Microsoft.Build.Utilities.DotNetFrameworkArchitecture)">
      <summary>Gets a fully qualified path to a file in the .NET Framework SDK.</summary>
      <returns>Returns a fully qualified path to a file in the .NET Framework SDK. Throws an error if the .NET Framework SDK can't be found.</returns>
      <param name="fileName">File name to locate in the .NET Framework SDK directory</param>
      <param name="version">Version of the targeted .NET Framework</param>
      <param name="architecture">The required architecture of the requested file.</param>
    </member>
    <member name="M:Microsoft.Build.Utilities.ToolLocationHelper.GetPathToReferenceAssemblies(System.Runtime.Versioning.FrameworkName)">
      <summary>Gets the paths to the reference assemblies location for the given target framework.</summary>
      <returns>Returns the paths to the reference assemblies location.</returns>
      <param name="frameworkName">The framework name.</param>
      <exception cref="T:System.ArgumentNullException">When the frameworkName is null</exception>
    </member>
    <member name="M:Microsoft.Build.Utilities.ToolLocationHelper.GetPathToReferenceAssemblies(System.String,System.Runtime.Versioning.FrameworkName)">
      <summary>Gets the paths to the reference assemblies location for the given framework version relative to a given targetFrameworkRoot.</summary>
      <returns>Returns the paths to the reference assemblies location.</returns>
      <param name="targetFrameworkRootPath">Root directory which will be used to calculate the reference assembly path. The references assembies will be generated in the following way TargetFrameworkRootPath\TargetFrameworkIdentifier\TargetFrameworkVersion\SubType\TargetFrameworkSubType.</param>
      <param name="frameworkName">A frameworkName class which represents a TargetFrameworkMoniker. This cannot be null.</param>
    </member>
    <member name="M:Microsoft.Build.Utilities.ToolLocationHelper.GetPathToReferenceAssemblies(System.String,System.String,System.String)">
      <summary>Returns the paths to the reference assemblies location for the given target framework. This method will assume the requested ReferenceAssemblyRoot path will be the ProgramFiles directory specified by Environment.SpecialFolder.ProgramFiles In additon when the .NETFramework or .NET Framework targetFrameworkIdentifiers are seen and targetFrameworkVersion is 2.0, 3.0, 3.5 or 4.0 we will return the correctly chained reference assembly paths for the legacy .NET Framework versions. This chaining will use the existing GetPathToDotNetFrameworkReferenceAssemblies to build up the list of reference assembly paths.</summary>
      <returns>Collection of reference assembly locations.</returns>
      <param name="targetFrameworkIdentifier">Identifier being targeted</param>
      <param name="targetFrameworkVersion">Version being targeted</param>
      <param name="targetFrameworkProfile">Profile being targeted</param>
      <exception cref="T:System.ArgumentNullException">When the frameworkName is null</exception>
    </member>
    <member name="M:Microsoft.Build.Utilities.ToolLocationHelper.GetPathToStandardLibraries(System.String,System.String,System.String)">
      <summary>Returns the path to the reference assemblies location for the given target framework's standard libraries (i.e. mscorlib). This method will assume the requested ReferenceAssemblyRoot path will be the ProgramFiles directory specified by Environment.SpecialFolder.ProgramFiles In additon when the .NETFramework or .NET Framework targetFrameworkIdentifiers are seen and targetFrameworkVersion is 2.0, 3.0, 3.5 or 4.0 we will return the correctly chained reference assembly paths for the legacy .NET Framework versions. This chaining will use the existing GetPathToDotNetFrameworkReferenceAssemblies to build up the list of reference assembly paths.</summary>
      <returns>Collection of reference assembly locations.</returns>
      <param name="targetFrameworkIdentifier">Identifier being targeted</param>
      <param name="targetFrameworkVersion">Version being targeted</param>
      <param name="targetFrameworkProfile">Profile being targeted</param>
      <exception cref="T:System.ArgumentNullException">When the frameworkName is null</exception>
    </member>
    <member name="M:Microsoft.Build.Utilities.ToolLocationHelper.GetPathToSystemFile(System.String)">
      <summary>Gets a fully qualified path to a file in the system directory.</summary>
      <returns>A string containing the fully qualified path to the the file in the system directory.</returns>
      <param name="fileName">The file to locate in the System folder.</param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:Microsoft.Build.Utilities.ToolLocationHelper.GetProgramFilesReferenceAssemblyRoot">
      <summary>Gets the root location for the reference assembly directory under the program files directory.</summary>
      <returns>Returns the root location for the reference assembly directory.</returns>
    </member>
    <member name="M:Microsoft.Build.Utilities.ToolLocationHelper.GetSupportedTargetFrameworks">
      <summary>Gets a IList of supported target framework monikers.</summary>
      <returns>list of supported target framework monikers</returns>
    </member>
    <member name="M:Microsoft.Build.Utilities.ToolLocationHelper.HighestVersionOfTargetFrameworkIdentifier(System.String,System.String)">
      <summary>Gets the highest version of a target framework moniker based on the identifier. </summary>
      <returns>Returns the highest version of a target framework moniker based on the identifier. This method will only find full frameworks; no profiles will be returned.</returns>
      <param name="targetFrameworkRootDirectory">Target framework root directory.</param>
      <param name="frameworkIdentifier">Framework identifier.</param>
    </member>
    <member name="P:Microsoft.Build.Utilities.ToolLocationHelper.PathToSystem">
      <summary>Gets the fully qualified path of the system directory.</summary>
      <returns>A string containing a directory path to the system directory.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="T:Microsoft.Build.Utilities.ToolTask">
      <summary>When overridden in a derived form, provides functionality for a task that wraps a command line tool.</summary>
    </member>
    <member name="M:Microsoft.Build.Utilities.ToolTask.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.Build.Utilities.ToolTask" /> class.</summary>
    </member>
    <member name="M:Microsoft.Build.Utilities.ToolTask.#ctor(System.Resources.ResourceManager)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.Build.Utilities.ToolTask" /> class with the specified <see cref="T:System.Resources.ResourceManager" />.</summary>
      <param name="taskResources">The <see cref="T:System.Resources.ResourceManager" /> for task resources.</param>
    </member>
    <member name="M:Microsoft.Build.Utilities.ToolTask.#ctor(System.Resources.ResourceManager,System.String)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.Build.Utilities.ToolTask" /> class with the specified <see cref="T:System.Resources.ResourceManager" /> and Help keyword prefix.</summary>
      <param name="taskResources">The <see cref="T:System.Resources.ResourceManager" /> for task resources.</param>
      <param name="helpKeywordPrefix">The Help keyword to use for messages raised by the task.</param>
    </member>
    <member name="M:Microsoft.Build.Utilities.ToolTask.CallHostObjectToExecute">
      <summary>Calls the host object to perform the work of the task.</summary>
      <returns>true if the method was successfule; otherwise, false.</returns>
    </member>
    <member name="M:Microsoft.Build.Utilities.ToolTask.Cancel">
      <summary>Cancels the process executing the task by asking it to close nicely, then after a short period, forcing termination.</summary>
    </member>
    <member name="M:Microsoft.Build.Utilities.ToolTask.DeleteTempFile(System.String)">
      <summary>Deletes the specified temporary file.</summary>
      <param name="fileName">The name of the temporary file to delete.</param>
    </member>
    <member name="P:Microsoft.Build.Utilities.ToolTask.EchoOff">
      <summary>Indicates that command line echoing is turned off.</summary>
      <returns>True when command line echo is off.</returns>
    </member>
    <member name="P:Microsoft.Build.Utilities.ToolTask.EnvironmentOverride">
      <summary>Gets a set of environment variable name-value pairs. Designed to be overridden in a custom task class (derived from ToolTask) to return a set of new or altered environment variables to create the execution context of the associated tool. </summary>
      <returns>Returns a set of environment variables. Each dictionary key is the name of the environment variable to override and the dictionary value is the value to set for that environment variable. The default implementation of EnvironmentOverride returns null.</returns>
    </member>
    <member name="P:Microsoft.Build.Utilities.ToolTask.EnvironmentVariables">
      <summary>Array of equals-separated pairs of environment variables that should be passed to the spawned executable, in addition to (or selectively overriding) the regular environment block.</summary>
    </member>
    <member name="M:Microsoft.Build.Utilities.ToolTask.Execute">
      <summary>Runs the exectuable file with the specified task parameters.</summary>
      <returns>true if the task runs successfully; otherwise, false.</returns>
    </member>
    <member name="M:Microsoft.Build.Utilities.ToolTask.ExecuteTool(System.String,System.String,System.String)">
      <summary>Creates a temporoary response (.rsp) file and runs the executable file.</summary>
      <returns>The returned exit code of the executable file. If the task logged errors, but the executable returned an exit code of 0, this method returns -1.</returns>
      <param name="pathToTool">The path to the executable file.</param>
      <param name="responseFileCommands">The command line arguments to place in the .rsp file.</param>
      <param name="commandLineCommands">The command line arguments to pass directly to the executable file.</param>
    </member>
    <member name="P:Microsoft.Build.Utilities.ToolTask.ExitCode">
      <summary>Gets the returned exit code of the executable file.</summary>
      <returns>The returned exit code of the executable file. If the task logged errors, but the executable returned an exit code of 0, this method returns -1.</returns>
    </member>
    <member name="M:Microsoft.Build.Utilities.ToolTask.GenerateCommandLineCommands">
      <summary>Returns a string value containing the command line arguments to pass directly to the executable file.</summary>
      <returns>A string value containing the command line arguments to pass directly to the executable file.</returns>
    </member>
    <member name="M:Microsoft.Build.Utilities.ToolTask.GenerateFullPathToTool">
      <summary>Returns the fully qualified path to the executable file.</summary>
      <returns>The fully qualified path to the executable file.</returns>
    </member>
    <member name="M:Microsoft.Build.Utilities.ToolTask.GenerateResponseFileCommands">
      <summary>Returns a string value containing the command line arguments to add to the response (.rsp) file before running the executable file.</summary>
      <returns>a string value containing the command line arguments to add to the response (.rsp) file before running the executable file.</returns>
    </member>
    <member name="M:Microsoft.Build.Utilities.ToolTask.GetProcessStartInfo(System.String,System.String,System.String)">
      <summary>Initializes the information required to spawn the process executing the tool.</summary>
      <returns>The information required to start the process.</returns>
      <param name="pathToTool">The path to the tool.</param>
      <param name="commandLineCommands">The command line commands.</param>
      <param name="responseFileSwitch">The response file switch.</param>
    </member>
    <member name="M:Microsoft.Build.Utilities.ToolTask.GetResponseFileSwitch(System.String)">
      <summary>Returns the command line switch used by the executable file to specifiy a response (.rsp) file.</summary>
      <returns>The command line switch used by the executable file to specifiy a response (.rsp) file.</returns>
      <param name="responseFilePath">The full path to the temporary .rsp file.</param>
    </member>
    <member name="M:Microsoft.Build.Utilities.ToolTask.GetWorkingDirectory">
      <summary>Returns the directory in which to run the executable file.</summary>
      <returns>The directory in which to run the executable file, or a null reference (Nothing in Visual Basic) if the executable file should be run in the current directory.</returns>
    </member>
    <member name="M:Microsoft.Build.Utilities.ToolTask.HandleTaskExecutionErrors">
      <summary>Handles execution errors raised by the executable file.</summary>
      <returns>true if the method runs successfully; otherwise, false.</returns>
    </member>
    <member name="P:Microsoft.Build.Utilities.ToolTask.HasLoggedErrors">
      <summary>Whether this ToolTask has logged any errors</summary>
    </member>
    <member name="M:Microsoft.Build.Utilities.ToolTask.InitializeHostObject">
      <summary>Initializes the host object of the task.</summary>
      <returns>The <see cref="T:Microsoft.Build.Utilities.HostObjectInitializationStatus" /> of the host object.</returns>
    </member>
    <member name="M:Microsoft.Build.Utilities.ToolTask.LogEventsFromTextOutput(System.String,Microsoft.Build.Framework.MessageImportance)">
      <summary>Parses a single line of text to identify any errors or warnings in canonical format.</summary>
      <param name="singleLine">A single line of text for the method to parse.</param>
      <param name="messageImportance">A value of <see cref="T:Microsoft.Build.Framework.MessageImportance" /> that indicates the importance level with which to log the message.</param>
    </member>
    <member name="M:Microsoft.Build.Utilities.ToolTask.LogPathToTool(System.String,System.String)">
      <summary>Logs the tool name and path to all registered loggers.</summary>
      <param name="toolName">The executable file name.</param>
      <param name="pathToTool">The path to the executable file.</param>
    </member>
    <member name="P:Microsoft.Build.Utilities.ToolTask.LogStandardErrorAsError">
      <summary>Should ALL messages received on the standard error stream be logged as errors.</summary>
    </member>
    <member name="M:Microsoft.Build.Utilities.ToolTask.LogToolCommand(System.String)">
      <summary>Logs the starting point of the run to all registered loggers.</summary>
      <param name="message">A descriptive message to provide loggers, usually the command line and switches.</param>
    </member>
    <member name="P:Microsoft.Build.Utilities.ToolTask.ResponseFileEncoding">
      <summary>Gets the <see cref="T:System.Text.Encoding" /> of the response file.</summary>
      <returns>The <see cref="T:System.Text.Encoding" /> of the response file.</returns>
    </member>
    <member name="M:Microsoft.Build.Utilities.ToolTask.SkipTaskExecution">
      <summary>Indicates whether task execution should be skipped.</summary>
      <returns>true to skip task execution; otherwise, false.</returns>
    </member>
    <member name="P:Microsoft.Build.Utilities.ToolTask.StandardErrorEncoding">
      <summary>Gets the <see cref="T:System.Text.Encoding" /> of the standard error stream of the task.</summary>
      <returns>The <see cref="T:System.Text.Encoding" /> of the response file.</returns>
    </member>
    <member name="P:Microsoft.Build.Utilities.ToolTask.StandardErrorImportance">
      <summary>Task Parameter: Importance with which to log text from the standard error stream.</summary>
    </member>
    <member name="P:Microsoft.Build.Utilities.ToolTask.StandardErrorImportanceToUse">
      <summary>Gets the actual importance at which standard error messages will be logged.</summary>
      <returns>Returns the actual importance at which standard error messages will be logged.</returns>
    </member>
    <member name="P:Microsoft.Build.Utilities.ToolTask.StandardErrorLoggingImportance">
      <summary>Gets the <see cref="T:Microsoft.Build.Framework.MessageImportance" /> with which to log errors.</summary>
      <returns>The <see cref="T:Microsoft.Build.Framework.MessageImportance" /> with which to log errors.</returns>
    </member>
    <member name="P:Microsoft.Build.Utilities.ToolTask.StandardOutputEncoding">
      <summary>Gets the <see cref="T:System.Text.Encoding" /> of the standard output stream of the task.</summary>
      <returns>The <see cref="T:System.Text.Encoding" /> of the response file.</returns>
    </member>
    <member name="P:Microsoft.Build.Utilities.ToolTask.StandardOutputImportance">
      <summary>Task Parameter: Importance with which to log text from the standard out stream.</summary>
    </member>
    <member name="P:Microsoft.Build.Utilities.ToolTask.StandardOutputImportanceToUse">
      <summary>Gets the actual importance at which standard out messages will be logged.</summary>
      <returns>Returns the actual importance at which standard out messages will be logged.</returns>
    </member>
    <member name="P:Microsoft.Build.Utilities.ToolTask.StandardOutputLoggingImportance">
      <summary>Gets the <see cref="T:Microsoft.Build.Framework.MessageImportance" /> with which to log errors.</summary>
      <returns>The <see cref="T:Microsoft.Build.Framework.MessageImportance" /> with which to log errors.</returns>
    </member>
    <member name="P:Microsoft.Build.Utilities.ToolTask.TaskProcessTerminationTimeout">
      <summary>A timeout to wait for a task to terminate before killing it. In milliseconds.</summary>
    </member>
    <member name="P:Microsoft.Build.Utilities.ToolTask.Timeout">
      <summary>Gets or sets the amount of time after which the task executable is terminated.</summary>
      <returns>The time-out length, in milliseconds.</returns>
    </member>
    <member name="P:Microsoft.Build.Utilities.ToolTask.ToolCanceled">
      <summary>Used to signal when a tool has been cancelled.</summary>
    </member>
    <member name="P:Microsoft.Build.Utilities.ToolTask.ToolExe">
      <summary>Projects may set this to override a task's ToolName. Tasks may override this to prevent that.</summary>
    </member>
    <member name="P:Microsoft.Build.Utilities.ToolTask.ToolName">
      <summary>Gets the name of the executable file to run.</summary>
      <returns>The name of the executable file to run.</returns>
    </member>
    <member name="P:Microsoft.Build.Utilities.ToolTask.ToolPath">
      <summary>Gets or sets the path of the executable file to run.</summary>
      <returns>The path of the file to run.</returns>
    </member>
    <member name="P:Microsoft.Build.Utilities.ToolTask.UseCommandProcessor">
      <summary>Gets or sets a switch that specifies whether the tool task will create a batch file for the command-line and execute that using the command-processor, rather than executing the command directly.</summary>
      <returns>If true, the tool task will create a batch file for the command-line and execute that using the command-processor. If false the tool task will execute the command directly.</returns>
    </member>
    <member name="M:Microsoft.Build.Utilities.ToolTask.ValidateParameters">
      <summary>Indicates whether all task paratmeters are valid.</summary>
      <returns>true if all task parameters are valid; otherwise, false.</returns>
    </member>
    <member name="P:Microsoft.Build.Utilities.ToolTask.YieldDuringToolExecution">
      <summary>Indicates if the task will yield the node during tool execution.</summary>
      <returns>True when the task will yield the node during tool execution.</returns>
    </member>
    <member name="T:Microsoft.Build.Utilities.TrackedDependencies">
      <summary>This class contains utility functions to assist with tracking dependencies</summary>
    </member>
    <member name="M:Microsoft.Build.Utilities.TrackedDependencies.ExpandWildcards(Microsoft.Build.Framework.ITaskItem[])">
      <summary>Expand wildcards in the item list.</summary>
      <returns>Array of items expanded</returns>
      <param name="expand">Array of items to be expanded.</param>
    </member>
    <member name="T:Microsoft.Build.Utilities.UpToDateCheckType">
      <summary>The possible types of up to date check that we can support</summary>
    </member>
    <member name="F:Microsoft.Build.Utilities.UpToDateCheckType.InputNewerThanOutput">
      <summary>Input newer than output</summary>
    </member>
    <member name="F:Microsoft.Build.Utilities.UpToDateCheckType.InputOrOutputNewerThanTracking">
      <summary>Input or output newer than tracking</summary>
    </member>
    <member name="F:Microsoft.Build.Utilities.UpToDateCheckType.InputNewerThanTracking">
      <summary>Input newer than tracking</summary>
    </member>
  </members>
</doc>
=== C:/Users/treeman/Desktop/windows nt source code\xbox\Xbox Live Source\XONLINE_MAIN\public\ext\sdk\CLR\netfx40rtm\Profile\Client\Microsoft.Build.Tasks.v4.0.xml ===
ï»¿<?xml version="1.0" encoding="utf-8"?>
<doc>
  <assembly>
    <name>Microsoft.Build.Tasks.v4.0</name>
  </assembly>
  <members>
    <member name="T:Microsoft.Build.Tasks.AL">
      <summary>Implements the AL task. Use the AL element in your project file to create and execute this task. For usage and parameter information, see AL (Assembly Linker) Task.</summary>
    </member>
    <member name="M:Microsoft.Build.Tasks.AL.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.Build.Tasks.AL" /> class.</summary>
    </member>
    <member name="M:Microsoft.Build.Tasks.AL.AddResponseFileCommands(Microsoft.Build.Tasks.CommandLineBuilderExtension)">
      <summary>Fills the specified <paramref name="commandLine" /> parameter with switches and other information that can go into a response file.</summary>
      <param name="commandLine">Command line builder to add arguments to.</param>
    </member>
    <member name="P:Microsoft.Build.Tasks.AL.AlgorithmId">
      <summary>Gets or sets an algorithm to hash all files in a multifile assembly except the file that contains the assembly manifest.</summary>
      <returns>The algorithm to hash all files in a multifile assembly except the file that contains the assembly manifest.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.AL.BaseAddress">
      <summary>Gets or sets the address at which a DLL will be loaded on the userâs computer at run time.</summary>
      <returns>The address at which a DLL will be loaded on the userâs computer at run time.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.AL.CompanyName">
      <summary>Gets or sets the Company field in the assembly.</summary>
      <returns>The Company field in the assembly.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.AL.Configuration">
      <summary>Gets or sets the Configuration field in the assembly.</summary>
      <returns>The Configuration field in the assembly.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.AL.Copyright">
      <summary>Gets or sets the Copyright field in the assembly.</summary>
      <returns>The Copyright field in the assembly.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.AL.Culture">
      <summary>Gets or sets the culture string to associate with the assembly.</summary>
      <returns>The culture string to associate with the assembly.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.AL.DelaySign">
      <summary>Gets or sets a Boolean value that indicates whether to place only the public key in the assembly (true) or to fully sign the assembly (false).</summary>
      <returns>true if only the public key is placed in the assembly; false if the assembly is fully signed.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.AL.Description">
      <summary>Gets or sets the Description field in the assembly.</summary>
      <returns>The Description field in the assembly.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.AL.EmbedResources">
      <summary>Gets or sets the resources to embed in the image that contains the assembly manifest.</summary>
      <returns>The resources to embed in the image that contains the assembly manifest.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.AL.EvidenceFile">
      <summary>Gets or sets the file to embed in the assembly with the resource name of Security.Evidence.</summary>
      <returns>The file to embed in the assembly with the resource name of Security.Evidence.</returns>
    </member>
    <member name="M:Microsoft.Build.Tasks.AL.Execute">
      <summary>Executes the AL task.</summary>
      <returns>true if task execution succeeded; otherwise, false.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.AL.FileVersion">
      <summary>Gets or sets the File Version field in the assembly.</summary>
      <returns>The File Version field in the assembly.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.AL.Flags">
      <summary>Gets or sets the Flags field in the assembly.</summary>
      <returns>The Flags field in the assembly.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.AL.GenerateFullPaths">
      <summary>Gets or sets a Boolean value that indicates whether to cause the task to use the absolute path for any files that are reported in an error message.</summary>
      <returns>true if the task will use the absolute path for any files that are reported in an error message; otherwise, false.</returns>
    </member>
    <member name="M:Microsoft.Build.Tasks.AL.GenerateFullPathToTool">
      <summary>Returns the full file path to the AL tool.</summary>
      <returns>The full file path to the AL tool.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.AL.KeyContainer">
      <summary>Gets or sets a container that holds a key pair.</summary>
      <returns>The container that holds a key pair.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.AL.KeyFile">
      <summary>Gets or sets a file that contains a key pair or just a public key to sign an assembly.</summary>
      <returns>The file that contains a key pair or just a public key to sign an assembly.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.AL.LinkResources">
      <summary>Gets or sets the resource files to link to an assembly.</summary>
      <returns>The resource files to link to an assembly.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.AL.MainEntryPoint">
      <summary>Gets or sets the fully qualified name (class.method) of the method to use as an entry point when converting a module to an executable file.</summary>
      <returns>The fully qualified name (class.method) of the method to use as an entry point when converting a module to an executable file.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.AL.OutputAssembly">
      <summary>Gets or sets the name of the file generated by this task.</summary>
      <returns>The name of the file generated by this task.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.AL.Platform">
      <summary>Gets or sets a string that limits which platform this code can run on; must be one of x86, Itanium, x64, or anycpu.</summary>
      <returns>A string that limits which platform this code can run on; must be one of x86, Itanium, x64, or anycpu.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.AL.ProductName">
      <summary>Gets or sets the Product field in the assembly.</summary>
      <returns>The Product field in the assembly.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.AL.ProductVersion">
      <summary>Gets or sets the ProductVersion field in the assembly.</summary>
      <returns>The ProductVersion field in the assembly.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.AL.ResponseFiles">
      <summary>Gets or sets the names of the response files that contain commands for the AL tool.</summary>
      <returns>The names of the response files that contain commands for the AL tool.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.AL.SdkToolsPath">
      <summary>Gets or sets the path to the SDK tools.</summary>
      <returns>Returns the path to the SDK tools.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.AL.SourceModules">
      <summary>Gets or sets the modules to be compiled into an assembly.</summary>
      <returns>The modules to be compiled into an assembly.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.AL.TargetType">
      <summary>Gets or sets the file format of the output file: library (code library), exe (console application), or win (Windows-based application).</summary>
      <returns>The file format of the output file: library (code library), exe (console application), or win (Windows-based application).</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.AL.TemplateFile">
      <summary>Gets or sets the assembly from which to inherit all assembly metadata, except the culture field.</summary>
      <returns>The assembly from which to inherit all assembly metadata, except the culture field.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.AL.Title">
      <summary>Gets or sets the Title field in the assembly.</summary>
      <returns>The Title field in the assembly.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.AL.ToolName">
      <summary>Gets the name of the tool (Al.exe).</summary>
      <returns>The name of the tool.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.AL.Trademark">
      <summary>Gets or sets the Trademark field in the assembly.</summary>
      <returns>The Trademark field in the assembly.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.AL.Version">
      <summary>Gets or sets the version information for this assembly.</summary>
      <returns>The version information for this assembly.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.AL.Win32Icon">
      <summary>Gets or sets the .ico file to insert in the assembly.</summary>
      <returns>The .ico file to insert in the assembly.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.AL.Win32Resource">
      <summary>Gets or sets a Win32 resource (.res file) to insert in the output file.</summary>
      <returns>The Win32 resource (.res file) to insert in the output file.</returns>
    </member>
    <member name="T:Microsoft.Build.Tasks.AppDomainIsolatedTaskExtension">
      <summary>Provides the same functionality as the <see cref="T:Microsoft.Build.Utilities.Task" /> class, but derives from <see cref="T:System.MarshalByRefObject" /> so that it can be instantiated in its own application domain.</summary>
    </member>
    <member name="P:Microsoft.Build.Tasks.AppDomainIsolatedTaskExtension.Log">
      <summary>Gets an instance of a <see cref="T:Microsoft.Build.Tasks.TaskLoggingHelperExtension" /> class containing task logging methods.</summary>
      <returns>The logging helper object.</returns>
    </member>
    <member name="T:Microsoft.Build.Tasks.AspNetCompiler">
      <summary>Implements the AspNetCompiler task. Use the AspNetCompiler element in your project file to create and execute this task. For usage and parameter information, see AspNetCompiler Task.</summary>
    </member>
    <member name="M:Microsoft.Build.Tasks.AspNetCompiler.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.Build.Tasks.AspNetCompiler" /> class.</summary>
    </member>
    <member name="M:Microsoft.Build.Tasks.AspNetCompiler.AddCommandLineCommands(Microsoft.Build.Tasks.CommandLineBuilderExtension)">
      <summary>Generates command line arguments for the AspNetCompiler tool.</summary>
      <param name="commandLine">Command line builder to add arguments to.</param>
    </member>
    <member name="P:Microsoft.Build.Tasks.AspNetCompiler.AllowPartiallyTrustedCallers">
      <summary>Gets or sets a Boolean value that indicates whether the <see cref="T:System.Security.AllowPartiallyTrustedCallersAttribute" />, which allows partially trusted callers access to an assembly, should be applied to the strongly named assembly that Aspnet_compiler.exe generates.</summary>
      <returns>true if the <see cref="T:System.Security.AllowPartiallyTrustedCallersAttribute" /> should be applied to the strongly named assembly that Aspnet_compiler.exe generates; otherwise, false.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.AspNetCompiler.Clean">
      <summary>Gets or sets a Boolean value that indicates whether the precompiled application will be built clean.</summary>
      <returns>true if the precompiled application will be built clean; otherwise, false.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.AspNetCompiler.Debug">
      <summary>Gets or sets a Boolean value that indicates whether debug information (.PDB file) is emitted during compilation.</summary>
      <returns>true if the debug information (.PDB file) is emitted during compilation; otherwise, false.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.AspNetCompiler.DelaySign">
      <summary>Gets or sets a Boolean value that indicates whether the <see cref="T:System.Reflection.AssemblyDelaySignAttribute" />, which indicates that an assembly should be signed only with the public key token rather than with the public/private key pair, should be applied to the generated assembly.</summary>
      <returns>true if the <see cref="T:System.Reflection.AssemblyDelaySignAttribute" /> should be applied to the generated assembly; otherwise, false.</returns>
    </member>
    <member name="M:Microsoft.Build.Tasks.AspNetCompiler.Execute">
      <summary>Executes the AspNetCompiler task.</summary>
      <returns>true if task execution succeeded; otherwise, false.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.AspNetCompiler.FixedNames">
      <summary>Gets or sets a Boolean value that indicates whether one assembly should be generated for each page in the application.</summary>
      <returns>true if one assembly should be generated for each page in the application; otherwise, false.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.AspNetCompiler.Force">
      <summary>Gets or sets a Boolean value that specifies whether existing files in the <paramref name="targetDir" /> directory and its subdirectories should be overwritten.</summary>
      <returns>true if existing files in the <paramref name="targetDir" /> directory and its subdirectories should be overwritten; otherwise, false.</returns>
    </member>
    <member name="M:Microsoft.Build.Tasks.AspNetCompiler.GenerateFullPathToTool">
      <summary>Returns the full file path of the AspNetCompiler tool.</summary>
      <returns>The full file path of the AspNetCompiler tool.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.AspNetCompiler.KeyContainer">
      <summary>Gets or sets a Boolean value that indicates whether the <see cref="T:System.Reflection.AssemblyKeyNameAttribute" />, which indicates the name of the container for the public/private key pair that is used to generate a strong name, should be applied to the compiled assembly.</summary>
      <returns>true if the <see cref="T:System.Reflection.AssemblyKeyNameAttribute" /> should be applied to the compiled assembly; otherwise, false.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.AspNetCompiler.KeyFile">
      <summary>Gets or sets a Boolean value that indicates whether the <see cref="T:System.Reflection.AssemblyKeyFileAttribute" />, which indicates the name of the file containing the public/private key pair that is used to generate a strong name, should be applied to the compiled assembly.</summary>
      <returns>true if the <see cref="T:System.Reflection.AssemblyKeyFileAttribute" /> should be applied to the compiled assembly; otherwise, false.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.AspNetCompiler.MetabasePath">
      <summary>Gets or sets the full IIS metabase path of the application.</summary>
      <returns>The full IIS metabase path of the application.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.AspNetCompiler.PhysicalPath">
      <summary>Gets or sets the physical path of the application to be compiled.</summary>
      <returns>The physical path of the application to be compiled.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.AspNetCompiler.TargetFrameworkMoniker">
      <summary>Gets or sets the TargetFrameworkMoniker indicating which .NET Framework version of aspnet_compiler.exe should be used.</summary>
      <returns>Returns the TargetFrameworkMoniker.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.AspNetCompiler.TargetPath">
      <summary>Gets or sets the physical path to which the application is compiled.</summary>
      <returns>The physical path to which the application is compiled.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.AspNetCompiler.ToolName">
      <summary>Gets the name of the AspNetCompiler tool (aspnet_compiler.exe).</summary>
      <returns>The name of the AspNetCompiler tool.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.AspNetCompiler.Updateable">
      <summary>Gets or sets a Boolean value that indicates whether the precompiled application will be updateable.</summary>
      <returns>true if the precompiled application will be updateable; otherwise, false.</returns>
    </member>
    <member name="M:Microsoft.Build.Tasks.AspNetCompiler.ValidateParameters">
      <summary>Validates input parameters and logs errors or warnings, if any. Returns a Boolean value that indicates whether task execution should proceed.</summary>
      <returns>true if task execution should proceed; otherwise, false.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.AspNetCompiler.VirtualPath">
      <summary>Gets or sets the virtual path of the application to be compiled.</summary>
      <returns>The virtual path of the application to be compiled.</returns>
    </member>
    <member name="T:Microsoft.Build.Tasks.AssignCulture">
      <summary>Implements the AssignCulture task. Use the AssignCulture element in your project file to create and execute this task. For usage and parameter information, see AssignCulture Task.</summary>
    </member>
    <member name="M:Microsoft.Build.Tasks.AssignCulture.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.Build.Tasks.AssignCulture" /> class.</summary>
    </member>
    <member name="P:Microsoft.Build.Tasks.AssignCulture.AssignedFiles">
      <summary>Gets a list of <see cref="P:Microsoft.Build.Tasks.AssignCulture.Files" /> with a Culture metadata entry added to each item.</summary>
      <returns>The list of <see cref="P:Microsoft.Build.Tasks.AssignCulture.Files" />, with a Culture metadata entry added to each item.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.AssignCulture.AssignedFilesWithCulture">
      <summary>Gets a subset of <see cref="P:Microsoft.Build.Tasks.AssignCulture.AssignedFiles" /> that have a Culture metadata entry.</summary>
      <returns>A subset of <see cref="P:Microsoft.Build.Tasks.AssignCulture.AssignedFiles" /> that have a Culture metadata entry.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.AssignCulture.AssignedFilesWithNoCulture">
      <summary>Gets a subset of <see cref="P:Microsoft.Build.Tasks.AssignCulture.AssignedFiles" /> that do not have a Culture metadata entry.</summary>
      <returns>A subset of <see cref="P:Microsoft.Build.Tasks.AssignCulture.AssignedFiles" /> that do not have a Culture metadata entry.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.AssignCulture.CultureNeutralAssignedFiles">
      <summary>Gets a subset of <see cref="P:Microsoft.Build.Tasks.AssignCulture.AssignedFiles" /> that do not have a Culture metadata entry.</summary>
      <returns>A subset of <see cref="P:Microsoft.Build.Tasks.AssignCulture.AssignedFiles" /> that do not have a Culture metadata entry.</returns>
    </member>
    <member name="M:Microsoft.Build.Tasks.AssignCulture.Execute">
      <summary>Executes the AssignCulture task.</summary>
      <returns>true if task execution succeeded; otherwise, false.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.AssignCulture.Files">
      <summary>Gets or sets a list of files with embedded culture names to assign a culture to.</summary>
      <returns>The list of files with embedded culture names to assign a culture to.</returns>
    </member>
    <member name="T:Microsoft.Build.Tasks.AssignProjectConfiguration">
      <summary>Assigns XML project configurations to project reference task items.</summary>
    </member>
    <member name="M:Microsoft.Build.Tasks.AssignProjectConfiguration.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.Build.Tasks.AssignProjectConfiguration" /> class.</summary>
    </member>
    <member name="P:Microsoft.Build.Tasks.AssignProjectConfiguration.AssignedProjects">
      <summary>Gets or sets the list of resolved project reference paths while preserving the original project reference attributes.</summary>
      <returns>The list of resolved project reference paths.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.AssignProjectConfiguration.CurrentProjectConfiguration">
      <summary>Gets or sets the current project's configuration.</summary>
      <returns>Returns the current project's configuration.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.AssignProjectConfiguration.CurrentProjectPlatform">
      <summary>Gets or sets the current project's platform.</summary>
      <returns>Returns the current project's platform.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.AssignProjectConfiguration.DefaultToVcxPlatformMapping">
      <summary>Gets or sets a semicolon-delimited list of mappings from the platform names used by most VS types to those used by .vcxprojs.</summary>
      <returns>Returns a semicolon-delimited list of mappings from the platform names used by most VS types to those used by .vcxprojs.</returns>
    </member>
    <member name="M:Microsoft.Build.Tasks.AssignProjectConfiguration.Execute">
      <summary>Executes the AssignProjectConfiguration task.</summary>
      <returns>true if task execution succeeded; otherwise, false.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.AssignProjectConfiguration.OnlyReferenceAndBuildProjectsEnabledInSolutionConfiguration">
      <summary>Gets or sets a switch that specifies whether references should be built, even if they were disabled in the project configuration.</summary>
      <returns>Returns true if references should be built; false otherwise. Defaults to false.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.AssignProjectConfiguration.OutputType">
      <summary>Gets or sets the output type for the project.</summary>
      <returns>Returns the output type for the project.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.AssignProjectConfiguration.ResolveConfigurationPlatformUsingMappings">
      <summary>Gets or sets a switch that specifies whether default mappings should be used to resolve the configuration/platform of the passed in project references.</summary>
      <returns>Returns true if default mappings should be used; false otherwise.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.AssignProjectConfiguration.ShouldUnsetParentConfigurationAndPlatform">
      <summary>Gets or sets a switch that determines whether to set the GlobalPropertiesToRemove metadata on the project reference such that on an MSBuild call, the Configuration and Platform metadata will be unset, allowing the child project to build in its default configuration / platform.</summary>
      <returns>Returns true if the Configuration and Platform metadata will be unset; false otherwise. The default is false.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.AssignProjectConfiguration.SolutionConfigurationContents">
      <summary>Gets or sets an XML string that contains the project configuration.</summary>
      <returns>An XML string that contains the project configuration.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.AssignProjectConfiguration.UnassignedProjects">
      <summary>Gets or sets the list of project reference items that could not be resolved using the pre-resolved list of outputs.</summary>
      <returns>The list of project reference items that could not be resolved using the pre-resolved list of outputs.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.AssignProjectConfiguration.VcxToDefaultPlatformMapping">
      <summary>Gets or sets a semicolon-delimited list of mappings from .vcxproj platform names to the platform names use by most other VS project types.</summary>
      <returns>Returns the semicolon-delimited list of mappings.</returns>
    </member>
    <member name="T:Microsoft.Build.Tasks.AssignTargetPath">
      <summary>Assigns target paths to input files.</summary>
    </member>
    <member name="M:Microsoft.Build.Tasks.AssignTargetPath.#ctor">
      <summary>Creates a new instance of the <see cref="T:Microsoft.Build.Tasks.AssignTargetPath" /> class.</summary>
    </member>
    <member name="P:Microsoft.Build.Tasks.AssignTargetPath.AssignedFiles">
      <summary>Gets the output files that are assigned to target paths.</summary>
      <returns>The output files that are assigned to target paths.</returns>
    </member>
    <member name="M:Microsoft.Build.Tasks.AssignTargetPath.Execute">
      <summary>Executes the AssignTargetPath task.</summary>
      <returns>true if task execution succeeded; otherwise, false.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.AssignTargetPath.Files">
      <summary>Gets or sets the input files to assign target paths to.</summary>
      <returns>The input files.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.AssignTargetPath.RootFolder">
      <summary>Gets or sets the root folder that the target file paths are relative to.</summary>
      <returns>The root folder that the target file paths are relative to.</returns>
    </member>
    <member name="T:Microsoft.Build.Tasks.CallTarget">
      <summary>Implements the CallTarget task. Use the CallTarget element in your project file to create and execute this task. For usage and parameter information, see CallTarget Task.</summary>
    </member>
    <member name="M:Microsoft.Build.Tasks.CallTarget.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.Build.Tasks.CallTarget" /> class.</summary>
    </member>
    <member name="M:Microsoft.Build.Tasks.CallTarget.Execute">
      <summary>Instructs the MSBuild engine to build one or more targets in the current project.</summary>
      <returns>true if all targets built successfully; otherwise, false.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.CallTarget.RunEachTargetSeparately">
      <summary>Gets or sets a Boolean value that indicates whether the MSBuild engine is called once per target (true) or the MSBuild engine is called once to build all targets (false).</summary>
      <returns>true if the MSBuild engine is called once per target; falseÂ if the MSBuild engine is called once to build all targets.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.CallTarget.TargetOutputs">
      <summary>Gets the outputs of all built targets.</summary>
      <returns>The outputs of all built targets.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.CallTarget.Targets">
      <summary>Gets or sets the target or targets to build.</summary>
      <returns>The target or targets to build.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.CallTarget.UseResultsCache">
      <summary>Gets or sets a Boolean value that indicates whether the MSBuild engine will return the built targets from the cache.</summary>
      <returns>true if the MSBuild engine will return the built targets from the cache; otherwise, false.</returns>
    </member>
    <member name="T:Microsoft.Build.Tasks.CodeTaskFactory">
      <summary>A task factory which can take a code DOM supported language and create a task from it.</summary>
    </member>
    <member name="M:Microsoft.Build.Tasks.CodeTaskFactory.#ctor">
      <summary>Creates the task factory.</summary>
    </member>
    <member name="M:Microsoft.Build.Tasks.CodeTaskFactory.CleanupTask(Microsoft.Build.Framework.ITask)">
      <summary>Cleans up any context or state used in a task.</summary>
      <param name="task">The task to clean up.</param>
    </member>
    <member name="M:Microsoft.Build.Tasks.CodeTaskFactory.CreateTask(Microsoft.Build.Framework.IBuildEngine)">
      <summary>Create a taskfactory instance which contains the data that needs to be refreshed between task invocations.</summary>
      <param name="loggingHost">The host that logs information from the task factory.</param>
    </member>
    <member name="P:Microsoft.Build.Tasks.CodeTaskFactory.FactoryName">
      <summary>The MSBuild engine uses this for logging.</summary>
      <returns>Returns the name of the task.</returns>
    </member>
    <member name="M:Microsoft.Build.Tasks.CodeTaskFactory.GetTaskParameters">
      <summary>Gets the type information for all task parameters.</summary>
      <returns>Returns an array of the type information for all task parameters.</returns>
    </member>
    <member name="M:Microsoft.Build.Tasks.CodeTaskFactory.Initialize(System.String,System.Collections.Generic.IDictionary{System.String,Microsoft.Build.Framework.TaskPropertyInfo},System.String,Microsoft.Build.Framework.IBuildEngine)">
      <summary>Initialzes the task factory.</summary>
      <param name="taskName">The name of the task.</param>
      <param name="taskParameters">The parameters for the task.</param>
      <param name="taskElementContents">The element contents for the task.</param>
      <param name="taskFactoryLoggingHost">The logging host that gets information about tasks.</param>
    </member>
    <member name="P:Microsoft.Build.Tasks.CodeTaskFactory.TaskType">
      <summary>Represents the type of task.</summary>
    </member>
    <member name="T:Microsoft.Build.Tasks.CombinePath">
      <summary>Combines the specified paths into a single path.</summary>
    </member>
    <member name="M:Microsoft.Build.Tasks.CombinePath.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.Build.Tasks.CombinePath" /> class.</summary>
    </member>
    <member name="P:Microsoft.Build.Tasks.CombinePath.BasePath">
      <summary>Gets or sets the base path to combine with the other paths. Can be a relative path, absolute path, or blank.</summary>
      <returns>The base path to combine with the other paths.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.CombinePath.CombinedPaths">
      <summary>Gets or sets the combined path that is created by the CombinePath task.</summary>
      <returns>The combined path that is created by the CombinePath task.</returns>
    </member>
    <member name="M:Microsoft.Build.Tasks.CombinePath.Execute">
      <summary>Executes the CombinePath task.</summary>
      <returns>true if task execution succeeded; otherwise, false.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.CombinePath.Paths">
      <summary>Gets or sets a list of individual paths to combine with the <see cref="P:Microsoft.Build.Tasks.CombinePath.BasePath" /> to form the combined path. Paths can be relative or absolute.</summary>
      <returns>A list of individual paths to combine with the <see cref="P:Microsoft.Build.Tasks.CombinePath.BasePath" /> to form the combined path.</returns>
    </member>
    <member name="T:Microsoft.Build.Tasks.CommandLineBuilderExtension">
      <summary>Comprises extended utility methods for constructing a command line.</summary>
    </member>
    <member name="M:Microsoft.Build.Tasks.CommandLineBuilderExtension.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.Build.Tasks.CommandLineBuilderExtension" /> class. </summary>
    </member>
    <member name="M:Microsoft.Build.Tasks.CommandLineBuilderExtension.GetQuotedText(System.String)">
      <summary>Returns a quoted string appropriate for appending to a command line.</summary>
      <returns>A string representing the new quoted string.</returns>
      <param name="unquotedText">The string to convert.</param>
    </member>
    <member name="T:Microsoft.Build.Tasks.ConvertToAbsolutePath">
      <summary>Implements the ConvertToAbsolutePath task. Use the ConvertToAbsolutePath element in your project file to create and execute this task. For usage and parameter information, see ConvertToAbsolutePath Task.</summary>
    </member>
    <member name="M:Microsoft.Build.Tasks.ConvertToAbsolutePath.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.Build.Tasks.ConvertToAbsolutePath" /> class.</summary>
    </member>
    <member name="P:Microsoft.Build.Tasks.ConvertToAbsolutePath.AbsolutePaths">
      <summary>Gets or sets a list of absolute paths.</summary>
      <returns>The list of absolute paths.</returns>
    </member>
    <member name="M:Microsoft.Build.Tasks.ConvertToAbsolutePath.Execute">
      <summary>Executes the ConvertToAbsolutePath task.</summary>
      <returns>true if task execution succeeded; otherwise, false.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.ConvertToAbsolutePath.Paths">
      <summary>Gets or sets a list of relative paths to convert to absolute paths.</summary>
      <returns>The list of relative paths to convert to absolute paths.</returns>
    </member>
    <member name="T:Microsoft.Build.Tasks.Copy">
      <summary>Implements the Copy task. Use the Copy element in your project file to create and execute this task. For usage and parameter information, see Copy Task.</summary>
    </member>
    <member name="M:Microsoft.Build.Tasks.Copy.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.Build.Tasks.Copy" /> class.</summary>
    </member>
    <member name="P:Microsoft.Build.Tasks.Copy.CopiedFiles">
      <summary>Gets the items that were successfully copied.</summary>
      <returns>The items that were successfully copied.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.Copy.DestinationFiles">
      <summary>Gets or sets a list of files to copy the source files to.</summary>
      <returns>The list of files to copy the source files to.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.Copy.DestinationFolder">
      <summary>Gets or sets the directory to which you want to copy the files.</summary>
      <returns>The directory to which you want to copy the files.</returns>
    </member>
    <member name="M:Microsoft.Build.Tasks.Copy.Execute">
      <summary>Executes the Copy task.</summary>
      <returns>true if task execution succeeded; otherwise, false.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.Copy.OverwriteReadOnlyFiles">
      <summary>Gets or sets a Boolean value that indicates whether to overwrite files even if they are marked as read only files.</summary>
      <returns>true if the Copy task should overwrite files even if they are marked as read only files; otherwise, false.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.Copy.Retries">
      <summary>How many times to attempt to copy, if all previous attempts failed. Defaults to zero. Warning: using retries may mask a synchronization problem in your build process.</summary>
    </member>
    <member name="P:Microsoft.Build.Tasks.Copy.RetryDelayMilliseconds">
      <summary>Delay between any necessary retries. Defaults to <see cref="F:Microsoft.Build.Tasks.Copy.RetryDelayMillisecondsDefault" /></summary>
    </member>
    <member name="P:Microsoft.Build.Tasks.Copy.SkipUnchangedFiles">
      <summary>Gets or sets a Boolean value that indicates whether the Copy task should skip the copying of files that are unchanged between the source and destination.</summary>
      <returns>true if the Copy task should skip the copying of files that are unchanged between the source and destination; otherwise, false.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.Copy.SourceFiles">
      <summary>Gets or sets the files to copy.</summary>
      <returns>The files to copy.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.Copy.UseHardlinksIfPossible">
      <summary>Indicates if hard links should be used.</summary>
    </member>
    <member name="T:Microsoft.Build.Tasks.CreateCSharpManifestResourceName">
      <summary>Creates a C#-style manifest name from a given resource file name.</summary>
    </member>
    <member name="M:Microsoft.Build.Tasks.CreateCSharpManifestResourceName.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.Build.Tasks.CreateCSharpManifestResourceName" /> class.</summary>
    </member>
    <member name="M:Microsoft.Build.Tasks.CreateCSharpManifestResourceName.CreateManifestName(System.String,System.String,System.String,System.String,System.IO.Stream)">
      <summary>Returns the C#-style manifest resource name that corresponds to the specified resource file.</summary>
      <returns>The manifest resource name that corresponds to the specified resource file.</returns>
      <param name="fileName">The name of the resource file from which to create the C# manifest name.</param>
      <param name="linkFileName">The name of the link file.</param>
      <param name="rootNamespace">The root namespace of the resource file, typically taken from the project file. May be null.</param>
      <param name="dependentUponFileName">The file name of the parent of the resource file (usually a .cs file). May be null.</param>
      <param name="binaryStream">File contents binary stream. May be null.</param>
    </member>
    <member name="M:Microsoft.Build.Tasks.CreateCSharpManifestResourceName.IsSourceFile(System.String)">
      <summary>Indicates whether the specified file is a C# source file.</summary>
      <returns>true if the specified file is a C# source file; otherwise, false.</returns>
      <param name="fileName">The name of the file to examine.</param>
    </member>
    <member name="T:Microsoft.Build.Tasks.CreateItem">
      <summary>Implements the CreateItem task. Use the CreateItem element in your project file to create and execute this task. For usage and parameter information, see CreateItem Task.</summary>
    </member>
    <member name="M:Microsoft.Build.Tasks.CreateItem.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.Build.Tasks.CreateItem" /> class.</summary>
    </member>
    <member name="P:Microsoft.Build.Tasks.CreateItem.AdditionalMetadata">
      <summary>Gets or sets additional metadata to attach to the output items.</summary>
      <returns>Additional metadata to attach to the output items.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.CreateItem.Exclude">
      <summary>Gets or sets the items to exclude from the output item collection.</summary>
      <returns>The items to exclude from the output item collection.</returns>
    </member>
    <member name="M:Microsoft.Build.Tasks.CreateItem.Execute">
      <summary>Executes the CreateItem task.</summary>
      <returns>true if task execution succeeded; otherwise, false.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.CreateItem.Include">
      <summary>Gets or sets the items to include in the output item collection.</summary>
      <returns>The items to include in the output item collection.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.CreateItem.PreserveExistingMetadata">
      <summary>Gets or sets a Boolean value that indicates whether to apply the additional metadata only if none already exists.</summary>
      <returns>true if the CreateItem task should apply the additional metadata only if none already exists; otherwise, false.</returns>
    </member>
    <member name="T:Microsoft.Build.Tasks.CreateManifestResourceName">
      <summary>Determines the manifest resource name to assign to a resource.</summary>
    </member>
    <member name="M:Microsoft.Build.Tasks.CreateManifestResourceName.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.Build.Tasks.CreateManifestResourceName" /> class.</summary>
    </member>
    <member name="M:Microsoft.Build.Tasks.CreateManifestResourceName.CreateManifestName(System.String,System.String,System.String,System.String,System.IO.Stream)">
      <summary>When overridden in a derived class, creates the manifest resource name.</summary>
      <returns>The manifest resource name.</returns>
      <param name="fileName">The name of the dependent file.</param>
      <param name="linkFileName">The name of the file specified by the Link attribute.</param>
      <param name="rootNamespaceName">The root namespace. This parameter may be a null reference (Nothing in Visual Basic).</param>
      <param name="dependentUponFileName">The file name of the parent of this dependency. This parameter may be a null reference (Nothing).</param>
      <param name="binaryStream">The binary stream contents of the file. This parameter may be a null reference (Nothing).</param>
    </member>
    <member name="M:Microsoft.Build.Tasks.CreateManifestResourceName.Execute">
      <summary>Runs the task.</summary>
      <returns>true if the method was successful; otherwise, false.</returns>
    </member>
    <member name="M:Microsoft.Build.Tasks.CreateManifestResourceName.IsSourceFile(System.String)">
      <summary>When overridden in a derived class, indicates whether the specified file is a valid source file.</summary>
      <returns>true if the file is a valid source file; otherwise, false.</returns>
      <param name="fileName">The file name.</param>
    </member>
    <member name="M:Microsoft.Build.Tasks.CreateManifestResourceName.MakeValidEverettIdentifier(System.String)">
      <summary>Creates a valid identifier for use with Visual Studio 2003.</summary>
      <returns>The identifier to use with Visual Studio 2003.</returns>
      <param name="name">The file name.</param>
    </member>
    <member name="P:Microsoft.Build.Tasks.CreateManifestResourceName.ManifestResourceNames">
      <summary>Gets the created manifest resource names.</summary>
      <returns>The created manifest resource names.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.CreateManifestResourceName.PrependCultureAsDirectory">
      <summary>Gets or sets whether the culture name should be prepended to the manifest resource name as a directory.</summary>
      <returns>true if the culture name should be prepended, false if otherwise.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.CreateManifestResourceName.ResourceFiles">
      <summary>Gets or sets the dependent resource files.</summary>
      <returns>The dependent resource files.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.CreateManifestResourceName.ResourceFilesWithManifestResourceNames">
      <summary>Gets or sets the initial list of resource names, along with additional metadata for manifest resource names.</summary>
      <returns>An <see cref="T:Microsoft.Build.Framework.ITaskItem" /> object, representing the resource names and metadata.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.CreateManifestResourceName.RootNamespace">
      <summary>Gets or sets the root namespace to use for naming.</summary>
      <returns>The root namespace to use for naming.</returns>
    </member>
    <member name="T:Microsoft.Build.Tasks.CreateProperty">
      <summary>Implements the CreateProperty task. Use the CreateProperty element in your project file to create and execute this task. For usage and parameter information, see CreateProperty Task.</summary>
    </member>
    <member name="M:Microsoft.Build.Tasks.CreateProperty.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.Build.Tasks.CreateProperty" /> class.</summary>
    </member>
    <member name="M:Microsoft.Build.Tasks.CreateProperty.Execute">
      <summary>Executes the CreateProperty task.</summary>
      <returns>true if task execution succeeded; otherwise, false.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.CreateProperty.Value">
      <summary>Gets or sets the value to copy to the new property.</summary>
      <returns>The value to copy to the new property</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.CreateProperty.ValueSetByTask">
      <summary>Contains the same value as the <see cref="P:Microsoft.Build.Tasks.CreateProperty.Value" /> property.</summary>
      <returns>The same value as the <see cref="P:Microsoft.Build.Tasks.CreateProperty.Value" /> property.</returns>
    </member>
    <member name="T:Microsoft.Build.Tasks.CreateVisualBasicManifestResourceName">
      <summary>Creates a Visual Basic-style manifest name from a given resource file name.</summary>
    </member>
    <member name="M:Microsoft.Build.Tasks.CreateVisualBasicManifestResourceName.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.Build.Tasks.CreateVisualBasicManifestResourceName" /> class.</summary>
    </member>
    <member name="M:Microsoft.Build.Tasks.CreateVisualBasicManifestResourceName.CreateManifestName(System.String,System.String,System.String,System.String,System.IO.Stream)">
      <summary>Returns the Visual Basic-style manifest resource name that corresponds to the specifiedÂ resource file.</summary>
      <returns>The manifest resource name that corresponds to the specified resource file.</returns>
      <param name="fileName">The name of the resource file from which to create the Visual Basic manifest name.</param>
      <param name="linkFileName">The name of the link file.</param>
      <param name="rootNamespace">The root namespace of the resource file, typically taken from the project file. May be null.</param>
      <param name="dependentUponFileName">The file name of the parent of the resource file (usually a .vb file). May be null.</param>
      <param name="binaryStream">File contents binary stream. May be null.</param>
    </member>
    <member name="M:Microsoft.Build.Tasks.CreateVisualBasicManifestResourceName.IsSourceFile(System.String)">
      <summary>Indicates whether the specified file is a Visual BasicÂ source file.</summary>
      <returns>true if the specified file is a Visual BasicÂ source file; otherwise, false.</returns>
      <param name="fileName">The name of the file to examine.</param>
    </member>
    <member name="T:Microsoft.Build.Tasks.Csc">
      <summary>Implements the Csc task. Use the Csc element in your project file to create and execute this task. For usage and parameter information, see Csc Task.</summary>
    </member>
    <member name="M:Microsoft.Build.Tasks.Csc.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.Build.Tasks.Csc" /> class.</summary>
    </member>
    <member name="M:Microsoft.Build.Tasks.Csc.AddResponseFileCommands(Microsoft.Build.Tasks.CommandLineBuilderExtension)">
      <summary>Fills the specified <paramref name="commandLine" /> parameter with switches and other information that can go into a response file.</summary>
      <param name="commandLine">Command line builder to add arguments to.</param>
    </member>
    <member name="P:Microsoft.Build.Tasks.Csc.AllowUnsafeBlocks">
      <summary>Gets or sets a Boolean value that indicates whether to compile code that uses the unsafe keyword.</summary>
      <returns>true if will compile code that uses the unsafe keyword; otherwise, false.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.Csc.ApplicationConfiguration">
      <summary>Returns configuration information.</summary>
    </member>
    <member name="P:Microsoft.Build.Tasks.Csc.BaseAddress">
      <summary>Gets or sets the preferred base address at which to load a DLL.</summary>
      <returns>The preferred base address at which to load a DLL.</returns>
    </member>
    <member name="M:Microsoft.Build.Tasks.Csc.CallHostObjectToExecute">
      <summary>Compiles the project through the host object.</summary>
      <returns>true if compilation succeeded; otherwise, false.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.Csc.CheckForOverflowUnderflow">
      <summary>Gets or sets a Boolean value that indicates whether the Csc task should cause an exception at run time for integer arithmetic that overflows the bounds of the data type.</summary>
      <returns>Gets or sets a Boolean value that indicates whether true if the Csc task should cause an exception at run time for integer arithmetic that overflows the bounds of the data type.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.Csc.DisabledWarnings">
      <summary>Gets or sets the list of warnings to be disabled.</summary>
      <returns>The list of warnings to be disabled.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.Csc.DocumentationFile">
      <summary>Gets or sets the XML file to hold the documentation comments.</summary>
      <returns>The XML file to hold the documentation comments.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.Csc.ErrorReport">
      <summary>Gets or sets the method to report a C# internal compiler error to Microsoft.</summary>
      <returns>The method to report a C# internal compiler error to Microsoft.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.Csc.GenerateFullPaths">
      <summary>Gets or sets a Boolean value that indicates whether to generate the absolute path to the file in the compiler output (true) or to generate the name of the file in the compiler output (false).</summary>
      <returns>true if the Csc task should generate the absolute path to the file in the compiler output; false if the Csc task should generate the name of the file in the compiler output.</returns>
    </member>
    <member name="M:Microsoft.Build.Tasks.Csc.GenerateFullPathToTool">
      <summary>Returns the full file path of the Csc tool.</summary>
      <returns>The full file path of the Csc tool.</returns>
    </member>
    <member name="M:Microsoft.Build.Tasks.Csc.InitializeHostObject">
      <summary>Returns a host object initialization status value that indicates what the next action should be.</summary>
      <returns>A host object initialization status value that indicates what the next action should be.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.Csc.LangVersion">
      <summary>Gets or sets the version of the language to use.</summary>
      <returns>The version of the language to use.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.Csc.ModuleAssemblyName">
      <summary>Gets or sets an assembly whose non-public types a .netmodule can access.</summary>
      <returns>An assembly whose non-public types a .netmodule can access.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.Csc.NoStandardLib">
      <summary>Gets or sets a Boolean value that indicates whether the Csc task should prevent the import of mscorlib.dll, which defines the entire System namespace.</summary>
      <returns>true if the Csc task should prevent the import of mscorlib.dll; otherwise, false.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.Csc.PdbFile">
      <summary>Gets or sets the path of the .pdb file.</summary>
      <returns>The path of the .pdb file.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.Csc.Platform">
      <summary>Gets or sets the processor platform to be targeted by the output file.</summary>
      <returns>The processor platform to be targeted by the output file.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.Csc.ToolName">
      <summary>Returns the name of the Csc tool (csc.exe).</summary>
      <returns>The name of the Csc tool (csc.exe).</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.Csc.UseHostCompilerIfAvailable">
      <summary>Gets or sets a Boolean value that indicates whether the Csc task should use the in-process compiler object, if available.</summary>
      <returns>true if the Csc task should use the in-process compiler object, if available; otherwise, false.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.Csc.WarningLevel">
      <summary>Gets or sets the warning level for the compiler to display.</summary>
      <returns>The warning level for the compiler to display.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.Csc.WarningsAsErrors">
      <summary>Gets or sets a list of warnings to treat as errors.</summary>
      <returns>The list of warnings to treat as errors.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.Csc.WarningsNotAsErrors">
      <summary>Gets or sets a list of warnings that are not treated as errors.</summary>
      <returns>The list of warnings that are not treated as errors.</returns>
    </member>
    <member name="T:Microsoft.Build.Tasks.Delete">
      <summary>Implements the Delete task. Use the Delete element in your project file to create and execute this task. For usage and parameter information, see Delete Task.</summary>
    </member>
    <member name="M:Microsoft.Build.Tasks.Delete.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.Build.Tasks.Delete" /> class.</summary>
    </member>
    <member name="P:Microsoft.Build.Tasks.Delete.DeletedFiles">
      <summary>Gets or sets the files that were successfully deleted.</summary>
      <returns>The files that were successfully deleted.</returns>
    </member>
    <member name="M:Microsoft.Build.Tasks.Delete.Execute">
      <summary>Executes the Delete task.</summary>
      <returns>true if task execution succeeded; otherwise, false.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.Delete.Files">
      <summary>Gets or sets the files to delete.</summary>
      <returns>The files to delete.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.Delete.TreatErrorsAsWarnings">
      <summary>Gets or sets a Boolean value that indicates whether errors are logged as warnings.</summary>
      <returns>true if errors are logged as warnings; otherwise, false.</returns>
    </member>
    <member name="T:Microsoft.Build.Tasks.Error">
      <summary>Implements the Error task. Use the Error element in your project file to create and execute this task. For usage and parameter information, see Delete Task.</summary>
    </member>
    <member name="M:Microsoft.Build.Tasks.Error.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.Build.Tasks.Error" /> class.</summary>
    </member>
    <member name="P:Microsoft.Build.Tasks.Error.Code">
      <summary>Gets or sets the error code to associate with the error.</summary>
      <returns>The error code to associate with the error.</returns>
    </member>
    <member name="M:Microsoft.Build.Tasks.Error.Execute">
      <summary>Executes the Error task - logs an error and stops the build.</summary>
      <returns>false in all cases.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.Error.File">
      <summary>Relevant file if any. If none is provided, the file containing the Error task will be used.</summary>
    </member>
    <member name="P:Microsoft.Build.Tasks.Error.HelpKeyword">
      <summary>Gets or sets the Help keyword to associate with the error.</summary>
      <returns>The Help keyword to associate with the error.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.Error.Text">
      <summary>Gets or sets the error text.</summary>
      <returns>The error text.</returns>
    </member>
    <member name="T:Microsoft.Build.Tasks.Exec">
      <summary>Implements the Exec task. Use the Exec element in your project file to create and execute this task. For usage and parameter information, see Exec Task.</summary>
    </member>
    <member name="M:Microsoft.Build.Tasks.Exec.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.Build.Tasks.Exec" /> class.</summary>
    </member>
    <member name="M:Microsoft.Build.Tasks.Exec.AddCommandLineCommands(Microsoft.Build.Tasks.CommandLineBuilderExtension)">
      <summary>Generates command line arguments that the command line tool must run directly from the command line and not from a response file.</summary>
      <param name="commandLine">Command line builder to add arguments to.</param>
    </member>
    <member name="P:Microsoft.Build.Tasks.Exec.Command">
      <summary>Gets or sets the command to run.</summary>
      <returns>The command to run.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.Exec.CustomErrorRegularExpression">
      <summary>Gets or sets a regular expression to spot error lines in the tool output.</summary>
      <returns>A regular expression to spot error lines in the tool output.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.Exec.CustomWarningRegularExpression">
      <summary>Gets or sets a regular expression to spot warning lines in the tool output.</summary>
      <returns>A regular expression to spot warning lines in the tool output.</returns>
    </member>
    <member name="M:Microsoft.Build.Tasks.Exec.ExecuteTool(System.String,System.String,System.String)">
      <summary>Executes the cmd.exe tool, waits for its completion, and cleans up the batch file after execution completes.</summary>
      <returns>The exit code that the tool returns.</returns>
      <param name="pathToTool">The path to the tool to execute.</param>
      <param name="responseFileCommands">Command line arguments that should go into a temporary response file.</param>
      <param name="commandLineCommands">Command line arguments that should be passed to the tool directly.</param>
    </member>
    <member name="M:Microsoft.Build.Tasks.Exec.GenerateFullPathToTool">
      <summary>Returns the full path to the system tool cmd.exe.</summary>
      <returns>The full path to the system tool cmd.exe.</returns>
    </member>
    <member name="M:Microsoft.Build.Tasks.Exec.GetWorkingDirectory">
      <summary>Returns the working directory to use for the tool process.</summary>
      <returns>The working directory to use for the tool process.</returns>
    </member>
    <member name="M:Microsoft.Build.Tasks.Exec.HandleTaskExecutionErrors">
      <summary>Logs error message and handles exit code.</summary>
      <returns>true if exit code was ignored; otherwise, false.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.Exec.IgnoreExitCode">
      <summary>Gets or sets a Boolean value that indicates whether the Exec task should ignore the exit code provided by the executed command (true) or should return false if the executed command returns a non-zero exit code (false).</summary>
      <returns>true if the Exec task should ignore the exit code provided by the executed command; false if the Exec task should return false if the executed command returns a non-zero exit code.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.Exec.IgnoreStandardErrorWarningFormat">
      <summary>Gets or sets a Boolean value that indicates whether to ignore the standard error and warning format and log errors and warnings from the output as regular messages.</summary>
      <returns>true if the Exec task should ignore the standard error and warning format and should log errors and warnings as regular messages; false if the Exec task should log the errors and warnings that match the standard error and warning format.</returns>
    </member>
    <member name="M:Microsoft.Build.Tasks.Exec.LogEventsFromTextOutput(System.String,Microsoft.Build.Framework.MessageImportance)">
      <summary>Logs the specified single line of text as an error or warning if the single line matched custom or standard error and warning formats or as a regular message if <see cref="P:Microsoft.Build.Tasks.Exec.IgnoreStandardErrorWarningFormat" /> is set to true and no custom format matched.</summary>
      <param name="singleLine">Single line from the output to parse.</param>
      <param name="messageImportance">The importance to log the message with.</param>
    </member>
    <member name="M:Microsoft.Build.Tasks.Exec.LogPathToTool(System.String,System.String)">
      <summary>Logs the tool name and path.</summary>
      <param name="toolName">The tool name.</param>
      <param name="pathToTool">The current directory where the tool is run.</param>
    </member>
    <member name="M:Microsoft.Build.Tasks.Exec.LogToolCommand(System.String)">
      <summary>Logs the batch file command to be executed.</summary>
      <param name="message">Specify an empty string. This parameter is not used.</param>
    </member>
    <member name="P:Microsoft.Build.Tasks.Exec.Outputs">
      <summary>Gets or sets the output items from the task.</summary>
      <returns>The output items from the task.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.Exec.StandardErrorEncoding">
      <summary>Gets the encoding of the captured task standard error stream.</summary>
      <returns>The encoding of the captured task standard error stream.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.Exec.StandardErrorLoggingImportance">
      <summary>Gets the importance to log ordinary messages with in the standard error stream.</summary>
      <returns>The importance to log ordinary messages with in the standard error stream.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.Exec.StandardOutputEncoding">
      <summary>Gets the encoding of the captured task standard output stream.</summary>
      <returns>The encoding of the captured task standard output stream.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.Exec.StandardOutputLoggingImportance">
      <summary>Gets the importance to log ordinary messages with in the standard out stream.</summary>
      <returns>The importance to log ordinary messages with in the standard out stream.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.Exec.StdErrEncoding">
      <summary>Gets or sets the encoding of the captured task standard error stream that is visible to the project.</summary>
      <returns>The encoding of the captured task standard error stream that is visible to the project.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.Exec.StdOutEncoding">
      <summary>Gets or sets the encoding of the captured task standard output stream that is visible to the project.</summary>
      <returns>The encoding of the captured task standard output stream that is visible to the project.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.Exec.ToolName">
      <summary>Gets the name of the tool (cmd.exe).</summary>
      <returns>The name of the tool (cmd.exe).</returns>
    </member>
    <member name="M:Microsoft.Build.Tasks.Exec.ValidateParameters">
      <summary>Validates input parameters and logs errors or warnings, if any. Returns a Boolean value that indicates whether task execution should proceed.</summary>
      <returns>true if task execution should proceed; otherwise, false.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.Exec.WorkingDirectory">
      <summary>Gets or sets the directory in which the command will run.</summary>
      <returns>The directory in which the command will run.</returns>
    </member>
    <member name="T:Microsoft.Build.Tasks.ExtractedClassName">
      <summary>Extracts a class name from a language source file.</summary>
    </member>
    <member name="P:Microsoft.Build.Tasks.ExtractedClassName.IsInsideConditionalBlock">
      <summary>Gets or sets a value indicating whether the extracted class name exists inside a block of conditionally compiled code.</summary>
      <returns>true to indicate the extracted class name exists inside a block of conditionally compiled code; otherwise, false.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.ExtractedClassName.Name">
      <summary>Gets or sets the extracted class name.</summary>
      <returns>The extracted class name.</returns>
    </member>
    <member name="T:Microsoft.Build.Tasks.FindAppConfigFile">
      <summary>Finds the app.config file, if any, in the provided lists.</summary>
    </member>
    <member name="M:Microsoft.Build.Tasks.FindAppConfigFile.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.Build.Tasks.FindAppConfigFile" /> class.</summary>
    </member>
    <member name="P:Microsoft.Build.Tasks.FindAppConfigFile.AppConfigFile">
      <summary>Gets or sets the first matching item found in the list, if any.</summary>
      <returns>The first matching item found in the list, or null if no matching item is found.</returns>
    </member>
    <member name="M:Microsoft.Build.Tasks.FindAppConfigFile.Execute">
      <summary>Finds the app config file.</summary>
      <returns>true in all cases.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.FindAppConfigFile.PrimaryList">
      <summary>Gets or sets the primary list to search through.</summary>
      <returns>The primary list to search through.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.FindAppConfigFile.SecondaryList">
      <summary>Gets or sets the secondary list to search through.</summary>
      <returns>The secondary list to search through.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.FindAppConfigFile.TargetPath">
      <summary>Gets or sets the value to add as <see cref="P:Microsoft.Build.Tasks.FindAppConfigFile.TargetPath" /> metadata.</summary>
      <returns>The <see cref="P:Microsoft.Build.Tasks.FindAppConfigFile.TargetPath" /> metadata.</returns>
    </member>
    <member name="T:Microsoft.Build.Tasks.FindInList">
      <summary>In a specified list, finds an item that has the matching itemspec.</summary>
    </member>
    <member name="M:Microsoft.Build.Tasks.FindInList.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.Build.Tasks.FindInList" /> class.</summary>
    </member>
    <member name="P:Microsoft.Build.Tasks.FindInList.CaseSensitive">
      <summary>Gets or sets a Boolean value that indicates whether to match case sensitively.</summary>
      <returns>trueFindInList task should match case sensitively; otherwise, false.</returns>
    </member>
    <member name="M:Microsoft.Build.Tasks.FindInList.Execute">
      <summary>Executes the FindInList task.</summary>
      <returns>true if task execution succeeded; otherwise, false.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.FindInList.FindLastMatch">
      <summary>Gets or sets a Boolean value that indicates whether to return the last match (true) or to return the first match (false).</summary>
      <returns>true if the FindInList task should return the last match; false if the FindInList task should return the first match.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.FindInList.ItemFound">
      <summary>Gets or sets the first matching item found in the list, if any.</summary>
      <returns>The first matching item found in the list.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.FindInList.ItemSpecToFind">
      <summary>Gets or sets the itemspec to search for.</summary>
      <returns>The itemspec to search for.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.FindInList.List">
      <summary>Gets or sets the list in which to search for the itemspec.</summary>
      <returns>The list in which to search for the itemspec.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.FindInList.MatchFileNameOnly">
      <summary>Gets or sets a Boolean value that indicates whether to match against just the file name part of the itemspec or to match against the whole itemspec.</summary>
      <returns>true if the FindInList task should match against just the file name part of the itemspec; false if the FindInList task should match against the whole itemspec.</returns>
    </member>
    <member name="T:Microsoft.Build.Tasks.FindUnderPath">
      <summary>Implements the FindUnderPath task. Use the FindUnderPath element in your project file to create and execute this task. For usage and parameter information, see FindUnderPath Task.</summary>
    </member>
    <member name="M:Microsoft.Build.Tasks.FindUnderPath.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.Build.Tasks.FindUnderPath" /> class.</summary>
    </member>
    <member name="M:Microsoft.Build.Tasks.FindUnderPath.Execute">
      <summary>Executes the FileUnderPath task.</summary>
      <returns>true if task executes successfully; otherwise, false.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.FindUnderPath.Files">
      <summary>Gets or sets the files whose paths should be compared with the path specified by the <see cref="P:Microsoft.Build.Tasks.FindUnderPath.Path" /> property.</summary>
      <returns>The files whose paths should be compared with the path specified by the <see cref="P:Microsoft.Build.Tasks.FindUnderPath.Path" /> property.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.FindUnderPath.InPath">
      <summary>Gets or sets the items that were found under the specified path.</summary>
      <returns>The items that were found under the specified path.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.FindUnderPath.OutOfPath">
      <summary>Gets or sets the items that were not found under the specified path.</summary>
      <returns>The items that were not found under the specified path.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.FindUnderPath.Path">
      <summary>Gets or sets the folder path to use as the reference.</summary>
      <returns>The folder path to use as the reference.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.FindUnderPath.UpdateToAbsolutePaths">
      <summary>Gets or sets a Boolean value that indicates whether the paths of the output items should be updated to be absolute.</summary>
      <returns>true if the paths of the output items should be updated to be absolute; otherwise, false.</returns>
    </member>
    <member name="T:Microsoft.Build.Tasks.FormatUrl">
      <summary>Converts a URL into a proper URL format.</summary>
    </member>
    <member name="M:Microsoft.Build.Tasks.FormatUrl.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.Build.Tasks.FormatUrl" /> class.</summary>
    </member>
    <member name="M:Microsoft.Build.Tasks.FormatUrl.Execute">
      <summary>Executes the FormatUrl task.</summary>
      <returns>true if task execution succeeded; otherwise, false.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.FormatUrl.InputUrl">
      <summary>Gets or sets the URL to format.</summary>
      <returns>The URL to format.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.FormatUrl.OutputUrl">
      <summary>Gets or sets the formatted URL.</summary>
      <returns>The formatted URL.</returns>
    </member>
    <member name="T:Microsoft.Build.Tasks.FormatVersion">
      <summary>Appends the revision number to the version number.</summary>
    </member>
    <member name="M:Microsoft.Build.Tasks.FormatVersion.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.Build.Tasks.FormatVersion" /> class.</summary>
    </member>
    <member name="M:Microsoft.Build.Tasks.FormatVersion.Execute">
      <summary>Executes the FormatVersion task.</summary>
      <returns>true if task execution succeeded; otherwise, false.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.FormatVersion.FormatType">
      <summary>Gets or sets the format type.</summary>
      <returns>The format type.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.FormatVersion.OutputVersion">
      <summary>Gets or sets the output version that includes the revision number.</summary>
      <returns>The output version that includes the revision number.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.FormatVersion.Revision">
      <summary>Gets or sets the revision to append to the version.</summary>
      <returns>The revision to append to the version.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.FormatVersion.Version">
      <summary>Gets or sets the version number string to format.</summary>
      <returns>The version number string to format.</returns>
    </member>
    <member name="T:Microsoft.Build.Tasks.GenerateApplicationManifest">
      <summary>Implements the GenerateApplicationManifest task. Use the GenerateApplicationManifest element in the project file to create and execute this task. For usage and parameter information, see GenerateApplicationManifest Task.</summary>
    </member>
    <member name="M:Microsoft.Build.Tasks.GenerateApplicationManifest.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.Build.Tasks.GenerateApplicationManifest" /> class.</summary>
    </member>
    <member name="P:Microsoft.Build.Tasks.GenerateApplicationManifest.ClrVersion">
      <summary>Gets or sets the minimum version of the Common Language Runtime (CLR) required by the application.</summary>
      <returns>The minimum version of the CLR required by the application.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.GenerateApplicationManifest.ConfigFile">
      <summary>Gets or sets the task item that contains the application configuration file.</summary>
      <returns>The task item that contains the application configuration file.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.GenerateApplicationManifest.Dependencies">
      <summary>Gets or sets an item list that defines the set of dependent assemblies for the generated manifest.</summary>
      <returns>An item list of dependent assembly names.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.GenerateApplicationManifest.ErrorReportUrl">
      <summary>Gets or sets the URL of the Web page that is displayed in dialog boxes during ClickOnce installations.</summary>
      <returns>A string value that represents the URL of a Web page.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.GenerateApplicationManifest.FileAssociations">
      <summary>Gets or sets a list of one or more file type that are associated with the ClickOnce deployment manifest. File associations only valid only when .NET FrameworkÂ 3.5 or later is targeted.</summary>
      <returns>A list of file types that are associated with the generated manifest.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.GenerateApplicationManifest.Files">
      <summary>Gets or sets the full paths of files to include in the manifest.</summary>
      <returns>Paths to files that are included in the manifest.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.GenerateApplicationManifest.HostInBrowser">
      <summary>Gets or sets whether the application is hosted in a browser (as are WPF Web Browser Applications).</summary>
      <returns>A Boolean value that indicates whether the application being deployed will be hosted in a browser (true), or not (false). true only applies to WPF Web Browser Applications.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.GenerateApplicationManifest.IconFile">
      <summary>Gets or sets the application's icon file.</summary>
      <returns>The icon file to use for the application.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.GenerateApplicationManifest.IsolatedComReferences">
      <summary>Gets or sets COM components to isolate in the generated manifest. </summary>
      <returns>The COM components to isolate in the generated manifest.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.GenerateApplicationManifest.ManifestType">
      <summary>Gets or sets the type of manifest to generate. </summary>
      <returns>The kind of manifest to generate.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.GenerateApplicationManifest.OSVersion">
      <summary>Gets or sets the operating system (OS) version that is the minimum required by the application. </summary>
      <returns>The OS version that is the minimum required by the application.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.GenerateApplicationManifest.Product">
      <summary>Specifies the ProductName property in the project file.</summary>
      <returns>A string value that corresponds to the ProductName property in the project file.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.GenerateApplicationManifest.Publisher">
      <summary>Specifies the PublisherName property in the project file.</summary>
      <returns>A string value that corresponds to the PublisherName property in the project file.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.GenerateApplicationManifest.RequiresMinimumFramework35SP1">
      <summary>Gets or sets whether the application requires the .NET Framework 3.5 SP1.</summary>
      <returns>true if the application requires .NET Framework 3.5 SP1; false otherwise.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.GenerateApplicationManifest.SuiteName">
      <summary>Gets or sets the name of the folder on the Start menu where the application is located after ClickOnce deployment.</summary>
      <returns>A string that represents the name of a Start menu folder.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.GenerateApplicationManifest.SupportUrl">
      <summary>Specifies the SupportUrl property in the project file.</summary>
      <returns>A string value that corresponds to the SupportUrl property in the project file.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.GenerateApplicationManifest.TargetFrameworkProfile">
      <summary>Gets or sets the target framework profile.</summary>
      <returns>Returns the target framework profile.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.GenerateApplicationManifest.TargetFrameworkSubset">
      <summary>Gets or sets the name of the .NET Framework subset to target.</summary>
      <returns>The name of the .NET Framework subset.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.GenerateApplicationManifest.TrustInfoFile">
      <summary>Gets or sets an XML document that specifies the application security.</summary>
      <returns>The XML document that specifies the application security.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.GenerateApplicationManifest.UseApplicationTrust">
      <summary>Specifies whether the <see cref="P:Microsoft.Build.Tasks.GenerateApplicationManifest.Product" />, <see cref="P:Microsoft.Build.Tasks.GenerateApplicationManifest.Publisher" />, and <see cref="P:Microsoft.Build.Tasks.GenerateApplicationManifest.SupportUrl" /> properties are written to the application manifest.</summary>
      <returns>A Boolean value that indicates whether the <see cref="P:Microsoft.Build.Tasks.GenerateApplicationManifest.Product" />, <see cref="P:Microsoft.Build.Tasks.GenerateApplicationManifest.Publisher" />, and <see cref="P:Microsoft.Build.Tasks.GenerateApplicationManifest.SupportUrl" /> properties are written to the application manifest (true). If the value is false, these properties are ignored.</returns>
    </member>
    <member name="T:Microsoft.Build.Tasks.GenerateBootstrapper">
      <summary>Implements the GenerateBootstrapper task. Use the GenerateBootstrapper element in your project file to create and execute this task. For usage and parameter information, see GenerateBootstrapper Task.</summary>
    </member>
    <member name="M:Microsoft.Build.Tasks.GenerateBootstrapper.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.Build.Tasks.GenerateBootstrapper" /> class.</summary>
    </member>
    <member name="P:Microsoft.Build.Tasks.GenerateBootstrapper.ApplicationFile">
      <summary>Gets or sets the file the bootstrapper will use to begin the installation of the application after all prerequisites have been installed.</summary>
      <returns>The file the bootstrapper will use to begin the installation of the application after all prerequisites have been installed.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.GenerateBootstrapper.ApplicationName">
      <summary>Gets or sets the name of the application that the bootstrapper will install.</summary>
      <returns>The name of the application that the bootstrapper will install.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.GenerateBootstrapper.ApplicationRequiresElevation">
      <summary>Gets or sets whether a component runs with elevated permissions when it is installed on a target computer.</summary>
      <returns>Returns True if the installed component runs with elevated permissions; otherwise False.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.GenerateBootstrapper.ApplicationUrl">
      <summary>Gets or sets the Web location that is hosting the applicationâs installer.</summary>
      <returns>The Web location that is hosting the applicationâs installer.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.GenerateBootstrapper.BootstrapperComponentFiles">
      <summary>Gets or sets the built location of bootstrapper package files.</summary>
      <returns>The built location of bootstrapper package files.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.GenerateBootstrapper.BootstrapperItems">
      <summary>Gets or sets the products to build into the bootstrapper.</summary>
      <returns>The products to build into the bootstrapper.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.GenerateBootstrapper.BootstrapperKeyFile">
      <summary>Gets or sets the built location of setup.exe.</summary>
      <returns>The built location of setup.exe.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.GenerateBootstrapper.ComponentsLocation">
      <summary>Gets or sets a location for the bootstrapper to look for installation prerequisites to install.</summary>
      <returns>The location for the bootstrapper to look for installation prerequisites to install.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.GenerateBootstrapper.ComponentsUrl">
      <summary>Gets or sets the URL containing the installation prerequisites.</summary>
      <returns>The URL containing the installation prerequisites.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.GenerateBootstrapper.CopyComponents">
      <summary>Gets or sets a Boolean value that indicates whether the bootstrapper copies all output files to the path specified in the <see cref="P:Microsoft.Build.Tasks.GenerateBootstrapper.OutputPath" /> property. </summary>
      <returns>true if the bootstrapper should copy all output files to the path specified in the <see cref="P:Microsoft.Build.Tasks.GenerateBootstrapper.OutputPath" /> property; otherwise, false.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.GenerateBootstrapper.Culture">
      <summary>Gets or sets the culture to use for the bootstrapper UI and installation prerequisites. </summary>
      <returns>The culture to use for the bootstrapper UI and installation prerequisites.</returns>
    </member>
    <member name="M:Microsoft.Build.Tasks.GenerateBootstrapper.Execute">
      <summary>Executes the GenerateBootstrapper task.</summary>
      <returns>true if the task execution succeeded; otherwise, false.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.GenerateBootstrapper.FallbackCulture">
      <summary>Gets or sets the secondary culture to use for the bootstraper UI and installation prerequisites.</summary>
      <returns>The secondary culture to use for the bootstraper UI and installation prerequisites.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.GenerateBootstrapper.OutputPath">
      <summary>Gets or sets the location to copy setup.exe and all package files.</summary>
      <returns>The location to copy setup.exe and all package files.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.GenerateBootstrapper.Path">
      <summary>Gets or sets the location of all available prerequisite packages.</summary>
      <returns>The location of all available prerequisite packages.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.GenerateBootstrapper.SupportUrl">
      <summary>Gets or sets the URL to provide should the bootstrapper installation fail.</summary>
      <returns>The URL to provide should the bootstrapper installation fail.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.GenerateBootstrapper.Validate">
      <summary>Gets or sets a Boolean value that indicates whether the bootstrapper performs XSD validation on the specified input bootstrapper items.</summary>
      <returns>true if the bootstrapper performs XSD validation on the specified input bootstrapper items; otherwise, false.</returns>
    </member>
    <member name="T:Microsoft.Build.Tasks.GenerateDeploymentManifest">
      <summary>Implements the GenerateDeploymentManifest task. Use the GenerateDeploymentManifest element in the project file to create and execute this task. For usage and parameter information, see GenerateDeploymentManifest Task.</summary>
    </member>
    <member name="M:Microsoft.Build.Tasks.GenerateDeploymentManifest.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.Build.Tasks.GenerateDeploymentManifest" /> class.</summary>
    </member>
    <member name="P:Microsoft.Build.Tasks.GenerateDeploymentManifest.CreateDesktopShortcut">
      <summary>Gets or sets whether an icon is created on the desktop during ClickOnce application installation.</summary>
      <returns>true if an icon is created on the desktop during installation; false otherwise.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.GenerateDeploymentManifest.DeploymentUrl">
      <summary>Gets or sets the update location for the application.</summary>
      <returns>The update location for the application.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.GenerateDeploymentManifest.DisallowUrlActivation">
      <summary>Gets or sets a Boolean value that indicates whether the application should be run automatically when it is opened through a URL.</summary>
      <returns>true if the application can only be started from the Start menu; otherwise, false.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.GenerateDeploymentManifest.ErrorReportUrl">
      <summary>Gets or sets the URL of the Web page that is displayed in dialog boxes during ClickOnce installations.</summary>
      <returns>A string that represents the URL of a Web page.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.GenerateDeploymentManifest.Install">
      <summary>Gets or sets a Boolean that indicates whether the application is an installed application or an online-only application.</summary>
      <returns>true if the application is to be installed on the local computer and can be removed by using the Add or Remove Programs dialog box; false if the application is for online use from a Web page.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.GenerateDeploymentManifest.MapFileExtensions">
      <summary>Gets or sets a Boolean value that indicates whether the .deploy file name extension mapping is used.</summary>
      <returns>true if every program file is published with a .deploy file name extension; otherwise, false.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.GenerateDeploymentManifest.MinimumRequiredVersion">
      <summary>Gets or sets a Boolean value that indicates whether the user can skip the update.</summary>
      <returns>true if the user can skip the update; otherwise, false.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.GenerateDeploymentManifest.Product">
      <summary>Gets or sets the name of the application.</summary>
      <returns>The name of the application.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.GenerateDeploymentManifest.Publisher">
      <summary>Gets or sets the publisher of the application.</summary>
      <returns>The publisher of the application.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.GenerateDeploymentManifest.SuiteName">
      <summary>Gets or sets the name of the folder on the Start menu where the application is located after ClickOnce deployment.</summary>
      <returns>A string that represents the name of a Start menu folder.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.GenerateDeploymentManifest.SupportUrl">
      <summary>Gets or sets the link that appears in the Uninstall or change a program dialog box for the application. The specified value should be a fully qualified URL or UNC path.</summary>
      <returns>The link that appears in the Uninstall or change a program dialog box for the application.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.GenerateDeploymentManifest.TrustUrlParameters">
      <summary>Gets or sets a Boolean value that indicates whether URL query-string parameters should be made available to the application.</summary>
      <returns>true if URL query-string parameters should be made available to the application; otherwise, false.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.GenerateDeploymentManifest.UpdateEnabled">
      <summary>Gets or sets a Boolean value that indicates whether the application is enabled for updates.</summary>
      <returns>true if the application is enabled for updates; otherwise, false.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.GenerateDeploymentManifest.UpdateInterval">
      <summary>Gets or sets the update interval for the application. </summary>
      <returns>The update interval for the application.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.GenerateDeploymentManifest.UpdateMode">
      <summary>Gets or sets a Boolean value that indicates whether updates should be checked. Updates can be checked before the application is started (in the foreground), or when the application is running (in the background).</summary>
      <returns>true if updates should be checked; otherwise, false.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.GenerateDeploymentManifest.UpdateUnit">
      <summary>Gets or sets the time unit for the <see cref="P:Microsoft.Build.Tasks.GenerateDeploymentManifest.UpdateInterval" /> property.</summary>
      <returns>The time unit for the <see cref="P:Microsoft.Build.Tasks.GenerateDeploymentManifest.UpdateInterval" /> property.</returns>
    </member>
    <member name="T:Microsoft.Build.Tasks.GenerateManifestBase">
      <summary>Represents the base class for all manifest generation tasks.</summary>
    </member>
    <member name="M:Microsoft.Build.Tasks.GenerateManifestBase.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.Build.Tasks.GenerateManifestBase" /> class.</summary>
    </member>
    <member name="M:Microsoft.Build.Tasks.GenerateManifestBase.AddAssemblyFromItem(Microsoft.Build.Framework.ITaskItem)">
      <summary>Adds an assembly reference to the manifest, based on the specified item.</summary>
      <returns>The assembly reference that was added to the manifest.</returns>
      <param name="item">The item from which to create an assembly reference to add to the manifest.</param>
    </member>
    <member name="M:Microsoft.Build.Tasks.GenerateManifestBase.AddAssemblyNameFromItem(Microsoft.Build.Framework.ITaskItem,Microsoft.Build.Tasks.Deployment.ManifestUtilities.AssemblyReferenceType)">
      <summary>Adds an assembly reference to the manifest, based on the specified item and the assembly reference type.</summary>
      <returns>The assembly reference that was added to the manifest.</returns>
      <param name="item">The item from which to create an assembly reference to add to the manifest.</param>
      <param name="referenceType">The assembly reference type.</param>
    </member>
    <member name="M:Microsoft.Build.Tasks.GenerateManifestBase.AddEntryPointFromItem(Microsoft.Build.Framework.ITaskItem,Microsoft.Build.Tasks.Deployment.ManifestUtilities.AssemblyReferenceType)">
      <summary>Adds an entry point reference to the manifest, based on the specified item and the assembly reference type.</summary>
      <returns>The entry point reference that was added to the manifest.</returns>
      <param name="item">The item from which to create the entry point reference to add to the manifest.</param>
      <param name="referenceType">The entry point assembly reference type.</param>
    </member>
    <member name="M:Microsoft.Build.Tasks.GenerateManifestBase.AddFileFromItem(Microsoft.Build.Framework.ITaskItem)">
      <summary>Adds a file reference to the manifest, based on the specified item.</summary>
      <returns>The file reference that was added to the manifest.</returns>
      <param name="item">The item from which to create the file reference to add to the manifest.</param>
    </member>
    <member name="P:Microsoft.Build.Tasks.GenerateManifestBase.AssemblyName">
      <summary>Gets or sets the name of the assembly.</summary>
      <returns>The name of the assembly.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.GenerateManifestBase.AssemblyVersion">
      <summary>Gets or sets the assembly version.</summary>
      <returns>The assembly version.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.GenerateManifestBase.Description">
      <summary>Gets or sets the manifest description text.</summary>
      <returns>The manifest description text.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.GenerateManifestBase.EntryPoint">
      <summary>Gets or sets the managed assembly or ClickOnce manifest reference that is the entry point to the manifest.</summary>
      <returns>The managed assembly or ClickOnce manifest reference that is the entry point to the application.</returns>
    </member>
    <member name="M:Microsoft.Build.Tasks.GenerateManifestBase.Execute">
      <summary>Executes the GenerateManifestBase task.</summary>
      <returns>true if task execution succeeded; otherwise, false.</returns>
    </member>
    <member name="M:Microsoft.Build.Tasks.GenerateManifestBase.FindFileFromItem(Microsoft.Build.Framework.ITaskItem)">
      <summary>Returns the manifest file reference that matches the specified item.</summary>
      <returns>The manifest file reference that matches the specified item.</returns>
      <param name="item">The item to get a file reference for.</param>
    </member>
    <member name="M:Microsoft.Build.Tasks.GenerateManifestBase.GetObjectType">
      <summary>When implemented in a derived class, returns the type of the manifest.</summary>
      <returns>The manifest type.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.GenerateManifestBase.InputManifest">
      <summary>Gets or sets the input manifest.</summary>
      <returns>The input manifest.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.GenerateManifestBase.MaxTargetPath">
      <summary>Gets or sets the maximum manifest file name length.</summary>
      <returns>The maximum manifest file name length.</returns>
    </member>
    <member name="M:Microsoft.Build.Tasks.GenerateManifestBase.OnManifestLoaded(Microsoft.Build.Tasks.Deployment.ManifestUtilities.Manifest)">
      <summary>When implemented in a derived class, sets manifest properties and any dependencies.</summary>
      <returns>true if no errors occurred when the manifest properties are set; otherwise, false.</returns>
      <param name="manifest">The manifest to set properties for.</param>
    </member>
    <member name="M:Microsoft.Build.Tasks.GenerateManifestBase.OnManifestResolved(Microsoft.Build.Tasks.Deployment.ManifestUtilities.Manifest)">
      <summary>When implemented in a derived class, sets resolved manifest properties.</summary>
      <returns>true if no errors occurred when the manifest properties are set; otherwise, false.</returns>
      <param name="manifest">The manifest to set properties for.</param>
    </member>
    <member name="P:Microsoft.Build.Tasks.GenerateManifestBase.OutputManifest">
      <summary>Gets or sets the generated manifest.</summary>
      <returns>The generated manifest.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.GenerateManifestBase.Platform">
      <summary>Gets or sets the manifest platform.</summary>
      <returns>The manifest platform.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.GenerateManifestBase.TargetCulture">
      <summary>Gets or sets the manifest target culture code.</summary>
      <returns>The manifest target culture code.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.GenerateManifestBase.TargetFrameworkMoniker">
      <summary>Gets or sets the target framework moniker.</summary>
      <returns>Returns the target framework moniker.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.GenerateManifestBase.TargetFrameworkVersion">
      <summary>The target .NET Framework version for the project.</summary>
      <returns>A string that represents the .NET Framework version.</returns>
    </member>
    <member name="M:Microsoft.Build.Tasks.GenerateManifestBase.ValidateInputs">
      <summary>Validates the inputs of the GenerateManifestBase task.</summary>
      <returns>true if input validation succeeded; otherwise, false.</returns>
    </member>
    <member name="M:Microsoft.Build.Tasks.GenerateManifestBase.ValidateOutput">
      <summary>Validates the generated manifest.</summary>
      <returns>true if manifest validation succeeded; otherwise, false.</returns>
    </member>
    <member name="T:Microsoft.Build.Tasks.GenerateResource">
      <summary>Implements the GenerateResource task. Use the GenerateResource element in your project file to create and execute this task. For usage and parameter information, see GenerateResource Task.</summary>
    </member>
    <member name="M:Microsoft.Build.Tasks.GenerateResource.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.Build.Tasks.GenerateResource" /> class.</summary>
    </member>
    <member name="P:Microsoft.Build.Tasks.GenerateResource.AdditionalInputs">
      <summary>Gets or sets the additional inputs for the dependency checking that the GenerateResource task performs.</summary>
      <returns>The additional inputs for the dependency checking that the GenerateResource task performs.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.GenerateResource.EnvironmentVariables">
      <summary>Gets or sets an array of name-value pairs of environment variables that should be passed to the spawned resgen.exe, in addition to (or selectively overriding) the regular environment block.</summary>
      <returns>Returns an array of name-value pairs of environment variables.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.GenerateResource.ExcludedInputPaths">
      <summary>Gets or sets an array of items that specify paths from which tracked inputs will be ignored during Up to date checking.</summary>
      <returns>Returns an array of items that specify paths from which tracked inputs will be ignored during Up to date checking.</returns>
    </member>
    <member name="M:Microsoft.Build.Tasks.GenerateResource.Execute">
      <summary>Executes the GenerateResource task.</summary>
      <returns>true if the GenerateResource task execution succeeded; otherwise, false.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.GenerateResource.ExecuteAsTool">
      <summary>Property to allow multitargeting of ResolveComReferences: If true, tlbimp.exe and aximp.exe from the appropriate target framework will be run out-of-proc to generate the necessary wrapper assemblies.</summary>
    </member>
    <member name="P:Microsoft.Build.Tasks.GenerateResource.FilesWritten">
      <summary>Gets or sets the names of all files written to disk including the cache file, if present.</summary>
      <returns>The names of all files written to disk.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.GenerateResource.MinimalRebuildFromTracking">
      <summary>Gets or sets a switch that specifies whether tracked incremental build will be used. If true, incremental build is turned on; otherwise, a rebuild will be forced.</summary>
      <returns>Returns a switch that specifies whether tracked incremental build will be used. If true, incremental build is turned on; otherwise, a rebuild will be forced.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.GenerateResource.NeverLockTypeAssemblies">
      <summary>Gets or sets a Boolean value that specifies whether to create a new <see cref="T:System.AppDomain" /> to evaluate the resources (.resx) files (true) or to create a new <see cref="T:System.AppDomain" /> only when the resources files reference a user's assembly (false).</summary>
      <returns>true if the GenerateResource task should create a new <see cref="T:System.AppDomain" /> to evaluate the resources (.resx) files; false if the GenerateResource task should create a new <see cref="T:System.AppDomain" /> only when the resources (.resx) files reference a user's assembly.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.GenerateResource.OutputResources">
      <summary>Gets or sets the name of the generated files, such as .resources files. </summary>
      <returns>The name of the generated files, such as .resources files.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.GenerateResource.PublicClass">
      <summary>Gets or sets a Boolean value that indicates whether the GenerateResource task should create a strongly typed resource class as a public class.</summary>
      <returns>true if the GenerateResource task should create a strongly typed resource class as a public class; otherwise, false.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.GenerateResource.References">
      <summary>Gets or sets the references to load types in .resx files from.</summary>
      <returns>The references to load types in .resx files from.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.GenerateResource.SdkToolsPath">
      <summary>Even though the generate resource task will do the processing in process, a logging message is still generated. This logging message will include the path to the windows SDK. Since the targets now will pass in the Windows SDK path we should use this for logging.</summary>
    </member>
    <member name="P:Microsoft.Build.Tasks.GenerateResource.Sources">
      <summary>Gets or sets the items to convert.</summary>
      <returns>The items to convert.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.GenerateResource.StateFile">
      <summary>Gets or sets the path to an optional cache file that is used to speed up dependency checking of links in .resx input files.</summary>
      <returns>The path to an optional cache file that is used to speed up dependency checking of links in .resx input files.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.GenerateResource.StronglyTypedClassName">
      <summary>Gets or sets the class name for the strongly typed resource class.</summary>
      <returns>The class name for the strongly typed resource class.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.GenerateResource.StronglyTypedFileName">
      <summary>Gets or sets the filename for the source file.</summary>
      <returns>The filename for the source file.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.GenerateResource.StronglyTypedLanguage">
      <summary>Gets or sets the language to use when generating the class source for the strongly typed resource.</summary>
      <returns>The language to use when generating the class source for the strongly typed resource.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.GenerateResource.StronglyTypedManifestPrefix">
      <summary>Gets or sets the resource namespace or manifest prefix to use in the generated class source for the strongly typed resource.</summary>
      <returns>The resource namespace or manifest prefix to use in the generated class source for the strongly typed resource.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.GenerateResource.StronglyTypedNamespace">
      <summary>Gets or sets the namespace to use for the generated class source for the strongly typed resource.</summary>
      <returns>The namespace to use for the generated class source for the strongly typed resource.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.GenerateResource.TLogReadFiles">
      <summary>Gets an array of items that represent the read tracking logs.</summary>
      <returns>Returns an array of items that represent the read tracking logs.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.GenerateResource.TLogWriteFiles">
      <summary>Gets an array of items that represent the write tracking logs.</summary>
      <returns>Returns an array of items that represent the write tracking logs.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.GenerateResource.TrackerLogDirectory">
      <summary>Gets or sets the intermediate directory into which the tracking logs from running this task will be placed.</summary>
      <returns>Returns the intermediate directory into which the tracking logs from running this task will be placed.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.GenerateResource.TrackFileAccess">
      <summary>Gets or sets a switch that specifies whether we should be tracking file access patterns.</summary>
      <returns>True if we should be tracking file access patterns; false otherwise.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.GenerateResource.UseSourcePath">
      <summary>Gets or sets a Boolean value that indicates whether the input file's directory is to be used for resolving relative file paths.</summary>
      <returns>true if the input file's directory is to be used for resolving relative file paths; otherwise, false.</returns>
    </member>
    <member name="T:Microsoft.Build.Tasks.GenerateTrustInfo">
      <summary>Generates the application trust from the base manifest, and from the <see cref="P:Microsoft.Build.Tasks.GenerateTrustInfo.TargetZone" /> and <see cref="P:Microsoft.Build.Tasks.GenerateTrustInfo.ExcludedPermissions" /> properties.</summary>
    </member>
    <member name="M:Microsoft.Build.Tasks.GenerateTrustInfo.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.Build.Tasks.GenerateTrustInfo" /> class.</summary>
    </member>
    <member name="P:Microsoft.Build.Tasks.GenerateTrustInfo.ApplicationDependencies">
      <summary>Gets or sets the dependent assemblies.</summary>
      <returns>The dependent assemblies.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.GenerateTrustInfo.BaseManifest">
      <summary>Gets or sets the base manifest to generate the application trust from.</summary>
      <returns>The base manifest to generate the application trust from.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.GenerateTrustInfo.ExcludedPermissions">
      <summary>Gets or sets one or more permission identity values separated by a semicolon to be excluded from the zone default permission set.</summary>
      <returns>The permission identity values to be excluded from the zone default permission set.</returns>
    </member>
    <member name="M:Microsoft.Build.Tasks.GenerateTrustInfo.Execute">
      <summary>Executes the GenerateTrustInfo task.</summary>
      <returns>true if task execution succeeded; otherwise, false.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.GenerateTrustInfo.TargetFrameworkMoniker">
      <summary>Gets or sets the target framework moniker.</summary>
      <returns>Returns the target framework moniker.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.GenerateTrustInfo.TargetZone">
      <summary>Gets or sets a zone default permission set, which is obtained from machine policy.</summary>
      <returns>The zone default permission set.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.GenerateTrustInfo.TrustInfoFile">
      <summary>Gets or sets the file that contains the application security trust information.</summary>
      <returns>The file that contains the application security trust information.</returns>
    </member>
    <member name="T:Microsoft.Build.Tasks.GetAssemblyIdentity">
      <summary>Implements the GetAssemblyIdentity task. Use the GetAssemblyIdentity element in your project file to create and execute this task. For usage and parameter information, see GetAssemblyIdentity Task.</summary>
    </member>
    <member name="M:Microsoft.Build.Tasks.GetAssemblyIdentity.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.Build.Tasks.GetAssemblyIdentity" /> class.</summary>
    </member>
    <member name="P:Microsoft.Build.Tasks.GetAssemblyIdentity.Assemblies">
      <summary>Gets or sets the retrieved assembly identities.</summary>
      <returns>The retrieved assembly identities.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.GetAssemblyIdentity.AssemblyFiles">
      <summary>Gets or sets the files to retrieve identities from.</summary>
      <returns>The files to retrieve identities from.</returns>
    </member>
    <member name="M:Microsoft.Build.Tasks.GetAssemblyIdentity.Execute">
      <summary>Executes the GetAssemblyIdentity task.</summary>
      <returns>true if the GetAssemblyIdentity task execution succeeded; otherwise, false.</returns>
    </member>
    <member name="T:Microsoft.Build.Tasks.GetFrameworkPath">
      <summary>Implements the GetFrameworkPath task. Use the GetFrameworkPath element in your project file to create and execute this task. For usage and parameter information, see GetFrameworkPath Task.</summary>
    </member>
    <member name="M:Microsoft.Build.Tasks.GetFrameworkPath.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.Build.Tasks.GetFrameworkPath" /> class.</summary>
    </member>
    <member name="M:Microsoft.Build.Tasks.GetFrameworkPath.Execute">
      <summary>Returns true in all cases.</summary>
      <returns>true in all cases.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.GetFrameworkPath.FrameworkVersion11Path">
      <summary>Gets or sets the path of the folder that contains the .NET FrameworkÂ 1.1 assemblies.</summary>
      <returns>The path of the folder that contains the .NET FrameworkÂ 1.1 assemblies.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.GetFrameworkPath.FrameworkVersion20Path">
      <summary>Gets or sets the path of the folder that contains the .NET FrameworkÂ 2.0 assemblies.</summary>
      <returns>The path of the folder that contains the .NET FrameworkÂ 2.0 assemblies.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.GetFrameworkPath.FrameworkVersion30Path">
      <summary>Gets or sets the path of the folder that contains the .NET FrameworkÂ 3.0 assemblies.</summary>
      <returns>The path of the folder that contains the .NET FrameworkÂ 3.0 assemblies.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.GetFrameworkPath.FrameworkVersion35Path">
      <summary>Gets or sets the path of the folder that contains the .NET FrameworkÂ 3.5 assemblies.</summary>
      <returns>The path of the folder that contains the .NET FrameworkÂ 3.5 assemblies.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.GetFrameworkPath.FrameworkVersion40Path">
      <summary>Path to the v4.0 framework, if available</summary>
    </member>
    <member name="P:Microsoft.Build.Tasks.GetFrameworkPath.Path">
      <summary>Gets or sets the path of the folder that contains the latest version of the .NET Framework assemblies.</summary>
      <returns>The path of the folder that contains the latest version of the .NET Framework assemblies.</returns>
    </member>
    <member name="T:Microsoft.Build.Tasks.GetFrameworkSdkPath">
      <summary>Implements the GetFrameworkSdkPath task. Use the GetFrameworkSdkPath element in your project file to create and execute this task. For usage and parameter information, see GetFrameworkSdkPath Task.</summary>
    </member>
    <member name="M:Microsoft.Build.Tasks.GetFrameworkSdkPath.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.Build.Tasks.GetFrameworkSdkPath" /> class.</summary>
    </member>
    <member name="M:Microsoft.Build.Tasks.GetFrameworkSdkPath.Execute">
      <summary>Returns true in all cases.</summary>
      <returns>true in all cases.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.GetFrameworkSdkPath.FrameworkSdkVersion20Path">
      <summary>Gets or sets the path to the .NET FrameworkÂ 2.0 SDK.</summary>
      <returns>The path to the .NET FrameworkÂ 2.0 SDK.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.GetFrameworkSdkPath.FrameworkSdkVersion35Path">
      <summary>Gets or sets the path to the .NET FrameworkÂ 3.5 SDK.</summary>
      <returns>The path to the .NET FrameworkÂ 3.5 SDK.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.GetFrameworkSdkPath.FrameworkSdkVersion40Path">
      <summary>The path to the v4.0 .NET SDK if it could be found. It will be String.Empty if the SDK was not found.</summary>
    </member>
    <member name="P:Microsoft.Build.Tasks.GetFrameworkSdkPath.Path">
      <summary>Gets or sets the path to the latest version of the .NET Framework SDK.</summary>
      <returns>The path to the latest version of the .NET Framework SDK.</returns>
    </member>
    <member name="T:Microsoft.Build.Tasks.GetReferenceAssemblyPaths">
      <summary>Returns the reference assembly paths to the various frameworks. </summary>
    </member>
    <member name="M:Microsoft.Build.Tasks.GetReferenceAssemblyPaths.#ctor"></member>
    <member name="P:Microsoft.Build.Tasks.GetReferenceAssemblyPaths.BypassFrameworkInstallChecks">
      <summary>Gets or sets a switch the specifies whether GetReferenceAssemblyPaths performs simple checks to ensure that certain runtime frameworks are installed depending on the target framework.</summary>
      <returns>Returns true if GetReferenceAssemblyPaths should not perform these simple checks; false otherwise. </returns>
    </member>
    <member name="M:Microsoft.Build.Tasks.GetReferenceAssemblyPaths.Execute">
      <summary>If the target framework moniker is set, generate the correct Paths.</summary>
    </member>
    <member name="P:Microsoft.Build.Tasks.GetReferenceAssemblyPaths.FullFrameworkReferenceAssemblyPaths">
      <summary>Gets the paths based on the passed in TargetFrameworkMoniker without considering the profile part of the moniker. </summary>
      <returns>Returns the paths based on the passed in TargetFrameworkMoniker without considering the profile part of the moniker. If the TargetFrameworkMoniker is null or empty no paths will be returned.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.GetReferenceAssemblyPaths.ReferenceAssemblyPaths">
      <summary>Returns the path based on the passed in TargetFrameworkMoniker. If the TargetFrameworkMoniker is null or empty this path will be null or empty.</summary>
    </member>
    <member name="P:Microsoft.Build.Tasks.GetReferenceAssemblyPaths.RootPath">
      <summary>The root path to use to generate the reference assembly path</summary>
    </member>
    <member name="P:Microsoft.Build.Tasks.GetReferenceAssemblyPaths.TargetFrameworkMoniker">
      <summary>The target framework moniker to get the reference assembly paths for</summary>
    </member>
    <member name="P:Microsoft.Build.Tasks.GetReferenceAssemblyPaths.TargetFrameworkMonikerDisplayName">
      <summary>Gets or sets the display name for the targe tframework moniker.</summary>
      <returns>Returns the display name for the targe tframework moniker. </returns>
    </member>
    <member name="T:Microsoft.Build.Tasks.IFixedTypeInfo">
      <summary>Provides a substitute for <see cref="T:System.Runtime.InteropServices.ComTypes.ITypeInfo" /> by modifying the definitions of <see cref="M:Microsoft.Build.Tasks.IFixedTypeInfo.GetRefTypeOfImplType(System.Int32,System.IntPtr@)" /> and <see cref="M:Microsoft.Build.Tasks.IFixedTypeInfo.GetRefTypeInfo(System.IntPtr,Microsoft.Build.Tasks.IFixedTypeInfo@)" />.</summary>
    </member>
    <member name="M:Microsoft.Build.Tasks.IFixedTypeInfo.AddressOfMember(System.Int32,System.Runtime.InteropServices.ComTypes.INVOKEKIND,System.IntPtr@)">
      <summary>For a description of this member, see <see cref="M:System.Runtime.InteropServices.ComTypes.ITypeInfo.AddressOfMember(System.Int32,System.Runtime.InteropServices.ComTypes.INVOKEKIND,System.IntPtr@)" />.</summary>
      <param name="memid"></param>
      <param name="invKind"></param>
      <param name="ppv"></param>
    </member>
    <member name="M:Microsoft.Build.Tasks.IFixedTypeInfo.CreateInstance(System.Object,System.Guid@,System.Object@)">
      <summary>For a description of this member, see <see cref="M:System.Runtime.InteropServices.ComTypes.ITypeInfo.CreateInstance(System.Object,System.Guid@,System.Object@)" />.</summary>
      <param name="pUnkOuter"></param>
      <param name="riid"></param>
      <param name="ppvObj"></param>
    </member>
    <member name="M:Microsoft.Build.Tasks.IFixedTypeInfo.GetContainingTypeLib(System.Runtime.InteropServices.ComTypes.ITypeLib@,System.Int32@)">
      <summary>For a description of this member, see <see cref="M:System.Runtime.InteropServices.ComTypes.ITypeInfo.GetContainingTypeLib(System.Runtime.InteropServices.ComTypes.ITypeLib@,System.Int32@)" />.</summary>
      <param name="ppTLB"></param>
      <param name="pIndex"></param>
    </member>
    <member name="M:Microsoft.Build.Tasks.IFixedTypeInfo.GetDllEntry(System.Int32,System.Runtime.InteropServices.ComTypes.INVOKEKIND,System.IntPtr,System.IntPtr,System.IntPtr)">
      <summary>For a description of this member, see <see cref="M:System.Runtime.InteropServices.ComTypes.ITypeInfo.GetDllEntry(System.Int32,System.Runtime.InteropServices.ComTypes.INVOKEKIND,System.IntPtr,System.IntPtr,System.IntPtr)" />.</summary>
      <param name="memid"></param>
      <param name="invKind"></param>
      <param name="pBstrDllName"></param>
      <param name="pBstrName"></param>
      <param name="pwOrdinal"></param>
    </member>
    <member name="M:Microsoft.Build.Tasks.IFixedTypeInfo.GetDocumentation(System.Int32,System.String@,System.String@,System.Int32@,System.String@)">
      <summary>For a description of this member, see <see cref="M:System.Runtime.InteropServices.ComTypes.ITypeInfo.GetDocumentation(System.Int32,System.String@,System.String@,System.Int32@,System.String@)" />.</summary>
      <param name="index"></param>
      <param name="strName"></param>
      <param name="strDocString"></param>
      <param name="dwHelpContext"></param>
      <param name="strHelpFile"></param>
    </member>
    <member name="M:Microsoft.Build.Tasks.IFixedTypeInfo.GetFuncDesc(System.Int32,System.IntPtr@)">
      <summary>For a description of this member, see <see cref="M:System.Runtime.InteropServices.ComTypes.ITypeInfo.GetFuncDesc(System.Int32,System.IntPtr@)" />.</summary>
      <param name="index"></param>
      <param name="ppFuncDesc"></param>
    </member>
    <member name="M:Microsoft.Build.Tasks.IFixedTypeInfo.GetIDsOfNames(System.String[],System.Int32,System.Int32[])">
      <summary>For a description of this member, see <see cref="M:System.Runtime.InteropServices.ComTypes.ITypeInfo.GetIDsOfNames(System.String[],System.Int32,System.Int32[])" />.</summary>
      <param name="rgszNames"></param>
      <param name="cNames"></param>
      <param name="pMemId"></param>
    </member>
    <member name="M:Microsoft.Build.Tasks.IFixedTypeInfo.GetImplTypeFlags(System.Int32,System.Runtime.InteropServices.ComTypes.IMPLTYPEFLAGS@)">
      <summary>For a description of this member, see <see cref="M:System.Runtime.InteropServices.ComTypes.ITypeInfo.GetImplTypeFlags(System.Int32,System.Runtime.InteropServices.ComTypes.IMPLTYPEFLAGS@)" />.</summary>
      <param name="index"></param>
      <param name="pImplTypeFlags"></param>
    </member>
    <member name="M:Microsoft.Build.Tasks.IFixedTypeInfo.GetMops(System.Int32,System.String@)">
      <summary>For a description of this member, see <see cref="M:System.Runtime.InteropServices.ComTypes.ITypeInfo.GetMops(System.Int32,System.String@)" />.</summary>
      <param name="memid"></param>
      <param name="pBstrMops"></param>
    </member>
    <member name="M:Microsoft.Build.Tasks.IFixedTypeInfo.GetNames(System.Int32,System.String[],System.Int32,System.Int32@)">
      <summary>For a description of this member, see <see cref="M:System.Runtime.InteropServices.ComTypes.ITypeInfo.GetNames(System.Int32,System.String[],System.Int32,System.Int32@)" />.</summary>
      <param name="memid"></param>
      <param name="rgBstrNames"></param>
      <param name="cMaxNames"></param>
      <param name="pcNames"></param>
    </member>
    <member name="M:Microsoft.Build.Tasks.IFixedTypeInfo.GetRefTypeInfo(System.IntPtr,Microsoft.Build.Tasks.IFixedTypeInfo@)">
      <summary>Retrieves the referenced type descriptions if a type description references other type descriptions.</summary>
      <param name="hRef">A handle to the referenced type description to return.</param>
      <param name="ppTI">When this method returns, contains the referenced type description. This parameter is passed uninitialized.</param>
    </member>
    <member name="M:Microsoft.Build.Tasks.IFixedTypeInfo.GetRefTypeOfImplType(System.Int32,System.IntPtr@)">
      <summary>Retrieves the type description of the implemented interface types if a type description describes a COM class.</summary>
      <param name="index">The index of the implemented type whose handle is returned.</param>
      <param name="href">When this method returns, contains a reference to a handle for the implemented interface. This parameter is passed uninitialized.</param>
    </member>
    <member name="M:Microsoft.Build.Tasks.IFixedTypeInfo.GetTypeAttr(System.IntPtr@)">
      <summary>For a description of this member, see <see cref="M:System.Runtime.InteropServices.ComTypes.ITypeInfo.GetTypeAttr(System.IntPtr@)" />.</summary>
      <param name="ppTypeAttr"></param>
    </member>
    <member name="M:Microsoft.Build.Tasks.IFixedTypeInfo.GetTypeComp(System.Runtime.InteropServices.ComTypes.ITypeComp@)">
      <summary>For a description of this member, see <see cref="M:System.Runtime.InteropServices.ComTypes.ITypeInfo.GetTypeComp(System.Runtime.InteropServices.ComTypes.ITypeComp@)" />.</summary>
      <param name="ppTComp"></param>
    </member>
    <member name="M:Microsoft.Build.Tasks.IFixedTypeInfo.GetVarDesc(System.Int32,System.IntPtr@)">
      <summary>For a description of this member, see <see cref="M:System.Runtime.InteropServices.ComTypes.ITypeInfo.GetVarDesc(System.Int32,System.IntPtr@)" />.</summary>
      <param name="index"></param>
      <param name="ppVarDesc"></param>
    </member>
    <member name="M:Microsoft.Build.Tasks.IFixedTypeInfo.Invoke(System.Object,System.Int32,System.Int16,System.Runtime.InteropServices.ComTypes.DISPPARAMS@,System.IntPtr,System.IntPtr,System.Int32@)">
      <summary>For a description of this member, see <see cref="M:System.Runtime.InteropServices.ComTypes.ITypeInfo.Invoke(System.Object,System.Int32,System.Int16,System.Runtime.InteropServices.ComTypes.DISPPARAMS@,System.IntPtr,System.IntPtr,System.Int32@)" />.</summary>
      <param name="pvInstance"></param>
      <param name="memid"></param>
      <param name="wFlags"></param>
      <param name="pDispParams"></param>
      <param name="pVarResult"></param>
      <param name="pExcepInfo"></param>
      <param name="puArgErr"></param>
    </member>
    <member name="M:Microsoft.Build.Tasks.IFixedTypeInfo.ReleaseFuncDesc(System.IntPtr)">
      <summary>For a description of this member, see <see cref="M:System.Runtime.InteropServices.ComTypes.ITypeInfo.ReleaseFuncDesc(System.IntPtr)" />.</summary>
      <param name="pFuncDesc"></param>
    </member>
    <member name="M:Microsoft.Build.Tasks.IFixedTypeInfo.ReleaseTypeAttr(System.IntPtr)">
      <summary>For a description of this member, see <see cref="M:System.Runtime.InteropServices.ComTypes.ITypeInfo.ReleaseTypeAttr(System.IntPtr)" />.</summary>
      <param name="pTypeAttr"></param>
    </member>
    <member name="M:Microsoft.Build.Tasks.IFixedTypeInfo.ReleaseVarDesc(System.IntPtr)">
      <summary>For a description of this member, see <see cref="M:System.Runtime.InteropServices.ComTypes.ITypeInfo.ReleaseVarDesc(System.IntPtr)" />.</summary>
      <param name="pVarDesc"></param>
    </member>
    <member name="T:Microsoft.Build.Tasks.LC">
      <summary>Implements the LC task. Use the LC element in your project file to create and execute this task. For usage and parameter information, see LC Task.</summary>
    </member>
    <member name="M:Microsoft.Build.Tasks.LC.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.Build.Tasks.LC" /> class.</summary>
    </member>
    <member name="M:Microsoft.Build.Tasks.LC.AddCommandLineCommands(Microsoft.Build.Tasks.CommandLineBuilderExtension)">
      <summary>Generates command line arguments that the license compiler tool (lc.exe) must run directly from the command line and not from a response file.</summary>
      <param name="commandLine">Command line builder to add arguments to.</param>
    </member>
    <member name="M:Microsoft.Build.Tasks.LC.GenerateFullPathToTool">
      <summary>Returns the full file path of the license compiler tool (lc.exe).</summary>
      <returns>The full file path of the license compiler tool, or null if the license compiler tool file is not found.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.LC.LicenseTarget">
      <summary>Gets or sets the executable for which the .licenses files are generated.</summary>
      <returns>The executable for which the .licenses files are generated.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.LC.NoLogo">
      <summary>Gets or sets a Boolean value that specifies whether to suppress the Microsoft startup banner display.</summary>
      <returns>true if the Microsoft startup banner display is suppressed; otherwise, false.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.LC.OutputDirectory">
      <summary>Gets or sets the directory in which to place the output .licenses files.</summary>
      <returns>The directory in which to place the output .licenses files.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.LC.OutputLicense">
      <summary>Gets or sets the name of the .licenses file.</summary>
      <returns>The name of the .licenses file.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.LC.ReferencedAssemblies">
      <summary>Gets or sets the referenced components to load when generating the .licenses file.</summary>
      <returns>The referenced components to load when generating the .licenses file.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.LC.SdkToolsPath"></member>
    <member name="P:Microsoft.Build.Tasks.LC.Sources">
      <summary>Gets or sets the items that contain licensed components to include in the .licenses file.</summary>
      <returns>The items that contain licensed components to include in the .licenses file.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.LC.ToolName">
      <summary>Gets the name of the license compiler tool.</summary>
      <returns>The name of the license compiler tool.</returns>
    </member>
    <member name="M:Microsoft.Build.Tasks.LC.ValidateParameters">
      <summary>Validates input parameters and logs errors or warnings, if any. Returns a Boolean value that indicates whether task execution should proceed.</summary>
      <returns>true if task execution should proceed; otherwise, false.</returns>
    </member>
    <member name="T:Microsoft.Build.Tasks.MakeDir">
      <summary>Implements the MakeDir task. Use the MakeDir element in your project file to create and execute this task. For usage and parameter information, see MakeDir Task.</summary>
    </member>
    <member name="M:Microsoft.Build.Tasks.MakeDir.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.Build.Tasks.MakeDir" /> class.</summary>
    </member>
    <member name="P:Microsoft.Build.Tasks.MakeDir.Directories">
      <summary>Gets or sets the set of directories to create.</summary>
      <returns>The set of directories to create.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.MakeDir.DirectoriesCreated">
      <summary>Gets the directories that the MakeDir task created. </summary>
      <returns>The directories that the MakeDir task created.</returns>
    </member>
    <member name="M:Microsoft.Build.Tasks.MakeDir.Execute">
      <summary>Executes the MakeDir task.</summary>
      <returns>true if task execution succeeded; otherwise, false.</returns>
    </member>
    <member name="T:Microsoft.Build.Tasks.ManagedCompiler">
      <summary>Defines the properties and methods common to managed compiler tasks.</summary>
    </member>
    <member name="M:Microsoft.Build.Tasks.ManagedCompiler.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.Build.Tasks.ManagedCompiler" /> class.</summary>
    </member>
    <member name="M:Microsoft.Build.Tasks.ManagedCompiler.AddCommandLineCommands(Microsoft.Build.Tasks.CommandLineBuilderExtension)">
      <summary>Generates command line arguments that the command line tool must run directly from the command line and not from a response file.</summary>
      <param name="commandLine">Command line builder to add arguments to.</param>
    </member>
    <member name="P:Microsoft.Build.Tasks.ManagedCompiler.AdditionalLibPaths">
      <summary>Gets or sets the additional folders in which to look for assemblies.</summary>
      <returns>The additional folders in which to look for assemblies.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.ManagedCompiler.AddModules">
      <summary>Gets or sets the modules for the compiler to make available to the project you are currently compiling.</summary>
      <returns>The modules for the compiler to make available to the project you are currently compiling.</returns>
    </member>
    <member name="M:Microsoft.Build.Tasks.ManagedCompiler.AddResponseFileCommands(Microsoft.Build.Tasks.CommandLineBuilderExtension)">
      <summary>Fills the specified <paramref name="commandLine" /> parameter with the switches and other information that can go into a response file.</summary>
      <param name="commandLine">Command line builder to add arguments to.</param>
    </member>
    <member name="M:Microsoft.Build.Tasks.ManagedCompiler.CheckAllReferencesExistOnDisk">
      <summary>Verifies that all specified references exist on disk.</summary>
      <returns>true if all references exist on disk; otherwise, false.</returns>
    </member>
    <member name="M:Microsoft.Build.Tasks.ManagedCompiler.CheckHostObjectSupport(System.String,System.Boolean)">
      <summary>Logs a message if the specified parameter is not supported by the host compiler.</summary>
      <param name="parameterName">The parameter name to set on the host compiler.</param>
      <param name="resultFromHostObjectSetOperation">true if the host compiler supports <paramref name="parameterName" />; otherwise, false</param>
    </member>
    <member name="P:Microsoft.Build.Tasks.ManagedCompiler.CodePage">
      <summary>Gets or sets the code page to use for all source code files in the compilation.</summary>
      <returns>The code page to use for all source code files in the compilation.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.ManagedCompiler.DebugType">
      <summary>Gets or sets the debug type.</summary>
      <returns>The debug type.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.ManagedCompiler.DefineConstants">
      <summary>Gets or sets the conditional compiler constants.</summary>
      <returns>The conditional compiler constants.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.ManagedCompiler.DelaySign">
      <summary>Gets or sets a value indicating whether the public key is placed in the assembly.</summary>
      <returns>true if the public key is placed in the assembly; false if the assembly is fully signed.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.ManagedCompiler.EmitDebugInformation">
      <summary>Gets or sets a value indicating whether the compiler generates debugging information.</summary>
      <returns>true if debugging information is generated; otherwise, false;</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.ManagedCompiler.FileAlignment">
      <summary>Gets or sets a value indicating where to align the sections of the output file.</summary>
      <returns>A value indicating where to align the sections of the output file.</returns>
    </member>
    <member name="M:Microsoft.Build.Tasks.ManagedCompiler.HandleTaskExecutionErrors">
      <summary>Handles the return code from the compiler.</summary>
      <returns>true if the return code was handled successfully; otherwise, false.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.ManagedCompiler.HostCompilerSupportsAllParameters">
      <summary>Gets or sets a value indicating wheter the host compilter supports all task parameters.</summary>
      <returns>true if the host compiler supports all task parameters; otherwise, false.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.ManagedCompiler.KeyContainer">
      <summary>Gets or sets the name of the cryptographic key container.</summary>
      <returns>The name of the cryptographic key container.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.ManagedCompiler.KeyFile">
      <summary>Gets or sets the file name containing the cryptographic key.</summary>
      <returns>The file name containing the cryptographic key.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.ManagedCompiler.LinkResources">
      <summary>Gets or sets the .NET Framework resource files to link to the output file.</summary>
      <returns>The .NET Framework resource files to link to the output file.</returns>
    </member>
    <member name="M:Microsoft.Build.Tasks.ManagedCompiler.ListHasNoDuplicateItems(Microsoft.Build.Framework.ITaskItem[],System.String)">
      <summary>Determines if any duplicate items exist in the specified task parameter.</summary>
      <returns>true if the item list contains no duplicates; otherwise, false.</returns>
      <param name="itemList">The list of items to examine for duplicates.</param>
      <param name="parameterName">The name of the parameter that contains the <paramref name="itemList" />.</param>
    </member>
    <member name="P:Microsoft.Build.Tasks.ManagedCompiler.MainEntryPoint">
      <summary>Gets or sets the class or module that contains the main entry point.</summary>
      <returns>The class or module that contains the main entry point.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.ManagedCompiler.NoConfig">
      <summary>Gets or sets a value indicating whether the compiler should use the default response file.</summary>
      <returns>true if the compiler is not using the default response file; otherwise, false.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.ManagedCompiler.NoLogo">
      <summary>Gets or sets a value indicating whether to suppress the compiler banner information.</summary>
      <returns>true to suppress the compiler banner information; otherwise, false.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.ManagedCompiler.NoWin32Manifest">
      <summary>Gets or sets a Boolean value that specifies whether an external UAC manifest is generated for the application.</summary>
      <returns>true if an external UAC manifest is generated for the application; otherwise, false.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.ManagedCompiler.Optimize">
      <summary>Gets or sets a value indicating whether to enable compiler optimizations.</summary>
      <returns>true to enable compiler optimizations; otherwise, false.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.ManagedCompiler.OutputAssembly">
      <summary>Gets or sets the name of the output file.</summary>
      <returns>The name of the output file.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.ManagedCompiler.References">
      <summary>Gets or sets the items from which the compiler will import public type information.</summary>
      <returns>The items from which the compiler will import public type information.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.ManagedCompiler.Resources">
      <summary>Gets or sets the .NET Framework resources to embed in the output file.</summary>
      <returns>The .NET Framework resources to embed in the output file.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.ManagedCompiler.ResponseFiles">
      <summary>Gets or sets the response files that contain commands for the task.</summary>
      <returns>The response files that contain commands for the task.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.ManagedCompiler.Sources">
      <summary>Gets or sets the source files to compile.</summary>
      <returns>The source files to compile.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.ManagedCompiler.StandardOutputEncoding">
      <summary>Gets or sets the encoding of the captured task standard output stream.</summary>
      <returns>The encoding of the captured task standard output stream.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.ManagedCompiler.TargetType">
      <summary>Gets or sets the file format of the output file.</summary>
      <returns>The file format of the output file.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.ManagedCompiler.TreatWarningsAsErrors">
      <summary>Gets or sets a value indicating whether warnings are treated as errors.</summary>
      <returns>true if warnings are treated as errors; otherwise, false.</returns>
    </member>
    <member name="M:Microsoft.Build.Tasks.ManagedCompiler.UseAlternateCommandLineToolToExecute">
      <summary>If an alternate tool name or tool path was specified in the project file, then that tool is used rather than the host compiler for integrated development environment (IDE) builds.</summary>
      <returns>false if the host compiler should be used; otherwise, true.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.ManagedCompiler.UsedCommandLineTool">
      <summary>Whether the command line compiler was invoked, instead of the host object compiler.</summary>
    </member>
    <member name="P:Microsoft.Build.Tasks.ManagedCompiler.Utf8Output">
      <summary>Gets or sets a value indicating whether compiler output is logged using UTF-8 encoding.</summary>
      <returns>true if compiler output is logged using UTF-8 encoding; otherwise, false.</returns>
    </member>
    <member name="M:Microsoft.Build.Tasks.ManagedCompiler.ValidateParameters">
      <summary>Validates the task parameters.</summary>
      <returns>true if all parameters are valid; otherwise, false.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.ManagedCompiler.Win32Icon">
      <summary>Gets or sets the icon file name.</summary>
      <returns>The icon file name.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.ManagedCompiler.Win32Manifest">
      <summary>Gets or sets the Win32 manifest.</summary>
      <returns>The Win32 manifest.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.ManagedCompiler.Win32Resource">
      <summary>Gets or sets a Win32 resource (.res) file to insert in the output file.</summary>
      <returns>The Win32 resource (.res) file to insert in the output file.</returns>
    </member>
    <member name="T:Microsoft.Build.Tasks.Message">
      <summary>Implements the Message task. Use the Message element in your project file to create and execute this task. For usage and parameter information, see Message Task.</summary>
    </member>
    <member name="M:Microsoft.Build.Tasks.Message.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.Build.Tasks.Message" /> class.</summary>
    </member>
    <member name="M:Microsoft.Build.Tasks.Message.Execute">
      <summary>Executes the Message task.</summary>
      <returns>true if task execution succeeded; otherwise, false.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.Message.Importance">
      <summary>Gets or sets the importance of the message.</summary>
      <returns>The importance of the message.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.Message.Text">
      <summary>Gets or sets the error text to log.</summary>
      <returns>The error text to log.</returns>
    </member>
    <member name="T:Microsoft.Build.Tasks.Move">
      <summary>Task to move one or more files.</summary>
    </member>
    <member name="M:Microsoft.Build.Tasks.Move.#ctor">
      <summary>Creates a task to move one or more files.</summary>
    </member>
    <member name="P:Microsoft.Build.Tasks.Move.DestinationFiles">
      <summary>Gets or sets the destination files that represent the destination of the matching source files.</summary>
      <returns>Returns an item that represents the destination files.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.Move.DestinationFolder">
      <summary>Gets or sets the destination folder for the source files.</summary>
      <returns>Returns an item representing the destination folder.</returns>
    </member>
    <member name="M:Microsoft.Build.Tasks.Move.Execute">
      <summary>Executes the move.</summary>
      <returns>Returns true if the move is successful, false otherwise.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.Move.MovedFiles">
      <summary>Gets an item representing the files that were successfully moved.</summary>
      <returns>Returns an item representing the files that were successfully moved.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.Move.OverwriteReadOnlyFiles">
      <summary>Gets or sets a switch that selects whether files in the destination folder that have the read-only attribute set can be overwritten.</summary>
      <returns>Returns true if the files can be overwritten, false otherwise.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.Move.SourceFiles">
      <summary>Gets or sets an item representing the list of files to move.</summary>
      <returns>Returns an item representing the list of files to move.</returns>
    </member>
    <member name="T:Microsoft.Build.Tasks.MSBuild">
      <summary>Implements the MSBuild task. Use the MSBuild element in your project file to create and execute this task. For usage and parameter information, see MSBuild Task.</summary>
    </member>
    <member name="M:Microsoft.Build.Tasks.MSBuild.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.Build.Tasks.MSBuild" /> class.</summary>
    </member>
    <member name="P:Microsoft.Build.Tasks.MSBuild.BuildInParallel">
      <summary>Gets or sets a Boolean value that specifies whether the projects specified in the <see cref="P:Microsoft.Build.Tasks.MSBuild.Projects" /> property are built in parallel, if possible. </summary>
      <returns>true if the projects specified in the <see cref="P:Microsoft.Build.Tasks.MSBuild.Projects" /> property are built in parallel if possible; otherwise, false.</returns>
    </member>
    <member name="M:Microsoft.Build.Tasks.MSBuild.Execute">
      <summary>Instructs the MSBuild engine to build one or more project files whose locations are specified by the <see cref="P:Microsoft.Build.Tasks.MSBuild.Projects" /> property.</summary>
      <returns>true if all projects build successfully; otherwise, false.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.MSBuild.Projects">
      <summary>Gets or sets the project files to build.</summary>
      <returns>The project files to build.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.MSBuild.Properties">
      <summary>Gets or sets a semicolon-delimited list of property name/value pairs to apply as global properties to the child project. </summary>
      <returns>A semicolon-delimited list of property name/value pairs to apply as global properties to the child project.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.MSBuild.RebaseOutputs">
      <summary>Gets or sets a Boolean value that specifies whether the relative paths of target output items from the built projects have their paths adjusted to be relative to the calling project. </summary>
      <returns>true if the relative paths of target output items from the built projects have their paths adjusted to be relative to the calling project.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.MSBuild.RemoveProperties">
      <summary>Gets or sets the set of global properties to remove.</summary>
      <returns>Returns the set of global properties to remove.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.MSBuild.RunEachTargetSeparately">
      <summary>Gets or sets a Boolean value that specifies whether the MSBuild task invokes each target in the list passed to MSBuild one at a time, instead of at the same time.</summary>
      <returns>true if the MSBuild task invokes each target in the list passed to MSBuild one at a time; false if the MSBuild task invokes all targets in the list at the same time.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.MSBuild.SkipNonexistentProjects">
      <summary>Gets or sets a Boolean value that specifies whether project files that do not exist on the disk will be skipped.</summary>
      <returns>true if project files that do not exist on the disk will be skipped; otherwise, false.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.MSBuild.StopOnFirstFailure">
      <summary>Gets or sets a Boolean value that specifies whether the task should stop building the remaining projects as soon as any one of them may not work.</summary>
      <returns>true if the task should stop building the remaining projects as soon as any one of them may not work; otherwise, false.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.MSBuild.TargetAndPropertyListSeparators">
      <summary>Gets or sets the escape characters to be unescaped from the specified <see cref="P:Microsoft.Build.Tasks.MSBuild.Properties" /> and <see cref="P:Microsoft.Build.Tasks.MSBuild.Targets" />.</summary>
      <returns>The escape characters to be unescaped from the specified <see cref="P:Microsoft.Build.Tasks.MSBuild.Properties" /> and <see cref="P:Microsoft.Build.Tasks.MSBuild.Targets" />.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.MSBuild.TargetOutputs">
      <summary>Returns the outputs of the built targets from all the project files. Only the outputs from the targets that were specified are returned, not any outputs that may exist on targets that those targets depend on.</summary>
      <returns>The outputs of the built targets from all the project files.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.MSBuild.Targets">
      <summary>Gets or sets the target or targets to build in the project files. Use a semicolon to separate a list of target names. </summary>
      <returns>The target or targets to build in the project files.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.MSBuild.ToolsVersion">
      <summary>Gets or sets a target .NET Framework version to build the project with, which enablesÂ anÂ MSBuild task to build a project that targets a different version of the .NET FrameworkÂ than the one specified in the project. Valid values are <paramref name="2.0" />, <paramref name="3.0" /> and <paramref name="3.5" />. </summary>
      <returns>The target .NET Framework version to build the project with.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.MSBuild.UnloadProjectsOnCompletion">
      <summary>Gets or sets a Boolean value that specifies whether the project will be unloaded once the operation is completed.</summary>
      <returns>true if the project will be unloaded once the operation is completed; otherwise, false.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.MSBuild.UseResultsCache">
      <summary>Gets or sets a Boolean value that indicates whether the MSBuild engine will return the built targets from the cache.</summary>
      <returns>true if the MSBuild engine will return the built targets from the cache; otherwise, false.</returns>
    </member>
    <member name="T:Microsoft.Build.Tasks.ReadLinesFromFile">
      <summary>Implements the ReadLinesFromFile task. Use the ReadLinesFromFile element in your project file to create and execute this task. For usage and parameter information, see ReadLinesFromFile Task.</summary>
    </member>
    <member name="M:Microsoft.Build.Tasks.ReadLinesFromFile.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.Build.Tasks.ReadLinesFromFile" /> class.</summary>
    </member>
    <member name="M:Microsoft.Build.Tasks.ReadLinesFromFile.Execute">
      <summary>Executes the ReadLinesFromFile task.</summary>
      <returns>true if task execution succeeded; otherwise, false.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.ReadLinesFromFile.File">
      <summary>Gets or sets the file to read.</summary>
      <returns>The file to read.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.ReadLinesFromFile.Lines">
      <summary>Gets or sets the lines read from the file.</summary>
      <returns>The lines read from the file.</returns>
    </member>
    <member name="T:Microsoft.Build.Tasks.RegisterAssembly">
      <summary>Implements the RegisterAssembly task. Use the RegisterAssembly element in your project file to create and execute this task. For usage and parameter information, see RegisterAssembly Task.</summary>
    </member>
    <member name="M:Microsoft.Build.Tasks.RegisterAssembly.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.Build.Tasks.RegisterAssembly" /> class.</summary>
    </member>
    <member name="P:Microsoft.Build.Tasks.RegisterAssembly.Assemblies">
      <summary>Gets or sets the assemblies to be registered with COM.</summary>
      <returns>The assemblies to be registered with COM.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.RegisterAssembly.AssemblyListFile">
      <summary>Gets or sets information about the state between the RegisterAssembly task and the UnregisterAssembly task. This prevents the UnregisterAssembly task from attempting to unregister an assembly that failed to register in the RegisterAssembly task.</summary>
      <returns>The state information necessary for the UnregisterAssembly task to do proper clean-up.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.RegisterAssembly.CreateCodeBase">
      <summary>Gets or sets a Boolean value that specifies whether the task creates a codebase entry in the registry, which specifies the file path for an assembly that is not installed in the global assembly cache. </summary>
      <returns>true if the task creates a codebase entry in the registry; otherwise, false.</returns>
    </member>
    <member name="M:Microsoft.Build.Tasks.RegisterAssembly.Execute">
      <summary>Executes the RegisterAssembly task.</summary>
      <returns>true if task execution succeeded; otherwise, false.</returns>
    </member>
    <member name="M:Microsoft.Build.Tasks.RegisterAssembly.ReportEvent(System.Runtime.InteropServices.ExporterEventKind,System.Int32,System.String)">
      <summary>Callback method for reporting the type library export events.</summary>
      <param name="kind">Describes the callbacks that the type library exporter makes when exporting a type library.</param>
      <param name="code">The error code of the export event.</param>
      <param name="msg">The message of the export event.</param>
    </member>
    <member name="M:Microsoft.Build.Tasks.RegisterAssembly.ResolveRef(System.Reflection.Assembly)">
      <summary>Callback method for finding the type library for the specified assembly.</summary>
      <returns>null in all cases.</returns>
      <param name="assemblyToResolve">The assembly to find type libraries for.</param>
    </member>
    <member name="P:Microsoft.Build.Tasks.RegisterAssembly.TypeLibFiles">
      <summary>Gets or sets the type library to generate from the specified assembly.</summary>
      <returns>The type library to generate from the specified assembly.</returns>
    </member>
    <member name="T:Microsoft.Build.Tasks.RemoveDir">
      <summary>Implements the RemoveDir task. Use the RemoveDir element in your project file to create and execute this task. For usage and parameter information, see RemoveDir Task.</summary>
    </member>
    <member name="M:Microsoft.Build.Tasks.RemoveDir.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.Build.Tasks.RemoveDir" /> class.</summary>
    </member>
    <member name="P:Microsoft.Build.Tasks.RemoveDir.Directories">
      <summary>Gets or sets the directories to delete.</summary>
      <returns>The directories to delete.</returns>
    </member>
    <member name="M:Microsoft.Build.Tasks.RemoveDir.Execute">
      <summary>Executes the RemoveDir task.</summary>
      <returns>true if task execution succeeded; otherwise, false.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.RemoveDir.RemovedDirectories">
      <summary>Gets or sets the directories that were successfully deleted.</summary>
      <returns>The directories that were successfully deleted.</returns>
    </member>
    <member name="T:Microsoft.Build.Tasks.RemoveDuplicates">
      <summary>Implements the RemoveDuplicates task. Use the RemoveDuplicates element in your project file to create and execute this task. For usage and parameter information, see RemoveDuplicates Task.</summary>
    </member>
    <member name="M:Microsoft.Build.Tasks.RemoveDuplicates.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.Build.Tasks.RemoveDuplicates" /> class.</summary>
    </member>
    <member name="M:Microsoft.Build.Tasks.RemoveDuplicates.Execute">
      <summary>Executes the RemoveDuplicates task.</summary>
      <returns>true if task execution succeeded; otherwise, false.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.RemoveDuplicates.Filtered">
      <summary>Gets or sets an item collection with all duplicate items removed.</summary>
      <returns>An item collection with all duplicate items removed.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.RemoveDuplicates.Inputs">
      <summary>Gets or sets the items to remove duplicate items from.</summary>
      <returns>The items to remove duplicate items from.</returns>
    </member>
    <member name="T:Microsoft.Build.Tasks.RequiresFramework35SP1Assembly">
      <summary>Determines whether the application requires the .NET Framework 3.5 SP1.</summary>
    </member>
    <member name="M:Microsoft.Build.Tasks.RequiresFramework35SP1Assembly.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.Build.Tasks.RequiresFramework35SP1Assembly" /> class.</summary>
    </member>
    <member name="P:Microsoft.Build.Tasks.RequiresFramework35SP1Assembly.Assemblies">
      <summary>Gets or sets the assemblies referenced in this application.</summary>
      <returns>The assemblies referenced in the application.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.RequiresFramework35SP1Assembly.CreateDesktopShortcut">
      <summary>Gets or sets whether to create an icon on the desktop during installation.</summary>
      <returns>true if a shortcut icon is added to the desktop; false otherwise.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.RequiresFramework35SP1Assembly.DeploymentManifestEntryPoint">
      <summary>Gets or sets the manifest file name for the application.</summary>
      <returns>The assembly that should be executed.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.RequiresFramework35SP1Assembly.EntryPoint">
      <summary>Gets or sets the assembly that should be executed when the application is run.</summary>
      <returns>The assembly that should be executed.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.RequiresFramework35SP1Assembly.ErrorReportUrl">
      <summary>Gets or sets the Web site that is displayed in dialog boxes that are encountered during ClickOnce installations.</summary>
      <returns>The URL of the web site to display.</returns>
    </member>
    <member name="M:Microsoft.Build.Tasks.RequiresFramework35SP1Assembly.Execute">
      <summary>Executes the task that determines whether the applications requires .NET Framework 3.5 SP1.</summary>
      <returns>true if the application requires .NET Framework 3.5 SP1; false otherwise.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.RequiresFramework35SP1Assembly.Files">
      <summary>Gets or sets the list of all of the files that will be deployed when you publish your application.</summary>
      <returns>The files that will be deployed.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.RequiresFramework35SP1Assembly.ReferencedAssemblies">
      <summary>Gets or sets the assemblies referenced in your project.</summary>
      <returns>The assemblies in your project.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.RequiresFramework35SP1Assembly.RequiresMinimumFramework35SP1">
      <summary>Gets or sets whether the application requires .NET Framework 3.5 SP1.</summary>
      <returns>true if the application requires .NET Framework 3.5 SP1; false otherwise.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.RequiresFramework35SP1Assembly.SigningManifests">
      <summary>Gets or sets whether the ClickOnce manifests are signed.</summary>
      <returns>true if the ClickOnce manifests are signed; false otherwise.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.RequiresFramework35SP1Assembly.SuiteName">
      <summary>Gets or sets the name of the folder on the Start menu in which the application will be installed.</summary>
      <returns>The name of the installation folder.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.RequiresFramework35SP1Assembly.TargetFrameworkVersion">
      <summary>Gets or sets the version of the .NET Framework that this application targets.</summary>
      <returns>The name of .NET Framework version.</returns>
    </member>
    <member name="T:Microsoft.Build.Tasks.ResolveAssemblyReference">
      <summary>Implements the ResolveAssemblyReference task. Use the ResolveAssemblyReference element in your project file to create and execute this task. For usage and parameter information, see ResolveAssemblyReference Task.</summary>
    </member>
    <member name="M:Microsoft.Build.Tasks.ResolveAssemblyReference.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.Build.Tasks.ResolveAssemblyReference" /> class.</summary>
    </member>
    <member name="P:Microsoft.Build.Tasks.ResolveAssemblyReference.AllowedAssemblyExtensions">
      <summary>Gets or sets the assembly extensions that will be considered during references resolution.</summary>
      <returns>The assembly extensions that will be considered during references resolution.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.ResolveAssemblyReference.AllowedRelatedFileExtensions">
      <summary>Gets or sets the extensions that will be considered when searching for related files.</summary>
      <returns>The extensions that will be considered when searching for related files.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.ResolveAssemblyReference.AppConfigFile">
      <summary>Gets or sets the App.Config file path.</summary>
      <returns>The App.Config file path.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.ResolveAssemblyReference.Assemblies">
      <summary>Gets or sets the assembly names to resolve into full paths and to find dependencies for. </summary>
      <returns>The assembly names to resolve into full paths and to find dependencies for.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.ResolveAssemblyReference.AssemblyFiles">
      <summary>Gets or sets a list of fully qualified assembly paths to find dependencies for.</summary>
      <returns>The list of fully qualified assembly paths to find dependencies for.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.ResolveAssemblyReference.AutoUnify">
      <summary>Gets or sets a Boolean value that specifies whether the resulting dependency graph is automatically treated as if there were an App.Config file passed in to the <see cref="P:Microsoft.Build.Tasks.ResolveAssemblyReference.AppConfigFile" /> property.</summary>
      <returns>true if the resulting dependency graph is automatically treated as if there were an App.Config file passed in to the <see cref="P:Microsoft.Build.Tasks.ResolveAssemblyReference.AppConfigFile" /> property.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.ResolveAssemblyReference.CandidateAssemblyFiles">
      <summary>Gets or sets a list of assemblies, which must be absolute file names or project-relative file names, to use for the search and resolution process.</summary>
      <returns>The list of assemblies to use for the search and resolution process.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.ResolveAssemblyReference.CopyLocalDependenciesWhenParentReferenceInGac">
      <summary>Gets or sets a switch that determines how dependencies are determined, and whether or not a dependency is copied locally.</summary>
      <returns>Returns true if when determining if a dependency should be copied locally one of the checks done is to see if the parent reference in the project file has the Private metadata set or not. If that metadata is set then we will use that for the dependency as well. If the metadata is not set then the dependency will go through the same checks as the parent reference. One of these checks is to see if the reference is in the GAC. If a reference is in the GAC then we will not copy it locally as it is assumed it will be in the gac on the target machine as well. However this only applies to that specific reference and not its dependencies.This means a reference in the project file may be copy local false due to it being in the GAC but the dependencies may still be copied locally because they are not in the GAC. This is the default behavior for RAR and causes the default value for this property to be true.Returns false if we will still check project file references to see if they are in the GAC and set their copy local state as appropriate. However for dependencies we will not only check to see if they are in the GAC but we will also check to see if the parent reference from the project file is in the GAC. If the parent reference from the project file is in the GAC then we will not copy the dependency locally.NoteIf there are multiple parent reference and ANY of them does not come from the GAC then we will set copy local to true.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.ResolveAssemblyReference.CopyLocalFiles">
      <summary>Returns all files in the <see cref="P:Microsoft.Build.Tasks.ResolveAssemblyReference.ResolvedFiles" />, <see cref="P:Microsoft.Build.Tasks.ResolveAssemblyReference.ResolvedDependencyFiles" />, <see cref="P:Microsoft.Build.Tasks.ResolveAssemblyReference.RelatedFiles" />, <see cref="P:Microsoft.Build.Tasks.ResolveAssemblyReference.SatelliteFiles" />, and <see cref="T:Microsoft.Build.Tasks.ResolveAssemblyReference" /> properties that have the CopyLocal item metadata with a value of true.</summary>
      <returns>All files in the <see cref="P:Microsoft.Build.Tasks.ResolveAssemblyReference.ResolvedFiles" />, <see cref="P:Microsoft.Build.Tasks.ResolveAssemblyReference.ResolvedDependencyFiles" />, <see cref="P:Microsoft.Build.Tasks.ResolveAssemblyReference.RelatedFiles" />, <see cref="P:Microsoft.Build.Tasks.ResolveAssemblyReference.SatelliteFiles" />, and <see cref="P:Microsoft.Build.Tasks.ResolveAssemblyReference.ScatterFiles" /> properties that have the CopyLocal item metadata with a value of true.</returns>
    </member>
    <member name="M:Microsoft.Build.Tasks.ResolveAssemblyReference.Execute">
      <summary>Executes the ResolveAssemblyReference task.</summary>
      <returns>true if task execution succeeded; otherwise, false.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.ResolveAssemblyReference.FilesWritten">
      <summary>Gets or sets the items written to disk.</summary>
      <returns>The items written to disk.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.ResolveAssemblyReference.FindDependencies">
      <summary>Gets or sets a Boolean value that specifies whether dependencies will be found (true) or only primary references will be found (false). </summary>
      <returns>true if dependencies will be found; false if only primary references will be found. </returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.ResolveAssemblyReference.FindRelatedFiles">
      <summary>Gets or sets a Boolean value that specifies whether related files such as .pdb files and .xml files will be found.</summary>
      <returns>true if related files such as .pdb files and .xml files will be found; otherwise, false.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.ResolveAssemblyReference.FindSatellites">
      <summary>Gets or sets a Boolean value that specifies whether satellite assemblies will be found.</summary>
      <returns>true if satellite assemblies will be found; otherwise, false.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.ResolveAssemblyReference.FindSerializationAssemblies">
      <summary>Gets or sets a Boolean value that specifies whether the serialization assemblies will be found.</summary>
      <returns>true if the serialization assemblies will be found; otherwise, false.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.ResolveAssemblyReference.FullFrameworkAssemblyTables">
      <summary>Gets or sets a list of items representing XML files that contain the full framework for the profile.</summary>
      <returns>Returns a list of items representing XML files that contain the full framework for the profile.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.ResolveAssemblyReference.FullFrameworkFolders">
      <summary>Gets or sets a list of folders which contain a RedistList directory which represent the full framework for a given client profile, for example:%programfiles%\reference assemblies\microsoft\framework\v4.0</summary>
      <returns>Returns a list of folders which contain a RedistList directory which represent the full framework for a given client profile</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.ResolveAssemblyReference.FullTargetFrameworkSubsetNames">
      <summary>A string that contains the names of the subsets of the specified target framework.</summary>
      <returns>A string value that contains subset names.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.ResolveAssemblyReference.IgnoreDefaultInstalledAssemblySubsetTables">
      <summary>Gets or sets a Boolean value that specifies whether the task should look for and use additional installed assembly subset tables (also known as Subset Lists), which are found in the SubsetList directory under the provided TargetFrameworkDirectories.</summary>
      <returns>true if additional assembly subset tables are used; otherwise, false.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.ResolveAssemblyReference.IgnoreDefaultInstalledAssemblyTables">
      <summary>Gets or sets a Boolean value that specifies whether the ResolveAssemblyReference task should ignore additional installed assembly tables found in the RedistList directory underneath the provided <see cref="P:Microsoft.Build.Tasks.ResolveAssemblyReference.TargetFrameworkDirectories" /> (true) or should search for and use these installed assembly tables (false).</summary>
      <returns>true if the task should ignore the additional installed assembly tables; false if the task should search for and use the additional installed assembly tables.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.ResolveAssemblyReference.InstalledAssemblySubsetTables">
      <summary>An <see cref="T:Microsoft.Build.Framework.ITaskItem" /> that represents a list of XML files that contain assemblies that are expected to be in the target subset.</summary>
      <returns>An <see cref="T:Microsoft.Build.Framework.ITaskItem" /> list of XML files.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.ResolveAssemblyReference.InstalledAssemblyTables">
      <summary>Gets or sets a list of XML files that contain assemblies that are expected to be installed on the target machine.</summary>
      <returns>A list of XML files that contain assemblies that are expected to be installed on the target machine.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.ResolveAssemblyReference.LatestTargetFrameworkDirectories">
      <summary>Gets or sets the list of directories which contain the redist lists for the most current framework which can be targeted on the machine. </summary>
      <returns>Returns the list of directories which contain the redist lists for the most current framework which can be targeted on the machine.  If this is not set Then we will looks for the highest framework installed on the machine for a given target framework identifier and use that.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.ResolveAssemblyReference.ProfileName">
      <summary>Gets or sets the name of the target framework profile we are targeting, for example  Client, Web, or Network</summary>
      <returns>Returns the name of the target framework profile we are targeting, for example  Client, Web, or Network</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.ResolveAssemblyReference.RelatedFiles">
      <summary>Gets related files, such as .xml and .pdb files with the same base name as a reference.</summary>
      <returns>The related files.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.ResolveAssemblyReference.ResolvedDependencyFiles">
      <summary>Gets the nth order paths to dependencies.</summary>
      <returns>The nth order paths to dependencies.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.ResolveAssemblyReference.ResolvedFiles">
      <summary>Gets a list of all primary references resolved to full paths.</summary>
      <returns>The list of all primary references resolved to full paths.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.ResolveAssemblyReference.SatelliteFiles">
      <summary>Gets any satellite files found.</summary>
      <returns>Any satellite files found.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.ResolveAssemblyReference.ScatterFiles">
      <summary>Gets the scatter files associated with one of the given assemblies.</summary>
      <returns>The scatter files associated with one of the given assemblies.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.ResolveAssemblyReference.SearchPaths">
      <summary>Specifies the directories or special locations that are searched to find the files on disk that represent the assemblies.</summary>
      <returns>The directories or special locations that are searched to find the files on disk that represent the assemblies.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.ResolveAssemblyReference.SerializationAssemblyFiles">
      <summary>Gets the serialization assemblies.</summary>
      <returns>The serialization assemblies.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.ResolveAssemblyReference.Silent">
      <summary>Gets or sets a Boolean value that specifies whether no messages are logged. </summary>
      <returns>true if no messages are logged; otherwise, false.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.ResolveAssemblyReference.StateFile">
      <summary>Gets or sets a file name that indicates where to save the intermediate build state for this task.</summary>
      <returns>The file name that indicates where to save the intermediate build state for this task.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.ResolveAssemblyReference.SuggestedRedirects">
      <summary>Gets one item for every distinct conflicting assembly identity, regardless of the value of the <see cref="P:Microsoft.Build.Tasks.ResolveAssemblyReference.AutoUnify" /> property.</summary>
      <returns>The items that correspond to distinct conflicting assembly identities.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.ResolveAssemblyReference.TargetedRuntimeVersion">
      <summary>Gets or sets the name of the runtime we are targeting, for example, 2.0.57027. </summary>
      <returns>Returns the name of the runtime we are targeting, for example, 2.0.57027. A "v" may be prefixed to the name.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.ResolveAssemblyReference.TargetFrameworkDirectories">
      <summary>Gets or sets the path to the target framework directory. </summary>
      <returns>The path to the target framework directory.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.ResolveAssemblyReference.TargetFrameworkMoniker">
      <summary>Gets or sets the target framework moniker being targeted, if any.</summary>
      <returns>Returns the target framework moniker being targeted, if any. Returns an empty string by default.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.ResolveAssemblyReference.TargetFrameworkMonikerDisplayName">
      <summary>Gets or sets the display name of the target framework moniker being targeted, if any.</summary>
      <returns>Returns the display name of the target framework moniker being targeted, if any.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.ResolveAssemblyReference.TargetFrameworkSubsets">
      <summary>A list of target framework subset names that will be searched for in the target framework directories.</summary>
    </member>
    <member name="P:Microsoft.Build.Tasks.ResolveAssemblyReference.TargetFrameworkVersion">
      <summary>Gets or sets the project target framework version used for reference filtering.</summary>
      <returns>The project target framework version used for reference filtering.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.ResolveAssemblyReference.TargetProcessorArchitecture">
      <summary>Gets or sets the preferred target processor architecture used for resolving Global Assembly Cache (GAC) references, which can have a value of x86, IA64, or AMD64.</summary>
      <returns>The preferred target processor architecture used for resolving Global Assembly Cache (GAC) references.</returns>
    </member>
    <member name="T:Microsoft.Build.Tasks.ResolveComReference">
      <summary>Implements the ResolveComReference task. Use the ResolveComReference element in your project file to create and execute this task. For usage and parameter information, see ResolveComReference Task.</summary>
    </member>
    <member name="M:Microsoft.Build.Tasks.ResolveComReference.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.Build.Tasks.ResolveComReference" /> class.</summary>
    </member>
    <member name="P:Microsoft.Build.Tasks.ResolveComReference.DelaySign">
      <summary>Gets or sets a Boolean value that specifies whether the ResolveComReference task places the public key in the assembly (true) or fully signs the assembly (false).</summary>
      <returns>true if the ResolveComReference task places the public key in the assembly; false if the ResolveComReference task fully signs the assembly.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.ResolveComReference.EnvironmentVariables">
      <summary>Gets or sets an array of name-value pairs of environment variables that should be passed to the spawned tlbimp.exe and aximp.exe in addition to (or selectively overriding) the regular environment block.</summary>
      <returns>Returns an array of name-value pairs of environment variables.</returns>
    </member>
    <member name="M:Microsoft.Build.Tasks.ResolveComReference.Execute">
      <summary>Executes the ResolveComReference task.</summary>
      <returns>true if task execution succeeded; otherwise, false.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.ResolveComReference.ExecuteAsTool">
      <summary>Property to allow multitargeting of ResolveComReferences: If true, tlbimp.exe and aximp.exe from the appropriate target framework will be run out-of-proc to generate the necessary wrapper assemblies.</summary>
    </member>
    <member name="P:Microsoft.Build.Tasks.ResolveComReference.IncludeVersionInInteropName">
      <summary>When set to true, the typelib version will be included in the wrapper name. Default is false.</summary>
    </member>
    <member name="P:Microsoft.Build.Tasks.ResolveComReference.KeyContainer">
      <summary>Gets or sets a container that holds a key pair.</summary>
      <returns>A container that holds a key pair.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.ResolveComReference.KeyFile">
      <summary>Gets or sets an item that contains a key pair.</summary>
      <returns>An item that contains a key pair.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.ResolveComReference.NoClassMembers">
      <summary>Gets or sets a Boolean value that specifies whether to pass the <see cref="F:System.Runtime.InteropServices.TypeLibImporterFlags.PreventClassMembers" /> flag to .tlb wrapper generation.</summary>
      <returns>true if the task should pass the <see cref="F:System.Runtime.InteropServices.TypeLibImporterFlags.PreventClassMembers" /> flag to .tlb wrapper generation; otherwise, false.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.ResolveComReference.ResolvedAssemblyReferences">
      <summary>Gets or sets the resolved assembly references.</summary>
      <returns>The resolved assembly references.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.ResolveComReference.ResolvedFiles">
      <summary>Gets or sets the fully qualified files on disk that correspond to the physical locations of the type libraries that were provided as input to this task.</summary>
      <returns>The fully qualified files on disk that correspond to the physical locations of the type libraries that were provided as input to this task.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.ResolveComReference.ResolvedModules">
      <summary>Gets or sets the paths to the modules that were found.</summary>
      <returns>The paths to the modules that were found.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.ResolveComReference.SdkToolsPath">
      <summary>If ExecuteAsTool is true, this must be set to the SDK tools path for the framework version being targeted.</summary>
    </member>
    <member name="P:Microsoft.Build.Tasks.ResolveComReference.StateFile">
      <summary>Gets or sets the cache file for COM component timestamps.</summary>
      <returns>The cache file for COM component timestamps.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.ResolveComReference.TargetFrameworkVersion">
      <summary>The project target framework version. Default is empty. which means there will be no filtering for the reference based on their target framework.</summary>
    </member>
    <member name="P:Microsoft.Build.Tasks.ResolveComReference.TargetProcessorArchitecture">
      <summary>Gets or sets the name of the preferred target processor architecture, which is passed to the tlbimp.exe /machine flag after translation, for example x86, ia64, amd64 or msil.</summary>
      <returns>Returns the name of the preferred target processor architecture.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.ResolveComReference.TypeLibFiles">
      <summary>Gets or sets the type library file path to COM references. </summary>
      <returns>The type library file path to COM references.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.ResolveComReference.TypeLibNames">
      <summary>Gets or sets the type library names to resolve.</summary>
      <returns>The type library names to resolve.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.ResolveComReference.WrapperOutputDirectory">
      <summary>Gets or sets the location on disk where the generated interop assembly is placed.</summary>
      <returns>The location on disk where the generated interop assembly is placed.</returns>
    </member>
    <member name="T:Microsoft.Build.Tasks.ResolveKeySource">
      <summary>Implements the ResolveKeySource task. Use the ResolveKeySource element in your project file to create and execute this task. For usage and parameter information, see ResolveKeySource Task.</summary>
    </member>
    <member name="M:Microsoft.Build.Tasks.ResolveKeySource.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.Build.Tasks.ResolveKeySource" /> class.</summary>
    </member>
    <member name="P:Microsoft.Build.Tasks.ResolveKeySource.AutoClosePasswordPromptShow">
      <summary>Gets or sets the amount of time, in seconds, to display the count down message.</summary>
      <returns>The amount of time, in seconds, to display the count down message.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.ResolveKeySource.AutoClosePasswordPromptTimeout">
      <summary>Gets or sets the amount of time, in seconds, to wait before closing the password prompt dialog.</summary>
      <returns>The amount of time, in seconds, to wait before closing the password prompt dialog.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.ResolveKeySource.CertificateFile">
      <summary>Gets or sets the path of the certificate file.</summary>
      <returns>The path of the certificate file.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.ResolveKeySource.CertificateThumbprint">
      <summary>Gets or sets the certificate thumbprint.</summary>
      <returns>The certificate thumbprint.</returns>
    </member>
    <member name="M:Microsoft.Build.Tasks.ResolveKeySource.Execute">
      <summary>Executes the ResolveKeySource task.</summary>
      <returns>true if task execution succeeded; otherwise, false.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.ResolveKeySource.KeyFile">
      <summary>Gets or sets the path of the key file.</summary>
      <returns>The path of the key file.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.ResolveKeySource.ResolvedKeyContainer">
      <summary>Gets or sets the resolved key container.</summary>
      <returns>The resolved key container.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.ResolveKeySource.ResolvedKeyFile">
      <summary>Gets or sets the resolved key file.</summary>
      <returns>The resolved key file.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.ResolveKeySource.ResolvedThumbprint">
      <summary>Gets or sets the resolved certificate thumbprint.</summary>
      <returns>The resolved certificate thumbprint.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.ResolveKeySource.ShowImportDialogDespitePreviousFailures">
      <summary>Gets or sets a Boolean value that specifies whether to show the import dialog despite previous failures.</summary>
      <returns>true if the task should show the import dialog despite previous failures; otherwise, false.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.ResolveKeySource.SuppressAutoClosePasswordPrompt">
      <summary>Gets or sets a Boolean value that specifies whether the password prompt dialog should not auto-close.</summary>
      <returns>true the password prompt dialog should not auto-close; otherwise, false.</returns>
    </member>
    <member name="T:Microsoft.Build.Tasks.ResolveManifestFiles">
      <summary>This task resolves the following items in the build process to files for manifest generation: built items, dependencies, satellites, content, debug symbols, and documentation) to files for manifest generation.</summary>
    </member>
    <member name="M:Microsoft.Build.Tasks.ResolveManifestFiles.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.Build.Tasks.ResolveManifestFiles" /> class.</summary>
    </member>
    <member name="P:Microsoft.Build.Tasks.ResolveManifestFiles.DeploymentManifestEntryPoint">
      <summary>Gets or sets the name of the deployment manifest.</summary>
      <returns>The deployment manifest name as an entry point.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.ResolveManifestFiles.EntryPoint">
      <summary>Gets or sets the managed assembly or ClickOnce manifest reference that is the entry point to the manifest.</summary>
      <returns>The entry point.</returns>
    </member>
    <member name="M:Microsoft.Build.Tasks.ResolveManifestFiles.Execute">
      <summary>Executes the ResolveManifestFiles task.</summary>
      <returns>true if task execution succeeded; otherwise, false.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.ResolveManifestFiles.ExtraFiles">
      <summary>Gets or sets the extra files.</summary>
      <returns>The extra files.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.ResolveManifestFiles.Files">
      <summary>Gets or sets the input files.</summary>
      <returns>The input files.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.ResolveManifestFiles.ManagedAssemblies">
      <summary>Gets or sets the managed assemblies.</summary>
      <returns>The managed assemblies.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.ResolveManifestFiles.NativeAssemblies">
      <summary>Gets or sets the native assemblies.</summary>
      <returns>The native assemblies.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.ResolveManifestFiles.OutputAssemblies">
      <summary>Gets or sets the generated assemblies.</summary>
      <returns>The generated assemblies.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.ResolveManifestFiles.OutputDeploymentManifestEntryPoint">
      <summary>Gets or sets the output deployment manifest entry point.</summary>
      <returns>A deployment manifest entry point.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.ResolveManifestFiles.OutputEntryPoint">
      <summary>Gets or sets the output entry point.</summary>
      <returns>An output entry point.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.ResolveManifestFiles.OutputFiles">
      <summary>Gets or sets the output files.</summary>
      <returns>The output files.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.ResolveManifestFiles.PublishFiles">
      <summary>Gets or sets the publish files.</summary>
      <returns>The publish files.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.ResolveManifestFiles.SatelliteAssemblies">
      <summary>Gets or sets the satellite assemblies.</summary>
      <returns>The satellite assemblies.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.ResolveManifestFiles.SigningManifests">
      <summary>Gets or sets a value that indicates whether the manifests are signed.</summary>
    </member>
    <member name="P:Microsoft.Build.Tasks.ResolveManifestFiles.TargetCulture">
      <summary>Gets or sets the target culture for satellite assemblies.</summary>
      <returns>The target culture for satellite assemblies.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.ResolveManifestFiles.TargetFrameworkVersion">
      <summary>Gets or sets the target .NET Framework version.</summary>
      <returns>The version of the target .NET Framework.</returns>
    </member>
    <member name="T:Microsoft.Build.Tasks.ResolveNativeReference">
      <summary>Implements the ResolveNativeReference task. Use the ResolveNativeReference element in your project file to create and execute this task. For usage and parameter information, see ResolveNativeReference Task.</summary>
    </member>
    <member name="M:Microsoft.Build.Tasks.ResolveNativeReference.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.Build.Tasks.ResolveNativeReference" /> class.</summary>
    </member>
    <member name="P:Microsoft.Build.Tasks.ResolveNativeReference.AdditionalSearchPaths">
      <summary>Gets or sets the search paths for resolving assembly identities of native references.</summary>
      <returns>The search paths for resolving assembly identities of native references.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.ResolveNativeReference.ContainedComComponents">
      <summary>Gets or sets the COM components of the native assembly.</summary>
      <returns>The COM components of the native assembly.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.ResolveNativeReference.ContainedLooseEtcFiles">
      <summary>Gets or sets the loose Etc files listed in the native manifest.</summary>
      <returns>The loose Etc files listed in the native manifest.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.ResolveNativeReference.ContainedLooseTlbFiles">
      <summary>Gets or sets the loose .tlb files of the native assembly.</summary>
      <returns>The loose .tlb files of the native assembly.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.ResolveNativeReference.ContainedPrerequisiteAssemblies">
      <summary>Gets or sets the assemblies that must be present before the manifest can be used.</summary>
      <returns>The assemblies that must be present before the manifest can be used.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.ResolveNativeReference.ContainedTypeLibraries">
      <summary>Gets or sets the type libraries of the native assembly.</summary>
      <returns>The type libraries of the native assembly.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.ResolveNativeReference.ContainingReferenceFiles">
      <summary>Gets or sets the reference files.</summary>
      <returns>The reference files.</returns>
    </member>
    <member name="M:Microsoft.Build.Tasks.ResolveNativeReference.Execute">
      <summary>Executes the ResolveNativeReference task.</summary>
      <returns>true if task execution succeeded; otherwise, false.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.ResolveNativeReference.NativeReferences">
      <summary>Gets or sets the Win32 native assembly references.</summary>
      <returns>The Win32 native assembly references.</returns>
    </member>
    <member name="T:Microsoft.Build.Tasks.ResolveNonMSBuildProjectOutput">
      <summary>Determines the output files for non-MSBuild project references.</summary>
    </member>
    <member name="M:Microsoft.Build.Tasks.ResolveNonMSBuildProjectOutput.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.Build.Tasks.ResolveNonMSBuildProjectOutput" /> class.</summary>
    </member>
    <member name="M:Microsoft.Build.Tasks.ResolveNonMSBuildProjectOutput.Execute">
      <summary>Executes the ResolveNonMSBuildProjectOutput task.</summary>
      <returns>true if task execution succeeded; otherwise, false.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.ResolveNonMSBuildProjectOutput.PreresolvedProjectOutputs">
      <summary>Gets or sets an XML string containing resolved project outputs.</summary>
      <returns>An XML string containing resolved project outputs.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.ResolveNonMSBuildProjectOutput.ResolvedOutputPaths">
      <summary>Gets or sets resolved reference paths that preserve the original project reference attributes.</summary>
      <returns>The resolved reference paths that preserve the original project reference attributes.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.ResolveNonMSBuildProjectOutput.UnresolvedProjectReferences">
      <summary>Gets or sets project reference items that are in the MSBuild format.</summary>
      <returns>Project reference items that are in the MSBuild format.</returns>
    </member>
    <member name="T:Microsoft.Build.Tasks.ResolveProjectBase">
      <summary>Represents the base class for <see cref="T:Microsoft.Build.Tasks.ResolveNonMSBuildProjectOutput" /> and <see cref="T:Microsoft.Build.Tasks.AssignProjectConfiguration" />.</summary>
    </member>
    <member name="M:Microsoft.Build.Tasks.ResolveProjectBase.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.Build.Tasks.ResolveProjectBase" /> class.</summary>
    </member>
    <member name="M:Microsoft.Build.Tasks.ResolveProjectBase.GetProjectElement(Microsoft.Build.Framework.ITaskItem)">
      <summary>Retrieves the XML element representing the given project.</summary>
      <param name="projectRef">The project reference item.</param>
    </member>
    <member name="M:Microsoft.Build.Tasks.ResolveProjectBase.GetProjectItem(Microsoft.Build.Framework.ITaskItem)">
      <summary>Retrieves the XML contents of the project element of the specified project.</summary>
      <returns>The XML contents of the project element of the specified project.</returns>
      <param name="projectRef">A project reference that contains a project GUID attribute.</param>
    </member>
    <member name="P:Microsoft.Build.Tasks.ResolveProjectBase.ProjectReferences">
      <summary>Gets or sets the project references.</summary>
      <returns>The project references.</returns>
    </member>
    <member name="T:Microsoft.Build.Tasks.SGen">
      <summary>Implements the SGen task. Use the SGen element in your project file to create and execute this task. For usage and parameter information, see SGen Task.</summary>
    </member>
    <member name="M:Microsoft.Build.Tasks.SGen.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.Build.Tasks.SGen" /> class.</summary>
    </member>
    <member name="P:Microsoft.Build.Tasks.SGen.BuildAssemblyName">
      <summary>Gets or sets the assembly to generate serialization code for.</summary>
      <returns>The assembly to generate serialization code for.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.SGen.BuildAssemblyPath">
      <summary>Gets or sets the path to the assembly to generate serialization code for.</summary>
      <returns>The path to the assembly to generate serialization code for.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.SGen.DelaySign">
      <summary>Gets or sets a Boolean value that specifies whether the SGen task places the public key in the assembly (true) or fully signs the assembly (false).</summary>
      <returns>true if the SGen task places the public key in the assembly; false if the SGen task fully signs the assembly.</returns>
    </member>
    <member name="M:Microsoft.Build.Tasks.SGen.GenerateCommandLineCommands">
      <summary>Gets the switches and other information that the command line tool must run directly from the command line and not from a response file.</summary>
      <returns>A string containing the switches and other information that the command line tool must run directly from the command line and not from a response file.</returns>
    </member>
    <member name="M:Microsoft.Build.Tasks.SGen.GenerateFullPathToTool">
      <summary>Gets the full file path of the SGen tool.</summary>
      <returns>The full file path of the SGen tool.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.SGen.KeyContainer">
      <summary>Gets or sets a container that holds a key pair. </summary>
      <returns>The container that holds a key pair.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.SGen.KeyFile">
      <summary>Gets or sets a key pair or a public key to use to sign an assembly. </summary>
      <returns>A key pair or a public key to use to sign an assembly.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.SGen.Platform"></member>
    <member name="P:Microsoft.Build.Tasks.SGen.References">
      <summary>Gets or sets the assemblies that are referenced by the types requiring XML serialization.</summary>
      <returns>The assemblies that are referenced by the types requiring XML serialization.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.SGen.SdkToolsPath">
      <summary>Gets or sets the SDK Tools path.</summary>
      <returns>Returns the SDK Tools path.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.SGen.SerializationAssembly">
      <summary>Gets or sets the generated serialization assembly.</summary>
      <returns>The generated serialization assembly.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.SGen.SerializationAssemblyName">
      <summary>Gets the name of the generated serialization assembly.</summary>
      <returns>The name of the generated serialization assembly.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.SGen.ShouldGenerateSerializer">
      <summary>Gets or sets a Boolean value that specifies whether the SGen task should generate a serialization assembly.</summary>
      <returns>true if the SGen task should generate a serialization assembly; otherwise, false.</returns>
    </member>
    <member name="M:Microsoft.Build.Tasks.SGen.SkipTaskExecution">
      <summary>Indicates whether task execution should be skipped.</summary>
      <returns>true if task execution should be skipped; otherwise, false.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.SGen.ToolName">
      <summary>Gets the name of the tool executable file (sgen.exe).</summary>
      <returns>The name of the tool executable file.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.SGen.Types"></member>
    <member name="P:Microsoft.Build.Tasks.SGen.UseProxyTypes">
      <summary>Gets or sets a Boolean value that specifies whether the SGen task generates serialization code only for the XML Web service proxy types.</summary>
      <returns>true if the SGen task generates serialization code only for the XML Web service proxy types; otherwise, false.</returns>
    </member>
    <member name="M:Microsoft.Build.Tasks.SGen.ValidateParameters">
      <summary>Validates input parameters and logs errors or warnings, if any. Returns a Boolean value that indicates whether task execution should proceed.</summary>
      <returns>true if task execution should proceed; otherwise, false.</returns>
    </member>
    <member name="T:Microsoft.Build.Tasks.SignFile">
      <summary>Implements the SignFile task. Use the SignFile element in your project file to create and execute this task. For usage and parameter information, see SignFile Task.</summary>
    </member>
    <member name="M:Microsoft.Build.Tasks.SignFile.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.Build.Tasks.SignFile" /> class.</summary>
    </member>
    <member name="P:Microsoft.Build.Tasks.SignFile.CertificateThumbprint">
      <summary>Gets or sets the certificate to use for signing.</summary>
      <returns>The certificate to use for signing.</returns>
    </member>
    <member name="M:Microsoft.Build.Tasks.SignFile.Execute">
      <summary>Executes the SignFile task.</summary>
      <returns>true if task execution succeeded; otherwise, false.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.SignFile.SigningTarget">
      <summary>Gets or sets the files to sign with the certificate.</summary>
      <returns>The files to sign with the certificate.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.SignFile.TimestampUrl">
      <summary>Gets or sets the URL of a time stamping server.</summary>
      <returns>The URL of a time stamping server.</returns>
    </member>
    <member name="T:Microsoft.Build.Tasks.TaskExtension">
      <summary>Contains properties to help extend a task.</summary>
    </member>
    <member name="P:Microsoft.Build.Tasks.TaskExtension.Log">
      <summary>Gets an instance of a <see cref="T:Microsoft.Build.Tasks.TaskLoggingHelperExtension" /> containing task logging methods.</summary>
      <returns>An instance of a <see cref="T:Microsoft.Build.Tasks.TaskLoggingHelperExtension" /> containing task logging methods.</returns>
    </member>
    <member name="T:Microsoft.Build.Tasks.TaskLoggingHelperExtension">
      <summary>Enables logging of various messages. Also, enables loading and formatting of resources.</summary>
    </member>
    <member name="M:Microsoft.Build.Tasks.TaskLoggingHelperExtension.#ctor(Microsoft.Build.Framework.ITask,System.Resources.ResourceManager,System.Resources.ResourceManager,System.String)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.Build.Tasks.TaskLoggingHelperExtension" /> class with the task instance, primary resources, shared resources, and a Help keyword prefix.</summary>
      <param name="taskInstance">A task containing an instance of the <see cref="T:Microsoft.Build.Tasks.TaskLoggingHelperExtension" /> class.</param>
      <param name="primaryResources">UI and string resources.</param>
      <param name="sharedResources">Shared UI and string resources.</param>
      <param name="helpKeywordPrefix">The prefix for composing Help keywords.</param>
    </member>
    <member name="M:Microsoft.Build.Tasks.TaskLoggingHelperExtension.FormatResourceString(System.String,System.Object[])">
      <summary>Loads the specified resource string and optionally formats it using the given arguments. The current thread's culture is used for formatting.</summary>
      <returns>The formatted string.</returns>
      <param name="resourceName">The name of the string resource to load.</param>
      <param name="args">Optional arguments for formatting the loaded string, or null.</param>
    </member>
    <member name="P:Microsoft.Build.Tasks.TaskLoggingHelperExtension.TaskSharedResources">
      <summary>Gets or sets the shared UI and string resources.</summary>
      <returns>The shared UI and string resources.</returns>
    </member>
    <member name="T:Microsoft.Build.Tasks.ToolTaskExtension">
      <summary>Comprises extended utility methods for constructing a task that wraps a command line tool.</summary>
    </member>
    <member name="M:Microsoft.Build.Tasks.ToolTaskExtension.AddCommandLineCommands(Microsoft.Build.Tasks.CommandLineBuilderExtension)">
      <summary>Fills the specified <see cref="T:Microsoft.Build.Tasks.CommandLineBuilderExtension" /> with the switches and other information that the command line tool must run from the command line and not from a response file.</summary>
      <param name="commandLine">The <see cref="T:Microsoft.Build.Tasks.CommandLineBuilderExtension" /> to fill.</param>
    </member>
    <member name="M:Microsoft.Build.Tasks.ToolTaskExtension.AddResponseFileCommands(Microsoft.Build.Tasks.CommandLineBuilderExtension)">
      <summary>Fills the specified <see cref="T:Microsoft.Build.Tasks.CommandLineBuilderExtension" /> with the switches and other information that the command line tool can run from a response file.</summary>
      <param name="commandLine">The <see cref="T:Microsoft.Build.Tasks.CommandLineBuilderExtension" /> to fill.</param>
    </member>
    <member name="P:Microsoft.Build.Tasks.ToolTaskExtension.Bag">
      <summary>Gets the collection of parameters used by the derived task class.</summary>
      <returns>The collection of parameters used by the derived task class.</returns>
    </member>
    <member name="M:Microsoft.Build.Tasks.ToolTaskExtension.GenerateCommandLineCommands">
      <summary>Gets the switches and other information that the command line tool must run directly from the command line and not from a response file.</summary>
      <returns>A string containing the switches and other information that the command line tool must run directly from the command line and not from a response file.</returns>
    </member>
    <member name="M:Microsoft.Build.Tasks.ToolTaskExtension.GenerateResponseFileCommands">
      <summary>Gets the switch used by the command line tool to specify the response file.</summary>
      <returns>The switch used by the command line tool to specify the response file.</returns>
    </member>
    <member name="M:Microsoft.Build.Tasks.ToolTaskExtension.GetBoolParameterWithDefault(System.String,System.Boolean)">
      <summary>Gets the value of the specified Boolean parameter.</summary>
      <returns>The parameter value.</returns>
      <param name="parameterName">The name of the parameter to return.</param>
      <param name="defaultValue">The value to return if <paramref name="parameterName" /> does not exist in the <see cref="P:Microsoft.Build.Tasks.ToolTaskExtension.Bag" />.</param>
    </member>
    <member name="M:Microsoft.Build.Tasks.ToolTaskExtension.GetIntParameterWithDefault(System.String,System.Int32)">
      <summary>Gets the value of the specified integer parameter.</summary>
      <returns>The parameter value.</returns>
      <param name="parameterName">The name of the parameter to return.</param>
      <param name="defaultValue">The value to return if <paramref name="parameterName" /> does not exist in the <see cref="P:Microsoft.Build.Tasks.ToolTaskExtension.Bag" />.</param>
    </member>
    <member name="P:Microsoft.Build.Tasks.ToolTaskExtension.HasLoggedErrors">
      <summary>Returns whether this ToolTask has logged any errors.</summary>
      <returns>true if the ToolTask logged errors, false if otherwise.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.ToolTaskExtension.Log">
      <summary>Gets an instance of a <see cref="T:Microsoft.Build.Tasks.TaskLoggingHelperExtension" /> class containing task logging methods.</summary>
      <returns>An instance of a <see cref="T:Microsoft.Build.Tasks.TaskLoggingHelperExtension" /> class containing task logging methods.</returns>
    </member>
    <member name="T:Microsoft.Build.Tasks.Touch">
      <summary>Implements the Touch task. Use the Touch element in your project file to create and execute this task. For usage and parameter information, see Touch Task.</summary>
    </member>
    <member name="M:Microsoft.Build.Tasks.Touch.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.Build.Tasks.Touch" /> class.</summary>
    </member>
    <member name="P:Microsoft.Build.Tasks.Touch.AlwaysCreate">
      <summary>Gets or sets a Boolean value that specifies whether to create any files that do not already exist.</summary>
      <returns>true if the Touch task creates any files that do not already exist; otherwise, false.</returns>
    </member>
    <member name="M:Microsoft.Build.Tasks.Touch.Execute">
      <summary>Executes the Touch task.</summary>
      <returns>true if task execution succeeded; otherwise, false.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.Touch.Files">
      <summary>Gets or sets the files to touch.</summary>
      <returns>The files to touch.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.Touch.ForceTouch">
      <summary>Gets or sets a Boolean value that specifies whether to force a file touch even if the files are read-only.</summary>
      <returns>true if the Touch task forces a file touch even if the files are read-only; otherwise, false.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.Touch.Time">
      <summary>Gets or sets a time other than the current time. The format must be a format that is acceptable to the <see cref="M:System.DateTime.Parse(System.String)" /> method.</summary>
      <returns>A time other than the current time.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.Touch.TouchedFiles">
      <summary>Gets or sets the items that were successfully touched.</summary>
      <returns>The items that were successfully touched.</returns>
    </member>
    <member name="T:Microsoft.Build.Tasks.UnregisterAssembly">
      <summary>Implements the UnregisterAssembly task. Use the UnregisterAssembly element in your project file to create and execute this task. For usage and parameter information, see UnregisterAssembly Task.</summary>
    </member>
    <member name="M:Microsoft.Build.Tasks.UnregisterAssembly.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.Build.Tasks.UnregisterAssembly" /> class.</summary>
    </member>
    <member name="P:Microsoft.Build.Tasks.UnregisterAssembly.Assemblies">
      <summary>Gets or sets the assemblies to be unregistered.</summary>
      <returns>The assemblies to be unregistered.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.UnregisterAssembly.AssemblyListFile">
      <summary>Gets or sets information about the state between the RegisterAssembly task and the UnregisterAssembly task that the UnregisterAssembly task uses to avoid unregistering an assembly that failed to register in the RegisterAssembly task.</summary>
      <returns>Information about the state between the RegisterAssembly task and the UnregisterAssembly task.</returns>
    </member>
    <member name="M:Microsoft.Build.Tasks.UnregisterAssembly.Execute">
      <summary>Executes the UnregisterAssembly task.</summary>
      <returns>true if task execution succeeded; otherwise, false.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.UnregisterAssembly.TypeLibFiles">
      <summary>Gets or sets a Boolean value that specifies whether to unregister the specified type library from the specified assembly.</summary>
      <returns>true if the UnregisterAssembly task should unregister the specified type library from the specified assembly; otherwise, false.</returns>
    </member>
    <member name="T:Microsoft.Build.Tasks.UpdateManifest">
      <summary>Updates selected properties in a manifest and resigns.</summary>
    </member>
    <member name="M:Microsoft.Build.Tasks.UpdateManifest.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.Build.Tasks.UpdateManifest" /> class.</summary>
    </member>
    <member name="P:Microsoft.Build.Tasks.UpdateManifest.ApplicationManifest">
      <summary>Gets or sets the application manifest.</summary>
      <returns>The application manifest.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.UpdateManifest.ApplicationPath">
      <summary>Gets or sets the path of the application manifest.</summary>
      <returns>The path of the application manifest.</returns>
    </member>
    <member name="M:Microsoft.Build.Tasks.UpdateManifest.Execute">
      <summary>Executes the task.</summary>
      <returns>true if task execution succeeded; <see cref="T:System.InvalidOperationException" /> on error.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.UpdateManifest.InputManifest">
      <summary>Gets or sets the manifest to update.</summary>
      <returns>The manifest to update.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.UpdateManifest.OutputManifest">
      <summary>Gets or sets the manifest that contains updated properties.</summary>
      <returns>The manifest that contains updated properties.</returns>
    </member>
    <member name="T:Microsoft.Build.Tasks.Vbc">
      <summary>Implements the Vbc task. Use the Vbc element in your project file to create and execute this task. For usage and parameter information, see Vbc Task.</summary>
    </member>
    <member name="M:Microsoft.Build.Tasks.Vbc.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.Build.Tasks.Vbc" /> class.</summary>
    </member>
    <member name="M:Microsoft.Build.Tasks.Vbc.AddResponseFileCommands(Microsoft.Build.Tasks.CommandLineBuilderExtension)">
      <summary>Fills the specified <paramref name="commandLine" /> parameter with switches and other information that can go into a response file.</summary>
      <param name="commandLine">Command line builder to add arguments to.</param>
    </member>
    <member name="P:Microsoft.Build.Tasks.Vbc.BaseAddress">
      <summary>Gets or sets the base address of the DLL.</summary>
      <returns>The base address of the DLL.</returns>
    </member>
    <member name="M:Microsoft.Build.Tasks.Vbc.CallHostObjectToExecute">
      <summary>Compiles the project through the host object.</summary>
      <returns>true if compilation succeeded; otherwise, false.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.Vbc.DisabledWarnings">
      <summary>Gets or sets one or more warnings to suppress that are specified by the numeric part of the warning identifier.</summary>
      <returns>The warnings to suppress that are specified by the numeric part of the warning identifier.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.Vbc.DocumentationFile">
      <summary>Turns on documentation comments processing and gets or sets the output documentation XML file.</summary>
      <returns>The output documentation XML file.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.Vbc.ErrorReport">
      <summary>Gets or sets a string value that specifies how the task will report internal compiler errors.</summary>
      <returns>A string value that specifies how the task will report internal compiler errors.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.Vbc.GenerateDocumentation">
      <summary>Gets or sets a Boolean value that specifies whether to process documentation comments to an XML file.</summary>
      <returns>true if the Vbc task processes documentation comments to a XML file; otherwise, false.</returns>
    </member>
    <member name="M:Microsoft.Build.Tasks.Vbc.GenerateFullPathToTool">
      <summary>Returns the full file path of the tool.</summary>
      <returns>The full file path of the tool.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.Vbc.Imports">
      <summary>Gets or sets the item collections to import namespaces from.</summary>
      <returns>The item collections to import namespaces from.</returns>
    </member>
    <member name="M:Microsoft.Build.Tasks.Vbc.InitializeHostObject">
      <summary>Returns a host object initialization status value that indicates what the next action should be.</summary>
      <returns>A host object initialization status value that indicates what the next action should be.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.Vbc.LangVersion">
      <summary>Gets or sets the language version.</summary>
      <returns>Returns the language version.</returns>
    </member>
    <member name="M:Microsoft.Build.Tasks.Vbc.LogEventsFromTextOutput(System.String,Microsoft.Build.Framework.MessageImportance)">
      <summary>This method intercepts the lines to be logged coming from STDOUT from VBC.</summary>
      <param name="singleLine">A single line captured from the STDOUT of the vbc compiler</param>
      <param name="messageImportance">The message importance: High,Low, or Normal</param>
    </member>
    <member name="P:Microsoft.Build.Tasks.Vbc.ModuleAssemblyName">
      <summary>Gets or sets the name of the assembly that this module will be a part of.</summary>
      <returns>The name of the assembly that this module will be a part of.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.Vbc.NoStandardLib">
      <summary>Gets or sets a Boolean value that specifies whether the compiler should not reference the standard libraries.</summary>
      <returns>true if the compiler should not reference the standard libraries; otherwise, false.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.Vbc.NoVBRuntimeReference">
      <summary>Gets or sets a Boolean value that specifies whether the compiler should compile without a reference to the Visual Basic Runtime Library.</summary>
      <returns>true if the compiler should compile without a reference to the Visual Basic Runtime Library; otherwise, false.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.Vbc.NoWarnings">
      <summary>Gets or sets a Boolean value that specifies whether the task will suppress all warnings.</summary>
      <returns>true if the task will suppress all warnings; otherwise, false.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.Vbc.OptionCompare">
      <summary>Gets or sets a string value that specifies how string comparisons are made.</summary>
      <returns>A string value that specifies how string comparisons are made.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.Vbc.OptionExplicit">
      <summary>Gets or sets a Boolean value that specifies whether explicit declaration of variables is required.</summary>
      <returns>true if explicit declaration of variables is required; otherwise, false.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.Vbc.OptionInfer">
      <summary>Gets or sets a Boolean value that specifies whether to use local type inference in variable declarations.</summary>
      <returns>true if the Vbc task will use local type inference in variable declarations; otherwise, false.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.Vbc.OptionStrict">
      <summary>Gets or sets a Boolean value that specifies whether the task enforces strict type semantics to restrict implicit type conversions.</summary>
      <returns>true if the task enforces strict type semantics; otherwise, false.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.Vbc.OptionStrictType">
      <summary>Gets or sets a value for the <see cref="P:Microsoft.Build.Tasks.Vbc.OptionStrict" /> property. Currently, the value can be set to âcustomâ and specifies whether the task generates warnings for implicit narrowing type conversions.</summary>
      <returns>A value for the <see cref="P:Microsoft.Build.Tasks.Vbc.OptionStrict" /> property.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.Vbc.Platform">
      <summary>Gets or sets the processor platform to be targeted by the output file.</summary>
      <returns>The processor platform to be targeted by the output file.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.Vbc.RemoveIntegerChecks">
      <summary>Gets or sets a Boolean value that specifies whether to disable integer overflow error checks. </summary>
      <returns>true if the Vbc task will disable integer overflow error checks; otherwise, false.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.Vbc.RootNamespace">
      <summary>Gets or sets the root namespace for all type declarations.</summary>
      <returns>The root namespace for all type declarations.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.Vbc.SdkPath">
      <summary>Gets or sets the location of mscorlib.dll and microsoft.visualbasic.dll.</summary>
      <returns>The location of mscorlib.dll and microsoft.visualbasic.dll.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.Vbc.TargetCompactFramework">
      <summary>Gets or sets a Boolean value that specifies whether to target the .NET Compact Framework.</summary>
      <returns>true if the Vbc task should target the .NET Compact Framework; otherwise, false.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.Vbc.ToolName">
      <summary>Gets the name of the tool executable file (vbc.exe).</summary>
      <returns>The name of the tool executable file.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.Vbc.UseHostCompilerIfAvailable">
      <summary>Gets or sets a Boolean value that specifies whether to use the in-process compiler object, if available. Used only by Visual Studio.</summary>
      <returns>true if the Vbc task will use the in-process compiler object, if available; otherwise, false.</returns>
    </member>
    <member name="M:Microsoft.Build.Tasks.Vbc.ValidateParameters">
      <summary>Validates input parameters and logs errors or warnings, if any. Returns a Boolean value that indicates whether task execution should proceed.</summary>
      <returns>true if task execution should proceed; otherwise, false.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.Vbc.Verbosity">
      <summary>Gets or sets the verbosity of the compilerâs output, which can be Quiet, Normal, or Verbose.</summary>
      <returns>The verbosity of the compilerâs output.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.Vbc.WarningsAsErrors">
      <summary>Gets or sets a list of warnings to treat as errors.</summary>
      <returns>A list of warnings to treat as errors.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.Vbc.WarningsNotAsErrors">
      <summary>Gets or sets a list of warnings that are not treated as errors.</summary>
      <returns>A list of warnings that are not treated as errors.</returns>
    </member>
    <member name="T:Microsoft.Build.Tasks.Warning">
      <summary>Implements the Warning task. Use the Warning element in your project file to create and execute this task. For usage and parameter information, see Warning Task.</summary>
    </member>
    <member name="M:Microsoft.Build.Tasks.Warning.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.Build.Tasks.Warning" /> class.</summary>
    </member>
    <member name="P:Microsoft.Build.Tasks.Warning.Code">
      <summary>Gets or sets the warning code.</summary>
      <returns>The warning code.</returns>
    </member>
    <member name="M:Microsoft.Build.Tasks.Warning.Execute">
      <summary>Executes the Warning task.</summary>
      <returns>true in all cases.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.Warning.File">
      <summary>Relevant file if any. If none is provided, the file containing the Warning task will be used.</summary>
    </member>
    <member name="P:Microsoft.Build.Tasks.Warning.HelpKeyword">
      <summary>Gets or sets the Help keyword to associate with the warning.</summary>
      <returns>The Help keyword to associate with the warning.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.Warning.Text">
      <summary>Gets or sets the warning text that MSBuild logs.</summary>
      <returns>The warning text that MSBuild logs.</returns>
    </member>
    <member name="T:Microsoft.Build.Tasks.WriteCodeFragment">
      <summary>Generates a temporary code file with the specified generated code fragment.  Does not delete the file.</summary>
    </member>
    <member name="M:Microsoft.Build.Tasks.WriteCodeFragment.#ctor">
      <summary>Creates a temporary code file with the specified generated code fragment.  </summary>
    </member>
    <member name="P:Microsoft.Build.Tasks.WriteCodeFragment.AssemblyAttributes">
      <summary>Gets or sets the attributes to write.</summary>
      <returns>Returns an item whose value is the full type name of he attribute, for example, "System.AssemblyVersionAttribute".</returns>
    </member>
    <member name="M:Microsoft.Build.Tasks.WriteCodeFragment.Execute">
      <summary>Executes the WriteCodeFragment method.</summary>
    </member>
    <member name="P:Microsoft.Build.Tasks.WriteCodeFragment.Language">
      <summary>Gets or sets the language of code to generate.</summary>
      <returns>Returns the language of code to generate.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.WriteCodeFragment.OutputDirectory">
      <summary>Gets or sets the destination folder for the generated code, typically the intermediate folder.</summary>
      <returns>Returns the destination folder for the generated code.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.WriteCodeFragment.OutputFile">
      <summary>Gets or sets the path to the file that was generated.</summary>
      <returns>Returns the path to the file that was generated.</returns>
    </member>
    <member name="T:Microsoft.Build.Tasks.WriteLinesToFile">
      <summary>Implements the WriteLinesToFile task. Use the WriteLinesToFile element in your project file to create and execute this task. For usage and parameter information, see WriteLinesToFileWriteLinesToFile Task.</summary>
    </member>
    <member name="M:Microsoft.Build.Tasks.WriteLinesToFile.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.Build.Tasks.WriteLinesToFile" /> class.</summary>
    </member>
    <member name="P:Microsoft.Build.Tasks.WriteLinesToFile.Encoding">
      <summary>Gets or sets the system text encoding, for example UTF-8.</summary>
      <returns>Returns the system text encoding.</returns>
    </member>
    <member name="M:Microsoft.Build.Tasks.WriteLinesToFile.Execute">
      <summary>Executes the WriteLinesToFile task.</summary>
      <returns>true if task execution succeeded; otherwise, false.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.WriteLinesToFile.File">
      <summary>Gets or sets the file to write the items to.</summary>
      <returns>The file to write the items to.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.WriteLinesToFile.Lines">
      <summary>Gets or sets the items to write to the file.</summary>
      <returns>The items to write to the file.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.WriteLinesToFile.Overwrite">
      <summary>Gets or sets a Boolean value that specifies whether the task overwrites any existing content in the file.</summary>
      <returns>true if the task overwrites any existing content in the file; otherwise, false.</returns>
    </member>
    <member name="T:Microsoft.Build.Tasks.XamlTaskFactory">
      <summary>The task factory provider for XAML tasks.</summary>
    </member>
    <member name="M:Microsoft.Build.Tasks.XamlTaskFactory.#ctor">
      <summary>Creates a task factory for XAML tasks.</summary>
    </member>
    <member name="M:Microsoft.Build.Tasks.XamlTaskFactory.CleanupTask(Microsoft.Build.Framework.ITask)">
      <summary>Cleans up any context or state that may have been built up for a given task. </summary>
      <param name="task">The task to clean up.</param>
    </member>
    <member name="M:Microsoft.Build.Tasks.XamlTaskFactory.CreateTask(Microsoft.Build.Framework.IBuildEngine)">
      <summary>Creates an instance of the task to be used.</summary>
      <param name="taskFactoryLoggingHost">The task factory logging host that logs messages in the context of the task.</param>
    </member>
    <member name="P:Microsoft.Build.Tasks.XamlTaskFactory.FactoryName">
      <summary>Gets the name of this task factory, to be used in error messages. For example, Task "Mytask" failed to load from "FactoryName".</summary>
      <returns>Returns the name of this task factory</returns>
    </member>
    <member name="M:Microsoft.Build.Tasks.XamlTaskFactory.GetTaskParameters">
      <summary>Gets the type information for the parameters of the task.</summary>
      <returns>Returns the type information as an array of PropertyInfo.</returns>
    </member>
    <member name="M:Microsoft.Build.Tasks.XamlTaskFactory.Initialize(System.String,System.Collections.Generic.IDictionary{System.String,Microsoft.Build.Framework.TaskPropertyInfo},System.String,Microsoft.Build.Framework.IBuildEngine)">
      <summary>Initializes the factory.</summary>
      <param name="taskName">The name of the task.</param>
      <param name="taskParameters">The parameters to pass to the task.</param>
      <param name="taskElementContents">The element contents.</param>
      <param name="taskFactoryLoggingHost">The task factory logging host that logs messages in the context of the task.</param>
    </member>
    <member name="P:Microsoft.Build.Tasks.XamlTaskFactory.TaskElementContents">
      <summary>Gets or sets the contents of the UsingTask body.</summary>
      <returns>Returns the contents of the UsingTask body.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.XamlTaskFactory.TaskName">
      <summary>Gets or sets the name of the task, pulled from the XAML.</summary>
      <returns>Returns the name of the task.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.XamlTaskFactory.TaskNamespace">
      <summary>Gets or sets the namespace of the task, pulled from the XAML.</summary>
      <returns>Returns the namespace of the task.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.XamlTaskFactory.TaskType"></member>
    <member name="T:Microsoft.Build.Tasks.XmlPeek">
      <summary>A task that returns values as specified by XPath Query from an XML file.</summary>
    </member>
    <member name="M:Microsoft.Build.Tasks.XmlPeek.#ctor">
      <summary>Creates a task that returns values as specified by XPath Query from an XML file.</summary>
    </member>
    <member name="M:Microsoft.Build.Tasks.XmlPeek.Execute">
      <summary>Executes the XMLPeek task.</summary>
      <returns>Returns true if transformation succeeds; false otherwise.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.XmlPeek.Namespaces">
      <summary>Gets or sets the namespaces for XPath query's prefixes.</summary>
      <returns>Returns the namespaces.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.XmlPeek.Query">
      <summary>Gets or sets the XPath Query.</summary>
      <returns>Returns the XPath Query.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.XmlPeek.Result">
      <summary>Gets the results returned by this task.</summary>
      <returns>Returns the results.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.XmlPeek.XmlContent">
      <summary>Gets or sets the XML input as a string.</summary>
      <returns>Returns the XML input as a string.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.XmlPeek.XmlInputPath">
      <summary>Gets or sets the XML input as a file path.</summary>
      <returns>Returns the XML input as a file path.</returns>
    </member>
    <member name="T:Microsoft.Build.Tasks.XmlPoke">
      <summary>A task that sets values as specified by XPath Query into a XML file.</summary>
    </member>
    <member name="M:Microsoft.Build.Tasks.XmlPoke.#ctor">
      <summary>Creates a task that sets values as specified by XPath Query into a XML file.</summary>
    </member>
    <member name="M:Microsoft.Build.Tasks.XmlPoke.Execute">
      <summary>Executes the XMLPoke task.</summary>
      <returns>Returns true if transformation succeeds.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.XmlPoke.Namespaces">
      <summary>Gets or sets the namespaces for XPath query's prefixes.</summary>
      <returns>Returns the namespaces for XPath query's prefixes.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.XmlPoke.Query">
      <summary>Gets or sets the XPath Query.</summary>
      <returns>Returns the XPath Query.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.XmlPoke.Value">
      <summary>Gets or sets the output file.</summary>
      <returns>Returns the output file.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.XmlPoke.XmlInputPath">
      <summary>Gets or sets the XML input as file path.</summary>
      <returns>Returns the XML input as file path.</returns>
    </member>
    <member name="T:Microsoft.Build.Tasks.XslTransformation">
      <summary>Transforms an XML input by using an XSLT or Compiled XSLT and outputs to an output device or a file.</summary>
    </member>
    <member name="M:Microsoft.Build.Tasks.XslTransformation.#ctor">
      <summary>Creates an XML transformation.</summary>
    </member>
    <member name="M:Microsoft.Build.Tasks.XslTransformation.Execute">
      <summary>Executes the XslTransform task.</summary>
      <returns>Returns true if the transformation succeeds; otherwise, false.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.XslTransformation.OutputPaths">
      <summary>Gets or sets the output files for the XML transformation.</summary>
      <returns>Returns the output files for the XML transformation.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.XslTransformation.Parameters">
      <summary>Gets or sets the parameters to the XSLT Input document.</summary>
      <returns>Returns the parameters to the XSLT Input document.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.XslTransformation.XmlContent">
      <summary>Gets or sets the XML input as a string.</summary>
      <returns>Returns the XML input as a string.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.XslTransformation.XmlInputPaths">
      <summary>Gets or sets the XML input files.</summary>
      <returns>Returns the XML input files.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.XslTransformation.XslCompiledDllPath">
      <summary>Gets or sets the compiled XSLT.</summary>
      <returns>Returns the path of the compiled XSLT assembly.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.XslTransformation.XslContent">
      <summary>Gets or sets the XSLT input as string.</summary>
      <returns>Returns the XSLT input as string.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.XslTransformation.XslInputPath">
      <summary>Gets or sets the XSLT input file.</summary>
      <returns>Returns the XSLT input file.</returns>
    </member>
    <member name="T:Microsoft.Build.Tasks.Deployment.Bootstrapper.BootstrapperBuilder">
      <summary>The top-level object for the bootstrapper system.</summary>
    </member>
    <member name="M:Microsoft.Build.Tasks.Deployment.Bootstrapper.BootstrapperBuilder.#ctor">
      <summary>Initializes a new instance of the BootstrapperBuilder class.</summary>
    </member>
    <member name="M:Microsoft.Build.Tasks.Deployment.Bootstrapper.BootstrapperBuilder.Build(Microsoft.Build.Tasks.Deployment.Bootstrapper.BuildSettings)">
      <summary>Generates a bootstrapper by using the specified settings.</summary>
      <returns>The results of the bootstrapper generation.</returns>
      <param name="settings">The properties used to create the bootstrapper.</param>
    </member>
    <member name="M:Microsoft.Build.Tasks.Deployment.Bootstrapper.BootstrapperBuilder.GetOutputFolders(System.String[],System.String,System.String,Microsoft.Build.Tasks.Deployment.Bootstrapper.ComponentsLocation)">
      <summary>Returns the directories to which bootstrapper component files are copied when they are created, given the specified settings.</summary>
      <returns>The directories to which bootstrapper component files are copied when they are created, given the specified settings.</returns>
      <param name="productCodes">The <see cref="P:Microsoft.Build.Tasks.Deployment.Bootstrapper.IProduct.ProductCode" /> values of the selected components.</param>
      <param name="culture">The culture used to create the bootstrapper.</param>
      <param name="fallbackCulture">The fallback culture used to create the bootstrapper.</param>
      <param name="componentsLocation">Specifies how the bootstrapper packages the selected components.</param>
    </member>
    <member name="P:Microsoft.Build.Tasks.Deployment.Bootstrapper.BootstrapperBuilder.Path">
      <summary>Gets or sets the location of the required bootstrapper files.</summary>
      <returns>The path for the required bootstrapper files.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.Deployment.Bootstrapper.BootstrapperBuilder.Products">
      <summary>Gets all products available at the current bootstrapper <see cref="P:Microsoft.Build.Tasks.Deployment.Bootstrapper.BootstrapperBuilder.Path" />.</summary>
      <returns>All products available at the current bootstrapper <see cref="P:Microsoft.Build.Tasks.Deployment.Bootstrapper.BootstrapperBuilder.Path" />.</returns>
    </member>
    <member name="T:Microsoft.Build.Tasks.Deployment.Bootstrapper.BuildMessage">
      <summary>Defines messages that occur during the <see cref="T:Microsoft.Build.Tasks.Deployment.Bootstrapper.BootstrapperBuilder" /> build operation.</summary>
    </member>
    <member name="P:Microsoft.Build.Tasks.Deployment.Bootstrapper.BuildMessage.HelpId">
      <summary>Gets the MSBuild Help ID for the host IDE.</summary>
      <returns>An integer value that represents the Help ID.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.Deployment.Bootstrapper.BuildMessage.HelpKeyword">
      <summary>Gets the MSBuild F1 Help keyword for the host IDE, or null.</summary>
      <returns>A string that represents the F1 Help keyword.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.Deployment.Bootstrapper.BuildMessage.Message">
      <summary>Gets the details of the build message.</summary>
      <returns>A text string that describes the details of the build message.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.Deployment.Bootstrapper.BuildMessage.Severity">
      <summary>Gets the severity of the build message.</summary>
      <returns>The severity of the build message as defined by the <see cref="T:Microsoft.Build.Tasks.Deployment.Bootstrapper.BuildMessageSeverity" /> class.</returns>
    </member>
    <member name="T:Microsoft.Build.Tasks.Deployment.Bootstrapper.BuildMessageSeverity">
      <summary>This enumeration provides three levels of importance for build messages.</summary>
    </member>
    <member name="F:Microsoft.Build.Tasks.Deployment.Bootstrapper.BuildMessageSeverity.Info">
      <summary>Indicates that the message corresponds to build information.</summary>
    </member>
    <member name="F:Microsoft.Build.Tasks.Deployment.Bootstrapper.BuildMessageSeverity.Warning">
      <summary>Indicates that the message corresponds to a build warning.</summary>
    </member>
    <member name="F:Microsoft.Build.Tasks.Deployment.Bootstrapper.BuildMessageSeverity.Error">
      <summary>Indicates that the message corresponds to a build error.</summary>
    </member>
    <member name="T:Microsoft.Build.Tasks.Deployment.Bootstrapper.BuildResults">
      <summary>Represents the results of the <see cref="T:Microsoft.Build.Tasks.Deployment.Bootstrapper.BootstrapperBuilder" /> build operation.</summary>
    </member>
    <member name="P:Microsoft.Build.Tasks.Deployment.Bootstrapper.BuildResults.ComponentFiles">
      <summary>Gets paths to the copied component installer files.</summary>
      <returns>A string array that contains paths for the copied component installer files.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.Deployment.Bootstrapper.BuildResults.KeyFile">
      <summary>Gets the path of the generated primary bootstrapper file.</summary>
      <returns>A string representing the path of the generated primary bootstrapper file.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.Deployment.Bootstrapper.BuildResults.Messages">
      <summary>Gets the build messages generated from the bootstrapper build.</summary>
      <returns>An array of <see cref="T:Microsoft.Build.Tasks.Deployment.Bootstrapper.BuildMessage" /> messages from the bootstrapper build.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.Deployment.Bootstrapper.BuildResults.Succeeded">
      <summary>Gets a Boolean value that indicates whether the bootstrapper build was successful.</summary>
      <returns>A Boolean value indicating whether the bootstrapper build was successful. Returns true if the bootstrapper build was successful; otherwise, false.</returns>
    </member>
    <member name="T:Microsoft.Build.Tasks.Deployment.Bootstrapper.BuildSettings">
      <summary>Defines the settings for the bootstrapper build operation.</summary>
    </member>
    <member name="M:Microsoft.Build.Tasks.Deployment.Bootstrapper.BuildSettings.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.Build.Tasks.Deployment.Bootstrapper.BuildSettings" /> class.</summary>
    </member>
    <member name="P:Microsoft.Build.Tasks.Deployment.Bootstrapper.BuildSettings.ApplicationFile">
      <summary>Gets or sets the file to be installed after the bootstrapper installs the required components.</summary>
      <returns>The name of the file to be installed after the required components are installed.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.Deployment.Bootstrapper.BuildSettings.ApplicationName">
      <summary>Gets or sets the name of the application to be installed after the bootstrapper installs all required components.</summary>
      <returns>The name of the application to be installed after the required components are installed.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.Deployment.Bootstrapper.BuildSettings.ApplicationRequiresElevation">
      <summary>Gets or sets a value indicating whether a component runs with elevated permissions when it is installed on a target computer.</summary>
      <returns>true if the installed component runs with elevated permissions; otherwise false.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.Deployment.Bootstrapper.BuildSettings.ApplicationUrl">
      <summary>Gets or sets the expected source location when the bootstrapper is published to a Web site.</summary>
      <returns>A URL that represents the expected source location when the bootstrapper is published to a Web site.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.Deployment.Bootstrapper.BuildSettings.ComponentsLocation">
      <summary>Gets or sets the installation location for bootstrapper components.</summary>
      <returns>The <see cref="T:Microsoft.Build.Tasks.Deployment.Bootstrapper.ComponentsLocation" /> installation location for bootstrapper components.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.Deployment.Bootstrapper.BuildSettings.ComponentsUrl">
      <summary>Gets or sets the location to which the bootstrapper will copy components if <see cref="P:Microsoft.Build.Tasks.Deployment.Bootstrapper.BuildSettings.ComponentsLocation" /> is set to <see cref="F:Microsoft.Build.Tasks.Deployment.Bootstrapper.ComponentsLocation.Absolute" />.</summary>
      <returns>The location to which the bootstrapper will copy components if <see cref="P:Microsoft.Build.Tasks.Deployment.Bootstrapper.BuildSettings.ComponentsLocation" /> is set to <see cref="F:Microsoft.Build.Tasks.Deployment.Bootstrapper.ComponentsLocation.Absolute" />.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.Deployment.Bootstrapper.BuildSettings.CopyComponents">
      <summary>Gets or sets a value indicating whether the bootstrapper components will be copied to the build output directory.</summary>
      <returns>true if the bootstrapper components will be copied to the build output directory; otherwise false.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.Deployment.Bootstrapper.BuildSettings.FallbackLCID">
      <summary>Gets or sets the culture identifier to use if the LCID identifier is not available.</summary>
      <returns>An integer value that represents the culture identifier to use if the LCID identifier is not available.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.Deployment.Bootstrapper.BuildSettings.LCID">
      <summary>Gets or sets the culture identifier specifying the culture for which the bootstrapper is built.</summary>
      <returns>An integer value that represents the culture identifier specifying the culture for which the bootstrapper is built.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.Deployment.Bootstrapper.BuildSettings.OutputPath">
      <summary>Gets or sets the file location to which to copy output files.</summary>
      <returns>A string representing the file location to which to copy output files.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.Deployment.Bootstrapper.BuildSettings.ProductBuilders">
      <summary>Gets the product builders to use for generating the bootstrapper.</summary>
      <returns>A collection of product builders (<see cref="T:Microsoft.Build.Tasks.Deployment.Bootstrapper.ProductBuilderCollection" />) to use for generating the bootstrapper.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.Deployment.Bootstrapper.BuildSettings.SupportUrl">
      <summary>Gets or sets the URL for the Web site that contains support information for the bootstrapper.</summary>
      <returns>The URL for the Web site that contains support information for the bootstrapper.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.Deployment.Bootstrapper.BuildSettings.Validate">
      <summary>Gets or sets a value indicating whether the bootstrapper performs XML validation on the component manifests.</summary>
      <returns>true if the bootstrapper performs XML validation on the component manifests; otherwise false.</returns>
    </member>
    <member name="T:Microsoft.Build.Tasks.Deployment.Bootstrapper.ComponentsLocation">
      <summary>Specifies the way that required components will be published.</summary>
    </member>
    <member name="F:Microsoft.Build.Tasks.Deployment.Bootstrapper.ComponentsLocation.HomeSite">
      <summary>Specifies that products be found according to the redistributable vendor's designated URL.</summary>
    </member>
    <member name="F:Microsoft.Build.Tasks.Deployment.Bootstrapper.ComponentsLocation.Relative">
      <summary>Specifies that products be located relative to the generated bootstrapper.</summary>
    </member>
    <member name="F:Microsoft.Build.Tasks.Deployment.Bootstrapper.ComponentsLocation.Absolute">
      <summary>Specifies that products be located at a specific location.</summary>
    </member>
    <member name="T:Microsoft.Build.Tasks.Deployment.Bootstrapper.IBootstrapperBuilder">
      <summary>Exposes functionality that you must have to create a bootstrapper.</summary>
    </member>
    <member name="M:Microsoft.Build.Tasks.Deployment.Bootstrapper.IBootstrapperBuilder.Build(Microsoft.Build.Tasks.Deployment.Bootstrapper.BuildSettings)">
      <summary>Generates a bootstrapper based on the specified settings.</summary>
      <returns>A <see cref="T:Microsoft.Build.Tasks.Deployment.Bootstrapper.BuildResults" /> object that represents the results of the bootstrapper generation.</returns>
      <param name="settings">The properties used to create the bootstrapper.</param>
    </member>
    <member name="P:Microsoft.Build.Tasks.Deployment.Bootstrapper.IBootstrapperBuilder.Path">
      <summary>Gets or sets the location of the required bootstrapper files.</summary>
      <returns>A string value that represents the location of the required bootstrapper files.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.Deployment.Bootstrapper.IBootstrapperBuilder.Products">
      <summary>Gets all products available at the current bootstrapper path.</summary>
      <returns>A <see cref="T:Microsoft.Build.Tasks.Deployment.Bootstrapper.ProductCollection" /> object that represents all products available at the current bootstrapper <see cref="P:Microsoft.Build.Tasks.Deployment.Bootstrapper.IBootstrapperBuilder.Path" />.</returns>
    </member>
    <member name="T:Microsoft.Build.Tasks.Deployment.Bootstrapper.IBuildMessage">
      <summary>Represents messages that occur during the <see cref="T:Microsoft.Build.Tasks.Deployment.Bootstrapper.BootstrapperBuilder" /> build operation.</summary>
    </member>
    <member name="P:Microsoft.Build.Tasks.Deployment.Bootstrapper.IBuildMessage.HelpId">
      <summary>Gets the MSBuild Help ID for the host IDE.</summary>
      <returns>An integer representing the MSBuild Help ID for the host IDE.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.Deployment.Bootstrapper.IBuildMessage.HelpKeyword">
      <summary>Gets the MSBuild F1 Help keyword for the host IDE.</summary>
      <returns>The MSBuild F1 Help keyword for the host IDE.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.Deployment.Bootstrapper.IBuildMessage.Message">
      <summary>Gets a description of the details of the build message.</summary>
      <returns>A text string that describes the details of the build message.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.Deployment.Bootstrapper.IBuildMessage.Severity">
      <summary>Gets the severity of the build message.</summary>
      <returns>A <see cref="T:Microsoft.Build.Tasks.Deployment.Bootstrapper.BuildMessageSeverity" /> object that represents the severity of the build message.</returns>
    </member>
    <member name="T:Microsoft.Build.Tasks.Deployment.Bootstrapper.IBuildResults">
      <summary>Represents the results of the <see cref="T:Microsoft.Build.Tasks.Deployment.Bootstrapper.BootstrapperBuilder" /> build operation.</summary>
    </member>
    <member name="P:Microsoft.Build.Tasks.Deployment.Bootstrapper.IBuildResults.ComponentFiles">
      <summary>Gets the file paths to the copied component installer files.</summary>
      <returns>Returns an array of strings containing the file paths to the copied component installer files.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.Deployment.Bootstrapper.IBuildResults.KeyFile">
      <summary>Gets the file path to the generated primary bootstrapper file.</summary>
      <returns>Returns a string representing the file path to the generated primary bootstrapper file.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.Deployment.Bootstrapper.IBuildResults.Messages">
      <summary>Gets the build messages generated from a bootstrapper build.</summary>
      <returns>Returns an array of <see cref="T:Microsoft.Build.Tasks.Deployment.Bootstrapper.BuildMessage" /> objects representing the build messages generated from a bootstrapper build.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.Deployment.Bootstrapper.IBuildResults.Succeeded">
      <summary>Indicates whether the bootstrapper build was successful.</summary>
      <returns>Returns a Boolean value indicating whether the bootstrapper build was successful. Returns true if the bootstrapper build was successful, false if not successful.</returns>
    </member>
    <member name="T:Microsoft.Build.Tasks.Deployment.Bootstrapper.IBuildSettings">
      <summary>Defines the settings for the bootstrapper build operation.</summary>
    </member>
    <member name="P:Microsoft.Build.Tasks.Deployment.Bootstrapper.IBuildSettings.ApplicationFile">
      <summary>Gets or sets the file to be installed after the bootstrapper installs the required components.</summary>
      <returns>The name of the file to be installed after the bootstrapper installs the required components.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.Deployment.Bootstrapper.IBuildSettings.ApplicationName">
      <summary>Gets or sets the name of the application to be installed after the bootstrapper installs all required components.</summary>
      <returns>The name of the application to be installed after the bootstrapper installs all required components.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.Deployment.Bootstrapper.IBuildSettings.ApplicationRequiresElevation">
      <summary>Gets or sets a value indicating whether a component runs with elevated permissions when it is installed on a target computer.</summary>
      <returns>true if the installed component runs with elevated permissions; otherwise false.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.Deployment.Bootstrapper.IBuildSettings.ApplicationUrl">
      <summary>Gets or sets the expected source location when the bootstrapper is published to a Web site.</summary>
      <returns>The expected source location when the bootstrapper is published to a Web site.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.Deployment.Bootstrapper.IBuildSettings.ComponentsLocation">
      <summary>Gets or sets the installation location for bootstrapper components.</summary>
      <returns>The installation location (<see cref="T:Microsoft.Build.Tasks.Deployment.Bootstrapper.ComponentsLocation" />) for bootstrapper components.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.Deployment.Bootstrapper.IBuildSettings.ComponentsUrl">
      <summary>Gets or sets the location to which the bootstrapper will copy components if <see cref="P:Microsoft.Build.Tasks.Deployment.Bootstrapper.BuildSettings.ComponentsLocation" /> is set to <see cref="F:Microsoft.Build.Tasks.Deployment.Bootstrapper.ComponentsLocation.Absolute" />.</summary>
      <returns>The location to which the bootstrapper will copy components if <see cref="P:Microsoft.Build.Tasks.Deployment.Bootstrapper.BuildSettings.ComponentsLocation" /> is set to <see cref="F:Microsoft.Build.Tasks.Deployment.Bootstrapper.ComponentsLocation.Absolute" />.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.Deployment.Bootstrapper.IBuildSettings.CopyComponents">
      <summary>Gets or sets a value indicating whether the bootstrapper components will be copied to the build output directory.</summary>
      <returns>true if the bootstrapper components will be copied to the build output directory; otherwise false.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.Deployment.Bootstrapper.IBuildSettings.FallbackLCID">
      <summary>Gets or sets the culture identifier to use if the LCID identifier is not available.</summary>
      <returns>An integer value that represents the culture identifier to use if the LCID identifier is not available.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.Deployment.Bootstrapper.IBuildSettings.LCID">
      <summary>Gets or sets the culture identifier specifying the culture for which the bootstrapper is built.</summary>
      <returns>An integer value that represents the culture identifier specifying the culture for which the bootstrapper is built.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.Deployment.Bootstrapper.IBuildSettings.OutputPath">
      <summary>Gets or sets the file location to which to copy output files.</summary>
      <returns>A string representing the file location to which to copy output files.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.Deployment.Bootstrapper.IBuildSettings.ProductBuilders">
      <summary>Gets the product builders to use for generating the bootstrapper.</summary>
      <returns>The product builders to use for generating the bootstrapper.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.Deployment.Bootstrapper.IBuildSettings.SupportUrl">
      <summary>Gets or sets the URL for the Web site that contains support information for the bootstrapper.</summary>
      <returns>The URL for the Web site that contains support information for the bootstrapper.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.Deployment.Bootstrapper.IBuildSettings.Validate">
      <summary>Gets or sets a value indicating whether the bootstrapper performs XML validation on the component manifests.</summary>
      <returns>true if the bootstrapper performs XML validation on the component manifests; otherwise false.</returns>
    </member>
    <member name="T:Microsoft.Build.Tasks.Deployment.Bootstrapper.IProduct">
      <summary>Represents a product that the <see cref="T:Microsoft.Build.Tasks.Deployment.Bootstrapper.BootstrapperBuilder" /> finds in the <see cref="P:Microsoft.Build.Tasks.Deployment.Bootstrapper.BootstrapperBuilder.Path" /> property.</summary>
    </member>
    <member name="P:Microsoft.Build.Tasks.Deployment.Bootstrapper.IProduct.Includes">
      <summary>Gets all products that this product installs.</summary>
      <returns>A <see cref="T:Microsoft.Build.Tasks.Deployment.Bootstrapper.ProductCollection" /> object that contains all products that this product installs.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.Deployment.Bootstrapper.IProduct.Name">
      <summary>Gets a human-readable name for this product.</summary>
      <returns>A string that contains a human-readable name for this product.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.Deployment.Bootstrapper.IProduct.ProductBuilder">
      <summary>Gets the <see cref="T:Microsoft.Build.Tasks.Deployment.Bootstrapper.ProductBuilder" /> representation of this product.</summary>
      <returns>Returns a <see cref="T:Microsoft.Build.Tasks.Deployment.Bootstrapper.ProductBuilder" /> object that represents this product.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.Deployment.Bootstrapper.IProduct.ProductCode">
      <summary>Gets the unique product identifier of this product.</summary>
      <returns>Returns a string that specifies the unique product identifier of this product.</returns>
    </member>
    <member name="T:Microsoft.Build.Tasks.Deployment.Bootstrapper.IProductBuilder">
      <summary>Represents a buildable version of a <see cref="T:Microsoft.Build.Tasks.Deployment.Bootstrapper.Product" />.</summary>
    </member>
    <member name="P:Microsoft.Build.Tasks.Deployment.Bootstrapper.IProductBuilder.Product">
      <summary>Gets the <see cref="T:Microsoft.Build.Tasks.Deployment.Bootstrapper.Product" /> object that corresponds to this <see cref="T:Microsoft.Build.Tasks.Deployment.Bootstrapper.ProductBuilder" /> object.</summary>
      <returns>The <see cref="T:Microsoft.Build.Tasks.Deployment.Bootstrapper.Product" /> object that corresponds to this <see cref="T:Microsoft.Build.Tasks.Deployment.Bootstrapper.ProductBuilder" /> object.</returns>
    </member>
    <member name="T:Microsoft.Build.Tasks.Deployment.Bootstrapper.IProductBuilderCollection">
      <summary>Contains a collection of <see cref="T:Microsoft.Build.Tasks.Deployment.Bootstrapper.ProductBuilder" /> objects.</summary>
    </member>
    <member name="M:Microsoft.Build.Tasks.Deployment.Bootstrapper.IProductBuilderCollection.Add(Microsoft.Build.Tasks.Deployment.Bootstrapper.ProductBuilder)">
      <summary>Adds a <see cref="T:Microsoft.Build.Tasks.Deployment.Bootstrapper.ProductBuilder" /> object to the product builder collection.</summary>
      <param name="builder">The <see cref="T:Microsoft.Build.Tasks.Deployment.Bootstrapper.ProductBuilder" /> object to add to the collection.</param>
    </member>
    <member name="T:Microsoft.Build.Tasks.Deployment.Bootstrapper.IProductCollection">
      <summary>Represents a collection of <see cref="T:Microsoft.Build.Tasks.Deployment.Bootstrapper.Product" /> objects.</summary>
    </member>
    <member name="P:Microsoft.Build.Tasks.Deployment.Bootstrapper.IProductCollection.Count">
      <summary>Gets the number of elements that are contained in the product collection.</summary>
      <returns>The number of elements that are contained in the product collection.</returns>
    </member>
    <member name="M:Microsoft.Build.Tasks.Deployment.Bootstrapper.IProductCollection.Item(System.Int32)">
      <summary>Retrieves the product at the specified index.</summary>
      <returns>The <see cref="T:Microsoft.Build.Tasks.Deployment.Bootstrapper.Product" /> object at the specified index.</returns>
      <param name="index">The zero-based index of the element to get.</param>
    </member>
    <member name="M:Microsoft.Build.Tasks.Deployment.Bootstrapper.IProductCollection.Product(System.String)">
      <summary>Retrieves the product with the specified product code.</summary>
      <returns>The <see cref="T:Microsoft.Build.Tasks.Deployment.Bootstrapper.Product" /> object that has the specified product code; null if the specified product code is not found.</returns>
      <param name="productCode">The unique identifier of the product to get.</param>
    </member>
    <member name="T:Microsoft.Build.Tasks.Deployment.Bootstrapper.Product">
      <summary>Represents a product that the <see cref="T:Microsoft.Build.Tasks.Deployment.Bootstrapper.BootstrapperBuilder" /> finds in the <see cref="P:Microsoft.Build.Tasks.Deployment.Bootstrapper.BootstrapperBuilder.Path" /> property.</summary>
    </member>
    <member name="M:Microsoft.Build.Tasks.Deployment.Bootstrapper.Product.#ctor">
      <summary>Initializes a new instance of the Product class.</summary>
    </member>
    <member name="P:Microsoft.Build.Tasks.Deployment.Bootstrapper.Product.Includes">
      <summary>Gets all products that this product installs.</summary>
      <returns>A <see cref="T:Microsoft.Build.Tasks.Deployment.Bootstrapper.ProductCollection" /> object that represents all products that this product installs.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.Deployment.Bootstrapper.Product.Name">
      <summary>Gets a human-readable name for this product.</summary>
      <returns>A string that represents a human-readable name for this product.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.Deployment.Bootstrapper.Product.ProductBuilder">
      <summary>Gets a buildable version of the product.</summary>
      <returns>A <see cref="T:Microsoft.Build.Tasks.Deployment.Bootstrapper.ProductBuilder" /> object that represents a buildable version of the product.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.Deployment.Bootstrapper.Product.ProductCode">
      <summary>Gets a string that indicates the unique product identifier of this product.</summary>
      <returns>A string that indicates the unique product identifier of this product.</returns>
    </member>
    <member name="T:Microsoft.Build.Tasks.Deployment.Bootstrapper.ProductBuilder">
      <summary>Represents a buildable version of a <see cref="T:Microsoft.Build.Tasks.Deployment.Bootstrapper.Product" />.</summary>
    </member>
    <member name="P:Microsoft.Build.Tasks.Deployment.Bootstrapper.ProductBuilder.Product">
      <summary>Gets the <see cref="T:Microsoft.Build.Tasks.Deployment.Bootstrapper.Product" /> object that corresponds to this <see cref="T:Microsoft.Build.Tasks.Deployment.Bootstrapper.ProductBuilder" /> object.</summary>
      <returns>Returns the <see cref="T:Microsoft.Build.Tasks.Deployment.Bootstrapper.Product" /> object that corresponds to this <see cref="T:Microsoft.Build.Tasks.Deployment.Bootstrapper.ProductBuilder" /> object.</returns>
    </member>
    <member name="T:Microsoft.Build.Tasks.Deployment.Bootstrapper.ProductBuilderCollection">
      <summary>Contains a collection of <see cref="T:Microsoft.Build.Tasks.Deployment.Bootstrapper.ProductBuilder" /> objects.</summary>
    </member>
    <member name="M:Microsoft.Build.Tasks.Deployment.Bootstrapper.ProductBuilderCollection.Add(Microsoft.Build.Tasks.Deployment.Bootstrapper.ProductBuilder)">
      <summary>Adds a <see cref="T:Microsoft.Build.Tasks.Deployment.Bootstrapper.ProductBuilder" /> object to the product builder collection.</summary>
      <param name="builder">The <see cref="T:Microsoft.Build.Tasks.Deployment.Bootstrapper.ProductBuilder" /> object to add to the collection.</param>
    </member>
    <member name="M:Microsoft.Build.Tasks.Deployment.Bootstrapper.ProductBuilderCollection.GetEnumerator">
      <summary>Returns an enumerator that can iterate through the product builder collection.</summary>
      <returns>An enumerator that can iterate through the product builder collection.</returns>
    </member>
    <member name="T:Microsoft.Build.Tasks.Deployment.Bootstrapper.ProductCollection">
      <summary>This interface represents a collection of <see cref="T:Microsoft.Build.Tasks.Deployment.Bootstrapper.Product" /> objects. The collection is a closed set generated by the <see cref="T:Microsoft.Build.Tasks.Deployment.Bootstrapper.BootstrapperBuilder" /> based on the <see cref="P:Microsoft.Build.Tasks.Deployment.Bootstrapper.BootstrapperBuilder.Path" /> property. The client cannot add or remove items from this collection.</summary>
    </member>
    <member name="P:Microsoft.Build.Tasks.Deployment.Bootstrapper.ProductCollection.Count">
      <summary>Gets the number of elements contained in the product collection.</summary>
      <returns>An integer indicating the number of elements contained in the product collection.</returns>
    </member>
    <member name="M:Microsoft.Build.Tasks.Deployment.Bootstrapper.ProductCollection.GetEnumerator">
      <summary>Returns an enumerator that can iterate through the product collection.</summary>
      <returns>An enumerator that can iterate through the product collection.</returns>
    </member>
    <member name="M:Microsoft.Build.Tasks.Deployment.Bootstrapper.ProductCollection.Item(System.Int32)">
      <summary>Retrieves the product at the specified index.</summary>
      <returns>A <see cref="T:Microsoft.Build.Tasks.Deployment.Bootstrapper.Product" /> object that represents the product at the specified index.</returns>
      <param name="index">The zero-based index of the element to get.</param>
    </member>
    <member name="M:Microsoft.Build.Tasks.Deployment.Bootstrapper.ProductCollection.Product(System.String)">
      <summary>Retrieves the product with the specified product code.</summary>
      <returns>The <see cref="T:Microsoft.Build.Tasks.Deployment.Bootstrapper.Product" /> object with the specified product code. Returns null if the specified product code is not found.</returns>
      <param name="productCode">The unique identifier of the product to get.</param>
    </member>
    <member name="T:Microsoft.Build.Tasks.Deployment.ManifestUtilities.ApplicationIdentity">
      <summary>Provides a unique identifier for a ClickOnce application.</summary>
    </member>
    <member name="M:Microsoft.Build.Tasks.Deployment.ManifestUtilities.ApplicationIdentity.#ctor(System.String,Microsoft.Build.Tasks.Deployment.ManifestUtilities.AssemblyIdentity,Microsoft.Build.Tasks.Deployment.ManifestUtilities.AssemblyIdentity)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.Build.Tasks.Deployment.ManifestUtilities.ApplicationIdentity" /> class.</summary>
      <param name="url">The deployment provider URL for the ClickOnce deployment manifest.</param>
      <param name="deployManifestIdentity">The assembly identity of the ClickOnce deployment manifest.</param>
      <param name="applicationManifestIdentity">The assembly identity of the ClickOnce application manifest.</param>
    </member>
    <member name="M:Microsoft.Build.Tasks.Deployment.ManifestUtilities.ApplicationIdentity.#ctor(System.String,System.String,System.String)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.Build.Tasks.Deployment.ManifestUtilities.ApplicationIdentity" /> class.</summary>
      <param name="url">The deployment provider URL for the ClickOnce deployment manifest.</param>
      <param name="deployManifestPath">The path to ClickOnce deployment manifest. The assembly identity will be obtained from the specified file.</param>
      <param name="applicationManifestPath">The path to ClickOnce application manifest. The assembly identity will be obtained from the specified file.</param>
    </member>
    <member name="M:Microsoft.Build.Tasks.Deployment.ManifestUtilities.ApplicationIdentity.ToString">
      <summary>Returns the full ClickOnce application identity.</summary>
      <returns>A string containing the ClickOnce application identity.</returns>
    </member>
    <member name="T:Microsoft.Build.Tasks.Deployment.ManifestUtilities.ApplicationManifest">
      <summary>Describes a ClickOnce or native Win32 application manifest.</summary>
    </member>
    <member name="M:Microsoft.Build.Tasks.Deployment.ManifestUtilities.ApplicationManifest.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.Build.Tasks.Deployment.ManifestUtilities.ApplicationManifest" /> class.</summary>
    </member>
    <member name="M:Microsoft.Build.Tasks.Deployment.ManifestUtilities.ApplicationManifest.#ctor(System.String)">
      <param name="targetFrameworkVersion">The version of the target framwork.</param>
    </member>
    <member name="P:Microsoft.Build.Tasks.Deployment.ManifestUtilities.ApplicationManifest.ConfigFile">
      <summary>Gets or sets the application configuration file.</summary>
      <returns>A string that represents the name of the application configuration file.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.Deployment.ManifestUtilities.ApplicationManifest.EntryPoint">
      <summary>Gets or sets an assembly reference that represents the entry point of the application.</summary>
      <returns>An <see cref="T:Microsoft.Build.Tasks.Deployment.ManifestUtilities.AssemblyReference" /> object that represents the entry point of the application.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.Deployment.ManifestUtilities.ApplicationManifest.ErrorReportUrl">
      <summary>Gets or sets the URL of the error report.</summary>
      <returns>A string that contains the URL of the error report.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.Deployment.ManifestUtilities.ApplicationManifest.FileAssociations">
      <summary>Gets or sets the file associations that are defined in the manifest.</summary>
      <returns>A string that contains the file associations.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.Deployment.ManifestUtilities.ApplicationManifest.HostInBrowser">
      <summary>Gets or sets a value that specifies whether the application is hosted in a browser (as WPF Web Browser Applications are).</summary>
      <returns>A Boolean value that indicates whether the application being deployed will be hosted in a browser (True), or not (False). True applies only to WPF Web Browser Applications.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.Deployment.ManifestUtilities.ApplicationManifest.IconFile">
      <summary>Gets or sets the program icon file.</summary>
      <returns>A string that represents the name of the icon file.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.Deployment.ManifestUtilities.ApplicationManifest.IsClickOnceManifest">
      <summary>Gets or sets a value that specifies whether the manifest is a ClickOnce application manifest or a native Win32 application manifest.</summary>
      <returns>A Boolean value that indicates whether the manifest is a ClickOnce application manifest (True) or a native Win32 manifest (False).</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.Deployment.ManifestUtilities.ApplicationManifest.MaxTargetPath">
      <summary>Gets or sets a value that specifies the maximum allowed length of a file path in a ClickOnce application deployment. If this value is specified, the length of each file path in the application is checked against this limit. Any items that exceed the limit cause a warning message. If this input is not specified or is zero, no checking is performed. For a native Win32 manifest, this input is ignored.</summary>
      <returns>An integer that indicates the maximum allowed length of a file path in a ClickOnce application deployment.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.Deployment.ManifestUtilities.ApplicationManifest.OSDescription">
      <summary>Gets or sets a value that specifies a textual description for the operating system dependency.</summary>
      <returns>A string that indicates the operating system dependency.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.Deployment.ManifestUtilities.ApplicationManifest.OSSupportUrl">
      <summary>Gets or sets a value that specifies a support URL for the operating system dependency.</summary>
      <returns>A string indicating the support URL for the operating system dependency.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.Deployment.ManifestUtilities.ApplicationManifest.OSVersion">
      <summary>Gets or sets a value that specifies the minimum required operating system version required by the application.</summary>
      <returns>A string that indicates the minimum required operating system version required by the application.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.Deployment.ManifestUtilities.ApplicationManifest.Product">
      <summary>Gets or sets a value that specifies the ProductName property in the project file.</summary>
      <returns>A string value that corresponds to the ProductName property in the project file.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.Deployment.ManifestUtilities.ApplicationManifest.Publisher">
      <summary>Gets or sets a value that specifies the PublisherName property in the project file.</summary>
      <returns>A string value that corresponds to the PublisherName property in the project file.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.Deployment.ManifestUtilities.ApplicationManifest.SuiteName">
      <summary>Gets or sets the suite name that is defined in the manifest.</summary>
      <returns>A string that contains the suite name.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.Deployment.ManifestUtilities.ApplicationManifest.SupportUrl">
      <summary>Gets or sets a value that specifies the SupportUrl property in the project file.</summary>
      <returns>A string value that corresponds to the SupportUrl property in the project file.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.Deployment.ManifestUtilities.ApplicationManifest.TargetFrameworkVersion"></member>
    <member name="P:Microsoft.Build.Tasks.Deployment.ManifestUtilities.ApplicationManifest.TrustInfo">
      <summary>Gets or sets a value that specifies a trust object that defines the application security.</summary>
      <returns>A <see cref="T:Microsoft.Build.Tasks.Deployment.ManifestUtilities.TrustInfo" /> object that defines the application security.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.Deployment.ManifestUtilities.ApplicationManifest.UseApplicationTrust">
      <summary>Gets or sets a value that specifies whether the <see cref="P:Microsoft.Build.Tasks.Deployment.ManifestUtilities.ApplicationManifest.Product" />, <see cref="P:Microsoft.Build.Tasks.Deployment.ManifestUtilities.ApplicationManifest.Publisher" />, and <see cref="P:Microsoft.Build.Tasks.Deployment.ManifestUtilities.ApplicationManifest.SupportUrl" /> properties are written to the application manifest.</summary>
      <returns>A Boolean value that indicates whether the <see cref="P:Microsoft.Build.Tasks.Deployment.ManifestUtilities.ApplicationManifest.Publisher" />, <see cref="P:Microsoft.Build.Tasks.Deployment.ManifestUtilities.ApplicationManifest.Product" />, and <see cref="P:Microsoft.Build.Tasks.Deployment.ManifestUtilities.ApplicationManifest.SupportUrl" /> properties are written to the application manifest. If the value is True, they are written to the application manifest. If the value is False, these properties are ignored.</returns>
    </member>
    <member name="M:Microsoft.Build.Tasks.Deployment.ManifestUtilities.ApplicationManifest.Validate">
      <summary>Performs various checks to verify the validity of the manifest. Any resulting errors or warnings are reported in the <see cref="T:Microsoft.Build.Tasks.Deployment.ManifestUtilities.OutputMessageCollection" /> object.</summary>
    </member>
    <member name="P:Microsoft.Build.Tasks.Deployment.ManifestUtilities.ApplicationManifest.XmlConfigFile">
      <summary>Gets or sets a property that is used to serialize the <see cref="P:Microsoft.Build.Tasks.Deployment.ManifestUtilities.ApplicationManifest.ConfigFile" /> property to an XML file.</summary>
      <returns>The value of the <see cref="P:Microsoft.Build.Tasks.Deployment.ManifestUtilities.ApplicationManifest.ConfigFile" /> property.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.Deployment.ManifestUtilities.ApplicationManifest.XmlEntryPointIdentity">
      <summary>Gets or sets a property that is used to serialize the entry point identity to an XML file.</summary>
      <returns>The entry point identity.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.Deployment.ManifestUtilities.ApplicationManifest.XmlEntryPointParameters">
      <summary>Gets or sets a property that is used to serialize the entry point parameters to an XML file.</summary>
      <returns>The entry point parameters.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.Deployment.ManifestUtilities.ApplicationManifest.XmlEntryPointPath">
      <summary>Gets or sets a property that specifies the entry point for executing the assembly and that is used to serialize the entry point to an XML file.</summary>
      <returns>The entry point for executing the assembly.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.Deployment.ManifestUtilities.ApplicationManifest.XmlErrorReportUrl">
      <summary>Gets or sets a property that is used to serialize the <see cref="P:Microsoft.Build.Tasks.Deployment.ManifestUtilities.ApplicationManifest.ErrorReportUrl" /> property to an XML file.</summary>
      <returns>The value of the <see cref="P:Microsoft.Build.Tasks.Deployment.ManifestUtilities.ApplicationManifest.ErrorReportUrl" /> property.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.Deployment.ManifestUtilities.ApplicationManifest.XmlFileAssociations">
      <summary>Gets or sets a property that is used to serialize the <see cref="P:Microsoft.Build.Tasks.Deployment.ManifestUtilities.ApplicationManifest.FileAssociations" /> property to an XML file.</summary>
      <returns>The value of the <see cref="P:Microsoft.Build.Tasks.Deployment.ManifestUtilities.ApplicationManifest.FileAssociations" /> property.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.Deployment.ManifestUtilities.ApplicationManifest.XmlHostInBrowser">
      <summary>Gets or sets a property that is used to serialize the <see cref="P:Microsoft.Build.Tasks.Deployment.ManifestUtilities.ApplicationManifest.HostInBrowser" /> property to an XML file.</summary>
      <returns>true or false. The value of the <see cref="P:Microsoft.Build.Tasks.Deployment.ManifestUtilities.ApplicationManifest.HostInBrowser" /> property.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.Deployment.ManifestUtilities.ApplicationManifest.XmlIconFile">
      <summary>Gets or sets a property that is used to serialize the <see cref="P:Microsoft.Build.Tasks.Deployment.ManifestUtilities.ApplicationManifest.IconFile" /> property to an XML file.</summary>
      <returns>The value of the <see cref="P:Microsoft.Build.Tasks.Deployment.ManifestUtilities.ApplicationManifest.IconFile" /> property.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.Deployment.ManifestUtilities.ApplicationManifest.XmlIsClickOnceManifest">
      <summary>Gets or sets a property that is used to serialize the <see cref="P:Microsoft.Build.Tasks.Deployment.ManifestUtilities.ApplicationManifest.IsClickOnceManifest" /> property to an XML file.</summary>
      <returns>true or false. The value of the <see cref="P:Microsoft.Build.Tasks.Deployment.ManifestUtilities.ApplicationManifest.IsClickOnceManifest" /> property.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.Deployment.ManifestUtilities.ApplicationManifest.XmlOSBuild">
      <summary>Gets or sets a property that is used to serialize the build version of the operating system to an XML file.</summary>
      <returns>The build version of the operating system.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.Deployment.ManifestUtilities.ApplicationManifest.XmlOSDescription">
      <summary>Gets or sets a property that is used to serialize the <see cref="P:Microsoft.Build.Tasks.Deployment.ManifestUtilities.ApplicationManifest.OSDescription" /> property to an XML file.</summary>
      <returns>The value of the <see cref="P:Microsoft.Build.Tasks.Deployment.ManifestUtilities.ApplicationManifest.OSDescription" /> property.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.Deployment.ManifestUtilities.ApplicationManifest.XmlOSMajor">
      <summary>Gets or sets a property that is used to serialize the major portion of the version number of the operating system to an XML file.</summary>
      <returns>The major portion of the version number of the operating system.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.Deployment.ManifestUtilities.ApplicationManifest.XmlOSMinor">
      <summary>Gets or sets a property that is used to serialize the minor portion of the version number of the operating system to an XML file.</summary>
      <returns>The minor portion of the version number of the operating system.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.Deployment.ManifestUtilities.ApplicationManifest.XmlOSRevision">
      <summary>Gets or sets a property that is used to serialize the revision portion of the version number of the operating system to an XML file.</summary>
      <returns>The revision portion of the version number of the operating system.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.Deployment.ManifestUtilities.ApplicationManifest.XmlOSSupportUrl">
      <summary>Gets or sets a property that is used to serialize the <see cref="P:Microsoft.Build.Tasks.Deployment.ManifestUtilities.ApplicationManifest.OSSupportUrl" /> property to an XML file.</summary>
      <returns>The value of the <see cref="P:Microsoft.Build.Tasks.Deployment.ManifestUtilities.ApplicationManifest.OSSupportUrl" /> property.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.Deployment.ManifestUtilities.ApplicationManifest.XmlProduct">
      <summary>Gets or sets a property that is used to serialize the <see cref="P:Microsoft.Build.Tasks.Deployment.ManifestUtilities.ApplicationManifest.Product" /> property to an XML file.</summary>
      <returns>The value of the <see cref="P:Microsoft.Build.Tasks.Deployment.ManifestUtilities.ApplicationManifest.Product" /> property.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.Deployment.ManifestUtilities.ApplicationManifest.XmlPublisher">
      <summary>Gets or sets a property that is used to serialize the <see cref="P:Microsoft.Build.Tasks.Deployment.ManifestUtilities.ApplicationManifest.Publisher" /> property to an XML file.</summary>
      <returns>The value of the <see cref="P:Microsoft.Build.Tasks.Deployment.ManifestUtilities.ApplicationManifest.Publisher" /> property.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.Deployment.ManifestUtilities.ApplicationManifest.XmlSuiteName">
      <summary>Gets or sets a property that is used to serialize the <see cref="P:Microsoft.Build.Tasks.Deployment.ManifestUtilities.ApplicationManifest.SuiteName" /> property to an XML file.</summary>
      <returns>The value of the <see cref="P:Microsoft.Build.Tasks.Deployment.ManifestUtilities.ApplicationManifest.SuiteName" /> property.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.Deployment.ManifestUtilities.ApplicationManifest.XmlSupportUrl">
      <summary>Gets or sets a property that is used to serialize the <see cref="P:Microsoft.Build.Tasks.Deployment.ManifestUtilities.ApplicationManifest.SupportUrl" /> property to an XML file.</summary>
      <returns>The value of the <see cref="P:Microsoft.Build.Tasks.Deployment.ManifestUtilities.ApplicationManifest.SupportUrl" /> property.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.Deployment.ManifestUtilities.ApplicationManifest.XmlUseApplicationTrust">
      <summary>Gets or sets a property that is used to serialize the <see cref="P:Microsoft.Build.Tasks.Deployment.ManifestUtilities.ApplicationManifest.UseApplicationTrust" /> property to an XML file.</summary>
      <returns>The value of the <see cref="P:Microsoft.Build.Tasks.Deployment.ManifestUtilities.ApplicationManifest.UseApplicationTrust" /> property.</returns>
    </member>
    <member name="T:Microsoft.Build.Tasks.Deployment.ManifestUtilities.AssemblyIdentity">
      <summary>Specifies the identity of an assembly.</summary>
    </member>
    <member name="M:Microsoft.Build.Tasks.Deployment.ManifestUtilities.AssemblyIdentity.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.Build.Tasks.Deployment.ManifestUtilities.AssemblyIdentity" /> class.</summary>
    </member>
    <member name="M:Microsoft.Build.Tasks.Deployment.ManifestUtilities.AssemblyIdentity.#ctor(Microsoft.Build.Tasks.Deployment.ManifestUtilities.AssemblyIdentity)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.Build.Tasks.Deployment.ManifestUtilities.AssemblyIdentity" /> class.</summary>
      <param name="identity">Specifies another instance to duplicate.</param>
    </member>
    <member name="M:Microsoft.Build.Tasks.Deployment.ManifestUtilities.AssemblyIdentity.#ctor(System.String)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.Build.Tasks.Deployment.ManifestUtilities.AssemblyIdentity" /> class.</summary>
      <param name="name">Specifies the simple name of the assembly.</param>
    </member>
    <member name="M:Microsoft.Build.Tasks.Deployment.ManifestUtilities.AssemblyIdentity.#ctor(System.String,System.String)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.Build.Tasks.Deployment.ManifestUtilities.AssemblyIdentity" /> class.</summary>
      <param name="name">Specifies the simple name of the assembly.</param>
      <param name="version">Specifies the version of the assembly.</param>
    </member>
    <member name="M:Microsoft.Build.Tasks.Deployment.ManifestUtilities.AssemblyIdentity.#ctor(System.String,System.String,System.String,System.String)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.Build.Tasks.Deployment.ManifestUtilities.AssemblyIdentity" /> class.</summary>
      <param name="name">Specifies the simple name of the assembly.</param>
      <param name="version">Specifies the version of the assembly.</param>
      <param name="publicKeyToken">Specifies the public key token of the assembly, which is the last 8 bytes of the SHA-1 hash of the public key under which the assembly is signed.</param>
      <param name="culture">Specifies the culture of the assembly. A blank string indicates the invariant culture.</param>
    </member>
    <member name="M:Microsoft.Build.Tasks.Deployment.ManifestUtilities.AssemblyIdentity.#ctor(System.String,System.String,System.String,System.String,System.String)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.Build.Tasks.Deployment.ManifestUtilities.AssemblyIdentity" /> class.</summary>
      <param name="name">Specifies the simple name of the assembly.</param>
      <param name="version">Specifies the version of the assembly.</param>
      <param name="publicKeyToken">Specifies the public key token of the assembly, which is the last 8 bytes of the SHA-1 hash of the public key under which the assembly is signed.</param>
      <param name="culture">Specifies the culture of the assembly. A blank string indicates the invariant culture.</param>
      <param name="processorArchitecture">Specifies the processor architecture of the assembly. Valid values are msil, x86, ia64, and amd64.</param>
    </member>
    <member name="M:Microsoft.Build.Tasks.Deployment.ManifestUtilities.AssemblyIdentity.#ctor(System.String,System.String,System.String,System.String,System.String,System.String)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.Build.Tasks.Deployment.ManifestUtilities.AssemblyIdentity" /> class.</summary>
      <param name="name">Specifies the simple name of the assembly.</param>
      <param name="version">Specifies the version of the assembly.</param>
      <param name="publicKeyToken">Specifies the public key token of the assembly, which is the last 8 bytes of the SHA-1 hash of the public key under which the assembly is signed.</param>
      <param name="culture">Specifies the culture of the assembly. A blank string indicates the invariant culture.</param>
      <param name="processorArchitecture">Specifies the processor architecture of the assembly. Valid values are msil, x86, ia64, and amd64.</param>
      <param name="type">Specifies the type attribute of the assembly. Valid values are win32 or a blank string.</param>
    </member>
    <member name="P:Microsoft.Build.Tasks.Deployment.ManifestUtilities.AssemblyIdentity.Culture">
      <summary>Gets or sets the culture of the assembly.</summary>
      <returns>A string indicating the culture of the assembly. A blank string indicates the invariant culture.</returns>
    </member>
    <member name="M:Microsoft.Build.Tasks.Deployment.ManifestUtilities.AssemblyIdentity.FromAssemblyName(System.String)">
      <summary>Parses string to obtain an assembly identity. Returns null if identity could not be obtained.</summary>
      <returns>The resulting assembly identity.</returns>
      <param name="assemblyName">The full name of the assembly, also known as the display name.</param>
    </member>
    <member name="M:Microsoft.Build.Tasks.Deployment.ManifestUtilities.AssemblyIdentity.FromFile(System.String)">
      <summary>Obtains identity of the specified assembly. File can be a PE with an embedded xml manifest, a stand-alone xml manifest file, or a .NET assembly. Returns null if identity could not be obtained.</summary>
      <returns>The assembly identity of the specified file.</returns>
      <param name="path">The name of the file from which the identity is to be obtained.</param>
    </member>
    <member name="M:Microsoft.Build.Tasks.Deployment.ManifestUtilities.AssemblyIdentity.FromManagedAssembly(System.String)">
      <summary>Obtains identity of the specified .NET assembly. File must be a .NET assembly. Returns null if identity could not be obtained.</summary>
      <returns>The assembly identity of the specified file.</returns>
      <param name="path">The name of the file from which the identity is to be obtained.</param>
    </member>
    <member name="M:Microsoft.Build.Tasks.Deployment.ManifestUtilities.AssemblyIdentity.FromManifest(System.String)">
      <summary>Obtains identity of the specified manifest file. File must be a standalone XML manifest file. Returns null if identity could not be obtained.</summary>
      <returns>The assembly identity of the specified file.</returns>
      <param name="path">The name of the file from which the identity is to be obtained.</param>
    </member>
    <member name="M:Microsoft.Build.Tasks.Deployment.ManifestUtilities.AssemblyIdentity.FromNativeAssembly(System.String)">
      <summary>Obtains identity of the specified native assembly. File must be either a PE with an embedded XML manifest, or a stand-alone XML manifest file. Returns NULL if identity could not be obtained.</summary>
      <returns>The assembly identity of the specified file.</returns>
      <param name="path">The name of the file from which the identity is to be obtained.</param>
    </member>
    <member name="M:Microsoft.Build.Tasks.Deployment.ManifestUtilities.AssemblyIdentity.GetFullName(Microsoft.Build.Tasks.Deployment.ManifestUtilities.AssemblyIdentity.FullNameFlags)">
      <summary>Returns the full name of the assembly.</summary>
      <returns>A string representation of the full name.</returns>
      <param name="flags">Specifies which attributes to be included in the full name.</param>
    </member>
    <member name="P:Microsoft.Build.Tasks.Deployment.ManifestUtilities.AssemblyIdentity.IsFrameworkAssembly">
      <summary>Returns True if this assembly is part of the .NET Framework.</summary>
      <returns>A Boolean value indicating whether this assembly is part of the .NET Framework. True if this assembly is part of the .NET Framework; otherwise False.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.Deployment.ManifestUtilities.AssemblyIdentity.IsNeutralPlatform">
      <summary>Gets a value indicating whether the assembly identity represents a neutral platform assembly.</summary>
      <returns>A Boolean value indicating whether the assembly identity represents a neutral platform assembly. True if the assembly identity is a neutral platform assembly; otherwise False.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.Deployment.ManifestUtilities.AssemblyIdentity.IsStrongName">
      <summary>Gets a value indicating whether the assembly identity is a strong name.</summary>
      <returns>A Boolean value indicating whether the assembly identity is a strong name. True if the assembly identity is a strong name; otherwise False.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.Deployment.ManifestUtilities.AssemblyIdentity.Name">
      <summary>Gets or sets the simple name of the assembly.</summary>
      <returns>A string indicating the simple name of the assembly.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.Deployment.ManifestUtilities.AssemblyIdentity.ProcessorArchitecture">
      <summary>Gets or sets the processor architecture of the assembly.</summary>
      <returns>A string representing the processor architecture of the assembly.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.Deployment.ManifestUtilities.AssemblyIdentity.PublicKeyToken">
      <summary>Gets or sets the public key token of the assembly, which is the last 8 bytes of the SHA-1 hash of the public key under which the assembly is signed.</summary>
      <returns>A string indicating the public key token of the assembly.</returns>
    </member>
    <member name="M:Microsoft.Build.Tasks.Deployment.ManifestUtilities.AssemblyIdentity.ToString">
      <summary>Returns the full ClickOnce assembly identity.</summary>
    </member>
    <member name="P:Microsoft.Build.Tasks.Deployment.ManifestUtilities.AssemblyIdentity.Type">
      <summary>Gets or sets the type attribute of the assembly.</summary>
      <returns>A string indicating the type attribute of the assembly.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.Deployment.ManifestUtilities.AssemblyIdentity.Version">
      <summary>Gets or sets the version of the assembly.</summary>
      <returns>A string indicating the assembly version.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.Deployment.ManifestUtilities.AssemblyIdentity.XmlCulture">
      <summary>Get or sets a property that is used to serialize the <see cref="P:Microsoft.Build.Tasks.Deployment.ManifestUtilities.AssemblyIdentity.Culture" /> property to an XML file.</summary>
    </member>
    <member name="P:Microsoft.Build.Tasks.Deployment.ManifestUtilities.AssemblyIdentity.XmlName">
      <summary>Get or sets a property that is used to serialize the <see cref="P:Microsoft.Build.Tasks.Deployment.ManifestUtilities.AssemblyIdentity.Name" /> property to an XML file.</summary>
    </member>
    <member name="P:Microsoft.Build.Tasks.Deployment.ManifestUtilities.AssemblyIdentity.XmlProcessorArchitecture">
      <summary>Get or sets a property that is used to serialize the <see cref="P:Microsoft.Build.Tasks.Deployment.ManifestUtilities.AssemblyIdentity.ProcessorArchitecture" /> property to an XML file.</summary>
    </member>
    <member name="P:Microsoft.Build.Tasks.Deployment.ManifestUtilities.AssemblyIdentity.XmlPublicKeyToken">
      <summary>Get or sets a property that is used to serialize the <see cref="P:Microsoft.Build.Tasks.Deployment.ManifestUtilities.AssemblyIdentity.PublicKeyToken" /> property to an XML file.</summary>
    </member>
    <member name="P:Microsoft.Build.Tasks.Deployment.ManifestUtilities.AssemblyIdentity.XmlType">
      <summary>Get or sets a property that is used to serialize the <see cref="P:Microsoft.Build.Tasks.Deployment.ManifestUtilities.AssemblyIdentity.Type" /> property to an XML file.</summary>
    </member>
    <member name="P:Microsoft.Build.Tasks.Deployment.ManifestUtilities.AssemblyIdentity.XmlVersion">
      <summary>Get or sets a property that is used to serialize the <see cref="P:Microsoft.Build.Tasks.Deployment.ManifestUtilities.AssemblyIdentity.Version" /> property to an XML file.</summary>
    </member>
    <member name="T:Microsoft.Build.Tasks.Deployment.ManifestUtilities.AssemblyIdentity.FullNameFlags">
      <summary>This class represents the attributes that the <see cref="M:Microsoft.Build.Tasks.Deployment.ManifestUtilities.AssemblyIdentity.GetFullName(Microsoft.Build.Tasks.Deployment.ManifestUtilities.AssemblyIdentity.FullNameFlags)" /> function returns.</summary>
    </member>
    <member name="F:Microsoft.Build.Tasks.Deployment.ManifestUtilities.AssemblyIdentity.FullNameFlags.Default">
      <summary>Include the Name, Version, Culture, and PublicKeyToken attributes.</summary>
    </member>
    <member name="F:Microsoft.Build.Tasks.Deployment.ManifestUtilities.AssemblyIdentity.FullNameFlags.ProcessorArchitecture">
      <summary>Include the Name, Version, Culture, PublicKeyToken, and ProcessorArchitecture attributes.</summary>
    </member>
    <member name="F:Microsoft.Build.Tasks.Deployment.ManifestUtilities.AssemblyIdentity.FullNameFlags.Type">
      <summary>Include the Name, Version, Culture, PublicKeyToken, and Type attributes.</summary>
    </member>
    <member name="F:Microsoft.Build.Tasks.Deployment.ManifestUtilities.AssemblyIdentity.FullNameFlags.All">
      <summary>Include all attributes.</summary>
    </member>
    <member name="T:Microsoft.Build.Tasks.Deployment.ManifestUtilities.AssemblyManifest">
      <summary>Describes a Win32 assembly manifest.</summary>
    </member>
    <member name="M:Microsoft.Build.Tasks.Deployment.ManifestUtilities.AssemblyManifest.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.Build.Tasks.Deployment.ManifestUtilities.AssemblyManifest" /> class.</summary>
    </member>
    <member name="P:Microsoft.Build.Tasks.Deployment.ManifestUtilities.AssemblyManifest.ExternalProxyStubs">
      <summary>Gets the set of external proxy stubs referenced by the manifest for isolated applications and Reg-Free COM.</summary>
      <returns>Returns the set of external proxy stubs referenced by the manifest for isolated applications and Reg-Free COM.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.Deployment.ManifestUtilities.AssemblyManifest.XmlExternalProxyStubs">
      <summary>Gets or sets the set of external proxy stubs referenced by the manifest for isolated applications and Reg-Free COM in XML format.</summary>
      <returns>Returns the set of external proxy stubs referenced by the manifest for isolated applications and Reg-Free COM in XML format.</returns>
    </member>
    <member name="T:Microsoft.Build.Tasks.Deployment.ManifestUtilities.AssemblyReference">
      <summary>Describes a manifest assembly reference.</summary>
    </member>
    <member name="M:Microsoft.Build.Tasks.Deployment.ManifestUtilities.AssemblyReference.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.Build.Tasks.Deployment.ManifestUtilities.AssemblyReference" /> class.</summary>
    </member>
    <member name="M:Microsoft.Build.Tasks.Deployment.ManifestUtilities.AssemblyReference.#ctor(System.String)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.Build.Tasks.Deployment.ManifestUtilities.AssemblyReference" /> class.</summary>
      <param name="path">The specified source path of the file.</param>
    </member>
    <member name="P:Microsoft.Build.Tasks.Deployment.ManifestUtilities.AssemblyReference.AssemblyIdentity">
      <summary>Specifies the identity of the assembly reference.</summary>
      <returns>An <see cref="T:Microsoft.Build.Tasks.Deployment.ManifestUtilities.AssemblyIdentity" /> object representing the identity of the assembly reference.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.Deployment.ManifestUtilities.AssemblyReference.IsPrerequisite">
      <summary>Specifies whether the assembly reference is a prerequisite or not.</summary>
      <returns>A Boolean value indicating whether the assembly reference is a prerequisite (True) or not (False).</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.Deployment.ManifestUtilities.AssemblyReference.ReferenceType">
      <summary>Specifies the type of the assembly reference.</summary>
      <returns>An <see cref="T:Microsoft.Build.Tasks.Deployment.ManifestUtilities.AssemblyReferenceType" /> object representing the type of the assembly reference.</returns>
    </member>
    <member name="M:Microsoft.Build.Tasks.Deployment.ManifestUtilities.AssemblyReference.ToString">
      <summary>Returns the full ClickOnce assembly reference.</summary>
      <returns>A string containing the ClickOnce assembly reference.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.Deployment.ManifestUtilities.AssemblyReference.XmlAssemblyIdentity">
      <summary>Gets or sets a property that is used to serialize the <see cref="P:Microsoft.Build.Tasks.Deployment.ManifestUtilities.AssemblyReference.AssemblyIdentity" /> property to an XML file.</summary>
      <returns>The value of the <see cref="P:Microsoft.Build.Tasks.Deployment.ManifestUtilities.AssemblyReference.AssemblyIdentity" /> property.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.Deployment.ManifestUtilities.AssemblyReference.XmlIsNative">
      <summary>Gets or sets a value indicating whether the reference is native.</summary>
      <returns>A value indicating whether the reference is native.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.Deployment.ManifestUtilities.AssemblyReference.XmlIsPrerequisite">
      <summary>Gets or sets a property that is used to serialize the <see cref="P:Microsoft.Build.Tasks.Deployment.ManifestUtilities.AssemblyReference.IsPrerequisite" /> property to an XML file.</summary>
      <returns>The value of the <see cref="P:Microsoft.Build.Tasks.Deployment.ManifestUtilities.AssemblyReference.IsPrerequisite" /> property.</returns>
    </member>
    <member name="T:Microsoft.Build.Tasks.Deployment.ManifestUtilities.AssemblyReferenceCollection">
      <summary>Provides a collection for manifest assembly references.</summary>
    </member>
    <member name="M:Microsoft.Build.Tasks.Deployment.ManifestUtilities.AssemblyReferenceCollection.Add(Microsoft.Build.Tasks.Deployment.ManifestUtilities.AssemblyReference)">
      <summary>Adds the specified assembly reference to the collection.</summary>
      <returns>Returns the added assembly reference instance.</returns>
      <param name="assembly">The assembly reference to add.</param>
    </member>
    <member name="M:Microsoft.Build.Tasks.Deployment.ManifestUtilities.AssemblyReferenceCollection.Add(System.String)">
      <summary>Adds the specified assembly reference to the collection.</summary>
      <returns>Returns the added assembly reference instance.</returns>
      <param name="path">The path of the assembly to add.</param>
    </member>
    <member name="M:Microsoft.Build.Tasks.Deployment.ManifestUtilities.AssemblyReferenceCollection.Clear">
      <summary>Removes all objects from the collection.</summary>
    </member>
    <member name="P:Microsoft.Build.Tasks.Deployment.ManifestUtilities.AssemblyReferenceCollection.Count">
      <summary>Gets the number of objects contained in the collection.</summary>
      <returns>An integer indicating the number of objects contained in the collection.</returns>
    </member>
    <member name="M:Microsoft.Build.Tasks.Deployment.ManifestUtilities.AssemblyReferenceCollection.Find(Microsoft.Build.Tasks.Deployment.ManifestUtilities.AssemblyIdentity)">
      <summary>Finds an assembly reference in the collection by the specified assembly identity.</summary>
      <returns>Returns the found assembly reference.</returns>
      <param name="identity">The specified assembly identity.</param>
    </member>
    <member name="M:Microsoft.Build.Tasks.Deployment.ManifestUtilities.AssemblyReferenceCollection.Find(System.String)">
      <summary>Finds an assembly reference in the collection by simple name.</summary>
      <returns>Returns the found assembly reference.</returns>
      <param name="name">The specified assembly simple name.</param>
    </member>
    <member name="M:Microsoft.Build.Tasks.Deployment.ManifestUtilities.AssemblyReferenceCollection.FindTargetPath(System.String)">
      <summary>Finds an assembly reference in the collection by the specified target path.</summary>
      <returns>Returns the found assembly reference.</returns>
      <param name="targetPath">The specified target path.</param>
    </member>
    <member name="M:Microsoft.Build.Tasks.Deployment.ManifestUtilities.AssemblyReferenceCollection.GetEnumerator">
      <summary>Returns an enumerator that can iterate through the collection.</summary>
      <returns>Returns an enumerator (<see cref="T:System.Collections.IEnumerator" />).</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.Deployment.ManifestUtilities.AssemblyReferenceCollection.Item(System.Int32)">
      <summary>Gets the element at the specified index.</summary>
      <returns>Returns the assembly reference instance.</returns>
      <param name="index">The zero-based index of the entry to get.</param>
    </member>
    <member name="M:Microsoft.Build.Tasks.Deployment.ManifestUtilities.AssemblyReferenceCollection.Remove(Microsoft.Build.Tasks.Deployment.ManifestUtilities.AssemblyReference)">
      <summary>Removes the specified assembly reference from the collection.</summary>
      <param name="assemblyReference">The specified assembly reference to remove.</param>
    </member>
    <member name="T:Microsoft.Build.Tasks.Deployment.ManifestUtilities.AssemblyReferenceType">
      <summary>This class represents the type of an assembly reference.</summary>
    </member>
    <member name="F:Microsoft.Build.Tasks.Deployment.ManifestUtilities.AssemblyReferenceType.Unspecified">
      <summary>Assembly type is unspecified and will be determined by the <see cref="M:Microsoft.Build.Tasks.Deployment.ManifestUtilities.Manifest.UpdateFileInfo" /> method.</summary>
    </member>
    <member name="F:Microsoft.Build.Tasks.Deployment.ManifestUtilities.AssemblyReferenceType.ClickOnceManifest">
      <summary>Specifies a ClickOnce manifest.</summary>
    </member>
    <member name="F:Microsoft.Build.Tasks.Deployment.ManifestUtilities.AssemblyReferenceType.ManagedAssembly">
      <summary>Specifies a .NET Framework assembly.</summary>
    </member>
    <member name="F:Microsoft.Build.Tasks.Deployment.ManifestUtilities.AssemblyReferenceType.NativeAssembly">
      <summary>Specifies a Win32 native assembly.</summary>
    </member>
    <member name="T:Microsoft.Build.Tasks.Deployment.ManifestUtilities.BaseReference">
      <summary>Describes base functionality common to both file references and assembly references.</summary>
    </member>
    <member name="M:Microsoft.Build.Tasks.Deployment.ManifestUtilities.BaseReference.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.Build.Tasks.Deployment.ManifestUtilities.BaseReference" /> class.</summary>
    </member>
    <member name="M:Microsoft.Build.Tasks.Deployment.ManifestUtilities.BaseReference.#ctor(System.String)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.Build.Tasks.Deployment.ManifestUtilities.BaseReference" /> class.</summary>
      <param name="path">The path for the assembly base reference.</param>
    </member>
    <member name="P:Microsoft.Build.Tasks.Deployment.ManifestUtilities.BaseReference.Group">
      <summary>Gets or sets the group for on-demand download functionality.</summary>
      <returns>A string indicating the group for on-demand download functionality. A blank string indicates a primary file.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.Deployment.ManifestUtilities.BaseReference.Hash">
      <summary>Gets or sets the SHA1 hash of the file.</summary>
      <returns>A string indicating the SHA1 hash of the file.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.Deployment.ManifestUtilities.BaseReference.IsOptional">
      <summary>Gets or sets whether the file is optional for on-demand download functionality.</summary>
      <returns>A Boolean value indicating whether the file is optional for on-demand download functionality.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.Deployment.ManifestUtilities.BaseReference.ResolvedPath">
      <summary>Gets or sets the resolved path to the file. This path is determined by the Resolve method, and is used to compute the file information by the <see cref="M:Microsoft.Build.Tasks.Deployment.ManifestUtilities.Manifest.UpdateFileInfo" /> method.</summary>
      <returns>A string indicating the resolved path to the file.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.Deployment.ManifestUtilities.BaseReference.Size">
      <summary>Gets or sets the file size in bytes.</summary>
      <returns>The file size in bytes.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.Deployment.ManifestUtilities.BaseReference.SortName">
      <summary>Gets a value that is used to sort the referenced assemblies in the application manifest. </summary>
      <returns>The name to sort by.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.Deployment.ManifestUtilities.BaseReference.SourcePath">
      <summary>Gets or sets the source path of the file.</summary>
      <returns>A string indicating the source path of the file.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.Deployment.ManifestUtilities.BaseReference.TargetPath">
      <summary>Gets or sets the target path of the file. This is the path that is used for specification in the generated manifest.</summary>
      <returns>A string indicating the target path of the file.</returns>
    </member>
    <member name="M:Microsoft.Build.Tasks.Deployment.ManifestUtilities.BaseReference.ToString">
      <summary>Returns the base reference name.</summary>
      <returns>A string indicating the base reference name.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.Deployment.ManifestUtilities.BaseReference.XmlGroup">
      <summary>Gets or sets the group for on-demand download functionality.</summary>
    </member>
    <member name="P:Microsoft.Build.Tasks.Deployment.ManifestUtilities.BaseReference.XmlHash">
      <summary>Gets or sets a property that is used to serialize the <see cref="P:Microsoft.Build.Tasks.Deployment.ManifestUtilities.BaseReference.Hash" /> property to an XML file.</summary>
      <returns>The value of the <see cref="P:Microsoft.Build.Tasks.Deployment.ManifestUtilities.BaseReference.Hash" /> property.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.Deployment.ManifestUtilities.BaseReference.XmlHashAlgorithm">
      <summary>Gets or sets a property that is used to serialize the hash algorithm to an XML file.</summary>
      <returns>The hash algorithm.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.Deployment.ManifestUtilities.BaseReference.XmlIsOptional">
      <summary>Gets or sets a property that is used to serialize the <see cref="P:Microsoft.Build.Tasks.Deployment.ManifestUtilities.BaseReference.IsOptional" /> property to an XML file.</summary>
      <returns>The value of the <see cref="P:Microsoft.Build.Tasks.Deployment.ManifestUtilities.BaseReference.IsOptional" /> property.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.Deployment.ManifestUtilities.BaseReference.XmlPath">
      <summary>Gets or sets a property that is used to serialize the path to an XML file.</summary>
      <returns>The path of the reference.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.Deployment.ManifestUtilities.BaseReference.XmlSize">
      <summary>Gets or sets a property that is used to serialize the <see cref="P:Microsoft.Build.Tasks.Deployment.ManifestUtilities.BaseReference.Size" /> property to an XML file.</summary>
      <returns>The value of the <see cref="P:Microsoft.Build.Tasks.Deployment.ManifestUtilities.BaseReference.Size" /> property.</returns>
    </member>
    <member name="T:Microsoft.Build.Tasks.Deployment.ManifestUtilities.ComClass">
      <summary>Represents a COM class that is described in a manifest.</summary>
    </member>
    <member name="M:Microsoft.Build.Tasks.Deployment.ManifestUtilities.ComClass.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.Build.Tasks.Deployment.ManifestUtilities.ComClass" /> class. </summary>
    </member>
    <member name="P:Microsoft.Build.Tasks.Deployment.ManifestUtilities.ComClass.ClsId">
      <summary>Gets the class identifier (ClsId) for a <see cref="T:Microsoft.Build.Tasks.Deployment.ManifestUtilities.ComClass" /> object.</summary>
      <returns>A <see cref="T:System.String" /> formatted in the pattern {xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx}, where the value of the GUID is represented as a series of lower-case hexadecimal digits in groups of 8, 4, 4, 4, and 12 digits and separated by hyphens. An example of a return value is "{382c74c3-721d-4f34-80e5-57657b6cbc27}".</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.Deployment.ManifestUtilities.ComClass.Description">
      <summary>Gets the description of a <see cref="T:Microsoft.Build.Tasks.Deployment.ManifestUtilities.ComClass" /> object.</summary>
      <returns>A description of the <see cref="T:Microsoft.Build.Tasks.Deployment.ManifestUtilities.ComClass" /> object.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.Deployment.ManifestUtilities.ComClass.ProgId">
      <summary>Gets the programmatic identifier (ProgId) of a <see cref="T:Microsoft.Build.Tasks.Deployment.ManifestUtilities.ComClass" /> object.</summary>
      <returns>The programmatic identifier of the <see cref="T:Microsoft.Build.Tasks.Deployment.ManifestUtilities.ComClass" /> object.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.Deployment.ManifestUtilities.ComClass.ThreadingModel">
      <summary>Gets the threading model of a <see cref="T:Microsoft.Build.Tasks.Deployment.ManifestUtilities.ComClass" /> object.</summary>
      <returns>A string such as "Apartment".</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.Deployment.ManifestUtilities.ComClass.TlbId">
      <summary>Gets a value that is the identifier of the type library that contains type information about the class.</summary>
      <returns>The identifier of the type library that contains type information about the class. A <see cref="T:System.String" /> formatted in the pattern {xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx}, where the value of the GUID is represented as a series of lower-case hexadecimal digits in groups of 8, 4, 4, 4, and 12 digits and separated by hyphens. An example of a return value is "{382c74c3-721d-4f34-80e5-57657b6cbc27}".</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.Deployment.ManifestUtilities.ComClass.XmlClsId">
      <summary>Gets or sets a property that is used to serialize the <see cref="P:Microsoft.Build.Tasks.Deployment.ManifestUtilities.ComClass.ClsId" /> property to an XML file.</summary>
      <returns>The value of the <see cref="P:Microsoft.Build.Tasks.Deployment.ManifestUtilities.ComClass.ClsId" /> property.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.Deployment.ManifestUtilities.ComClass.XmlDescription">
      <summary>Gets or sets a property that is used to serialize the <see cref="P:Microsoft.Build.Tasks.Deployment.ManifestUtilities.ComClass.Description" /> property to an XML file.</summary>
      <returns>The value of the <see cref="P:Microsoft.Build.Tasks.Deployment.ManifestUtilities.ComClass.Description" /> property.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.Deployment.ManifestUtilities.ComClass.XmlProgId">
      <summary>Gets or sets a property that is used to serialize the <see cref="P:Microsoft.Build.Tasks.Deployment.ManifestUtilities.ComClass.ProgId" /> property to an XML file.</summary>
      <returns>The value of the <see cref="P:Microsoft.Build.Tasks.Deployment.ManifestUtilities.ComClass.ProgId" /> property.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.Deployment.ManifestUtilities.ComClass.XmlThreadingModel">
      <summary>Gets or sets a property that is used to serialize the <see cref="P:Microsoft.Build.Tasks.Deployment.ManifestUtilities.ComClass.ThreadingModel" /> property to an XML file.</summary>
      <returns>The value of the <see cref="P:Microsoft.Build.Tasks.Deployment.ManifestUtilities.ComClass.ThreadingModel" /> property.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.Deployment.ManifestUtilities.ComClass.XmlTlbId">
      <summary>Gets or sets a property that is used to serialize the <see cref="P:Microsoft.Build.Tasks.Deployment.ManifestUtilities.ComClass.TlbId" /> property to an XML file.</summary>
      <returns>The value of the <see cref="P:Microsoft.Build.Tasks.Deployment.ManifestUtilities.ComClass.TlbId" /> property.</returns>
    </member>
    <member name="T:Microsoft.Build.Tasks.Deployment.ManifestUtilities.CompatibleFramework">
      <summary>Describes a CompatibleFramework for an deployment manifest</summary>
    </member>
    <member name="M:Microsoft.Build.Tasks.Deployment.ManifestUtilities.CompatibleFramework.#ctor">
      <summary>Initializes a new instance of the <see cref="Microsoft.Build.Tasks.Deployment.ManifestUtilities.CompatibleFramework" /> class</summary>
    </member>
    <member name="P:Microsoft.Build.Tasks.Deployment.ManifestUtilities.CompatibleFramework.Profile">
      <summary>Represents the profile.</summary>
    </member>
    <member name="P:Microsoft.Build.Tasks.Deployment.ManifestUtilities.CompatibleFramework.SupportedRuntime">
      <summary>Contains the supported runtime for the framework.</summary>
    </member>
    <member name="P:Microsoft.Build.Tasks.Deployment.ManifestUtilities.CompatibleFramework.Version">
      <summary>Contains the version of the framework.</summary>
    </member>
    <member name="P:Microsoft.Build.Tasks.Deployment.ManifestUtilities.CompatibleFramework.XmlProfile">
      <summary>Contains the XML profile for the framework.</summary>
    </member>
    <member name="P:Microsoft.Build.Tasks.Deployment.ManifestUtilities.CompatibleFramework.XmlSupportedRuntime">
      <summary>Contains the XML supported runtime for the framework.</summary>
    </member>
    <member name="P:Microsoft.Build.Tasks.Deployment.ManifestUtilities.CompatibleFramework.XmlVersion">
      <summary>Contains the XML version for the framework</summary>
    </member>
    <member name="T:Microsoft.Build.Tasks.Deployment.ManifestUtilities.CompatibleFrameworkCollection">
      <summary>Represents a collection of frameworks.</summary>
    </member>
    <member name="M:Microsoft.Build.Tasks.Deployment.ManifestUtilities.CompatibleFrameworkCollection.Add(Microsoft.Build.Tasks.Deployment.ManifestUtilities.CompatibleFramework)">
      <summary>Adds a framework to the manifest.</summary>
      <param name="compatibleFramework">The framework to add.</param>
    </member>
    <member name="M:Microsoft.Build.Tasks.Deployment.ManifestUtilities.CompatibleFrameworkCollection.Clear">
      <summary>Clears the collection.</summary>
    </member>
    <member name="P:Microsoft.Build.Tasks.Deployment.ManifestUtilities.CompatibleFrameworkCollection.Count">
      <summary>Returns the number of frameworks in the collection.</summary>
    </member>
    <member name="M:Microsoft.Build.Tasks.Deployment.ManifestUtilities.CompatibleFrameworkCollection.GetEnumerator">
      <summary>Gets the enumerator for the collection.</summary>
    </member>
    <member name="P:Microsoft.Build.Tasks.Deployment.ManifestUtilities.CompatibleFrameworkCollection.Item(System.Int32)">
      <summary>Returns a framework from the collection.</summary>
      <param name="index">The index of the framework to return.</param>
    </member>
    <member name="T:Microsoft.Build.Tasks.Deployment.ManifestUtilities.DeployManifest">
      <summary>Represents a ClickOnce deployment manifest.</summary>
    </member>
    <member name="M:Microsoft.Build.Tasks.Deployment.ManifestUtilities.DeployManifest.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.Build.Tasks.Deployment.ManifestUtilities.DeployManifest" /> class.</summary>
    </member>
    <member name="M:Microsoft.Build.Tasks.Deployment.ManifestUtilities.DeployManifest.#ctor(System.String)">
      <summary>Initializes a new instance of <see cref="Microsoft.Build.Tasks.Deployment.ManifestUtilities.DeployManifest" />.</summary>
      <param name="targetFrameworkMoniker">The target framework moniker.</param>
    </member>
    <member name="P:Microsoft.Build.Tasks.Deployment.ManifestUtilities.DeployManifest.CompatibleFrameworks"></member>
    <member name="P:Microsoft.Build.Tasks.Deployment.ManifestUtilities.DeployManifest.CreateDesktopShortcut">
      <summary>Gets or sets a value that indicates whether to create a desktop shortcut.</summary>
      <returns>"true" or "false". A string that contains a value that indicates whether to create a desktop shortcut.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.Deployment.ManifestUtilities.DeployManifest.DeploymentUrl">
      <summary>Gets or sets the update location for the application.</summary>
      <returns>A string that indicates the update location for the application.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.Deployment.ManifestUtilities.DeployManifest.DisallowUrlActivation">
      <summary>Gets or sets a value indicating whether the application should be blocked from being started by means of a URL.</summary>
      <returns>true if the application is blocked from being started by means of a URL otherwise, false.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.Deployment.ManifestUtilities.DeployManifest.EntryPoint">
      <summary>Gets or sets a deployment reference that is the entry point of the application.</summary>
      <returns>An <see cref="T:Microsoft.Build.Tasks.Deployment.ManifestUtilities.AssemblyReference" /> object that represents the entry point of the application.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.Deployment.ManifestUtilities.DeployManifest.ErrorReportUrl">
      <summary>Gets or sets the URL of the error report.</summary>
      <returns>A string that contains the URL of the error report.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.Deployment.ManifestUtilities.DeployManifest.Install">
      <summary>Gets or sets a value indicating whether the application is an installed application or an online-only application.</summary>
      <returns>true if the application is an installed application; otherwise, false.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.Deployment.ManifestUtilities.DeployManifest.MapFileExtensions">
      <summary>Gets or sets a value indicating whether .deploy file extension mapping is used.</summary>
      <returns>true if .deploy file extension mapping is used; otherwise, false.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.Deployment.ManifestUtilities.DeployManifest.MinimumRequiredVersion">
      <summary>Gets or sets the minimum required version number for an application.</summary>
      <returns>A string indicating the minimum required version number for an application.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.Deployment.ManifestUtilities.DeployManifest.Product">
      <summary>Gets or sets the name of the application.</summary>
      <returns>A string that indicates the name of the application.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.Deployment.ManifestUtilities.DeployManifest.Publisher">
      <summary>Gets or sets the publisher of the application.</summary>
      <returns>A string that indicates the publisher of the application.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.Deployment.ManifestUtilities.DeployManifest.SuiteName">
      <summary>Gets or sets the suite name that is defined in the manifest.</summary>
      <returns>A string that contains the suite name.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.Deployment.ManifestUtilities.DeployManifest.SupportUrl">
      <summary>Gets or sets the link that appears in Add or Remove Programs in Control Panel for the application.</summary>
      <returns>A string that indicates the support URL.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.Deployment.ManifestUtilities.DeployManifest.TargetFrameworkMoniker"></member>
    <member name="P:Microsoft.Build.Tasks.Deployment.ManifestUtilities.DeployManifest.TrustUrlParameters">
      <summary>Gets or sets a value indicating whether URL query-string parameters are available to the application.</summary>
      <returns>true if URL query-string parameters are available to the application; otherwise, false.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.Deployment.ManifestUtilities.DeployManifest.UpdateEnabled">
      <summary>Gets or sets a value indicating whether the application is updatable.</summary>
      <returns>true if the application is updatable; otherwise, false.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.Deployment.ManifestUtilities.DeployManifest.UpdateInterval">
      <summary>Gets or sets the update interval for the application.</summary>
      <returns>An integer that indicates the update interval for the application.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.Deployment.ManifestUtilities.DeployManifest.UpdateMode">
      <summary>Gets or sets an object indicating whether updates should be checked in the foreground before the application is started, or in the background while the application is running.</summary>
      <returns>An <see cref="T:Microsoft.Build.Tasks.Deployment.ManifestUtilities.UpdateMode" /> object that indicates whether updates should be checked before the application is started, or while the application is running.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.Deployment.ManifestUtilities.DeployManifest.UpdateUnit">
      <summary>Gets or sets the units used for the <see cref="P:Microsoft.Build.Tasks.Deployment.ManifestUtilities.DeployManifest.UpdateInterval" /> property.</summary>
      <returns>An <see cref="T:Microsoft.Build.Tasks.Deployment.ManifestUtilities.UpdateUnit" /> object that indicates the units used for the <see cref="P:Microsoft.Build.Tasks.Deployment.ManifestUtilities.DeployManifest.UpdateInterval" /> property.</returns>
    </member>
    <member name="M:Microsoft.Build.Tasks.Deployment.ManifestUtilities.DeployManifest.Validate">
      <summary>Performs various checks to verify the validity of the manifest. Any resulting errors or warnings are reported in the <see cref="T:Microsoft.Build.Tasks.Deployment.ManifestUtilities.OutputMessageCollection" /> object.</summary>
    </member>
    <member name="P:Microsoft.Build.Tasks.Deployment.ManifestUtilities.DeployManifest.XmlCompatibleFrameworks"></member>
    <member name="P:Microsoft.Build.Tasks.Deployment.ManifestUtilities.DeployManifest.XmlCreateDesktopShortcut">
      <summary>Gets or sets a property that is used to serialize the <see cref="P:Microsoft.Build.Tasks.Deployment.ManifestUtilities.DeployManifest.CreateDesktopShortcut" /> property to an XML file.</summary>
      <returns>The value of the <see cref="P:Microsoft.Build.Tasks.Deployment.ManifestUtilities.DeployManifest.CreateDesktopShortcut" /> property.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.Deployment.ManifestUtilities.DeployManifest.XmlDeploymentUrl">
      <summary>Gets or sets a property that is used to serialize the <see cref="P:Microsoft.Build.Tasks.Deployment.ManifestUtilities.DeployManifest.DeploymentUrl" /> property to an XML file.</summary>
      <returns>The value of the <see cref="P:Microsoft.Build.Tasks.Deployment.ManifestUtilities.DeployManifest.DeploymentUrl" /> property.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.Deployment.ManifestUtilities.DeployManifest.XmlDisallowUrlActivation">
      <summary>Gets or sets a property that is used to serialize the <see cref="P:Microsoft.Build.Tasks.Deployment.ManifestUtilities.DeployManifest.DisallowUrlActivation" /> property to an XML file.</summary>
      <returns>The value of the <see cref="P:Microsoft.Build.Tasks.Deployment.ManifestUtilities.DeployManifest.DisallowUrlActivation" /> property.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.Deployment.ManifestUtilities.DeployManifest.XmlErrorReportUrl">
      <summary>Gets or sets a property that is used to serialize the <see cref="P:Microsoft.Build.Tasks.Deployment.ManifestUtilities.DeployManifest.ErrorReportUrl" /> property to an XML file.</summary>
      <returns>The value of the <see cref="P:Microsoft.Build.Tasks.Deployment.ManifestUtilities.DeployManifest.ErrorReportUrl" /> property.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.Deployment.ManifestUtilities.DeployManifest.XmlInstall">
      <summary>Gets or sets a property that is used to serialize the <see cref="P:Microsoft.Build.Tasks.Deployment.ManifestUtilities.DeployManifest.Install" /> property to an XML file.</summary>
      <returns>The value of the <see cref="P:Microsoft.Build.Tasks.Deployment.ManifestUtilities.DeployManifest.Install" /> property.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.Deployment.ManifestUtilities.DeployManifest.XmlMapFileExtensions">
      <summary>Gets or sets a property that is used to serialize the <see cref="P:Microsoft.Build.Tasks.Deployment.ManifestUtilities.DeployManifest.MapFileExtensions" /> property to an XML file.</summary>
      <returns>The value of the <see cref="P:Microsoft.Build.Tasks.Deployment.ManifestUtilities.DeployManifest.MapFileExtensions" /> property.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.Deployment.ManifestUtilities.DeployManifest.XmlMinimumRequiredVersion">
      <summary>Gets or sets a property that is used to serialize the <see cref="P:Microsoft.Build.Tasks.Deployment.ManifestUtilities.DeployManifest.MinimumRequiredVersion" /> property to an XML file.</summary>
      <returns>The value of the <see cref="P:Microsoft.Build.Tasks.Deployment.ManifestUtilities.DeployManifest.MinimumRequiredVersion" /> property.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.Deployment.ManifestUtilities.DeployManifest.XmlProduct">
      <summary>Gets or sets a property that is used to serialize the <see cref="P:Microsoft.Build.Tasks.Deployment.ManifestUtilities.DeployManifest.Product" /> property to an XML file.</summary>
      <returns>The value of the <see cref="P:Microsoft.Build.Tasks.Deployment.ManifestUtilities.DeployManifest.Product" /> property.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.Deployment.ManifestUtilities.DeployManifest.XmlPublisher">
      <summary>Gets or sets a property that is used to serialize the <see cref="P:Microsoft.Build.Tasks.Deployment.ManifestUtilities.DeployManifest.Publisher" /> property to an XML file.</summary>
      <returns>The value of the <see cref="P:Microsoft.Build.Tasks.Deployment.ManifestUtilities.DeployManifest.Publisher" /> property.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.Deployment.ManifestUtilities.DeployManifest.XmlSuiteName">
      <summary>Gets or sets a property that is used to serialize the <see cref="P:Microsoft.Build.Tasks.Deployment.ManifestUtilities.DeployManifest.SuiteName" /> property to an XML file.</summary>
      <returns>The value of the <see cref="P:Microsoft.Build.Tasks.Deployment.ManifestUtilities.DeployManifest.SuiteName" /> property.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.Deployment.ManifestUtilities.DeployManifest.XmlSupportUrl">
      <summary>Gets or sets a property that is used to serialize the <see cref="P:Microsoft.Build.Tasks.Deployment.ManifestUtilities.DeployManifest.SupportUrl" /> property to an XML file.</summary>
      <returns>The value of the <see cref="P:Microsoft.Build.Tasks.Deployment.ManifestUtilities.DeployManifest.SupportUrl" /> property.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.Deployment.ManifestUtilities.DeployManifest.XmlTrustUrlParameters">
      <summary>Gets or sets a property that is used to serialize the <see cref="P:Microsoft.Build.Tasks.Deployment.ManifestUtilities.DeployManifest.TrustUrlParameters" /> property to an XML file.</summary>
      <returns>The value of the <see cref="P:Microsoft.Build.Tasks.Deployment.ManifestUtilities.DeployManifest.TrustUrlParameters" /> property.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.Deployment.ManifestUtilities.DeployManifest.XmlUpdateEnabled">
      <summary>Gets or sets a property that is used to serialize the <see cref="P:Microsoft.Build.Tasks.Deployment.ManifestUtilities.DeployManifest.UpdateEnabled" /> property to an XML file.</summary>
      <returns>The value of the <see cref="P:Microsoft.Build.Tasks.Deployment.ManifestUtilities.DeployManifest.UpdateEnabled" /> property.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.Deployment.ManifestUtilities.DeployManifest.XmlUpdateInterval">
      <summary>Gets or sets a property that is used to serialize the <see cref="P:Microsoft.Build.Tasks.Deployment.ManifestUtilities.DeployManifest.UpdateInterval" /> property to an XML file.</summary>
      <returns>The value of the <see cref="P:Microsoft.Build.Tasks.Deployment.ManifestUtilities.DeployManifest.UpdateInterval" /> property.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.Deployment.ManifestUtilities.DeployManifest.XmlUpdateMode">
      <summary>Gets or sets a property that is used to serialize the <see cref="P:Microsoft.Build.Tasks.Deployment.ManifestUtilities.DeployManifest.UpdateMode" /> property to an XML file.</summary>
      <returns>The value of the <see cref="P:Microsoft.Build.Tasks.Deployment.ManifestUtilities.DeployManifest.UpdateMode" /> property.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.Deployment.ManifestUtilities.DeployManifest.XmlUpdateUnit">
      <summary>Gets or sets a property that is used to serialize the <see cref="P:Microsoft.Build.Tasks.Deployment.ManifestUtilities.DeployManifest.UpdateUnit" /> property to an XML file.</summary>
      <returns>The value of the <see cref="P:Microsoft.Build.Tasks.Deployment.ManifestUtilities.DeployManifest.UpdateUnit" /> property.</returns>
    </member>
    <member name="T:Microsoft.Build.Tasks.Deployment.ManifestUtilities.FileAssociation">
      <summary>Represents a file name extension to be associated with the application.</summary>
    </member>
    <member name="M:Microsoft.Build.Tasks.Deployment.ManifestUtilities.FileAssociation.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.Build.Tasks.Deployment.ManifestUtilities.FileAssociation" /> class.</summary>
    </member>
    <member name="P:Microsoft.Build.Tasks.Deployment.ManifestUtilities.FileAssociation.DefaultIcon">
      <summary>Gets or sets the icon to use for files that use a particular <see cref="P:Microsoft.Build.Tasks.Deployment.ManifestUtilities.FileAssociation.Extension" />.</summary>
      <returns>The name of the file that contains the icon.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.Deployment.ManifestUtilities.FileAssociation.Description">
      <summary>Gets or sets the description of the file type for use by the shell.</summary>
      <returns>A description of the file type.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.Deployment.ManifestUtilities.FileAssociation.Extension">
      <summary>Gets or sets the file name extension to be associated with the application.</summary>
      <returns>The file name extension to be associated with the application.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.Deployment.ManifestUtilities.FileAssociation.ProgId">
      <summary>Gets or sets the name that uniquely identifies the file association's file type.</summary>
      <returns>The name that uniquely identifies the file type.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.Deployment.ManifestUtilities.FileAssociation.XmlDefaultIcon">
      <summary>Gets or sets a property that is used to serialize the file association's <see cref="P:Microsoft.Build.Tasks.Deployment.ManifestUtilities.FileAssociation.DefaultIcon" /> property to an XML file.</summary>
      <returns>An XML representation of this file association's DefaultIcon.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.Deployment.ManifestUtilities.FileAssociation.XmlDescription">
      <summary>Gets or sets a property that is used to serialize the file association's <see cref="P:Microsoft.Build.Tasks.Deployment.ManifestUtilities.FileAssociation.Description" /> property to an XML file.</summary>
      <returns>An XML representation of this file association's <see cref="P:Microsoft.Build.Tasks.Deployment.ManifestUtilities.FileAssociation.Description" /> value.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.Deployment.ManifestUtilities.FileAssociation.XmlExtension">
      <summary>Gets or sets a property that is used to serialize the file association's <see cref="P:Microsoft.Build.Tasks.Deployment.ManifestUtilities.FileAssociation.Extension" /> property to an XML file.</summary>
      <returns>An XML representation of this file association's <see cref="P:Microsoft.Build.Tasks.Deployment.ManifestUtilities.FileAssociation.Extension" /> value.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.Deployment.ManifestUtilities.FileAssociation.XmlProgId">
      <summary>Gets or sets a property that is used to serialize the <see cref="P:Microsoft.Build.Tasks.Deployment.ManifestUtilities.FileAssociation.ProgId" /> property to an XML file.</summary>
      <returns>An XML representation of this file association's <see cref="P:Microsoft.Build.Tasks.Deployment.ManifestUtilities.FileAssociation.ProgId" /> value.</returns>
    </member>
    <member name="T:Microsoft.Build.Tasks.Deployment.ManifestUtilities.FileAssociationCollection">
      <summary>Represents a collection of file associations.</summary>
    </member>
    <member name="M:Microsoft.Build.Tasks.Deployment.ManifestUtilities.FileAssociationCollection.Add(Microsoft.Build.Tasks.Deployment.ManifestUtilities.FileAssociation)">
      <summary>Adds the specified file association to the collection.</summary>
      <param name="fileAssociation">The file association to add.</param>
    </member>
    <member name="M:Microsoft.Build.Tasks.Deployment.ManifestUtilities.FileAssociationCollection.Clear">
      <summary>Removes all file associations from the collection.</summary>
    </member>
    <member name="P:Microsoft.Build.Tasks.Deployment.ManifestUtilities.FileAssociationCollection.Count">
      <summary>Gets the number of file associations in the collection.</summary>
      <returns>The number of file associations in the collection.</returns>
    </member>
    <member name="M:Microsoft.Build.Tasks.Deployment.ManifestUtilities.FileAssociationCollection.GetEnumerator">
      <summary>Returns an enumerator that can iterate through the collection.</summary>
      <returns>An interface that represents an enumerator that can iterate through the collection.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.Deployment.ManifestUtilities.FileAssociationCollection.Item(System.Int32)">
      <summary>Gets the file association that appears at the specified index.</summary>
      <returns>The file association at the specified index.</returns>
      <param name="index">The zero-based index of the file association to get.</param>
    </member>
    <member name="T:Microsoft.Build.Tasks.Deployment.ManifestUtilities.FileReference">
      <summary>Describes a manifest file reference.</summary>
    </member>
    <member name="M:Microsoft.Build.Tasks.Deployment.ManifestUtilities.FileReference.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.Build.Tasks.Deployment.ManifestUtilities.FileReference" /> class.</summary>
    </member>
    <member name="M:Microsoft.Build.Tasks.Deployment.ManifestUtilities.FileReference.#ctor(System.String)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.Build.Tasks.Deployment.ManifestUtilities.FileReference" /> class.</summary>
      <param name="path">The specified source path of the file.</param>
    </member>
    <member name="P:Microsoft.Build.Tasks.Deployment.ManifestUtilities.FileReference.ComClasses">
      <summary>Returns the set of COM classes referenced by the manifest for isolated applications and registration-free COM.</summary>
      <returns>An array of <see cref="T:Microsoft.Build.Tasks.Deployment.ManifestUtilities.ComClass" /> objects representing the set of COM classes referenced by the manifest for isolated applications and registration-free COM.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.Deployment.ManifestUtilities.FileReference.IsDataFile">
      <summary>Gets or sets whether the file is a data file.</summary>
      <returns>A Boolean value indicating whether the file is a data file.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.Deployment.ManifestUtilities.FileReference.ProxyStubs">
      <summary>Returns the set of proxy stubs referenced by the manifest for isolated applications and registration-free COM.</summary>
      <returns>An array of <see cref="T:Microsoft.Build.Tasks.Deployment.ManifestUtilities.ProxyStub" /> objects representing the set of proxy stubs referenced by the manifest for isolated applications and registration-free COM.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.Deployment.ManifestUtilities.FileReference.TypeLibs">
      <summary>Returns the set of type libraries referenced by the manifest.</summary>
      <returns>An array of <see cref="T:Microsoft.Build.Tasks.Deployment.ManifestUtilities.TypeLib" /> objects representing the set of type libraries referenced by the manifest.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.Deployment.ManifestUtilities.FileReference.XmlComClasses">
      <summary>Gets or sets a property that is used to serialize the <see cref="P:Microsoft.Build.Tasks.Deployment.ManifestUtilities.FileReference.ComClasses" /> property to an XML file.</summary>
      <returns>The value of the <see cref="P:Microsoft.Build.Tasks.Deployment.ManifestUtilities.FileReference.ComClasses" /> property.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.Deployment.ManifestUtilities.FileReference.XmlProxyStubs">
      <summary>Gets or sets a property that is used to serialize the <see cref="P:Microsoft.Build.Tasks.Deployment.ManifestUtilities.FileReference.ProxyStubs" /> property to an XML file.</summary>
      <returns>The value of the <see cref="P:Microsoft.Build.Tasks.Deployment.ManifestUtilities.FileReference.ProxyStubs" /> property.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.Deployment.ManifestUtilities.FileReference.XmlTypeLibs">
      <summary>Gets or sets a property that is used to serialize the <see cref="P:Microsoft.Build.Tasks.Deployment.ManifestUtilities.FileReference.TypeLibs" /> property to an XML file.</summary>
      <returns>The value of the <see cref="P:Microsoft.Build.Tasks.Deployment.ManifestUtilities.FileReference.TypeLibs" /> property.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.Deployment.ManifestUtilities.FileReference.XmlWriteableType">
      <summary>Gets or sets a value that indicates whether the file is a data file.</summary>
      <returns>"applicationData" is the only valid setting.</returns>
    </member>
    <member name="T:Microsoft.Build.Tasks.Deployment.ManifestUtilities.FileReferenceCollection">
      <summary>Represents a collection for manifest file references.</summary>
    </member>
    <member name="M:Microsoft.Build.Tasks.Deployment.ManifestUtilities.FileReferenceCollection.Add(Microsoft.Build.Tasks.Deployment.ManifestUtilities.FileReference)">
      <summary>Adds the specified file reference to the collection.</summary>
      <returns>Returns the added file reference object.</returns>
      <param name="file">The specified file reference to add.</param>
    </member>
    <member name="M:Microsoft.Build.Tasks.Deployment.ManifestUtilities.FileReferenceCollection.Add(System.String)">
      <summary>Adds the specified file reference to the collection.</summary>
      <returns>Returns the added file reference object.</returns>
      <param name="path">The path of the specified file reference to add.</param>
    </member>
    <member name="M:Microsoft.Build.Tasks.Deployment.ManifestUtilities.FileReferenceCollection.Clear">
      <summary>Removes all objects from the collection.</summary>
    </member>
    <member name="P:Microsoft.Build.Tasks.Deployment.ManifestUtilities.FileReferenceCollection.Count">
      <summary>Returns the number of objects contained in the collection.</summary>
      <returns>the number of objects contained in the collection.</returns>
    </member>
    <member name="M:Microsoft.Build.Tasks.Deployment.ManifestUtilities.FileReferenceCollection.FindTargetPath(System.String)">
      <summary>Finds a file reference in the collection by the specified target path.</summary>
      <returns>Returns the found file reference.</returns>
      <param name="targetPath">The specified target path.</param>
    </member>
    <member name="M:Microsoft.Build.Tasks.Deployment.ManifestUtilities.FileReferenceCollection.GetEnumerator">
      <summary>Returns an enumerator that can iterate through the collection.</summary>
      <returns>An <see cref="T:System.Collections.IEnumerator" /> interface representing an enumerator that can iterate through the collection.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.Deployment.ManifestUtilities.FileReferenceCollection.Item(System.Int32)">
      <summary>Returns the element at the specified index.</summary>
      <returns>Returns the file reference object.</returns>
      <param name="index">The zero-based index of the entry to get.</param>
    </member>
    <member name="M:Microsoft.Build.Tasks.Deployment.ManifestUtilities.FileReferenceCollection.Remove(Microsoft.Build.Tasks.Deployment.ManifestUtilities.FileReference)">
      <summary>Removes the specified file reference from the collection.</summary>
      <param name="file">The specified file reference to remove.</param>
    </member>
    <member name="T:Microsoft.Build.Tasks.Deployment.ManifestUtilities.Manifest">
      <summary>Represents base functionality common to all supported manifest types.</summary>
    </member>
    <member name="M:Microsoft.Build.Tasks.Deployment.ManifestUtilities.Manifest.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.Build.Tasks.Deployment.ManifestUtilities.Manifest" /> class.</summary>
    </member>
    <member name="P:Microsoft.Build.Tasks.Deployment.ManifestUtilities.Manifest.AssemblyIdentity">
      <summary>Gets or sets the identity of the manifest.</summary>
      <returns>An <see cref="T:Microsoft.Build.Tasks.Deployment.ManifestUtilities.AssemblyIdentity" /> object representing the identity of the manifest.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.Deployment.ManifestUtilities.Manifest.AssemblyReferences">
      <summary>Gets the set of assemblies that the manifest references.</summary>
      <returns>An <see cref="T:Microsoft.Build.Tasks.Deployment.ManifestUtilities.AssemblyReferenceCollection" /> object representing the set of assemblies that the manifest references.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.Deployment.ManifestUtilities.Manifest.Description">
      <summary>Gets or sets a textual description for the manifest.</summary>
      <returns>A string describing the manifest.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.Deployment.ManifestUtilities.Manifest.EntryPoint">
      <summary>Gets or sets an assembly reference that is the entry point of the application.</summary>
      <returns>An <see cref="T:Microsoft.Build.Tasks.Deployment.ManifestUtilities.AssemblyReference" /> object representing an assembly reference that is the entry point of the application.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.Deployment.ManifestUtilities.Manifest.FileReferences">
      <summary>Gets the set of files that the manifest references.</summary>
      <returns>A <see cref="T:Microsoft.Build.Tasks.Deployment.ManifestUtilities.FileReferenceCollection" /> object representing the set of files that the manifest references.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.Deployment.ManifestUtilities.Manifest.InputStream">
      <summary>Gets or sets the input stream from which the manifest was read.</summary>
      <returns>A <see cref="T:System.IO.Stream" /> object representing the input stream from which the manifest was read.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.Deployment.ManifestUtilities.Manifest.OutputMessages">
      <summary>Gets a collection of current error and warning messages.</summary>
      <returns>An <see cref="T:Microsoft.Build.Tasks.Deployment.ManifestUtilities.OutputMessageCollection" /> object, which contains a collection of current error and warning messages.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.Deployment.ManifestUtilities.Manifest.ReadOnly">
      <summary>Gets or sets a value indicating whether the manifest is operating in read-only or read-write mode.</summary>
      <returns>A Boolean value indicating whether the manifest is operating in read-only or read-write mode.</returns>
    </member>
    <member name="M:Microsoft.Build.Tasks.Deployment.ManifestUtilities.Manifest.ResolveFiles">
      <summary>Locates all specified assembly and file references by searching in the same directory as the loaded manifest, or in the current directory.</summary>
    </member>
    <member name="M:Microsoft.Build.Tasks.Deployment.ManifestUtilities.Manifest.ResolveFiles(System.String[])">
      <summary>Locates all specified assembly and file references by searching in the specified directories.</summary>
      <param name="searchPaths">An array of strings specifying the directories to search.</param>
    </member>
    <member name="P:Microsoft.Build.Tasks.Deployment.ManifestUtilities.Manifest.SourcePath">
      <summary>Gets or sets the location where the manifest was loaded or saved.</summary>
      <returns>A string indicating the location where the manifest was loaded or saved.</returns>
    </member>
    <member name="M:Microsoft.Build.Tasks.Deployment.ManifestUtilities.Manifest.ToString">
      <summary>Returns the manifest name.</summary>
      <returns>A string indicating the name of the manifest.</returns>
    </member>
    <member name="M:Microsoft.Build.Tasks.Deployment.ManifestUtilities.Manifest.UpdateFileInfo">
      <summary>Updates file information for each referenced assembly and file.</summary>
    </member>
    <member name="M:Microsoft.Build.Tasks.Deployment.ManifestUtilities.Manifest.Validate">
      <summary>Performs various checks to verify the validity of the manifest.</summary>
    </member>
    <member name="M:Microsoft.Build.Tasks.Deployment.ManifestUtilities.Manifest.ValidatePlatform">
      <summary>Validates the manifest platform.</summary>
    </member>
    <member name="P:Microsoft.Build.Tasks.Deployment.ManifestUtilities.Manifest.XmlAssemblyIdentity">
      <summary>Gets or sets a property that is used to serialize the <see cref="P:Microsoft.Build.Tasks.Deployment.ManifestUtilities.Manifest.AssemblyIdentity" /> property to an XML file.</summary>
    </member>
    <member name="P:Microsoft.Build.Tasks.Deployment.ManifestUtilities.Manifest.XmlAssemblyReferences">
      <summary>Gets or sets a property that is used to serialize the <see cref="P:Microsoft.Build.Tasks.Deployment.ManifestUtilities.Manifest.AssemblyReferences" /> property to an XML file.</summary>
    </member>
    <member name="P:Microsoft.Build.Tasks.Deployment.ManifestUtilities.Manifest.XmlDescription">
      <summary>Gets or sets a property that is used to serialize the <see cref="P:Microsoft.Build.Tasks.Deployment.ManifestUtilities.Manifest.Description" /> property to an XML file.</summary>
    </member>
    <member name="P:Microsoft.Build.Tasks.Deployment.ManifestUtilities.Manifest.XmlFileReferences">
      <summary>Gets or sets a property that is used to serialize the <see cref="P:Microsoft.Build.Tasks.Deployment.ManifestUtilities.Manifest.FileReferences" /> property to an XML file.</summary>
    </member>
    <member name="P:Microsoft.Build.Tasks.Deployment.ManifestUtilities.Manifest.XmlSchema">
      <summary>Gets or sets a property that is used to serialize the schema to an XML file.</summary>
    </member>
    <member name="T:Microsoft.Build.Tasks.Deployment.ManifestUtilities.ManifestReader">
      <summary>Reads an XML manifest file into an object representation.</summary>
    </member>
    <member name="M:Microsoft.Build.Tasks.Deployment.ManifestUtilities.ManifestReader.ReadManifest(System.IO.Stream,System.Boolean)">
      <summary>Reads the specified manifest XML and returns an object representation.</summary>
      <returns>A <see cref="T:Microsoft.Build.Tasks.Deployment.ManifestUtilities.Manifest" /> object representation of the manifest. Can be cast to <see cref="T:Microsoft.Build.Tasks.Deployment.ManifestUtilities.AssemblyManifest" />, <see cref="T:Microsoft.Build.Tasks.Deployment.ManifestUtilities.ApplicationManifest" />, or <see cref="T:Microsoft.Build.Tasks.Deployment.ManifestUtilities.DeployManifest" /> to access more specific functionality.</returns>
      <param name="input">Specifies an input stream.</param>
      <param name="preserveStream">Specifies whether to preserve the input stream in the <see cref="P:Microsoft.Build.Tasks.Deployment.ManifestUtilities.Manifest.InputStream" /> property of the resulting manifest object. Used by <see cref="T:Microsoft.Build.Tasks.Deployment.ManifestUtilities.ManifestWriter" /> to reconstitute input which is not represented in the object representation.</param>
    </member>
    <member name="M:Microsoft.Build.Tasks.Deployment.ManifestUtilities.ManifestReader.ReadManifest(System.String,System.Boolean)">
      <summary>Reads the specified manifest XML and returns an object representation.</summary>
      <returns>A <see cref="T:Microsoft.Build.Tasks.Deployment.ManifestUtilities.Manifest" /> object representation of the manifest. Can be cast to <see cref="T:Microsoft.Build.Tasks.Deployment.ManifestUtilities.AssemblyManifest" />, <see cref="T:Microsoft.Build.Tasks.Deployment.ManifestUtilities.ApplicationManifest" />, or <see cref="T:Microsoft.Build.Tasks.Deployment.ManifestUtilities.DeployManifest" /> to access more specific functionality.</returns>
      <param name="path">The fully qualified path name of the input file. For example, the full path may be c:\directory\folder\filename.manifest.</param>
      <param name="preserveStream">Specifies whether to preserve the input stream in the <see cref="P:Microsoft.Build.Tasks.Deployment.ManifestUtilities.Manifest.InputStream" /> property of the resulting manifest object. Used by <see cref="T:Microsoft.Build.Tasks.Deployment.ManifestUtilities.ManifestWriter" /> to reconstitute input which is not represented in the object representation.</param>
    </member>
    <member name="M:Microsoft.Build.Tasks.Deployment.ManifestUtilities.ManifestReader.ReadManifest(System.String,System.IO.Stream,System.Boolean)">
      <summary>Reads the specified manifest XML and returns an object representation.</summary>
      <returns>A <see cref="T:Microsoft.Build.Tasks.Deployment.ManifestUtilities.Manifest" /> object representation of the manifest. Can be cast to <see cref="T:Microsoft.Build.Tasks.Deployment.ManifestUtilities.AssemblyManifest" />, <see cref="T:Microsoft.Build.Tasks.Deployment.ManifestUtilities.ApplicationManifest" />, or <see cref="T:Microsoft.Build.Tasks.Deployment.ManifestUtilities.DeployManifest" /> to access more specific functionality.</returns>
      <param name="manifestType">Specifies the expected type of the manifest. Valid values are AssemblyManifest, ApplicationManifest, or DeployManifest.</param>
      <param name="input">Specifies an input stream.</param>
      <param name="preserveStream">Specifies whether to preserve the input stream in the <see cref="P:Microsoft.Build.Tasks.Deployment.ManifestUtilities.Manifest.InputStream" /> property of the resulting manifest object. Used by <see cref="T:Microsoft.Build.Tasks.Deployment.ManifestUtilities.ManifestWriter" /> to reconstitute input which is not represented in the object representation.</param>
    </member>
    <member name="M:Microsoft.Build.Tasks.Deployment.ManifestUtilities.ManifestReader.ReadManifest(System.String,System.String,System.Boolean)">
      <summary>Reads the specified manifest XML and returns an object representation.</summary>
      <returns>A <see cref="T:Microsoft.Build.Tasks.Deployment.ManifestUtilities.Manifest" /> object representation of the manifest. Can be cast to <see cref="T:Microsoft.Build.Tasks.Deployment.ManifestUtilities.AssemblyManifest" />, <see cref="T:Microsoft.Build.Tasks.Deployment.ManifestUtilities.ApplicationManifest" />, or <see cref="T:Microsoft.Build.Tasks.Deployment.ManifestUtilities.DeployManifest" /> to access more specific functionality.</returns>
      <param name="manifestType">Specifies the expected type of the manifest. Valid values are AssemblyManifest, ApplicationManifest, or DeployManifest.</param>
      <param name="path">The path name of the input file.</param>
      <param name="preserveStream">Specifies whether to preserve the input stream in the <see cref="P:Microsoft.Build.Tasks.Deployment.ManifestUtilities.Manifest.InputStream" /> property of the resulting manifest object. Used by <see cref="T:Microsoft.Build.Tasks.Deployment.ManifestUtilities.ManifestWriter" /> to reconstitute input which is not represented in the object representation.</param>
    </member>
    <member name="T:Microsoft.Build.Tasks.Deployment.ManifestUtilities.ManifestWriter">
      <summary>Writes an object representation of a manifest to XML.</summary>
    </member>
    <member name="M:Microsoft.Build.Tasks.Deployment.ManifestUtilities.ManifestWriter.WriteManifest(Microsoft.Build.Tasks.Deployment.ManifestUtilities.Manifest)">
      <summary>Writes the specified manifest object to XML.</summary>
      <param name="manifest">The manifest object.</param>
    </member>
    <member name="M:Microsoft.Build.Tasks.Deployment.ManifestUtilities.ManifestWriter.WriteManifest(Microsoft.Build.Tasks.Deployment.ManifestUtilities.Manifest,System.IO.Stream)">
      <summary>Writes the specified manifest object to XML.</summary>
      <param name="manifest">The manifest object.</param>
      <param name="output">Specifies an output stream.</param>
    </member>
    <member name="M:Microsoft.Build.Tasks.Deployment.ManifestUtilities.ManifestWriter.WriteManifest(Microsoft.Build.Tasks.Deployment.ManifestUtilities.Manifest,System.String)">
      <summary>Writes the specified manifest object to XML.</summary>
      <param name="manifest">The manifest object.</param>
      <param name="path">The path name of the output file.</param>
    </member>
    <member name="T:Microsoft.Build.Tasks.Deployment.ManifestUtilities.OutputMessage">
      <summary>This class represents an error, warning, or informational output message for the manifest generator.</summary>
    </member>
    <member name="M:Microsoft.Build.Tasks.Deployment.ManifestUtilities.OutputMessage.GetArguments">
      <summary>Returns a string array of arguments for the message.</summary>
      <returns>Returns a string array of arguments for the message.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.Deployment.ManifestUtilities.OutputMessage.Name">
      <summary>Returns an identifier for the message.</summary>
      <returns>A string indicating the message name.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.Deployment.ManifestUtilities.OutputMessage.Text">
      <summary>Returns the text of the message.</summary>
      <returns>A string indicating the message text.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.Deployment.ManifestUtilities.OutputMessage.Type">
      <summary>Returns whether the message is an error, warning, or informational message.</summary>
      <returns>An <see cref="T:Microsoft.Build.Tasks.Deployment.ManifestUtilities.OutputMessageType" /> object indicating the message type.</returns>
    </member>
    <member name="T:Microsoft.Build.Tasks.Deployment.ManifestUtilities.OutputMessageCollection">
      <summary>This class represent a collection for output messages.</summary>
    </member>
    <member name="M:Microsoft.Build.Tasks.Deployment.ManifestUtilities.OutputMessageCollection.Clear">
      <summary>Removes all objects from the collection.</summary>
    </member>
    <member name="P:Microsoft.Build.Tasks.Deployment.ManifestUtilities.OutputMessageCollection.ErrorCount">
      <summary>Gets the number of error messages in the collection.</summary>
      <returns>The number of error messages in the collection.</returns>
    </member>
    <member name="M:Microsoft.Build.Tasks.Deployment.ManifestUtilities.OutputMessageCollection.GetEnumerator">
      <summary>Returns an enumerator that can iterate through the collection.</summary>
      <returns>Returns an <see cref="T:System.Collections.IEnumerator" /> object that can iterate through the collection.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.Deployment.ManifestUtilities.OutputMessageCollection.Item(System.Int32)">
      <summary>Gets the element at the specified index.</summary>
      <returns>Returns the file reference instance.</returns>
      <param name="index">The zero-based index of the entry to get.</param>
    </member>
    <member name="P:Microsoft.Build.Tasks.Deployment.ManifestUtilities.OutputMessageCollection.WarningCount">
      <summary>Gets the number of warning messages in the collection.</summary>
      <returns>The number of warning messages in the collection.</returns>
    </member>
    <member name="T:Microsoft.Build.Tasks.Deployment.ManifestUtilities.OutputMessageType">
      <summary>Specifies the type of output message as either an error, warning, or informational.</summary>
    </member>
    <member name="F:Microsoft.Build.Tasks.Deployment.ManifestUtilities.OutputMessageType.Info">
      <summary>Indicates an informational message.</summary>
    </member>
    <member name="F:Microsoft.Build.Tasks.Deployment.ManifestUtilities.OutputMessageType.Warning">
      <summary>Indicates a warning.</summary>
    </member>
    <member name="F:Microsoft.Build.Tasks.Deployment.ManifestUtilities.OutputMessageType.Error">
      <summary>Indicates an error.</summary>
    </member>
    <member name="T:Microsoft.Build.Tasks.Deployment.ManifestUtilities.ProxyStub">
      <summary>Represents a proxy in a ClickOnce application manifest. .</summary>
    </member>
    <member name="M:Microsoft.Build.Tasks.Deployment.ManifestUtilities.ProxyStub.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.Build.Tasks.Deployment.ManifestUtilities.ProxyStub" /> class. </summary>
    </member>
    <member name="P:Microsoft.Build.Tasks.Deployment.ManifestUtilities.ProxyStub.BaseInterface">
      <summary>Gets the IID of the interface from which the interface described by the <see cref="P:Microsoft.Build.Tasks.Deployment.ManifestUtilities.ProxyStub.IID" /> property is derived.</summary>
      <returns>The IID of the base interface.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.Deployment.ManifestUtilities.ProxyStub.IID">
      <summary>Gets the IID of the interface for which the proxy is being declared.</summary>
      <returns>The IID of the interface.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.Deployment.ManifestUtilities.ProxyStub.Name">
      <summary>Gets the name of the component.</summary>
      <returns>The name of the component.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.Deployment.ManifestUtilities.ProxyStub.NumMethods">
      <summary>Gets the number of methods in the component.</summary>
      <returns>The number of methods in the component.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.Deployment.ManifestUtilities.ProxyStub.TlbId">
      <summary>Gets the GUID for the type library for the component.</summary>
      <returns>The GUID for the type library.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.Deployment.ManifestUtilities.ProxyStub.XmlBaseInterface">
      <summary>Gets or sets a property that is used to serialize the <see cref="P:Microsoft.Build.Tasks.Deployment.ManifestUtilities.ProxyStub.BaseInterface" /> property to an XML file.</summary>
      <returns>The value of the <see cref="P:Microsoft.Build.Tasks.Deployment.ManifestUtilities.ProxyStub.BaseInterface" /> property.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.Deployment.ManifestUtilities.ProxyStub.XmlIID">
      <summary>Gets or sets a property that is used to serialize the <see cref="P:Microsoft.Build.Tasks.Deployment.ManifestUtilities.ProxyStub.IID" /> property to an XML file.</summary>
      <returns>The value of the <see cref="P:Microsoft.Build.Tasks.Deployment.ManifestUtilities.ProxyStub.IID" /> property.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.Deployment.ManifestUtilities.ProxyStub.XmlName">
      <summary>Gets or sets a property that is used to serialize the <see cref="P:Microsoft.Build.Tasks.Deployment.ManifestUtilities.ProxyStub.Name" /> property to an XML file.</summary>
      <returns>The value of the <see cref="P:Microsoft.Build.Tasks.Deployment.ManifestUtilities.ProxyStub.Name" /> property.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.Deployment.ManifestUtilities.ProxyStub.XmlNumMethods">
      <summary>Gets or sets a property that is used to serialize the <see cref="P:Microsoft.Build.Tasks.Deployment.ManifestUtilities.ProxyStub.NumMethods" /> property to an XML file.</summary>
      <returns>The value of the <see cref="P:Microsoft.Build.Tasks.Deployment.ManifestUtilities.ProxyStub.NumMethods" /> property.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.Deployment.ManifestUtilities.ProxyStub.XmlTlbId">
      <summary>Gets or sets a property that is used to serialize the <see cref="P:Microsoft.Build.Tasks.Deployment.ManifestUtilities.ProxyStub.TlbId" /> property to an XML file.</summary>
      <returns>The value of the <see cref="P:Microsoft.Build.Tasks.Deployment.ManifestUtilities.ProxyStub.TlbId" /> property.</returns>
    </member>
    <member name="T:Microsoft.Build.Tasks.Deployment.ManifestUtilities.SecurityUtilities">
      <summary>Provides a set of utility functions for manipulating security permision sets and signing.</summary>
    </member>
    <member name="M:Microsoft.Build.Tasks.Deployment.ManifestUtilities.SecurityUtilities.ComputeZonePermissionSet(System.String,System.Security.PermissionSet,System.String[])">
      <summary>Generates a permission set by computing the zone default permission set, removing any excluded permissions, and adding any included permissions.</summary>
      <returns>Returns the generated permission set.</returns>
      <param name="targetZone">Specifies a zone default permission set, which is obtained from machine policy. Valid values are Internet, LocalIntranet, or Custom. If Custom is specified, the generated permission set is based only on the <paramref name="includedPermissionSet" /> parameter.</param>
      <param name="includedPermissionSet">A <see cref="P:Microsoft.Build.Tasks.Deployment.ManifestUtilities.TrustInfo.PermissionSet" /> object containing the set of permissions to be explicitly included in the generated permission set. Permissions specified in this parameter will be included verbatim in the generated permission set, regardless of <paramref name="targetZone" /> or <paramref name="excludedPermissions" /> parameters.</param>
      <param name="excludedPermissions">An array of permission identity strings to be excluded from the zone default permission set. Permission identity strings can be computed using the <see cref="M:Microsoft.Build.Tasks.Deployment.ManifestUtilities.SecurityUtilities.PermissionSetToIdentityList(System.Security.PermissionSet)" /> method. This parameter is ignored if <paramref name="targetZone" /> is not Internet or LocalIntranet.</param>
    </member>
    <member name="M:Microsoft.Build.Tasks.Deployment.ManifestUtilities.SecurityUtilities.IdentityListToPermissionSet(System.String[])">
      <summary>Converts an array of permission identity strings to a permission set object.</summary>
      <returns>Returns the converted permission set.</returns>
      <param name="ids">An array of permission identity strings.</param>
    </member>
    <member name="M:Microsoft.Build.Tasks.Deployment.ManifestUtilities.SecurityUtilities.PermissionSetToIdentityList(System.Security.PermissionSet)">
      <summary>Converts a permission set object to an array of permission identity strings.</summary>
      <returns>Returns an array of permission identity strings.</returns>
      <param name="permissionSet">The input permission set to be converted.</param>
    </member>
    <member name="M:Microsoft.Build.Tasks.Deployment.ManifestUtilities.SecurityUtilities.SignFile(System.Security.Cryptography.X509Certificates.X509Certificate2,System.Uri,System.String)">
      <summary>Signs a ClickOnce manifest or PE file.</summary>
      <param name="cert">The certificate to be used to sign the file.</param>
      <param name="timestampUrl">Indicates that the file is to be timestamped by the timestamp server at the specified HTTP address. This parameter can be NULL if you do not want a timestamp.</param>
      <param name="path">The name of the file to sign.</param>
    </member>
    <member name="M:Microsoft.Build.Tasks.Deployment.ManifestUtilities.SecurityUtilities.SignFile(System.String,System.Security.SecureString,System.Uri,System.String)">
      <summary>Signs a ClickOnce manifest.</summary>
      <param name="certPath">The certificate to be used to sign the file. The certificate must contain a private key. The KeyUsage extension is optional, but if it is present, DigitalSignature must be set to True. The EnhancedKeyUsage extension is also optional, but if it is present, the certificate must contain object identifier (OID) support.</param>
      <param name="certPassword">The certificate password.</param>
      <param name="timestampUrl">Indicates that the file is to be timestamped by the timestamp server at the specified HTTP address. This parameter can be NULL if you do not want a timestamp.</param>
      <param name="path">The name of the file to sign.</param>
    </member>
    <member name="M:Microsoft.Build.Tasks.Deployment.ManifestUtilities.SecurityUtilities.SignFile(System.String,System.Uri,System.String)">
      <summary>Signs a ClickOnce manifest or PE file.</summary>
      <param name="certThumbprint">Specifies the thumbprint, which is the SHA1 hash of the signing certificate, which is kept in your personal certificate store.</param>
      <param name="timestampUrl">Indicates that the file is to be timestamped by the timestamp server at the specified HTTP address. This parameter can be NULL if you do not want a timestamp.</param>
      <param name="path">The name of the file to sign.</param>
    </member>
    <member name="M:Microsoft.Build.Tasks.Deployment.ManifestUtilities.SecurityUtilities.XmlToPermissionSet(System.Xml.XmlElement)">
      <summary>Converts an XML element to a permission set object.</summary>
      <returns>The converted permission set object.</returns>
      <param name="element">An XML representation of the permission set.</param>
    </member>
    <member name="T:Microsoft.Build.Tasks.Deployment.ManifestUtilities.TrustInfo">
      <summary>This class represents the application security trust information.</summary>
    </member>
    <member name="M:Microsoft.Build.Tasks.Deployment.ManifestUtilities.TrustInfo.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.Build.Tasks.Deployment.ManifestUtilities.TrustInfo" /> class.</summary>
    </member>
    <member name="M:Microsoft.Build.Tasks.Deployment.ManifestUtilities.TrustInfo.Clear">
      <summary>Resets the <see cref="T:Microsoft.Build.Tasks.Deployment.ManifestUtilities.TrustInfo" /> object to its default state of full trust.</summary>
    </member>
    <member name="P:Microsoft.Build.Tasks.Deployment.ManifestUtilities.TrustInfo.HasUnmanagedCodePermission">
      <summary>Determines whether the application has permission to call unmanaged code.</summary>
      <returns>A Boolean value indicating whether the application has permission to call unmanaged code.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.Deployment.ManifestUtilities.TrustInfo.IsFullTrust">
      <summary>Determines whether the application is full trust or partial trust.</summary>
      <returns>A Boolean value indicating whether the application is full trust or partial trust.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.Deployment.ManifestUtilities.TrustInfo.PermissionSet">
      <summary>Gets or sets the permission set object for the application trust.</summary>
      <returns>A <see cref="P:Microsoft.Build.Tasks.Deployment.ManifestUtilities.TrustInfo.PermissionSet" /> object for the application trust.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.Deployment.ManifestUtilities.TrustInfo.PreserveFullTrustPermissionSet">
      <summary>Gets or sets whether to preserve partial trust permission when the full trust flag is set.</summary>
      <returns>A Boolean value indicating whether to preserve partial trust permission when the full trust flag is set.</returns>
    </member>
    <member name="M:Microsoft.Build.Tasks.Deployment.ManifestUtilities.TrustInfo.Read(System.IO.Stream)">
      <summary>Reads the application trust from an XML file.</summary>
      <param name="input">Specifies an input stream.</param>
    </member>
    <member name="M:Microsoft.Build.Tasks.Deployment.ManifestUtilities.TrustInfo.Read(System.String)">
      <summary>Reads the application trust from an XML file.</summary>
      <param name="path">The name of the input file.</param>
    </member>
    <member name="M:Microsoft.Build.Tasks.Deployment.ManifestUtilities.TrustInfo.ReadManifest(System.IO.Stream)">
      <summary>Reads the application trust from a ClickOnce application manifest.</summary>
      <param name="input">Specifies an input stream.</param>
    </member>
    <member name="M:Microsoft.Build.Tasks.Deployment.ManifestUtilities.TrustInfo.ReadManifest(System.String)">
      <summary>Reads the application trust from a ClickOnce application manifest.</summary>
      <param name="path">The name of the input file.</param>
    </member>
    <member name="P:Microsoft.Build.Tasks.Deployment.ManifestUtilities.TrustInfo.SameSiteAccess">
      <summary>Gets or sets the level of same site access permitted, specifying whether the application has permission to communicate with the server from which it was deployed.</summary>
      <returns>A string indicating the level of same site access permitted. The values can be site or none.site specifies that the application can call Web services at the same URL from which it was deployed; if deployed from a share, the application has permission to read files from that share.none specifies that the application can neither access Web services from the same URL from which it was deployed, nor access files from the share from which it was deployed."Application" refers to the application for which the manifest is being read (using <see cref="M:Microsoft.Build.Tasks.Deployment.ManifestUtilities.TrustInfo.ReadManifest(System.IO.Stream)" />).</returns>
    </member>
    <member name="M:Microsoft.Build.Tasks.Deployment.ManifestUtilities.TrustInfo.ToString">
      <summary>Returns all the information in the application security trust object as a string.</summary>
      <returns>A string containing the information in the application security trust object.</returns>
    </member>
    <member name="M:Microsoft.Build.Tasks.Deployment.ManifestUtilities.TrustInfo.Write(System.IO.Stream)">
      <summary>Writes the application trust to an XML file.</summary>
      <param name="output">Specifies an output stream.</param>
    </member>
    <member name="M:Microsoft.Build.Tasks.Deployment.ManifestUtilities.TrustInfo.Write(System.String)">
      <summary>Writes the application trust to an XML file.</summary>
      <param name="path">The name of the output file.</param>
    </member>
    <member name="M:Microsoft.Build.Tasks.Deployment.ManifestUtilities.TrustInfo.WriteManifest(System.IO.Stream)">
      <summary>Writes the application trust to a new template ClickOnce application manifest.</summary>
      <param name="output">Specifies an output stream to which to write the updated manifest file.</param>
    </member>
    <member name="M:Microsoft.Build.Tasks.Deployment.ManifestUtilities.TrustInfo.WriteManifest(System.IO.Stream,System.IO.Stream)">
      <summary>Updates an existing ClickOnce application manifest with the specified trust.</summary>
      <param name="input">Specifies an input stream containing the manifest to be updated.</param>
      <param name="output">Specifies an output stream to which to write the updated manifest file.</param>
    </member>
    <member name="M:Microsoft.Build.Tasks.Deployment.ManifestUtilities.TrustInfo.WriteManifest(System.String)">
      <summary>Writes the application trust to a ClickOnce application manifest.</summary>
      <param name="path">The name of the output file.</param>
    </member>
    <member name="T:Microsoft.Build.Tasks.Deployment.ManifestUtilities.TypeLib">
      <summary>Represents a type library.</summary>
    </member>
    <member name="M:Microsoft.Build.Tasks.Deployment.ManifestUtilities.TypeLib.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.Build.Tasks.Deployment.ManifestUtilities.TypeLib" /> class. </summary>
    </member>
    <member name="P:Microsoft.Build.Tasks.Deployment.ManifestUtilities.TypeLib.Flags">
      <summary>Gets the string representation of the type library flags for this type library.</summary>
    </member>
    <member name="P:Microsoft.Build.Tasks.Deployment.ManifestUtilities.TypeLib.HelpDirectory">
      <summary>Gets the directory where the Help file for the types in the type library is located.</summary>
    </member>
    <member name="P:Microsoft.Build.Tasks.Deployment.ManifestUtilities.TypeLib.ResourceId">
      <summary>Gets the hexadecimal string representation of the locale identifier (LCID).</summary>
    </member>
    <member name="P:Microsoft.Build.Tasks.Deployment.ManifestUtilities.TypeLib.TlbId">
      <summary>Gets the unique ID of the type library.</summary>
    </member>
    <member name="P:Microsoft.Build.Tasks.Deployment.ManifestUtilities.TypeLib.Version">
      <summary>Gets the version number of the type library.</summary>
    </member>
    <member name="P:Microsoft.Build.Tasks.Deployment.ManifestUtilities.TypeLib.XmlFlags">
      <summary>Get or sets a property that is used to serialize the <see cref="P:Microsoft.Build.Tasks.Deployment.ManifestUtilities.TypeLib.Flags" /> property to an XML file.</summary>
    </member>
    <member name="P:Microsoft.Build.Tasks.Deployment.ManifestUtilities.TypeLib.XmlHelpDirectory">
      <summary>Get or sets a property that is used to serialize the <see cref="P:Microsoft.Build.Tasks.Deployment.ManifestUtilities.TypeLib.HelpDirectory" /> property to an XML file.</summary>
    </member>
    <member name="P:Microsoft.Build.Tasks.Deployment.ManifestUtilities.TypeLib.XmlResourceId">
      <summary>Get or sets a property that is used to serialize the <see cref="P:Microsoft.Build.Tasks.Deployment.ManifestUtilities.TypeLib.ResourceId" /> property to an XML file.</summary>
    </member>
    <member name="P:Microsoft.Build.Tasks.Deployment.ManifestUtilities.TypeLib.XmlTlbId">
      <summary>Get or sets a property that is used to serialize the <see cref="P:Microsoft.Build.Tasks.Deployment.ManifestUtilities.TypeLib.TlbId" /> property to an XML file.</summary>
    </member>
    <member name="P:Microsoft.Build.Tasks.Deployment.ManifestUtilities.TypeLib.XmlVersion">
      <summary>Get or sets a property that is used to serialize the <see cref="P:Microsoft.Build.Tasks.Deployment.ManifestUtilities.TypeLib.Version" /> property to an XML file.</summary>
    </member>
    <member name="T:Microsoft.Build.Tasks.Deployment.ManifestUtilities.UpdateMode">
      <summary>Specifies how the application checks for updates.</summary>
    </member>
    <member name="F:Microsoft.Build.Tasks.Deployment.ManifestUtilities.UpdateMode.Background">
      <summary>Check for updates in the background, after the application starts.</summary>
    </member>
    <member name="F:Microsoft.Build.Tasks.Deployment.ManifestUtilities.UpdateMode.Foreground">
      <summary>Check for updates in the foreground, before the application starts.</summary>
    </member>
    <member name="T:Microsoft.Build.Tasks.Deployment.ManifestUtilities.UpdateUnit">
      <summary>Specifies the units for the update interval.</summary>
    </member>
    <member name="F:Microsoft.Build.Tasks.Deployment.ManifestUtilities.UpdateUnit.Hours">
      <summary>Update interval is in hours.</summary>
    </member>
    <member name="F:Microsoft.Build.Tasks.Deployment.ManifestUtilities.UpdateUnit.Days">
      <summary>Update interval is in days.</summary>
    </member>
    <member name="F:Microsoft.Build.Tasks.Deployment.ManifestUtilities.UpdateUnit.Weeks">
      <summary>Update interval is in weeks.</summary>
    </member>
    <member name="T:Microsoft.Build.Tasks.Deployment.ManifestUtilities.WindowClass">
      <summary>Represents a window class in an application manifest.</summary>
    </member>
    <member name="M:Microsoft.Build.Tasks.Deployment.ManifestUtilities.WindowClass.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.Build.Tasks.Deployment.ManifestUtilities.WindowClass" /> class. </summary>
    </member>
    <member name="M:Microsoft.Build.Tasks.Deployment.ManifestUtilities.WindowClass.#ctor(System.String,System.Boolean)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.Build.Tasks.Deployment.ManifestUtilities.WindowClass" /> class, specifying information about the versioning status of the window class. </summary>
      <param name="name">The name of the class.</param>
      <param name="versioned">Controls whether the internal window class name that is used in registration contains the version of the assembly that contains the window class.</param>
    </member>
    <member name="P:Microsoft.Build.Tasks.Deployment.ManifestUtilities.WindowClass.Name">
      <summary>Gets the name of the window class.</summary>
      <returns>The name of the window class.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.Deployment.ManifestUtilities.WindowClass.Versioned">
      <summary>Gets a value that controls whether the internal window class name that is used in registration contains the version of the assembly that contains the window class.</summary>
      <returns>yes if the name that is used in registration contains the version of the assembly; otherwise, no. The default is yes.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.Deployment.ManifestUtilities.WindowClass.XmlName">
      <summary>Gets or sets a property that is used to serialize the <see cref="P:Microsoft.Build.Tasks.Deployment.ManifestUtilities.WindowClass.Name" /> property to an XML file.</summary>
      <returns>The value of the <see cref="P:Microsoft.Build.Tasks.Deployment.ManifestUtilities.WindowClass.Name" /> property.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.Deployment.ManifestUtilities.WindowClass.XmlVersioned">
      <summary>Gets or sets a property that is used to serialize the <see cref="P:Microsoft.Build.Tasks.Deployment.ManifestUtilities.WindowClass.Versioned" /> property to an XML file.</summary>
      <returns>The value of the <see cref="P:Microsoft.Build.Tasks.Deployment.ManifestUtilities.WindowClass.Versioned" /> property.</returns>
    </member>
    <member name="T:Microsoft.Build.Tasks.Hosting.ICscHostObject">
      <summary>Defines an interface that allows the Csc task to communicate with the host integrated development environment (IDE).</summary>
    </member>
    <member name="M:Microsoft.Build.Tasks.Hosting.ICscHostObject.BeginInitialization">
      <summary>Begins the initialization of the <see cref="T:Microsoft.Build.Tasks.Hosting.ICscHostObject" />.</summary>
    </member>
    <member name="M:Microsoft.Build.Tasks.Hosting.ICscHostObject.Compile">
      <summary>Compiles the project.</summary>
      <returns>true if the method was successful; otherwise, false.</returns>
    </member>
    <member name="M:Microsoft.Build.Tasks.Hosting.ICscHostObject.EndInitialization(System.String@,System.Int32@)">
      <summary>Ends the initialization of the <see cref="T:Microsoft.Build.Tasks.Hosting.ICscHostObject" /> with the specified error message and code.</summary>
      <returns>true if the method was successful; otherwise, false.</returns>
      <param name="errorMessage">The error message.</param>
      <param name="errorCode">The error code.</param>
    </member>
    <member name="M:Microsoft.Build.Tasks.Hosting.ICscHostObject.IsDesignTime">
      <summary>Returns a value indicating whether the integrated development environment (IDE) is currently in design time mode.</summary>
      <returns>true if the IDE is currently in design time mode; otherwise, false.</returns>
    </member>
    <member name="M:Microsoft.Build.Tasks.Hosting.ICscHostObject.IsUpToDate">
      <summary>Returns a value indicating whether the compiled project is up-to-date.</summary>
      <returns>true if the compiled project is up-to-date; otherwise, false.</returns>
    </member>
    <member name="M:Microsoft.Build.Tasks.Hosting.ICscHostObject.SetAdditionalLibPaths(System.String[])">
      <summary>Specifies additional directories to search for references.</summary>
      <returns>true if the method was successful; otherwise, false.</returns>
      <param name="additionalLibPaths">An array of directories to search for references.</param>
    </member>
    <member name="M:Microsoft.Build.Tasks.Hosting.ICscHostObject.SetAddModules(System.String[])">
      <summary>Specifies one or more modules to be part of the assembly.</summary>
      <returns>true if the method was successful; otherwise, false.</returns>
      <param name="addModules">An array of modules to be part of the assembly.</param>
    </member>
    <member name="M:Microsoft.Build.Tasks.Hosting.ICscHostObject.SetAllowUnsafeBlocks(System.Boolean)">
      <summary>Specifies a value indicating whether to allow code that uses the unsafe keyword to compile.</summary>
      <returns>true if the method was successful; otherwise, false.</returns>
      <param name="allowUnsafeBlocks">true to allow code that uses the unsafe keyword to compile; otherwise, false.</param>
    </member>
    <member name="M:Microsoft.Build.Tasks.Hosting.ICscHostObject.SetBaseAddress(System.String)">
      <summary>Specifies the preferred base address at which to load a DLL.</summary>
      <returns>true if the method was successful; otherwise, false.</returns>
      <param name="baseAddress">The preferred base address at which to load a DLL.</param>
    </member>
    <member name="M:Microsoft.Build.Tasks.Hosting.ICscHostObject.SetCheckForOverflowUnderflow(System.Boolean)">
      <summary>Specifies a value indicating whether integer arithmetic that overflows the bounds of the data type causes an exception at run time.</summary>
      <returns>true if the method was successful; otherwise, false.</returns>
      <param name="checkForOverflowUnderflow">true to cause an exception when integer arithmetic overflows the bounds of the data type; otherwise, false.</param>
    </member>
    <member name="M:Microsoft.Build.Tasks.Hosting.ICscHostObject.SetCodePage(System.Int32)">
      <summary>Specifies the code page to use for all source code files in the compilation.</summary>
      <returns>true if the method was successful; otherwise, false.</returns>
      <param name="codePage">The code page to use for all source code files in the compilation.</param>
    </member>
    <member name="M:Microsoft.Build.Tasks.Hosting.ICscHostObject.SetDebugType(System.String)">
      <summary>Specifies the debug type.</summary>
      <returns>true if the method was successful; otherwise, false.</returns>
      <param name="debugType">The debug type, which can be full or pdbonly.</param>
    </member>
    <member name="M:Microsoft.Build.Tasks.Hosting.ICscHostObject.SetDefineConstants(System.String)">
      <summary>Specifies the preprocessor symbols to define.</summary>
      <returns>true if the method was successful; otherwise, false.</returns>
      <param name="defineConstants">The preprocessor symbols to define.</param>
    </member>
    <member name="M:Microsoft.Build.Tasks.Hosting.ICscHostObject.SetDelaySign(System.Boolean,System.Boolean)">
      <summary>Specifies a value indicating whether to create a fully signed assembly.</summary>
      <returns>true if the method was successful; otherwise, false.</returns>
      <param name="delaySignExplicitlySet">true if the DelaySign parameter is explicitly set; otherwise, false.</param>
      <param name="delaySign">true if you want to create a fully signed assembly; false if you only want to place the public key in the assembly.</param>
    </member>
    <member name="M:Microsoft.Build.Tasks.Hosting.ICscHostObject.SetDisabledWarnings(System.String)">
      <summary>Specifies the list of warnings to disable.</summary>
      <returns>true if the method was successful; otherwise, false.</returns>
      <param name="disabledWarnings">The list of warnings to disable. Multiple warnings are separated with a comma.</param>
    </member>
    <member name="M:Microsoft.Build.Tasks.Hosting.ICscHostObject.SetDocumentationFile(System.String)">
      <summary>Specifies the XML file in which to save processed documentation comments.</summary>
      <returns>true if the method was successful; otherwise, false.</returns>
      <param name="documentationFile">A string that contains the name of the file in which to save processed documentation comments.</param>
    </member>
    <member name="M:Microsoft.Build.Tasks.Hosting.ICscHostObject.SetEmitDebugInformation(System.Boolean)">
      <summary>Specifies a value indicating whether to generate debugging information and place it in a program database (.pdb) file.</summary>
      <returns>true if the method was successful; otherwise, false.</returns>
      <param name="emitDebugInformation">true to generate debugging information and place it in a .pdb file; otherwise, false.</param>
    </member>
    <member name="M:Microsoft.Build.Tasks.Hosting.ICscHostObject.SetErrorReport(System.String)">
      <summary>Specifies a value that indicates how internal compiler errors are reported to Microsoft.</summary>
      <returns>true if the method was successful; otherwise, false.</returns>
      <param name="errorReport">A value specifying how internal compiler errors are reported to Microsoft. This value can be prompt, send, or none.</param>
    </member>
    <member name="M:Microsoft.Build.Tasks.Hosting.ICscHostObject.SetFileAlignment(System.Int32)">
      <summary>Specifies the size of sections in the output file.</summary>
      <returns>true if the method was successful; otherwise, false.</returns>
      <param name="fileAlignment">The size of sections in the output file.</param>
    </member>
    <member name="M:Microsoft.Build.Tasks.Hosting.ICscHostObject.SetGenerateFullPaths(System.Boolean)">
      <summary>Specifies a value indicating whether to specify the absolute path to the file in the compiler output.</summary>
      <returns>true if the method was successful; otherwise, false.</returns>
      <param name="generateFullPaths">true specify the absolute path to the file in the compiler output; false to specify only the name of the file in the compiler output.</param>
    </member>
    <member name="M:Microsoft.Build.Tasks.Hosting.ICscHostObject.SetKeyContainer(System.String)">
      <summary>Specifies the name of the cryptographic key container.</summary>
      <returns>true if the method was successful; otherwise, false.</returns>
      <param name="keyContainer">The name of the cryptographic key container.</param>
    </member>
    <member name="M:Microsoft.Build.Tasks.Hosting.ICscHostObject.SetKeyFile(System.String)">
      <summary>Specifies the file name containing the cryptographic key.</summary>
      <returns>true if the method was successful; otherwise, false.</returns>
      <param name="keyFile">The name of the file containing the cryptographic key.</param>
    </member>
    <member name="M:Microsoft.Build.Tasks.Hosting.ICscHostObject.SetLangVersion(System.String)">
      <summary>Specifies the version of the language to use.</summary>
      <returns>true if the method was successful; otherwise, false.</returns>
      <param name="langVersion">The version of the language to use.</param>
    </member>
    <member name="M:Microsoft.Build.Tasks.Hosting.ICscHostObject.SetLinkResources(Microsoft.Build.Framework.ITaskItem[])">
      <summary>Creates links to the specified .NET Framework resources in the output file; the resource files are not placed in the output file.</summary>
      <returns>true if the method was successful; otherwise, false.</returns>
      <param name="linkResources">The .NET Framework resources to link to the output file.</param>
    </member>
    <member name="M:Microsoft.Build.Tasks.Hosting.ICscHostObject.SetMainEntryPoint(System.String,System.String)">
      <summary>Specifies the location of the Main method.</summary>
      <returns>true if the method was successful; otherwise, false.</returns>
      <param name="targetType">The file format of the output file. This value can be library, exe, module, or winexe.</param>
      <param name="mainEntryPoint">The location of the Main method.</param>
    </member>
    <member name="M:Microsoft.Build.Tasks.Hosting.ICscHostObject.SetModuleAssemblyName(System.String)">
      <summary>Specifies an assembly whose non-public types a .netmodule can access.</summary>
      <returns>true if the method was successful; otherwise, false.</returns>
      <param name="moduleAssemblyName">An assembly whose non-public types a .netmodule can access.</param>
    </member>
    <member name="M:Microsoft.Build.Tasks.Hosting.ICscHostObject.SetNoConfig(System.Boolean)">
      <summary>Specifies a value indicating whether to prevent the compiler from compiling with the csc.rsp file.</summary>
      <returns>true if the method was successful; otherwise, false.</returns>
      <param name="noConfig">true to prevent the compiler from compiling with the csc.rsp file; otherwise, false.</param>
    </member>
    <member name="M:Microsoft.Build.Tasks.Hosting.ICscHostObject.SetNoStandardLib(System.Boolean)">
      <summary>Specifies a value indicating whether to prevent the import of mscorlib.dll.</summary>
      <returns>true if the method was successful; otherwise, false.</returns>
      <param name="noStandardLib">true to prevent the import of mscorlib.dll; otherwise, false.</param>
    </member>
    <member name="M:Microsoft.Build.Tasks.Hosting.ICscHostObject.SetOptimize(System.Boolean)">
      <summary>Specifies a value indicating whether to enable optimizations.</summary>
      <returns>true if the method was successful; otherwise, false.</returns>
      <param name="optimize">true to enable optimizations; otherwise, false.</param>
    </member>
    <member name="M:Microsoft.Build.Tasks.Hosting.ICscHostObject.SetOutputAssembly(System.String)">
      <summary>Specifies the name of the output file.</summary>
      <returns>true if the method was successful; otherwise, false.</returns>
      <param name="outputAssembly">The name of the output file.</param>
    </member>
    <member name="M:Microsoft.Build.Tasks.Hosting.ICscHostObject.SetPdbFile(System.String)">
      <summary>Specifies the program database (.pdb) file in which to place generated debugging information.</summary>
      <returns>true if the method was successful; otherwise, false.</returns>
      <param name="pdbFile">The .pdb file in which to place generated debugging information.</param>
    </member>
    <member name="M:Microsoft.Build.Tasks.Hosting.ICscHostObject.SetPlatform(System.String)">
      <summary>Specifies the processor platform to be targeted by the output file.</summary>
      <returns>true if the method was successful; otherwise, false.</returns>
      <param name="platform">The processor platform to be targeted by the output file. This value can be x86, x64, or anycpu.</param>
    </member>
    <member name="M:Microsoft.Build.Tasks.Hosting.ICscHostObject.SetReferences(Microsoft.Build.Framework.ITaskItem[])">
      <summary>Specifies the items from which to import public type information into the current project.</summary>
      <returns>true if the method was successful; otherwise, false.</returns>
      <param name="references">The items from which to import public type information into the current project.</param>
    </member>
    <member name="M:Microsoft.Build.Tasks.Hosting.ICscHostObject.SetResources(Microsoft.Build.Framework.ITaskItem[])">
      <summary>Specifies the .NET Framework resources to embed into the output file.</summary>
      <returns>true if the method was successful; otherwise, false.</returns>
      <param name="resources">The .NET Framework resources to embed into the output file.</param>
    </member>
    <member name="M:Microsoft.Build.Tasks.Hosting.ICscHostObject.SetResponseFiles(Microsoft.Build.Framework.ITaskItem[])">
      <summary>Specifies the response files that contain commands for the compiler.</summary>
      <returns>true if the method was successful; otherwise, false.</returns>
      <param name="responseFiles">The response files that contain commands for the compiler.</param>
    </member>
    <member name="M:Microsoft.Build.Tasks.Hosting.ICscHostObject.SetSources(Microsoft.Build.Framework.ITaskItem[])">
      <summary>Specifies one or more Visual C# source files.</summary>
      <returns>true if the method was successful; otherwise, false.</returns>
      <param name="sources">One or more Visual C# source files.</param>
    </member>
    <member name="M:Microsoft.Build.Tasks.Hosting.ICscHostObject.SetTargetType(System.String)">
      <summary>Specifies the file format of the output file.</summary>
      <returns>true if the method was successful; otherwise, false.</returns>
      <param name="targetType">The file format of the output file. This value can be library, exe, module, or winexe.</param>
    </member>
    <member name="M:Microsoft.Build.Tasks.Hosting.ICscHostObject.SetTreatWarningsAsErrors(System.Boolean)">
      <summary>Specifies a value indicating whether to treat all warnings as errors.</summary>
      <returns>true if the method was successful; otherwise, false.</returns>
      <param name="treatWarningsAsErrors">true to treat all warnings as errors; otherwise, false.</param>
    </member>
    <member name="M:Microsoft.Build.Tasks.Hosting.ICscHostObject.SetWarningLevel(System.Int32)">
      <summary>Specifies the warning level, from 0-4.</summary>
      <returns>true if the method was successful; otherwise, false.</returns>
      <param name="warningLevel">The warning level, from 0-4.</param>
    </member>
    <member name="M:Microsoft.Build.Tasks.Hosting.ICscHostObject.SetWarningsAsErrors(System.String)">
      <summary>Specifies a list of warnings to treat as errors.</summary>
      <returns>true if the method was successful; otherwise, false.</returns>
      <param name="warningsAsErrors">A list of warnings to treat as errors.</param>
    </member>
    <member name="M:Microsoft.Build.Tasks.Hosting.ICscHostObject.SetWarningsNotAsErrors(System.String)">
      <summary>Specifies a list of warnings that are not treated as errors.</summary>
      <returns>true if the method was successful; otherwise, false.</returns>
      <param name="warningsNotAsErrors">A list of warnings that are not treated as errors.</param>
    </member>
    <member name="M:Microsoft.Build.Tasks.Hosting.ICscHostObject.SetWin32Icon(System.String)">
      <summary>Specifies an .ico file to insert into the assembly.</summary>
      <returns>true if the method was successful; otherwise, false.</returns>
      <param name="win32Icon">The .ico file to insert into the assembly.</param>
    </member>
    <member name="M:Microsoft.Build.Tasks.Hosting.ICscHostObject.SetWin32Resource(System.String)">
      <summary>Specifies a Win32 resource (.res) file to insert into the output file.</summary>
      <returns>true if the method was successful; otherwise, false.</returns>
      <param name="win32Resource">A Win32 resource (.res) file to insert into the output file.</param>
    </member>
    <member name="T:Microsoft.Build.Tasks.Hosting.ICscHostObject2">
      <summary>Defines an interface that allows the Csc task to communicate with the host integrated development environment (IDE).</summary>
    </member>
    <member name="M:Microsoft.Build.Tasks.Hosting.ICscHostObject2.SetWin32Manifest(System.String)">
      <summary>Specifies a manifest file to insert into the assembly.</summary>
      <returns>true if the method was successful; otherwise, false.</returns>
      <param name="win32Manifest">The name of the manifest to insert into the assembly.</param>
    </member>
    <member name="T:Microsoft.Build.Tasks.Hosting.ICscHostObject3">
      <summary>Represents the Csc host compiler.</summary>
    </member>
    <member name="M:Microsoft.Build.Tasks.Hosting.ICscHostObject3.SetApplicationConfiguration(System.String)">
      <summary>Set the application configuration.</summary>
      <param name="applicationConfiguration">The application configuration.</param>
    </member>
    <member name="T:Microsoft.Build.Tasks.Hosting.IVbcHostObject">
      <summary>Defines an interface that allows the Vbc task to communicate with the host integrated development environment (IDE).</summary>
    </member>
    <member name="M:Microsoft.Build.Tasks.Hosting.IVbcHostObject.BeginInitialization">
      <summary>Begins the initialization of the <see cref="T:Microsoft.Build.Tasks.Hosting.IVbcHostObject" />.</summary>
    </member>
    <member name="M:Microsoft.Build.Tasks.Hosting.IVbcHostObject.Compile">
      <summary>Compiles the project.</summary>
      <returns>true if the method was successful; otherwise, false.</returns>
    </member>
    <member name="M:Microsoft.Build.Tasks.Hosting.IVbcHostObject.EndInitialization">
      <summary>Ends the initialization of the <see cref="T:Microsoft.Build.Tasks.Hosting.IVbcHostObject" />.</summary>
    </member>
    <member name="M:Microsoft.Build.Tasks.Hosting.IVbcHostObject.IsDesignTime">
      <summary>Returns a value indicating whether the integrated development environment (IDE) is currently in design time mode.</summary>
      <returns>true if the IDE is currently in design time mode; otherwise, false.</returns>
    </member>
    <member name="M:Microsoft.Build.Tasks.Hosting.IVbcHostObject.IsUpToDate">
      <summary>Returns a value indicating whether the compiled project is up-to-date.</summary>
      <returns>true if the compiled project is up-to-date; otherwise, false.</returns>
    </member>
    <member name="M:Microsoft.Build.Tasks.Hosting.IVbcHostObject.SetAdditionalLibPaths(System.String[])">
      <summary>Specifies additional directories to search for references.</summary>
      <returns>true if the method was successful; otherwise, false.</returns>
      <param name="additionalLibPaths">An array of directories to search for references.</param>
    </member>
    <member name="M:Microsoft.Build.Tasks.Hosting.IVbcHostObject.SetAddModules(System.String[])">
      <summary>Specifies one or more modules to be part of the assembly.</summary>
      <returns>true if the method was successful; otherwise, false.</returns>
      <param name="addModules">An array of modules to be part of the assembly.</param>
    </member>
    <member name="M:Microsoft.Build.Tasks.Hosting.IVbcHostObject.SetBaseAddress(System.String,System.String)">
      <summary>Specifies the preferred base address at which to load a DLL.</summary>
      <returns>true if the method was successful; otherwise, false.</returns>
      <param name="targetType">The file format of the output file. This value can be library, exe, module, or winexe.</param>
      <param name="baseAddress">The preferred base address at which to load a DLL.</param>
    </member>
    <member name="M:Microsoft.Build.Tasks.Hosting.IVbcHostObject.SetCodePage(System.Int32)">
      <summary>Specifies the code page to use for all source code files in the compilation.</summary>
      <returns>true if the method was successful; otherwise, false.</returns>
      <param name="codePage">The code page to use for all source code files in the compilation.</param>
    </member>
    <member name="M:Microsoft.Build.Tasks.Hosting.IVbcHostObject.SetDebugType(System.Boolean,System.String)">
      <summary>Specifies the debug type.</summary>
      <returns>true if the method was successful; otherwise, false.</returns>
      <param name="emitDebugInformation">true to generate debugging information and place it in a program database (.pdb) file; otherwise, false.</param>
      <param name="debugType">The debug type, which can be full or pdbonly.</param>
    </member>
    <member name="M:Microsoft.Build.Tasks.Hosting.IVbcHostObject.SetDefineConstants(System.String)">
      <summary>Specifies the preprocessor symbols to define.</summary>
      <returns>true if the method was successful; otherwise, false.</returns>
      <param name="defineConstants">The preprocessor symbols to define.</param>
    </member>
    <member name="M:Microsoft.Build.Tasks.Hosting.IVbcHostObject.SetDelaySign(System.Boolean)">
      <summary>Specifies a value indicating whether to create a fully signed assembly.</summary>
      <returns>true if the method was successful; otherwise, false.</returns>
      <param name="delaySign">true if you want to create a fully signed assembly; false if you only want to place the public key in the assembly.</param>
    </member>
    <member name="M:Microsoft.Build.Tasks.Hosting.IVbcHostObject.SetDisabledWarnings(System.String)">
      <summary>Specifies the list of warnings to disable.</summary>
      <returns>true if the method was successful; otherwise, false.</returns>
      <param name="disabledWarnings">The list of warnings to disable. Multiple warnings are separated with a comma.</param>
    </member>
    <member name="M:Microsoft.Build.Tasks.Hosting.IVbcHostObject.SetDocumentationFile(System.String)">
      <summary>Specifies the XML file in which to save processed documentation comments.</summary>
      <returns>true if the method was successful; otherwise, false.</returns>
      <param name="documentationFile">A string that contains the name of the file in which to save processed documentation comments.</param>
    </member>
    <member name="M:Microsoft.Build.Tasks.Hosting.IVbcHostObject.SetErrorReport(System.String)">
      <summary>Specifies a value that indicates how internal compiler errors are reported to Microsoft.</summary>
      <returns>true if the method was successful; otherwise, false.</returns>
      <param name="errorReport">A value specifying how internal compiler errors are reported to Microsoft. This value can be prompt, send, or none.</param>
    </member>
    <member name="M:Microsoft.Build.Tasks.Hosting.IVbcHostObject.SetFileAlignment(System.Int32)">
      <summary>Specifies the size of sections in the output file.</summary>
      <returns>true if the method was successful; otherwise, false.</returns>
      <param name="fileAlignment">The size of sections in the output file.</param>
    </member>
    <member name="M:Microsoft.Build.Tasks.Hosting.IVbcHostObject.SetGenerateDocumentation(System.Boolean)">
      <summary>Specifies a value indicating whether to generate documentation and place it in an XML file with the name of the executable file or library that the compiler is creating.</summary>
      <returns>true if the method was successful; otherwise, false.</returns>
      <param name="generateDocumentation">true to generate a documentation file; otherwise, false.</param>
    </member>
    <member name="M:Microsoft.Build.Tasks.Hosting.IVbcHostObject.SetImports(Microsoft.Build.Framework.ITaskItem[])">
      <summary>Specifies the namespaces to import.</summary>
      <returns>true if the method was successful; otherwise, false.</returns>
      <param name="importsList">The namespaces to import.</param>
    </member>
    <member name="M:Microsoft.Build.Tasks.Hosting.IVbcHostObject.SetKeyContainer(System.String)">
      <summary>Specifies the name of the cryptographic key container.</summary>
      <returns>true if the method was successful; otherwise, false.</returns>
      <param name="keyContainer">The name of the cryptographic key container.</param>
    </member>
    <member name="M:Microsoft.Build.Tasks.Hosting.IVbcHostObject.SetKeyFile(System.String)">
      <summary>Specifies the file name containing the cryptographic key.</summary>
      <returns>true if the method was successful; otherwise, false.</returns>
      <param name="keyFile">The name of the file containing the cryptographic key.</param>
    </member>
    <member name="M:Microsoft.Build.Tasks.Hosting.IVbcHostObject.SetLinkResources(Microsoft.Build.Framework.ITaskItem[])">
      <summary>Creates links to the specified .NET Framework resources in the output file; the resource files are not placed in the output file.</summary>
      <returns>true if the method was successful; otherwise, false.</returns>
      <param name="linkResources">The .NET Framework resources to link to the output file.</param>
    </member>
    <member name="M:Microsoft.Build.Tasks.Hosting.IVbcHostObject.SetMainEntryPoint(System.String)">
      <summary>Specifies the class or module that contains the location of the Sub Main procedure.</summary>
      <returns>true if the method was successful; otherwise, false.</returns>
      <param name="mainEntryPoint">The class or module that contains the location of the Sub Main procedure.</param>
    </member>
    <member name="M:Microsoft.Build.Tasks.Hosting.IVbcHostObject.SetNoConfig(System.Boolean)">
      <summary>Specifies a value indicating whether to prevent the compiler from compiling with the vbc.rsp file.</summary>
      <returns>true if the method was successful; otherwise, false.</returns>
      <param name="noConfig">true to prevent the compiler from compiling with the vbc.rsp file; otherwise, false.</param>
    </member>
    <member name="M:Microsoft.Build.Tasks.Hosting.IVbcHostObject.SetNoStandardLib(System.Boolean)">
      <summary>Specifies a value indicating whether to prevent the import of mscorlib.dll.</summary>
      <returns>true if the method was successful; otherwise, false.</returns>
      <param name="noStandardLib">true to prevent the import of mscorlib.dll; otherwise, false.</param>
    </member>
    <member name="M:Microsoft.Build.Tasks.Hosting.IVbcHostObject.SetNoWarnings(System.Boolean)">
      <summary>Specifies a value indicating whether the compiler supresses all warnings.</summary>
      <returns>true if the method was successful; otherwise, false.</returns>
      <param name="noWarnings">true to suppress all warnings; otherwise, false.</param>
    </member>
    <member name="M:Microsoft.Build.Tasks.Hosting.IVbcHostObject.SetOptimize(System.Boolean)">
      <summary>Specifies a value indicating whether to enable optimizations.</summary>
      <returns>true if the method was successful; otherwise, false.</returns>
      <param name="optimize">true to enable optimizations; otherwise, false.</param>
    </member>
    <member name="M:Microsoft.Build.Tasks.Hosting.IVbcHostObject.SetOptionCompare(System.String)">
      <summary>Specifies a value indicating how the compiler makes string comparisons.</summary>
      <returns>true if the method was successful; otherwise, false.</returns>
      <param name="optionCompare">A value indicating how the compiler makes string comparisons. The value must be either binary or text.</param>
    </member>
    <member name="M:Microsoft.Build.Tasks.Hosting.IVbcHostObject.SetOptionExplicit(System.Boolean)">
      <summary>Specifies a value indicating whether the explicit declaration of variables is required.</summary>
      <returns>true if the method was successful; otherwise, false.</returns>
      <param name="optionExplicit">true to require the explicit declaration of variables; otherwise, false.</param>
    </member>
    <member name="M:Microsoft.Build.Tasks.Hosting.IVbcHostObject.SetOptionStrict(System.Boolean)">
      <summary>Specifies a value indicating whether the compiler enforces strict type semantics to restrict implicit type conversions.</summary>
      <returns>true if the method was successful; otherwise, false.</returns>
      <param name="optionStrict">true to enforce strict type semantics to restrict implicit type conversions; otherwise, false.</param>
    </member>
    <member name="M:Microsoft.Build.Tasks.Hosting.IVbcHostObject.SetOptionStrictType(System.String)">
      <summary>Specifies that the compiler should warn when strict language semantics are not respected.</summary>
      <returns>true if the method was successful; otherwise, false.</returns>
      <param name="optionStrictType">The string passed to the OptionStrictType parameter.</param>
    </member>
    <member name="M:Microsoft.Build.Tasks.Hosting.IVbcHostObject.SetOutputAssembly(System.String)">
      <summary>Specifies the name of the output file.</summary>
      <returns>true if the method was successful; otherwise, false.</returns>
      <param name="outputAssembly">The name of the output file.</param>
    </member>
    <member name="M:Microsoft.Build.Tasks.Hosting.IVbcHostObject.SetPlatform(System.String)">
      <summary>Specifies the processor platform to be targeted by the output file.</summary>
      <returns>true if the method was successful; otherwise, false.</returns>
      <param name="platform">The processor platform to be targeted by the output file. This value can be x86, x64, Itanium, or anycpu.</param>
    </member>
    <member name="M:Microsoft.Build.Tasks.Hosting.IVbcHostObject.SetReferences(Microsoft.Build.Framework.ITaskItem[])">
      <summary>Specifies the items from which to import public type information into the current project.</summary>
      <returns>true if the method was successful; otherwise, false.</returns>
      <param name="references">The items from which to import public type information into the current project.</param>
    </member>
    <member name="M:Microsoft.Build.Tasks.Hosting.IVbcHostObject.SetRemoveIntegerChecks(System.Boolean)">
      <summary>Specifies a value indicating whether to disable integer overflow error checks.</summary>
      <returns>true if the method was successful; otherwise, false.</returns>
      <param name="removeIntegerChecks">true to remove integer overflow error checks; otherwise, false.</param>
    </member>
    <member name="M:Microsoft.Build.Tasks.Hosting.IVbcHostObject.SetResources(Microsoft.Build.Framework.ITaskItem[])">
      <summary>Specifies the .NET Framework resources to embed into the output file.</summary>
      <returns>true if the method was successful; otherwise, false.</returns>
      <param name="resources">The .NET Framework resources to embed into the output file.</param>
    </member>
    <member name="M:Microsoft.Build.Tasks.Hosting.IVbcHostObject.SetResponseFiles(Microsoft.Build.Framework.ITaskItem[])">
      <summary>Specifies the response files that contain commands for the compiler.</summary>
      <returns>true if the method was successful; otherwise, false.</returns>
      <param name="responseFiles">The response files that contain commands for the compiler.</param>
    </member>
    <member name="M:Microsoft.Build.Tasks.Hosting.IVbcHostObject.SetRootNamespace(System.String)">
      <summary>Specifies the root namespace for all type declarations.</summary>
      <returns>true if the method was successful; otherwise, false.</returns>
      <param name="rootNamespace">The root namespace for all type declarations.</param>
    </member>
    <member name="M:Microsoft.Build.Tasks.Hosting.IVbcHostObject.SetSdkPath(System.String)">
      <summary>Specifies the location of mscorlib.dll and microsoft.visualbasic.dll.</summary>
      <returns>true if the method was successful; otherwise, false.</returns>
      <param name="sdkPath">The location of mscorlib.dll and microsoft.visualbasic.dll.</param>
    </member>
    <member name="M:Microsoft.Build.Tasks.Hosting.IVbcHostObject.SetSources(Microsoft.Build.Framework.ITaskItem[])">
      <summary>Specifies one or more Visual Basic source files.</summary>
      <returns>true if the method was successful; otherwise, false.</returns>
      <param name="sources">One or more Visual Basic source files.</param>
    </member>
    <member name="M:Microsoft.Build.Tasks.Hosting.IVbcHostObject.SetTargetCompactFramework(System.Boolean)">
      <summary>Specifies a value indicating whether to target the .NET Compact Framework.</summary>
      <returns>true if the method was successful; otherwise, false.</returns>
      <param name="targetCompactFramework">true to target the .NET Compact Framework; otherwise, false.</param>
    </member>
    <member name="M:Microsoft.Build.Tasks.Hosting.IVbcHostObject.SetTargetType(System.String)">
      <summary>Specifies the file format of the output file.</summary>
      <returns>true if the method was successful; otherwise, false.</returns>
      <param name="targetType">The file format of the output file. This value can be library, exe, module, or winexe.</param>
    </member>
    <member name="M:Microsoft.Build.Tasks.Hosting.IVbcHostObject.SetTreatWarningsAsErrors(System.Boolean)">
      <summary>Specifies a value indicating whether to treat all warnings as errors.</summary>
      <returns>true if the method was successful; otherwise, false.</returns>
      <param name="treatWarningsAsErrors">true to treat all warnings as errors; otherwise, false.</param>
    </member>
    <member name="M:Microsoft.Build.Tasks.Hosting.IVbcHostObject.SetWarningsAsErrors(System.String)">
      <summary>Specifies a list of warnings to treat as errors.</summary>
      <returns>true if the method was successful; otherwise, false.</returns>
      <param name="warningsAsErrors">A list of warnings to treat as errors.</param>
    </member>
    <member name="M:Microsoft.Build.Tasks.Hosting.IVbcHostObject.SetWarningsNotAsErrors(System.String)">
      <summary>Specifies a list of warnings that are not treated as errors.</summary>
      <returns>true if the method was successful; otherwise, false.</returns>
      <param name="warningsNotAsErrors">A list of warnings that are not treated as errors.</param>
    </member>
    <member name="M:Microsoft.Build.Tasks.Hosting.IVbcHostObject.SetWin32Icon(System.String)">
      <summary>Specifies an .ico file to insert into the assembly.</summary>
      <returns>true if the method was successful; otherwise, false.</returns>
      <param name="win32Icon">The .ico file to insert into the assembly.</param>
    </member>
    <member name="M:Microsoft.Build.Tasks.Hosting.IVbcHostObject.SetWin32Resource(System.String)">
      <summary>Specifies a Win32 resource (.res) file to insert into the output file.</summary>
      <returns>true if the method was successful; otherwise, false.</returns>
      <param name="win32Resource">A Win32 resource (.res) file to insert into the output file.</param>
    </member>
    <member name="T:Microsoft.Build.Tasks.Hosting.IVbcHostObject2">
      <summary>Defines an interface that allows the Vbc task to communicate with the host integrated development environment (IDE).</summary>
    </member>
    <member name="M:Microsoft.Build.Tasks.Hosting.IVbcHostObject2.SetModuleAssemblyName(System.String)">
      <summary>Specifies the name of the module file.</summary>
      <returns>true if the method was successful; otherwise, false.</returns>
      <param name="moduleAssemblyName">A string representing the name of the module file.</param>
    </member>
    <member name="M:Microsoft.Build.Tasks.Hosting.IVbcHostObject2.SetOptionInfer(System.Boolean)">
      <summary>Specifies a value indicating whether variable types must be explicitly declared.</summary>
      <returns>true if the method was successful; otherwise, false.</returns>
      <param name="optionInfer">true to require the explicit declaration of variable types; otherwise, false.</param>
    </member>
    <member name="M:Microsoft.Build.Tasks.Hosting.IVbcHostObject2.SetWin32Manifest(System.String)">
      <summary>Sets a Win32 manifest to use.</summary>
      <param name="win32Manifest">The win32 manifest</param>
    </member>
    <member name="T:Microsoft.Build.Tasks.Hosting.IVbcHostObject3">
      <summary>Defines an interface that allows the Vbc task to communicate with the host integrated development environment (IDE).</summary>
    </member>
    <member name="M:Microsoft.Build.Tasks.Hosting.IVbcHostObject3.SetLanguageVersion(System.String)">
      <summary>Sets the language version.</summary>
      <returns>Returns true if the language version is set; false otherwise.</returns>
      <param name="languageVersion">The language version.</param>
    </member>
    <member name="T:Microsoft.Build.Tasks.Xaml.CommandLineArgumentRelation">
      <summary>Encapsulations the relations between command line arguments.</summary>
    </member>
    <member name="M:Microsoft.Build.Tasks.Xaml.CommandLineArgumentRelation.#ctor(System.String,System.String,System.Boolean,System.String)">
      <summary>Initializes an instance of the <see cref="Microsoft.Build.Tasks.Xaml.CommandLineArgumentRelation" /> class.</summary>
      <param name="argument">The argument</param>
      <param name="value">The value.</param>
      <param name="required">true if required.</param>
      <param name="separator">The separator between arguments.</param>
    </member>
    <member name="P:Microsoft.Build.Tasks.Xaml.CommandLineArgumentRelation.Separator">
      <summary>Contains the separator between command line arguments.</summary>
      <returns>A string containing the separator.</returns>
    </member>
    <member name="T:Microsoft.Build.Tasks.Xaml.CommandLineGenerator">
      <summary>Class for generating command lines.</summary>
    </member>
    <member name="M:Microsoft.Build.Tasks.Xaml.CommandLineGenerator.#ctor(Microsoft.Build.Framework.XamlTypes.Rule,System.Collections.Generic.Dictionary{System.String,System.Object})">
      <summary>Initializes a new instance of the <see cref="Microsoft.Build.Tasks.Xaml.CommandLineGenerator" /> class.</summary>
      <param name="rule">The rule</param>
      <param name="parameterValues">The parameter values.</param>
    </member>
    <member name="P:Microsoft.Build.Tasks.Xaml.CommandLineGenerator.AdditionalOptions">
      <summary>Contains a string of additional options to include on the command line.</summary>
    </member>
    <member name="P:Microsoft.Build.Tasks.Xaml.CommandLineGenerator.AlwaysAppend">
      <summary>Contains the string to append to a command line when there is no template.</summary>
    </member>
    <member name="P:Microsoft.Build.Tasks.Xaml.CommandLineGenerator.CommandLineTemplate">
      <summary>Contains the template to use when creating the command line.</summary>
    </member>
    <member name="M:Microsoft.Build.Tasks.Xaml.CommandLineGenerator.GenerateCommandLine">
      <summary>Generates a command line.</summary>
    </member>
    <member name="T:Microsoft.Build.Tasks.Xaml.CommandLineToolSwitch">
      <summary>An enumeration of the different types for switches on a command line.</summary>
    </member>
    <member name="M:Microsoft.Build.Tasks.Xaml.CommandLineToolSwitch.#ctor">
      <summary>Initializes a new <see cref="CommandLineToolSwitch" /> to hold the name, tool, attributes, dependent switches, and values.</summary>
    </member>
    <member name="M:Microsoft.Build.Tasks.Xaml.CommandLineToolSwitch.#ctor(Microsoft.Build.Tasks.Xaml.CommandLineToolSwitchType)">
      <summary>Initializes a new <see cref="CommandLineToolSwitch" /> to hold the name, tool, attributes, dependent switches, and values.</summary>
      <param name="toolType">The type of the switch.</param>
    </member>
    <member name="P:Microsoft.Build.Tasks.Xaml.CommandLineToolSwitch.AllowMultipleValues">
      <summary>Indicates if multiple values are allowed.</summary>
      <returns>true if multiple values are allowed.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.Xaml.CommandLineToolSwitch.ArgumentRequired">
      <summary>Indicates if arguments are required.</summary>
      <returns>true if arguments are allowed.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.Xaml.CommandLineToolSwitch.BooleanValue">
      <summary>Contains the Boolean value of the command line switch.</summary>
      <returns>The value of the command line switch.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.Xaml.CommandLineToolSwitch.Description">
      <summary>Describes the switch.</summary>
      <returns>The text description for the switch.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.Xaml.CommandLineToolSwitch.DisplayName">
      <summary>Contains the display name of the switch.</summary>
      <returns>The display name.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.Xaml.CommandLineToolSwitch.FallbackArgumentParameter">
      <summary>Contains the fallback parameter.</summary>
      <returns>The fallback parameter.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.Xaml.CommandLineToolSwitch.FalseSuffix">
      <summary>Contains the suffix to use when the switch is false or negated.</summary>
      <returns>The suffix to use.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.Xaml.CommandLineToolSwitch.IsValid">
      <summary>Indicates if the switch is valid.</summary>
      <returns>true if the switch is valid.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.Xaml.CommandLineToolSwitch.Name">
      <summary>Contains the name of the switch.</summary>
      <returns>The name of the switch.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.Xaml.CommandLineToolSwitch.Number">
      <summary>Contains the value for integer type switches.</summary>
      <returns>The value of the switch.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.Xaml.CommandLineToolSwitch.Overrides">
      <summary>Contains overrides for the switch.</summary>
      <returns>The overrides.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.Xaml.CommandLineToolSwitch.Parents">
      <summary>Contains parents for the switch.</summary>
      <returns>The parents of the switch.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.Xaml.CommandLineToolSwitch.Required">
      <summary>Indicates if the switch is required.</summary>
      <returns>true if the switch is required.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.Xaml.CommandLineToolSwitch.ReverseSwitchValue">
      <summary>Contains the reverse switch text.</summary>
      <returns>The reverse switch text.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.Xaml.CommandLineToolSwitch.Reversible">
      <summary>Indicates if the switch is reversable.</summary>
      <returns>true if the switch is reversable.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.Xaml.CommandLineToolSwitch.Separator">
      <summary>Contains the separator between the switch and its arguments. </summary>
      <returns>The sperarator.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.Xaml.CommandLineToolSwitch.StringList">
      <summary>Contains a list of strings.</summary>
      <returns>The list of strings.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.Xaml.CommandLineToolSwitch.SwitchValue">
      <summary>Contains the value for the switch.</summary>
      <returns>The value of the switch.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.Xaml.CommandLineToolSwitch.TaskItemArray">
      <summary>Contains an array of task items.</summary>
      <returns>The array of task items.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.Xaml.CommandLineToolSwitch.TrueSuffix">
      <summary>Contains the suffix to use when the switch is true.</summary>
      <returns>The suffix to use.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.Xaml.CommandLineToolSwitch.Type">
      <summary>Contains the type of the switch.</summary>
      <returns>The type of the switch.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.Xaml.CommandLineToolSwitch.Value">
      <summary>Contains the value of the switch.</summary>
      <returns>The value.</returns>
    </member>
    <member name="T:Microsoft.Build.Tasks.Xaml.CommandLineToolSwitchType">
      <summary>Enumerates the types for command line switches.</summary>
    </member>
    <member name="F:Microsoft.Build.Tasks.Xaml.CommandLineToolSwitchType.Boolean">
      <summary>Indicates a Boolean type.</summary>
    </member>
    <member name="F:Microsoft.Build.Tasks.Xaml.CommandLineToolSwitchType.Integer">
      <summary>Indicates an integer type.</summary>
    </member>
    <member name="F:Microsoft.Build.Tasks.Xaml.CommandLineToolSwitchType.String">
      <summary>Indicates a string type.</summary>
    </member>
    <member name="F:Microsoft.Build.Tasks.Xaml.CommandLineToolSwitchType.StringArray">
      <summary>Indicates an array of strings type.</summary>
    </member>
    <member name="F:Microsoft.Build.Tasks.Xaml.CommandLineToolSwitchType.ITaskItemArray">
      <summary>Indicates a task item array type.</summary>
    </member>
    <member name="T:Microsoft.Build.Tasks.Xaml.PropertyRelation">
      <summary>Expresses a relationship between an argument and a property.</summary>
    </member>
    <member name="M:Microsoft.Build.Tasks.Xaml.PropertyRelation.#ctor">
      <summary>Initializes a new instance of the <see cref="PropertyRelation" /> class.</summary>
    </member>
    <member name="M:Microsoft.Build.Tasks.Xaml.PropertyRelation.#ctor(System.String,System.String,System.Boolean)">
      <summary>Initializes a new instance of the <see cref="PropertyRelation" /> class.</summary>
      <param name="argument">The argument.</param>
      <param name="value">The value of the property.</param>
      <param name="required">true if the property is required.</param>
    </member>
    <member name="P:Microsoft.Build.Tasks.Xaml.PropertyRelation.Argument">
      <summary>Contains the name of the argument.</summary>
      <returns>The name.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.Xaml.PropertyRelation.Required">
      <summary>Indicates if the property is required.</summary>
      <returns>true if the property is required.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.Xaml.PropertyRelation.Value">
      <summary>Contains the value of the property.</summary>
      <returns>The value.</returns>
    </member>
    <member name="T:Microsoft.Build.Tasks.Xaml.XamlDataDrivenToolTask">
      <summary>Class for tasks generated by the Xaml task factory.</summary>
    </member>
    <member name="M:Microsoft.Build.Tasks.Xaml.XamlDataDrivenToolTask.#ctor(System.String[],System.Resources.ResourceManager)">
      <summary>Initializes an instance of a Microsoft<see cref=".Build.Tasks.Xaml.XamlDataDrivenToolTask" /> class. </summary>
      <param name="switchOrderList">The list of switches in the order in which they should appear.</param>
      <param name="taskResources">The task resources.</param>
    </member>
    <member name="P:Microsoft.Build.Tasks.Xaml.XamlDataDrivenToolTask.AcceptableNonZeroExitCodes">
      <summary>Contains an array of non-zero codes which don't cause an error.</summary>
    </member>
    <member name="P:Microsoft.Build.Tasks.Xaml.XamlDataDrivenToolTask.ActiveToolSwitches">
      <summary>Contains a set of active tool switches.</summary>
      <returns>The set of active tool switches.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.Xaml.XamlDataDrivenToolTask.ActiveToolSwitchesValues">
      <summary>Contains the values of the active tool switches.</summary>
    </member>
    <member name="M:Microsoft.Build.Tasks.Xaml.XamlDataDrivenToolTask.AddActiveSwitchToolValue(Microsoft.Build.Tasks.Xaml.CommandLineToolSwitch)">
      <summary>Adds the value for a switch to the list of active values.</summary>
      <param name="switchToAdd">The switch to add.</param>
    </member>
    <member name="P:Microsoft.Build.Tasks.Xaml.XamlDataDrivenToolTask.AdditionalOptions">
      <summary>Contains any additional specified in the project file.</summary>
      <returns>A string listing the options.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.Xaml.XamlDataDrivenToolTask.CommandLineTemplate">
      <summary>Contains the command line template.</summary>
    </member>
    <member name="M:Microsoft.Build.Tasks.Xaml.XamlDataDrivenToolTask.Execute">
      <summary>Executes the task, then closes the event handle created.</summary>
    </member>
    <member name="M:Microsoft.Build.Tasks.Xaml.XamlDataDrivenToolTask.GenerateCommandLineCommands">
      <summary>Generates the command line if it is less than 32k.</summary>
    </member>
    <member name="M:Microsoft.Build.Tasks.Xaml.XamlDataDrivenToolTask.GenerateFullPathToTool">
      <summary>Finds the tool if ToolPath wasn't specified.</summary>
    </member>
    <member name="M:Microsoft.Build.Tasks.Xaml.XamlDataDrivenToolTask.GenerateResponseFileCommands">
      <summary>Creates the command line.</summary>
    </member>
    <member name="M:Microsoft.Build.Tasks.Xaml.XamlDataDrivenToolTask.HandleTaskExecutionErrors">
      <summary>Handles the return code from the tool.</summary>
    </member>
    <member name="M:Microsoft.Build.Tasks.Xaml.XamlDataDrivenToolTask.IsPropertySet(System.String)">
      <summary>Indicates if the property is set.</summary>
      <returns>true if the property is set.</returns>
      <param name="propertyName">The name of the property.</param>
    </member>
    <member name="M:Microsoft.Build.Tasks.Xaml.XamlDataDrivenToolTask.ReadSwitchMap(System.String,System.String[][],System.String)">
      <summary>Checks the value a property is set to, and finds the corresponding switch.</summary>
      <param name="propertyName">The name of the property to check.</param>
      <param name="switchMap">The switch map.</param>
      <param name="value">The value of the property.</param>
    </member>
    <member name="M:Microsoft.Build.Tasks.Xaml.XamlDataDrivenToolTask.ReplaceToolSwitch(Microsoft.Build.Tasks.Xaml.CommandLineToolSwitch)">
      <summary>Replaces an existing switch with the specified one of the same name.</summary>
      <param name="switchToAdd">The name of the switch.</param>
    </member>
    <member name="P:Microsoft.Build.Tasks.Xaml.XamlDataDrivenToolTask.ResponseFileEncoding">
      <summary>Contains the response file encoding.</summary>
    </member>
    <member name="M:Microsoft.Build.Tasks.Xaml.XamlDataDrivenToolTask.ValidateInteger(System.String,System.Int32,System.Int32,System.Int32)">
      <summary>Checks an integer property to see if it is within a specified range.</summary>
      <returns>true if the value is within the specified range.</returns>
      <param name="switchName">The name of the switch to check.</param>
      <param name="min">The minimum value.</param>
      <param name="max">The maximum value.</param>
      <param name="value">The value of the property.</param>
    </member>
    <member name="M:Microsoft.Build.Tasks.Xaml.XamlDataDrivenToolTask.ValidateParameters">
      <summary>Validates the parameters.</summary>
      <returns>true if the parameters are all valid.</returns>
    </member>
  </members>
</doc>
=== C:/Users/treeman/Desktop/windows nt source code\xbox\Xbox Live Source\XONLINE_MAIN\public\ext\sdk\CLR\netfx40rtm\Profile\Client\Microsoft.Build.Utilities.xml ===
ï»¿<?xml version="1.0" encoding="utf-8"?>
<doc>
  <assembly>
    <name>Microsoft.Build.Utilities</name>
  </assembly>
  <members>
    <member name="T:Microsoft.Build.Utilities.CommandLineBuilder">
      <summary>Comprises utility methods for constructing a command line.</summary>
    </member>
    <member name="M:Microsoft.Build.Utilities.CommandLineBuilder.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.Build.Utilities.CommandLineBuilder" /> class.</summary>
    </member>
    <member name="M:Microsoft.Build.Utilities.CommandLineBuilder.AppendFileNameIfNotNull(Microsoft.Build.Framework.ITaskItem)">
      <summary>Appends the command line with the file name of the specified <see cref="T:Microsoft.Build.Framework.ITaskItem" /> object.</summary>
      <param name="fileItem">The task item specification to append to the command line. If it is null, then this method has no effect.</param>
    </member>
    <member name="M:Microsoft.Build.Utilities.CommandLineBuilder.AppendFileNameIfNotNull(System.String)">
      <summary>Appends the command line with file name represented by the parameter, inserting quotation marks if necessary.</summary>
      <param name="fileName">The file name to append. If it is null, then this method has no effect.</param>
    </member>
    <member name="M:Microsoft.Build.Utilities.CommandLineBuilder.AppendFileNamesIfNotNull(Microsoft.Build.Framework.ITaskItem[],System.String)">
      <summary>Appends the command line with the list of file names in the specified <see cref="T:Microsoft.Build.Framework.ITaskItem" /> array, separated by the specified delimiter.</summary>
      <param name="fileItems">The task item specifications to append. If the array is null, then this method has no effect.</param>
      <param name="delimiter">The delimiter to put between task item specifications in the command line.</param>
    </member>
    <member name="M:Microsoft.Build.Utilities.CommandLineBuilder.AppendFileNamesIfNotNull(System.String[],System.String)">
      <summary>Appends the command line with the list of file names in the specified string array, separated by the specified delimiter.</summary>
      <param name="fileNames">The file names to append. If the array is null, then this method has no effect.</param>
      <param name="delimiter">The delimiter to put between file names in the command line.</param>
    </member>
    <member name="M:Microsoft.Build.Utilities.CommandLineBuilder.AppendFileNameWithQuoting(System.String)">
      <summary>Appends the command line with a file name, and surrounds the file name with quotation marks as necessary.</summary>
      <param name="fileName">The file name to append.</param>
    </member>
    <member name="M:Microsoft.Build.Utilities.CommandLineBuilder.AppendSpaceIfNotEmpty">
      <summary>Adds a space to the specified string, given the string is not empty.</summary>
    </member>
    <member name="M:Microsoft.Build.Utilities.CommandLineBuilder.AppendSwitch(System.String)">
      <summary>Appends the command line with the specified switch.</summary>
      <param name="switchName">The name of the switch to append to the command line. This value cannot be null.</param>
    </member>
    <member name="M:Microsoft.Build.Utilities.CommandLineBuilder.AppendSwitchIfNotNull(System.String,Microsoft.Build.Framework.ITaskItem)">
      <summary>Appends the command line with a switch that takes a task item specification that acts a single string parameter.</summary>
      <param name="switchName">The name of the switch to append to the command line. This value cannot be null.</param>
      <param name="parameter">The switch parameter to append to the command line. Quotation marks will be added as necessary. If this value is null, then this method has no effect.</param>
    </member>
    <member name="M:Microsoft.Build.Utilities.CommandLineBuilder.AppendSwitchIfNotNull(System.String,Microsoft.Build.Framework.ITaskItem[],System.String)">
      <summary>Appends the command line with a switch that takes an array of task item specifications that act as string parameters.</summary>
      <param name="switchName">The name of the switch to append to the command line. This value cannot be null.</param>
      <param name="parameters">An array of switch parameters to append to the command line. Quotation marks will be added as necessary. If the array is null, then this method has no effect.</param>
      <param name="delimiter">The delimiter that separates individual parameters. This value can be empty, but it cannot be null.</param>
    </member>
    <member name="M:Microsoft.Build.Utilities.CommandLineBuilder.AppendSwitchIfNotNull(System.String,System.String)">
      <summary>Appends the command line with a switch that takes a single string parameter.</summary>
      <param name="switchName">The name of the switch to append to the command line. This value cannot be null.</param>
      <param name="parameter">The switch parameter to append to the command line. Quotation marks will be added as necessary. If this value is null, then this method has no effect.</param>
    </member>
    <member name="M:Microsoft.Build.Utilities.CommandLineBuilder.AppendSwitchIfNotNull(System.String,System.String[],System.String)">
      <summary>Appends the command line with a switch that takes an array of string parameters.</summary>
      <param name="switchName">The name of the switch to append to the command line. This value cannot be null.</param>
      <param name="parameters">An array of switch parameters to append to the command line. Quotation marks will be added as necessary. If the array is null, then this method has no effect.</param>
      <param name="delimiter">The delimiter that separates individual parameters. This value can be empty, but it cannot be null.</param>
    </member>
    <member name="M:Microsoft.Build.Utilities.CommandLineBuilder.AppendSwitchUnquotedIfNotNull(System.String,Microsoft.Build.Framework.ITaskItem)">
      <summary>Appends the command line with a switch that takes a task item specification as a single string parameter, without attempting to encapsulate the switch parameter with quotation marks.</summary>
      <param name="switchName">The name of the switch to append to the command line. This value cannot be null.</param>
      <param name="parameter">The switch parameter to append to the command line. Quotation marks will not be added. If this value is null, then this method has no effect.</param>
    </member>
    <member name="M:Microsoft.Build.Utilities.CommandLineBuilder.AppendSwitchUnquotedIfNotNull(System.String,Microsoft.Build.Framework.ITaskItem[],System.String)">
      <summary>Appends the command line with a switch that takes an array of task item specifications that act as string parameters, without attempting to encapsulate them with quotation marks.</summary>
      <param name="switchName">The name of the switch to append to the command line. This value cannot be null.</param>
      <param name="parameters">An array of switch parameters to append to the command line. Quotation marks will not be added. If the array is null, then this method has no effect.</param>
      <param name="delimiter">The delimiter that separates individual parameters. This value can be empty, but it cannot be null.</param>
    </member>
    <member name="M:Microsoft.Build.Utilities.CommandLineBuilder.AppendSwitchUnquotedIfNotNull(System.String,System.String)">
      <summary>Appends the command line with a switch that takes a single string parameter, without attempting to encapsulate the switch parameter with quotation marks.</summary>
      <param name="switchName">The name of the switch to append to the command line. This value cannot be null.</param>
      <param name="parameter">The switch parameter to append to the command line. Quotation marks will not be added. If this value is null, then this method has no effect.</param>
    </member>
    <member name="M:Microsoft.Build.Utilities.CommandLineBuilder.AppendSwitchUnquotedIfNotNull(System.String,System.String[],System.String)">
      <summary>Appends the command line with a switch that takes an array of string parameters, without attempting to encapsulate switch parameters with quotation marks.</summary>
      <param name="switchName">The name of the switch to append to the command line. This value cannot be null.</param>
      <param name="parameters">An array of switch parameters to append to the command line. Quotation marks will not be added. If the array is null, then this method has no effect.</param>
      <param name="delimiter">The delimiter that separates individual parameters. This value can be empty, but it cannot be null.</param>
    </member>
    <member name="M:Microsoft.Build.Utilities.CommandLineBuilder.AppendTextUnquoted(System.String)">
      <summary>Appends the command line with string, without attempting to encapsulate the string with quotation marks.</summary>
      <param name="textToAppend">The string to append to the command line.</param>
    </member>
    <member name="M:Microsoft.Build.Utilities.CommandLineBuilder.AppendTextWithQuoting(System.String)">
      <summary>Appends the command line with string, and surrounds the string with quotations marks as necessary.</summary>
      <param name="textToAppend">The string to append to the command line.</param>
    </member>
    <member name="P:Microsoft.Build.Utilities.CommandLineBuilder.CommandLine">
      <summary>Gets the <see cref="T:System.Text.StringBuilder" /> instance representing the command line for inheriting classes.</summary>
      <returns>A <see cref="T:System.Text.StringBuilder" /> for inheriting classes.</returns>
    </member>
    <member name="M:Microsoft.Build.Utilities.CommandLineBuilder.IsQuotingRequired(System.String)">
      <summary>Determines whether the specified string parameter should be surrounded with quotation marks because it contains white space.</summary>
      <returns>true, if the switch parameter should be surrounded with quotation marks; otherwise, false.</returns>
      <param name="parameter">The string to examine for characters that require quotation marks.</param>
    </member>
    <member name="M:Microsoft.Build.Utilities.CommandLineBuilder.ToString">
      <summary>Returns the command line as a string.</summary>
      <returns>A <see cref="T:System.String" /> that represents the command line.</returns>
    </member>
    <member name="M:Microsoft.Build.Utilities.CommandLineBuilder.VerifyThrowNoEmbeddedDoubleQuotes(System.String,System.String)">
      <summary>Returns an error if the command line parameter contains a double-quote (") character. Because double quotes are illegal in command line parameters, this method helps prevent parameter injection attacks.</summary>
      <param name="switchName">A string representing the switch name for the error message.</param>
      <param name="parameter">A string representing the switch parameter to scan for double-quotes.</param>
    </member>
    <member name="T:Microsoft.Build.Utilities.HostObjectInitializationStatus">
      <summary>Defines the next action for <see cref="T:Microsoft.Build.Utilities.ToolTask" /> after an attempt to initialize the host object.</summary>
    </member>
    <member name="F:Microsoft.Build.Utilities.HostObjectInitializationStatus.UseHostObjectToExecute">
      <summary>Indicates that an appropriate host object for this task exists, which can support all of the parameters passed in and should be invoked to do the real work of the task.</summary>
    </member>
    <member name="F:Microsoft.Build.Utilities.HostObjectInitializationStatus.UseAlternateToolToExecute">
      <summary>Indicates that either a host object is not available, or that the host object is not capable of supporting all of the features required for this build. Therefore, <see cref="T:Microsoft.Build.Utilities.ToolTask" /> should fallback to an alternate means of doing the build, such as invoking the command-line tool.</summary>
    </member>
    <member name="F:Microsoft.Build.Utilities.HostObjectInitializationStatus.NoActionReturnSuccess">
      <summary>Indicates that the host object is up to date, and that no further action is necessary.</summary>
    </member>
    <member name="F:Microsoft.Build.Utilities.HostObjectInitializationStatus.NoActionReturnFailure">
      <summary>Indicates that some of the parameters being passed into the task are invalid, and that the task should fail immediately.</summary>
    </member>
    <member name="T:Microsoft.Build.Utilities.Logger">
      <summary>When overridden in a derived form, provides functionality for loggers that handle events raised by the MSBuild engine.</summary>
    </member>
    <member name="M:Microsoft.Build.Utilities.Logger.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.Build.Utilities.Logger" /> class.</summary>
    </member>
    <member name="M:Microsoft.Build.Utilities.Logger.FormatErrorEvent(Microsoft.Build.Framework.BuildErrorEventArgs)">
      <summary>Generates an error message that is in the default format, from a <see cref="T:Microsoft.Build.Framework.BuildErrorEventArgs" /> object.</summary>
      <returns>A <see cref="T:System.String" /> that represents an error message in canonical format.</returns>
      <param name="args">The arguments of the error event.</param>
    </member>
    <member name="M:Microsoft.Build.Utilities.Logger.FormatWarningEvent(Microsoft.Build.Framework.BuildWarningEventArgs)">
      <summary>Generates a warning message that is in the default format, from a <see cref="T:Microsoft.Build.Framework.BuildWarningEventArgs" /> object.</summary>
      <returns>A <see cref="T:System.String" /> that represents a warning message in canonical format.</returns>
      <param name="args">The arguments of the warning event.</param>
    </member>
    <member name="M:Microsoft.Build.Utilities.Logger.Initialize(Microsoft.Build.Framework.IEventSource)">
      <summary>When overridden in a derived class, subscribes the logger to specific events.</summary>
      <param name="eventSource">The available events that a logger can subscribe to.</param>
    </member>
    <member name="M:Microsoft.Build.Utilities.Logger.IsVerbosityAtLeast(Microsoft.Build.Framework.LoggerVerbosity)">
      <summary>Determines whether the current <see cref="P:Microsoft.Build.Utilities.Logger.Verbosity" /> setting is at least the value that is passed in.</summary>
      <returns>true if the current logger verbosity setting is at least the value that is passed in; otherwise, false.</returns>
      <param name="checkVerbosity">The logger verbosity setting passed in.</param>
    </member>
    <member name="P:Microsoft.Build.Utilities.Logger.Parameters">
      <summary>Gets or sets the user-defined parameters of the logger.</summary>
      <returns>The logger parameters. This value can be null.</returns>
    </member>
    <member name="M:Microsoft.Build.Utilities.Logger.Shutdown">
      <summary>When overridden in a derived class, releases the resources allocated to the logger at the time of initialization or during the build.</summary>
    </member>
    <member name="P:Microsoft.Build.Utilities.Logger.Verbosity">
      <summary>Gets or sets the level of detail to show in the event log.</summary>
      <returns>One of the enumeration values. The default is <see cref="F:Microsoft.Build.Framework.LoggerVerbosity.Normal" />.</returns>
    </member>
    <member name="T:Microsoft.Build.Utilities.TaskLoggingHelper">
      <summary>Provides helper logging methods used by tasks.</summary>
    </member>
    <member name="M:Microsoft.Build.Utilities.TaskLoggingHelper.#ctor(Microsoft.Build.Framework.ITask)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.Build.Utilities.TaskLoggingHelper" /> class and associates it with the specified task instance.</summary>
      <param name="taskInstance">The task containing an instance of this task.</param>
    </member>
    <member name="P:Microsoft.Build.Utilities.TaskLoggingHelper.BuildEngine">
      <summary>Gets the build engine that is associated with the task.</summary>
      <returns>An <see cref="T:Microsoft.Build.Framework.IBuildEngine" /> that represents the instance of the build engine that is associated with the task.</returns>
    </member>
    <member name="M:Microsoft.Build.Utilities.TaskLoggingHelper.ExtractMessageCode(System.String,System.String@)">
      <summary>Extracts the message code prefix from the given full message string.</summary>
      <returns>The message code prefix that is extracted from the full message string, or null if there is no message code.</returns>
      <param name="message">The full message to parse that includes code prefix.</param>
      <param name="messageWithoutCodePrefix">The message with the code prefix removed.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="message" /> is null.</exception>
    </member>
    <member name="M:Microsoft.Build.Utilities.TaskLoggingHelper.FormatResourceString(System.String,System.Object[])">
      <summary>Loads the specified resource string and optionally formats it using the given arguments.</summary>
      <returns>The formatted string.</returns>
      <param name="resourceName">The name of the string resource to load.</param>
      <param name="args">Optional arguments for formatting the loaded string.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="resourceName" /> is null.</exception>
      <exception cref="T:System.ArgumentException">The string resource indicated by <paramref name="resourceName" /> does not exist.</exception>
      <exception cref="T:System.InvalidOperationException">The <see cref="P:Microsoft.Build.Utilities.Task.TaskResources" /> property of the owner task is not set.</exception>
    </member>
    <member name="M:Microsoft.Build.Utilities.TaskLoggingHelper.FormatString(System.String,System.Object[])">
      <summary>Formats the given string using the given arguments.</summary>
      <returns>The formatted string.</returns>
      <param name="unformatted">The string to format.</param>
      <param name="args">Arguments for formatting.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="unformatted" /> is null.</exception>
    </member>
    <member name="P:Microsoft.Build.Utilities.TaskLoggingHelper.HasLoggedErrors">
      <summary>Gets a value that indicates whether the task has logged any errors through this logging helper object.</summary>
      <returns>true if the task has logged any errors through this logging helper object; otherwise, false.</returns>
    </member>
    <member name="P:Microsoft.Build.Utilities.TaskLoggingHelper.HelpKeywordPrefix">
      <summary>Gets or sets the prefix used to compose Help keywords from resource names.</summary>
      <returns>The prefix used to compose Help keywords from resource names.</returns>
    </member>
    <member name="M:Microsoft.Build.Utilities.TaskLoggingHelper.LogCommandLine(Microsoft.Build.Framework.MessageImportance,System.String)">
      <summary>Logs the command line for an underlying tool, executable file, or shell command of a task using the specified importance level.</summary>
      <param name="importance">One of the values of <see cref="T:Microsoft.Build.Framework.MessageImportance" /> that indicates the importance level of the command line.</param>
      <param name="commandLine">The command line string.</param>
    </member>
    <member name="M:Microsoft.Build.Utilities.TaskLoggingHelper.LogCommandLine(System.String)">
      <summary>Logs the command line for an underlying tool, executable file, or shell command of a task.</summary>
      <param name="commandLine">The command line string.</param>
    </member>
    <member name="M:Microsoft.Build.Utilities.TaskLoggingHelper.LogError(System.String,System.Object[])">
      <summary>Logs an error with the specified message.</summary>
      <param name="message">The message.</param>
      <param name="messageArgs">Optional arguments for formatting the message string.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="message" /> is null.</exception>
    </member>
    <member name="M:Microsoft.Build.Utilities.TaskLoggingHelper.LogError(System.String,System.String,System.String,System.String,System.Int32,System.Int32,System.Int32,System.Int32,System.String,System.Object[])">
      <summary>Logs an error using the specified message and other error details.</summary>
      <param name="subcategory">The description of the error type.</param>
      <param name="errorCode">The error code.</param>
      <param name="helpKeyword">The Help keyword to associate with the error.</param>
      <param name="file">The path to the file containing the error.</param>
      <param name="lineNumber">The line in the file where the error occurs.</param>
      <param name="columnNumber">The column in the file where the error occurs.</param>
      <param name="endLineNumber">The end line in the file where the error occurs.</param>
      <param name="endColumnNumber">The end column in the file where the error occurs.</param>
      <param name="message">The message.</param>
      <param name="messageArgs">Optional arguments for formatting the message string.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="message" /> is null.</exception>
    </member>
    <member name="M:Microsoft.Build.Utilities.TaskLoggingHelper.LogErrorFromException(System.Exception)">
      <summary>Logs an error using the message from the given exception.</summary>
      <param name="exception">The exception to log.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="e" /> is null.</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:Microsoft.Build.Utilities.TaskLoggingHelper.LogErrorFromException(System.Exception,System.Boolean)">
      <summary>Logs an error using the message, and optionally the stack trace, from the given exception.</summary>
      <param name="exception">The exception to log</param>
      <param name="showStackTrace">true to include the stack trace in the log; otherwise, false.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="e" /> is null.</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:Microsoft.Build.Utilities.TaskLoggingHelper.LogErrorFromResources(System.String,System.Object[])">
      <summary>Logs an error using the specified resource string.</summary>
      <param name="messageResourceName">The name of the string resource to load.</param>
      <param name="messageArgs">The arguments for formatting the loaded string.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="messageResourceName" /> is null.</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:Microsoft.Build.Utilities.TaskLoggingHelper.LogErrorFromResources(System.String,System.String,System.String,System.String,System.Int32,System.Int32,System.Int32,System.Int32,System.String,System.Object[])">
      <summary>Logs an error using the specified resource string and other error details.</summary>
      <param name="subcategoryResourceName">The name of the string resource that describes the error type.</param>
      <param name="errorCode">The error code.</param>
      <param name="helpKeyword">The Help keyword to associate with the error.</param>
      <param name="file">The path to the file containing the error.</param>
      <param name="lineNumber">The line in the file where the error occurs.</param>
      <param name="columnNumber">The column in the file where the error occurs.</param>
      <param name="endLineNumber">The end line in the file where the error occurs.</param>
      <param name="endColumnNumber">The end column in the file where the error occurs.</param>
      <param name="messageResourceName">The name of the string resource to load.</param>
      <param name="messageArgs">The arguments for formatting the loaded string.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="messageResourceName" /> is null.</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:Microsoft.Build.Utilities.TaskLoggingHelper.LogErrorWithCodeFromResources(System.String,System.Object[])">
      <summary>Logs an error with an error code using the specified resource string.</summary>
      <param name="messageResourceName">The name of the string resource to load.</param>
      <param name="messageArgs">The arguments for formatting the loaded string.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="messageResourceName" /> is null.</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:Microsoft.Build.Utilities.TaskLoggingHelper.LogErrorWithCodeFromResources(System.String,System.String,System.Int32,System.Int32,System.Int32,System.Int32,System.String,System.Object[])">
      <summary>Logs an error using the specified resource string and other error details.</summary>
      <param name="subcategoryResourceName">The name of the string resource that describes the error type.</param>
      <param name="file">The path to the file containing the error.</param>
      <param name="lineNumber">The line in the file where the error occurs.</param>
      <param name="columnNumber">The column in the file where the error occurs.</param>
      <param name="endLineNumber">The end line in the file where the error occurs.</param>
      <param name="endColumnNumber">The end column in the file where the error occurs.</param>
      <param name="messageResourceName">The name of the string resource to load.</param>
      <param name="messageArgs">The arguments for formatting the loaded string.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="messageResourceName" /> is null.</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:Microsoft.Build.Utilities.TaskLoggingHelper.LogExternalProjectFinished(System.String,System.String,System.String,System.Boolean)">
      <summary>Helps log the custom <see cref="T:Microsoft.Build.Framework.ExternalProjectFinishedEventArgs" /> build event.</summary>
      <param name="message">The text message.</param>
      <param name="helpKeyword">The help keyword.</param>
      <param name="projectFile">The name of the project.</param>
      <param name="succeeded">true to indicate that project was built successfully; otherwise, false.</param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:Microsoft.Build.Utilities.TaskLoggingHelper.LogExternalProjectStarted(System.String,System.String,System.String,System.String)">
      <summary>Helps log the custom <see cref="T:Microsoft.Build.Framework.ExternalProjectStartedEventArgs" /> build event.</summary>
      <param name="message">The text message.</param>
      <param name="helpKeyword">The help keyword.</param>
      <param name="projectFile">The name of the project.</param>
      <param name="targetNames">The targets to build. An empty string indicates default targets.</param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:Microsoft.Build.Utilities.TaskLoggingHelper.LogMessage(Microsoft.Build.Framework.MessageImportance,System.String,System.Object[])">
      <summary>Logs a message with the specified string and importance.</summary>
      <param name="importance">One of the enumeration values that specifies the importance of the message.</param>
      <param name="message">The message.</param>
      <param name="messageArgs">The arguments for formatting the message.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="message" /> is null.</exception>
    </member>
    <member name="M:Microsoft.Build.Utilities.TaskLoggingHelper.LogMessage(System.String,System.Object[])">
      <summary>Logs a message with the specified string.</summary>
      <param name="message">The message.</param>
      <param name="messageArgs">The arguments for formatting the message.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="message" /> is null.</exception>
    </member>
    <member name="M:Microsoft.Build.Utilities.TaskLoggingHelper.LogMessageFromResources(Microsoft.Build.Framework.MessageImportance,System.String,System.Object[])">
      <summary>Logs a message with the specified resource string and importance.</summary>
      <param name="importance">One of the enumeration values that specifies the importance of the message.</param>
      <param name="messageResourceName">The name of the string resource to load.</param>
      <param name="messageArgs">The arguments for formatting the loaded string.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="message" /> is null.</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:Microsoft.Build.Utilities.TaskLoggingHelper.LogMessageFromResources(System.String,System.Object[])">
      <summary>Logs a message with the specified resource string.</summary>
      <param name="messageResourceName">The name of the string resource to load.</param>
      <param name="messageArgs">The arguments for formatting the loaded string.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="messageResourceName" /> is null.</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:Microsoft.Build.Utilities.TaskLoggingHelper.LogMessageFromText(System.String,Microsoft.Build.Framework.MessageImportance)">
      <summary>Logs an error message or warning from the given line of text.</summary>
      <returns>true if an error was logged; otherwise, false.</returns>
      <param name="lineOfText">The line of text to log from.</param>
      <param name="messageImportance">One of the values of <see cref="T:Microsoft.Build.Framework.MessageImportance" /> that indicates the importance level of the command line.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="lineOfText" /> is null.</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:Microsoft.Build.Utilities.TaskLoggingHelper.LogMessagesFromFile(System.String)">
      <summary>Logs errors, warnings, and messages for each line of text in the given file.</summary>
      <returns>true to indicate at least one error was logged; otherwise, false.</returns>
      <param name="fileName">The name of the file to log messages from.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="message" /> is null.</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:Microsoft.Build.Utilities.TaskLoggingHelper.LogMessagesFromFile(System.String,Microsoft.Build.Framework.MessageImportance)">
      <summary>Logs errors, warnings, and messages for each line of text in the given file. Also logs the importance of messages.</summary>
      <returns>true to indicate at least one error was logged; otherwise, false.</returns>
      <param name="fileName">The name of the file to log messages from.</param>
      <param name="messageImportance">One of the enumeration values that specifies the importance of logged messages.</param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:Microsoft.Build.Utilities.TaskLoggingHelper.LogMessagesFromStream(System.IO.TextReader,Microsoft.Build.Framework.MessageImportance)">
      <summary>Logs an error message or warning from the given stream.</summary>
      <returns>true if an error was logged; otherwise, false.</returns>
      <param name="stream">A <see cref="T:System.IO.TextReader" /> that reads the stream to log from.</param>
      <param name="messageImportance">One of the values of <see cref="T:Microsoft.Build.Framework.MessageImportance" /> that indicates the importance level of the command line.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="stream" /> is null.</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:Microsoft.Build.Utilities.TaskLoggingHelper.LogWarning(System.String,System.Object[])">
      <summary>Logs a warning with the specified message.</summary>
      <param name="message">The message.</param>
      <param name="messageArgs">Optional arguments for formatting the message string.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="message" /> is null.</exception>
    </member>
    <member name="M:Microsoft.Build.Utilities.TaskLoggingHelper.LogWarning(System.String,System.String,System.String,System.String,System.Int32,System.Int32,System.Int32,System.Int32,System.String,System.Object[])">
      <summary>Logs a warning using the specified message and other warning details.</summary>
      <param name="subcategory">The description of the warning type.</param>
      <param name="warningCode">The warning code.</param>
      <param name="helpKeyword">The Help keyword to associate with the warning.</param>
      <param name="file">The path to the file containing the warning.</param>
      <param name="lineNumber">The line in the file where the warning occurs.</param>
      <param name="columnNumber">The column in the file where the warning occurs.</param>
      <param name="endLineNumber">The end line in the file where the warning occurs.</param>
      <param name="endColumnNumber">The end column in the file where the warning occurs.</param>
      <param name="message">The message.</param>
      <param name="messageArgs">Optional arguments for formatting the message string.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="message" /> is null.</exception>
    </member>
    <member name="M:Microsoft.Build.Utilities.TaskLoggingHelper.LogWarningFromException(System.Exception)">
      <summary>Logs a warning using the message from the specified exception.</summary>
      <param name="exception">The exception to log.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="e" /> is null.</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:Microsoft.Build.Utilities.TaskLoggingHelper.LogWarningFromException(System.Exception,System.Boolean)">
      <summary>Logs a warning using the message, and optionally the stack trace, from the given exception.</summary>
      <param name="exception">The exception to log</param>
      <param name="showStackTrace">true to include the stack trace in the log; otherwise, false.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="e" /> is null.</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:Microsoft.Build.Utilities.TaskLoggingHelper.LogWarningFromResources(System.String,System.Object[])">
      <summary>Logs a warning using the specified resource string.</summary>
      <param name="messageResourceName">The name of the string resource to load.</param>
      <param name="messageArgs">The arguments for formatting the loaded string.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="messageResourceName" /> is null.</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:Microsoft.Build.Utilities.TaskLoggingHelper.LogWarningFromResources(System.String,System.String,System.String,System.String,System.Int32,System.Int32,System.Int32,System.Int32,System.String,System.Object[])">
      <summary>Logs a warning using the specified resource string and other warning details.</summary>
      <param name="subcategoryResourceName">The name of the string resource that describes the warning type.</param>
      <param name="warningCode">The warning code.</param>
      <param name="helpKeyword">The Help keyword to associate with the warning.</param>
      <param name="file">The path to the file containing the warning.</param>
      <param name="lineNumber">The line in the file where the warning occurs.</param>
      <param name="columnNumber">The column in the file where the warning occurs.</param>
      <param name="endLineNumber">The end line in the file where the warning occurs.</param>
      <param name="endColumnNumber">The end column in the file where the warning occurs.</param>
      <param name="messageResourceName">The name of the string resource to load.</param>
      <param name="messageArgs">The arguments for formatting the loaded string.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="messageResourceName" /> is null.</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:Microsoft.Build.Utilities.TaskLoggingHelper.LogWarningWithCodeFromResources(System.String,System.Object[])">
      <summary>Logs a warning with a warning code using the specified resource string.</summary>
      <param name="messageResourceName">The name of the string resource to load.</param>
      <param name="messageArgs">The arguments for formatting the loaded string.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="messageResourceName" /> is null.</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:Microsoft.Build.Utilities.TaskLoggingHelper.LogWarningWithCodeFromResources(System.String,System.String,System.Int32,System.Int32,System.Int32,System.Int32,System.String,System.Object[])">
      <summary>Logs a warning with a warning code using the specified resource string and other warning details.</summary>
      <param name="subcategoryResourceName">The name of the string resource that describes the warning type.</param>
      <param name="file">The path to the file containing the warning.</param>
      <param name="lineNumber">The line in the file where the warning occurs.</param>
      <param name="columnNumber">The column in the file where the warning occurs.</param>
      <param name="endLineNumber">The end line in the file where the warning occurs.</param>
      <param name="endColumnNumber">The end column in the file where the warning occurs.</param>
      <param name="messageResourceName">The name of the string resource to load.</param>
      <param name="messageArgs">The arguments for formatting the loaded string.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="messageResourceName" /> is null.</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:Microsoft.Build.Utilities.TaskLoggingHelper.TaskName">
      <summary>Gets the name of the parent task.</summary>
      <returns>The name of the parent task.</returns>
    </member>
    <member name="P:Microsoft.Build.Utilities.TaskLoggingHelper.TaskResources">
      <summary>Gets or sets the culture-specific resources used by the logging methods.</summary>
      <returns>A <see cref="T:System.Resources.ResourceManager" /> that represents the culture-specific resources used by the logging methods. This value can be null.</returns>
      <filterpriority>2</filterpriority>
    </member>
  </members>
</doc>
=== C:/Users/treeman/Desktop/windows nt source code\xbox\Xbox Live Source\XONLINE_MAIN\public\ext\sdk\CLR\netfx40rtm\Profile\Client\Microsoft.Data.Entity.Build.Tasks.xml ===
ï»¿<?xml version="1.0" encoding="utf-8"?>
<doc>
  <assembly>
    <name>Microsoft.Data.Entity.Build.Tasks</name>
  </assembly>
  <members>
    <member name="T:Microsoft.Data.Entity.Build.Tasks.EntityClean">
      <summary>Called by MSBuild to remove intermediate files that were created by the <see cref="T:Microsoft.Data.Entity.Build.Tasks.EntityDeploy" /> task.</summary>
    </member>
    <member name="M:Microsoft.Data.Entity.Build.Tasks.EntityClean.#ctor">
      <summary>Called by MS build to initialize a new instance of <see cref="T:Microsoft.Data.Entity.Build.Tasks.EntityClean" />.</summary>
    </member>
    <member name="M:Microsoft.Data.Entity.Build.Tasks.EntityClean.Execute">
      <summary>Called by MSBuild to delete model and mapping files when they were not embedded as resources.</summary>
      <returns>true if the method was successful; otherwise, false.</returns>
    </member>
    <member name="P:Microsoft.Data.Entity.Build.Tasks.EntityClean.OutputPath">
      <summary>Returns the path from which model and mapping files are deleted.</summary>
      <returns>The path from which model and mapping files are deleted.</returns>
    </member>
    <member name="P:Microsoft.Data.Entity.Build.Tasks.EntityClean.ResourceOutputPath">
      <summary>Returns the path from which model and mapping files are deleted. </summary>
      <returns>The path from which model and mapping files are deleted.</returns>
    </member>
    <member name="P:Microsoft.Data.Entity.Build.Tasks.EntityClean.Sources">
      <summary>An array of pointers to .edmx files. Each file is passed to MSBuild as a build item.</summary>
      <returns>An array of <see cref="T:Microsoft.Build.Framework.ITaskItem" />. Each element of the array is a pointer to a .edmx file.</returns>
    </member>
    <member name="T:Microsoft.Data.Entity.Build.Tasks.EntityDeploy">
      <summary>A build task that is used to deploy the Entity Framework artifacts that are generated from .edmx files. These artifacts can be embedded as resources or written to a file.</summary>
    </member>
    <member name="M:Microsoft.Data.Entity.Build.Tasks.EntityDeploy.#ctor">
      <summary>Called by MSBuild to initialize a new instance of <see cref="T:Microsoft.Data.Entity.Build.Tasks.EntityDeploy" />.</summary>
    </member>
    <member name="M:Microsoft.Data.Entity.Build.Tasks.EntityDeploy.Execute">
      <summary>Called by MSBuild to embed mapping and modeling files as resources or to write them to a file.</summary>
      <returns>true if the method was successful, false otherwise.</returns>
    </member>
    <member name="P:Microsoft.Data.Entity.Build.Tasks.EntityDeploy.OutputPath">
      <summary>The path to which Entity Framework artifacts are written when they are not embedded as resources.</summary>
      <returns>A <see cref="T:System.String" /> that represents the path to which Entity Framework artifacts are written when they are not embedded as resources.</returns>
    </member>
    <member name="P:Microsoft.Data.Entity.Build.Tasks.EntityDeploy.Sources">
      <summary>An array of pointers to .edmx files. Each file is passed to MSBuild as a build item.</summary>
      <returns>An array of <see cref="T:Microsoft.Build.Framework.ITaskItem" />. Each element of the array is a pointer to a .edmx file.</returns>
    </member>
    <member name="T:Microsoft.Data.Entity.Build.Tasks.EntityDeploySetLogicalNames">
      <summary>Assigns the correct LogicalName to resources marked for embedding. </summary>
    </member>
    <member name="M:Microsoft.Data.Entity.Build.Tasks.EntityDeploySetLogicalNames.#ctor">
      <summary>Initializes a new instance of <see cref="T:Microsoft.Data.Entity.Build.Tasks.EntityDeploySetLogicalNames" />. </summary>
    </member>
    <member name="M:Microsoft.Data.Entity.Build.Tasks.EntityDeploySetLogicalNames.Execute">
      <summary>Executes the EntityDeploySetLogicalNames task.</summary>
      <returns>true if the build task completed successfully; false otherwise.</returns>
    </member>
    <member name="P:Microsoft.Data.Entity.Build.Tasks.EntityDeploySetLogicalNames.ResourceOutputPath">
      <summary>The path from which resources marked for embedding are read.</summary>
      <returns>The path from which resources marked for embedding are read.</returns>
    </member>
    <member name="P:Microsoft.Data.Entity.Build.Tasks.EntityDeploySetLogicalNames.ResourcesToEmbed">
      <summary>An array of <see cref="T:Microsoft.Build.Framework.ITaskItem" /> that contains information about the model and mapping files, including correct LogicalNames, that will be embedded as resources.</summary>
      <returns>An array that contains information about the model and mapping files that will be embedded as resources.</returns>
    </member>
    <member name="P:Microsoft.Data.Entity.Build.Tasks.EntityDeploySetLogicalNames.Sources">
      <summary>An array of <see cref="T:Microsoft.Build.Framework.ITaskItem" /> that contains information about the resources marked for embedding.</summary>
      <returns>An array of that contains information about the resources marked for embedding.</returns>
    </member>
    <member name="T:Microsoft.Data.Entity.Build.Tasks.EntityDeploySplit">
      <summary>Groups .edmx files according to whether the corresponding model and mapping files will be embedded as resources or copied to the output directory.</summary>
    </member>
    <member name="M:Microsoft.Data.Entity.Build.Tasks.EntityDeploySplit.#ctor">
      <summary>Initializes a new instance of <see cref="T:Microsoft.Data.Entity.Build.Tasks.EntityDeploySplit" />.</summary>
    </member>
    <member name="P:Microsoft.Data.Entity.Build.Tasks.EntityDeploySplit.EmbeddingItems">
      <summary>An array of <see cref="T:Microsoft.Build.Framework.ITaskItem" /> that contains information about the model and mapping files that will be embedded as resources.</summary>
      <returns>An array that contains information about the model and mapping files that will be embedded as resources.</returns>
    </member>
    <member name="M:Microsoft.Data.Entity.Build.Tasks.EntityDeploySplit.Execute">
      <summary>Executes the EntityDeploySplit task.</summary>
      <returns>true if the task finished successfully; otherwise, false.</returns>
    </member>
    <member name="P:Microsoft.Data.Entity.Build.Tasks.EntityDeploySplit.NonEmbeddingItems">
      <summary>An array of <see cref="T:Microsoft.Build.Framework.ITaskItem" /> that contains information about the model and mapping files that will be copied to the output directory.</summary>
      <returns>An array that contains information about the model and mapping files that will be embedded as resources.</returns>
    </member>
    <member name="P:Microsoft.Data.Entity.Build.Tasks.EntityDeploySplit.Sources">
      <summary>An array of <see cref="T:Microsoft.Build.Framework.ITaskItem" /> that contains information about the .edmx files to be processed.</summary>
      <returns>An array of that contains information about the .edmx files to be processed.</returns>
    </member>
  </members>
</doc>
=== C:/Users/treeman/Desktop/windows nt source code\xbox\Xbox Live Source\XONLINE_MAIN\public\ext\sdk\CLR\netfx40rtm\Profile\Client\Microsoft.Transactions.Bridge.Dtc.xml ===
ï»¿<?xml version="1.0" encoding="utf-8"?>
<doc>
	<assembly>
		<name>Microsoft.Transactions.Bridge.Dtc</name>
	</assembly>
	<members />
</doc>
=== C:/Users/treeman/Desktop/windows nt source code\xbox\Xbox Live Source\XONLINE_MAIN\public\ext\sdk\CLR\netfx40rtm\Profile\Client\Microsoft.Transactions.Bridge.xml ===
ï»¿<?xml version="1.0" encoding="utf-8"?>
<doc>
  <assembly>
    <name>Microsoft.Transactions.Bridge</name>
  </assembly>
  <members>
    <member name="T:System.ServiceModel.Internal.TransactionBridge">
      <summary>An internal class that is used for transactions.</summary>
    </member>
    <member name="M:System.ServiceModel.Internal.TransactionBridge.#ctor">
      <summary>Intializes a new instance of the <see cref="T:System.ServiceModel.Internal.TransactionBridge" /> class.</summary>
    </member>
    <member name="M:System.ServiceModel.Internal.TransactionBridge.Init(System.Object)">
      <summary>Intializes the <see cref="T:System.ServiceModel.Internal.TransactionBridge" /> with the specified configuration.</summary>
      <param name="bridgeConfig">The configuration used to initialize the <see cref="T:System.ServiceModel.Internal.TransactionBridge" />.</param>
    </member>
    <member name="M:System.ServiceModel.Internal.TransactionBridge.Shutdown">
      <summary>Shuts down the <see cref="T:System.ServiceModel.Internal.TransactionBridge" />.</summary>
    </member>
    <member name="M:System.ServiceModel.Internal.TransactionBridge.Start">
      <summary>Starts the <see cref="T:System.ServiceModel.Internal.TransactionBridge" />.</summary>
    </member>
  </members>
</doc>
=== C:/Users/treeman/Desktop/windows nt source code\xbox\Xbox Live Source\XONLINE_MAIN\public\ext\sdk\CLR\netfx40rtm\System.Windows.Forms.xml ===
ï»¿<?xml version="1.0" encoding="utf-8"?>
<doc>
  <assembly>
    <name>System.Windows.Forms</name>
  </assembly>
  <members>
    <member name="T:System.Resources.ResXDataNode">
      <summary>Represents an element in a resource file.</summary>
    </member>
    <member name="M:System.Resources.ResXDataNode.#ctor(System.String,System.Object)">
      <summary>Initializes a new instance of the <see cref="T:System.Resources.ResXDataNode" /> class. </summary>
      <param name="name">The name of the resource.</param>
      <param name="value">The resource to store. </param>
      <exception cref="T:System.InvalidOperationException">The resource named in <paramref name="value" /> does not support serialization. </exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="name" /> is null.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="name" /> is a string of zero length.</exception>
    </member>
    <member name="M:System.Resources.ResXDataNode.#ctor(System.String,System.Object,System.Func{System.Type,System.String})">
      <summary>Initializes a new instance of the <see cref="T:System.Resources.ResXDataNode" /> class.</summary>
      <param name="name">The name of the resource.</param>
      <param name="value">The resource to store.</param>
      <param name="typeNameConverter">A reference to a method that takes a <see cref="T:System.Type" /> and returns a string containing the <see cref="T:System.Type" /> name.</param>
      <exception cref="T:System.InvalidOperationException">The resource named in <paramref name="value" /> does not support serialization. </exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="name" /> is null.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="name" /> is a string of zero length.</exception>
    </member>
    <member name="M:System.Resources.ResXDataNode.#ctor(System.String,System.Resources.ResXFileRef)">
      <summary>Initializes a new instance of the <see cref="T:System.Resources.ResXDataNode" /> class with a reference to a resource file.</summary>
      <param name="name">The name of the resource.</param>
      <param name="fileRef">The file reference to use as the resource.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="name" /> is null or <paramref name="fileRef" /> is null.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="name" /> is a string of zero length.</exception>
    </member>
    <member name="M:System.Resources.ResXDataNode.#ctor(System.String,System.Resources.ResXFileRef,System.Func{System.Type,System.String})">
      <summary>Initializes a new instance of the <see cref="T:System.Resources.ResXDataNode" /> class with a reference to a resource file.</summary>
      <param name="name">The name of the resource.</param>
      <param name="fileRef">The file reference to use as the resource.</param>
      <param name="typeNameConverter">A reference to a method that takes a <see cref="T:System.Type" /> and returns a string containing the <see cref="T:System.Type" /> name.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="name" /> is null or <paramref name="fileRef" /> is null.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="name" /> is a string of zero length.</exception>
    </member>
    <member name="P:System.Resources.ResXDataNode.Comment">
      <summary>Gets or sets an arbitrary comment regarding this resource. </summary>
      <returns>A <see cref="T:System.String" /> representing the comment.</returns>
    </member>
    <member name="P:System.Resources.ResXDataNode.FileRef">
      <summary>Gets the file reference for this resource.</summary>
      <returns>The <see cref="T:System.Resources.ResXFileRef" /> corresponding to the file reference, if this resource uses one. If this resource stores its value as an <see cref="T:System.Object" />, this property will return null.</returns>
    </member>
    <member name="M:System.Resources.ResXDataNode.GetNodePosition">
      <summary>Gets the position of the resource in the resource file. </summary>
      <returns>A <see cref="T:System.Drawing.Point" /> structure specifying the location of this resource in the resource file as a line position (<see cref="P:System.Drawing.Point.X" />) and a column position (<see cref="P:System.Drawing.Point.Y" />). If this resource is not part of a resource file, returns a <see cref="T:System.Drawing.Point" /> structure with an <see cref="P:System.Drawing.Point.X" /> of 0 and a <see cref="P:System.Drawing.Point.Y" /> of 0. </returns>
    </member>
    <member name="M:System.Resources.ResXDataNode.GetValue(System.ComponentModel.Design.ITypeResolutionService)">
      <summary>Gets the object stored by this node.</summary>
      <returns>The <see cref="T:System.Object" /> corresponding to the stored value. </returns>
      <param name="typeResolver">The type resolution service to use when looking for a type converter.</param>
      <exception cref="T:System.TypeLoadException">The corresponding type could not be found, or an appropriate type converter is not available.</exception>
    </member>
    <member name="M:System.Resources.ResXDataNode.GetValue(System.Reflection.AssemblyName[])">
      <summary>Gets the object stored by this node.</summary>
      <returns>The <see cref="T:System.Object" /> corresponding to the stored value. </returns>
      <param name="names">The list of assemblies in which to look for the type of the object.</param>
      <exception cref="T:System.TypeLoadException">The corresponding type could not be found, or an appropriate type converter is not available.</exception>
    </member>
    <member name="M:System.Resources.ResXDataNode.GetValueTypeName(System.ComponentModel.Design.ITypeResolutionService)">
      <summary>A <see cref="T:System.String" /> representing the fully qualified name of the type.</summary>
      <returns>A <see cref="T:System.String" /> representing the fully qualified name of the type.</returns>
      <param name="typeResolver">The type resolution service to use to locate a converter for this type. </param>
      <exception cref="T:System.TypeLoadException">The corresponding type could not be found. </exception>
    </member>
    <member name="M:System.Resources.ResXDataNode.GetValueTypeName(System.Reflection.AssemblyName[])">
      <summary>Gets the name of the type of the value.</summary>
      <returns>A <see cref="T:System.String" /> representing the fully qualified name of the type.</returns>
      <param name="names">The assemblies to examine for the type. </param>
      <exception cref="T:System.TypeLoadException">The corresponding type could not be found. </exception>
    </member>
    <member name="P:System.Resources.ResXDataNode.Name">
      <summary>Gets or sets the name of this resource.</summary>
      <returns>A <see cref="T:System.String" /> corresponding to the resource name. If no name is assigned, returns a zero-length string.</returns>
      <exception cref="T:System.ArgumentNullException">The name property is set to null.</exception>
      <exception cref="T:System.ArgumentException">The name property is set to a string of zero length.</exception>
    </member>
    <member name="M:System.Resources.ResXDataNode.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Retrieves the object's data.</summary>
      <param name="si">A <see cref="T:System.Runtime.Serialization.SerializationInfo" /> object.</param>
      <param name="context">A <see cref="T:System.Runtime.Serialization.StreamingContext" /> object.</param>
    </member>
    <member name="T:System.Resources.ResXFileRef">
      <summary>Represents a link to an external resource.</summary>
    </member>
    <member name="M:System.Resources.ResXFileRef.#ctor(System.String,System.String)">
      <summary>Creates a new instance of the <see cref="T:System.Resources.ResXFileRef" /> class that references the specified file.</summary>
      <param name="fileName">The file to reference. </param>
      <param name="typeName">The type of the resource that is referenced. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="fileName" /> or <paramref name="typeName " />is null.</exception>
    </member>
    <member name="M:System.Resources.ResXFileRef.#ctor(System.String,System.String,System.Text.Encoding)">
      <summary>Initializes a new instance of the <see cref="T:System.Resources.ResXFileRef" /> class that references the specified file. </summary>
      <param name="fileName">The file to reference. </param>
      <param name="typeName">The type name of the resource that is referenced. </param>
      <param name="textFileEncoding">The encoding used in the referenced file.</param>
    </member>
    <member name="P:System.Resources.ResXFileRef.FileName">
      <summary>Gets the file name specified in the current <see cref="Overload:System.Resources.ResXFileRef.#ctor" /> constructor.</summary>
      <returns>The name of the referenced file.</returns>
    </member>
    <member name="P:System.Resources.ResXFileRef.TextFileEncoding">
      <summary>Gets the encoding specified in the current <see cref="Overload:System.Resources.ResXFileRef.#ctor" /> constructor.</summary>
      <returns>The encoding used in the referenced file.</returns>
    </member>
    <member name="M:System.Resources.ResXFileRef.ToString">
      <summary>Gets the text representation of the current <see cref="T:System.Resources.ResXFileRef" /> object.</summary>
      <returns>A string that consists of the concatenated text representations of the parameters specified in the current <see cref="Overload:System.Resources.ResXFileRef.#ctor" /> constructor.</returns>
    </member>
    <member name="P:System.Resources.ResXFileRef.TypeName">
      <summary>Gets the type name specified in the current <see cref="Overload:System.Resources.ResXFileRef.#ctor" /> constructor. </summary>
      <returns>The type name of the resource that is referenced. </returns>
    </member>
    <member name="T:System.Resources.ResXFileRef.Converter">
      <summary>Provides a type converter to convert data for a <see cref="T:System.Resources.ResXFileRef" /> to and from a string.</summary>
    </member>
    <member name="M:System.Resources.ResXFileRef.Converter.#ctor">
      <summary>Creates a new instance of the <see cref="T:System.Resources.ResXFileRef.Converter" /> class. </summary>
    </member>
    <member name="M:System.Resources.ResXFileRef.Converter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)">
      <summary>Returns whether this converter can convert an object of the given type to the type of this converter, using the specified context.</summary>
      <returns>true if this converter can perform the conversion; otherwise, false.</returns>
      <param name="context">An <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> that provides a format context. </param>
      <param name="sourceType">A <see cref="T:System.Type" /> that represents the type you want to convert from. </param>
    </member>
    <member name="M:System.Resources.ResXFileRef.Converter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)">
      <summary>Returns whether this converter can convert the object to the specified type, using the specified context.</summary>
      <returns>true if this converter can perform the conversion; otherwise, false.</returns>
      <param name="context">An <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> that provides a format context. </param>
      <param name="destinationType">A <see cref="T:System.Type" /> that represents the type you want to convert to. </param>
    </member>
    <member name="M:System.Resources.ResXFileRef.Converter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
      <summary>Converts the given object to the type of this converter, using the specified context and culture information.</summary>
      <returns>An <see cref="T:System.Object" /> that represents the converted value.</returns>
      <param name="context">An <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> that provides a format context. </param>
      <param name="culture">The <see cref="T:System.Globalization.CultureInfo" /> to use as the current culture. </param>
      <param name="value">The <see cref="T:System.Object" /> to convert. </param>
    </member>
    <member name="M:System.Resources.ResXFileRef.Converter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
      <summary>Provides a type converter to convert data for an resource reference to and from a string.</summary>
      <returns>An <see cref="T:System.Object" /> that represents the converted value.</returns>
      <param name="context">An <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> that provides a format context. </param>
      <param name="culture">A <see cref="T:System.Globalization.CultureInfo" />. If null is passed, the current culture is assumed. </param>
      <param name="value">The <see cref="T:System.Object" /> to convert. </param>
      <param name="destinationType">The <see cref="T:System.Type" /> to convert the <paramref name="value" /> parameter to. </param>
    </member>
    <member name="T:System.Resources.ResXResourceReader">
      <summary>Enumerates XML resource (.resx) files and streams, and reads the sequential resource name and value pairs.</summary>
    </member>
    <member name="M:System.Resources.ResXResourceReader.#ctor(System.IO.Stream)">
      <summary>Initializes a new instance of the <see cref="T:System.Resources.ResXResourceReader" /> class for the specified stream.</summary>
      <param name="stream">An input stream that contains resources. </param>
    </member>
    <member name="M:System.Resources.ResXResourceReader.#ctor(System.IO.Stream,System.ComponentModel.Design.ITypeResolutionService)">
      <summary>Initializes a new instance of the <see cref="T:System.Resources.ResXResourceReader" /> class using an input stream and a type resolution service.  </summary>
      <param name="stream">An input stream that contains resources. </param>
      <param name="typeResolver">A <see cref="T:System.ComponentModel.Design.ITypeResolutionService" /> object that resolves type names specified in a resource.</param>
    </member>
    <member name="M:System.Resources.ResXResourceReader.#ctor(System.IO.Stream,System.Reflection.AssemblyName[])">
      <summary>Initializes a new instance of the <see cref="T:System.Resources.ResXResourceReader" /> class using a stream and an array of assembly names. </summary>
      <param name="stream">An input stream that contains resources. </param>
      <param name="assemblyNames">An array of <see cref="T:System.Reflection.AssemblyName" /> objects that specifies one or more assemblies. The assemblies are used to resolve a type name in the resource to an actual type. </param>
    </member>
    <member name="M:System.Resources.ResXResourceReader.#ctor(System.IO.TextReader)">
      <summary>Initializes a new instance of the <see cref="T:System.Resources.ResXResourceReader" /> class for the specified <see cref="T:System.IO.TextReader" />.</summary>
      <param name="reader">A text input stream that contains resources. </param>
    </member>
    <member name="M:System.Resources.ResXResourceReader.#ctor(System.IO.TextReader,System.ComponentModel.Design.ITypeResolutionService)">
      <summary>Initializes a new instance of the <see cref="T:System.Resources.ResXResourceReader" /> class using a text stream reader and a type resolution service.  </summary>
      <param name="reader">A text stream reader that contains resources. </param>
      <param name="typeResolver">A <see cref="T:System.ComponentModel.Design.ITypeResolutionService" /> object that resolves type names specified in a resource.</param>
    </member>
    <member name="M:System.Resources.ResXResourceReader.#ctor(System.IO.TextReader,System.Reflection.AssemblyName[])">
      <summary>Initializes a new instance of the <see cref="T:System.Resources.ResXResourceReader" /> class using a <see cref="T:System.IO.TextReader" /> object and an array of assembly names.</summary>
      <param name="reader">A <see cref="T:System.IO.TextReader" /> object used to read resources from a stream of text. </param>
      <param name="assemblyNames">An array of <see cref="T:System.Reflection.AssemblyName" /> objects that specifies one or more assemblies. The assemblies are used to resolve a type name in the resource to an actual type. </param>
    </member>
    <member name="M:System.Resources.ResXResourceReader.#ctor(System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.Resources.ResXResourceReader" /> class for the specified resource file.</summary>
      <param name="fileName">The path of the resource file to read. </param>
    </member>
    <member name="M:System.Resources.ResXResourceReader.#ctor(System.String,System.ComponentModel.Design.ITypeResolutionService)">
      <summary>Initializes a new instance of the <see cref="T:System.Resources.ResXResourceReader" /> class using a file name and a type resolution service. </summary>
      <param name="fileName">The name of an XML resource file that contains resources. </param>
      <param name="typeResolver">A <see cref="T:System.ComponentModel.Design.ITypeResolutionService" /> object that resolves type names specified in a resource.</param>
    </member>
    <member name="M:System.Resources.ResXResourceReader.#ctor(System.String,System.Reflection.AssemblyName[])">
      <summary>Initializes a new instance of the <see cref="T:System.Resources.ResXResourceReader" /> class using an XML resource file name and an array of assembly names. </summary>
      <param name="fileName">The name of an XML resource file that contains resources. </param>
      <param name="assemblyNames">An array of <see cref="T:System.Reflection.AssemblyName" /> objects that specifies one or more assemblies. The assemblies are used to resolve a type name in the resource to an actual type. </param>
    </member>
    <member name="P:System.Resources.ResXResourceReader.BasePath">
      <summary>Gets or sets the base path for the relative file path specified in a <see cref="T:System.Resources.ResXFileRef" /> object.</summary>
      <returns>A path that, if prepended to the relative file path specified in a <see cref="T:System.Resources.ResXFileRef" /> object, yields an absolute path to a resource file.</returns>
      <exception cref="T:System.InvalidOperationException">In a set operation, a value cannot be specified because the XML resource file has already been accessed and is in use.</exception>
    </member>
    <member name="M:System.Resources.ResXResourceReader.Close">
      <summary>Releases all resources used by the <see cref="T:System.Resources.ResXResourceReader" />.</summary>
    </member>
    <member name="M:System.Resources.ResXResourceReader.Dispose(System.Boolean)">
      <summary>Releases the unmanaged resources used by the <see cref="T:System.Resources.ResXResourceReader" /> and optionally releases the managed resources.</summary>
      <param name="disposing">true to release both managed and unmanaged resources; false to release only unmanaged resources. </param>
    </member>
    <member name="M:System.Resources.ResXResourceReader.Finalize">
      <summary>This member overrides the <see cref="M:System.Object.Finalize" /> method. </summary>
    </member>
    <member name="M:System.Resources.ResXResourceReader.FromFileContents(System.String)">
      <summary>Creates a new <see cref="T:System.Resources.ResXResourceReader" /> object and initializes it to read a string whose contents are in the form of an XML resource file.</summary>
      <returns>A <see cref="T:System.Resources.ResXResourceReader" /> object that reads resources from the <paramref name="fileContents" /> string.</returns>
      <param name="fileContents">A string containing XML resource-formatted information. </param>
    </member>
    <member name="M:System.Resources.ResXResourceReader.FromFileContents(System.String,System.ComponentModel.Design.ITypeResolutionService)">
      <summary>Creates a new <see cref="T:System.Resources.ResXResourceReader" /> object and initializes it to read a string whose contents are in the form of an XML resource file, and to use an <see cref="T:System.ComponentModel.Design.ITypeResolutionService" /> object to resolve type names specified in a resource.</summary>
      <returns>A <see cref="T:System.Resources.ResXResourceReader" /> object that reads resources from the <paramref name="fileContents" /> string.</returns>
      <param name="fileContents">A string containing XML resource-formatted information. </param>
      <param name="typeResolver">A <see cref="T:System.ComponentModel.Design.ITypeResolutionService" /> object that resolves type names specified in a resource.</param>
    </member>
    <member name="M:System.Resources.ResXResourceReader.FromFileContents(System.String,System.Reflection.AssemblyName[])">
      <summary>Creates a new <see cref="T:System.Resources.ResXResourceReader" /> object and initializes it to read a string whose contents are in the form of an XML resource file, and to use an array of <see cref="T:System.Reflection.AssemblyName" /> objects to resolve type names specified in a resource. </summary>
      <returns>A <see cref="T:System.Resources.ResXResourceReader" /> object that reads resources from the <paramref name="fileContents" /> string.</returns>
      <param name="fileContents">A string whose contents are in the form of an XML resource file. </param>
      <param name="assemblyNames">An array of <see cref="T:System.Reflection.AssemblyName" /> objects that specifies one or more assemblies. The assemblies are used to resolve a type name in the resource to an actual type. </param>
    </member>
    <member name="M:System.Resources.ResXResourceReader.GetEnumerator">
      <summary>Returns an enumerator for the current <see cref="T:System.Resources.ResXResourceReader" /> object.</summary>
      <returns>An <see cref="T:System.Collections.IDictionaryEnumerator" /> for the current  <see cref="T:System.Resources.ResourceReader" /> object.</returns>
    </member>
    <member name="M:System.Resources.ResXResourceReader.GetMetadataEnumerator">
      <summary>Provides a dictionary enumerator that can retrieve the design-time properties from the current XML resource file or stream.</summary>
      <returns>An <see cref="T:System.Collections.IDictionaryEnumerator" /> object that can enumerate the metadata resources in a resource.</returns>
    </member>
    <member name="M:System.Resources.ResXResourceReader.System#Collections#IEnumerable#GetEnumerator">
      <summary>Returns an enumerator for the current <see cref="T:System.Resources.ResXResourceReader" /> object. For a description of this member, see <see cref="M:System.Collections.IEnumerable.GetEnumerator" />. </summary>
      <returns>An <see cref="T:System.Collections.IEnumerator" /> that can iterate through the name/value pairs in the XML resource (.resx) stream or string associated with the current <see cref="T:System.Resources.ResXResourceReader" /> object.</returns>
    </member>
    <member name="M:System.Resources.ResXResourceReader.System#IDisposable#Dispose">
      <summary>Releases the unmanaged resources used by the <see cref="T:System.Resources.ResXResourceReader" /> and optionally releases the managed resources. For a description of this member, see <see cref="M:System.IDisposable.Dispose" />. </summary>
    </member>
    <member name="P:System.Resources.ResXResourceReader.UseResXDataNodes">
      <summary>Gets or sets a value indicating whether <see cref="T:System.Resources.ResXDataNode" /> objects are returned when reading the current XML resource file or stream.</summary>
      <returns>true if resource data nodes are retrieved; false if resource data nodes are ignored.</returns>
      <exception cref="T:System.InvalidOperationException">In a set operation, the enumerator for the resource file or stream is already open.</exception>
    </member>
    <member name="T:System.Resources.ResXResourceSet">
      <summary>Gathers all items that represent an XML resource (.resx) file into a single object.</summary>
    </member>
    <member name="M:System.Resources.ResXResourceSet.#ctor(System.IO.Stream)">
      <summary>Initializes a new instance of the <see cref="T:System.Resources.ResXResourceSet" /> class using the system default <see cref="T:System.Resources.ResXResourceReader" /> to read resources from the specified stream.</summary>
      <param name="stream">The <see cref="T:System.IO.Stream" /> of resources to be read. The stream should refer to an existing resource file. </param>
    </member>
    <member name="M:System.Resources.ResXResourceSet.#ctor(System.String)">
      <summary>Initializes a new instance of a <see cref="T:System.Resources.ResXResourceSet" /> class using the system default <see cref="T:System.Resources.ResXResourceReader" /> that opens and reads resources from the specified file.</summary>
      <param name="fileName">The name of the file to read resources from. </param>
    </member>
    <member name="M:System.Resources.ResXResourceSet.GetDefaultReader">
      <summary>Returns the preferred resource reader class for this kind of <see cref="T:System.Resources.ResXResourceSet" />.</summary>
      <returns>The <see cref="T:System.Type" /> of the preferred resource reader for this kind of <see cref="T:System.Resources.ResXResourceSet" />.</returns>
    </member>
    <member name="M:System.Resources.ResXResourceSet.GetDefaultWriter">
      <summary>Returns the preferred resource writer class for this kind of <see cref="T:System.Resources.ResXResourceSet" />.</summary>
      <returns>The <see cref="T:System.Type" /> of the preferred resource writer for this kind of <see cref="T:System.Resources.ResXResourceSet" />.</returns>
    </member>
    <member name="T:System.Resources.ResXResourceWriter">
      <summary>Writes resources in an XML resource (.resx) file or an output stream.</summary>
    </member>
    <member name="M:System.Resources.ResXResourceWriter.#ctor(System.IO.Stream)">
      <summary>Initializes a new instance of the <see cref="T:System.Resources.ResXResourceWriter" /> class that writes the resources to the specified stream object.</summary>
      <param name="stream">The output stream. </param>
    </member>
    <member name="M:System.Resources.ResXResourceWriter.#ctor(System.IO.Stream,System.Func{System.Type,System.String})">
      <summary>Initializes a new instance of the <see cref="T:System.Resources.ResXResourceWriter" /> class that writes the resources to a specified stream object and sets a converter delegate. This delegate enables resource assemblies to be written that target versions of the .NET Framework before the .NET Framework versionÂ 4Â by usingÂ qualified assembly names.Â </summary>
      <param name="stream">The stream to send the output to.</param>
      <param name="typeNameConverter">The delegate that is used to target earlier versions of the .NET Framework.</param>
    </member>
    <member name="M:System.Resources.ResXResourceWriter.#ctor(System.IO.TextWriter)">
      <summary>Initializes a new instance of the <see cref="T:System.Resources.ResXResourceWriter" /> class that writes to the specified <see cref="T:System.IO.TextWriter" /> object.</summary>
      <param name="textWriter">The <see cref="T:System.IO.TextWriter" /> object to send the output to. </param>
    </member>
    <member name="M:System.Resources.ResXResourceWriter.#ctor(System.IO.TextWriter,System.Func{System.Type,System.String})">
      <summary>Initializes a new instance of the <see cref="T:System.Resources.ResXResourceWriter" /> class that writes the resources to a specified <see cref="T:System.IO.TextWriter" /> object and sets a delegate that enables resource assemblies to be written that target versions of the .NET Framework before the .NET Framework versionÂ 4Â by using qualified assembly names. </summary>
      <param name="textWriter">The object to send output to.</param>
      <param name="typeNameConverter">The delegate that is used to target earlier versions of the .NET Framework.</param>
    </member>
    <member name="M:System.Resources.ResXResourceWriter.#ctor(System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.Resources.ResXResourceWriter" /> class that writes the resources to the specified file.</summary>
      <param name="fileName">The output file name. </param>
    </member>
    <member name="M:System.Resources.ResXResourceWriter.#ctor(System.String,System.Func{System.Type,System.String})">
      <summary>Initializes a new instance of the <see cref="T:System.Resources.ResXResourceWriter" /> class that writes the resources to a specified file and sets a delegate that enables resource assemblies to be written that target versions of the .NET Framework before the .NET Framework versionÂ 4Â by using qualified assembly names.Â </summary>
      <param name="fileName">The file to send output to. </param>
      <param name="typeNameConverter">The delegate that is used to target earlier versions of the .NET Framework.</param>
    </member>
    <member name="M:System.Resources.ResXResourceWriter.AddAlias(System.String,System.Reflection.AssemblyName)">
      <summary>Adds the specified alias to a list of aliases. </summary>
      <param name="aliasName">The name of the alias.</param>
      <param name="assemblyName">The name of the assembly represented by <paramref name="aliasName" />.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="assemblyName" /> is null.</exception>
    </member>
    <member name="M:System.Resources.ResXResourceWriter.AddMetadata(System.String,System.Byte[])">
      <summary>Adds a design-time property whose value is specifed as a byte array to the list of resources to write.</summary>
      <param name="name">The name of a property.</param>
      <param name="value">A byte array containing the value of the property to add.</param>
      <exception cref="T:System.InvalidOperationException">The resource specified by the <paramref name="name" /> parameter has already been added.</exception>
    </member>
    <member name="M:System.Resources.ResXResourceWriter.AddMetadata(System.String,System.Object)">
      <summary>Adds a design-time property whose value is specified as an object to the list of resources to write.</summary>
      <param name="name">The name of a property.</param>
      <param name="value">An object that is the value of the property to add.</param>
      <exception cref="T:System.InvalidOperationException">The resource specified by the <paramref name="name" /> parameter has already been added.</exception>
    </member>
    <member name="M:System.Resources.ResXResourceWriter.AddMetadata(System.String,System.String)">
      <summary>Adds a design-time property whose value is specified as a string to the list of resources to write.</summary>
      <param name="name">The name of a property.</param>
      <param name="value">A string that is the value of the property to add.</param>
      <exception cref="T:System.InvalidOperationException">The resource specified by the <paramref name="name" /> property has already been added.</exception>
    </member>
    <member name="M:System.Resources.ResXResourceWriter.AddResource(System.Resources.ResXDataNode)">
      <summary>Adds a named resource specified in a <see cref="T:System.Resources.ResXDataNode" /> object to the list of resources to write.</summary>
      <param name="node">A <see cref="T:System.Resources.ResXDataNode" /> object that contains a resource name/value pair.</param>
    </member>
    <member name="M:System.Resources.ResXResourceWriter.AddResource(System.String,System.Byte[])">
      <summary>Adds a named resource specified as a byte array to the list of resources to write.</summary>
      <param name="name">The name of the resource. </param>
      <param name="value">The value of the resource to add as an 8-bit unsigned integer array. </param>
    </member>
    <member name="M:System.Resources.ResXResourceWriter.AddResource(System.String,System.Object)">
      <summary>Adds a named resource specified as an object to the list of resources to write.</summary>
      <param name="name">The name of the resource. </param>
      <param name="value">The value of the resource. </param>
    </member>
    <member name="M:System.Resources.ResXResourceWriter.AddResource(System.String,System.String)">
      <summary>Adds a string resource to the resources.</summary>
      <param name="name">The name of the resource. </param>
      <param name="value">The value of the resource. </param>
    </member>
    <member name="P:System.Resources.ResXResourceWriter.BasePath">
      <summary>Gets or sets the base path for the relative file path specified in a <see cref="T:System.Resources.ResXFileRef" /> object.</summary>
      <returns>A path that, if prepended to the relative file path specified in a <see cref="T:System.Resources.ResXFileRef" /> object, yields an absolute path to an XML resource file.</returns>
    </member>
    <member name="F:System.Resources.ResXResourceWriter.BinSerializedObjectMimeType">
      <summary>Specifies the default content type for a binary object. This field is read-only.</summary>
    </member>
    <member name="F:System.Resources.ResXResourceWriter.ByteArraySerializedObjectMimeType">
      <summary>Specifies the default content type for a byte array object. This field is read-only.</summary>
    </member>
    <member name="M:System.Resources.ResXResourceWriter.Close">
      <summary>Releases all resources used by the <see cref="T:System.Resources.ResXResourceWriter" />.</summary>
    </member>
    <member name="F:System.Resources.ResXResourceWriter.DefaultSerializedObjectMimeType">
      <summary>Specifies the default content type for an object. This field is read-only.</summary>
    </member>
    <member name="M:System.Resources.ResXResourceWriter.Dispose">
      <summary>Releases all resources used by the <see cref="T:System.Resources.ResXResourceWriter" />.</summary>
    </member>
    <member name="M:System.Resources.ResXResourceWriter.Dispose(System.Boolean)">
      <summary>Releases the unmanaged resources used by the <see cref="T:System.Resources.ResXResourceWriter" /> and optionally releases the managed resources.</summary>
      <param name="disposing">true to release both managed and unmanaged resources; false to release only unmanaged resources. </param>
    </member>
    <member name="M:System.Resources.ResXResourceWriter.Finalize">
      <summary>This member overrides the <see cref="M:System.Object.Finalize" /> method. </summary>
    </member>
    <member name="M:System.Resources.ResXResourceWriter.Generate">
      <summary>Writes all resources added by the <see cref="M:System.Resources.ResXResourceWriter.AddResource(System.String,System.Byte[])" /> method to the output file or stream.</summary>
      <exception cref="T:System.InvalidOperationException">The resource has already been saved. </exception>
    </member>
    <member name="F:System.Resources.ResXResourceWriter.ResMimeType">
      <summary>Specifies the content type of an XML resource. This field is read-only.</summary>
    </member>
    <member name="F:System.Resources.ResXResourceWriter.ResourceSchema">
      <summary>Specifies the schema to use in writing the XML file. This field is read-only.</summary>
    </member>
    <member name="F:System.Resources.ResXResourceWriter.SoapSerializedObjectMimeType">
      <summary>Specifies the content type for a SOAP object. This field is read-only.</summary>
    </member>
    <member name="F:System.Resources.ResXResourceWriter.Version">
      <summary>Specifies the version of the schema that the XML output conforms to. This field is read-only.</summary>
    </member>
    <member name="T:System.Windows.Forms.AccessibleEvents">
      <summary>Specifies events that are reported by accessible applications.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="F:System.Windows.Forms.AccessibleEvents.SystemSound">
      <summary>A sound was played. The system sends this event when a system sound, such as for menus, is played, even if no sound is audible. This might be caused by lack of a sound file or sound card. Servers send this event if a custom user interface element generates a sound.</summary>
    </member>
    <member name="F:System.Windows.Forms.AccessibleEvents.SystemAlert">
      <summary>An alert was generated. Server applications send this event whenever an important user interface change has occurred that a user might need to know about. The system does not send the event consistently for dialog box objects.</summary>
    </member>
    <member name="F:System.Windows.Forms.AccessibleEvents.SystemForeground">
      <summary>The foreground window changed. The system sends this event even if the foreground window is changed to another window in the same thread. Server applications never send this event.</summary>
    </member>
    <member name="F:System.Windows.Forms.AccessibleEvents.SystemMenuStart">
      <summary>A menu item on the menu bar was selected. The system sends this event for standard menus. Servers send this event for custom menus. The system might raise more than one MenuStart event that might or might not have a corresponding MenuEnd event.</summary>
    </member>
    <member name="F:System.Windows.Forms.AccessibleEvents.SystemMenuEnd">
      <summary>A menu from the menu bar was closed. The system sends this event for standard menus. Servers send this event for custom menus.</summary>
    </member>
    <member name="F:System.Windows.Forms.AccessibleEvents.SystemMenuPopupStart">
      <summary>A shortcut menu was displayed. The system sends this event for standard menus. Servers send this event for custom menus. The system does not send the event consistently.</summary>
    </member>
    <member name="F:System.Windows.Forms.AccessibleEvents.SystemMenuPopupEnd">
      <summary>A shortcut menu was closed. The system sends this event for standard menus. Servers send this event for custom menus. When a shortcut menu is closed, the client receives this message followed almost immediately by the SystemMenuEnd event. The system does not send the event consistently.</summary>
    </member>
    <member name="F:System.Windows.Forms.AccessibleEvents.SystemCaptureStart">
      <summary>A window is being moved or resized. The system sends the event; servers never send this event.</summary>
    </member>
    <member name="F:System.Windows.Forms.AccessibleEvents.SystemCaptureEnd">
      <summary>A window has lost mouse capture. The system sends the event; servers never send this event.</summary>
    </member>
    <member name="F:System.Windows.Forms.AccessibleEvents.SystemMoveSizeStart">
      <summary>A window is being moved or resized. The system sends the event; servers never send this event.</summary>
    </member>
    <member name="F:System.Windows.Forms.AccessibleEvents.SystemMoveSizeEnd">
      <summary>The movement or resizing of a window is finished. The system sends the event; servers never send this event.</summary>
    </member>
    <member name="F:System.Windows.Forms.AccessibleEvents.SystemContextHelpStart">
      <summary>A window entered context-sensitive Help mode. The system does not send the event consistently.</summary>
    </member>
    <member name="F:System.Windows.Forms.AccessibleEvents.SystemContextHelpEnd">
      <summary>A window exited context-sensitive Help mode. The system does not send the event consistently.</summary>
    </member>
    <member name="F:System.Windows.Forms.AccessibleEvents.SystemDragDropStart">
      <summary>An application is about to enter drag-and-drop mode. Applications that support drag-and-drop operations must send this event; the system does not.</summary>
    </member>
    <member name="F:System.Windows.Forms.AccessibleEvents.SystemDragDropEnd">
      <summary>An application is about to exit drag-and-drop mode. Applications that support drag-and-drop operations must send this event; the system does not.</summary>
    </member>
    <member name="F:System.Windows.Forms.AccessibleEvents.SystemDialogStart">
      <summary>A dialog box was displayed. The system sends the event for standard dialog boxes. Servers send this event for custom dialog boxes. The system does not send the event consistently.</summary>
    </member>
    <member name="F:System.Windows.Forms.AccessibleEvents.SystemDialogEnd">
      <summary>A dialog box was closed. The system does not send the event for standard dialog boxes. Servers send this event for custom dialog boxes. The system does not send the event consistently.</summary>
    </member>
    <member name="F:System.Windows.Forms.AccessibleEvents.SystemScrollingStart">
      <summary>Scrolling has started on a scroll bar. The system sends the event for scroll bars attached to a window and for standard scroll bar controls. Servers send this event for custom scroll bars.</summary>
    </member>
    <member name="F:System.Windows.Forms.AccessibleEvents.SystemScrollingEnd">
      <summary>Scrolling has ended on a scroll bar. The system sends this event for scroll bars attached to a window and for standard scroll bar controls. Servers send this event for custom scroll bars.</summary>
    </member>
    <member name="F:System.Windows.Forms.AccessibleEvents.SystemSwitchStart">
      <summary>The user pressed ALT+TAB, which activates the switch window. If only one application is running when the user presses ALT+TAB, the system raises the SwitchEnd event without a corresponding SwitchStart event.</summary>
    </member>
    <member name="F:System.Windows.Forms.AccessibleEvents.SystemSwitchEnd">
      <summary>The user released ALT+TAB. The system sends the SwitchEnd event; servers never send this event. If only one application is running when the user presses ALT+TAB, the system sends the SwitchEnd event without a corresponding SwitchStart event.</summary>
    </member>
    <member name="F:System.Windows.Forms.AccessibleEvents.SystemMinimizeStart">
      <summary>A window object is about to be minimized or maximized. The system sends the event; servers never send this event.</summary>
    </member>
    <member name="F:System.Windows.Forms.AccessibleEvents.SystemMinimizeEnd">
      <summary>A window object was minimized or maximized. The system sends the event; servers never send this event.</summary>
    </member>
    <member name="F:System.Windows.Forms.AccessibleEvents.Create">
      <summary>An object was created. The operating system sends the event for the following user interface elements: caret, header control, list view control, tab control, toolbar control, tree view control, and window object. Server applications send this event for their accessible objects. Servers must send this event for all an object's child objects before sending the event for the parent object. Servers must ensure that all child objects are fully created and ready to accept calls from clients when the parent object sends the event.</summary>
    </member>
    <member name="F:System.Windows.Forms.AccessibleEvents.Destroy">
      <summary>An object was destroyed. The system sends this event for the following user interface elements: caret, header control, list view control, tab control, toolbar control, tree view control, and window object. Server applications send this event for their accessible objects. This event may or may not be sent for child objects. However, clients can conclude that all the children of an object have been destroyed when the parent object sends this event.</summary>
    </member>
    <member name="F:System.Windows.Forms.AccessibleEvents.Show">
      <summary>A hidden object is being shown. The system sends this event for the following user interface elements: caret, cursor, and window object. Server applications send this event for their accessible objects. Clients can conclude that, when this event is sent by a parent object, all child objects have already been displayed. Therefore, server applications do not need to send this event for the child objects.</summary>
    </member>
    <member name="F:System.Windows.Forms.AccessibleEvents.Hide">
      <summary>An object is hidden. The system sends the event for the following user interface elements: caret and cursor. Server applications send the event for their accessible objects. When the event is generated for a parent object, all child objects have already been hidden. Therefore, server applications do not need to send the event for the child objects. The system does not send the event consistently.</summary>
    </member>
    <member name="F:System.Windows.Forms.AccessibleEvents.Reorder">
      <summary>A container object has added, removed, or reordered its children. The system sends this event for the following user interface elements: header control, list view control, toolbar control, and window object. Server applications send this event as appropriate for their accessible objects. This event is also sent by a parent window when the z order for the child windows changes.</summary>
    </member>
    <member name="F:System.Windows.Forms.AccessibleEvents.Focus">
      <summary>An object has received the keyboard focus. The system sends this event for the following user interface elements: list view control, menu bar, shortcut menu, switch window, tab control, tree view control, and window object. Server applications send this event for their accessible objects.</summary>
    </member>
    <member name="F:System.Windows.Forms.AccessibleEvents.Selection">
      <summary>An accessible object within a container object has been selected. This event signals a single selection. Either a child has been selected in a container that previously did not contain any selected children, or the selection has changed from one child to another.</summary>
    </member>
    <member name="F:System.Windows.Forms.AccessibleEvents.SelectionAdd">
      <summary>An item within a container object was added to the selection. The system sends this event for the following user interface elements: list box, list view control, and tree view control. Server applications send this event for their accessible objects. This event signals that a child has been added to an existing selection.</summary>
    </member>
    <member name="F:System.Windows.Forms.AccessibleEvents.SelectionRemove">
      <summary>An item within a container object was removed from the selection. The system sends this event for the following user interface elements: list box, list view control, and tree view control. Server applications send this event for their accessible objects. This event signals that a child has been removed from an existing selection.</summary>
    </member>
    <member name="F:System.Windows.Forms.AccessibleEvents.SelectionWithin">
      <summary>Numerous selection changes occurred within a container object. The system sends this event for list boxes. Server applications send this event for their accessible objects. This event can be sent when the selected items within a control have changed substantially. This event informs the client that many selection changes have occurred. This is preferable to sending several SelectionAdd or SelectionRemove events.</summary>
    </member>
    <member name="F:System.Windows.Forms.AccessibleEvents.StateChange">
      <summary>An object's state has changed. The system sends the event for the following user interface elements: check box, combo box, header control, push button, radio button, scroll bar, toolbar control, tree view control, up-down control, and window object. Server applications send the event for their accessible objects. For example, a state change can occur when a button object has been pressed or released, or when an object is being enabled or disabled. The system does not send the event consistently.</summary>
    </member>
    <member name="F:System.Windows.Forms.AccessibleEvents.LocationChange">
      <summary>An object has changed location, shape, or size. The system sends this event for the following user interface elements: caret and window object. Server applications send this event for their accessible objects. This event is generated in response to the top-level object within the object hierarchy that has changed, not for any children it might contain. For example, if the user resizes a window, the system sends this notification for the window, but not for the menu bar, title bar, scroll bars, or other objects that have also changed. The system does not send this event for every non-floating child window when the parent moves. However, if an application explicitly resizes child windows as a result of being resized, the system sends multiple events for the resized children. If an object's <see cref="P:System.Windows.Forms.AccessibleObject.State" /> property is set to <see cref="F:System.Windows.Forms.AccessibleStates.Floating" />, servers should send a location change event whenever the object changes location. If an object does not have this state, servers should raise this event when the object moves relative to its parent.</summary>
    </member>
    <member name="F:System.Windows.Forms.AccessibleEvents.NameChange">
      <summary>An object's <see cref="P:System.Windows.Forms.AccessibleObject.Name" /> property changed. The system sends this event for the following user interface elements: check box, cursor, list view control, push button, radio button, status bar control, tree view control, and window object. Server applications send this event for their accessible objects.</summary>
    </member>
    <member name="F:System.Windows.Forms.AccessibleEvents.DescriptionChange">
      <summary>An object's <see cref="P:System.Windows.Forms.AccessibleObject.Description" /> property changed. Server applications send this event for their accessible objects.</summary>
    </member>
    <member name="F:System.Windows.Forms.AccessibleEvents.ValueChange">
      <summary>An object's <see cref="P:System.Windows.Forms.AccessibleObject.Value" /> property changed. The system raises the ValueChange event for the following user interface elements: edit control, header control, hot key control, progress bar control, scroll bar, slider control, and up-down control. Server applications send this event for their accessible objects.</summary>
    </member>
    <member name="F:System.Windows.Forms.AccessibleEvents.ParentChange">
      <summary>An object has a new parent object. Server applications send this event for their accessible objects.</summary>
    </member>
    <member name="F:System.Windows.Forms.AccessibleEvents.HelpChange">
      <summary>An object's <see cref="P:System.Windows.Forms.AccessibleObject.Help" /> property changed. Server applications send this event for their accessible objects.</summary>
    </member>
    <member name="F:System.Windows.Forms.AccessibleEvents.DefaultActionChange">
      <summary>An object's <see cref="P:System.Windows.Forms.AccessibleObject.DefaultAction" /> property changed. The system sends this event for dialog boxes. Server applications send this event for their accessible objects. Therefore, server applications do not need to send this event for the child objects. Hidden objects have a state of <see cref="F:System.Windows.Forms.AccessibleStates.Invisible" />, and shown objects do not. Events of type AccessibleEvents.Hide indicate that a state of <see cref="F:System.Windows.Forms.AccessibleStates.Invisible" /> has been set. Therefore, servers do not need to send the AccessibleEvents.StateChange event in this case.</summary>
    </member>
    <member name="F:System.Windows.Forms.AccessibleEvents.AcceleratorChange">
      <summary>An object's <see cref="P:System.Windows.Forms.AccessibleObject.KeyboardShortcut" /> property changed. Server applications send the event for their accessible objects.</summary>
    </member>
    <member name="T:System.Windows.Forms.AccessibleNavigation">
      <summary>Specifies values for navigating among accessible objects.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="F:System.Windows.Forms.AccessibleNavigation.Down">
      <summary>Navigation to a sibling object located below the starting object.</summary>
    </member>
    <member name="F:System.Windows.Forms.AccessibleNavigation.FirstChild">
      <summary>Navigation to the first child of the object.</summary>
    </member>
    <member name="F:System.Windows.Forms.AccessibleNavigation.LastChild">
      <summary>Navigation to the last child of the object.</summary>
    </member>
    <member name="F:System.Windows.Forms.AccessibleNavigation.Left">
      <summary>Navigation to the sibling object located to the left of the starting object.</summary>
    </member>
    <member name="F:System.Windows.Forms.AccessibleNavigation.Next">
      <summary>Navigation to the next logical object, typically from a sibling object to the starting object.</summary>
    </member>
    <member name="F:System.Windows.Forms.AccessibleNavigation.Previous">
      <summary>Navigation to the previous logical object, typically from a sibling object to the starting object.</summary>
    </member>
    <member name="F:System.Windows.Forms.AccessibleNavigation.Right">
      <summary>Navigation to the sibling object located to the right of the starting object.</summary>
    </member>
    <member name="F:System.Windows.Forms.AccessibleNavigation.Up">
      <summary>Navigation to a sibling object located above the starting object.</summary>
    </member>
    <member name="T:System.Windows.Forms.AccessibleObject">
      <summary>Provides information that accessibility applications use to adjust an application's user interface (UI) for users with impairments.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Windows.Forms.AccessibleObject.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Forms.AccessibleObject" /> class.</summary>
    </member>
    <member name="P:System.Windows.Forms.AccessibleObject.Accessibility#IAccessible#accChildCount">
      <summary>Gets the number of child interfaces that belong to this object. For a description of this member, see <see cref="P:Accessibility.IAccessible.accChildCount" />.</summary>
      <returns>The number of child accessible objects that belong to this object. If the object has no child objects, this value is 0.</returns>
    </member>
    <member name="M:System.Windows.Forms.AccessibleObject.Accessibility#IAccessible#accDoDefaultAction(System.Object)">
      <summary>Performs the specified object's default action. Not all objects have a default action. For a description of this member, see <see cref="M:Accessibility.IAccessible.accDoDefaultAction(System.Object)" />.</summary>
      <param name="childID">The child ID in the <see cref="T:Accessibility.IAccessible" /> interface/child ID pair that represents the accessible object.</param>
    </member>
    <member name="P:System.Windows.Forms.AccessibleObject.Accessibility#IAccessible#accFocus">
      <summary>Gets the object that has the keyboard focus. For a description of this member, see <see cref="P:Accessibility.IAccessible.accFocus" />.</summary>
      <returns>The object that has keyboard focus. </returns>
    </member>
    <member name="M:System.Windows.Forms.AccessibleObject.Accessibility#IAccessible#accHitTest(System.Int32,System.Int32)">
      <summary>Gets the child object at the specified screen coordinates. For a description of this member, see <see cref="M:Accessibility.IAccessible.accHitTest(System.Int32,System.Int32)" />.</summary>
      <returns>The accessible object at the point specified by <paramref name="xLeft" /> and <paramref name="yTop" />. </returns>
      <param name="xLeft">The horizontal coordinate.</param>
      <param name="yTop">The vertical coordinate.</param>
    </member>
    <member name="M:System.Windows.Forms.AccessibleObject.Accessibility#IAccessible#accLocation(System.Int32@,System.Int32@,System.Int32@,System.Int32@,System.Object)">
      <summary>Gets the object's current screen location. For a description of this member, see <see cref="M:Accessibility.IAccessible.accLocation(System.Int32@,System.Int32@,System.Int32@,System.Int32@,System.Object)" />.</summary>
      <param name="pxLeft">When this method returns, contains the x-coordinate of the objectâs left edge. This parameter is passed uninitialized.</param>
      <param name="pyTop">When this method returns, contains the y-coordinate of the objectâs top edge. This parameter is passed uninitialized.</param>
      <param name="pcxWidth">When this method returns, contains the width of the object. This parameter is passed uninitialized.</param>
      <param name="pcyHeight">When this method returns, contains the height of the object. This parameter is passed uninitialized.</param>
      <param name="childID">The ID number of the accessible object. This parameter is 0 to get the location of the object, or a child ID to get the location of one of the object's child objects.</param>
    </member>
    <member name="M:System.Windows.Forms.AccessibleObject.Accessibility#IAccessible#accNavigate(System.Int32,System.Object)">
      <summary>Navigates to an accessible object relative to the current object. For a description of this member, see <see cref="M:Accessibility.IAccessible.accNavigate(System.Int32,System.Object)" />.</summary>
      <returns>The accessible object positioned at the value specified by <paramref name="navDir" />. </returns>
      <param name="navDir">One of the <see cref="T:System.Windows.Forms.AccessibleNavigation" /> enumerations that specifies the direction to navigate. </param>
      <param name="childID">The ID number of the accessible object. This parameter is 0 to start from the object, or a child ID to start from one of the object's child objects.</param>
    </member>
    <member name="P:System.Windows.Forms.AccessibleObject.Accessibility#IAccessible#accParent">
      <summary>Gets the parent accessible object of this object. For a description of this member, see <see cref="P:Accessibility.IAccessible.accParent" />.</summary>
      <returns>An <see cref="T:Accessibility.IAccessible" /> that represents the parent of the accessible object, or null if there is no parent object.</returns>
    </member>
    <member name="M:System.Windows.Forms.AccessibleObject.Accessibility#IAccessible#accSelect(System.Int32,System.Object)">
      <summary>Modifies the selection or moves the keyboard focus of the accessible object. For a description of this member, see <see cref="M:Accessibility.IAccessible.accSelect(System.Int32,System.Object)" />.</summary>
      <param name="flagsSelect">A bitwise combination of the <see cref="T:System.Windows.Forms.AccessibleSelection" /> values.</param>
      <param name="childID">The ID number of the accessible object on which to perform the selection. This parameter is 0 to select the object, or a child ID to select one of the object's child objects.</param>
    </member>
    <member name="P:System.Windows.Forms.AccessibleObject.Accessibility#IAccessible#accSelection">
      <summary>Gets the selected child objects of an accessible object. For a description of this member, see <see cref="P:Accessibility.IAccessible.accSelection" />.</summary>
      <returns>The selected child objects of an accessible object. </returns>
    </member>
    <member name="P:System.Windows.Forms.AccessibleObject.Bounds">
      <summary>Gets the location and size of the accessible object.</summary>
      <returns>A <see cref="T:System.Drawing.Rectangle" /> that represents the bounds of the accessible object.</returns>
      <exception cref="T:System.Runtime.InteropServices.COMException">The bounds of control cannot be retrieved. </exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="P:System.Windows.Forms.AccessibleObject.DefaultAction">
      <summary>Gets a string that describes the default action of the object. Not all objects have a default action.</summary>
      <returns>A description of the default action for an object, or null if this object has no default action.</returns>
      <exception cref="T:System.Runtime.InteropServices.COMException">The default action for the control cannot be retrieved. </exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="P:System.Windows.Forms.AccessibleObject.Description">
      <summary>Gets a string that describes the visual appearance of the specified object. Not all objects have a description.</summary>
      <returns>A description of the object's visual appearance to the user, or null if the object does not have a description.</returns>
      <exception cref="T:System.Runtime.InteropServices.COMException">The description for the control cannot be retrieved. </exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Windows.Forms.AccessibleObject.DoDefaultAction">
      <summary>Performs the default action associated with this accessible object.</summary>
      <exception cref="T:System.Runtime.InteropServices.COMException">The default action for the control cannot be performed. </exception>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="M:System.Windows.Forms.AccessibleObject.GetChild(System.Int32)">
      <summary>Retrieves the accessible child corresponding to the specified index.</summary>
      <returns>An <see cref="T:System.Windows.Forms.AccessibleObject" /> that represents the accessible child corresponding to the specified index.</returns>
      <param name="index">The zero-based index of the accessible child. </param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Windows.Forms.AccessibleObject.GetChildCount">
      <summary>Retrieves the number of children belonging to an accessible object.</summary>
      <returns>The number of children belonging to an accessible object.</returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Windows.Forms.AccessibleObject.GetFocused">
      <summary>Retrieves the object that has the keyboard focus.</summary>
      <returns>An <see cref="T:System.Windows.Forms.AccessibleObject" /> that specifies the currently focused child. This method returns the calling object if the object itself is focused. Returns null if no object has focus.</returns>
      <exception cref="T:System.Runtime.InteropServices.COMException">The control cannot be retrieved. </exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Windows.Forms.AccessibleObject.GetHelpTopic(System.String@)">
      <summary>Gets an identifier for a Help topic identifier and the path to the Help file associated with this accessible object.</summary>
      <returns>An identifier for a Help topic, or -1 if there is no Help topic. On return, the <paramref name="fileName" /> parameter contains the path to the Help file associated with this accessible object.</returns>
      <param name="fileName">On return, this property contains the path to the Help file associated with this accessible object. </param>
      <exception cref="T:System.Runtime.InteropServices.COMException">The Help topic for the control cannot be retrieved. </exception>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:System.Windows.Forms.AccessibleObject.GetSelected">
      <summary>Retrieves the currently selected child.</summary>
      <returns>An <see cref="T:System.Windows.Forms.AccessibleObject" /> that represents the currently selected child. This method returns the calling object if the object itself is selected. Returns null if is no child is currently selected and the object itself does not have focus.</returns>
      <exception cref="T:System.Runtime.InteropServices.COMException">The selected child cannot be retrieved. </exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="P:System.Windows.Forms.AccessibleObject.Help">
      <summary>Gets a description of what the object does or how the object is used.</summary>
      <returns>A <see cref="T:System.String" /> that contains the description of what the object does or how the object is used. Returns null if no help is defined.</returns>
      <exception cref="T:System.Runtime.InteropServices.COMException">The help string for the control cannot be retrieved. </exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Windows.Forms.AccessibleObject.HitTest(System.Int32,System.Int32)">
      <summary>Retrieves the child object at the specified screen coordinates.</summary>
      <returns>An <see cref="T:System.Windows.Forms.AccessibleObject" /> that represents the child object at the given screen coordinates. This method returns the calling object if the object itself is at the location specified. Returns null if no object is at the tested location.</returns>
      <param name="x">The horizontal screen coordinate. </param>
      <param name="y">The vertical screen coordinate. </param>
      <exception cref="T:System.Runtime.InteropServices.COMException">The control cannot be hit tested. </exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="P:System.Windows.Forms.AccessibleObject.KeyboardShortcut">
      <summary>Gets the shortcut key or access key for the accessible object.</summary>
      <returns>The shortcut key or access key for the accessible object, or null if there is no shortcut key associated with the object.</returns>
      <exception cref="T:System.Runtime.InteropServices.COMException">The shortcut for the control cannot be retrieved. </exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="P:System.Windows.Forms.AccessibleObject.Name">
      <summary>Gets or sets the object name.</summary>
      <returns>The object name, or null if the property has not been set.</returns>
      <exception cref="T:System.Runtime.InteropServices.COMException">The name of the control cannot be retrieved or set. </exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Windows.Forms.AccessibleObject.Navigate(System.Windows.Forms.AccessibleNavigation)">
      <summary>Navigates to another accessible object.</summary>
      <returns>An <see cref="T:System.Windows.Forms.AccessibleObject" /> that represents one of the <see cref="T:System.Windows.Forms.AccessibleNavigation" /> values.</returns>
      <param name="navdir">One of the <see cref="T:System.Windows.Forms.AccessibleNavigation" /> values. </param>
      <exception cref="T:System.Runtime.InteropServices.COMException">The navigation attempt fails. </exception>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="P:System.Windows.Forms.AccessibleObject.Parent">
      <summary>Gets the parent of an accessible object.</summary>
      <returns>An <see cref="T:System.Windows.Forms.AccessibleObject" /> that represents the parent of an accessible object, or null if there is no parent object.</returns>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="P:System.Windows.Forms.AccessibleObject.Role">
      <summary>Gets the role of this accessible object.</summary>
      <returns>One of the <see cref="T:System.Windows.Forms.AccessibleRole" /> values, or <see cref="F:System.Windows.Forms.AccessibleRole.None" /> if no role has been specified.</returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Windows.Forms.AccessibleObject.Select(System.Windows.Forms.AccessibleSelection)">
      <summary>Modifies the selection or moves the keyboard focus of the accessible object.</summary>
      <param name="flags">One of the <see cref="T:System.Windows.Forms.AccessibleSelection" /> values. </param>
      <exception cref="T:System.Runtime.InteropServices.COMException">The selection cannot be performed. </exception>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="P:System.Windows.Forms.AccessibleObject.State">
      <summary>Gets the state of this accessible object.</summary>
      <returns>One of the <see cref="T:System.Windows.Forms.AccessibleStates" /> values, or <see cref="F:System.Windows.Forms.AccessibleStates.None" />, if no state has been set.</returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Windows.Forms.AccessibleObject.System#Reflection#IReflect#GetField(System.String,System.Reflection.BindingFlags)">
      <summary>Gets the <see cref="T:System.Reflection.FieldInfo" /> object corresponding to the specified field and binding flag. For a description of this member, see <see cref="M:System.Reflection.IReflect.GetField(System.String,System.Reflection.BindingFlags)" />.</summary>
      <returns>A <see cref="T:System.Reflection.FieldInfo" /> object containing the field information for the named object that meets the search constraints specified in <paramref name="bindingAttr" />.</returns>
      <param name="name">The name of the field to find.</param>
      <param name="bindingAttr">The binding attributes used to control the search.</param>
      <exception cref="T:System.Reflection.AmbiguousMatchException">The object implements multiple fields with the same name.</exception>
    </member>
    <member name="M:System.Windows.Forms.AccessibleObject.System#Reflection#IReflect#GetFields(System.Reflection.BindingFlags)">
      <summary>Gets an array of <see cref="T:System.Reflection.FieldInfo" /> objects corresponding to all fields of the current class. For a description of this member, see <see cref="M:System.Reflection.IReflect.GetFields(System.Reflection.BindingFlags)" />.</summary>
      <returns>An array of <see cref="T:System.Reflection.FieldInfo" /> objects containing all the field information for this reflection object that meets the search constraints specified in <paramref name="bindingAttr" />.</returns>
      <param name="bindingAttr">The binding attributes used to control the search.</param>
    </member>
    <member name="M:System.Windows.Forms.AccessibleObject.System#Reflection#IReflect#GetMember(System.String,System.Reflection.BindingFlags)">
      <summary>Gets an array of <see cref="T:System.Reflection.MemberInfo" /> objects corresponding to all public members or to all members that match a specified name. For a description of this member, see <see cref="M:System.Reflection.IReflect.GetMember(System.String,System.Reflection.BindingFlags)" />.</summary>
      <returns>An array of <see cref="T:System.Reflection.MemberInfo" /> objects matching the name parameter.</returns>
      <param name="name">The name of the member to find.</param>
      <param name="bindingAttr">The binding attributes used to control the search.</param>
    </member>
    <member name="M:System.Windows.Forms.AccessibleObject.System#Reflection#IReflect#GetMembers(System.Reflection.BindingFlags)">
      <summary>Gets an array of <see cref="T:System.Reflection.MemberInfo" /> objects corresponding either to all public members or to all members of the current class. For a description of this member, see <see cref="M:System.Reflection.IReflect.GetMembers(System.Reflection.BindingFlags)" />.</summary>
      <returns>An array of <see cref="T:System.Reflection.MemberInfo" /> objects containing all the member information for this reflection object.</returns>
      <param name="bindingAttr">The binding attributes used to control the search.</param>
    </member>
    <member name="M:System.Windows.Forms.AccessibleObject.System#Reflection#IReflect#GetMethod(System.String,System.Reflection.BindingFlags)">
      <summary>Gets a <see cref="T:System.Reflection.MethodInfo" /> object corresponding to a specified method under specified search constraints. For a description of this member, see <see cref="M:System.Reflection.IReflect.GetMethod(System.String,System.Reflection.BindingFlags)" />.</summary>
      <returns>A <see cref="T:System.Reflection.MethodInfo" /> object containing the method information, with the match being based on the method name and search constraints specified in <paramref name="bindingAttr" />.</returns>
      <param name="name">The name of the member to find.</param>
      <param name="bindingAttr">The binding attributes used to control the search.</param>
      <exception cref="T:System.Reflection.AmbiguousMatchException">The object implements multiple methods with the same name.</exception>
    </member>
    <member name="M:System.Windows.Forms.AccessibleObject.System#Reflection#IReflect#GetMethod(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Type[],System.Reflection.ParameterModifier[])">
      <summary>Gets a <see cref="T:System.Reflection.MethodInfo" /> object corresponding to a specified method, using a Type array to choose from among overloaded methods. For a description of this member, see <see cref="M:System.Reflection.IReflect.GetMethod(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Type[],System.Reflection.ParameterModifier[])" />.</summary>
      <returns>The requested method that matches all the specified parameters.</returns>
      <param name="name">The name of the member to find.</param>
      <param name="bindingAttr">The binding attributes used to control the search.</param>
      <param name="binder">An object that implements <see cref="T:System.Reflection.Binder" />, containing properties related to this method.</param>
      <param name="types">An array used to choose among overloaded methods.</param>
      <param name="modifiers">An array of parameter modifiers used to make binding work with parameter signatures in which the types have been modified.</param>
      <exception cref="T:System.Reflection.AmbiguousMatchException">The object implements multiple methods with the same name.</exception>
    </member>
    <member name="M:System.Windows.Forms.AccessibleObject.System#Reflection#IReflect#GetMethods(System.Reflection.BindingFlags)">
      <summary>Gets an array of <see cref="T:System.Reflection.MethodInfo" /> objects with all public methods or all methods of the current class. For a description of this member, see <see cref="M:System.Reflection.IReflect.GetMethods(System.Reflection.BindingFlags)" />.</summary>
      <returns>An array of <see cref="T:System.Reflection.MethodInfo" /> objects containing all the methods defined for this reflection object that meet the search constraints specified in bindingAttr.</returns>
      <param name="bindingAttr">The binding attributes used to control the search. </param>
    </member>
    <member name="M:System.Windows.Forms.AccessibleObject.System#Reflection#IReflect#GetProperties(System.Reflection.BindingFlags)">
      <summary>Gets an array of <see cref="T:System.Reflection.PropertyInfo" /> objects corresponding to all public properties or to all properties of the current class. For a description of this member, see <see cref="M:System.Reflection.IReflect.GetProperties(System.Reflection.BindingFlags)" />.</summary>
      <returns>An array of <see cref="T:System.Reflection.PropertyInfo" /> objects for all the properties defined on the reflection object.</returns>
      <param name="bindingAttr">The binding attribute used to control the search.</param>
    </member>
    <member name="M:System.Windows.Forms.AccessibleObject.System#Reflection#IReflect#GetProperty(System.String,System.Reflection.BindingFlags)">
      <summary>Gets a <see cref="T:System.Reflection.PropertyInfo" /> object corresponding to a specified property under specified search constraints. For a description of this member, see <see cref="M:System.Reflection.IReflect.GetProperty(System.String,System.Reflection.BindingFlags)" />.</summary>
      <returns>A <see cref="T:System.Reflection.PropertyInfo" /> object for the located property that meets the search constraints specified in <paramref name="bindingAttr" />, or null if the property was not located.</returns>
      <param name="name">The name of the property to find.</param>
      <param name="bindingAttr">The binding attributes used to control the search.</param>
      <exception cref="T:System.Reflection.AmbiguousMatchException">The object implements multiple methods with the same name.</exception>
    </member>
    <member name="M:System.Windows.Forms.AccessibleObject.System#Reflection#IReflect#GetProperty(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Type,System.Type[],System.Reflection.ParameterModifier[])">
      <summary>Gets a <see cref="T:System.Reflection.PropertyInfo" /> object corresponding to a specified property with specified search constraints. For a description of this member, see <see cref="M:System.Reflection.IReflect.GetProperty(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Type,System.Type[],System.Reflection.ParameterModifier[])" />.</summary>
      <returns>A <see cref="T:System.Reflection.PropertyInfo" /> object for the located property, if a property with the specified name was located in this reflection object, or null if the property was not located.</returns>
      <param name="name">The name of the member to find.</param>
      <param name="bindingAttr">The binding attributes used to control the search.</param>
      <param name="binder">An object that implements Binder, containing properties related to this method.</param>
      <param name="returnType">An array used to choose among overloaded methods.</param>
      <param name="types">An array of parameter modifiers used to make binding work with parameter signatures in which the types have been modified.</param>
      <param name="modifiers">An array used to choose the parameter modifiers.</param>
    </member>
    <member name="M:System.Windows.Forms.AccessibleObject.System#Reflection#IReflect#InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])">
      <summary>Invokes a specified member. For a description of this member, see <see cref="M:System.Reflection.IReflect.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])" />.</summary>
      <returns>The specified member.</returns>
      <param name="name">The name of the member to find.</param>
      <param name="invokeAttr">One of the <see cref="T:System.Reflection.BindingFlags" /> invocation attributes. </param>
      <param name="binder">One of the <see cref="T:System.Reflection.BindingFlags" /> bit flags. Implements Binder, containing properties related to this method.</param>
      <param name="target">The object on which to invoke the specified member. This parameter is ignored for static members.</param>
      <param name="args">An array of objects that contains the number, order, and type of the parameters of the member to be invoked. This is an empty array if there are no parameters.</param>
      <param name="modifiers">An array of <see cref="T:System.Reflection.ParameterModifier" /> objects. </param>
      <param name="culture">An instance of <see cref="T:System.Globalization.CultureInfo" /> used to govern the coercion of types. </param>
      <param name="namedParameters">A String array of parameters.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="invokeAttr" /> is <see cref="F:System.Reflection.BindingFlags.CreateInstance" /> and another bit flag is also set.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="invokeAttr" /> is not <see cref="F:System.Reflection.BindingFlags.CreateInstance" /> and name is null.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="invokeAttr" /> is not an invocation attribute from <see cref="T:System.Reflection.BindingFlags" />.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="invokeAttr" /> specifies both get and set for a property or field.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="invokeAttr" /> specifies both a field set and an Invoke method. <paramref name="args" /> is provided for a field get operation.</exception>
      <exception cref="T:System.ArgumentException">More than one argument is specified for a field set operation.</exception>
      <exception cref="T:System.MissingFieldException">The field or property cannot be found.</exception>
      <exception cref="T:System.MissingMethodException">The method cannot be found.</exception>
      <exception cref="T:System.Security.SecurityException">A private member is invoked without the necessary <see cref="T:System.Security.Permissions.ReflectionPermission" />.</exception>
    </member>
    <member name="P:System.Windows.Forms.AccessibleObject.System#Reflection#IReflect#UnderlyingSystemType">
      <summary>Gets the underlying type that represents the <see cref="T:System.Reflection.IReflect" /> object. For a description of this member, see <see cref="P:System.Reflection.IReflect.UnderlyingSystemType" />.</summary>
      <returns>The underlying type that represents the <see cref="T:System.Reflection.IReflect" /> object.</returns>
    </member>
    <member name="M:System.Windows.Forms.AccessibleObject.UseStdAccessibleObjects(System.IntPtr)">
      <summary>Associates an object with an instance of an <see cref="T:System.Windows.Forms.AccessibleObject" /> based on the handle of the object.</summary>
      <param name="handle">An <see cref="T:System.IntPtr" /> that contains the handle of the object. </param>
    </member>
    <member name="M:System.Windows.Forms.AccessibleObject.UseStdAccessibleObjects(System.IntPtr,System.Int32)">
      <summary>Associates an object with an instance of an <see cref="T:System.Windows.Forms.AccessibleObject" /> based on the handle and the object id of the object.</summary>
      <param name="handle">An <see cref="T:System.IntPtr" /> that contains the handle of the object. </param>
      <param name="objid">An Int that defines the type of object that the <paramref name="handle" /> parameter refers to. </param>
    </member>
    <member name="P:System.Windows.Forms.AccessibleObject.Value">
      <summary>Gets or sets the value of an accessible object.</summary>
      <returns>The value of an accessible object, or null if the object has no value set.</returns>
      <exception cref="T:System.Runtime.InteropServices.COMException">The value cannot be set or retrieved. </exception>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="T:System.Windows.Forms.AccessibleRole">
      <summary>Specifies values representing possible roles for an accessible object.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="F:System.Windows.Forms.AccessibleRole.Default">
      <summary>A system-provided role.</summary>
    </member>
    <member name="F:System.Windows.Forms.AccessibleRole.None">
      <summary>No role.</summary>
    </member>
    <member name="F:System.Windows.Forms.AccessibleRole.TitleBar">
      <summary>A title or caption bar for a window.</summary>
    </member>
    <member name="F:System.Windows.Forms.AccessibleRole.MenuBar">
      <summary>A menu bar, usually beneath the title bar of a window, from which users can select menus.</summary>
    </member>
    <member name="F:System.Windows.Forms.AccessibleRole.ScrollBar">
      <summary>A vertical or horizontal scroll bar, which can be either part of the client area or used in a control.</summary>
    </member>
    <member name="F:System.Windows.Forms.AccessibleRole.Grip">
      <summary>A special mouse pointer, which allows a user to manipulate user interface elements such as a window. For example, a user can click and drag a sizing grip in the lower-right corner of a window to resize it.</summary>
    </member>
    <member name="F:System.Windows.Forms.AccessibleRole.Sound">
      <summary>A system sound, which is associated with various system events.</summary>
    </member>
    <member name="F:System.Windows.Forms.AccessibleRole.Cursor">
      <summary>A mouse pointer.</summary>
    </member>
    <member name="F:System.Windows.Forms.AccessibleRole.Caret">
      <summary>A caret, which is a flashing line, block, or bitmap that marks the location of the insertion point in a window's client area.</summary>
    </member>
    <member name="F:System.Windows.Forms.AccessibleRole.Alert">
      <summary>An alert or condition that you can notify a user about. Use this role only for objects that embody an alert but are not associated with another user interface element, such as a message box, graphic, text, or sound.</summary>
    </member>
    <member name="F:System.Windows.Forms.AccessibleRole.Window">
      <summary>A window frame, which usually contains child objects such as a title bar, client, and other objects typically contained in a window.</summary>
    </member>
    <member name="F:System.Windows.Forms.AccessibleRole.Client">
      <summary>A window's user area.</summary>
    </member>
    <member name="F:System.Windows.Forms.AccessibleRole.MenuPopup">
      <summary>A menu, which presents a list of options from which the user can make a selection to perform an action. All menu types must have this role, including drop-down menus that are displayed by selection from a menu bar, and shortcut menus that are displayed when the right mouse button is clicked.</summary>
    </member>
    <member name="F:System.Windows.Forms.AccessibleRole.MenuItem">
      <summary>A menu item, which is an entry in a menu that a user can choose to carry out a command, select an option, or display another menu. Functionally, a menu item can be equivalent to a push button, radio button, check box, or menu.</summary>
    </member>
    <member name="F:System.Windows.Forms.AccessibleRole.ToolTip">
      <summary>A tool tip, which is a small rectangular pop-up window that displays a brief description of the purpose of a button.</summary>
    </member>
    <member name="F:System.Windows.Forms.AccessibleRole.Application">
      <summary>The main window for an application.</summary>
    </member>
    <member name="F:System.Windows.Forms.AccessibleRole.Document">
      <summary>A document window, which is always contained within an application window. This role applies only to multiple-document interface (MDI) windows and refers to an object that contains the MDI title bar.</summary>
    </member>
    <member name="F:System.Windows.Forms.AccessibleRole.Pane">
      <summary>A separate area in a frame, a split document window, or a rectangular area of the status bar that can be used to display information. Users can navigate between panes and within the contents of the current pane, but cannot navigate between items in different panes. Thus, panes represent a level of grouping lower than frame windows or documents, but above individual controls. Typically, the user navigates between panes by pressing TAB, F6, or CTRL+TAB, depending on the context.</summary>
    </member>
    <member name="F:System.Windows.Forms.AccessibleRole.Chart">
      <summary>A graphical image used to represent data.</summary>
    </member>
    <member name="F:System.Windows.Forms.AccessibleRole.Dialog">
      <summary>A dialog box or message box.</summary>
    </member>
    <member name="F:System.Windows.Forms.AccessibleRole.Border">
      <summary>A window border. The entire border is represented by a single object, rather than by separate objects for each side.</summary>
    </member>
    <member name="F:System.Windows.Forms.AccessibleRole.Grouping">
      <summary>The objects grouped in a logical manner. There can be a parent-child relationship between the grouping object and the objects it contains.</summary>
    </member>
    <member name="F:System.Windows.Forms.AccessibleRole.Separator">
      <summary>A space divided visually into two regions, such as a separator menu item or a separator dividing split panes within a window.</summary>
    </member>
    <member name="F:System.Windows.Forms.AccessibleRole.ToolBar">
      <summary>A toolbar, which is a grouping of controls that provide easy access to frequently used features.</summary>
    </member>
    <member name="F:System.Windows.Forms.AccessibleRole.StatusBar">
      <summary>A status bar, which is an area typically at the bottom of an application window that displays information about the current operation, state of the application, or selected object. The status bar can have multiple fields that display different kinds of information, such as an explanation of the currently selected menu command in the status bar.</summary>
    </member>
    <member name="F:System.Windows.Forms.AccessibleRole.Table">
      <summary>A table containing rows and columns of cells and, optionally, row headers and column headers.</summary>
    </member>
    <member name="F:System.Windows.Forms.AccessibleRole.ColumnHeader">
      <summary>A column header, which provides a visual label for a column in a table.</summary>
    </member>
    <member name="F:System.Windows.Forms.AccessibleRole.RowHeader">
      <summary>A row header, which provides a visual label for a table row.</summary>
    </member>
    <member name="F:System.Windows.Forms.AccessibleRole.Column">
      <summary>A column of cells within a table.</summary>
    </member>
    <member name="F:System.Windows.Forms.AccessibleRole.Row">
      <summary>A row of cells within a table.</summary>
    </member>
    <member name="F:System.Windows.Forms.AccessibleRole.Cell">
      <summary>A cell within a table.</summary>
    </member>
    <member name="F:System.Windows.Forms.AccessibleRole.Link">
      <summary>A link, which is a connection between a source document and a destination document. This object might look like text or a graphic, but it acts like a button.</summary>
    </member>
    <member name="F:System.Windows.Forms.AccessibleRole.HelpBalloon">
      <summary>A Help display in the form of a ToolTip or Help balloon, which contains buttons and labels that users can click to open custom Help topics.</summary>
    </member>
    <member name="F:System.Windows.Forms.AccessibleRole.Character">
      <summary>A cartoon-like graphic object, such as Microsoft Office Assistant, which is typically displayed to provide help to users of an application.</summary>
    </member>
    <member name="F:System.Windows.Forms.AccessibleRole.List">
      <summary>A list box, which allows the user to select one or more items.</summary>
    </member>
    <member name="F:System.Windows.Forms.AccessibleRole.ListItem">
      <summary>An item in a list box or the list portion of a combo box, drop-down list box, or drop-down combo box.</summary>
    </member>
    <member name="F:System.Windows.Forms.AccessibleRole.Outline">
      <summary>An outline or tree structure, such as a tree view control, which displays a hierarchical list and usually allows the user to expand and collapse branches.</summary>
    </member>
    <member name="F:System.Windows.Forms.AccessibleRole.OutlineItem">
      <summary>An item in an outline or tree structure.</summary>
    </member>
    <member name="F:System.Windows.Forms.AccessibleRole.PageTab">
      <summary>A property page that allows a user to view the attributes for a page, such as the page's title, whether it is a home page, or whether the page has been modified. Normally, the only child of this control is a grouped object that contains the contents of the associated page.</summary>
    </member>
    <member name="F:System.Windows.Forms.AccessibleRole.PropertyPage">
      <summary>A property page, which is a dialog box that controls the appearance and the behavior of an object, such as a file or resource. A property page's appearance differs according to its purpose.</summary>
    </member>
    <member name="F:System.Windows.Forms.AccessibleRole.Indicator">
      <summary>An indicator, such as a pointer graphic, that points to the current item.</summary>
    </member>
    <member name="F:System.Windows.Forms.AccessibleRole.Graphic">
      <summary>A picture.</summary>
    </member>
    <member name="F:System.Windows.Forms.AccessibleRole.StaticText">
      <summary>The read-only text, such as in a label, for other controls or instructions in a dialog box. Static text cannot be modified or selected.</summary>
    </member>
    <member name="F:System.Windows.Forms.AccessibleRole.Text">
      <summary>The selectable text that can be editable or read-only.</summary>
    </member>
    <member name="F:System.Windows.Forms.AccessibleRole.PushButton">
      <summary>A push button control, which is a small rectangular control that a user can turn on or off. A push button, also known as a command button, has a raised appearance in its default off state and a sunken appearance when it is turned on.</summary>
    </member>
    <member name="F:System.Windows.Forms.AccessibleRole.CheckButton">
      <summary>A check box control, which is an option that can be turned on or off independent of other options.</summary>
    </member>
    <member name="F:System.Windows.Forms.AccessibleRole.RadioButton">
      <summary>An option button, also known as a radio button. All objects sharing a single parent that have this attribute are assumed to be part of a single mutually exclusive group. You can use grouped objects to divide option buttons into separate groups when necessary.</summary>
    </member>
    <member name="F:System.Windows.Forms.AccessibleRole.ComboBox">
      <summary>A combo box, which is an edit control with an associated list box that provides a set of predefined choices.</summary>
    </member>
    <member name="F:System.Windows.Forms.AccessibleRole.DropList">
      <summary>A drop-down list box. This control shows one item and allows the user to display and select another from a list of alternative choices.</summary>
    </member>
    <member name="F:System.Windows.Forms.AccessibleRole.ProgressBar">
      <summary>A progress bar, which indicates the progress of a lengthy operation by displaying colored lines inside a horizontal rectangle. The length of the lines in relation to the length of the rectangle corresponds to the percentage of the operation that is complete. This control does not take user input.</summary>
    </member>
    <member name="F:System.Windows.Forms.AccessibleRole.Dial">
      <summary>A dial or knob. This can also be a read-only object, like a speedometer.</summary>
    </member>
    <member name="F:System.Windows.Forms.AccessibleRole.HotkeyField">
      <summary>A hot-key field that allows the user to enter a combination or sequence of keystrokes to be used as a hot key, which enables users to perform an action quickly. A hot-key control displays the keystrokes entered by the user and ensures that the user selects a valid key combination.</summary>
    </member>
    <member name="F:System.Windows.Forms.AccessibleRole.Slider">
      <summary>A control, sometimes called a trackbar, that enables a user to adjust a setting in given increments between minimum and maximum values by moving a slider. The volume controls in the Windows operating system are slider controls.</summary>
    </member>
    <member name="F:System.Windows.Forms.AccessibleRole.SpinButton">
      <summary>A spin box, also known as an up-down control, which contains a pair of arrow buttons. A user clicks the arrow buttons with a mouse to increment or decrement a value. A spin button control is most often used with a companion control, called a buddy window, where the current value is displayed.</summary>
    </member>
    <member name="F:System.Windows.Forms.AccessibleRole.Diagram">
      <summary>A graphical image used to diagram data.</summary>
    </member>
    <member name="F:System.Windows.Forms.AccessibleRole.Animation">
      <summary>An animation control, which contains content that is changing over time, such as a control that displays a series of bitmap frames, like a filmstrip. Animation controls are usually displayed when files are being copied, or when some other time-consuming task is being performed.</summary>
    </member>
    <member name="F:System.Windows.Forms.AccessibleRole.Equation">
      <summary>A mathematical equation.</summary>
    </member>
    <member name="F:System.Windows.Forms.AccessibleRole.ButtonDropDown">
      <summary>A button that drops down a list of items.</summary>
    </member>
    <member name="F:System.Windows.Forms.AccessibleRole.ButtonMenu">
      <summary>A button that drops down a menu.</summary>
    </member>
    <member name="F:System.Windows.Forms.AccessibleRole.ButtonDropDownGrid">
      <summary>A button that drops down a grid.</summary>
    </member>
    <member name="F:System.Windows.Forms.AccessibleRole.WhiteSpace">
      <summary>A blank space between other objects.</summary>
    </member>
    <member name="F:System.Windows.Forms.AccessibleRole.PageTabList">
      <summary>A container of page tab controls.</summary>
    </member>
    <member name="F:System.Windows.Forms.AccessibleRole.Clock">
      <summary>A control that displays the time.</summary>
    </member>
    <member name="F:System.Windows.Forms.AccessibleRole.SplitButton">
      <summary>A toolbar button that has a drop-down list icon directly adjacent to the button.</summary>
    </member>
    <member name="F:System.Windows.Forms.AccessibleRole.IpAddress">
      <summary>A control designed for entering Internet Protocol (IP) addresses.</summary>
    </member>
    <member name="F:System.Windows.Forms.AccessibleRole.OutlineButton">
      <summary>A control that navigates like an outline item.</summary>
    </member>
    <member name="T:System.Windows.Forms.AccessibleSelection">
      <summary>Specifies how an accessible object is selected or receives focus.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="F:System.Windows.Forms.AccessibleSelection.None">
      <summary>The selection or focus of an object is unchanged.</summary>
    </member>
    <member name="F:System.Windows.Forms.AccessibleSelection.TakeFocus">
      <summary>Assigns focus to an object and makes it the anchor, which is the starting point for the selection. Can be combined with TakeSelection, ExtendSelection, AddSelection, or RemoveSelection.</summary>
    </member>
    <member name="F:System.Windows.Forms.AccessibleSelection.TakeSelection">
      <summary>Selects the object and deselects all other objects in the container.</summary>
    </member>
    <member name="F:System.Windows.Forms.AccessibleSelection.ExtendSelection">
      <summary>Selects all objects between the anchor and the selected object.</summary>
    </member>
    <member name="F:System.Windows.Forms.AccessibleSelection.AddSelection">
      <summary>Adds the object to the selection.</summary>
    </member>
    <member name="F:System.Windows.Forms.AccessibleSelection.RemoveSelection">
      <summary>Removes the object from the selection.</summary>
    </member>
    <member name="T:System.Windows.Forms.AccessibleStates">
      <summary>Specifies values representing possible states for an accessible object.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="F:System.Windows.Forms.AccessibleStates.None">
      <summary>No state.</summary>
    </member>
    <member name="F:System.Windows.Forms.AccessibleStates.Unavailable">
      <summary>An unavailable object.</summary>
    </member>
    <member name="F:System.Windows.Forms.AccessibleStates.Selected">
      <summary>A selected object.</summary>
    </member>
    <member name="F:System.Windows.Forms.AccessibleStates.Focused">
      <summary>An object with the keyboard focus.</summary>
    </member>
    <member name="F:System.Windows.Forms.AccessibleStates.Pressed">
      <summary>A pressed object.</summary>
    </member>
    <member name="F:System.Windows.Forms.AccessibleStates.Checked">
      <summary>An object with a selected check box.</summary>
    </member>
    <member name="F:System.Windows.Forms.AccessibleStates.Mixed">
      <summary>A three-state check box or toolbar button whose state is indeterminate. The check box is neither checked nor unchecked, and it is in the third or mixed state.</summary>
    </member>
    <member name="F:System.Windows.Forms.AccessibleStates.Indeterminate">
      <summary>A three-state check box or toolbar button whose state is indeterminate. The check box is neither checked nor unchecked, and it is in the third or mixed state.</summary>
    </member>
    <member name="F:System.Windows.Forms.AccessibleStates.ReadOnly">
      <summary>A read-only object.</summary>
    </member>
    <member name="F:System.Windows.Forms.AccessibleStates.HotTracked">
      <summary>The object hot-tracked by the mouse, meaning its appearance is highlighted to indicate the mouse pointer is located over it.</summary>
    </member>
    <member name="F:System.Windows.Forms.AccessibleStates.Default">
      <summary>The default button or menu item.</summary>
    </member>
    <member name="F:System.Windows.Forms.AccessibleStates.Expanded">
      <summary>The displayed children of the object that are items in an outline or tree structure.</summary>
    </member>
    <member name="F:System.Windows.Forms.AccessibleStates.Collapsed">
      <summary>The hidden children of the object that are items in an outline or tree structure.</summary>
    </member>
    <member name="F:System.Windows.Forms.AccessibleStates.Busy">
      <summary>A control that cannot accept input in its current condition.</summary>
    </member>
    <member name="F:System.Windows.Forms.AccessibleStates.Floating">
      <summary>The object that is not fixed to the boundary of its parent object and that does not move automatically along with the parent.</summary>
    </member>
    <member name="F:System.Windows.Forms.AccessibleStates.Marqueed">
      <summary>An object with scrolling or moving text or graphics.</summary>
    </member>
    <member name="F:System.Windows.Forms.AccessibleStates.Animated">
      <summary>The object that rapidly or constantly changes appearance. Graphics that are occasionally animated, but not always, should be defined as <see cref="F:System.Windows.Forms.AccessibleRole.Graphic" />ORAnimated. This state should not be used to indicate that the object's location is changing.</summary>
    </member>
    <member name="F:System.Windows.Forms.AccessibleStates.Invisible">
      <summary>An object without a visible user interface.</summary>
    </member>
    <member name="F:System.Windows.Forms.AccessibleStates.Offscreen">
      <summary>No on-screen representation. A sound or alert object would have this state, or a hidden window that is never made visible.</summary>
    </member>
    <member name="F:System.Windows.Forms.AccessibleStates.Sizeable">
      <summary>A sizable object.</summary>
    </member>
    <member name="F:System.Windows.Forms.AccessibleStates.Moveable">
      <summary>A movable object.</summary>
    </member>
    <member name="F:System.Windows.Forms.AccessibleStates.SelfVoicing">
      <summary>The object or child can use text-to-speech (TTS) to describe itself. A speech-based accessibility aid should not announce information when an object with this state has the focus, because the object automatically announces information about itself.</summary>
    </member>
    <member name="F:System.Windows.Forms.AccessibleStates.Focusable">
      <summary>The object on the active window that can receive keyboard focus.</summary>
    </member>
    <member name="F:System.Windows.Forms.AccessibleStates.Selectable">
      <summary>An object that can accept selection.</summary>
    </member>
    <member name="F:System.Windows.Forms.AccessibleStates.Linked">
      <summary>A linked object that has not been previously selected.</summary>
    </member>
    <member name="F:System.Windows.Forms.AccessibleStates.Traversed">
      <summary>A linked object that has previously been selected.</summary>
    </member>
    <member name="F:System.Windows.Forms.AccessibleStates.MultiSelectable">
      <summary>An object that accepts multiple selected items.</summary>
    </member>
    <member name="F:System.Windows.Forms.AccessibleStates.ExtSelectable">
      <summary>The altered selection such that all objects between the selection anchor, which is the object with the keyboard focus, and this object take on the anchor object's selection state. If the anchor object is not selected, the objects are removed from the selection. If the anchor object is selected, the selection is extended to include this object and all objects in between. You can set the selection state by combining this with <see cref="F:System.Windows.Forms.AccessibleSelection.AddSelection" /> or <see cref="F:System.Windows.Forms.AccessibleSelection.RemoveSelection" />. This state does not change the focus or the selection anchor unless it is combined with <see cref="F:System.Windows.Forms.AccessibleSelection.TakeFocus" />.</summary>
    </member>
    <member name="F:System.Windows.Forms.AccessibleStates.AlertLow">
      <summary>The low-priority information that might not be important to the user.</summary>
    </member>
    <member name="F:System.Windows.Forms.AccessibleStates.AlertMedium">
      <summary>The important information that does not need to be conveyed to the user immediately. For example, when a battery-level indicator is starting to reach a low level, it could generate a medium-level alert. Blind access utilities could then generate a sound to let the user know that important information is available, without actually interrupting the user's work. Users can then query the alert information any time they choose.</summary>
    </member>
    <member name="F:System.Windows.Forms.AccessibleStates.AlertHigh">
      <summary>The important information that should be conveyed to the user immediately. For example, a battery-level indicator reaching a critical low level would transition to this state, in which case, a blind access utility would announce this information immediately to the user, and a screen magnification program would scroll the screen so that the battery indicator is in view. This state is also appropriate for any prompt or operation that must be completed before the user can continue.</summary>
    </member>
    <member name="F:System.Windows.Forms.AccessibleStates.Protected">
      <summary>A password-protected edit control.</summary>
    </member>
    <member name="F:System.Windows.Forms.AccessibleStates.HasPopup">
      <summary>The object displays a pop-up menu or window when invoked.</summary>
    </member>
    <member name="F:System.Windows.Forms.AccessibleStates.Valid">
      <summary>A valid object. This property is deprecated in .NET Framework 2.0. </summary>
    </member>
    <member name="T:System.Windows.Forms.AmbientProperties">
      <summary>Provides ambient property values to top-level controls.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Windows.Forms.AmbientProperties.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Forms.AmbientProperties" /> class. </summary>
    </member>
    <member name="P:System.Windows.Forms.AmbientProperties.BackColor">
      <summary>Gets or sets the ambient background color of an object.</summary>
      <returns>A <see cref="T:System.Drawing.Color" /> value that represents the background color of an object.</returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="P:System.Windows.Forms.AmbientProperties.Cursor">
      <summary>Gets or sets the ambient cursor of an object.</summary>
      <returns>A <see cref="T:System.Windows.Forms.Cursor" /> that represents the cursor of an object.</returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="P:System.Windows.Forms.AmbientProperties.Font">
      <summary>Gets or sets the ambient font of an object.</summary>
      <returns>A <see cref="T:System.Drawing.Font" /> that represents the font used when displaying text within an object.</returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="P:System.Windows.Forms.AmbientProperties.ForeColor">
      <summary>Gets or sets the ambient foreground color of an object.</summary>
      <returns>A <see cref="T:System.Drawing.Color" /> value that represents the foreground color of an object.</returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="T:System.Windows.Forms.AnchorStyles">
      <summary>Specifies how a control anchors to the edges of its container.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="F:System.Windows.Forms.AnchorStyles.Top">
      <summary>The control is anchored to the top edge of its container.</summary>
    </member>
    <member name="F:System.Windows.Forms.AnchorStyles.Bottom">
      <summary>The control is anchored to the bottom edge of its container.</summary>
    </member>
    <member name="F:System.Windows.Forms.AnchorStyles.Left">
      <summary>The control is anchored to the left edge of its container.</summary>
    </member>
    <member name="F:System.Windows.Forms.AnchorStyles.Right">
      <summary>The control is anchored to the right edge of its container.</summary>
    </member>
    <member name="F:System.Windows.Forms.AnchorStyles.None">
      <summary>The control is not anchored to any edges of its container.</summary>
    </member>
    <member name="T:System.Windows.Forms.Appearance">
      <summary>Specifies the appearance of a control.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="F:System.Windows.Forms.Appearance.Normal">
      <summary>The default appearance defined by the control class.</summary>
    </member>
    <member name="F:System.Windows.Forms.Appearance.Button">
      <summary>The appearance of a Windows button.</summary>
    </member>
    <member name="T:System.Windows.Forms.Application">
      <summary>Provides static methods and properties to manage an application, such as methods to start and stop an application, to process Windows messages, and properties to get information about an application. This class cannot be inherited.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Windows.Forms.Application.AddMessageFilter(System.Windows.Forms.IMessageFilter)">
      <summary>Adds a message filter to monitor Windows messages as they are routed to their destinations.</summary>
      <param name="value">The implementation of the <see cref="T:System.Windows.Forms.IMessageFilter" /> interface you want to install. </param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="P:System.Windows.Forms.Application.AllowQuit">
      <summary>Gets a value indicating whether the caller can quit this application.</summary>
      <returns>true if the caller can quit this application; otherwise, false.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="E:System.Windows.Forms.Application.ApplicationExit">
      <summary>Occurs when the application is about to shut down.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="P:System.Windows.Forms.Application.CommonAppDataPath">
      <summary>Gets the path for the application data that is shared among all users.</summary>
      <returns>The path for the application data that is shared among all users.</returns>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
        <IPermission class="System.Diagnostics.PerformanceCounterPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="P:System.Windows.Forms.Application.CommonAppDataRegistry">
      <summary>Gets the registry key for the application data that is shared among all users.</summary>
      <returns>A <see cref="T:Microsoft.Win32.RegistryKey" /> representing the registry key of the application data that is shared among all users.</returns>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.RegistryPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
        <IPermission class="System.Diagnostics.PerformanceCounterPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="P:System.Windows.Forms.Application.CompanyName">
      <summary>Gets the company name associated with the application.</summary>
      <returns>The company name.</returns>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
        <IPermission class="System.Diagnostics.PerformanceCounterPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="P:System.Windows.Forms.Application.CurrentCulture">
      <summary>Gets or sets the culture information for the current thread.</summary>
      <returns>A <see cref="T:System.Globalization.CultureInfo" /> representing the culture information for the current thread.</returns>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="ControlThread" />
      </PermissionSet>
    </member>
    <member name="P:System.Windows.Forms.Application.CurrentInputLanguage">
      <summary>Gets or sets the current input language for the current thread.</summary>
      <returns>An <see cref="T:System.Windows.Forms.InputLanguage" /> representing the current input language for the current thread.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Windows.Forms.Application.DoEvents">
      <summary>Processes all Windows messages currently in the message queue.</summary>
      <filterpriority>2</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
        <IPermission class="System.Security.Permissions.UIPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Diagnostics.PerformanceCounterPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:System.Windows.Forms.Application.EnableVisualStyles">
      <summary>Enables visual styles for the application.</summary>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="E:System.Windows.Forms.Application.EnterThreadModal">
      <summary>Occurs when the application is about to enter a modal state. </summary>
    </member>
    <member name="P:System.Windows.Forms.Application.ExecutablePath">
      <summary>Gets the path for the executable file that started the application, including the executable name.</summary>
      <returns>The path and executable name for the executable file that started the application.This path will be different depending on whether the Windows Forms application is deployed using ClickOnce. ClickOnce applications are stored in a per-user application cache in the C:\Documents and Settings\usernameÂ directory. For more information, see Accessing Local and Remote Data in ClickOnce Applications.</returns>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
        <IPermission class="System.Diagnostics.PerformanceCounterPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:System.Windows.Forms.Application.Exit">
      <summary>Informs all message pumps that they must terminate, and then closes all application windows after the messages have been processed.</summary>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
        <IPermission class="System.Diagnostics.PerformanceCounterPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:System.Windows.Forms.Application.Exit(System.ComponentModel.CancelEventArgs)">
      <summary>Informs all message pumps that they must terminate, and then closes all application windows after the messages have been processed.</summary>
      <param name="e">Returns whether any <see cref="T:System.Windows.Forms.Form" /> within the application cancelled the exit.</param>
    </member>
    <member name="M:System.Windows.Forms.Application.ExitThread">
      <summary>Exits the message loop on the current thread and closes all windows on the thread.</summary>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
        <IPermission class="System.Diagnostics.PerformanceCounterPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:System.Windows.Forms.Application.FilterMessage(System.Windows.Forms.Message@)">
      <summary>Runs any filters against a window message, and returns a copy of the modified message.</summary>
      <returns>True if the filters were processed; otherwise, false.</returns>
      <param name="message">The Windows event message to filter. </param>
    </member>
    <member name="E:System.Windows.Forms.Application.Idle">
      <summary>Occurs when the application finishes processing and is about to enter the idle state.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="E:System.Windows.Forms.Application.LeaveThreadModal">
      <summary>Occurs when the application is about to leave a modal state. </summary>
    </member>
    <member name="P:System.Windows.Forms.Application.LocalUserAppDataPath">
      <summary>Gets the path for the application data of a local, non-roaming user.</summary>
      <returns>The path for the application data of a local, non-roaming user.</returns>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
        <IPermission class="System.Diagnostics.PerformanceCounterPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="P:System.Windows.Forms.Application.MessageLoop">
      <summary>Gets a value indicating whether a message loop exists on this thread.</summary>
      <returns>true if a message loop exists; otherwise, false.</returns>
      <filterpriority>2</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
        <IPermission class="System.Diagnostics.PerformanceCounterPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:System.Windows.Forms.Application.OleRequired">
      <summary>Initializes OLE on the current thread.</summary>
      <returns>One of the <see cref="T:System.Threading.ApartmentState" /> values.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Windows.Forms.Application.OnThreadException(System.Exception)">
      <summary>Raises the <see cref="E:System.Windows.Forms.Application.ThreadException" /> event. </summary>
      <param name="t">An <see cref="T:System.Exception" /> that represents the exception that was thrown. </param>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
        <IPermission class="System.Security.Permissions.UIPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Diagnostics.PerformanceCounterPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Net.WebPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="P:System.Windows.Forms.Application.OpenForms">
      <summary>Gets a collection of open forms owned by the application.</summary>
      <returns>A <see cref="T:System.Windows.Forms.FormCollection" /> containing all the currently open forms owned by this application.</returns>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.UIPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Window="AllWindows" />
      </PermissionSet>
    </member>
    <member name="P:System.Windows.Forms.Application.ProductName">
      <summary>Gets the product name associated with this application.</summary>
      <returns>The product name.</returns>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
        <IPermission class="System.Diagnostics.PerformanceCounterPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="P:System.Windows.Forms.Application.ProductVersion">
      <summary>Gets the product version associated with this application.</summary>
      <returns>The product version.</returns>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
        <IPermission class="System.Diagnostics.PerformanceCounterPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:System.Windows.Forms.Application.RaiseIdle(System.EventArgs)">
      <summary>Raises the <see cref="E:System.Windows.Forms.Application.Idle" /> event in hosted scenarios.</summary>
      <param name="e">The <see cref="T:System.EventArgs" /> objects to pass to the <see cref="E:System.Windows.Forms.Application.Idle" /> event.</param>
    </member>
    <member name="M:System.Windows.Forms.Application.RegisterMessageLoop(System.Windows.Forms.Application.MessageLoopCallback)">
      <summary>Registers a callback for checking whether the message loop is running in hosted environments.</summary>
      <param name="callback">The method to call when Windows Forms needs to check if the hosting environment is still sending messages.</param>
    </member>
    <member name="M:System.Windows.Forms.Application.RemoveMessageFilter(System.Windows.Forms.IMessageFilter)">
      <summary>Removes a message filter from the message pump of the application.</summary>
      <param name="value">The implementation of the <see cref="T:System.Windows.Forms.IMessageFilter" /> to remove from the application. </param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="P:System.Windows.Forms.Application.RenderWithVisualStyles">
      <summary>Gets a value specifying whether the current application is drawing controls with visual styles.</summary>
      <returns>true if visual styles are enabled for controls in the client area of application windows; otherwise, false.</returns>
    </member>
    <member name="M:System.Windows.Forms.Application.Restart">
      <summary>Shuts down the application and starts a new instance immediately.</summary>
      <exception cref="T:System.NotSupportedException">Your code is not a Windows Forms application. You cannot call this method in this context.</exception>
    </member>
    <member name="M:System.Windows.Forms.Application.Run">
      <summary>Begins running a standard application message loop on the current thread, without a form.</summary>
      <exception cref="T:System.InvalidOperationException">A main message loop is already running on this thread. </exception>
      <filterpriority>2</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
        <IPermission class="System.Security.Permissions.UIPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Diagnostics.PerformanceCounterPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:System.Windows.Forms.Application.Run(System.Windows.Forms.ApplicationContext)">
      <summary>Begins running a standard application message loop on the current thread, with an <see cref="T:System.Windows.Forms.ApplicationContext" />.</summary>
      <param name="context">An <see cref="T:System.Windows.Forms.ApplicationContext" /> in which the application is run. </param>
      <exception cref="T:System.InvalidOperationException">A main message loop is already running on this thread. </exception>
      <filterpriority>2</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
        <IPermission class="System.Security.Permissions.UIPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Diagnostics.PerformanceCounterPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:System.Windows.Forms.Application.Run(System.Windows.Forms.Form)">
      <summary>Begins running a standard application message loop on the current thread, and makes the specified form visible.</summary>
      <param name="mainForm">A <see cref="T:System.Windows.Forms.Form" /> that represents the form to make visible. </param>
      <exception cref="T:System.InvalidOperationException">A main message loop is already running on the current thread. </exception>
      <filterpriority>2</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
        <IPermission class="System.Security.Permissions.UIPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Diagnostics.PerformanceCounterPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="P:System.Windows.Forms.Application.SafeTopLevelCaptionFormat">
      <summary>Gets or sets the format string to apply to top-level window captions when they are displayed with a warning banner.</summary>
      <returns>The format string to apply to top-level window captions.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Windows.Forms.Application.SetCompatibleTextRenderingDefault(System.Boolean)">
      <summary>Sets the application-wide default for the UseCompatibleTextRendering property defined on certain controls.</summary>
      <param name="defaultValue">The default value to use for new controls. If true, new controls that support UseCompatibleTextRendering use the GDI+ based <see cref="T:System.Drawing.Graphics" /> class for text rendering; if false, new controls use the GDIÂ based <see cref="T:System.Windows.Forms.TextRenderer" /> class.</param>
      <exception cref="T:System.InvalidOperationException">You can only call this method before the first window is created by your Windows Forms application. </exception>
    </member>
    <member name="M:System.Windows.Forms.Application.SetSuspendState(System.Windows.Forms.PowerState,System.Boolean,System.Boolean)">
      <summary>Suspends or hibernates the system, or requests that the system be suspended or hibernated.</summary>
      <returns>true if the system is being suspended, otherwise, false.</returns>
      <param name="state">A <see cref="T:System.Windows.Forms.PowerState" /> indicating the power activity mode to which to transition. </param>
      <param name="force">true to force the suspended mode immediately; false to cause Windows to send a suspend request to every application. </param>
      <param name="disableWakeEvent">true to disable restoring the system's power status to active on a wake event, false to enable restoring the system's power status to active on a wake event. </param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Windows.Forms.Application.SetUnhandledExceptionMode(System.Windows.Forms.UnhandledExceptionMode)">
      <summary>Instructs the application how to respond to unhandled exceptions.</summary>
      <param name="mode">An <see cref="T:System.Windows.Forms.UnhandledExceptionMode" /> value describing how the application should behave if an exception is thrown without being caught.</param>
      <exception cref="T:System.InvalidOperationException">You cannot set the exception mode after the application has created its first window.</exception>
    </member>
    <member name="M:System.Windows.Forms.Application.SetUnhandledExceptionMode(System.Windows.Forms.UnhandledExceptionMode,System.Boolean)">
      <summary>Instructs the application how to respond to unhandled exceptions, optionally applying thread-specific behavior.</summary>
      <param name="mode">An <see cref="T:System.Windows.Forms.UnhandledExceptionMode" /> value describing how the application should behave if an exception is thrown without being caught.</param>
      <param name="threadScope">true to set the thread exception mode; otherwise, false.</param>
      <exception cref="T:System.InvalidOperationException">You cannot set the exception mode after the application has created its first window.</exception>
    </member>
    <member name="P:System.Windows.Forms.Application.StartupPath">
      <summary>Gets the path for the executable file that started the application, not including the executable name.</summary>
      <returns>The path for the executable file that started the application.This path will be different depending on whether the Windows Forms application is deployed using ClickOnce. ClickOnce applications are stored in a per-user application cache in the C:\Documents and Settings\username directory. For more information, see Accessing Local and Remote Data in ClickOnce Applications.</returns>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="E:System.Windows.Forms.Application.ThreadException">
      <summary>Occurs when an untrapped thread exception is thrown.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="E:System.Windows.Forms.Application.ThreadExit">
      <summary>Occurs when a thread is about to shut down. When the main thread for an application is about to be shut down, this event is raised first, followed by an <see cref="E:System.Windows.Forms.Application.ApplicationExit" /> event.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Windows.Forms.Application.UnregisterMessageLoop">
      <summary>Unregisters the message loop callback made with <see cref="M:System.Windows.Forms.Application.RegisterMessageLoop(System.Windows.Forms.Application.MessageLoopCallback)" />.</summary>
    </member>
    <member name="P:System.Windows.Forms.Application.UserAppDataPath">
      <summary>Gets the path for the application data of a user.</summary>
      <returns>The path for the application data of a user.</returns>
      <filterpriority>2</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
        <IPermission class="System.Diagnostics.PerformanceCounterPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="P:System.Windows.Forms.Application.UserAppDataRegistry">
      <summary>Gets the registry key for the application data of a user.</summary>
      <returns>A <see cref="T:Microsoft.Win32.RegistryKey" /> representing the registry key for the application data specific to the user.</returns>
      <filterpriority>2</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.RegistryPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
        <IPermission class="System.Diagnostics.PerformanceCounterPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="P:System.Windows.Forms.Application.UseWaitCursor">
      <summary>Gets or sets whether the wait cursor is used for all open forms of the application.</summary>
      <returns>true is the wait cursor is used for all open forms; otherwise, false.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.Windows.Forms.Application.VisualStyleState">
      <summary>Gets a value that specifies how visual styles are applied to application windows.</summary>
      <returns>A bitwise combination of the <see cref="T:System.Windows.Forms.VisualStyles.VisualStyleState" /> values.</returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="T:System.Windows.Forms.Application.MessageLoopCallback">
      <summary>Represents a method that will check whether the hosting environment is still sending messages. </summary>
    </member>
    <member name="T:System.Windows.Forms.ApplicationContext">
      <summary>Specifies the contextual information about an application thread.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Windows.Forms.ApplicationContext.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Forms.ApplicationContext" /> class with no context.</summary>
    </member>
    <member name="M:System.Windows.Forms.ApplicationContext.#ctor(System.Windows.Forms.Form)">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Forms.ApplicationContext" /> class with the specified <see cref="T:System.Windows.Forms.Form" />.</summary>
      <param name="mainForm">The main <see cref="T:System.Windows.Forms.Form" /> of the application to use for context. </param>
    </member>
    <member name="M:System.Windows.Forms.ApplicationContext.Dispose">
      <summary>Releases all resources used by the <see cref="T:System.Windows.Forms.ApplicationContext" />.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Windows.Forms.ApplicationContext.Dispose(System.Boolean)">
      <summary>Releases the unmanaged resources used by the <see cref="T:System.Windows.Forms.ApplicationContext" /> and optionally releases the managed resources.</summary>
      <param name="disposing">true to release both managed and unmanaged resources; false to release only unmanaged resources. </param>
    </member>
    <member name="M:System.Windows.Forms.ApplicationContext.ExitThread">
      <summary>Terminates the message loop of the thread.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Windows.Forms.ApplicationContext.ExitThreadCore">
      <summary>Terminates the message loop of the thread.</summary>
    </member>
    <member name="M:System.Windows.Forms.ApplicationContext.Finalize">
      <summary>Attempts to free resources and perform other cleanup operations before the application context is reclaimed by garbage collection.</summary>
    </member>
    <member name="P:System.Windows.Forms.ApplicationContext.MainForm">
      <summary>Gets or sets the <see cref="T:System.Windows.Forms.Form" /> to use as context.</summary>
      <returns>The <see cref="T:System.Windows.Forms.Form" /> to use as context.</returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Windows.Forms.ApplicationContext.OnMainFormClosed(System.Object,System.EventArgs)">
      <summary>Calls <see cref="M:System.Windows.Forms.ApplicationContext.ExitThreadCore" />, which raises the <see cref="E:System.Windows.Forms.ApplicationContext.ThreadExit" /> event.</summary>
      <param name="sender">The object that raised the event. </param>
      <param name="e">The <see cref="T:System.EventArgs" /> that contains the event data. </param>
    </member>
    <member name="P:System.Windows.Forms.ApplicationContext.Tag">
      <summary>Gets or sets an object that contains data about the control.</summary>
      <returns>An <see cref="T:System.Object" /> that contains data about the control. The default is null.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="E:System.Windows.Forms.ApplicationContext.ThreadExit">
      <summary>Occurs when the message loop of the thread should be terminated, by calling <see cref="M:System.Windows.Forms.ApplicationContext.ExitThread" />.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="T:System.Windows.Forms.ArrangeDirection">
      <summary>Specifies the direction in which the system arranges minimized windows.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="F:System.Windows.Forms.ArrangeDirection.Down">
      <summary>Arranged vertically, from top to bottom. Valid with the <see cref="F:System.Windows.Forms.ArrangeStartingPosition.TopLeft" /> and <see cref="F:System.Windows.Forms.ArrangeStartingPosition.TopRight" /><see cref="T:System.Windows.Forms.ArrangeStartingPosition" /> enumeration values.</summary>
    </member>
    <member name="F:System.Windows.Forms.ArrangeDirection.Left">
      <summary>Arranged horizontally, from left to right. Valid with the <see cref="F:System.Windows.Forms.ArrangeStartingPosition.BottomRight" /> and <see cref="F:System.Windows.Forms.ArrangeStartingPosition.TopRight" /><see cref="T:System.Windows.Forms.ArrangeStartingPosition" /> enumeration values.</summary>
    </member>
    <member name="F:System.Windows.Forms.ArrangeDirection.Right">
      <summary>Arranged horizontally, from right to left. Valid with the <see cref="F:System.Windows.Forms.ArrangeStartingPosition.BottomLeft" /> and <see cref="F:System.Windows.Forms.ArrangeStartingPosition.TopLeft" /><see cref="T:System.Windows.Forms.ArrangeStartingPosition" /> enumeration values.</summary>
    </member>
    <member name="F:System.Windows.Forms.ArrangeDirection.Up">
      <summary>Arranged vertically, from bottom to top. Valid with the <see cref="F:System.Windows.Forms.ArrangeStartingPosition.BottomLeft" /> and <see cref="F:System.Windows.Forms.ArrangeStartingPosition.BottomRight" /><see cref="T:System.Windows.Forms.ArrangeStartingPosition" /> enumeration values.</summary>
    </member>
    <member name="T:System.Windows.Forms.ArrangeStartingPosition">
      <summary>Specifies the starting position that the system uses to arrange minimized windows.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="F:System.Windows.Forms.ArrangeStartingPosition.BottomLeft">
      <summary>Starts at the lower-left corner of the screen, which is the default position.</summary>
    </member>
    <member name="F:System.Windows.Forms.ArrangeStartingPosition.BottomRight">
      <summary>Starts at the lower-right corner of the screen.</summary>
    </member>
    <member name="F:System.Windows.Forms.ArrangeStartingPosition.Hide">
      <summary>Hides minimized windows by moving them off the visible area of the screen.</summary>
    </member>
    <member name="F:System.Windows.Forms.ArrangeStartingPosition.TopLeft">
      <summary>Starts at the upper-left corner of the screen.</summary>
    </member>
    <member name="F:System.Windows.Forms.ArrangeStartingPosition.TopRight">
      <summary>Starts at the upper-right corner of the screen.</summary>
    </member>
    <member name="T:System.Windows.Forms.ArrowDirection">
      <summary>Specifies the direction to move when getting items with the <see cref="M:System.Windows.Forms.ToolStrip.GetNextItem(System.Windows.Forms.ToolStripItem,System.Windows.Forms.ArrowDirection)" /> method.</summary>
    </member>
    <member name="F:System.Windows.Forms.ArrowDirection.Up">
      <summary>The direction is up (<see cref="F:System.Windows.Forms.Orientation.Vertical" />).</summary>
    </member>
    <member name="F:System.Windows.Forms.ArrowDirection.Down">
      <summary>The direction is down (<see cref="F:System.Windows.Forms.Orientation.Vertical" />).</summary>
    </member>
    <member name="F:System.Windows.Forms.ArrowDirection.Left">
      <summary>The direction is left (<see cref="F:System.Windows.Forms.Orientation.Horizontal" />).</summary>
    </member>
    <member name="F:System.Windows.Forms.ArrowDirection.Right">
      <summary>The direction is right (<see cref="F:System.Windows.Forms.Orientation.Horizontal" />).</summary>
    </member>
    <member name="T:System.Windows.Forms.AutoCompleteMode">
      <summary>Specifies the mode for the automatic completion feature used in the <see cref="T:System.Windows.Forms.ComboBox" /> and <see cref="T:System.Windows.Forms.TextBox" /> controls.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="F:System.Windows.Forms.AutoCompleteMode.None">
      <summary>Disables the automatic completion feature for the <see cref="T:System.Windows.Forms.ComboBox" /> and <see cref="T:System.Windows.Forms.TextBox" /> controls.</summary>
    </member>
    <member name="F:System.Windows.Forms.AutoCompleteMode.Suggest">
      <summary>Displays the auxiliary drop-down list associated with the edit control. This drop-down is populated with one or more suggested completion strings.</summary>
    </member>
    <member name="F:System.Windows.Forms.AutoCompleteMode.Append">
      <summary>Appends the remainder of the most likely candidate string to the existing characters, highlighting the appended characters.</summary>
    </member>
    <member name="F:System.Windows.Forms.AutoCompleteMode.SuggestAppend">
      <summary>Applies both Suggest and Append options.</summary>
    </member>
    <member name="T:System.Windows.Forms.AutoCompleteSource">
      <summary>Specifies the source for <see cref="T:System.Windows.Forms.ComboBox" /> and <see cref="T:System.Windows.Forms.TextBox" /> automatic completion functionality.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="F:System.Windows.Forms.AutoCompleteSource.FileSystem">
      <summary>Specifies the file system as the source.</summary>
    </member>
    <member name="F:System.Windows.Forms.AutoCompleteSource.HistoryList">
      <summary>Includes the Uniform Resource Locators (URLs) in the history list.</summary>
    </member>
    <member name="F:System.Windows.Forms.AutoCompleteSource.RecentlyUsedList">
      <summary>Includes the Uniform Resource Locators (URLs) in the list of those URLs most recently used.</summary>
    </member>
    <member name="F:System.Windows.Forms.AutoCompleteSource.AllUrl">
      <summary>Specifies the equivalent of <see cref="F:System.Windows.Forms.AutoCompleteSource.HistoryList" /> and <see cref="F:System.Windows.Forms.AutoCompleteSource.RecentlyUsedList" /> as the source.</summary>
    </member>
    <member name="F:System.Windows.Forms.AutoCompleteSource.AllSystemSources">
      <summary>Specifies the equivalent of <see cref="F:System.Windows.Forms.AutoCompleteSource.FileSystem" /> and <see cref="F:System.Windows.Forms.AutoCompleteSource.AllUrl" /> as the source. This is the default value when <see cref="T:System.Windows.Forms.AutoCompleteMode" /> has been set to a value other than the default.</summary>
    </member>
    <member name="F:System.Windows.Forms.AutoCompleteSource.FileSystemDirectories">
      <summary>Specifies that only directory names and not file names will be automatically completed.</summary>
    </member>
    <member name="F:System.Windows.Forms.AutoCompleteSource.CustomSource">
      <summary>Specifies strings from a built-in <see cref="T:System.Windows.Forms.AutoCompleteStringCollection" /> as the source.</summary>
    </member>
    <member name="F:System.Windows.Forms.AutoCompleteSource.None">
      <summary>Specifies that no <see cref="T:System.Windows.Forms.AutoCompleteSource" /> is currently in use. This is the default value of <see cref="T:System.Windows.Forms.AutoCompleteSource" />.</summary>
    </member>
    <member name="F:System.Windows.Forms.AutoCompleteSource.ListItems">
      <summary>Specifies that the items of the <see cref="T:System.Windows.Forms.ComboBox" /> represent the source.</summary>
    </member>
    <member name="T:System.Windows.Forms.AutoCompleteStringCollection">
      <summary>Contains a collection of strings to use for the auto-complete feature on certain Windows Forms controls. </summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Windows.Forms.AutoCompleteStringCollection.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Forms.AutoCompleteStringCollection" /> class. </summary>
    </member>
    <member name="M:System.Windows.Forms.AutoCompleteStringCollection.Add(System.String)">
      <summary>Inserts a new <see cref="T:System.String" /> into the collection.</summary>
      <returns>The position in the collection where the <see cref="T:System.String" /> was added.</returns>
      <param name="value">The <see cref="T:System.String" /> to add to the collection.</param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Windows.Forms.AutoCompleteStringCollection.AddRange(System.String[])">
      <summary>Adds the elements of a <see cref="T:System.String" /> collection to the end. </summary>
      <param name="value">The strings to add to the collection.</param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Windows.Forms.AutoCompleteStringCollection.Clear">
      <summary>Removes all strings from the collection.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="E:System.Windows.Forms.AutoCompleteStringCollection.CollectionChanged">
      <summary>Occurs when the collection changes.</summary>
    </member>
    <member name="M:System.Windows.Forms.AutoCompleteStringCollection.Contains(System.String)">
      <summary>Indicates whether the <see cref="T:System.String" /> exists within the collection.</summary>
      <returns>true if the <see cref="T:System.String" /> exists within the collection; otherwise, false.</returns>
      <param name="value">The <see cref="T:System.String" /> for which to search.</param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Windows.Forms.AutoCompleteStringCollection.CopyTo(System.String[],System.Int32)">
      <summary>Copies an array of <see cref="T:System.String" /> objects into the collection, starting at the specified position.</summary>
      <param name="array">The <see cref="T:System.String" /> objects to add to the collection.</param>
      <param name="index">The position within the collection at which to start the insertion. </param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="P:System.Windows.Forms.AutoCompleteStringCollection.Count">
      <summary>Gets the number of items in the <see cref="T:System.Windows.Forms.AutoCompleteStringCollection" /> .</summary>
      <returns>The number of items in the <see cref="T:System.Windows.Forms.AutoCompleteStringCollection" />.</returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Windows.Forms.AutoCompleteStringCollection.GetEnumerator">
      <summary>Returns an enumerator that iterates through the <see cref="T:System.Windows.Forms.AutoCompleteStringCollection" />.</summary>
      <returns>An enumerator that iterates through the collection.</returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Windows.Forms.AutoCompleteStringCollection.IndexOf(System.String)">
      <summary>Obtains the position of the specified string within the collection.</summary>
      <returns>The index for the specified item.</returns>
      <param name="value">The <see cref="T:System.String" /> for which to search.</param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Windows.Forms.AutoCompleteStringCollection.Insert(System.Int32,System.String)">
      <summary>Inserts the string into a specific index in the collection.</summary>
      <param name="index">The position at which to insert the string.</param>
      <param name="value">The string to insert.</param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="P:System.Windows.Forms.AutoCompleteStringCollection.IsReadOnly">
      <summary>Gets a value indicating whether the contents of the collection are read-only.</summary>
      <returns>false in all cases.</returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="P:System.Windows.Forms.AutoCompleteStringCollection.IsSynchronized">
      <summary>Gets a value indicating whether access to the <see cref="T:System.Windows.Forms.AutoCompleteStringCollection" /> is synchronized (thread safe).</summary>
      <returns>false in all cases.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.Windows.Forms.AutoCompleteStringCollection.Item(System.Int32)">
      <summary>Gets or sets the element at the specified index.</summary>
      <returns>The <see cref="T:System.String" /> at the specified position.</returns>
      <param name="index">The index at which to get or set the <see cref="T:System.String" />.</param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Windows.Forms.AutoCompleteStringCollection.OnCollectionChanged(System.ComponentModel.CollectionChangeEventArgs)">
      <summary>Raises the <see cref="E:System.Windows.Forms.AutoCompleteStringCollection.CollectionChanged" /> event. </summary>
      <param name="e">A <see cref="T:System.ComponentModel.CollectionChangeEventArgs" /> that contains the event data.</param>
    </member>
    <member name="M:System.Windows.Forms.AutoCompleteStringCollection.Remove(System.String)">
      <summary>Removes a string from the collection. </summary>
      <param name="value">The <see cref="T:System.String" /> to remove.</param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Windows.Forms.AutoCompleteStringCollection.RemoveAt(System.Int32)">
      <summary>Removes the string at the specified index.</summary>
      <param name="index">The zero-based index of the string to remove.</param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="P:System.Windows.Forms.AutoCompleteStringCollection.SyncRoot">
      <summary>Gets an object that can be used to synchronize access to the <see cref="T:System.Windows.Forms.AutoCompleteStringCollection" />.</summary>
      <returns>Returns this <see cref="T:System.Windows.Forms.AutoCompleteStringCollection" />.</returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Windows.Forms.AutoCompleteStringCollection.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
      <summary>Copies the strings of the collection to an <see cref="T:System.Array" />, starting at a particular <see cref="T:System.Array" /> index. For a description of this member, see <see cref="M:System.Collections.ICollection.CopyTo(System.Array,System.Int32)" />.</summary>
      <param name="array">The one-dimensional <see cref="T:System.Array" /> that is the destination of the strings copied from collection. The <see cref="T:System.Array" /> must have zero-based indexing.</param>
      <param name="index">The zero-based index in <paramref name="array" /> at which copying begins.</param>
    </member>
    <member name="M:System.Windows.Forms.AutoCompleteStringCollection.System#Collections#IList#Add(System.Object)">
      <summary>Adds a string to the collection. For a description of this member, see <see cref="M:System.Collections.IList.Add(System.Object)" />.</summary>
      <returns>The index at which the <paramref name="value" /> has been added. </returns>
      <param name="value">The string to be added to the collection</param>
    </member>
    <member name="M:System.Windows.Forms.AutoCompleteStringCollection.System#Collections#IList#Contains(System.Object)">
      <summary>Determines where the collection contains a specified string. For a description of this member, see <see cref="M:System.Collections.IList.Contains(System.Object)" />.</summary>
      <returns>true if <paramref name="value" /> is found in the collection; otherwise, false.</returns>
      <param name="value">The string to locate in the collection.</param>
    </member>
    <member name="M:System.Windows.Forms.AutoCompleteStringCollection.System#Collections#IList#IndexOf(System.Object)">
      <summary>Determines the index of a specified string in the collection. For a description of this member, see <see cref="M:System.Collections.IList.IndexOf(System.Object)" />.</summary>
      <returns>The index of <paramref name="value" /> if found in the list; otherwise, -1.</returns>
      <param name="value">The string to locate in the collection.</param>
    </member>
    <member name="M:System.Windows.Forms.AutoCompleteStringCollection.System#Collections#IList#Insert(System.Int32,System.Object)">
      <summary>Inserts an item to the collection at the specified index. For a description of this member, see <see cref="M:System.Collections.IList.Insert(System.Int32,System.Object)" />.</summary>
      <param name="index">The zero-based index at which <paramref name="value" /> should be inserted.</param>
      <param name="value">The string to insert into the collection.</param>
    </member>
    <member name="P:System.Windows.Forms.AutoCompleteStringCollection.System#Collections#IList#IsFixedSize">
      <summary>Gets a value indicating whether the collection has a fixed size. For a description of this member, see <see cref="P:System.Collections.IList.IsFixedSize" />.</summary>
      <returns>true if the collection has a fixed size; otherwise, false.</returns>
    </member>
    <member name="P:System.Windows.Forms.AutoCompleteStringCollection.System#Collections#IList#IsReadOnly">
      <summary>Gets a value indicating whether the collection is read-only. For a description of this member, see <see cref="P:System.Collections.IList.IsReadOnly" />.</summary>
      <returns>true if the collection is read-only; otherwise, false.</returns>
    </member>
    <member name="P:System.Windows.Forms.AutoCompleteStringCollection.System#Collections#IList#Item(System.Int32)">
      <summary>Gets the element at a specified index. For a description of this member, see <see cref="P:System.Collections.IList.Item(System.Int32)" />.</summary>
      <returns>The element at the specified index.</returns>
      <param name="index">The zero-based index of the element to get.</param>
    </member>
    <member name="M:System.Windows.Forms.AutoCompleteStringCollection.System#Collections#IList#Remove(System.Object)">
      <summary>Removes the first occurrence of a specific string from the collection. For a description of this member, see <see cref="M:System.Collections.IList.Remove(System.Object)" />.</summary>
      <param name="value">The string to remove from the collection.</param>
    </member>
    <member name="T:System.Windows.Forms.AutoScaleMode">
      <summary>Specifies the different types of automatic scaling modes supported by Windows Forms.</summary>
    </member>
    <member name="F:System.Windows.Forms.AutoScaleMode.None">
      <summary>Automatic scaling is disabled.</summary>
    </member>
    <member name="F:System.Windows.Forms.AutoScaleMode.Font">
      <summary>Controls scale relative to the dimensions of the font the classes are using, which is typically the system font.</summary>
    </member>
    <member name="F:System.Windows.Forms.AutoScaleMode.Dpi">
      <summary>Controls scale relative to the display resolution. Common resolutions are 96 and 120 DPI.</summary>
    </member>
    <member name="F:System.Windows.Forms.AutoScaleMode.Inherit">
      <summary>Controls scale according to the classes' parent's scaling mode. If there is no parent, automatic scaling is disabled.</summary>
    </member>
    <member name="T:System.Windows.Forms.AutoSizeMode">
      <summary>Specifies how a control will behave when its <see cref="P:System.Windows.Forms.Control.AutoSize" /> property is enabled.</summary>
    </member>
    <member name="F:System.Windows.Forms.AutoSizeMode.GrowAndShrink">
      <summary>The control grows or shrinks to fit its contents. The control cannot be resized manually.</summary>
    </member>
    <member name="F:System.Windows.Forms.AutoSizeMode.GrowOnly">
      <summary>The control grows as much as necessary to fit its contents but does not shrink smaller than the value of its <see cref="P:System.Windows.Forms.Control.Size" />   property. The form can be resized, but cannot be made so small that any of its contained controls are hidden.</summary>
    </member>
    <member name="T:System.Windows.Forms.AutoValidate">
      <summary>Determines how a control validates its data when it loses user input focus.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="F:System.Windows.Forms.AutoValidate.Disable">
      <summary>Implicit validation will not occur. Setting this value will not interfere with explicit calls to <see cref="M:System.Windows.Forms.ContainerControl.Validate" /> or <see cref="M:System.Windows.Forms.ContainerControl.ValidateChildren" />.</summary>
    </member>
    <member name="F:System.Windows.Forms.AutoValidate.EnablePreventFocusChange">
      <summary>Implicit validation occurs when the control loses focus.</summary>
    </member>
    <member name="F:System.Windows.Forms.AutoValidate.EnableAllowFocusChange">
      <summary>Implicit validation occurs, but if validation fails, focus will still change to the new control. If validation fails, the <see cref="E:System.Windows.Forms.Control.Validated" /> event will not fire.</summary>
    </member>
    <member name="F:System.Windows.Forms.AutoValidate.Inherit">
      <summary>The control inherits its <see cref="T:System.Windows.Forms.AutoValidate" /> behavior from its container (such as a form or another control). If there is no container control, it defaults to <see cref="F:System.Windows.Forms.AutoValidate.EnablePreventFocusChange" />.</summary>
    </member>
    <member name="T:System.Windows.Forms.AxHost">
      <summary>Wraps ActiveX controls and exposes them as fully featured Windows Forms controls.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Windows.Forms.AxHost.#ctor(System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Forms.AxHost" /> class, wrapping the ActiveX control indicated by the specified CLSID. </summary>
      <param name="clsid">The CLSID of the ActiveX control to wrap.</param>
    </member>
    <member name="M:System.Windows.Forms.AxHost.#ctor(System.String,System.Int32)">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Forms.AxHost" /> class, wrapping the ActiveX control indicated by the specified CLSID, and using the shortcut-menu behavior indicated by the specified <paramref name="flags" /> value.</summary>
      <param name="clsid">The CLSID of the ActiveX control to wrap.</param>
      <param name="flags">An <see cref="T:System.Int32" /> that modifies the shortcut-menu behavior for the control.</param>
    </member>
    <member name="M:System.Windows.Forms.AxHost.AttachInterfaces">
      <summary>When overridden in a derived class, attaches interfaces to the underlying ActiveX control.</summary>
    </member>
    <member name="P:System.Windows.Forms.AxHost.BackColor">
      <summary>This member is not meaningful for this control.</summary>
      <returns>A <see cref="T:System.Drawing.Color" />.</returns>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="E:System.Windows.Forms.AxHost.BackColorChanged">
      <summary>The <see cref="E:System.Windows.Forms.AxHost.BackColorChanged" /> event is not supported by the <see cref="T:System.Windows.Forms.AxHost" /> class.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="P:System.Windows.Forms.AxHost.BackgroundImage">
      <summary>This property is not relevant for this class.</summary>
      <returns>An <see cref="T:System.Drawing.Image" />.</returns>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="E:System.Windows.Forms.AxHost.BackgroundImageChanged">
      <summary>The <see cref="E:System.Windows.Forms.AxHost.BackgroundImageChanged" /> event is not supported by the <see cref="T:System.Windows.Forms.AxHost" /> class.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="P:System.Windows.Forms.AxHost.BackgroundImageLayout">
      <summary>This property is not relevant for this class.</summary>
      <returns>An <see cref="T:System.Windows.Forms.ImageLayout" /> value.</returns>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="E:System.Windows.Forms.AxHost.BackgroundImageLayoutChanged">
      <summary>This event is not relevant for this class.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Windows.Forms.AxHost.BeginInit">
      <summary>Begins the initialization of the ActiveX control.</summary>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="E:System.Windows.Forms.AxHost.BindingContextChanged">
      <summary>The <see cref="E:System.Windows.Forms.AxHost.BindingContextChanged" /> event is not supported by the <see cref="T:System.Windows.Forms.AxHost" /> class.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="E:System.Windows.Forms.AxHost.ChangeUICues">
      <summary>The <see cref="E:System.Windows.Forms.AxHost.ChangeUICues" /> event is not supported by the <see cref="T:System.Windows.Forms.AxHost" /> class.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="E:System.Windows.Forms.AxHost.Click">
      <summary>The <see cref="E:System.Windows.Forms.AxHost.Click" /> event is not supported by the <see cref="T:System.Windows.Forms.AxHost" /> class.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="P:System.Windows.Forms.AxHost.ContainingControl">
      <summary>Gets or sets the control containing the ActiveX control.</summary>
      <returns>A <see cref="T:System.Windows.Forms.ContainerControl" /> that represents the control containing the ActiveX control.</returns>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
        <IPermission class="System.Diagnostics.PerformanceCounterPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="P:System.Windows.Forms.AxHost.ContextMenu">
      <summary>This property is not relevant for this class.</summary>
      <returns>A <see cref="T:System.Windows.Forms.ContextMenu" />.</returns>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="E:System.Windows.Forms.AxHost.ContextMenuChanged">
      <summary>The <see cref="E:System.Windows.Forms.AxHost.ContextMenuChanged" /> event is not supported by the <see cref="T:System.Windows.Forms.AxHost" /> class.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Windows.Forms.AxHost.CreateHandle"></member>
    <member name="M:System.Windows.Forms.AxHost.CreateInstanceCore(System.Guid)">
      <summary>Called by the system to create the ActiveX control.</summary>
      <returns>An <see cref="T:System.Object" /> representing the ActiveX control. </returns>
      <param name="clsid">The CLSID of the ActiveX control.</param>
    </member>
    <member name="P:System.Windows.Forms.AxHost.CreateParams">
      <returns>A <see cref="T:System.Windows.Forms.CreateParams" /> that contains the required creation parameters when the handle to the control is created.</returns>
    </member>
    <member name="M:System.Windows.Forms.AxHost.CreateSink">
      <summary>Called by the control to prepare it for listening to events.</summary>
    </member>
    <member name="P:System.Windows.Forms.AxHost.Cursor">
      <summary>This property is not relevant for this class.</summary>
      <returns>A <see cref="T:System.Windows.Forms.Cursor" />.</returns>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
        <IPermission class="System.Diagnostics.PerformanceCounterPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="E:System.Windows.Forms.AxHost.CursorChanged">
      <summary>The <see cref="E:System.Windows.Forms.AxHost.CursorChanged" /> event is not supported by the <see cref="T:System.Windows.Forms.AxHost" /> class.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="P:System.Windows.Forms.AxHost.DefaultSize">
      <returns>The default <see cref="T:System.Drawing.Size" /> of the control.</returns>
    </member>
    <member name="M:System.Windows.Forms.AxHost.DestroyHandle"></member>
    <member name="M:System.Windows.Forms.AxHost.DetachSink">
      <summary>Called by the control when it stops listening to events.</summary>
    </member>
    <member name="M:System.Windows.Forms.AxHost.Dispose(System.Boolean)">
      <param name="disposing">true to release both managed and unmanaged resources; false to release only unmanaged resources. </param>
    </member>
    <member name="E:System.Windows.Forms.AxHost.DoubleClick">
      <summary>The <see cref="E:System.Windows.Forms.AxHost.DoubleClick" /> event is not supported by the <see cref="T:System.Windows.Forms.AxHost" /> class.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Windows.Forms.AxHost.DoVerb(System.Int32)">
      <summary>Requests that an object perform an action in response to an end-user's action.</summary>
      <param name="verb">One of the actions enumerated for the object in IOleObject::EnumVerbs.</param>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
        <IPermission class="System.Diagnostics.PerformanceCounterPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="E:System.Windows.Forms.AxHost.DragDrop">
      <summary>The <see cref="E:System.Windows.Forms.AxHost.DragDrop" /> event is not supported by the <see cref="T:System.Windows.Forms.AxHost" /> class.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="E:System.Windows.Forms.AxHost.DragEnter">
      <summary>The <see cref="E:System.Windows.Forms.AxHost.DragEnter" /> event is not supported by the <see cref="T:System.Windows.Forms.AxHost" /> class.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="E:System.Windows.Forms.AxHost.DragLeave">
      <summary>The <see cref="E:System.Windows.Forms.AxHost.DragLeave" /> event is not supported by the <see cref="T:System.Windows.Forms.AxHost" /> class.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="E:System.Windows.Forms.AxHost.DragOver">
      <summary>The <see cref="E:System.Windows.Forms.AxHost.DragOver" /> event is not supported by the <see cref="T:System.Windows.Forms.AxHost" /> class.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Windows.Forms.AxHost.DrawToBitmap(System.Drawing.Bitmap,System.Drawing.Rectangle)">
      <summary>This method is not supported by this control.</summary>
      <param name="bitmap">A <see cref="T:System.Drawing.Bitmap" />.</param>
      <param name="targetBounds">A <see cref="T:System.Drawing.Rectangle" />.</param>
    </member>
    <member name="P:System.Windows.Forms.AxHost.EditMode">
      <summary>Returns a value that indicates whether the hosted control is in edit mode.</summary>
      <returns>true if the hosted control is in edit mode; otherwise, false.</returns>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="P:System.Windows.Forms.AxHost.Enabled">
      <summary>This property is not relevant for this class.</summary>
      <returns>A <see cref="T:System.Boolean" /> value.</returns>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
        <IPermission class="System.Diagnostics.PerformanceCounterPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="E:System.Windows.Forms.AxHost.EnabledChanged">
      <summary>The <see cref="E:System.Windows.Forms.AxHost.EnabledChanged" /> event is not supported by the <see cref="T:System.Windows.Forms.AxHost" /> class.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Windows.Forms.AxHost.EndInit">
      <summary>Ends the initialization of an ActiveX control.</summary>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
        <IPermission class="System.Diagnostics.PerformanceCounterPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="P:System.Windows.Forms.AxHost.Font">
      <summary>This property is not relevant for this class.</summary>
      <returns>A <see cref="T:System.Drawing.Font" />.</returns>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
        <IPermission class="System.Diagnostics.PerformanceCounterPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="E:System.Windows.Forms.AxHost.FontChanged">
      <summary>The <see cref="E:System.Windows.Forms.AxHost.FontChanged" /> event is not supported by the <see cref="T:System.Windows.Forms.AxHost" /> class.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="P:System.Windows.Forms.AxHost.ForeColor">
      <summary>This property is not relevant for this class.</summary>
      <returns>A <see cref="T:System.Drawing.Color" />.</returns>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="E:System.Windows.Forms.AxHost.ForeColorChanged">
      <summary>The <see cref="E:System.Windows.Forms.AxHost.ForeColorChanged" /> event is not supported by the <see cref="T:System.Windows.Forms.AxHost" /> class.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Windows.Forms.AxHost.GetColorFromOleColor(System.UInt32)">
      <summary>Returns a <see cref="T:System.Drawing.Color" /> structure that corresponds to the specified OLE color value.</summary>
      <returns>The <see cref="T:System.Drawing.Color" /> structure that represents the translated OLE color value.</returns>
      <param name="color">The OLE color value to translate.</param>
    </member>
    <member name="M:System.Windows.Forms.AxHost.GetFontFromIFont(System.Object)">
      <summary>Returns a <see cref="T:System.Drawing.Font" /> created from the specified OLE IFont object.</summary>
      <returns>The <see cref="T:System.Drawing.Font" /> created from the specified IFont, <see cref="P:System.Windows.Forms.Control.DefaultFont" /> if the font could not be created, or null if <paramref name="font" /> is null.</returns>
      <param name="font">The IFont to create a <see cref="T:System.Drawing.Font" /> from.</param>
    </member>
    <member name="M:System.Windows.Forms.AxHost.GetFontFromIFontDisp(System.Object)">
      <summary>Returns a <see cref="T:System.Drawing.Font" /> created from the specified OLE IFontDisp object.</summary>
      <returns>The <see cref="T:System.Drawing.Font" /> created from the specified IFontDisp, <see cref="P:System.Windows.Forms.Control.DefaultFont" /> if the font could not be created, or null if <paramref name="font" /> is null.</returns>
      <param name="font">The IFontDisp to create a <see cref="T:System.Drawing.Font" /> from.</param>
    </member>
    <member name="M:System.Windows.Forms.AxHost.GetIFontDispFromFont(System.Drawing.Font)">
      <summary>Returns an OLE IFontDisp object created from the specified <see cref="T:System.Drawing.Font" /> object.</summary>
      <returns>The IFontDisp object created from the specified font or null if <paramref name="font" /> is null.</returns>
      <param name="font">The font to create an IFontDisp object from.</param>
      <exception cref="T:System.ArgumentException">The <see cref="P:System.Drawing.Font.Unit" /> property value is not <see cref="F:System.Drawing.GraphicsUnit.Point" />.</exception>
    </member>
    <member name="M:System.Windows.Forms.AxHost.GetIFontFromFont(System.Drawing.Font)">
      <summary>Returns an OLE IFont object created from the specified <see cref="T:System.Drawing.Font" /> object.</summary>
      <returns>The IFontIFont object created from the specified font, or null if <paramref name="font" /> is null or the IFont could not be created.</returns>
      <param name="font">The font to create an IFont object from.</param>
      <exception cref="T:System.ArgumentException">The <see cref="P:System.Drawing.Font.Unit" /> property value is not <see cref="F:System.Drawing.GraphicsUnit.Point" />.</exception>
    </member>
    <member name="M:System.Windows.Forms.AxHost.GetIPictureDispFromPicture(System.Drawing.Image)">
      <summary>Returns an OLE IPictureDisp object corresponding to the specified <see cref="T:System.Drawing.Image" />.</summary>
      <returns>An <see cref="T:System.Object" /> representing the OLE IPictureDisp object.</returns>
      <param name="image">The <see cref="T:System.Drawing.Image" /> to convert.</param>
    </member>
    <member name="M:System.Windows.Forms.AxHost.GetIPictureFromCursor(System.Windows.Forms.Cursor)">
      <summary>Returns an OLE IPicture object corresponding to the specified <see cref="T:System.Windows.Forms.Cursor" />.</summary>
      <returns>An <see cref="T:System.Object" /> representing the OLE IPicture object.</returns>
      <param name="cursor">
        <see cref="T:System.Windows.Forms.Cursor" />
      </param>
    </member>
    <member name="M:System.Windows.Forms.AxHost.GetIPictureFromPicture(System.Drawing.Image)">
      <summary>Returns an OLE IPicture object corresponding to the specified <see cref="T:System.Drawing.Image" />.</summary>
      <returns>An <see cref="T:System.Object" /> representing the OLE IPicture object.</returns>
      <param name="image">The <see cref="T:System.Drawing.Image" /> to convert.</param>
    </member>
    <member name="M:System.Windows.Forms.AxHost.GetOADateFromTime(System.DateTime)">
      <summary>Returns an OLE Automation date that corresponds to the specified <see cref="T:System.DateTime" /> structure. </summary>
      <returns>A double-precision floating-point number that contains an OLE Automation date equivalent to specified <paramref name="time" /> value.</returns>
      <param name="time">The <see cref="T:System.DateTime" /> structure to translate.</param>
      <exception cref="T:System.OverflowException">The value of this instance cannot be represented as an OLE Automation Date. </exception>
    </member>
    <member name="M:System.Windows.Forms.AxHost.GetOcx">
      <summary>Retrieves a reference to the underlying ActiveX control.</summary>
      <returns>An object that represents the ActiveX control.</returns>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="M:System.Windows.Forms.AxHost.GetOleColorFromColor(System.Drawing.Color)">
      <summary>Returns an OLE color value that corresponds to the specified <see cref="T:System.Drawing.Color" /> structure.</summary>
      <returns>The OLE color value that represents the translated <see cref="T:System.Drawing.Color" /> structure.</returns>
      <param name="color">The <see cref="T:System.Drawing.Color" /> structure to translate.</param>
    </member>
    <member name="M:System.Windows.Forms.AxHost.GetPictureFromIPicture(System.Object)">
      <summary>Returns an <see cref="T:System.Drawing.Image" /> corresponding to the specified OLE IPicture object.</summary>
      <returns>An <see cref="T:System.Drawing.Image" /> representing the IPicture. </returns>
      <param name="picture">The IPicture to convert.</param>
    </member>
    <member name="M:System.Windows.Forms.AxHost.GetPictureFromIPictureDisp(System.Object)">
      <summary>Returns an <see cref="T:System.Drawing.Image" /> corresponding to the specified OLE IPictureDisp object.</summary>
      <returns>An <see cref="T:System.Drawing.Image" /> representing the IPictureDisp. </returns>
      <param name="picture">The IPictureDisp to convert.</param>
    </member>
    <member name="M:System.Windows.Forms.AxHost.GetScaledBounds(System.Drawing.Rectangle,System.Drawing.SizeF,System.Windows.Forms.BoundsSpecified)">
      <summary>Called by the system to retrieve the current bounds of the ActiveX control.</summary>
      <returns>The unmodified <paramref name="bounds" /> value.</returns>
      <param name="bounds">The original bounds of the ActiveX control.</param>
      <param name="factor">A scaling factor. </param>
      <param name="specified">A <see cref="T:System.Windows.Forms.BoundsSpecified" /> value.</param>
    </member>
    <member name="M:System.Windows.Forms.AxHost.GetTimeFromOADate(System.Double)">
      <summary>Returns a <see cref="T:System.DateTime" /> structure that corresponds to the specified OLE Automation date.</summary>
      <returns>A <see cref="T:System.DateTime" /> that represents the same date and time as <paramref name="date" />.</returns>
      <param name="date">The OLE Automate date to translate.</param>
      <exception cref="T:System.ArgumentException">The date is not a valid OLE Automation Date value. </exception>
    </member>
    <member name="E:System.Windows.Forms.AxHost.GiveFeedback">
      <summary>The <see cref="E:System.Windows.Forms.AxHost.GiveFeedback" /> event is not supported by the <see cref="T:System.Windows.Forms.AxHost" /> class.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="P:System.Windows.Forms.AxHost.HasAboutBox">
      <summary>Gets a value indicating whether the ActiveX control has an About dialog box.</summary>
      <returns>true if the ActiveX control has an About dialog box; otherwise, false.</returns>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="M:System.Windows.Forms.AxHost.HasPropertyPages">
      <summary>Determines if the ActiveX control has a property page.</summary>
      <returns>true if the ActiveX control has a property page; otherwise, false.</returns>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="E:System.Windows.Forms.AxHost.HelpRequested">
      <summary>The <see cref="E:System.Windows.Forms.AxHost.HelpRequested" /> event is not supported by the <see cref="T:System.Windows.Forms.AxHost" /> class.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="P:System.Windows.Forms.AxHost.ImeMode">
      <summary>This property is not relevant for this class.</summary>
      <returns>An <see cref="T:System.Windows.Forms.ImeMode" /> value.</returns>
    </member>
    <member name="E:System.Windows.Forms.AxHost.ImeModeChanged">
      <summary>The <see cref="E:System.Windows.Forms.AxHost.ImeModeChanged" /> event is not supported by the <see cref="T:System.Windows.Forms.AxHost" /> class.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Windows.Forms.AxHost.InvokeEditMode">
      <summary>Attempts to activate the editing mode of the hosted control. </summary>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
        <IPermission class="System.Diagnostics.PerformanceCounterPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:System.Windows.Forms.AxHost.IsInputChar(System.Char)">
      <summary>Determines if a character is an input character that the ActiveX control recognizes.</summary>
      <returns>true if the character should be sent directly to the ActiveX control and not preprocessed; otherwise, false.</returns>
      <param name="charCode">The character to test. </param>
    </member>
    <member name="E:System.Windows.Forms.AxHost.KeyDown">
      <summary>The <see cref="E:System.Windows.Forms.AxHost.KeyDown" /> event is not supported by the <see cref="T:System.Windows.Forms.AxHost" /> class.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="E:System.Windows.Forms.AxHost.KeyPress">
      <summary>The <see cref="E:System.Windows.Forms.AxHost.KeyPress" /> event is not supported by the <see cref="T:System.Windows.Forms.AxHost" /> class.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="E:System.Windows.Forms.AxHost.KeyUp">
      <summary>The <see cref="E:System.Windows.Forms.AxHost.KeyUp" /> event is not supported by the <see cref="T:System.Windows.Forms.AxHost" /> class.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="E:System.Windows.Forms.AxHost.Layout">
      <summary>The <see cref="E:System.Windows.Forms.AxHost.Layout" /> event is not supported by the <see cref="T:System.Windows.Forms.AxHost" /> class.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Windows.Forms.AxHost.MakeDirty">
      <summary>Announces to the component change service that the <see cref="T:System.Windows.Forms.AxHost" /> has changed.</summary>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="E:System.Windows.Forms.AxHost.MouseClick">
      <summary>This event is not relevant for this class.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="E:System.Windows.Forms.AxHost.MouseDoubleClick">
      <summary>This event is not relevant for this class.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="E:System.Windows.Forms.AxHost.MouseDown">
      <summary>The <see cref="E:System.Windows.Forms.AxHost.MouseDown" /> event is not supported by the <see cref="T:System.Windows.Forms.AxHost" /> class.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="E:System.Windows.Forms.AxHost.MouseEnter">
      <summary>The <see cref="E:System.Windows.Forms.AxHost.MouseEnter" /> event is not supported by the <see cref="T:System.Windows.Forms.AxHost" /> class.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="E:System.Windows.Forms.AxHost.MouseHover">
      <summary>The <see cref="E:System.Windows.Forms.AxHost.MouseHover" /> event is not supported by the <see cref="T:System.Windows.Forms.AxHost" /> class.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="E:System.Windows.Forms.AxHost.MouseLeave">
      <summary>The <see cref="E:System.Windows.Forms.AxHost.MouseLeave" /> event is not supported by the <see cref="T:System.Windows.Forms.AxHost" /> class.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="E:System.Windows.Forms.AxHost.MouseMove">
      <summary>The <see cref="E:System.Windows.Forms.AxHost.MouseMove" /> event is not supported by the <see cref="T:System.Windows.Forms.AxHost" /> class.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="E:System.Windows.Forms.AxHost.MouseUp">
      <summary>The <see cref="E:System.Windows.Forms.AxHost.MouseUp" /> event is not supported by the <see cref="T:System.Windows.Forms.AxHost" /> class.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="E:System.Windows.Forms.AxHost.MouseWheel">
      <summary>The <see cref="E:System.Windows.Forms.AxHost.MouseWheel" /> event is not supported by the <see cref="T:System.Windows.Forms.AxHost" /> class.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="P:System.Windows.Forms.AxHost.OcxState">
      <summary>Gets or sets the persisted state of the ActiveX control.</summary>
      <returns>A <see cref="T:System.Windows.Forms.AxHost.State" /> that represents the persisted state of the ActiveX control.</returns>
      <exception cref="T:System.Exception">The ActiveX control is already loaded. </exception>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="M:System.Windows.Forms.AxHost.OnBackColorChanged(System.EventArgs)">
      <param name="e">An <see cref="T:System.EventArgs" /> that contains the event data. </param>
    </member>
    <member name="M:System.Windows.Forms.AxHost.OnFontChanged(System.EventArgs)">
      <param name="e">An <see cref="T:System.EventArgs" /> that contains the event data. </param>
    </member>
    <member name="M:System.Windows.Forms.AxHost.OnForeColorChanged(System.EventArgs)">
      <param name="e">An <see cref="T:System.EventArgs" /> that contains the event data. </param>
    </member>
    <member name="M:System.Windows.Forms.AxHost.OnHandleCreated(System.EventArgs)">
      <param name="e">An <see cref="T:System.EventArgs" /> that contains the event data. </param>
    </member>
    <member name="M:System.Windows.Forms.AxHost.OnInPlaceActive">
      <summary>Called when the control transitions to the in-place active state.</summary>
    </member>
    <member name="M:System.Windows.Forms.AxHost.OnLostFocus(System.EventArgs)">
      <param name="e">An <see cref="T:System.EventArgs" /> that contains the event data. </param>
    </member>
    <member name="E:System.Windows.Forms.AxHost.Paint">
      <summary>The <see cref="E:System.Windows.Forms.AxHost.Paint" /> event is not supported by the <see cref="T:System.Windows.Forms.AxHost" /> class.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Windows.Forms.AxHost.PreProcessMessage(System.Windows.Forms.Message@)">
      <returns>true if the message was processed by the control; otherwise, false.</returns>
      <param name="msg">A <see cref="T:System.Windows.Forms.Message" />, passed by reference, that represents the message to process. The possible values are WM_KEYDOWN, WM_SYSKEYDOWN, WM_CHAR, and WM_SYSCHAR. </param>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
        <IPermission class="System.Diagnostics.PerformanceCounterPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:System.Windows.Forms.AxHost.ProcessDialogKey(System.Windows.Forms.Keys)">
      <returns>true if the key was processed by the control; otherwise, false.</returns>
      <param name="keyData">One of the <see cref="T:System.Windows.Forms.Keys" /> values that represents the key to process. </param>
    </member>
    <member name="M:System.Windows.Forms.AxHost.ProcessMnemonic(System.Char)">
      <returns>true if the character was processed as a mnemonic by the control; otherwise, false.</returns>
      <param name="charCode">The character to process. </param>
    </member>
    <member name="M:System.Windows.Forms.AxHost.PropsValid">
      <summary>Returns a value that indicates whether the hosted control is in a state in which its properties can be accessed.</summary>
      <returns>true if the properties of the hosted control can be accessed; otherwise, false.</returns>
    </member>
    <member name="E:System.Windows.Forms.AxHost.QueryAccessibilityHelp">
      <summary>The <see cref="E:System.Windows.Forms.AxHost.QueryAccessibilityHelp" /> event is not supported by the <see cref="T:System.Windows.Forms.AxHost" /> class.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="E:System.Windows.Forms.AxHost.QueryContinueDrag">
      <summary>The <see cref="E:System.Windows.Forms.AxHost.QueryContinueDrag" /> event is not supported by the <see cref="T:System.Windows.Forms.AxHost" /> class.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Windows.Forms.AxHost.RaiseOnMouseDown(System.Int16,System.Int16,System.Int32,System.Int32)">
      <summary>Raises the <see cref="E:System.Windows.Forms.AxHost.MouseDown" /> event using the specified 32-bit signed integers.</summary>
      <param name="button">One of the <see cref="T:System.Windows.Forms.MouseButtons" /> values that indicate which mouse button was pressed. </param>
      <param name="shift">Not used.</param>
      <param name="x">The x-coordinate of a mouse click, in pixels.</param>
      <param name="y">The y-coordinate of a mouse click, in pixels. </param>
    </member>
    <member name="M:System.Windows.Forms.AxHost.RaiseOnMouseDown(System.Int16,System.Int16,System.Single,System.Single)">
      <summary>Raises the <see cref="E:System.Windows.Forms.AxHost.MouseDown" /> event using the specified single-precision floating-point numbers.</summary>
      <param name="button">One of the <see cref="T:System.Windows.Forms.MouseButtons" /> values that indicate which mouse button was pressed. </param>
      <param name="shift">Not used.</param>
      <param name="x">The x-coordinate of a mouse click, in pixels.</param>
      <param name="y">The y-coordinate of a mouse click, in pixels. </param>
    </member>
    <member name="M:System.Windows.Forms.AxHost.RaiseOnMouseDown(System.Object,System.Object,System.Object,System.Object)">
      <summary>Raises the <see cref="E:System.Windows.Forms.AxHost.MouseDown" /> event using the specified objects.</summary>
      <param name="o1">One of the <see cref="T:System.Windows.Forms.MouseButtons" /> values that indicate which mouse button was pressed. </param>
      <param name="o2">Not used.</param>
      <param name="o3">The x-coordinate of a mouse click, in pixels.</param>
      <param name="o4">The y-coordinate of a mouse click, in pixels. </param>
    </member>
    <member name="M:System.Windows.Forms.AxHost.RaiseOnMouseMove(System.Int16,System.Int16,System.Int32,System.Int32)">
      <summary>Raises the <see cref="E:System.Windows.Forms.AxHost.MouseMove" /> event using the specified 32-bit signed integers.</summary>
      <param name="button">One of the <see cref="T:System.Windows.Forms.MouseButtons" /> values that indicate which mouse button was pressed. </param>
      <param name="shift">Not used.</param>
      <param name="x">The x-coordinate of a mouse click, in pixels.</param>
      <param name="y">The y-coordinate of a mouse click, in pixels. </param>
    </member>
    <member name="M:System.Windows.Forms.AxHost.RaiseOnMouseMove(System.Int16,System.Int16,System.Single,System.Single)">
      <summary>Raises the <see cref="E:System.Windows.Forms.AxHost.MouseMove" /> event using the specified single-precision floating-point numbers.</summary>
      <param name="button">One of the <see cref="T:System.Windows.Forms.MouseButtons" /> values that indicate which mouse button was pressed. </param>
      <param name="shift">Not used.</param>
      <param name="x">The x-coordinate of a mouse click, in pixels.</param>
      <param name="y">The y-coordinate of a mouse click, in pixels. </param>
    </member>
    <member name="M:System.Windows.Forms.AxHost.RaiseOnMouseMove(System.Object,System.Object,System.Object,System.Object)">
      <summary>Raises the <see cref="E:System.Windows.Forms.AxHost.MouseMove" /> event using the specified objects.</summary>
      <param name="o1">One of the <see cref="T:System.Windows.Forms.MouseButtons" /> values that indicate which mouse button was pressed. </param>
      <param name="o2">Not used.</param>
      <param name="o3">The x-coordinate of a mouse click, in pixels.</param>
      <param name="o4">The y-coordinate of a mouse click, in pixels. </param>
    </member>
    <member name="M:System.Windows.Forms.AxHost.RaiseOnMouseUp(System.Int16,System.Int16,System.Int32,System.Int32)">
      <summary>Raises the <see cref="E:System.Windows.Forms.AxHost.MouseUp" /> event using the specified 32-bit signed integers.</summary>
      <param name="button">One of the <see cref="T:System.Windows.Forms.MouseButtons" /> values that indicate which mouse button was pressed. </param>
      <param name="shift">Not used.</param>
      <param name="x">The x-coordinate of a mouse click, in pixels.</param>
      <param name="y">The y-coordinate of a mouse click, in pixels. </param>
    </member>
    <member name="M:System.Windows.Forms.AxHost.RaiseOnMouseUp(System.Int16,System.Int16,System.Single,System.Single)">
      <summary>Raises the <see cref="E:System.Windows.Forms.AxHost.MouseUp" /> event using the specified single-precision floating-point numbers.</summary>
      <param name="button">One of the <see cref="T:System.Windows.Forms.MouseButtons" /> values that indicate which mouse button was pressed. </param>
      <param name="shift">Not used.</param>
      <param name="x">The x-coordinate of a mouse click, in pixels.</param>
      <param name="y">The y-coordinate of a mouse click, in pixels. </param>
    </member>
    <member name="M:System.Windows.Forms.AxHost.RaiseOnMouseUp(System.Object,System.Object,System.Object,System.Object)">
      <summary>Raises the <see cref="E:System.Windows.Forms.AxHost.MouseUp" /> event using the specified objects.</summary>
      <param name="o1">One of the <see cref="T:System.Windows.Forms.MouseButtons" /> values that indicate which mouse button was pressed. </param>
      <param name="o2">Not used.</param>
      <param name="o3">The x-coordinate of a mouse click, in pixels.</param>
      <param name="o4">The y-coordinate of a mouse click, in pixels. </param>
    </member>
    <member name="P:System.Windows.Forms.AxHost.RightToLeft">
      <summary>This property is not relevant for this class.</summary>
      <returns>A <see cref="T:System.Boolean" /> value.</returns>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
        <IPermission class="System.Diagnostics.PerformanceCounterPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="E:System.Windows.Forms.AxHost.RightToLeftChanged">
      <summary>The <see cref="E:System.Windows.Forms.AxHost.RightToLeftChanged" /> event is not supported by the <see cref="T:System.Windows.Forms.AxHost" /> class.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Windows.Forms.AxHost.SetAboutBoxDelegate(System.Windows.Forms.AxHost.AboutBoxDelegate)">
      <summary>Calls the <see cref="M:System.Windows.Forms.AxHost.ShowAboutBox" /> method to display the ActiveX control's About dialog box.</summary>
      <param name="d">The <see cref="T:System.Windows.Forms.AxHost.AboutBoxDelegate" /> to call. </param>
    </member>
    <member name="M:System.Windows.Forms.AxHost.SetBoundsCore(System.Int32,System.Int32,System.Int32,System.Int32,System.Windows.Forms.BoundsSpecified)">
      <param name="x">The new <see cref="P:System.Windows.Forms.Control.Left" /> property value of the control. </param>
      <param name="y">The new <see cref="P:System.Windows.Forms.Control.Top" /> property value of the control. </param>
      <param name="width">The new <see cref="P:System.Windows.Forms.Control.Width" /> property value of the control. </param>
      <param name="height">The new <see cref="P:System.Windows.Forms.Control.Height" /> property value of the control. </param>
      <param name="specified">A bitwise combination of the <see cref="T:System.Windows.Forms.BoundsSpecified" /> values. </param>
    </member>
    <member name="M:System.Windows.Forms.AxHost.SetVisibleCore(System.Boolean)">
      <param name="value">true to make the control visible; otherwise, false. </param>
    </member>
    <member name="M:System.Windows.Forms.AxHost.ShowAboutBox">
      <summary>Displays the ActiveX control's About dialog box.</summary>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="M:System.Windows.Forms.AxHost.ShowPropertyPages">
      <summary>Displays the property pages associated with the ActiveX control.</summary>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
        <IPermission class="System.Diagnostics.PerformanceCounterPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:System.Windows.Forms.AxHost.ShowPropertyPages(System.Windows.Forms.Control)">
      <summary>Displays the property pages associated with the ActiveX control assigned to the specified parent control.</summary>
      <param name="control">The parent <see cref="T:System.Windows.Forms.Control" /> of the ActiveX control. </param>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
        <IPermission class="System.Diagnostics.PerformanceCounterPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="P:System.Windows.Forms.AxHost.Site">
      <returns>The <see cref="T:System.ComponentModel.ISite" /> associated with the <see cref="T:System.Windows.Forms.Control" />, if any.</returns>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
        <IPermission class="System.Diagnostics.PerformanceCounterPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="E:System.Windows.Forms.AxHost.StyleChanged">
      <summary>The <see cref="E:System.Windows.Forms.AxHost.StyleChanged" /> event is not supported by the <see cref="T:System.Windows.Forms.AxHost" /> class.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Windows.Forms.AxHost.System#ComponentModel#ICustomTypeDescriptor#GetAttributes">
      <summary>Returns a collection of type <see cref="T:System.Attribute" /> for the current object.</summary>
      <returns>An <see cref="T:System.ComponentModel.AttributeCollection" /> with the attributes for the current object.</returns>
    </member>
    <member name="M:System.Windows.Forms.AxHost.System#ComponentModel#ICustomTypeDescriptor#GetClassName">
      <summary>Returns the class name of the current object.</summary>
      <returns>Returns null in all cases.</returns>
    </member>
    <member name="M:System.Windows.Forms.AxHost.System#ComponentModel#ICustomTypeDescriptor#GetComponentName">
      <summary>Returns the name of the current object.</summary>
      <returns>Returns null in all cases.</returns>
    </member>
    <member name="M:System.Windows.Forms.AxHost.System#ComponentModel#ICustomTypeDescriptor#GetConverter">
      <summary>Returns a type converter for the current object.</summary>
      <returns>Returns null in all cases.</returns>
    </member>
    <member name="M:System.Windows.Forms.AxHost.System#ComponentModel#ICustomTypeDescriptor#GetDefaultEvent">
      <summary>Returns the default event for the current object.</summary>
      <returns>An <see cref="T:System.ComponentModel.EventDescriptor" /> that represents the default event for the current object, or null if the object does not have events.</returns>
    </member>
    <member name="M:System.Windows.Forms.AxHost.System#ComponentModel#ICustomTypeDescriptor#GetDefaultProperty">
      <summary>Returns the default property for the current object.</summary>
      <returns>A <see cref="T:System.ComponentModel.PropertyDescriptor" /> that represents the default property for the current object, or null if the object does not have properties.</returns>
    </member>
    <member name="M:System.Windows.Forms.AxHost.System#ComponentModel#ICustomTypeDescriptor#GetEditor(System.Type)">
      <summary>Returns an editor of the specified type for the current object.</summary>
      <returns>An object of the specified type that is the editor for the current object, or null if the editor cannot be found.</returns>
      <param name="editorBaseType">A <see cref="T:System.Type" /> that represents the editor for the current object.</param>
    </member>
    <member name="M:System.Windows.Forms.AxHost.System#ComponentModel#ICustomTypeDescriptor#GetEvents">
      <summary>Returns the events for the current object.</summary>
      <returns>An <see cref="T:System.ComponentModel.EventDescriptorCollection" /> that represents the events for the current object.</returns>
    </member>
    <member name="M:System.Windows.Forms.AxHost.System#ComponentModel#ICustomTypeDescriptor#GetEvents(System.Attribute[])">
      <summary>Returns the events for the current object using the specified attribute array as a filter.</summary>
      <returns>An <see cref="T:System.ComponentModel.EventDescriptorCollection" /> that represents the events for the <see cref="T:System.Windows.Forms.AxHost" /> that match the given set of attributes.</returns>
      <param name="attributes">An array of type <see cref="T:System.Attribute" /> that is used as a filter.</param>
    </member>
    <member name="M:System.Windows.Forms.AxHost.System#ComponentModel#ICustomTypeDescriptor#GetProperties">
      <summary>Returns the properties for the current object.</summary>
      <returns>A <see cref="T:System.ComponentModel.PropertyDescriptorCollection" /> that represents the events for the current object.</returns>
    </member>
    <member name="M:System.Windows.Forms.AxHost.System#ComponentModel#ICustomTypeDescriptor#GetProperties(System.Attribute[])">
      <summary>Returns the properties for the current object using the specified attribute array as a filter.</summary>
      <returns>A <see cref="T:System.ComponentModel.PropertyDescriptorCollection" /> that represents the events for the current <see cref="T:System.Windows.Forms.AxHost" /> that match the given set of attributes.</returns>
      <param name="attributes">An array of type <see cref="T:System.Attribute" /> that is used as a filter.</param>
    </member>
    <member name="M:System.Windows.Forms.AxHost.System#ComponentModel#ICustomTypeDescriptor#GetPropertyOwner(System.ComponentModel.PropertyDescriptor)">
      <summary>Returns the object that owns the specified value.</summary>
      <returns>The current object.</returns>
      <param name="pd">Not used.</param>
    </member>
    <member name="P:System.Windows.Forms.AxHost.Text">
      <summary>This property is not relevant for this class.</summary>
      <returns>A <see cref="T:System.String" />.</returns>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="E:System.Windows.Forms.AxHost.TextChanged">
      <summary>The <see cref="E:System.Windows.Forms.AxHost.TextChanged" /> event is not supported by the <see cref="T:System.Windows.Forms.AxHost" /> class.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Windows.Forms.AxHost.WndProc(System.Windows.Forms.Message@)">
      <param name="m">The Windows <see cref="T:System.Windows.Forms.Message" /> to process. </param>
    </member>
    <member name="T:System.Windows.Forms.AxHost.AboutBoxDelegate">
      <summary>Represents the method that will display an ActiveX control's About dialog box.</summary>
    </member>
    <member name="T:System.Windows.Forms.AxHost.ActiveXInvokeKind">
      <summary>Specifies the type of member that referenced the ActiveX control while it was in an invalid state.</summary>
    </member>
    <member name="F:System.Windows.Forms.AxHost.ActiveXInvokeKind.MethodInvoke">
      <summary>A method referenced the ActiveX control.</summary>
    </member>
    <member name="F:System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertyGet">
      <summary>The get accessor of a property referenced the ActiveX control.</summary>
    </member>
    <member name="F:System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertySet">
      <summary>The set accessor of a property referenced the ActiveX control.</summary>
    </member>
    <member name="T:System.Windows.Forms.AxHost.AxComponentEditor">
      <summary>Provides an editor that uses a modal dialog box to display a property page for an ActiveX control.</summary>
    </member>
    <member name="M:System.Windows.Forms.AxHost.AxComponentEditor.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Forms.AxHost.AxComponentEditor" /> class. </summary>
    </member>
    <member name="M:System.Windows.Forms.AxHost.AxComponentEditor.EditComponent(System.ComponentModel.ITypeDescriptorContext,System.Object,System.Windows.Forms.IWin32Window)">
      <returns>true if the component was changed during editing; otherwise, false.</returns>
      <param name="context">An <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> that can be used to gain additional context information. </param>
      <param name="obj"></param>
      <param name="parent"></param>
    </member>
    <member name="T:System.Windows.Forms.AxHost.ClsidAttribute">
      <summary>Specifies the CLSID of an ActiveX control hosted by an <see cref="T:System.Windows.Forms.AxHost" /> control.</summary>
    </member>
    <member name="M:System.Windows.Forms.AxHost.ClsidAttribute.#ctor(System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Forms.AxHost.ClsidAttribute" /> class. </summary>
      <param name="clsid">The CLSID of the ActiveX control.</param>
    </member>
    <member name="P:System.Windows.Forms.AxHost.ClsidAttribute.Value">
      <summary>The CLSID of the ActiveX control.</summary>
      <returns>The CLSID of the ActiveX control.</returns>
    </member>
    <member name="T:System.Windows.Forms.AxHost.ConnectionPointCookie">
      <summary>Connects an ActiveX control to a client that handles the controlâs events.</summary>
    </member>
    <member name="M:System.Windows.Forms.AxHost.ConnectionPointCookie.#ctor(System.Object,System.Object,System.Type)">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Forms.AxHost.ConnectionPointCookie" /> class.</summary>
      <param name="source">A connectable object that contains connection points.</param>
      <param name="sink">The client's sink which receives outgoing calls from the connection point.</param>
      <param name="eventInterface">The outgoing interface whose connection point object is being requested.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="source" /> does not implement <paramref name="eventInterface" />.</exception>
      <exception cref="T:System.InvalidCastException">
        <paramref name="sink" /> does not implement <paramref name="eventInterface" />.-or-<paramref name="source" /> does not implement <see cref="T:System.Runtime.InteropServices.ComTypes.IConnectionPointContainer" />.</exception>
      <exception cref="T:System.InvalidOperationException">The connection point has already reached its limit of connections and cannot accept any more.</exception>
    </member>
    <member name="M:System.Windows.Forms.AxHost.ConnectionPointCookie.Disconnect">
      <summary>Disconnects the ActiveX control from the client.</summary>
    </member>
    <member name="M:System.Windows.Forms.AxHost.ConnectionPointCookie.Finalize">
      <summary>Releases the unmanaged resources used by the <see cref="T:System.Windows.Forms.AxHost.ConnectionPointCookie" /> class.</summary>
    </member>
    <member name="T:System.Windows.Forms.AxHost.InvalidActiveXStateException">
      <summary>The exception that is thrown when the ActiveX control is referenced while in an invalid state.</summary>
    </member>
    <member name="M:System.Windows.Forms.AxHost.InvalidActiveXStateException.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Forms.AxHost.InvalidActiveXStateException" /> class without specifying information about the member that referenced the ActiveX control.</summary>
    </member>
    <member name="M:System.Windows.Forms.AxHost.InvalidActiveXStateException.#ctor(System.String,System.Windows.Forms.AxHost.ActiveXInvokeKind)">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Forms.AxHost.InvalidActiveXStateException" /> class and indicates the name of the member that referenced the ActiveX control and the kind of reference it made.</summary>
      <param name="name">The name of the member that referenced the ActiveX control while it was in an invalid state. </param>
      <param name="kind">One of the <see cref="T:System.Windows.Forms.AxHost.ActiveXInvokeKind" /> values. </param>
    </member>
    <member name="M:System.Windows.Forms.AxHost.InvalidActiveXStateException.ToString">
      <summary>Creates and returns a string representation of the current exception.</summary>
      <returns>A string representation of the current exception.</returns>
    </member>
    <member name="T:System.Windows.Forms.AxHost.State">
      <summary>Encapsulates the persisted state of an ActiveX control.</summary>
    </member>
    <member name="M:System.Windows.Forms.AxHost.State.#ctor(System.IO.Stream,System.Int32,System.Boolean,System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Forms.AxHost.State" /> class for serializing a state. </summary>
      <param name="ms">A <see cref="T:System.IO.Stream" /> in which the state is stored. </param>
      <param name="storageType">An <see cref="T:System.Int32" /> indicating the storage type.</param>
      <param name="manualUpdate">true for manual updates; otherwise, false.</param>
      <param name="licKey">The license key of the control.</param>
    </member>
    <member name="M:System.Windows.Forms.AxHost.State.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Forms.AxHost.State" /> class for deserializing a state. </summary>
      <param name="info">A <see cref="T:System.Runtime.Serialization.SerializationInfo" /> value.</param>
      <param name="context">A <see cref="T:System.Runtime.Serialization.StreamingContext" /> value.</param>
    </member>
    <member name="M:System.Windows.Forms.AxHost.State.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Populates a <see cref="T:System.Runtime.Serialization.SerializationInfo" /> with the data needed to serialize the target object.</summary>
      <param name="si">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> to populate with data. </param>
      <param name="context">The destination for this serialization.</param>
      <exception cref="T:System.Security.SecurityException">The caller does not have the required permission.</exception>
    </member>
    <member name="T:System.Windows.Forms.AxHost.StateConverter">
      <summary>Converts <see cref="T:System.Windows.Forms.AxHost.State" /> objects from one data type to another. </summary>
    </member>
    <member name="M:System.Windows.Forms.AxHost.StateConverter.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Forms.AxHost.StateConverter" /> class. </summary>
    </member>
    <member name="M:System.Windows.Forms.AxHost.StateConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)">
      <summary>Returns whether the <see cref="T:System.Windows.Forms.AxHost.StateConverter" /> can convert an object of the specified type to an <see cref="T:System.Windows.Forms.AxHost.State" />, using the specified context.</summary>
      <returns>true if the <see cref="T:System.Windows.Forms.AxHost.StateConverter" /> can perform the conversion; otherwise, false.</returns>
      <param name="context">An <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> that provides a format context. </param>
      <param name="sourceType">A <see cref="T:System.Type" /> that represents the type from which to convert.</param>
    </member>
    <member name="M:System.Windows.Forms.AxHost.StateConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)">
      <summary>Returns whether the <see cref="T:System.Windows.Forms.AxHost.StateConverter" /> can convert an object to the given destination type using the context.</summary>
      <returns>true if the <see cref="T:System.Windows.Forms.AxHost.StateConverter" /> can perform the conversion; otherwise, false.</returns>
      <param name="context">An <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> that provides a format context. </param>
      <param name="destinationType">A <see cref="T:System.Type" /> that represents the type from which to convert.</param>
    </member>
    <member name="M:System.Windows.Forms.AxHost.StateConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
      <summary>This member overrides <see cref="M:System.ComponentModel.TypeConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)" />.</summary>
      <returns>An <see cref="T:System.Object" /> that represents the converted value.</returns>
      <param name="context">An <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> that provides a format context.</param>
      <param name="culture">The <see cref="T:System.Globalization.CultureInfo" /> to use as the current culture.</param>
      <param name="value">The <see cref="T:System.Object" /> to convert.</param>
    </member>
    <member name="M:System.Windows.Forms.AxHost.StateConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
      <summary>This member overrides <see cref="M:System.ComponentModel.TypeConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)" />.</summary>
      <returns>An <see cref="T:System.Object" /> that represents the converted value.</returns>
      <param name="context">An <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> that provides a format context.</param>
      <param name="culture">A <see cref="T:System.Globalization.CultureInfo" />. If null is passed, the current culture is assumed.</param>
      <param name="value">The <see cref="T:System.Object" /> to convert.</param>
      <param name="destinationType">The <see cref="T:System.Type" /> to convert the value parameter to.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="destinationType" /> is null.</exception>
    </member>
    <member name="T:System.Windows.Forms.AxHost.TypeLibraryTimeStampAttribute">
      <summary>Specifies a date and time associated with the type library of an ActiveX control hosted by an <see cref="T:System.Windows.Forms.AxHost" /> control.</summary>
    </member>
    <member name="M:System.Windows.Forms.AxHost.TypeLibraryTimeStampAttribute.#ctor(System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Forms.AxHost.TypeLibraryTimeStampAttribute" /> class. </summary>
      <param name="timestamp">A <see cref="T:System.DateTime" /> value representing the date and time to associate with the type library.</param>
    </member>
    <member name="P:System.Windows.Forms.AxHost.TypeLibraryTimeStampAttribute.Value">
      <summary>The date and time to associate with the type library.</summary>
      <returns>A <see cref="T:System.DateTime" /> value representing the date and time to associate with the type library.</returns>
    </member>
    <member name="T:System.Windows.Forms.BaseCollection">
      <summary>Provides the base functionality for creating data-related collections in the <see cref="N:System.Windows.Forms" /> namespace.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Windows.Forms.BaseCollection.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Forms.BaseCollection" /> class. </summary>
    </member>
    <member name="M:System.Windows.Forms.BaseCollection.CopyTo(System.Array,System.Int32)">
      <summary>Copies all the elements of the current one-dimensional <see cref="T:System.Array" /> to the specified one-dimensional <see cref="T:System.Array" /> starting at the specified destination <see cref="T:System.Array" /> index.</summary>
      <param name="ar">The one-dimensional <see cref="T:System.Array" /> that is the destination of the elements copied from the current Array. </param>
      <param name="index">The zero-based relative index in <paramref name="ar" /> at which copying begins. </param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="P:System.Windows.Forms.BaseCollection.Count">
      <summary>Gets the total number of elements in the collection.</summary>
      <returns>The total number of elements in the collection.</returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Windows.Forms.BaseCollection.GetEnumerator">
      <summary>Gets the object that enables iterating through the members of the collection.</summary>
      <returns>An object that implements the <see cref="T:System.Collections.IEnumerator" /> interface.</returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="P:System.Windows.Forms.BaseCollection.IsReadOnly">
      <summary>Gets a value indicating whether the collection is read-only.</summary>
      <returns>This property is always false.</returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="P:System.Windows.Forms.BaseCollection.IsSynchronized">
      <summary>Gets a value indicating whether access to the <see cref="T:System.Collections.ICollection" /> is synchronized.</summary>
      <returns>This property always returns false.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.Windows.Forms.BaseCollection.List">
      <summary>Gets the list of elements contained in the <see cref="T:System.Windows.Forms.BaseCollection" /> instance.</summary>
      <returns>An <see cref="T:System.Collections.ArrayList" /> containing the elements of the collection. This property returns null unless overridden in a derived class.</returns>
    </member>
    <member name="P:System.Windows.Forms.BaseCollection.SyncRoot">
      <summary>Gets an object that can be used to synchronize access to the <see cref="T:System.Windows.Forms.BaseCollection" />.</summary>
      <returns>An object that can be used to synchronize the <see cref="T:System.Windows.Forms.BaseCollection" />.</returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="T:System.Windows.Forms.BatteryChargeStatus">
      <summary>Defines identifiers that indicate the current battery charge level or charging state information.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="F:System.Windows.Forms.BatteryChargeStatus.High">
      <summary>Indicates a high level of battery charge.</summary>
    </member>
    <member name="F:System.Windows.Forms.BatteryChargeStatus.Low">
      <summary>Indicates a low level of battery charge.</summary>
    </member>
    <member name="F:System.Windows.Forms.BatteryChargeStatus.Critical">
      <summary>Indicates a critically low level of battery charge.</summary>
    </member>
    <member name="F:System.Windows.Forms.BatteryChargeStatus.Charging">
      <summary>Indicates a battery is charging.</summary>
    </member>
    <member name="F:System.Windows.Forms.BatteryChargeStatus.NoSystemBattery">
      <summary>Indicates that no battery is present.</summary>
    </member>
    <member name="F:System.Windows.Forms.BatteryChargeStatus.Unknown">
      <summary>Indicates an unknown battery condition.</summary>
    </member>
    <member name="T:System.Windows.Forms.Binding">
      <summary>Represents the simple binding between the property value of an object and the property value of a control.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Windows.Forms.Binding.#ctor(System.String,System.Object,System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Forms.Binding" /> class that simple-binds the indicated control property to the specified data member of the data source.</summary>
      <param name="propertyName">The name of the control property to bind. </param>
      <param name="dataSource">An <see cref="T:System.Object" /> that represents the data source. </param>
      <param name="dataMember">The property or list to bind to. </param>
      <exception cref="T:System.Exception">
        <paramref name="propertyName" /> is neither a valid property of a control nor an empty string (""). </exception>
      <exception cref="T:System.ArgumentException">The property given by <paramref name="propertyName" /> does not exist on the control.</exception>
    </member>
    <member name="M:System.Windows.Forms.Binding.#ctor(System.String,System.Object,System.String,System.Boolean)">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Forms.Binding" /> class that binds the indicated control property to the specified data member of the data source, and optionally enables formatting to be applied.</summary>
      <param name="propertyName">The name of the control property to bind. </param>
      <param name="dataSource">An <see cref="T:System.Object" /> that represents the data source. </param>
      <param name="dataMember">The property or list to bind to. </param>
      <param name="formattingEnabled">true to format the displayed data; otherwise, false. </param>
      <exception cref="T:System.ArgumentException">The property given by <paramref name="propertyName" /> does not exist on the control.-or-The property given is a read-only property.</exception>
      <exception cref="T:System.Exception">Formatting is disabled and <paramref name="propertyName" /> is neither a valid property of a control nor an empty string (""). </exception>
    </member>
    <member name="M:System.Windows.Forms.Binding.#ctor(System.String,System.Object,System.String,System.Boolean,System.Windows.Forms.DataSourceUpdateMode)">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Forms.Binding" /> class that binds the specified control property to the specified data member of the specified data source. Optionally enables formatting and propagates values to the data source based on the specified update setting.</summary>
      <param name="propertyName">The name of the control property to bind. </param>
      <param name="dataSource">An <see cref="T:System.Object" /> representing the data source. </param>
      <param name="dataMember">The property or list to bind to.</param>
      <param name="formattingEnabled">true to format the displayed data; otherwise, false.</param>
      <param name="dataSourceUpdateMode">One of the <see cref="T:System.Windows.Forms.DataSourceUpdateMode" /> values.</param>
      <exception cref="T:System.ArgumentException">The property given by <paramref name="propertyName" /> does not exist on the control.-or-The data source or data member or control property specified are associated with another binding in the collection.</exception>
    </member>
    <member name="M:System.Windows.Forms.Binding.#ctor(System.String,System.Object,System.String,System.Boolean,System.Windows.Forms.DataSourceUpdateMode,System.Object)">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Forms.Binding" /> class that binds the indicated control property to the specified data member of the specified data source. Optionally enables formatting, propagates values to the data source based on the specified update setting, and sets the property to the specified value when a <see cref="T:System.DBNull" /> is returned from the data source.</summary>
      <param name="propertyName">The name of the control property to bind. </param>
      <param name="dataSource">An <see cref="T:System.Object" /> representing the data source. </param>
      <param name="dataMember">The property or list to bind to.</param>
      <param name="formattingEnabled">true to format the displayed data; otherwise, false.</param>
      <param name="dataSourceUpdateMode">One of the <see cref="T:System.Windows.Forms.DataSourceUpdateMode" /> values.</param>
      <param name="nullValue">The <see cref="T:System.Object" /> to be applied to the bound control property if the data source value is <see cref="T:System.DBNull" />.</param>
      <exception cref="T:System.ArgumentException">The property given by <paramref name="propertyName" /> does not exist on the control.-or-The data source or data member or control property specified are associated with another binding in the collection.</exception>
    </member>
    <member name="M:System.Windows.Forms.Binding.#ctor(System.String,System.Object,System.String,System.Boolean,System.Windows.Forms.DataSourceUpdateMode,System.Object,System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Forms.Binding" /> class that binds the specified control property to the specified data member of the specified data source. Optionally enables formatting with the specified format string; propagates values to the data source based on the specified update setting; and sets the property to the specified value when a <see cref="T:System.DBNull" /> is returned from the data source.</summary>
      <param name="propertyName">The name of the control property to bind. </param>
      <param name="dataSource">An <see cref="T:System.Object" /> representing the data source. </param>
      <param name="dataMember">The property or list to bind to.</param>
      <param name="formattingEnabled">true to format the displayed data; otherwise, false.</param>
      <param name="dataSourceUpdateMode">One of the <see cref="T:System.Windows.Forms.DataSourceUpdateMode" /> values.</param>
      <param name="nullValue">The <see cref="T:System.Object" /> to be applied to the bound control property if the data source value is <see cref="T:System.DBNull" />.</param>
      <param name="formatString">One or more format specifier characters that indicate how a value is to be displayed.</param>
      <exception cref="T:System.ArgumentException">The property given by <paramref name="propertyName" /> does not exist on the control.-or-The data source or data member or control property specified are associated with another binding in the collection.</exception>
    </member>
    <member name="M:System.Windows.Forms.Binding.#ctor(System.String,System.Object,System.String,System.Boolean,System.Windows.Forms.DataSourceUpdateMode,System.Object,System.String,System.IFormatProvider)">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Forms.Binding" /> class with the specified control property to the specified data member of the specified data source. Optionally enables formatting with the specified format string; propagates values to the data source based on the specified update setting; enables formatting with the specified format string; sets the property to the specified value when a <see cref="T:System.DBNull" /> is returned from the data source; and sets the specified format provider.</summary>
      <param name="propertyName">The name of the control property to bind. </param>
      <param name="dataSource">An <see cref="T:System.Object" /> representing the data source. </param>
      <param name="dataMember">The property or list to bind to.</param>
      <param name="formattingEnabled">true to format the displayed data; otherwise, false.</param>
      <param name="dataSourceUpdateMode">One of the <see cref="T:System.Windows.Forms.DataSourceUpdateMode" /> values.</param>
      <param name="nullValue">The <see cref="T:System.Object" /> to be applied to the bound control property if the data source value is <see cref="T:System.DBNull" />.</param>
      <param name="formatString">One or more format specifier characters that indicate how a value is to be displayed.</param>
      <param name="formatInfo">An implementation of <see cref="T:System.IFormatProvider" /> to override default formatting behavior.</param>
      <exception cref="T:System.ArgumentException">The property given by <paramref name="propertyName" /> does not exist on the control.-or-The data source or data member or control property specified are associated with another binding in the collection.</exception>
    </member>
    <member name="P:System.Windows.Forms.Binding.BindableComponent">
      <summary>Gets the control the <see cref="T:System.Windows.Forms.Binding" /> is associated with.</summary>
      <returns>The <see cref="T:System.Windows.Forms.IBindableComponent" /> the <see cref="T:System.Windows.Forms.Binding" /> is associated with.</returns>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="E:System.Windows.Forms.Binding.BindingComplete">
      <summary>Occurs when the <see cref="P:System.Windows.Forms.Binding.FormattingEnabled" /> property is set to true and a binding operation is complete, such as when data is pushed from the control to the data source or vice versa</summary>
    </member>
    <member name="P:System.Windows.Forms.Binding.BindingManagerBase">
      <summary>Gets the <see cref="T:System.Windows.Forms.BindingManagerBase" /> for this <see cref="T:System.Windows.Forms.Binding" />.</summary>
      <returns>The <see cref="T:System.Windows.Forms.BindingManagerBase" /> that manages this <see cref="T:System.Windows.Forms.Binding" />.</returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="P:System.Windows.Forms.Binding.BindingMemberInfo">
      <summary>Gets an object that contains information about this binding based on the <paramref name="dataMember" /> parameter in the <see cref="Overload:System.Windows.Forms.Binding.#ctor" /> constructor.</summary>
      <returns>A <see cref="T:System.Windows.Forms.BindingMemberInfo" /> that contains information about this <see cref="T:System.Windows.Forms.Binding" />.</returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="P:System.Windows.Forms.Binding.Control">
      <summary>Gets the control that the binding belongs to.</summary>
      <returns>The <see cref="T:System.Windows.Forms.Control" /> that the binding belongs to.</returns>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="P:System.Windows.Forms.Binding.ControlUpdateMode">
      <summary>Gets or sets when changes to the data source are propagated to the bound control property.</summary>
      <returns>One of the <see cref="T:System.Windows.Forms.ControlUpdateMode" /> values. The default is <see cref="F:System.Windows.Forms.ControlUpdateMode.OnPropertyChanged" />.</returns>
    </member>
    <member name="P:System.Windows.Forms.Binding.DataSource">
      <summary>Gets the data source for this binding.</summary>
      <returns>An <see cref="T:System.Object" /> that represents the data source.</returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="P:System.Windows.Forms.Binding.DataSourceNullValue">
      <summary>Gets or sets the value to be stored in the data source if the control value is null or empty.</summary>
      <returns>The <see cref="T:System.Object" /> to be stored in the data source when the control property is empty or null. The default is <see cref="T:System.DBNull" /> for value types and null for non-value types.</returns>
    </member>
    <member name="P:System.Windows.Forms.Binding.DataSourceUpdateMode">
      <summary>Gets or sets when changes to the bound control property are propagated to the data source.</summary>
      <returns>One of the <see cref="T:System.Windows.Forms.DataSourceUpdateMode" /> values. The default is <see cref="F:System.Windows.Forms.DataSourceUpdateMode.OnValidation" />.</returns>
    </member>
    <member name="E:System.Windows.Forms.Binding.Format">
      <summary>Occurs when the property of a control is bound to a data value.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="P:System.Windows.Forms.Binding.FormatInfo">
      <summary>Gets or sets the <see cref="T:System.IFormatProvider" /> that provides custom formatting behavior.</summary>
      <returns>The <see cref="T:System.IFormatProvider" /> implementation that provides custom formatting behavior.</returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="P:System.Windows.Forms.Binding.FormatString">
      <summary>Gets or sets the format specifier characters that indicate how a value is to be displayed.</summary>
      <returns>The string of format specifier characters that indicate how a value is to be displayed.</returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="P:System.Windows.Forms.Binding.FormattingEnabled">
      <summary>Gets or sets a value indicating whether type conversion and formatting is applied to the control property data.</summary>
      <returns>true if type conversion and formatting of control property data is enabled; otherwise, false. The default is false.</returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="P:System.Windows.Forms.Binding.IsBinding">
      <summary>Gets a value indicating whether the binding is active.</summary>
      <returns>true if the binding is active; otherwise, false.</returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="P:System.Windows.Forms.Binding.NullValue">
      <summary>Gets or sets the <see cref="T:System.Object" /> to be set as the control property when the data source contains a <see cref="T:System.DBNull" /> value. </summary>
      <returns>The <see cref="T:System.Object" /> to be set as the control property when the data source contains a <see cref="T:System.DBNull" /> value. The default is null.</returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Windows.Forms.Binding.OnBindingComplete(System.Windows.Forms.BindingCompleteEventArgs)">
      <summary>Raises the <see cref="E:System.Windows.Forms.Binding.BindingComplete" /> event. </summary>
      <param name="e">A <see cref="T:System.Windows.Forms.BindingCompleteEventArgs" />  that contains the event data. </param>
    </member>
    <member name="M:System.Windows.Forms.Binding.OnFormat(System.Windows.Forms.ConvertEventArgs)">
      <summary>Raises the <see cref="E:System.Windows.Forms.Binding.Format" /> event.</summary>
      <param name="cevent">A <see cref="T:System.Windows.Forms.ConvertEventArgs" /> that contains the event data. </param>
    </member>
    <member name="M:System.Windows.Forms.Binding.OnParse(System.Windows.Forms.ConvertEventArgs)">
      <summary>Raises the <see cref="E:System.Windows.Forms.Binding.Parse" /> event.</summary>
      <param name="cevent">A <see cref="T:System.Windows.Forms.ConvertEventArgs" /> that contains the event data. </param>
    </member>
    <member name="E:System.Windows.Forms.Binding.Parse">
      <summary>Occurs when the value of a data-bound control changes.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="P:System.Windows.Forms.Binding.PropertyName">
      <summary>Gets or sets the name of the control's data-bound property.</summary>
      <returns>The name of a control property to bind to.</returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Windows.Forms.Binding.ReadValue">
      <summary>Sets the control property to the value read from the data source.</summary>
    </member>
    <member name="M:System.Windows.Forms.Binding.WriteValue">
      <summary>Reads the current value from the control property and writes it to the data source.</summary>
    </member>
    <member name="T:System.Windows.Forms.BindingCompleteContext">
      <summary>Specifies the direction of the binding operation.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="F:System.Windows.Forms.BindingCompleteContext.ControlUpdate">
      <summary>An indication that the control property value is being updated from the data source.</summary>
    </member>
    <member name="F:System.Windows.Forms.BindingCompleteContext.DataSourceUpdate">
      <summary>An indication that the data source value is being updated from the control property.</summary>
    </member>
    <member name="T:System.Windows.Forms.BindingCompleteEventArgs">
      <summary>Provides data for the <see cref="E:System.Windows.Forms.Binding.BindingComplete" /> event. </summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Windows.Forms.BindingCompleteEventArgs.#ctor(System.Windows.Forms.Binding,System.Windows.Forms.BindingCompleteState,System.Windows.Forms.BindingCompleteContext)">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Forms.BindingCompleteEventArgs" /> class with the specified binding, error state, and binding context.</summary>
      <param name="binding">The binding associated with this occurrence of a <see cref="E:System.Windows.Forms.Binding.BindingComplete" /> event.</param>
      <param name="state">One of the <see cref="T:System.Windows.Forms.BindingCompleteState" /> values.</param>
      <param name="context">One of the <see cref="T:System.Windows.Forms.BindingCompleteContext" /> values. </param>
    </member>
    <member name="M:System.Windows.Forms.BindingCompleteEventArgs.#ctor(System.Windows.Forms.Binding,System.Windows.Forms.BindingCompleteState,System.Windows.Forms.BindingCompleteContext,System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Forms.BindingCompleteEventArgs" /> class with the specified binding, error state and text, and binding context.</summary>
      <param name="binding">The binding associated with this occurrence of a <see cref="E:System.Windows.Forms.Binding.BindingComplete" /> event.</param>
      <param name="state">One of the <see cref="T:System.Windows.Forms.BindingCompleteState" /> values.</param>
      <param name="context">One of the <see cref="T:System.Windows.Forms.BindingCompleteContext" /> values. </param>
      <param name="errorText">The error text or exception message for errors that occurred during the binding.</param>
    </member>
    <member name="M:System.Windows.Forms.BindingCompleteEventArgs.#ctor(System.Windows.Forms.Binding,System.Windows.Forms.BindingCompleteState,System.Windows.Forms.BindingCompleteContext,System.String,System.Exception)">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Forms.BindingCompleteEventArgs" /> class with the specified binding, error state and text, binding context, and exception.</summary>
      <param name="binding">The binding associated with this occurrence of a <see cref="E:System.Windows.Forms.Binding.BindingComplete" /> event.</param>
      <param name="state">One of the <see cref="T:System.Windows.Forms.BindingCompleteState" /> values.</param>
      <param name="context">One of the <see cref="T:System.Windows.Forms.BindingCompleteContext" /> values. </param>
      <param name="errorText">The error text or exception message for errors that occurred during the binding.</param>
      <param name="exception">The <see cref="T:System.Exception" /> that occurred during the binding.</param>
    </member>
    <member name="M:System.Windows.Forms.BindingCompleteEventArgs.#ctor(System.Windows.Forms.Binding,System.Windows.Forms.BindingCompleteState,System.Windows.Forms.BindingCompleteContext,System.String,System.Exception,System.Boolean)">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Forms.BindingCompleteEventArgs" /> class with the specified binding, error state and text, binding context, exception, and whether the binding should be cancelled.</summary>
      <param name="binding">The binding associated with this occurrence of a <see cref="E:System.Windows.Forms.Binding.BindingComplete" /> event.</param>
      <param name="state">One of the <see cref="T:System.Windows.Forms.BindingCompleteState" /> values.</param>
      <param name="context">One of the <see cref="T:System.Windows.Forms.BindingCompleteContext" /> values. </param>
      <param name="errorText">The error text or exception message for errors that occurred during the binding.</param>
      <param name="exception">The <see cref="T:System.Exception" /> that occurred during the binding.</param>
      <param name="cancel">true to cancel the binding and keep focus on the current control; false to allow focus to shift to another control.</param>
    </member>
    <member name="P:System.Windows.Forms.BindingCompleteEventArgs.Binding">
      <summary>Gets the binding associated with this occurrence of a <see cref="E:System.Windows.Forms.Binding.BindingComplete" /> event.</summary>
      <returns>The <see cref="T:System.Windows.Forms.Binding" /> associated with this <see cref="T:System.Windows.Forms.BindingCompleteEventArgs" />.</returns>
    </member>
    <member name="P:System.Windows.Forms.BindingCompleteEventArgs.BindingCompleteContext">
      <summary>Gets the direction of the binding operation.</summary>
      <returns>One of the <see cref="T:System.Windows.Forms.BindingCompleteContext" /> values. </returns>
    </member>
    <member name="P:System.Windows.Forms.BindingCompleteEventArgs.BindingCompleteState">
      <summary>Gets the completion state of the binding operation.</summary>
      <returns>One of the <see cref="T:System.Windows.Forms.BindingCompleteState" /> values.</returns>
    </member>
    <member name="P:System.Windows.Forms.BindingCompleteEventArgs.ErrorText">
      <summary>Gets the text description of the error that occurred during the binding operation.</summary>
      <returns>The text description of the error that occurred during the binding operation.</returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="P:System.Windows.Forms.BindingCompleteEventArgs.Exception">
      <summary>Gets the exception that occurred during the binding operation.</summary>
      <returns>The <see cref="T:System.Exception" /> that occurred during the binding operation.</returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="T:System.Windows.Forms.BindingCompleteEventHandler">
      <summary>Represents the method that will handle the <see cref="E:System.Windows.Forms.Binding.BindingComplete" /> event in data-binding scenarios. </summary>
      <param name="sender">The source of the event. </param>
      <param name="e">A <see cref="T:System.Windows.Forms.BindingCompleteEventArgs" /> that contains the event data. </param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="T:System.Windows.Forms.BindingCompleteState">
      <summary>Indicates the result of a completed binding operation.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="F:System.Windows.Forms.BindingCompleteState.Success">
      <summary>An indication that the binding operation completed successfully.</summary>
    </member>
    <member name="F:System.Windows.Forms.BindingCompleteState.DataError">
      <summary>An indication that the binding operation failed with a data error.</summary>
    </member>
    <member name="F:System.Windows.Forms.BindingCompleteState.Exception">
      <summary>An indication that the binding operation failed with an exception.</summary>
    </member>
    <member name="T:System.Windows.Forms.BindingContext">
      <summary>Manages the collection of <see cref="T:System.Windows.Forms.BindingManagerBase" /> objects for any object that inherits from the <see cref="T:System.Windows.Forms.Control" /> class.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Windows.Forms.BindingContext.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Forms.BindingContext" /> class.</summary>
    </member>
    <member name="M:System.Windows.Forms.BindingContext.Add(System.Object,System.Windows.Forms.BindingManagerBase)">
      <summary>Adds the <see cref="T:System.Windows.Forms.BindingManagerBase" /> associated with a specific data source to the collection.</summary>
      <param name="dataSource">The <see cref="T:System.Object" /> associated with the <see cref="T:System.Windows.Forms.BindingManagerBase" />. </param>
      <param name="listManager">The <see cref="T:System.Windows.Forms.BindingManagerBase" /> to add. </param>
    </member>
    <member name="M:System.Windows.Forms.BindingContext.AddCore(System.Object,System.Windows.Forms.BindingManagerBase)">
      <summary>Adds the <see cref="T:System.Windows.Forms.BindingManagerBase" /> associated with a specific data source to the collection.</summary>
      <param name="dataSource">The object associated with the <see cref="T:System.Windows.Forms.BindingManagerBase" />. </param>
      <param name="listManager">The <see cref="T:System.Windows.Forms.BindingManagerBase" /> to add.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="dataSource" /> is null.-or-<paramref name="listManager" /> is null.</exception>
    </member>
    <member name="M:System.Windows.Forms.BindingContext.Clear">
      <summary>Clears the collection of any <see cref="T:System.Windows.Forms.BindingManagerBase" /> objects.</summary>
    </member>
    <member name="M:System.Windows.Forms.BindingContext.ClearCore">
      <summary>Clears the collection.</summary>
    </member>
    <member name="E:System.Windows.Forms.BindingContext.CollectionChanged">
      <summary>Always raises a <see cref="T:System.NotImplementedException" /> when handled.</summary>
      <exception cref="T:System.NotImplementedException">Occurs in all cases.</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Windows.Forms.BindingContext.Contains(System.Object)">
      <summary>Gets a value indicating whether the <see cref="T:System.Windows.Forms.BindingContext" /> contains the <see cref="T:System.Windows.Forms.BindingManagerBase" /> associated with the specified data source.</summary>
      <returns>true if the <see cref="T:System.Windows.Forms.BindingContext" /> contains the specified <see cref="T:System.Windows.Forms.BindingManagerBase" />; otherwise, false.</returns>
      <param name="dataSource">An <see cref="T:System.Object" /> that represents the data source. </param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Windows.Forms.BindingContext.Contains(System.Object,System.String)">
      <summary>Gets a value indicating whether the <see cref="T:System.Windows.Forms.BindingContext" /> contains the <see cref="T:System.Windows.Forms.BindingManagerBase" /> associated with the specified data source and data member.</summary>
      <returns>true if the <see cref="T:System.Windows.Forms.BindingContext" /> contains the specified <see cref="T:System.Windows.Forms.BindingManagerBase" />; otherwise, false.</returns>
      <param name="dataSource">An <see cref="T:System.Object" /> that represents the data source. </param>
      <param name="dataMember">The information needed to resolve to a specific <see cref="T:System.Windows.Forms.BindingManagerBase" />. </param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="P:System.Windows.Forms.BindingContext.IsReadOnly">
      <summary>Gets a value indicating whether the collection is read-only.</summary>
      <returns>true if the collection is read-only; otherwise, false.</returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="P:System.Windows.Forms.BindingContext.Item(System.Object)">
      <summary>Gets the <see cref="T:System.Windows.Forms.BindingManagerBase" /> that is associated with the specified data source.</summary>
      <returns>A <see cref="T:System.Windows.Forms.BindingManagerBase" /> for the specified data source.</returns>
      <param name="dataSource">The data source associated with a particular <see cref="T:System.Windows.Forms.BindingManagerBase" />. </param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="P:System.Windows.Forms.BindingContext.Item(System.Object,System.String)">
      <summary>Gets a <see cref="T:System.Windows.Forms.BindingManagerBase" /> that is associated with the specified data source and data member.</summary>
      <returns>The <see cref="T:System.Windows.Forms.BindingManagerBase" /> for the specified data source and data member.</returns>
      <param name="dataSource">The data source associated with a particular <see cref="T:System.Windows.Forms.BindingManagerBase" />. </param>
      <param name="dataMember">A navigation path containing the information that resolves to a specific <see cref="T:System.Windows.Forms.BindingManagerBase" />. </param>
      <exception cref="T:System.Exception">The specified <paramref name="dataMember" /> does not exist within the data source. </exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Windows.Forms.BindingContext.OnCollectionChanged(System.ComponentModel.CollectionChangeEventArgs)">
      <summary>Raises the <see cref="E:System.Windows.Forms.BindingContext.CollectionChanged" /> event.</summary>
      <param name="ccevent">A <see cref="T:System.ComponentModel.CollectionChangeEventArgs" /> that contains the event data.</param>
    </member>
    <member name="M:System.Windows.Forms.BindingContext.Remove(System.Object)">
      <summary>Deletes the <see cref="T:System.Windows.Forms.BindingManagerBase" /> associated with the specified data source.</summary>
      <param name="dataSource">The data source associated with the <see cref="T:System.Windows.Forms.BindingManagerBase" /> to remove. </param>
    </member>
    <member name="M:System.Windows.Forms.BindingContext.RemoveCore(System.Object)">
      <summary>Removes the <see cref="T:System.Windows.Forms.BindingManagerBase" /> associated with the specified data source.</summary>
      <param name="dataSource">The data source associated with the <see cref="T:System.Windows.Forms.BindingManagerBase" /> to remove.</param>
    </member>
    <member name="M:System.Windows.Forms.BindingContext.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
      <summary>Copies the elements of the collection into a specified array, starting at the collection index.</summary>
      <param name="ar">An <see cref="T:System.Array" /> to copy into. </param>
      <param name="index">The collection index to begin copying from. </param>
    </member>
    <member name="P:System.Windows.Forms.BindingContext.System#Collections#ICollection#Count">
      <summary>Gets the total number of <see cref="T:System.Windows.Forms.CurrencyManager" /> objects managed by the <see cref="T:System.Windows.Forms.BindingContext" />.</summary>
      <returns>The number of data sources managed by the <see cref="T:System.Windows.Forms.BindingContext" />.</returns>
    </member>
    <member name="P:System.Windows.Forms.BindingContext.System#Collections#ICollection#IsSynchronized">
      <summary>Gets a value indicating whether the collection is synchronized.</summary>
      <returns>true if the collection is thread safe; otherwise, false.</returns>
    </member>
    <member name="P:System.Windows.Forms.BindingContext.System#Collections#ICollection#SyncRoot">
      <summary>Gets an object to use for synchronization (thread safety).</summary>
      <returns>This property is derived from <see cref="T:System.Collections.ICollection" />, and is overridden to always return null.</returns>
    </member>
    <member name="M:System.Windows.Forms.BindingContext.System#Collections#IEnumerable#GetEnumerator">
      <summary>Gets an enumerator for the collection.</summary>
      <returns>An <see cref="T:System.Collections.IEnumerator" /> for the collection.</returns>
    </member>
    <member name="M:System.Windows.Forms.BindingContext.UpdateBinding(System.Windows.Forms.BindingContext,System.Windows.Forms.Binding)">
      <summary>Associates a <see cref="T:System.Windows.Forms.Binding" /> with a new <see cref="T:System.Windows.Forms.BindingContext" />.</summary>
      <param name="newBindingContext">The new <see cref="T:System.Windows.Forms.BindingContext" /> to associate with the <see cref="T:System.Windows.Forms.Binding" />.</param>
      <param name="binding">The <see cref="T:System.Windows.Forms.Binding" /> to associate with the new <see cref="T:System.Windows.Forms.BindingContext" />.</param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="T:System.Windows.Forms.BindingManagerBase">
      <summary>Manages all <see cref="T:System.Windows.Forms.Binding" /> objects that are bound to the same data source and data member. This class is abstract.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Windows.Forms.BindingManagerBase.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Forms.BindingManagerBase" /> class.</summary>
    </member>
    <member name="M:System.Windows.Forms.BindingManagerBase.AddNew">
      <summary>When overridden in a derived class, adds a new item to the underlying list.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="E:System.Windows.Forms.BindingManagerBase.BindingComplete">
      <summary>Occurs at the completion of a data-binding operation.</summary>
    </member>
    <member name="P:System.Windows.Forms.BindingManagerBase.Bindings">
      <summary>Gets the collection of bindings being managed.</summary>
      <returns>A <see cref="T:System.Windows.Forms.BindingsCollection" /> that contains the <see cref="T:System.Windows.Forms.Binding" /> objects managed by this <see cref="T:System.Windows.Forms.BindingManagerBase" />.</returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Windows.Forms.BindingManagerBase.CancelCurrentEdit">
      <summary>When overridden in a derived class, cancels the current edit.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="P:System.Windows.Forms.BindingManagerBase.Count">
      <summary>When overridden in a derived class, gets the number of rows managed by the <see cref="T:System.Windows.Forms.BindingManagerBase" />.</summary>
      <returns>The number of rows managed by the <see cref="T:System.Windows.Forms.BindingManagerBase" />.</returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="P:System.Windows.Forms.BindingManagerBase.Current">
      <summary>When overridden in a derived class, gets the current object.</summary>
      <returns>An <see cref="T:System.Object" /> that represents the current object.</returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="E:System.Windows.Forms.BindingManagerBase.CurrentChanged">
      <summary>Occurs when the currently bound item changes.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="E:System.Windows.Forms.BindingManagerBase.CurrentItemChanged">
      <summary>Occurs when the state of the currently bound item changes.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="E:System.Windows.Forms.BindingManagerBase.DataError">
      <summary>Occurs when an <see cref="T:System.Exception" /> is silently handled by the <see cref="T:System.Windows.Forms.BindingManagerBase" />. </summary>
    </member>
    <member name="M:System.Windows.Forms.BindingManagerBase.EndCurrentEdit">
      <summary>When overridden in a derived class, ends the current edit.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Windows.Forms.BindingManagerBase.GetItemProperties">
      <summary>When overridden in a derived class, gets the collection of property descriptors for the binding.</summary>
      <returns>A <see cref="T:System.ComponentModel.PropertyDescriptorCollection" /> that represents the property descriptors for the binding.</returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Windows.Forms.BindingManagerBase.GetItemProperties(System.Collections.ArrayList,System.Collections.ArrayList)">
      <summary>Gets the collection of property descriptors for the binding using the specified <see cref="T:System.Collections.ArrayList" />.</summary>
      <returns>A <see cref="T:System.ComponentModel.PropertyDescriptorCollection" /> that represents the property descriptors for the binding.</returns>
      <param name="dataSources">An <see cref="T:System.Collections.ArrayList" /> containing the data sources. </param>
      <param name="listAccessors">An <see cref="T:System.Collections.ArrayList" /> containing the table's bound properties. </param>
    </member>
    <member name="M:System.Windows.Forms.BindingManagerBase.GetItemProperties(System.Type,System.Int32,System.Collections.ArrayList,System.Collections.ArrayList)">
      <summary>Gets the list of properties of the items managed by this <see cref="T:System.Windows.Forms.BindingManagerBase" />.</summary>
      <returns>A <see cref="T:System.ComponentModel.PropertyDescriptorCollection" /> that represents the property descriptors for the binding.</returns>
      <param name="listType">The <see cref="T:System.Type" /> of the bound list. </param>
      <param name="offset">A counter used to recursively call the method. </param>
      <param name="dataSources">An <see cref="T:System.Collections.ArrayList" /> containing the data sources. </param>
      <param name="listAccessors">An <see cref="T:System.Collections.ArrayList" /> containing the table's bound properties. </param>
    </member>
    <member name="M:System.Windows.Forms.BindingManagerBase.GetListName(System.Collections.ArrayList)">
      <summary>When overridden in a derived class, gets the name of the list supplying the data for the binding.</summary>
      <returns>The name of the list supplying the data for the binding.</returns>
      <param name="listAccessors">An <see cref="T:System.Collections.ArrayList" /> containing the table's bound properties. </param>
    </member>
    <member name="P:System.Windows.Forms.BindingManagerBase.IsBindingSuspended">
      <summary>Gets a value indicating whether binding is suspended.</summary>
      <returns>true if binding is suspended; otherwise, false.</returns>
    </member>
    <member name="M:System.Windows.Forms.BindingManagerBase.OnBindingComplete(System.Windows.Forms.BindingCompleteEventArgs)">
      <summary>Raises the <see cref="E:System.Windows.Forms.BindingManagerBase.BindingComplete" /> event. </summary>
      <param name="args">A <see cref="T:System.Windows.Forms.BindingCompleteEventArgs" />  that contains the event data. </param>
    </member>
    <member name="M:System.Windows.Forms.BindingManagerBase.OnCurrentChanged(System.EventArgs)">
      <summary>Raises the <see cref="E:System.Windows.Forms.BindingManagerBase.CurrentChanged" /> event.</summary>
      <param name="e">The <see cref="T:System.EventArgs" /> that contains the event data. </param>
    </member>
    <member name="F:System.Windows.Forms.BindingManagerBase.onCurrentChangedHandler">
      <summary>Specifies the event handler for the <see cref="E:System.Windows.Forms.BindingManagerBase.CurrentChanged" /> event.</summary>
    </member>
    <member name="M:System.Windows.Forms.BindingManagerBase.OnCurrentItemChanged(System.EventArgs)">
      <summary>Raises the <see cref="E:System.Windows.Forms.BindingManagerBase.CurrentItemChanged" /> event.</summary>
      <param name="e">The <see cref="T:System.EventArgs" /> that contains the event data. </param>
    </member>
    <member name="M:System.Windows.Forms.BindingManagerBase.OnDataError(System.Exception)">
      <summary>Raises the <see cref="E:System.Windows.Forms.BindingManagerBase.DataError" /> event.</summary>
      <param name="e">An <see cref="T:System.Exception" /> that caused the <see cref="E:System.Windows.Forms.BindingManagerBase.DataError" /> event to occur.</param>
    </member>
    <member name="F:System.Windows.Forms.BindingManagerBase.onPositionChangedHandler">
      <summary>Specifies the event handler for the <see cref="E:System.Windows.Forms.BindingManagerBase.PositionChanged" /> event.</summary>
    </member>
    <member name="P:System.Windows.Forms.BindingManagerBase.Position">
      <summary>When overridden in a derived class, gets or sets the position in the underlying list that controls bound to this data source point to.</summary>
      <returns>A zero-based index that specifies a position in the underlying list.</returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="E:System.Windows.Forms.BindingManagerBase.PositionChanged">
      <summary>Occurs after the value of the <see cref="P:System.Windows.Forms.BindingManagerBase.Position" /> property has changed.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Windows.Forms.BindingManagerBase.PullData">
      <summary>Pulls data from the data-bound control into the data source, returning no information.</summary>
    </member>
    <member name="M:System.Windows.Forms.BindingManagerBase.PushData">
      <summary>Pushes data from the data source into the data-bound control, returning no information.</summary>
    </member>
    <member name="M:System.Windows.Forms.BindingManagerBase.RemoveAt(System.Int32)">
      <summary>When overridden in a derived class, deletes the row at the specified index from the underlying list.</summary>
      <param name="index">The index of the row to delete. </param>
      <exception cref="T:System.IndexOutOfRangeException">There is no row at the specified <paramref name="index" />. </exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Windows.Forms.BindingManagerBase.ResumeBinding">
      <summary>When overridden in a derived class, resumes data binding.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Windows.Forms.BindingManagerBase.SuspendBinding">
      <summary>When overridden in a derived class, suspends data binding.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Windows.Forms.BindingManagerBase.UpdateIsBinding">
      <summary>When overridden in a derived class, updates the binding.</summary>
    </member>
    <member name="T:System.Windows.Forms.BindingManagerDataErrorEventArgs">
      <summary>Provides data for the <see cref="E:System.Windows.Forms.BindingManagerBase.DataError" /> event. </summary>
    </member>
    <member name="M:System.Windows.Forms.BindingManagerDataErrorEventArgs.#ctor(System.Exception)">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Forms.BindingManagerDataErrorEventArgs" /> class. </summary>
      <param name="exception">The <see cref="T:System.Exception" /> that occurred in the binding process that caused the <see cref="E:System.Windows.Forms.BindingManagerBase.DataError" /> event to be raised.</param>
    </member>
    <member name="P:System.Windows.Forms.BindingManagerDataErrorEventArgs.Exception">
      <summary>Gets the <see cref="T:System.Exception" /> caught in the binding process that caused the <see cref="E:System.Windows.Forms.BindingManagerBase.DataError" /> event to be raised.</summary>
      <returns>The <see cref="T:System.Exception" /> that caused the <see cref="E:System.Windows.Forms.BindingManagerBase.DataError" /> event to be raised. </returns>
    </member>
    <member name="T:System.Windows.Forms.BindingManagerDataErrorEventHandler">
      <summary>Represents the method that will handle the <see cref="E:System.Windows.Forms.BindingManagerBase.DataError" /> event of a <see cref="T:System.Windows.Forms.BindingManagerBase" />.</summary>
      <param name="sender">The source of the event. </param>
      <param name="e">A <see cref="T:System.Windows.Forms.BindingManagerDataErrorEventArgs" /> that contains the event data. </param>
    </member>
    <member name="T:System.Windows.Forms.BindingMemberInfo">
      <summary>Contains information that enables a <see cref="T:System.Windows.Forms.Binding" /> to resolve a data binding to either the property of an object or the property of the current object in a list of objects.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Windows.Forms.BindingMemberInfo.#ctor(System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Forms.BindingMemberInfo" /> class.</summary>
      <param name="dataMember">A navigation path that resolves to either the property of an object or the property of the current object in a list of objects. </param>
    </member>
    <member name="P:System.Windows.Forms.BindingMemberInfo.BindingField">
      <summary>Gets the property name of the data-bound object.</summary>
      <returns>The property name of the data-bound object. This can be an empty string ("").</returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="P:System.Windows.Forms.BindingMemberInfo.BindingMember">
      <summary>Gets the information that is used to specify the property name of the data-bound object.</summary>
      <returns>An empty string (""), a single property name, or a hierarchy of period-delimited property names that resolves to the property name of the final data-bound object.</returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="P:System.Windows.Forms.BindingMemberInfo.BindingPath">
      <summary>Gets the property name, or the period-delimited hierarchy of property names, that comes before the property name of the data-bound object.</summary>
      <returns>The property name, or the period-delimited hierarchy of property names, that comes before the data-bound object property name.</returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Windows.Forms.BindingMemberInfo.Equals(System.Object)">
      <summary>Determines whether the specified object is equal to this <see cref="T:System.Windows.Forms.BindingMemberInfo" />.</summary>
      <returns>true if <paramref name="otherObject" /> is a <see cref="T:System.Windows.Forms.BindingMemberInfo" /> and both <see cref="P:System.Windows.Forms.BindingMemberInfo.BindingMember" /> strings are equal; otherwise false.</returns>
      <param name="otherObject">The object to compare for equality.</param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Windows.Forms.BindingMemberInfo.GetHashCode">
      <summary>Returns the hash code for this <see cref="T:System.Windows.Forms.BindingMemberInfo" />.</summary>
      <returns>The hash code for this <see cref="T:System.Windows.Forms.BindingMemberInfo" />.</returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Windows.Forms.BindingMemberInfo.op_Equality(System.Windows.Forms.BindingMemberInfo,System.Windows.Forms.BindingMemberInfo)">
      <summary>Determines whether two <see cref="T:System.Windows.Forms.BindingMemberInfo" /> objects are equal.</summary>
      <returns>true if the <see cref="P:System.Windows.Forms.BindingMemberInfo.BindingMember" /> strings for <paramref name="a" /> and <paramref name="b" /> are equal; otherwise false.</returns>
      <param name="a">The first <see cref="T:System.Windows.Forms.BindingMemberInfo" /> to compare for equality.</param>
      <param name="b">The second <see cref="T:System.Windows.Forms.BindingMemberInfo" /> to compare for equality.</param>
    </member>
    <member name="M:System.Windows.Forms.BindingMemberInfo.op_Inequality(System.Windows.Forms.BindingMemberInfo,System.Windows.Forms.BindingMemberInfo)">
      <summary>Determines whether two <see cref="T:System.Windows.Forms.BindingMemberInfo" /> objects are not equal.</summary>
      <returns>true if the <see cref="P:System.Windows.Forms.BindingMemberInfo.BindingMember" /> strings for <paramref name="a" /> and <paramref name="b" /> are not equal; otherwise false.</returns>
      <param name="a">The first <see cref="T:System.Windows.Forms.BindingMemberInfo" /> to compare for inequality.</param>
      <param name="b">The second <see cref="T:System.Windows.Forms.BindingMemberInfo" /> to compare for inequality.</param>
    </member>
    <member name="T:System.Windows.Forms.BindingNavigator">
      <summary>Represents the navigation and manipulation user interface (UI) for controls on a form that are bound to data.</summary>
    </member>
    <member name="M:System.Windows.Forms.BindingNavigator.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Forms.BindingNavigator" /> class.</summary>
    </member>
    <member name="M:System.Windows.Forms.BindingNavigator.#ctor(System.Boolean)">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Forms.BindingNavigator" /> class, indicating whether to display the standard navigation user interface (UI).</summary>
      <param name="addStandardItems">true to show the standard navigational UI; otherwise, false.</param>
    </member>
    <member name="M:System.Windows.Forms.BindingNavigator.#ctor(System.ComponentModel.IContainer)">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Forms.BindingNavigator" /> class and adds this new instance to the specified container.</summary>
      <param name="container">The <see cref="T:System.ComponentModel.IContainer" /> to add the new <see cref="T:System.Windows.Forms.BindingNavigator" /> control to.</param>
    </member>
    <member name="M:System.Windows.Forms.BindingNavigator.#ctor(System.Windows.Forms.BindingSource)">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Forms.BindingNavigator" /> class with the specified <see cref="T:System.Windows.Forms.BindingSource" /> as the data source.</summary>
      <param name="bindingSource">The <see cref="T:System.Windows.Forms.BindingSource" /> used as a data source.</param>
    </member>
    <member name="P:System.Windows.Forms.BindingNavigator.AddNewItem">
      <summary>Gets or sets the <see cref="T:System.Windows.Forms.ToolStripItem" /> that represents the Add New button.</summary>
      <returns>A <see cref="T:System.Windows.Forms.ToolStripItem" /> that represents the Add New button for the <see cref="T:System.Windows.Forms.BindingSource" />. The default is null.</returns>
    </member>
    <member name="M:System.Windows.Forms.BindingNavigator.AddStandardItems">
      <summary>Adds the standard set of navigation items to the <see cref="T:System.Windows.Forms.BindingNavigator" /> control.</summary>
    </member>
    <member name="M:System.Windows.Forms.BindingNavigator.BeginInit">
      <summary>Disables updates to the <see cref="T:System.Windows.Forms.ToolStripItem" /> controls of the <see cref="T:System.Windows.Forms.BindingNavigator" /> during the component's initialization.</summary>
    </member>
    <member name="P:System.Windows.Forms.BindingNavigator.BindingSource">
      <summary>Gets or sets the <see cref="T:System.Windows.Forms.BindingSource" /> component that is the source of data.</summary>
      <returns>The <see cref="T:System.Windows.Forms.BindingSource" /> component associated with this <see cref="T:System.Windows.Forms.BindingNavigator" />. The default is null.</returns>
    </member>
    <member name="P:System.Windows.Forms.BindingNavigator.CountItem">
      <summary>Gets or sets the <see cref="T:System.Windows.Forms.ToolStripItem" /> that displays the total number of items in the associated <see cref="T:System.Windows.Forms.BindingSource" />.</summary>
      <returns>A <see cref="T:System.Windows.Forms.ToolStripItem" /> that displays the total number of items in the associated <see cref="T:System.Windows.Forms.BindingSource" />. </returns>
    </member>
    <member name="P:System.Windows.Forms.BindingNavigator.CountItemFormat">
      <summary>Gets or sets a string used to format the information displayed in the <see cref="P:System.Windows.Forms.BindingNavigator.CountItem" /> control. </summary>
      <returns>The format <see cref="T:System.String" /> used to format the item count. The default is the string âof {0}â.</returns>
    </member>
    <member name="P:System.Windows.Forms.BindingNavigator.DeleteItem">
      <summary>Gets or sets the <see cref="T:System.Windows.Forms.ToolStripItem" /> that is associated with the Delete functionality.</summary>
      <returns>A <see cref="T:System.Windows.Forms.ToolStripItem" /> that represents the Delete button for the <see cref="T:System.Windows.Forms.BindingSource" />.</returns>
    </member>
    <member name="M:System.Windows.Forms.BindingNavigator.Dispose(System.Boolean)">
      <summary>Releases the unmanaged resources used by the <see cref="T:System.Windows.Forms.BindingNavigator" /> and optionally releases the managed resources. </summary>
      <param name="disposing">true to release both managed and unmanaged resources; false to release only unmanaged resources. </param>
    </member>
    <member name="M:System.Windows.Forms.BindingNavigator.EndInit">
      <summary>Enables updates to the <see cref="T:System.Windows.Forms.ToolStripItem" /> controls of the <see cref="T:System.Windows.Forms.BindingNavigator" /> after the component's initialization has concluded.</summary>
    </member>
    <member name="P:System.Windows.Forms.BindingNavigator.MoveFirstItem">
      <summary>Gets or sets the <see cref="T:System.Windows.Forms.ToolStripItem" /> that is associated with the Move First functionality.</summary>
      <returns>A <see cref="T:System.Windows.Forms.ToolStripItem" /> that represents the Move First button for the <see cref="T:System.Windows.Forms.BindingSource" />.</returns>
    </member>
    <member name="P:System.Windows.Forms.BindingNavigator.MoveLastItem">
      <summary>Gets or sets the <see cref="T:System.Windows.Forms.ToolStripItem" /> that is associated with the Move Last functionality.</summary>
      <returns>A <see cref="T:System.Windows.Forms.ToolStripItem" /> that represents the Move Last button for the <see cref="T:System.Windows.Forms.BindingSource" />.</returns>
    </member>
    <member name="P:System.Windows.Forms.BindingNavigator.MoveNextItem">
      <summary>Gets or sets the <see cref="T:System.Windows.Forms.ToolStripItem" /> that is associated with the Move Next functionality.</summary>
      <returns>A <see cref="T:System.Windows.Forms.ToolStripItem" /> that represents the Move Next button for the <see cref="T:System.Windows.Forms.BindingSource" />.</returns>
    </member>
    <member name="P:System.Windows.Forms.BindingNavigator.MovePreviousItem">
      <summary>Gets or sets the <see cref="T:System.Windows.Forms.ToolStripItem" /> that is associated with the Move Previous functionality.</summary>
      <returns>A <see cref="T:System.Windows.Forms.ToolStripItem" /> that represents the Move Previous button for the <see cref="T:System.Windows.Forms.BindingSource" />.</returns>
    </member>
    <member name="M:System.Windows.Forms.BindingNavigator.OnRefreshItems">
      <summary>Raises the <see cref="E:System.Windows.Forms.BindingNavigator.RefreshItems" /> event.</summary>
    </member>
    <member name="P:System.Windows.Forms.BindingNavigator.PositionItem">
      <summary>Gets or sets the <see cref="T:System.Windows.Forms.ToolStripItem" /> that displays the current position within the <see cref="T:System.Windows.Forms.BindingSource" />.</summary>
      <returns>The <see cref="T:System.Windows.Forms.ToolStripItem" /> that displays the current position.</returns>
    </member>
    <member name="E:System.Windows.Forms.BindingNavigator.RefreshItems">
      <summary>Occurs when the state of the navigational user interface (UI) needs to be refreshed to reflect the current state of the underlying data.</summary>
    </member>
    <member name="M:System.Windows.Forms.BindingNavigator.RefreshItemsCore">
      <summary>Refreshes the state of the standard items to reflect the current state of the data.</summary>
    </member>
    <member name="M:System.Windows.Forms.BindingNavigator.Validate">
      <summary>Causes form validation to occur and returns whether validation was successful.</summary>
      <returns>true if validation was successful and focus can shift to the <see cref="T:System.Windows.Forms.BindingNavigator" />; otherwise, false.</returns>
    </member>
    <member name="T:System.Windows.Forms.BindingsCollection">
      <summary>Represents a collection of <see cref="T:System.Windows.Forms.Binding" /> objects for a control.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Windows.Forms.BindingsCollection.Add(System.Windows.Forms.Binding)">
      <summary>Adds the specified binding to the collection.</summary>
      <param name="binding">The <see cref="T:System.Windows.Forms.Binding" /> to add to the collection. </param>
    </member>
    <member name="M:System.Windows.Forms.BindingsCollection.AddCore(System.Windows.Forms.Binding)">
      <summary>Adds a <see cref="T:System.Windows.Forms.Binding" /> to the collection.</summary>
      <param name="dataBinding">The <see cref="T:System.Windows.Forms.Binding" /> to add to the collection.</param>
      <exception cref="T:System.ArgumentNullException">The <paramref name="dataBinding" /> argument was null. </exception>
    </member>
    <member name="M:System.Windows.Forms.BindingsCollection.Clear">
      <summary>Clears the collection of binding objects.</summary>
    </member>
    <member name="M:System.Windows.Forms.BindingsCollection.ClearCore">
      <summary>Clears the collection of any members.</summary>
    </member>
    <member name="E:System.Windows.Forms.BindingsCollection.CollectionChanged">
      <summary>Occurs when the collection has changed.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="E:System.Windows.Forms.BindingsCollection.CollectionChanging">
      <summary>Occurs when the collection is about to change.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="P:System.Windows.Forms.BindingsCollection.Count">
      <summary>Gets the total number of bindings in the collection.</summary>
      <returns>The total number of bindings in the collection.</returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="P:System.Windows.Forms.BindingsCollection.Item(System.Int32)">
      <summary>Gets the <see cref="T:System.Windows.Forms.Binding" /> at the specified index.</summary>
      <returns>The <see cref="T:System.Windows.Forms.Binding" /> at the specified index.</returns>
      <param name="index">The index of the <see cref="T:System.Windows.Forms.Binding" /> to find. </param>
      <exception cref="T:System.IndexOutOfRangeException">The collection doesn't contain an item at the specified index. </exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="P:System.Windows.Forms.BindingsCollection.List">
      <summary>Gets the bindings in the collection as an object.</summary>
      <returns>An <see cref="T:System.Collections.ArrayList" /> containing all of the collection members.</returns>
    </member>
    <member name="M:System.Windows.Forms.BindingsCollection.OnCollectionChanged(System.ComponentModel.CollectionChangeEventArgs)">
      <summary>Raises the <see cref="E:System.Windows.Forms.BindingsCollection.CollectionChanged" /> event.</summary>
      <param name="ccevent">A <see cref="T:System.ComponentModel.CollectionChangeEventArgs" /> that contains the event data. </param>
    </member>
    <member name="M:System.Windows.Forms.BindingsCollection.OnCollectionChanging(System.ComponentModel.CollectionChangeEventArgs)">
      <summary>Raises the <see cref="E:System.Windows.Forms.BindingsCollection.CollectionChanging" /> event. </summary>
      <param name="e">A <see cref="T:System.ComponentModel.CollectionChangeEventArgs" /> that contains event data.</param>
    </member>
    <member name="M:System.Windows.Forms.BindingsCollection.Remove(System.Windows.Forms.Binding)">
      <summary>Deletes the specified binding from the collection.</summary>
      <param name="binding">The Binding to remove from the collection. </param>
    </member>
    <member name="M:System.Windows.Forms.BindingsCollection.RemoveAt(System.Int32)">
      <summary>Deletes the binding from the collection at the specified index.</summary>
      <param name="index">The index of the <see cref="T:System.Windows.Forms.Binding" /> to remove. </param>
    </member>
    <member name="M:System.Windows.Forms.BindingsCollection.RemoveCore(System.Windows.Forms.Binding)">
      <summary>Removes the specified <see cref="T:System.Windows.Forms.Binding" /> from the collection.</summary>
      <param name="dataBinding">The <see cref="T:System.Windows.Forms.Binding" /> to remove. </param>
    </member>
    <member name="M:System.Windows.Forms.BindingsCollection.ShouldSerializeMyAll">
      <summary>Gets a value that indicates whether the collection should be serialized.</summary>
      <returns>true if the collection count is greater than zero; otherwise, false.</returns>
    </member>
    <member name="T:System.Windows.Forms.BindingSource">
      <summary>Encapsulates the data source for a form.</summary>
    </member>
    <member name="M:System.Windows.Forms.BindingSource.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Forms.BindingSource" /> class to the default property values.</summary>
    </member>
    <member name="M:System.Windows.Forms.BindingSource.#ctor(System.ComponentModel.IContainer)">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Forms.BindingSource" /> class and adds the <see cref="T:System.Windows.Forms.BindingSource" /> to the specified container.</summary>
      <param name="container">The <see cref="T:System.ComponentModel.IContainer" /> to add the current <see cref="T:System.Windows.Forms.BindingSource" /> to.</param>
    </member>
    <member name="M:System.Windows.Forms.BindingSource.#ctor(System.Object,System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Forms.BindingSource" /> class with the specified data source and data member.</summary>
      <param name="dataSource">The data source for the <see cref="T:System.Windows.Forms.BindingSource" />.</param>
      <param name="dataMember">The specific column or list name within the data source to bind to.</param>
    </member>
    <member name="M:System.Windows.Forms.BindingSource.Add(System.Object)">
      <summary>Adds an existing item to the internal list.</summary>
      <returns>The zero-based index at which <paramref name="value" /> was added to the underlying list represented by the <see cref="P:System.Windows.Forms.BindingSource.List" /> property. </returns>
      <param name="value">An <see cref="T:System.Object" /> to be added to the internal list.</param>
      <exception cref="T:System.InvalidOperationException">
        <paramref name="value" /> differs in type from the existing items in the underlying list.</exception>
    </member>
    <member name="E:System.Windows.Forms.BindingSource.AddingNew">
      <summary>Occurs before an item is added to the underlying list.</summary>
      <exception cref="T:System.InvalidOperationException">
        <see cref="P:System.ComponentModel.AddingNewEventArgs.NewObject" /> is not the same type as the type contained in the list.</exception>
    </member>
    <member name="M:System.Windows.Forms.BindingSource.AddNew">
      <summary>Adds a new item to the underlying list.</summary>
      <returns>The <see cref="T:System.Object" /> that was created and added to the list.</returns>
      <exception cref="T:System.InvalidOperationException">The <see cref="P:System.Windows.Forms.BindingSource.AllowNew" /> property is set to false. -or-A public default constructor could not be found for the current item type.</exception>
    </member>
    <member name="P:System.Windows.Forms.BindingSource.AllowEdit">
      <summary>Gets a value indicating whether items in the underlying list can be edited.</summary>
      <returns>true to indicate list items can be edited; otherwise, false.</returns>
    </member>
    <member name="P:System.Windows.Forms.BindingSource.AllowNew">
      <summary>Gets or sets a value indicating whether the <see cref="M:System.Windows.Forms.BindingSource.AddNew" /> method can be used to add items to the list.</summary>
      <returns>true if <see cref="M:System.Windows.Forms.BindingSource.AddNew" /> can be used to add items to the list; otherwise, false.</returns>
      <exception cref="T:System.InvalidOperationException">This property is set to true when the underlying list represented by the <see cref="P:System.Windows.Forms.BindingSource.List" /> property has a fixed size or is read-only.</exception>
      <exception cref="T:System.MissingMethodException">The property is set to true and the <see cref="E:System.Windows.Forms.BindingSource.AddingNew" /> event is not handled when the underlying list type does not have a default constructor.</exception>
    </member>
    <member name="P:System.Windows.Forms.BindingSource.AllowRemove">
      <summary>Gets a value indicating whether items can be removed from the underlying list.</summary>
      <returns>true to indicate list items can be removed from the list; otherwise, false.</returns>
    </member>
    <member name="M:System.Windows.Forms.BindingSource.ApplySort(System.ComponentModel.ListSortDescriptionCollection)">
      <summary>Sorts the data source with the specified sort descriptions.</summary>
      <param name="sorts">A <see cref="T:System.ComponentModel.ListSortDescriptionCollection" /> containing the sort descriptions to apply to the data source.</param>
      <exception cref="T:System.NotSupportedException">The data source is not an <see cref="T:System.ComponentModel.IBindingListView" />.</exception>
    </member>
    <member name="M:System.Windows.Forms.BindingSource.ApplySort(System.ComponentModel.PropertyDescriptor,System.ComponentModel.ListSortDirection)">
      <summary>Sorts the data source using the specified property descriptor and sort direction.</summary>
      <param name="property">A <see cref="T:System.ComponentModel.PropertyDescriptor" /> that describes the property by which to sort the data source.</param>
      <param name="sort">A <see cref="T:System.ComponentModel.ListSortDirection" /> indicating how the list should be sorted.</param>
      <exception cref="T:System.NotSupportedException">The data source is not an <see cref="T:System.ComponentModel.IBindingList" />.</exception>
    </member>
    <member name="E:System.Windows.Forms.BindingSource.BindingComplete">
      <summary>Occurs when all the clients have been bound to this <see cref="T:System.Windows.Forms.BindingSource" />.</summary>
    </member>
    <member name="M:System.Windows.Forms.BindingSource.CancelEdit">
      <summary>Cancels the current edit operation.</summary>
    </member>
    <member name="M:System.Windows.Forms.BindingSource.Clear">
      <summary>Removes all elements from the list.</summary>
    </member>
    <member name="M:System.Windows.Forms.BindingSource.Contains(System.Object)">
      <summary>Determines whether an object is an item in the list.</summary>
      <returns>true if the <paramref name="value" /> parameter is found in the <see cref="P:System.Windows.Forms.BindingSource.List" />; otherwise, false.</returns>
      <param name="value">The <see cref="T:System.Object" /> to locate in the underlying list represented by the <see cref="P:System.Windows.Forms.BindingSource.List" /> property. The value can be null. </param>
    </member>
    <member name="M:System.Windows.Forms.BindingSource.CopyTo(System.Array,System.Int32)">
      <summary>Copies the contents of the <see cref="P:System.Windows.Forms.BindingSource.List" /> to the specified array, starting at the specified index value.</summary>
      <param name="arr">The destination array.</param>
      <param name="index">The index in the destination array at which to start the copy operation.</param>
    </member>
    <member name="P:System.Windows.Forms.BindingSource.Count">
      <summary>Gets the total number of items in the underlying list.</summary>
      <returns>The total number of items in the underlying list.</returns>
    </member>
    <member name="P:System.Windows.Forms.BindingSource.CurrencyManager">
      <summary>Gets the currency manager associated with this <see cref="T:System.Windows.Forms.BindingSource" />.</summary>
      <returns>The <see cref="T:System.Windows.Forms.CurrencyManager" /> associated with this <see cref="T:System.Windows.Forms.BindingSource" />.</returns>
    </member>
    <member name="P:System.Windows.Forms.BindingSource.Current">
      <summary>Gets the current item in the list.</summary>
      <returns>An <see cref="T:System.Object" /> that represents the current item in the underlying list represented by the <see cref="P:System.Windows.Forms.BindingSource.List" /> property, or null if the list has no items.</returns>
    </member>
    <member name="E:System.Windows.Forms.BindingSource.CurrentChanged">
      <summary>Occurs when the currently bound item changes.</summary>
    </member>
    <member name="E:System.Windows.Forms.BindingSource.CurrentItemChanged">
      <summary>Occurs when a property value of the <see cref="P:System.Windows.Forms.BindingSource.Current" /> property has changed.</summary>
    </member>
    <member name="E:System.Windows.Forms.BindingSource.DataError">
      <summary>Occurs when a currency-related exception is silently handled by the <see cref="T:System.Windows.Forms.BindingSource" />.</summary>
    </member>
    <member name="P:System.Windows.Forms.BindingSource.DataMember">
      <summary>Gets or sets the specific list in the data source to which the connector currently binds to.</summary>
      <returns>The name of a list (or row) in the <see cref="P:System.Windows.Forms.BindingSource.DataSource" />. The default is an empty string ("").</returns>
    </member>
    <member name="E:System.Windows.Forms.BindingSource.DataMemberChanged">
      <summary>Occurs when the <see cref="P:System.Windows.Forms.BindingSource.DataMember" /> property value has changed.</summary>
    </member>
    <member name="P:System.Windows.Forms.BindingSource.DataSource">
      <summary>Gets or sets the data source that the connector binds to.</summary>
      <returns>An <see cref="T:System.Object" /> that acts as a data source. The default is null.</returns>
    </member>
    <member name="E:System.Windows.Forms.BindingSource.DataSourceChanged">
      <summary>Occurs when the <see cref="P:System.Windows.Forms.BindingSource.DataSource" /> property value has changed.</summary>
    </member>
    <member name="M:System.Windows.Forms.BindingSource.Dispose(System.Boolean)">
      <summary>Releases the unmanaged resources used by the <see cref="T:System.Windows.Forms.BindingSource" /> and optionally releases the managed resources. </summary>
      <param name="disposing">true to release both managed and unmanaged resources; false to release only unmanaged resources. </param>
    </member>
    <member name="M:System.Windows.Forms.BindingSource.EndEdit">
      <summary>Applies pending changes to the underlying data source.</summary>
    </member>
    <member name="P:System.Windows.Forms.BindingSource.Filter">
      <summary>Gets or sets the expression used to filter which rows are viewed.</summary>
      <returns>A string that specifies how rows are to be filtered. The default is null.</returns>
    </member>
    <member name="M:System.Windows.Forms.BindingSource.Find(System.ComponentModel.PropertyDescriptor,System.Object)">
      <summary>Searches for the index of the item that has the given property descriptor.</summary>
      <returns>The zero-based index of the item that has the given value for <see cref="T:System.ComponentModel.PropertyDescriptor" />.</returns>
      <param name="prop">The <see cref="T:System.ComponentModel.PropertyDescriptor" /> to search for. </param>
      <param name="key">The value of <paramref name="prop" /> to match. </param>
      <exception cref="T:System.NotSupportedException">The underlying list is not of type <see cref="T:System.ComponentModel.IBindingList" />.</exception>
    </member>
    <member name="M:System.Windows.Forms.BindingSource.Find(System.String,System.Object)">
      <summary>Returns the index of the item in the list with the specified property name and value.</summary>
      <returns>The zero-based index of the item with the specified property name and value. </returns>
      <param name="propertyName">The name of the property to search for.</param>
      <param name="key">The value of the item with the specified <paramref name="propertyName" /> to find.</param>
      <exception cref="T:System.InvalidOperationException">The underlying list is not a <see cref="T:System.ComponentModel.IBindingList" /> with searching functionality implemented.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="propertyName" /> does not match a property in the list.</exception>
    </member>
    <member name="M:System.Windows.Forms.BindingSource.GetEnumerator">
      <summary>Retrieves an enumerator for the <see cref="P:System.Windows.Forms.BindingSource.List" />.</summary>
      <returns>An <see cref="T:System.Collections.IEnumerator" /> for the <see cref="P:System.Windows.Forms.BindingSource.List" />. </returns>
    </member>
    <member name="M:System.Windows.Forms.BindingSource.GetItemProperties(System.ComponentModel.PropertyDescriptor[])">
      <summary>Retrieves an array of <see cref="T:System.ComponentModel.PropertyDescriptor" /> objects representing the bindable properties of the data source list type.</summary>
      <returns>An array of <see cref="T:System.ComponentModel.PropertyDescriptor" /> objects that represents the properties on this list type used to bind data.</returns>
      <param name="listAccessors">An array of <see cref="T:System.ComponentModel.PropertyDescriptor" /> objects to find in the list as bindable.</param>
    </member>
    <member name="M:System.Windows.Forms.BindingSource.GetListName(System.ComponentModel.PropertyDescriptor[])">
      <summary>Gets the name of the list supplying data for the binding.</summary>
      <returns>The name of the list supplying the data for binding.</returns>
      <param name="listAccessors">An array of <see cref="T:System.ComponentModel.PropertyDescriptor" /> objects to find in the list as bindable.</param>
    </member>
    <member name="M:System.Windows.Forms.BindingSource.GetRelatedCurrencyManager(System.String)">
      <summary>Gets the related currency manager for the specified data member.</summary>
      <returns>The related <see cref="T:System.Windows.Forms.CurrencyManager" /> for the specified data member.</returns>
      <param name="dataMember">The name of column or list, within the data source to retrieve the currency manager for.</param>
    </member>
    <member name="M:System.Windows.Forms.BindingSource.IndexOf(System.Object)">
      <summary>Searches for the specified object and returns the index of the first occurrence within the entire list.</summary>
      <returns>The zero-based index of the first occurrence of the <paramref name="value" /> parameter; otherwise, -1 if <paramref name="value" /> is not in the list.</returns>
      <param name="value">The <see cref="T:System.Object" /> to locate in the underlying list represented by the <see cref="P:System.Windows.Forms.BindingSource.List" /> property. The value can be null. </param>
    </member>
    <member name="M:System.Windows.Forms.BindingSource.Insert(System.Int32,System.Object)">
      <summary>Inserts an item into the list at the specified index.</summary>
      <param name="index">The zero-based index at which <paramref name="value" /> should be inserted. </param>
      <param name="value">The <see cref="T:System.Object" /> to insert. The value can be null. </param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> is less than zero or greater than <see cref="P:System.Windows.Forms.BindingSource.Count" />.</exception>
      <exception cref="T:System.NotSupportedException">The list is read-only or has a fixed size.</exception>
    </member>
    <member name="P:System.Windows.Forms.BindingSource.IsBindingSuspended">
      <summary>Gets a value indicating whether the list binding is suspended.</summary>
      <returns>true to indicate the binding is suspended; otherwise, false. </returns>
    </member>
    <member name="P:System.Windows.Forms.BindingSource.IsFixedSize">
      <summary>Gets a value indicating whether the underlying list has a fixed size.</summary>
      <returns>true if the underlying list has a fixed size; otherwise, false.</returns>
    </member>
    <member name="P:System.Windows.Forms.BindingSource.IsReadOnly">
      <summary>Gets a value indicating whether the underlying list is read-only.</summary>
      <returns>true if the list is read-only; otherwise, false.</returns>
    </member>
    <member name="P:System.Windows.Forms.BindingSource.IsSorted">
      <summary>Gets a value indicating whether the items in the underlying list are sorted. </summary>
      <returns>true if the list is an <see cref="T:System.ComponentModel.IBindingList" /> and is sorted; otherwise, false. </returns>
    </member>
    <member name="P:System.Windows.Forms.BindingSource.IsSynchronized">
      <summary>Gets a value indicating whether access to the collection is synchronized (thread safe).</summary>
      <returns>true to indicate the list is synchronized; otherwise, false.</returns>
    </member>
    <member name="P:System.Windows.Forms.BindingSource.Item(System.Int32)">
      <summary>Gets or sets the list element at the specified index.</summary>
      <returns>The element at the specified index.</returns>
      <param name="index">The zero-based index of the element to retrieve.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> is less than zero or is equal to or greater than <see cref="P:System.Windows.Forms.BindingSource.Count" />.</exception>
    </member>
    <member name="P:System.Windows.Forms.BindingSource.List">
      <summary>Gets the list that the connector is bound to.</summary>
      <returns>An <see cref="T:System.Collections.IList" /> that represents the list, or null if there is no underlying list associated with this <see cref="T:System.Windows.Forms.BindingSource" />.</returns>
    </member>
    <member name="E:System.Windows.Forms.BindingSource.ListChanged">
      <summary>Occurs when the underlying list changes or an item in the list changes.</summary>
    </member>
    <member name="M:System.Windows.Forms.BindingSource.MoveFirst">
      <summary>Moves to the first item in the list.</summary>
    </member>
    <member name="M:System.Windows.Forms.BindingSource.MoveLast">
      <summary>Moves to the last item in the list.</summary>
    </member>
    <member name="M:System.Windows.Forms.BindingSource.MoveNext">
      <summary>Moves to the next item in the list.</summary>
    </member>
    <member name="M:System.Windows.Forms.BindingSource.MovePrevious">
      <summary>Moves to the previous item in the list.</summary>
    </member>
    <member name="M:System.Windows.Forms.BindingSource.OnAddingNew(System.ComponentModel.AddingNewEventArgs)">
      <summary>Raises the <see cref="E:System.Windows.Forms.BindingSource.AddingNew" /> event.</summary>
      <param name="e">An <see cref="T:System.EventArgs" /> that contains the event data. </param>
    </member>
    <member name="M:System.Windows.Forms.BindingSource.OnBindingComplete(System.Windows.Forms.BindingCompleteEventArgs)">
      <summary>Raises the <see cref="E:System.Windows.Forms.BindingSource.BindingComplete" /> event. </summary>
      <param name="e">A <see cref="T:System.Windows.Forms.BindingCompleteEventArgs" />  that contains the event data. </param>
    </member>
    <member name="M:System.Windows.Forms.BindingSource.OnCurrentChanged(System.EventArgs)">
      <summary>Raises the <see cref="E:System.Windows.Forms.BindingSource.CurrentChanged" /> event.</summary>
      <param name="e">An <see cref="T:System.EventArgs" /> that contains the event data.</param>
    </member>
    <member name="M:System.Windows.Forms.BindingSource.OnCurrentItemChanged(System.EventArgs)">
      <summary>Raises the <see cref="E:System.Windows.Forms.BindingSource.CurrentItemChanged" /> event.</summary>
      <param name="e">An <see cref="T:System.EventArgs" /> that contains the event data.</param>
    </member>
    <member name="M:System.Windows.Forms.BindingSource.OnDataError(System.Windows.Forms.BindingManagerDataErrorEventArgs)">
      <summary>Raises the <see cref="E:System.Windows.Forms.BindingSource.DataError" /> event.</summary>
      <param name="e">A <see cref="T:System.Windows.Forms.BindingManagerDataErrorEventArgs" /> that contains the event data. </param>
    </member>
    <member name="M:System.Windows.Forms.BindingSource.OnDataMemberChanged(System.EventArgs)">
      <summary>Raises the <see cref="E:System.Windows.Forms.BindingSource.DataMemberChanged" /> event.</summary>
      <param name="e">An <see cref="T:System.EventArgs" /> that contains the event data.</param>
    </member>
    <member name="M:System.Windows.Forms.BindingSource.OnDataSourceChanged(System.EventArgs)">
      <summary>Raises the <see cref="E:System.Windows.Forms.BindingSource.DataSourceChanged" /> event.</summary>
      <param name="e">An <see cref="T:System.EventArgs" /> that contains the event data.</param>
    </member>
    <member name="M:System.Windows.Forms.BindingSource.OnListChanged(System.ComponentModel.ListChangedEventArgs)">
      <summary>Raises the <see cref="E:System.Windows.Forms.BindingSource.ListChanged" /> event.</summary>
      <param name="e">An <see cref="T:System.EventArgs" /> that contains the event data.</param>
    </member>
    <member name="M:System.Windows.Forms.BindingSource.OnPositionChanged(System.EventArgs)">
      <summary>Raises the <see cref="E:System.Windows.Forms.BindingSource.PositionChanged" /> event.</summary>
      <param name="e">A <see cref="T:System.ComponentModel.ListChangedEventArgs" /> that contains the event data.</param>
    </member>
    <member name="P:System.Windows.Forms.BindingSource.Position">
      <summary>Gets or sets the index of the current item in the underlying list.</summary>
      <returns>A zero-based index that specifies the position of the current item in the underlying list.</returns>
    </member>
    <member name="E:System.Windows.Forms.BindingSource.PositionChanged">
      <summary>Occurs after the value of the <see cref="P:System.Windows.Forms.BindingSource.Position" /> property has changed.</summary>
    </member>
    <member name="P:System.Windows.Forms.BindingSource.RaiseListChangedEvents">
      <summary>Gets or sets a value indicating whether <see cref="E:System.Windows.Forms.BindingSource.ListChanged" /> events should be raised.</summary>
      <returns>true if <see cref="E:System.Windows.Forms.BindingSource.ListChanged" /> events should be raised; otherwise, false. The default is true.</returns>
    </member>
    <member name="M:System.Windows.Forms.BindingSource.Remove(System.Object)">
      <summary>Removes the specified item from the list.</summary>
      <param name="value">The item to remove from the underlying list represented by the <see cref="P:System.Windows.Forms.BindingSource.List" /> property.</param>
      <exception cref="T:System.NotSupportedException">The underlying list has a fixed size or is read-only. </exception>
    </member>
    <member name="M:System.Windows.Forms.BindingSource.RemoveAt(System.Int32)">
      <summary>Removes the item at the specified index in the list.</summary>
      <param name="index">The zero-based index of the item to remove. </param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> is less than zero or greater than the value of the <see cref="P:System.Windows.Forms.BindingSource.Count" /> property.</exception>
      <exception cref="T:System.NotSupportedException">The underlying list represented by the <see cref="P:System.Windows.Forms.BindingSource.List" /> property is read-only or has a fixed size.</exception>
    </member>
    <member name="M:System.Windows.Forms.BindingSource.RemoveCurrent">
      <summary>Removes the current item from the list.</summary>
      <exception cref="T:System.InvalidOperationException">The <see cref="P:System.Windows.Forms.BindingSource.AllowRemove" /> property is false.-or-<see cref="P:System.Windows.Forms.BindingSource.Position" /> is less than zero or greater than <see cref="P:System.Windows.Forms.BindingSource.Count" />.</exception>
      <exception cref="T:System.NotSupportedException">The underlying list represented by the <see cref="P:System.Windows.Forms.BindingSource.List" /> property is read-only or has a fixed size.</exception>
    </member>
    <member name="M:System.Windows.Forms.BindingSource.RemoveFilter">
      <summary>Removes the filter associated with the <see cref="T:System.Windows.Forms.BindingSource" />.</summary>
      <exception cref="T:System.NotSupportedException">The underlying list does not support filtering.</exception>
    </member>
    <member name="M:System.Windows.Forms.BindingSource.RemoveSort">
      <summary>Removes the sort associated with the <see cref="T:System.Windows.Forms.BindingSource" />.</summary>
      <exception cref="T:System.NotSupportedException">The underlying list does not support sorting.</exception>
    </member>
    <member name="M:System.Windows.Forms.BindingSource.ResetAllowNew">
      <summary>Reinitializes the <see cref="P:System.Windows.Forms.BindingSource.AllowNew" /> property.</summary>
    </member>
    <member name="M:System.Windows.Forms.BindingSource.ResetBindings(System.Boolean)">
      <summary>Causes a control bound to the <see cref="T:System.Windows.Forms.BindingSource" /> to reread all the items in the list and refresh their displayed values. </summary>
      <param name="metadataChanged">true if the data schema has changed; false if only values have changed.</param>
    </member>
    <member name="M:System.Windows.Forms.BindingSource.ResetCurrentItem">
      <summary>Causes a control bound to the <see cref="T:System.Windows.Forms.BindingSource" /> to reread the currently selected item and refresh its displayed value.</summary>
    </member>
    <member name="M:System.Windows.Forms.BindingSource.ResetItem(System.Int32)">
      <summary>Causes a control bound to the <see cref="T:System.Windows.Forms.BindingSource" /> to reread the item at the specified index, and refresh its displayed value. </summary>
      <param name="itemIndex">The zero-based index of the item that has changed.</param>
    </member>
    <member name="M:System.Windows.Forms.BindingSource.ResumeBinding">
      <summary>Resumes data binding.</summary>
    </member>
    <member name="P:System.Windows.Forms.BindingSource.Sort">
      <summary>Gets or sets the column names used for sorting, and the sort order for viewing the rows in the data source.</summary>
      <returns>A case-sensitive string containing the column name followed by "ASC" (for ascending) or "DESC" (for descending). The default is null.</returns>
    </member>
    <member name="P:System.Windows.Forms.BindingSource.SortDescriptions">
      <summary>Gets the collection of sort descriptions applied to the data source.</summary>
      <returns>If the data source is an <see cref="T:System.ComponentModel.IBindingListView" />, a <see cref="T:System.ComponentModel.ListSortDescriptionCollection" /> that contains the sort descriptions applied to the list; otherwise, null.</returns>
    </member>
    <member name="P:System.Windows.Forms.BindingSource.SortDirection">
      <summary>Gets the direction the items in the list are sorted.</summary>
      <returns>One of the <see cref="T:System.ComponentModel.ListSortDirection" /> values indicating the direction the list is sorted.</returns>
    </member>
    <member name="P:System.Windows.Forms.BindingSource.SortProperty">
      <summary>Gets the <see cref="T:System.ComponentModel.PropertyDescriptor" /> that is being used for sorting the list.</summary>
      <returns>If the list is an <see cref="T:System.ComponentModel.IBindingList" />, the <see cref="T:System.ComponentModel.PropertyDescriptor" /> that is being used for sorting; otherwise, null.</returns>
    </member>
    <member name="P:System.Windows.Forms.BindingSource.SupportsAdvancedSorting">
      <summary>Gets a value indicating whether the data source supports multi-column sorting.</summary>
      <returns>true if the list is an <see cref="T:System.ComponentModel.IBindingListView" /> and supports multi-column sorting; otherwise, false. </returns>
    </member>
    <member name="P:System.Windows.Forms.BindingSource.SupportsChangeNotification">
      <summary>Gets a value indicating whether the data source supports change notification.</summary>
      <returns>true in all cases.</returns>
    </member>
    <member name="P:System.Windows.Forms.BindingSource.SupportsFiltering">
      <summary>Gets a value indicating whether the data source supports filtering.</summary>
      <returns>true if the list is an <see cref="T:System.ComponentModel.IBindingListView" /> and supports filtering; otherwise, false.</returns>
    </member>
    <member name="P:System.Windows.Forms.BindingSource.SupportsSearching">
      <summary>Gets a value indicating whether the data source supports searching with the <see cref="M:System.Windows.Forms.BindingSource.Find(System.ComponentModel.PropertyDescriptor,System.Object)" /> method.</summary>
      <returns>true if the list is a <see cref="T:System.ComponentModel.IBindingList" /> and supports the searching with the <see cref="Overload:System.Windows.Forms.BindingSource.Find" /> method; otherwise, false.</returns>
    </member>
    <member name="P:System.Windows.Forms.BindingSource.SupportsSorting">
      <summary>Gets a value indicating whether the data source supports sorting.</summary>
      <returns>true if the data source is an <see cref="T:System.ComponentModel.IBindingList" /> and supports sorting; otherwise, false.</returns>
    </member>
    <member name="M:System.Windows.Forms.BindingSource.SuspendBinding">
      <summary>Suspends data binding to prevent changes from updating the bound data source.</summary>
    </member>
    <member name="P:System.Windows.Forms.BindingSource.SyncRoot">
      <summary>Gets an object that can be used to synchronize access to the underlying list.</summary>
      <returns>An object that can be used to synchronize access to the underlying list.</returns>
    </member>
    <member name="M:System.Windows.Forms.BindingSource.System#ComponentModel#IBindingList#AddIndex(System.ComponentModel.PropertyDescriptor)">
      <summary>Adds the <see cref="T:System.ComponentModel.PropertyDescriptor" /> to the indexes used for searching.</summary>
      <param name="property">The <see cref="T:System.ComponentModel.PropertyDescriptor" /> to add to the indexes used for searching. </param>
      <exception cref="T:System.NotSupportedException">The underlying list is not an <see cref="T:System.ComponentModel.IBindingList" />.</exception>
    </member>
    <member name="M:System.Windows.Forms.BindingSource.System#ComponentModel#IBindingList#RemoveIndex(System.ComponentModel.PropertyDescriptor)">
      <summary>Removes the <see cref="T:System.ComponentModel.PropertyDescriptor" /> from the indexes used for searching.</summary>
      <param name="prop">The <see cref="T:System.ComponentModel.PropertyDescriptor" /> to remove from the indexes used for searching.  </param>
    </member>
    <member name="M:System.Windows.Forms.BindingSource.System#ComponentModel#ICancelAddNew#CancelNew(System.Int32)">
      <summary>Discards a pending new item from the collection.</summary>
      <param name="position">The index of the item that was added to the collection. </param>
    </member>
    <member name="M:System.Windows.Forms.BindingSource.System#ComponentModel#ICancelAddNew#EndNew(System.Int32)">
      <summary>Commits a pending new item to the collection.</summary>
      <param name="position">The index of the item that was added to the collection. </param>
    </member>
    <member name="M:System.Windows.Forms.BindingSource.System#ComponentModel#ISupportInitialize#BeginInit">
      <summary>Signals the <see cref="T:System.Windows.Forms.BindingSource" /> that initialization is starting.</summary>
    </member>
    <member name="M:System.Windows.Forms.BindingSource.System#ComponentModel#ISupportInitialize#EndInit">
      <summary>Signals the <see cref="T:System.Windows.Forms.BindingSource" /> that initialization is complete. </summary>
    </member>
    <member name="E:System.Windows.Forms.BindingSource.System#ComponentModel#ISupportInitializeNotification#Initialized">
      <summary>Occurs when the <see cref="T:System.Windows.Forms.BindingSource" /> is initialized.</summary>
    </member>
    <member name="P:System.Windows.Forms.BindingSource.System#ComponentModel#ISupportInitializeNotification#IsInitialized">
      <summary>Gets a value indicating whether the <see cref="T:System.Windows.Forms.BindingSource" /> is initialized.</summary>
      <returns>true to indicate the <see cref="T:System.Windows.Forms.BindingSource" /> is initialized; otherwise, false.</returns>
    </member>
    <member name="T:System.Windows.Forms.BootMode">
      <summary>Specifies the boot mode in which the system was started.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="F:System.Windows.Forms.BootMode.Normal">
      <summary>The computer was started in the standard boot mode. This mode uses the normal drivers and settings for the system.</summary>
    </member>
    <member name="F:System.Windows.Forms.BootMode.FailSafe">
      <summary>The computer was started in safe mode without network support. This mode uses a limited drivers and settings profile.</summary>
    </member>
    <member name="F:System.Windows.Forms.BootMode.FailSafeWithNetwork">
      <summary>The computer was started in safe mode with network support. This mode uses a limited drivers and settings profile, and loads the services needed to start networking.</summary>
    </member>
    <member name="T:System.Windows.Forms.Border3DSide">
      <summary>Specifies the sides of a rectangle to apply a three-dimensional border to.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="F:System.Windows.Forms.Border3DSide.Left">
      <summary>A three-dimensional border on the left edge of the rectangle.</summary>
    </member>
    <member name="F:System.Windows.Forms.Border3DSide.Top">
      <summary>A three-dimensional border on the top edge of the rectangle.</summary>
    </member>
    <member name="F:System.Windows.Forms.Border3DSide.Right">
      <summary>A three-dimensional border on the right side of the rectangle.</summary>
    </member>
    <member name="F:System.Windows.Forms.Border3DSide.Bottom">
      <summary>A three-dimensional border on the bottom side of the rectangle.</summary>
    </member>
    <member name="F:System.Windows.Forms.Border3DSide.Middle">
      <summary>The interior of the rectangle is filled with the color defined for three-dimensional controls instead of the background color for the form.</summary>
    </member>
    <member name="F:System.Windows.Forms.Border3DSide.All">
      <summary>A three-dimensional border on all four sides of the rectangle. The middle of the rectangle is filled with the color defined for three-dimensional controls.</summary>
    </member>
    <member name="T:System.Windows.Forms.Border3DStyle">
      <summary>Specifies the style of a three-dimensional border.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="F:System.Windows.Forms.Border3DStyle.Adjust">
      <summary>The border is drawn outside the specified rectangle, preserving the dimensions of the rectangle for drawing.</summary>
    </member>
    <member name="F:System.Windows.Forms.Border3DStyle.Bump">
      <summary>The inner and outer edges of the border have a raised appearance.</summary>
    </member>
    <member name="F:System.Windows.Forms.Border3DStyle.Etched">
      <summary>The inner and outer edges of the border have an etched appearance.</summary>
    </member>
    <member name="F:System.Windows.Forms.Border3DStyle.Flat">
      <summary>The border has no three-dimensional effects.</summary>
    </member>
    <member name="F:System.Windows.Forms.Border3DStyle.Raised">
      <summary>The border has raised inner and outer edges.</summary>
    </member>
    <member name="F:System.Windows.Forms.Border3DStyle.RaisedInner">
      <summary>The border has a raised inner edge and no outer edge.</summary>
    </member>
    <member name="F:System.Windows.Forms.Border3DStyle.RaisedOuter">
      <summary>The border has a raised outer edge and no inner edge.</summary>
    </member>
    <member name="F:System.Windows.Forms.Border3DStyle.Sunken">
      <summary>The border has sunken inner and outer edges.</summary>
    </member>
    <member name="F:System.Windows.Forms.Border3DStyle.SunkenInner">
      <summary>The border has a sunken inner edge and no outer edge.</summary>
    </member>
    <member name="F:System.Windows.Forms.Border3DStyle.SunkenOuter">
      <summary>The border has a sunken outer edge and no inner edge.</summary>
    </member>
    <member name="T:System.Windows.Forms.BorderStyle">
      <summary>Specifies the border style for a control.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="F:System.Windows.Forms.BorderStyle.None">
      <summary>No border.</summary>
    </member>
    <member name="F:System.Windows.Forms.BorderStyle.FixedSingle">
      <summary>A single-line border.</summary>
    </member>
    <member name="F:System.Windows.Forms.BorderStyle.Fixed3D">
      <summary>A three-dimensional border.</summary>
    </member>
    <member name="T:System.Windows.Forms.BoundsSpecified">
      <summary>Specifies the bounds of the control to use when defining a control's size and position.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="F:System.Windows.Forms.BoundsSpecified.X">
      <summary>The left edge of the control is defined.</summary>
    </member>
    <member name="F:System.Windows.Forms.BoundsSpecified.Y">
      <summary>The top edge of the control is defined.</summary>
    </member>
    <member name="F:System.Windows.Forms.BoundsSpecified.Width">
      <summary>The width of the control is defined.</summary>
    </member>
    <member name="F:System.Windows.Forms.BoundsSpecified.Height">
      <summary>The height of the control is defined.</summary>
    </member>
    <member name="F:System.Windows.Forms.BoundsSpecified.Location">
      <summary>Both X and Y coordinates of the control are defined.</summary>
    </member>
    <member name="F:System.Windows.Forms.BoundsSpecified.Size">
      <summary>Both <see cref="P:System.Windows.Forms.Control.Width" /> and <see cref="P:System.Windows.Forms.Control.Height" /> property values of the control are defined.</summary>
    </member>
    <member name="F:System.Windows.Forms.BoundsSpecified.All">
      <summary>Both <see cref="P:System.Windows.Forms.Control.Location" /> and <see cref="P:System.Windows.Forms.Control.Size" /> property values are defined.</summary>
    </member>
    <member name="F:System.Windows.Forms.BoundsSpecified.None">
      <summary>No bounds are specified.</summary>
    </member>
    <member name="T:System.Windows.Forms.Button">
      <summary>Represents a Windows button control.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Windows.Forms.Button.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Forms.Button" /> class.</summary>
    </member>
    <member name="P:System.Windows.Forms.Button.AutoSizeMode">
      <summary>Gets or sets the mode by which the <see cref="T:System.Windows.Forms.Button" /> automatically resizes itself.</summary>
      <returns>One of the <see cref="T:System.Windows.Forms.AutoSizeMode" /> values. The default value is <see cref="F:System.Windows.Forms.AutoSizeMode.GrowOnly" />.</returns>
    </member>
    <member name="P:System.Windows.Forms.Button.CreateParams">
      <summary>Gets a <see cref="T:System.Windows.Forms.CreateParams" /> on the base class when creating a window. </summary>
      <returns>A <see cref="T:System.Windows.Forms.CreateParams" />.</returns>
    </member>
    <member name="P:System.Windows.Forms.Button.DialogResult">
      <summary>Gets or sets a value that is returned to the parent form when the button is clicked.</summary>
      <returns>One of the <see cref="T:System.Windows.Forms.DialogResult" /> values. The default value is None.</returns>
      <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">The value assigned is not one of the <see cref="T:System.Windows.Forms.DialogResult" /> values. </exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="E:System.Windows.Forms.Button.DoubleClick">
      <summary>Occurs when the user double-clicks the <see cref="T:System.Windows.Forms.Button" /> control.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="E:System.Windows.Forms.Button.MouseDoubleClick">
      <summary>Occurs when the user double-clicks the <see cref="T:System.Windows.Forms.Button" /> control with the mouse.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Windows.Forms.Button.NotifyDefault(System.Boolean)">
      <summary>Notifies the <see cref="T:System.Windows.Forms.Button" /> whether it is the default button so that it can adjust its appearance accordingly.</summary>
      <param name="value">true if the button is to have the appearance of the default button; otherwise, false. </param>
      <filterpriority>2</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:System.Windows.Forms.Button.OnClick(System.EventArgs)">
      <param name="e">An <see cref="T:System.EventArgs" /> that contains the event data. </param>
    </member>
    <member name="M:System.Windows.Forms.Button.OnFontChanged(System.EventArgs)">
      <summary>Raises the <see cref="E:System.Windows.Forms.Control.FontChanged" /> event.</summary>
      <param name="e">An <see cref="T:System.EventArgs" /> that contains the event data. </param>
    </member>
    <member name="M:System.Windows.Forms.Button.OnMouseEnter(System.EventArgs)">
      <param name="e">Provides information for the event.</param>
    </member>
    <member name="M:System.Windows.Forms.Button.OnMouseLeave(System.EventArgs)">
      <param name="e">Provides missing information for the event.</param>
    </member>
    <member name="M:System.Windows.Forms.Button.OnMouseUp(System.Windows.Forms.MouseEventArgs)">
      <summary>Raises the <see cref="M:System.Windows.Forms.ButtonBase.OnMouseUp(System.Windows.Forms.MouseEventArgs)" /> event.</summary>
      <param name="mevent">A <see cref="T:System.Windows.Forms.MouseEventArgs" /> that contains the event data. </param>
    </member>
    <member name="M:System.Windows.Forms.Button.OnTextChanged(System.EventArgs)">
      <summary>Raises the <see cref="E:System.Windows.Forms.Control.TextChanged" /> event. </summary>
      <param name="e">An <see cref="T:System.EventArgs" /> that contains the event data.</param>
    </member>
    <member name="M:System.Windows.Forms.Button.PerformClick">
      <summary>Generates a <see cref="E:System.Windows.Forms.Control.Click" /> event for a button.</summary>
      <filterpriority>2</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
        <IPermission class="System.Diagnostics.PerformanceCounterPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:System.Windows.Forms.Button.ProcessMnemonic(System.Char)">
      <summary>Processes a mnemonic character. </summary>
      <returns>true if the mnemonic was processed; otherwise, false.</returns>
      <param name="charCode">The mnemonic character entered. </param>
    </member>
    <member name="M:System.Windows.Forms.Button.ToString">
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Windows.Forms.Button.WndProc(System.Windows.Forms.Message@)">
      <summary>Processes Windows messages.</summary>
      <param name="m">The Windows <see cref="T:System.Windows.Forms.Message" /> to process.</param>
    </member>
    <member name="T:System.Windows.Forms.ButtonBase">
      <summary>Implements the basic functionality common to button controls.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Windows.Forms.ButtonBase.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Forms.ButtonBase" /> class.</summary>
    </member>
    <member name="P:System.Windows.Forms.ButtonBase.AutoEllipsis">
      <summary>Gets or sets a value indicating whether the ellipsis character (...) appears at the right edge of the control, denoting that the control text extends beyond the specified length of the control.</summary>
      <returns>true if the additional label text is to be indicated by an ellipsis; otherwise, false. The default is true.</returns>
    </member>
    <member name="P:System.Windows.Forms.ButtonBase.AutoSize">
      <summary>Gets or sets a value that indicates whether the control resizes based on its contents.</summary>
      <returns>true if the control automatically resizes based on its contents; otherwise, false. The default is true.</returns>
    </member>
    <member name="E:System.Windows.Forms.ButtonBase.AutoSizeChanged">
      <summary>Occurs when the value of the <see cref="P:System.Windows.Forms.ButtonBase.AutoSize" /> property changes.</summary>
    </member>
    <member name="P:System.Windows.Forms.ButtonBase.BackColor">
      <summary>Gets or sets the background color of the control.</summary>
      <returns>A <see cref="T:System.Drawing.Color" /> value representing the background color.</returns>
    </member>
    <member name="M:System.Windows.Forms.ButtonBase.CreateAccessibilityInstance">
      <returns>A new <see cref="T:System.Windows.Forms.AccessibleObject" /> for the control.</returns>
    </member>
    <member name="P:System.Windows.Forms.ButtonBase.CreateParams">
      <returns>A <see cref="T:System.Windows.Forms.CreateParams" /> that contains the required creation parameters when the handle to the control is created.</returns>
    </member>
    <member name="P:System.Windows.Forms.ButtonBase.DefaultImeMode">
      <summary>Gets the default Input Method Editor (IME) mode supported by this control.</summary>
      <returns>One of the <see cref="T:System.Windows.Forms.ImeMode" /> values.</returns>
    </member>
    <member name="P:System.Windows.Forms.ButtonBase.DefaultSize">
      <returns>The default <see cref="T:System.Drawing.Size" /> of the control.</returns>
    </member>
    <member name="M:System.Windows.Forms.ButtonBase.Dispose(System.Boolean)">
      <summary>Releases the unmanaged resources used by the <see cref="T:System.Windows.Forms.ButtonBase" /> and optionally releases the managed resources. </summary>
      <param name="disposing">true to release both managed and unmanaged resources; false to release only unmanaged resources. </param>
    </member>
    <member name="P:System.Windows.Forms.ButtonBase.FlatAppearance">
      <summary>Gets the appearance of the border and the colors used to indicate check state and mouse state.</summary>
      <returns>One of the <see cref="T:System.Windows.Forms.FlatButtonAppearance" /> values.</returns>
    </member>
    <member name="P:System.Windows.Forms.ButtonBase.FlatStyle">
      <summary>Gets or sets the flat style appearance of the button control.</summary>
      <returns>One of the <see cref="T:System.Windows.Forms.FlatStyle" /> values. The default value is Standard.</returns>
      <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">The value assigned is not one of the <see cref="T:System.Windows.Forms.FlatStyle" /> values. </exception>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
        <IPermission class="System.Diagnostics.PerformanceCounterPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:System.Windows.Forms.ButtonBase.GetPreferredSize(System.Drawing.Size)">
      <summary>Retrieves the size of a rectangular area into which a control can be fitted.</summary>
      <returns>An ordered pair of type <see cref="T:System.Drawing.Size" /> representing the width and height of a rectangle.</returns>
      <param name="proposedSize">The custom-sized area for a control.</param>
    </member>
    <member name="P:System.Windows.Forms.ButtonBase.Image">
      <summary>Gets or sets the image that is displayed on a button control.</summary>
      <returns>The <see cref="T:System.Drawing.Image" /> displayed on the button control. The default value is null.</returns>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
        <IPermission class="System.Diagnostics.PerformanceCounterPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="P:System.Windows.Forms.ButtonBase.ImageAlign">
      <summary>Gets or sets the alignment of the image on the button control.</summary>
      <returns>One of the <see cref="T:System.Drawing.ContentAlignment" /> values. The default value is MiddleCenter.</returns>
      <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">The value assigned is not one of the <see cref="T:System.Drawing.ContentAlignment" /> values. </exception>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="P:System.Windows.Forms.ButtonBase.ImageIndex">
      <summary>Gets or sets the image list index value of the image displayed on the button control.</summary>
      <returns>A zero-based index, which represents the image position in an <see cref="T:System.Windows.Forms.ImageList" />. The default is -1.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">The assigned value is less than the lower bounds of the <see cref="P:System.Windows.Forms.ButtonBase.ImageIndex" />. </exception>
      <filterpriority>2</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="P:System.Windows.Forms.ButtonBase.ImageKey">
      <summary>Gets or sets the key accessor for the image in the <see cref="P:System.Windows.Forms.ButtonBase.ImageList" />.</summary>
      <returns>A string representing the key of the image.</returns>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="P:System.Windows.Forms.ButtonBase.ImageList">
      <summary>Gets or sets the <see cref="T:System.Windows.Forms.ImageList" /> that contains the <see cref="T:System.Drawing.Image" /> displayed on a button control.</summary>
      <returns>An <see cref="T:System.Windows.Forms.ImageList" />. The default value is null.</returns>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="P:System.Windows.Forms.ButtonBase.ImeMode">
      <summary>Gets or sets the Input Method Editor (IME) mode supported by this control. This property is not relevant for this class.</summary>
      <returns>One of the <see cref="T:System.Windows.Forms.ImeMode" /> values.</returns>
      <filterpriority>2</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
        <IPermission class="System.Diagnostics.PerformanceCounterPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="E:System.Windows.Forms.ButtonBase.ImeModeChanged">
      <summary>Occurs when the <see cref="P:System.Windows.Forms.ButtonBase.ImeMode" /> property is changed. This event is not relevant for this class.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="P:System.Windows.Forms.ButtonBase.IsDefault">
      <summary>Gets or sets a value indicating whether the button control is the default button.</summary>
      <returns>true if the button control is the default button; otherwise, false.</returns>
    </member>
    <member name="M:System.Windows.Forms.ButtonBase.OnEnabledChanged(System.EventArgs)">
      <param name="e">An <see cref="T:System.EventArgs" /> that contains the event data. </param>
    </member>
    <member name="M:System.Windows.Forms.ButtonBase.OnGotFocus(System.EventArgs)">
      <summary>Raises the <see cref="E:System.Windows.Forms.Control.GotFocus" /> event.</summary>
      <param name="e">An <see cref="T:System.EventArgs" /> that contains the event data. </param>
    </member>
    <member name="M:System.Windows.Forms.ButtonBase.OnKeyDown(System.Windows.Forms.KeyEventArgs)">
      <summary>Raises the <see cref="M:System.Windows.Forms.ButtonBase.OnKeyUp(System.Windows.Forms.KeyEventArgs)" /> event.</summary>
      <param name="kevent">A <see cref="T:System.Windows.Forms.KeyEventArgs" /> that contains the event data. </param>
    </member>
    <member name="M:System.Windows.Forms.ButtonBase.OnKeyUp(System.Windows.Forms.KeyEventArgs)">
      <summary>Raises the <see cref="M:System.Windows.Forms.ButtonBase.OnKeyUp(System.Windows.Forms.KeyEventArgs)" /> event.</summary>
      <param name="kevent">A <see cref="T:System.Windows.Forms.KeyEventArgs" /> that contains the event data. </param>
    </member>
    <member name="M:System.Windows.Forms.ButtonBase.OnLostFocus(System.EventArgs)">
      <summary>Raises the <see cref="M:System.Windows.Forms.ButtonBase.OnLostFocus(System.EventArgs)" /> event.</summary>
      <param name="e">An <see cref="T:System.EventArgs" /> that contains the event data. </param>
    </member>
    <member name="M:System.Windows.Forms.ButtonBase.OnMouseDown(System.Windows.Forms.MouseEventArgs)">
      <summary>Raises the <see cref="M:System.Windows.Forms.Control.OnMouseDown(System.Windows.Forms.MouseEventArgs)" /> event.</summary>
      <param name="mevent">A <see cref="T:System.Windows.Forms.MouseEventArgs" /> that contains the event data. </param>
    </member>
    <member name="M:System.Windows.Forms.ButtonBase.OnMouseEnter(System.EventArgs)">
      <summary>Raises the <see cref="M:System.Windows.Forms.Control.OnMouseEnter(System.EventArgs)" /> event.</summary>
      <param name="eventargs">An <see cref="T:System.EventArgs" /> that contains the event data. </param>
    </member>
    <member name="M:System.Windows.Forms.ButtonBase.OnMouseLeave(System.EventArgs)">
      <summary>Raises the <see cref="M:System.Windows.Forms.Control.OnMouseLeave(System.EventArgs)" /> event.</summary>
      <param name="eventargs">An <see cref="T:System.EventArgs" /> that contains the event data. </param>
    </member>
    <member name="M:System.Windows.Forms.ButtonBase.OnMouseMove(System.Windows.Forms.MouseEventArgs)">
      <summary>Raises the <see cref="M:System.Windows.Forms.Control.OnMouseMove(System.Windows.Forms.MouseEventArgs)" /> event.</summary>
      <param name="mevent">A <see cref="T:System.Windows.Forms.MouseEventArgs" /> that contains the event data. </param>
    </member>
    <member name="M:System.Windows.Forms.ButtonBase.OnMouseUp(System.Windows.Forms.MouseEventArgs)">
      <summary>Raises the <see cref="M:System.Windows.Forms.ButtonBase.OnMouseUp(System.Windows.Forms.MouseEventArgs)" /> event.</summary>
      <param name="mevent">A <see cref="T:System.Windows.Forms.MouseEventArgs" /> that contains the event data. </param>
    </member>
    <member name="M:System.Windows.Forms.ButtonBase.OnPaint(System.Windows.Forms.PaintEventArgs)">
      <summary>Raises the <see cref="M:System.Windows.Forms.ButtonBase.OnPaint(System.Windows.Forms.PaintEventArgs)" /> event.</summary>
      <param name="pevent">A <see cref="T:System.Windows.Forms.PaintEventArgs" /> that contains the event data. </param>
    </member>
    <member name="M:System.Windows.Forms.ButtonBase.OnParentChanged(System.EventArgs)">
      <param name="e">An <see cref="T:System.EventArgs" /> that contains the event data. </param>
    </member>
    <member name="M:System.Windows.Forms.ButtonBase.OnTextChanged(System.EventArgs)">
      <param name="e">An <see cref="T:System.EventArgs" /> that contains the event data. </param>
    </member>
    <member name="M:System.Windows.Forms.ButtonBase.OnVisibleChanged(System.EventArgs)">
      <param name="e">An <see cref="T:System.EventArgs" /> that contains the event data. </param>
    </member>
    <member name="M:System.Windows.Forms.ButtonBase.ResetFlagsandPaint">
      <summary>Resets the <see cref="T:System.Windows.Forms.Button" /> control to the state before it is pressed and redraws it.</summary>
    </member>
    <member name="P:System.Windows.Forms.ButtonBase.Text">
      <returns>The text associated with this control.</returns>
    </member>
    <member name="P:System.Windows.Forms.ButtonBase.TextAlign">
      <summary>Gets or sets the alignment of the text on the button control.</summary>
      <returns>One of the <see cref="T:System.Drawing.ContentAlignment" /> values. The default is MiddleCenter.</returns>
      <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">The value assigned is not one of the <see cref="T:System.Drawing.ContentAlignment" /> values. </exception>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="P:System.Windows.Forms.ButtonBase.TextImageRelation">
      <summary>Gets or sets the position of text and image relative to each other.</summary>
      <returns>One of the values of <see cref="T:System.Windows.Forms.TextImageRelation" />. The default is <see cref="F:System.Windows.Forms.TextImageRelation.Overlay" />.</returns>
      <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">The value is not one of the <see cref="T:System.Windows.Forms.TextImageRelation" /> values.</exception>
      <filterpriority>2</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="P:System.Windows.Forms.ButtonBase.UseCompatibleTextRendering">
      <summary>Gets or sets a value that determines whether to use the <see cref="T:System.Drawing.Graphics" /> class (GDI+) or the <see cref="T:System.Windows.Forms.TextRenderer" /> class (GDI) to render text.</summary>
      <returns>true if the <see cref="T:System.Drawing.Graphics" /> class should be used to perform text rendering for compatibility with versions 1.0 and 1.1. of the .NET Framework; otherwise, false. The default is false.</returns>
    </member>
    <member name="P:System.Windows.Forms.ButtonBase.UseMnemonic">
      <summary>Gets or sets a value indicating whether the first character that is preceded by an ampersand (&amp;) is used as the mnemonic key of the control.</summary>
      <returns>true if the first character that is preceded by an ampersand (&amp;) is used as the mnemonic key of the control; otherwise, false. The default is true.</returns>
    </member>
    <member name="P:System.Windows.Forms.ButtonBase.UseVisualStyleBackColor">
      <summary>Gets or sets a value that determines if the background is drawn using visual styles, if supported.</summary>
      <returns>true if the background is drawn using visual styles; otherwise, false.</returns>
    </member>
    <member name="M:System.Windows.Forms.ButtonBase.WndProc(System.Windows.Forms.Message@)">
      <param name="m">The Windows <see cref="T:System.Windows.Forms.Message" /> to process. </param>
    </member>
    <member name="T:System.Windows.Forms.ButtonBase.ButtonBaseAccessibleObject">
      <summary>Provides information that accessibility applications use to adjust an application's user interface for users with disabilities.</summary>
    </member>
    <member name="M:System.Windows.Forms.ButtonBase.ButtonBaseAccessibleObject.#ctor(System.Windows.Forms.Control)">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Forms.ButtonBase.ButtonBaseAccessibleObject" /> class. </summary>
      <param name="owner">The owner of this <see cref="T:System.Windows.Forms.ButtonBase.ButtonBaseAccessibleObject" />.</param>
    </member>
    <member name="M:System.Windows.Forms.ButtonBase.ButtonBaseAccessibleObject.DoDefaultAction">
      <summary>Performs the default action associated with this accessible object.</summary>
    </member>
    <member name="P:System.Windows.Forms.ButtonBase.ButtonBaseAccessibleObject.State">
      <summary>Gets the state of this accessible object.</summary>
      <returns>One of the <see cref="T:System.Windows.Forms.AccessibleStates" /> values.</returns>
    </member>
    <member name="T:System.Windows.Forms.ButtonBorderStyle">
      <summary>Specifies the border style for a button control.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="F:System.Windows.Forms.ButtonBorderStyle.None">
      <summary>No border.</summary>
    </member>
    <member name="F:System.Windows.Forms.ButtonBorderStyle.Dotted">
      <summary>A dotted-line border.</summary>
    </member>
    <member name="F:System.Windows.Forms.ButtonBorderStyle.Dashed">
      <summary>A dashed border.</summary>
    </member>
    <member name="F:System.Windows.Forms.ButtonBorderStyle.Solid">
      <summary>A solid border.</summary>
    </member>
    <member name="F:System.Windows.Forms.ButtonBorderStyle.Inset">
      <summary>A sunken border.</summary>
    </member>
    <member name="F:System.Windows.Forms.ButtonBorderStyle.Outset">
      <summary>A raised border.</summary>
    </member>
    <member name="T:System.Windows.Forms.ButtonRenderer">
      <summary>Provides methods used to render a button control with or without visual styles. This class cannot be inherited.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Windows.Forms.ButtonRenderer.DrawButton(System.Drawing.Graphics,System.Drawing.Rectangle,System.Boolean,System.Windows.Forms.VisualStyles.PushButtonState)">
      <summary>Draws a button control in the specified state and bounds, and with an optional focus rectangle.</summary>
      <param name="g">The <see cref="T:System.Drawing.Graphics" /> used to draw the button.</param>
      <param name="bounds">The <see cref="T:System.Drawing.Rectangle" /> that specifies the bounds of the button.</param>
      <param name="focused">true to draw a focus rectangle on the button; otherwise, false.</param>
      <param name="state">One of the <see cref="T:System.Windows.Forms.VisualStyles.PushButtonState" /> values that specifies the visual state of the button.</param>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:System.Windows.Forms.ButtonRenderer.DrawButton(System.Drawing.Graphics,System.Drawing.Rectangle,System.Drawing.Image,System.Drawing.Rectangle,System.Boolean,System.Windows.Forms.VisualStyles.PushButtonState)">
      <summary>Draws a button control in the specified state and bounds, with the specified image, and with an optional focus rectangle.</summary>
      <param name="g">The <see cref="T:System.Drawing.Graphics" /> used to draw the button.</param>
      <param name="bounds">The <see cref="T:System.Drawing.Rectangle" /> that specifies the bounds of the button.</param>
      <param name="image">The <see cref="T:System.Drawing.Image" /> to draw on the button.</param>
      <param name="imageBounds">The <see cref="T:System.Drawing.Rectangle" /> that represents the dimensions of <paramref name="image" />.</param>
      <param name="focused">true to draw a focus rectangle on the button; otherwise, false.</param>
      <param name="state">One of the <see cref="T:System.Windows.Forms.VisualStyles.PushButtonState" /> values that specifies the visual state of the button.</param>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:System.Windows.Forms.ButtonRenderer.DrawButton(System.Drawing.Graphics,System.Drawing.Rectangle,System.String,System.Drawing.Font,System.Boolean,System.Windows.Forms.VisualStyles.PushButtonState)">
      <summary>Draws a button control in the specified state and bounds, with the specified text, and with an optional focus rectangle.</summary>
      <param name="g">The <see cref="T:System.Drawing.Graphics" /> used to draw the button.</param>
      <param name="bounds">The <see cref="T:System.Drawing.Rectangle" /> that specifies the bounds of the button.</param>
      <param name="buttonText">The <see cref="T:System.String" /> to draw on the button.</param>
      <param name="font">The <see cref="T:System.Drawing.Font" /> to apply to <paramref name="buttonText" />.</param>
      <param name="focused">true to draw a focus rectangle on the button; otherwise, false.</param>
      <param name="state">One of the <see cref="T:System.Windows.Forms.VisualStyles.PushButtonState" /> values that specifies the visual state of the button.</param>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:System.Windows.Forms.ButtonRenderer.DrawButton(System.Drawing.Graphics,System.Drawing.Rectangle,System.String,System.Drawing.Font,System.Drawing.Image,System.Drawing.Rectangle,System.Boolean,System.Windows.Forms.VisualStyles.PushButtonState)">
      <summary>Draws a button control in the specified state and bounds, with the specified text and image, and with an optional focus rectangle.</summary>
      <param name="g">The <see cref="T:System.Drawing.Graphics" /> used to draw the button.</param>
      <param name="bounds">The <see cref="T:System.Drawing.Rectangle" /> that specifies the bounds of the button.</param>
      <param name="buttonText">The <see cref="T:System.String" /> to draw on the button.</param>
      <param name="font">The <see cref="T:System.Drawing.Font" /> to apply to <paramref name="buttonText" />.</param>
      <param name="image">The <see cref="T:System.Drawing.Image" /> to draw on the button.</param>
      <param name="imageBounds">The <see cref="T:System.Drawing.Rectangle" /> that represents the dimensions of <paramref name="image" />.</param>
      <param name="focused">true to draw a focus rectangle on the button; otherwise, false.</param>
      <param name="state">One of the <see cref="T:System.Windows.Forms.VisualStyles.PushButtonState" /> values that specifies the visual state of the button.</param>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:System.Windows.Forms.ButtonRenderer.DrawButton(System.Drawing.Graphics,System.Drawing.Rectangle,System.String,System.Drawing.Font,System.Windows.Forms.TextFormatFlags,System.Boolean,System.Windows.Forms.VisualStyles.PushButtonState)">
      <summary>Draws a button control in the specified state and bounds, with the specified text and text formatting, and with an optional focus rectangle.</summary>
      <param name="g">The <see cref="T:System.Drawing.Graphics" /> used to draw the button.</param>
      <param name="bounds">The <see cref="T:System.Drawing.Rectangle" /> that specifies the bounds of the button.</param>
      <param name="buttonText">The <see cref="T:System.String" /> to draw on the button.</param>
      <param name="font">The <see cref="T:System.Drawing.Font" /> to apply to <paramref name="buttonText" />.</param>
      <param name="flags">A bitwise combination of the <see cref="T:System.Windows.Forms.TextFormatFlags" /> values to apply to <paramref name="buttonText" />.</param>
      <param name="focused">true to draw a focus rectangle on the button; otherwise, false.</param>
      <param name="state">One of the <see cref="T:System.Windows.Forms.VisualStyles.PushButtonState" /> values that specifies the visual state of the button.</param>
    </member>
    <member name="M:System.Windows.Forms.ButtonRenderer.DrawButton(System.Drawing.Graphics,System.Drawing.Rectangle,System.String,System.Drawing.Font,System.Windows.Forms.TextFormatFlags,System.Drawing.Image,System.Drawing.Rectangle,System.Boolean,System.Windows.Forms.VisualStyles.PushButtonState)">
      <summary>Draws a button control in the specified state and bounds; with the specified text, text formatting, and image; and with an optional focus rectangle.</summary>
      <param name="g">The <see cref="T:System.Drawing.Graphics" /> used to draw the button.</param>
      <param name="bounds">The <see cref="T:System.Drawing.Rectangle" /> that specifies the bounds of the button.</param>
      <param name="buttonText">The <see cref="T:System.String" /> to draw on the button.</param>
      <param name="font">The <see cref="T:System.Drawing.Font" /> to apply to <paramref name="buttonText" />.</param>
      <param name="flags">A bitwise combination of the <see cref="T:System.Windows.Forms.TextFormatFlags" /> values to apply to <paramref name="buttonText" />.</param>
      <param name="image">The <see cref="T:System.Drawing.Image" /> to draw on the button.</param>
      <param name="imageBounds">The <see cref="T:System.Drawing.Rectangle" /> that represents the dimensions of <paramref name="image" />.</param>
      <param name="focused">true to draw a focus rectangle on the button; otherwise, false.</param>
      <param name="state">One of the <see cref="T:System.Windows.Forms.VisualStyles.PushButtonState" /> values that specifies the visual state of the button.</param>
    </member>
    <member name="M:System.Windows.Forms.ButtonRenderer.DrawButton(System.Drawing.Graphics,System.Drawing.Rectangle,System.Windows.Forms.VisualStyles.PushButtonState)">
      <summary>Draws a button control in the specified state and bounds.</summary>
      <param name="g">The <see cref="T:System.Drawing.Graphics" /> used to draw the button.</param>
      <param name="bounds">The <see cref="T:System.Drawing.Rectangle" /> that specifies the bounds of the button.</param>
      <param name="state">One of the <see cref="T:System.Windows.Forms.VisualStyles.PushButtonState" /> values that specifies the visual state of the button.</param>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:System.Windows.Forms.ButtonRenderer.DrawParentBackground(System.Drawing.Graphics,System.Drawing.Rectangle,System.Windows.Forms.Control)">
      <summary>Draws the background of a control's parent in the specified area.</summary>
      <param name="g">The <see cref="T:System.Drawing.Graphics" /> used to draw the background of the parent of <paramref name="childControl" />.</param>
      <param name="bounds">The <see cref="T:System.Drawing.Rectangle" /> in which to draw the parent control's background. This rectangle should be inside the child controlâs bounds.</param>
      <param name="childControl">The control whose parent's background will be drawn.</param>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
        <IPermission class="System.Diagnostics.PerformanceCounterPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:System.Windows.Forms.ButtonRenderer.IsBackgroundPartiallyTransparent(System.Windows.Forms.VisualStyles.PushButtonState)">
      <summary>Indicates whether the background of the button has semitransparent or alpha-blended pieces.</summary>
      <returns>true if the background of the button has semitransparent or alpha-blended pieces; otherwise, false.</returns>
      <param name="state">One of the <see cref="T:System.Windows.Forms.VisualStyles.PushButtonState" /> values that specifies the visual state of the button.</param>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="P:System.Windows.Forms.ButtonRenderer.RenderMatchingApplicationState">
      <summary>Gets or sets a value indicating whether the renderer uses the application state to determine rendering style.</summary>
      <returns>true if the application state is used to determine rendering style; otherwise, false. The default is true.</returns>
    </member>
    <member name="T:System.Windows.Forms.ButtonState">
      <summary>Specifies the appearance of a button.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="F:System.Windows.Forms.ButtonState.Checked">
      <summary>The button has a checked or latched appearance. Use this appearance to show that a toggle button has been pressed.</summary>
    </member>
    <member name="F:System.Windows.Forms.ButtonState.Flat">
      <summary>The button has a flat, two-dimensional appearance.</summary>
    </member>
    <member name="F:System.Windows.Forms.ButtonState.Inactive">
      <summary>The button is inactive (grayed).</summary>
    </member>
    <member name="F:System.Windows.Forms.ButtonState.Normal">
      <summary>The button has its normal appearance (three-dimensional).</summary>
    </member>
    <member name="F:System.Windows.Forms.ButtonState.Pushed">
      <summary>The button appears pressed.</summary>
    </member>
    <member name="F:System.Windows.Forms.ButtonState.All">
      <summary>All flags except Normal are set.</summary>
    </member>
    <member name="T:System.Windows.Forms.CacheVirtualItemsEventArgs">
      <summary>Provides data for the <see cref="E:System.Windows.Forms.ListView.CacheVirtualItems" /> event. </summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Windows.Forms.CacheVirtualItemsEventArgs.#ctor(System.Int32,System.Int32)">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Forms.CacheVirtualItemsEventArgs" /> class with the specified starting and ending indices.</summary>
      <param name="startIndex">The starting index of a range of items needed by the <see cref="T:System.Windows.Forms.ListView" /> for the next <see cref="E:System.Windows.Forms.ListView.RetrieveVirtualItem" /> event that occurs.</param>
      <param name="endIndex">The ending index of a range of items needed by the <see cref="T:System.Windows.Forms.ListView" /> for the next <see cref="E:System.Windows.Forms.ListView.RetrieveVirtualItem" /> event that occurs.</param>
    </member>
    <member name="P:System.Windows.Forms.CacheVirtualItemsEventArgs.EndIndex">
      <summary>Gets the ending index for the range of values needed by a <see cref="T:System.Windows.Forms.ListView" /> control in virtual mode.</summary>
      <returns>The index at the end of the range of values needed by the <see cref="T:System.Windows.Forms.ListView" /> control.</returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="P:System.Windows.Forms.CacheVirtualItemsEventArgs.StartIndex">
      <summary>Gets the starting index for a range of values needed by a <see cref="T:System.Windows.Forms.ListView" /> control in virtual mode.</summary>
      <returns>The index at the start of the range of values needed by the <see cref="T:System.Windows.Forms.ListView" /> control.</returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="T:System.Windows.Forms.CacheVirtualItemsEventHandler">
      <summary>Represents the method that will handle the <see cref="E:System.Windows.Forms.ListView.CacheVirtualItems" /> event of a <see cref="T:System.Windows.Forms.ListView" />.</summary>
      <param name="sender">The source of the event.</param>
      <param name="e">A <see cref="T:System.Windows.Forms.CacheVirtualItemsEventArgs" /> that contains the event data.</param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="T:System.Windows.Forms.CaptionButton">
      <summary>Specifies the type of caption button to display.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="F:System.Windows.Forms.CaptionButton.Close">
      <summary>A Close button.</summary>
    </member>
    <member name="F:System.Windows.Forms.CaptionButton.Help">
      <summary>A Help button.</summary>
    </member>
    <member name="F:System.Windows.Forms.CaptionButton.Maximize">
      <summary>A Maximize button.</summary>
    </member>
    <member name="F:System.Windows.Forms.CaptionButton.Minimize">
      <summary>A Minimize button.</summary>
    </member>
    <member name="F:System.Windows.Forms.CaptionButton.Restore">
      <summary>A Restore button.</summary>
    </member>
    <member name="T:System.Windows.Forms.CharacterCasing">
      <summary>Specifies the case of characters in a <see cref="T:System.Windows.Forms.TextBox" /> control.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="F:System.Windows.Forms.CharacterCasing.Normal">
      <summary>The case of characters is left unchanged.</summary>
    </member>
    <member name="F:System.Windows.Forms.CharacterCasing.Upper">
      <summary>Converts all characters to uppercase.</summary>
    </member>
    <member name="F:System.Windows.Forms.CharacterCasing.Lower">
      <summary>Converts all characters to lowercase.</summary>
    </member>
    <member name="T:System.Windows.Forms.CheckBox">
      <summary>Represents a Windows <see cref="T:System.Windows.Forms.CheckBox" />.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Windows.Forms.CheckBox.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Forms.CheckBox" /> class.</summary>
    </member>
    <member name="P:System.Windows.Forms.CheckBox.Appearance">
      <summary>Gets or sets the value that determines the appearance of a <see cref="T:System.Windows.Forms.CheckBox" /> control.</summary>
      <returns>One of the <see cref="T:System.Windows.Forms.Appearance" /> values. The default value is <see cref="F:System.Windows.Forms.Appearance.Normal" />.</returns>
      <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">The value assigned is not one of the <see cref="T:System.Windows.Forms.Appearance" /> values. </exception>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
        <IPermission class="System.Diagnostics.PerformanceCounterPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="E:System.Windows.Forms.CheckBox.AppearanceChanged">
      <summary>Occurs when the value of the <see cref="P:System.Windows.Forms.CheckBox.Appearance" /> property changes.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="P:System.Windows.Forms.CheckBox.AutoCheck">
      <summary>Gets or set a value indicating whether the <see cref="P:System.Windows.Forms.CheckBox.Checked" /> or <see cref="P:System.Windows.Forms.CheckBox.CheckState" /> values and the <see cref="T:System.Windows.Forms.CheckBox" />'s appearance are automatically changed when the <see cref="T:System.Windows.Forms.CheckBox" /> is clicked.</summary>
      <returns>true if the <see cref="P:System.Windows.Forms.CheckBox.Checked" /> value or <see cref="P:System.Windows.Forms.CheckBox.CheckState" /> value and the appearance of the control are automatically changed on the <see cref="E:System.Windows.Forms.Control.Click" /> event; otherwise, false. The default value is true.</returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="P:System.Windows.Forms.CheckBox.CheckAlign">
      <summary>Gets or sets the horizontal and vertical alignment of the check mark on a <see cref="T:System.Windows.Forms.CheckBox" /> control.</summary>
      <returns>One of the <see cref="T:System.Drawing.ContentAlignment" /> values. The default value is MiddleLeft.</returns>
      <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">The value assigned is not one of the <see cref="T:System.Drawing.ContentAlignment" /> enumeration values. </exception>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="P:System.Windows.Forms.CheckBox.Checked">
      <summary>Gets or set a value indicating whether the <see cref="T:System.Windows.Forms.CheckBox" /> is in the checked state.</summary>
      <returns>true if the <see cref="T:System.Windows.Forms.CheckBox" /> is in the checked state; otherwise, false. The default value is false.NoteIf the <see cref="P:System.Windows.Forms.CheckBox.ThreeState" /> property is set to true, the <see cref="P:System.Windows.Forms.CheckBox.Checked" /> property will return true for either a Checked or Indeterminate<see cref="P:System.Windows.Forms.CheckBox.CheckState" />.</returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="E:System.Windows.Forms.CheckBox.CheckedChanged">
      <summary>Occurs when the value of the <see cref="P:System.Windows.Forms.CheckBox.Checked" /> property changes.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="P:System.Windows.Forms.CheckBox.CheckState">
      <summary>Gets or sets the state of the <see cref="T:System.Windows.Forms.CheckBox" />.</summary>
      <returns>One of the <see cref="T:System.Windows.Forms.CheckState" /> enumeration values. The default value is Unchecked.</returns>
      <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">The value assigned is not one of the <see cref="T:System.Windows.Forms.CheckState" /> enumeration values. </exception>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
        <IPermission class="System.Diagnostics.PerformanceCounterPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="E:System.Windows.Forms.CheckBox.CheckStateChanged">
      <summary>Occurs when the value of the <see cref="P:System.Windows.Forms.CheckBox.CheckState" /> property changes.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Windows.Forms.CheckBox.CreateAccessibilityInstance">
      <summary>Creates a new accessibility object for the <see cref="T:System.Windows.Forms.CheckBox" /> control.</summary>
      <returns>A new <see cref="T:System.Windows.Forms.CheckBox.CheckBoxAccessibleObject" /> for the control.</returns>
    </member>
    <member name="P:System.Windows.Forms.CheckBox.CreateParams">
      <summary>Gets the required creation parameters when the control handle is created.</summary>
      <returns>A <see cref="T:System.Windows.Forms.CreateParams" /> that contains the required creation parameters when the handle to the control is created.</returns>
    </member>
    <member name="P:System.Windows.Forms.CheckBox.DefaultSize">
      <returns>The default size.</returns>
    </member>
    <member name="E:System.Windows.Forms.CheckBox.DoubleClick">
      <summary>Occurs when the user double-clicks the <see cref="T:System.Windows.Forms.CheckBox" /> control.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="E:System.Windows.Forms.CheckBox.MouseDoubleClick">
      <summary>Occurs when the user double-clicks the <see cref="T:System.Windows.Forms.CheckBox" /> control.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Windows.Forms.CheckBox.OnAppearanceChanged(System.EventArgs)">
      <summary>Raises the <see cref="E:System.Windows.Forms.CheckBox.AppearanceChanged" /> event.</summary>
      <param name="e">An <see cref="T:System.EventArgs" /> that contains the event data. </param>
    </member>
    <member name="M:System.Windows.Forms.CheckBox.OnCheckedChanged(System.EventArgs)">
      <summary>Raises the <see cref="E:System.Windows.Forms.CheckBox.CheckedChanged" /> event.</summary>
      <param name="e">An <see cref="T:System.EventArgs" /> that contains the event data. </param>
    </member>
    <member name="M:System.Windows.Forms.CheckBox.OnCheckStateChanged(System.EventArgs)">
      <summary>Raises the <see cref="E:System.Windows.Forms.CheckBox.CheckStateChanged" /> event.</summary>
      <param name="e">An <see cref="T:System.EventArgs" /> that contains the event data. </param>
    </member>
    <member name="M:System.Windows.Forms.CheckBox.OnClick(System.EventArgs)">
      <summary>Raises the <see cref="E:System.Windows.Forms.Control.Click" /> event.</summary>
      <param name="e">An <see cref="T:System.EventArgs" /> that contains the event data. </param>
    </member>
    <member name="M:System.Windows.Forms.CheckBox.OnHandleCreated(System.EventArgs)">
      <param name="e">An <see cref="T:System.EventArgs" /> that contains the event data. </param>
    </member>
    <member name="M:System.Windows.Forms.CheckBox.OnKeyDown(System.Windows.Forms.KeyEventArgs)">
      <param name="e">Contains data for the event.</param>
    </member>
    <member name="M:System.Windows.Forms.CheckBox.OnMouseUp(System.Windows.Forms.MouseEventArgs)">
      <param name="mevent">A <see cref="T:System.Windows.Forms.MouseEventArgs" /> that contains the event data. </param>
    </member>
    <member name="M:System.Windows.Forms.CheckBox.ProcessMnemonic(System.Char)">
      <summary>Processes a mnemonic character.</summary>
      <returns>true if the character was processed as a mnemonic by the control; otherwise, false.</returns>
      <param name="charCode">The character to process.</param>
    </member>
    <member name="P:System.Windows.Forms.CheckBox.TextAlign">
      <summary>Gets or sets the alignment of the text on the <see cref="T:System.Windows.Forms.CheckBox" /> control.</summary>
      <returns>One of the <see cref="T:System.Drawing.ContentAlignment" /> values. The default is <see cref="F:System.Drawing.ContentAlignment.MiddleLeft" />.</returns>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="P:System.Windows.Forms.CheckBox.ThreeState">
      <summary>Gets or sets a value indicating whether the <see cref="T:System.Windows.Forms.CheckBox" /> will allow three check states rather than two.</summary>
      <returns>true if the <see cref="T:System.Windows.Forms.CheckBox" /> is able to display three check states; otherwise, false. The default value is false.</returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Windows.Forms.CheckBox.ToString">
      <summary>Returns a string that represents the current <see cref="T:System.Windows.Forms.CheckBox" /> control.</summary>
      <returns>A string that states the control type and the state of the <see cref="P:System.Windows.Forms.CheckBox.CheckState" /> property.</returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="T:System.Windows.Forms.CheckBox.CheckBoxAccessibleObject">
      <summary>Provides information about the <see cref="T:System.Windows.Forms.CheckBox" /> control to accessibility client applications.</summary>
    </member>
    <member name="M:System.Windows.Forms.CheckBox.CheckBoxAccessibleObject.#ctor(System.Windows.Forms.Control)">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Forms.CheckBox.CheckBoxAccessibleObject" /> class. </summary>
      <param name="owner">The <see cref="T:System.Windows.Forms.CheckBox" /> that owns the <see cref="T:System.Windows.Forms.CheckBox.CheckBoxAccessibleObject" />.</param>
    </member>
    <member name="P:System.Windows.Forms.CheckBox.CheckBoxAccessibleObject.DefaultAction">
      <summary>Gets a string that describes the default action of the <see cref="T:System.Windows.Forms.CheckBox" /> control.</summary>
      <returns>The description of the default action of the <see cref="T:System.Windows.Forms.CheckBox" /> control.</returns>
    </member>
    <member name="M:System.Windows.Forms.CheckBox.CheckBoxAccessibleObject.DoDefaultAction">
      <summary>Performs the default action associated with this accessible object.</summary>
    </member>
    <member name="P:System.Windows.Forms.CheckBox.CheckBoxAccessibleObject.Role">
      <summary>Gets the role of this accessible object.</summary>
      <returns>The <see cref="F:System.Windows.Forms.AccessibleRole.CheckButton" /> value.</returns>
    </member>
    <member name="P:System.Windows.Forms.CheckBox.CheckBoxAccessibleObject.State">
      <summary>Gets the state of the <see cref="T:System.Windows.Forms.CheckBox" /> control.</summary>
      <returns>One of the <see cref="T:System.Windows.Forms.AccessibleStates" /> values. If the <see cref="P:System.Windows.Forms.CheckBox.CheckState" /> property is set to <see cref="F:System.Windows.Forms.CheckState.Checked" />, this property returns <see cref="F:System.Windows.Forms.AccessibleStates.Checked" />. If <see cref="P:System.Windows.Forms.CheckBox.CheckState" /> is set to <see cref="F:System.Windows.Forms.CheckState.Indeterminate" />, this property returns <see cref="F:System.Windows.Forms.AccessibleStates.Indeterminate" />.</returns>
    </member>
    <member name="T:System.Windows.Forms.CheckBoxRenderer">
      <summary>Provides methods used to render a check box control with or without visual styles. This class cannot be inherited.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Windows.Forms.CheckBoxRenderer.DrawCheckBox(System.Drawing.Graphics,System.Drawing.Point,System.Drawing.Rectangle,System.String,System.Drawing.Font,System.Boolean,System.Windows.Forms.VisualStyles.CheckBoxState)">
      <summary>Draws a check box control in the specified state and location, with the specified text, and with an optional focus rectangle.</summary>
      <param name="g">The <see cref="T:System.Drawing.Graphics" /> used to draw the check box.</param>
      <param name="glyphLocation">The <see cref="T:System.Drawing.Point" /> to draw the check box glyph at.</param>
      <param name="textBounds">The <see cref="T:System.Drawing.Rectangle" /> to draw <paramref name="checkBoxText" /> in.</param>
      <param name="checkBoxText">The <see cref="T:System.String" /> to draw with the check box.</param>
      <param name="font">The <see cref="T:System.Drawing.Font" /> to apply to <paramref name="checkBoxText" />.</param>
      <param name="focused">true to draw a focus rectangle; otherwise, false.</param>
      <param name="state">One of the <see cref="T:System.Windows.Forms.VisualStyles.CheckBoxState" /> values that specifies the visual state of the check box.</param>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:System.Windows.Forms.CheckBoxRenderer.DrawCheckBox(System.Drawing.Graphics,System.Drawing.Point,System.Drawing.Rectangle,System.String,System.Drawing.Font,System.Drawing.Image,System.Drawing.Rectangle,System.Boolean,System.Windows.Forms.VisualStyles.CheckBoxState)">
      <summary>Draws a check box control in the specified state and location, with the specified text and image, and with an optional focus rectangle.</summary>
      <param name="g">The <see cref="T:System.Drawing.Graphics" /> used to draw the check box.</param>
      <param name="glyphLocation">The <see cref="T:System.Drawing.Point" /> to draw the check box glyph at.</param>
      <param name="textBounds">The <see cref="T:System.Drawing.Rectangle" /> to draw <paramref name="checkBoxText" /> in.</param>
      <param name="checkBoxText">The <see cref="T:System.String" /> to draw with the check box.</param>
      <param name="font">The <see cref="T:System.Drawing.Font" /> to apply to <paramref name="checkBoxText" />.</param>
      <param name="image">The <see cref="T:System.Drawing.Image" /> to draw with the check box.</param>
      <param name="imageBounds">The <see cref="T:System.Drawing.Rectangle" /> that represents the dimensions of <paramref name="image" />.</param>
      <param name="focused">true to draw a focus rectangle; otherwise, false.</param>
      <param name="state">One of the <see cref="T:System.Windows.Forms.VisualStyles.CheckBoxState" /> values that specifies the visual state of the check box.</param>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:System.Windows.Forms.CheckBoxRenderer.DrawCheckBox(System.Drawing.Graphics,System.Drawing.Point,System.Drawing.Rectangle,System.String,System.Drawing.Font,System.Windows.Forms.TextFormatFlags,System.Boolean,System.Windows.Forms.VisualStyles.CheckBoxState)">
      <summary>Draws a check box control in the specified state and location, with the specified text and text formatting, and with an optional focus rectangle.</summary>
      <param name="g">The <see cref="T:System.Drawing.Graphics" /> used to draw the check box.</param>
      <param name="glyphLocation">The <see cref="T:System.Drawing.Point" /> to draw the check box glyph at.</param>
      <param name="textBounds">The <see cref="T:System.Drawing.Rectangle" /> to draw <paramref name="checkBoxText" /> in.</param>
      <param name="checkBoxText">The <see cref="T:System.String" /> to draw with the check box.</param>
      <param name="font">The <see cref="T:System.Drawing.Font" /> to apply to <paramref name="checkBoxText" />.</param>
      <param name="flags">A bitwise combination of the <see cref="T:System.Windows.Forms.TextFormatFlags" /> values.</param>
      <param name="focused">true to draw a focus rectangle; otherwise, false.</param>
      <param name="state">One of the <see cref="T:System.Windows.Forms.VisualStyles.CheckBoxState" /> values that specifies the visual state of the check box.</param>
    </member>
    <member name="M:System.Windows.Forms.CheckBoxRenderer.DrawCheckBox(System.Drawing.Graphics,System.Drawing.Point,System.Drawing.Rectangle,System.String,System.Drawing.Font,System.Windows.Forms.TextFormatFlags,System.Drawing.Image,System.Drawing.Rectangle,System.Boolean,System.Windows.Forms.VisualStyles.CheckBoxState)">
      <summary>Draws a check box control in the specified state and location; with the specified text, text formatting, and image; and with an optional focus rectangle.</summary>
      <param name="g">The <see cref="T:System.Drawing.Graphics" /> used to draw the check box.</param>
      <param name="glyphLocation">The <see cref="T:System.Drawing.Point" /> to draw the check box glyph at.</param>
      <param name="textBounds">The <see cref="T:System.Drawing.Rectangle" /> to draw <paramref name="checkBoxText" /> in.</param>
      <param name="checkBoxText">The <see cref="T:System.String" /> to draw with the check box.</param>
      <param name="font">The <see cref="T:System.Drawing.Font" /> to apply to <paramref name="checkBoxText" />.</param>
      <param name="flags">A bitwise combination of the <see cref="T:System.Windows.Forms.TextFormatFlags" /> values.</param>
      <param name="image">The <see cref="T:System.Drawing.Image" /> to draw with the check box.</param>
      <param name="imageBounds">The <see cref="T:System.Drawing.Rectangle" /> that represents the dimensions of <paramref name="image" />.</param>
      <param name="focused">true to draw a focus rectangle; otherwise, false.</param>
      <param name="state">One of the <see cref="T:System.Windows.Forms.VisualStyles.CheckBoxState" /> values that specifies the visual state of the check box.</param>
    </member>
    <member name="M:System.Windows.Forms.CheckBoxRenderer.DrawCheckBox(System.Drawing.Graphics,System.Drawing.Point,System.Windows.Forms.VisualStyles.CheckBoxState)">
      <summary>Draws a check box control in the specified state and location.</summary>
      <param name="g">The <see cref="T:System.Drawing.Graphics" /> used to draw the check box.</param>
      <param name="glyphLocation">The <see cref="T:System.Drawing.Point" /> to draw the check box glyph at.</param>
      <param name="state">One of the <see cref="T:System.Windows.Forms.VisualStyles.CheckBoxState" /> values that specifies the visual state of the check box.</param>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:System.Windows.Forms.CheckBoxRenderer.DrawParentBackground(System.Drawing.Graphics,System.Drawing.Rectangle,System.Windows.Forms.Control)">
      <summary>Draws the background of a control's parent in the specified area.</summary>
      <param name="g">The <see cref="T:System.Drawing.Graphics" /> used to draw the background of the parent of <paramref name="childControl" />. </param>
      <param name="bounds">The <see cref="T:System.Drawing.Rectangle" /> in which to draw the parent control's background. This rectangle should be inside the child controlâs bounds.</param>
      <param name="childControl">The control whose parent's background will be drawn.</param>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
        <IPermission class="System.Diagnostics.PerformanceCounterPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:System.Windows.Forms.CheckBoxRenderer.GetGlyphSize(System.Drawing.Graphics,System.Windows.Forms.VisualStyles.CheckBoxState)">
      <summary>Returns the size of the check box glyph.</summary>
      <returns>A <see cref="T:System.Drawing.Size" /> that represents the size of the check box glyph.</returns>
      <param name="g">The <see cref="T:System.Drawing.Graphics" /> this operation will use.</param>
      <param name="state">One of the <see cref="T:System.Windows.Forms.VisualStyles.CheckBoxState" /> values that specifies the visual state of the check box.</param>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:System.Windows.Forms.CheckBoxRenderer.IsBackgroundPartiallyTransparent(System.Windows.Forms.VisualStyles.CheckBoxState)">
      <summary>Indicates whether the background of the check box has semitransparent or alpha-blended pieces.</summary>
      <returns>true if the background of the check box has semitransparent or alpha-blended pieces; otherwise, false.</returns>
      <param name="state">One of the <see cref="T:System.Windows.Forms.VisualStyles.CheckBoxState" /> values that specifies the visual state of the check box.</param>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="P:System.Windows.Forms.CheckBoxRenderer.RenderMatchingApplicationState">
      <summary>Gets or sets a value indicating whether the renderer uses the application state to determine rendering style.</summary>
      <returns>true if the application state is used to determine rendering style; otherwise, false. The default is true.</returns>
    </member>
    <member name="T:System.Windows.Forms.CheckedListBox">
      <summary>Displays a <see cref="T:System.Windows.Forms.ListBox" /> in which a check box is displayed to the left of each item.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Windows.Forms.CheckedListBox.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Forms.CheckedListBox" /> class.</summary>
    </member>
    <member name="P:System.Windows.Forms.CheckedListBox.CheckedIndices">
      <summary>Collection of checked indexes in this <see cref="T:System.Windows.Forms.CheckedListBox" />.</summary>
      <returns>The <see cref="T:System.Windows.Forms.CheckedListBox.CheckedIndexCollection" /> collection for the <see cref="T:System.Windows.Forms.CheckedListBox" />.</returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="P:System.Windows.Forms.CheckedListBox.CheckedItems">
      <summary>Collection of checked items in this <see cref="T:System.Windows.Forms.CheckedListBox" />.</summary>
      <returns>The <see cref="T:System.Windows.Forms.CheckedListBox.CheckedItemCollection" /> collection for the <see cref="T:System.Windows.Forms.CheckedListBox" />.</returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="P:System.Windows.Forms.CheckedListBox.CheckOnClick">
      <summary>Gets or sets a value indicating whether the check box should be toggled when an item is selected.</summary>
      <returns>true if the check mark is applied immediately; otherwise, false. The default is false.</returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="E:System.Windows.Forms.CheckedListBox.Click">
      <summary>Occurs when the user clicks the <see cref="T:System.Windows.Forms.CheckedListBox" /> control.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Windows.Forms.CheckedListBox.CreateAccessibilityInstance">
      <summary>Creates a new accessibility object for the <see cref="T:System.Windows.Forms.CheckedListBox" /> control.</summary>
      <returns>A new <see cref="T:System.Windows.Forms.AccessibleObject" /> for the control.</returns>
    </member>
    <member name="M:System.Windows.Forms.CheckedListBox.CreateItemCollection">
      <returns>A <see cref="T:System.Windows.Forms.ListBox.ObjectCollection" /> that represents the new item collection.</returns>
    </member>
    <member name="P:System.Windows.Forms.CheckedListBox.CreateParams">
      <summary>Gets the required creation parameters when the control handle is created.</summary>
      <returns>A <see cref="T:System.Windows.Forms.CreateParams" /> that contains the required parameters.</returns>
    </member>
    <member name="P:System.Windows.Forms.CheckedListBox.DataSource">
      <summary>Gets or sets the data source for the control. This property is not relevant for this class.</summary>
      <returns>An object representing the source of the data.</returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="E:System.Windows.Forms.CheckedListBox.DataSourceChanged">
      <summary>Occurs when the <see cref="P:System.Windows.Forms.CheckedListBox.DataSource" /> property changes. This event is not relevant to this class.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="P:System.Windows.Forms.CheckedListBox.DisplayMember">
      <summary>Gets or sets a string that specifies a property of the objects contained in the list box whose contents you want to display.</summary>
      <returns>A string that specifies the name of a property of the objects contained in the list box. The default is an empty string ("").</returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="E:System.Windows.Forms.CheckedListBox.DisplayMemberChanged">
      <summary>Occurs when the <see cref="P:System.Windows.Forms.CheckedListBox.DisplayMember" /> property changes. This event is not relevant to this class.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="E:System.Windows.Forms.CheckedListBox.DrawItem">
      <summary>Occurs when a visual aspect of an owner-drawn <see cref="T:System.Windows.Forms.CheckedListBox" /> changes. This event is not relevant to this class.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="P:System.Windows.Forms.CheckedListBox.DrawMode">
      <summary>Gets a value indicating the mode for drawing elements of the <see cref="T:System.Windows.Forms.CheckedListBox" />. This property is not relevant to this class.</summary>
      <returns>Always a <see cref="T:System.Windows.Forms.DrawMode" /> of Normal.</returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Windows.Forms.CheckedListBox.GetItemChecked(System.Int32)">
      <summary>Returns a value indicating whether the specified item is checked.</summary>
      <returns>true if the item is checked; otherwise, false.</returns>
      <param name="index">The index of the item. </param>
      <exception cref="T:System.ArgumentException">The <paramref name="index" /> specified is less than zero.-or- The <paramref name="index" /> specified is greater than or equal to the count of items in the list. </exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Windows.Forms.CheckedListBox.GetItemCheckState(System.Int32)">
      <summary>Returns a value indicating the check state of the current item.</summary>
      <returns>One of the <see cref="T:System.Windows.Forms.CheckState" /> values.</returns>
      <param name="index">The index of the item to get the checked value of. </param>
      <exception cref="T:System.ArgumentOutOfRangeException">The <paramref name="index" /> specified is less than zero.-or- The <paramref name="index" /> specified is greater than or equal to the count of items in the list. </exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="E:System.Windows.Forms.CheckedListBox.ItemCheck">
      <summary>Occurs when the checked state of an item changes.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="P:System.Windows.Forms.CheckedListBox.ItemHeight">
      <summary>Gets the height of the item area.</summary>
      <returns>The height, in pixels, of the item area.</returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="P:System.Windows.Forms.CheckedListBox.Items">
      <summary>Gets the collection of items in this <see cref="T:System.Windows.Forms.CheckedListBox" />.</summary>
      <returns>The <see cref="T:System.Windows.Forms.CheckedListBox.ObjectCollection" /> collection representing the items in the <see cref="T:System.Windows.Forms.CheckedListBox" />.</returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="E:System.Windows.Forms.CheckedListBox.MeasureItem">
      <summary>Occurs when an owner-drawn <see cref="T:System.Windows.Forms.ListBox" /> is created and the sizes of the list items are determined. This event is not relevant to this class.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="E:System.Windows.Forms.CheckedListBox.MouseClick">
      <summary>Occurs when the user clicks the <see cref="T:System.Windows.Forms.CheckedListBox" /> control with the mouse.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Windows.Forms.CheckedListBox.OnBackColorChanged(System.EventArgs)">
      <param name="e">An <see cref="T:System.EventArgs" /> that contains the event data. </param>
    </member>
    <member name="M:System.Windows.Forms.CheckedListBox.OnClick(System.EventArgs)">
      <summary>Raises the <see cref="E:System.Windows.Forms.CheckedListBox.Click" /> event.</summary>
      <param name="e">An <see cref="T:System.EventArgs" /> that contains the event data.</param>
    </member>
    <member name="M:System.Windows.Forms.CheckedListBox.OnDrawItem(System.Windows.Forms.DrawItemEventArgs)">
      <summary>Raises the <see cref="E:System.Windows.Forms.CheckedListBox.DrawItem" /> event.</summary>
      <param name="e">The <see cref="T:System.Windows.Forms.DrawItemEventArgs" /> object with the details </param>
    </member>
    <member name="M:System.Windows.Forms.CheckedListBox.OnFontChanged(System.EventArgs)">
      <summary>Raises the <see cref="E:System.Windows.Forms.Control.FontChanged" /> event.</summary>
      <param name="e">An <see cref="T:System.EventArgs" /> that contains the event data. </param>
    </member>
    <member name="M:System.Windows.Forms.CheckedListBox.OnHandleCreated(System.EventArgs)">
      <summary>Raises the <see cref="E:System.Windows.Forms.Control.HandleCreated" /> event.</summary>
      <param name="e">An <see cref="T:System.EventArgs" /> that contains the event data. </param>
    </member>
    <member name="M:System.Windows.Forms.CheckedListBox.OnItemCheck(System.Windows.Forms.ItemCheckEventArgs)">
      <summary>Raises the <see cref="E:System.Windows.Forms.CheckedListBox.ItemCheck" /> event.</summary>
      <param name="ice">An <see cref="T:System.Windows.Forms.ItemCheckEventArgs" /> that contains the event data.</param>
    </member>
    <member name="M:System.Windows.Forms.CheckedListBox.OnKeyPress(System.Windows.Forms.KeyPressEventArgs)">
      <summary>Raises the <see cref="E:System.Windows.Forms.Control.KeyPress" /> event.</summary>
      <param name="e">The <see cref="T:System.Windows.Forms.KeyPressEventArgs" /> that was raised. </param>
    </member>
    <member name="M:System.Windows.Forms.CheckedListBox.OnMeasureItem(System.Windows.Forms.MeasureItemEventArgs)">
      <summary>Raises the <see cref="E:System.Windows.Forms.CheckedListBox.MeasureItem" /> event.</summary>
      <param name="e">A <see cref="T:System.Windows.Forms.MeasureItemEventArgs" /> that contains the event data. </param>
    </member>
    <member name="M:System.Windows.Forms.CheckedListBox.OnSelectedIndexChanged(System.EventArgs)">
      <summary>Raises the <see cref="E:System.Windows.Forms.ListBox.SelectedIndexChanged" /> event.</summary>
      <param name="e">An <see cref="T:System.EventArgs" /> that contains the event data. </param>
    </member>
    <member name="P:System.Windows.Forms.CheckedListBox.Padding">
      <summary>Gets or sets padding within the <see cref="T:System.Windows.Forms.CheckedListBox" />. This property is not relevant to this class.</summary>
      <returns>A <see cref="T:System.Windows.Forms.Padding" /> representing the control's internal spacing characteristics.</returns>
    </member>
    <member name="M:System.Windows.Forms.CheckedListBox.RefreshItems">
      <summary>Parses all <see cref="T:System.Windows.Forms.CheckedListBox" /> items again and gets new text strings for the items.</summary>
    </member>
    <member name="P:System.Windows.Forms.CheckedListBox.SelectionMode">
      <summary>Gets or sets a value specifying the selection mode.</summary>
      <returns>Either the One or None value of <see cref="T:System.Windows.Forms.SelectionMode" />.</returns>
      <exception cref="T:System.ArgumentException">An attempt was made to assign a value that is not a <see cref="T:System.Windows.Forms.SelectionMode" /> value of One or None. </exception>
      <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">An attempt was made to assign the MultiExtended value of <see cref="T:System.Windows.Forms.SelectionMode" /> to the control.</exception>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
        <IPermission class="System.Diagnostics.PerformanceCounterPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:System.Windows.Forms.CheckedListBox.SetItemChecked(System.Int32,System.Boolean)">
      <summary>Sets <see cref="T:System.Windows.Forms.CheckState" /> for the item at the specified index to Checked.</summary>
      <param name="index">The index of the item to set the check state for. </param>
      <param name="value">true to set the item as checked; otherwise, false. </param>
      <exception cref="T:System.ArgumentException">The index specified is less than zero.-or- The index is greater than the count of items in the list. </exception>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
        <IPermission class="System.Diagnostics.PerformanceCounterPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:System.Windows.Forms.CheckedListBox.SetItemCheckState(System.Int32,System.Windows.Forms.CheckState)">
      <summary>Sets the check state of the item at the specified index.</summary>
      <param name="index">The index of the item to set the state for. </param>
      <param name="value">One of the <see cref="T:System.Windows.Forms.CheckState" /> values. </param>
      <exception cref="T:System.ArgumentOutOfRangeException">The <paramref name="index" /> specified is less than zero.-or- The <paramref name="index" /> is greater than or equal to the count of items in the list. </exception>
      <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">The <paramref name="value" /> is not one of the <see cref="T:System.Windows.Forms.CheckState" /> values. </exception>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
        <IPermission class="System.Diagnostics.PerformanceCounterPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="P:System.Windows.Forms.CheckedListBox.ThreeDCheckBoxes">
      <summary>Gets or sets a value indicating whether the check boxes have a <see cref="T:System.Windows.Forms.ButtonState" /> of Flat or Normal.</summary>
      <returns>true if the check box has a flat appearance; otherwise, false. The default is true.</returns>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="P:System.Windows.Forms.CheckedListBox.UseCompatibleTextRendering">
      <summary>Gets or sets a value that determines whether to use the <see cref="T:System.Drawing.Graphics" /> class (GDI+) or the <see cref="T:System.Windows.Forms.TextRenderer" /> class (GDI) to render text.</summary>
      <returns>true if the <see cref="T:System.Drawing.Graphics" /> class should be used to perform text rendering for compatibility with versions 1.0 and 1.1. of the .NET Framework; otherwise, false. The default is false.</returns>
    </member>
    <member name="P:System.Windows.Forms.CheckedListBox.ValueMember">
      <summary>Gets or sets a string that specifies the property of the data source from which to draw the value. This property is not relevant to this class.</summary>
      <returns>A string that specifies the property of the data source from which to draw the value.</returns>
      <exception cref="T:System.ArgumentException">The specified property cannot be found on the object specified by the <see cref="P:System.Windows.Forms.CheckedListBox.DataSource" /> property.</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="E:System.Windows.Forms.CheckedListBox.ValueMemberChanged">
      <summary>Occurs when the <see cref="P:System.Windows.Forms.CheckedListBox.ValueMember" /> property changes. This event is not relevant to this class.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Windows.Forms.CheckedListBox.WmReflectCommand(System.Windows.Forms.Message@)">
      <summary>Processes the command message the <see cref="T:System.Windows.Forms.CheckedListBox" /> control receives from the top-level window.</summary>
      <param name="m">The <see cref="T:System.Windows.Forms.Message" /> the top-level window sent to the <see cref="T:System.Windows.Forms.CheckedListBox" /> control.</param>
    </member>
    <member name="M:System.Windows.Forms.CheckedListBox.WndProc(System.Windows.Forms.Message@)">
      <summary>Processes Windows messages.</summary>
      <param name="m">The Windows <see cref="T:System.Windows.Forms.Message" /> to process.</param>
    </member>
    <member name="T:System.Windows.Forms.CheckedListBox.CheckedIndexCollection">
      <summary>Encapsulates the collection of indexes of checked items (including items in an indeterminate state) in a <see cref="T:System.Windows.Forms.CheckedListBox" />.</summary>
    </member>
    <member name="M:System.Windows.Forms.CheckedListBox.CheckedIndexCollection.Contains(System.Int32)">
      <summary>Determines whether the specified index is located in the collection.</summary>
      <returns>true if the specified index from the <see cref="T:System.Windows.Forms.CheckedListBox.ObjectCollection" /> is an item in this collection; otherwise, false.</returns>
      <param name="index">The index to locate in the collection. </param>
    </member>
    <member name="M:System.Windows.Forms.CheckedListBox.CheckedIndexCollection.CopyTo(System.Array,System.Int32)">
      <summary>Copies the entire collection into an existing array at a specified location within the array.</summary>
      <param name="dest">The destination array. </param>
      <param name="index">The zero-based relative index in <paramref name="dest" /> at which copying begins. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="array" /> is null. </exception>
      <exception cref="T:System.RankException">
        <paramref name="array" /> is multidimensional. </exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> is less than zero. </exception>
      <exception cref="T:System.ArgumentException">The number of elements in the source <see cref="T:System.Array" /> is greater than the available space from index to the end of the destination <see cref="T:System.Array" />. </exception>
      <exception cref="T:System.ArrayTypeMismatchException">The type of the source <see cref="T:System.Array" /> cannot be cast automatically to the type of the destination <see cref="T:System.Array" />. </exception>
    </member>
    <member name="P:System.Windows.Forms.CheckedListBox.CheckedIndexCollection.Count">
      <summary>Gets the number of checked items.</summary>
      <returns>The number of indexes in the collection.</returns>
    </member>
    <member name="M:System.Windows.Forms.CheckedListBox.CheckedIndexCollection.GetEnumerator">
      <summary>Returns an enumerator that can be used to iterate through the <see cref="P:System.Windows.Forms.CheckedListBox.CheckedIndices" /> collection.</summary>
      <returns>An <see cref="T:System.Collections.IEnumerator" /> for navigating through the list.</returns>
    </member>
    <member name="M:System.Windows.Forms.CheckedListBox.CheckedIndexCollection.IndexOf(System.Int32)">
      <summary>Returns an index into the collection of checked indexes.</summary>
      <returns>The index that specifies the index of the checked item or -1 if the <paramref name="index" /> parameter is not in the checked indexes collection. For more information, see the examples in the <see cref="T:System.Windows.Forms.CheckedListBox.CheckedIndexCollection" /> class overview.</returns>
      <param name="index">The index of the checked item. </param>
    </member>
    <member name="P:System.Windows.Forms.CheckedListBox.CheckedIndexCollection.IsReadOnly">
      <summary>Gets a value indicating whether the collection is read-only.</summary>
      <returns>true in all cases.</returns>
    </member>
    <member name="P:System.Windows.Forms.CheckedListBox.CheckedIndexCollection.Item(System.Int32)">
      <summary>Gets the index of a checked item in the <see cref="T:System.Windows.Forms.CheckedListBox" /> control.</summary>
      <returns>The index of the checked item. For more information, see the examples in the <see cref="T:System.Windows.Forms.CheckedListBox.CheckedIndexCollection" /> class overview.</returns>
      <param name="index">An index into the checked indexes collection. This index specifies the index of the checked item you want to retrieve. </param>
      <exception cref="T:System.ArgumentException">The <paramref name="index" /> is less than zero.-or- The <paramref name="index" /> is not in the collection. </exception>
    </member>
    <member name="P:System.Windows.Forms.CheckedListBox.CheckedIndexCollection.System#Collections#ICollection#IsSynchronized">
      <summary>Gets a value indicating whether access to the <see cref="T:System.Windows.Forms.CheckedListBox.CheckedIndexCollection" /> is synchronized (thread safe).</summary>
      <returns>false in all cases.</returns>
    </member>
    <member name="P:System.Windows.Forms.CheckedListBox.CheckedIndexCollection.System#Collections#ICollection#SyncRoot">
      <summary>Gets an object that can be used to synchronize access to the collection of controls. For a description of this member, see <see cref="P:System.Collections.ICollection.SyncRoot" />.</summary>
      <returns>The <see cref="T:System.Object" /> used to synchronize to the collection.</returns>
    </member>
    <member name="M:System.Windows.Forms.CheckedListBox.CheckedIndexCollection.System#Collections#IList#Add(System.Object)">
      <summary>Adds an item to the <see cref="T:System.Windows.Forms.CheckedListBox.CheckedIndexCollection" />. For a description of this member, see <see cref="M:System.Collections.IList.Add(System.Object)" />.</summary>
      <param name="value">The object to be added to the <see cref="T:System.Windows.Forms.CheckedListBox.CheckedIndexCollection" />.</param>
      <exception cref="T:System.NotSupportedException">Always thrown.</exception>
    </member>
    <member name="M:System.Windows.Forms.CheckedListBox.CheckedIndexCollection.System#Collections#IList#Clear">
      <summary>Removes all items from the <see cref="T:System.Windows.Forms.CheckedListBox.CheckedIndexCollection" />. For a description of this member, see <see cref="M:System.Collections.IList.Clear" />.</summary>
      <exception cref="T:System.NotSupportedException">Always thrown.</exception>
    </member>
    <member name="M:System.Windows.Forms.CheckedListBox.CheckedIndexCollection.System#Collections#IList#Contains(System.Object)">
      <summary>Determines whether the specified index is located within the <see cref="T:System.Windows.Forms.CheckedListBox.CheckedIndexCollection" />. For a description of this member, see <see cref="M:System.Collections.IList.Contains(System.Object)" />.</summary>
      <returns>true if the specified index from the <see cref="T:System.Windows.Forms.CheckedListBox.ObjectCollection" /> for the <see cref="T:System.Windows.Forms.CheckedListBox" /> is an item in this collection; otherwise, false.</returns>
      <param name="index">The index to locate in the collection.</param>
    </member>
    <member name="M:System.Windows.Forms.CheckedListBox.CheckedIndexCollection.System#Collections#IList#IndexOf(System.Object)">
      <summary>For a description of this member, see <see cref="M:System.Collections.IList.IndexOf(System.Object)" />.</summary>
      <returns>This member is an explicit interface member implementation. It can be used only when the <see cref="T:System.Windows.Forms.CheckedListBox.CheckedIndexCollection" /> instance is cast to an <see cref="T:System.Collections.IList" /> interface.</returns>
      <param name="index">The zero-based index from the <see cref="T:System.Windows.Forms.CheckedListBox.ObjectCollection" /> to locate in this collection.</param>
    </member>
    <member name="M:System.Windows.Forms.CheckedListBox.CheckedIndexCollection.System#Collections#IList#Insert(System.Int32,System.Object)">
      <summary>For a description of this member, see <see cref="M:System.Collections.IList.Insert(System.Int32,System.Object)" />.</summary>
      <param name="index">The index at which value should be inserted.</param>
      <param name="value">The object to be added to the <see cref="T:System.Windows.Forms.CheckedListBox.CheckedIndexCollection" />.</param>
      <exception cref="T:System.NotSupportedException">Always thrown.</exception>
    </member>
    <member name="P:System.Windows.Forms.CheckedListBox.CheckedIndexCollection.System#Collections#IList#IsFixedSize">
      <summary>For a description of this member, see <see cref="P:System.Collections.IList.IsFixedSize" />.</summary>
      <returns>true in all cases.</returns>
    </member>
    <member name="P:System.Windows.Forms.CheckedListBox.CheckedIndexCollection.System#Collections#IList#Item(System.Int32)">
      <summary>For a description of this member, see <see cref="P:System.Collections.IList.Item(System.Int32)" />.</summary>
      <returns>The index value from the <see cref="T:System.Windows.Forms.CheckedListBox.ObjectCollection" /> that is stored at the specified location.</returns>
      <param name="index">The zero-based index of the item to get.</param>
    </member>
    <member name="M:System.Windows.Forms.CheckedListBox.CheckedIndexCollection.System#Collections#IList#Remove(System.Object)">
      <summary>For a description of this member, see <see cref="M:System.Collections.IList.Remove(System.Object)" />.</summary>
      <param name="value">The object to be removed from the <see cref="T:System.Windows.Forms.CheckedListBox.CheckedIndexCollection" />.</param>
      <exception cref="T:System.NotSupportedException">Always thrown.</exception>
    </member>
    <member name="M:System.Windows.Forms.CheckedListBox.CheckedIndexCollection.System#Collections#IList#RemoveAt(System.Int32)">
      <summary>or a description of this member, see <see cref="M:System.Collections.IList.RemoveAt(System.Int32)" />.</summary>
      <param name="index">The zero-based index of the item to remove.</param>
      <exception cref="T:System.NotSupportedException">Always thrown.</exception>
    </member>
    <member name="T:System.Windows.Forms.CheckedListBox.CheckedItemCollection">
      <summary>Encapsulates the collection of checked items, including items in an indeterminate state, in a <see cref="T:System.Windows.Forms.CheckedListBox" /> control.</summary>
    </member>
    <member name="M:System.Windows.Forms.CheckedListBox.CheckedItemCollection.Contains(System.Object)">
      <summary>Determines whether the specified item is located in the collection.</summary>
      <returns>true if item is in the collection; otherwise, false.</returns>
      <param name="item">An object from the items collection. </param>
    </member>
    <member name="M:System.Windows.Forms.CheckedListBox.CheckedItemCollection.CopyTo(System.Array,System.Int32)">
      <summary>Copies the entire collection into an existing array at a specified location within the array.</summary>
      <param name="dest">The destination array. </param>
      <param name="index">The zero-based relative index in <paramref name="dest" /> at which copying begins. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="array" /> is null. </exception>
      <exception cref="T:System.RankException">
        <paramref name="array" /> is multidimensional. </exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> is less than zero. </exception>
      <exception cref="T:System.ArgumentException">The number of elements in the source <see cref="T:System.Array" /> is greater than the available space from index to the end of the destination <see cref="T:System.Array" />. </exception>
      <exception cref="T:System.ArrayTypeMismatchException">The type of the source <see cref="T:System.Array" /> cannot be cast automatically to the type of the destination <see cref="T:System.Array" />. </exception>
    </member>
    <member name="P:System.Windows.Forms.CheckedListBox.CheckedItemCollection.Count">
      <summary>Gets the number of items in the collection.</summary>
      <returns>The number of items in the collection.</returns>
    </member>
    <member name="M:System.Windows.Forms.CheckedListBox.CheckedItemCollection.GetEnumerator">
      <summary>Returns an enumerator that can be used to iterate through the <see cref="P:System.Windows.Forms.CheckedListBox.CheckedItems" /> collection.</summary>
      <returns>An <see cref="T:System.Collections.IEnumerator" /> for navigating through the list.</returns>
    </member>
    <member name="M:System.Windows.Forms.CheckedListBox.CheckedItemCollection.IndexOf(System.Object)">
      <summary>Returns an index into the collection of checked items.</summary>
      <returns>The index of the object in the checked item collection or -1 if the object is not in the collection. For more information, see the examples in the <see cref="T:System.Windows.Forms.CheckedListBox.CheckedItemCollection" /> class overview.</returns>
      <param name="item">The object whose index you want to retrieve. This object must belong to the checked items collection. </param>
    </member>
    <member name="P:System.Windows.Forms.CheckedListBox.CheckedItemCollection.IsReadOnly">
      <summary>Gets a value indicating if the collection is read-only.</summary>
      <returns>Always true.</returns>
    </member>
    <member name="P:System.Windows.Forms.CheckedListBox.CheckedItemCollection.Item(System.Int32)">
      <summary>Gets an object in the checked items collection.</summary>
      <returns>The object at the specified index. For more information, see the examples in the <see cref="T:System.Windows.Forms.CheckedListBox.CheckedItemCollection" /> class overview.</returns>
      <param name="index">An index into the collection of checked items. This collection index corresponds to the index of the checked item. </param>
      <exception cref="T:System.NotSupportedException">The object cannot be set.</exception>
    </member>
    <member name="P:System.Windows.Forms.CheckedListBox.CheckedItemCollection.System#Collections#ICollection#IsSynchronized">
      <summary>For a description of this member, see <see cref="P:System.Collections.ICollection.IsSynchronized" />.</summary>
      <returns>false in all cases.</returns>
    </member>
    <member name="P:System.Windows.Forms.CheckedListBox.CheckedItemCollection.System#Collections#ICollection#SyncRoot">
      <summary>For a description of this member, see <see cref="P:System.Collections.ICollection.SyncRoot" />.</summary>
      <returns>The <see cref="T:System.Object" /> used to synchronize to the collection.</returns>
    </member>
    <member name="M:System.Windows.Forms.CheckedListBox.CheckedItemCollection.System#Collections#IList#Add(System.Object)">
      <summary>For a description of this member, see <see cref="M:System.Collections.IList.Add(System.Object)" />.</summary>
      <returns>The zero-based index of the item to add.</returns>
      <param name="value">The <see cref="T:System.Object" /> to add to the <see cref="T:System.Collections.IList" />.</param>
    </member>
    <member name="M:System.Windows.Forms.CheckedListBox.CheckedItemCollection.System#Collections#IList#Clear">
      <summary>For a description of this member, see <see cref="M:System.Collections.IList.Clear" />.</summary>
    </member>
    <member name="M:System.Windows.Forms.CheckedListBox.CheckedItemCollection.System#Collections#IList#Insert(System.Int32,System.Object)">
      <summary>For a description of this member, see <see cref="M:System.Collections.IList.Insert(System.Int32,System.Object)" />.</summary>
      <param name="index">The zero-based index at which <paramref name="value" /> should be inserted.</param>
      <param name="value">The item to insert into the <see cref="T:System.Windows.Forms.CheckedListBox.CheckedItemCollection" />.</param>
    </member>
    <member name="P:System.Windows.Forms.CheckedListBox.CheckedItemCollection.System#Collections#IList#IsFixedSize">
      <summary>For a description of this member, see <see cref="P:System.Collections.IList.IsFixedSize" />.</summary>
      <returns>false in all cases.</returns>
    </member>
    <member name="M:System.Windows.Forms.CheckedListBox.CheckedItemCollection.System#Collections#IList#Remove(System.Object)">
      <summary>For a description of this member, see <see cref="M:System.Collections.IList.Remove(System.Object)" />.</summary>
      <param name="value">The item to remove from the <see cref="T:System.Windows.Forms.CheckedListBox.CheckedItemCollection" />.</param>
    </member>
    <member name="M:System.Windows.Forms.CheckedListBox.CheckedItemCollection.System#Collections#IList#RemoveAt(System.Int32)">
      <summary>For a description of this member, see <see cref="M:System.Collections.IList.RemoveAt(System.Int32)" />.</summary>
      <param name="index">The zero-based index of the item to remove.</param>
    </member>
    <member name="T:System.Windows.Forms.CheckedListBox.ObjectCollection">
      <summary>Represents the collection of items in a <see cref="T:System.Windows.Forms.CheckedListBox" />.</summary>
    </member>
    <member name="M:System.Windows.Forms.CheckedListBox.ObjectCollection.#ctor(System.Windows.Forms.CheckedListBox)">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Forms.CheckedListBox.ObjectCollection" /> class.</summary>
      <param name="owner">The <see cref="T:System.Windows.Forms.CheckedListBox" /> that owns the collection. </param>
    </member>
    <member name="M:System.Windows.Forms.CheckedListBox.ObjectCollection.Add(System.Object,System.Boolean)">
      <summary>Adds an item to the list of items for a <see cref="T:System.Windows.Forms.CheckedListBox" />, specifying the object to add and whether it is checked.</summary>
      <returns>The index of the newly added item.</returns>
      <param name="item">An object representing the item to add to the collection. </param>
      <param name="isChecked">true to check the item; otherwise, false. </param>
    </member>
    <member name="M:System.Windows.Forms.CheckedListBox.ObjectCollection.Add(System.Object,System.Windows.Forms.CheckState)">
      <summary>Adds an item to the list of items for a <see cref="T:System.Windows.Forms.CheckedListBox" />, specifying the object to add and the initial checked value.</summary>
      <returns>The index of the newly added item.</returns>
      <param name="item">An object representing the item to add to the collection. </param>
      <param name="check">The initial <see cref="T:System.Windows.Forms.CheckState" /> for the checked portion of the item. </param>
      <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">The <paramref name="check" /> parameter is not one of the valid <see cref="T:System.Windows.Forms.CheckState" /> values. </exception>
    </member>
    <member name="T:System.Windows.Forms.CheckState">
      <summary>Specifies the state of a control, such as a check box, that can be checked, unchecked, or set to an indeterminate state.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="F:System.Windows.Forms.CheckState.Unchecked">
      <summary>The control is unchecked.</summary>
    </member>
    <member name="F:System.Windows.Forms.CheckState.Checked">
      <summary>The control is checked.</summary>
    </member>
    <member name="F:System.Windows.Forms.CheckState.Indeterminate">
      <summary>The control is indeterminate. An indeterminate control generally has a shaded appearance.</summary>
    </member>
    <member name="T:System.Windows.Forms.Clipboard">
      <summary>Provides methods to place data on and retrieve data from the system Clipboard. This class cannot be inherited.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Windows.Forms.Clipboard.Clear">
      <summary>Removes all data from the Clipboard.</summary>
      <exception cref="T:System.Runtime.InteropServices.ExternalException">The Clipboard could not be cleared. This typically occurs when the Clipboard is being used by another process.</exception>
      <exception cref="T:System.Threading.ThreadStateException">The current thread is not in single-threaded apartment (STA) mode. Add the <see cref="T:System.STAThreadAttribute" /> to your application's Main method.</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Windows.Forms.Clipboard.ContainsAudio">
      <summary>Indicates whether there is data on the Clipboard in the <see cref="F:System.Windows.Forms.DataFormats.WaveAudio" /> format.</summary>
      <returns>true if there is audio data on the Clipboard; otherwise, false.</returns>
      <exception cref="T:System.Runtime.InteropServices.ExternalException">The Clipboard could not be cleared. This typically occurs when the Clipboard is being used by another process.</exception>
      <exception cref="T:System.Threading.ThreadStateException">The current thread is not in single-threaded apartment (STA) mode. Add the <see cref="T:System.STAThreadAttribute" /> to your application's Main method.</exception>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
        <IPermission class="System.Diagnostics.PerformanceCounterPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:System.Windows.Forms.Clipboard.ContainsData(System.String)">
      <summary>Indicates whether there is data on the Clipboard that is in the specified format or can be converted to that format. </summary>
      <returns>true if there is data on the Clipboard that is in the specified <paramref name="format" /> or can be converted to that format; otherwise, false.</returns>
      <param name="format">The format of the data to look for. See <see cref="T:System.Windows.Forms.DataFormats" /> for predefined formats.</param>
      <exception cref="T:System.Runtime.InteropServices.ExternalException">The Clipboard could not be cleared. This typically occurs when the Clipboard is being used by another process.</exception>
      <exception cref="T:System.Threading.ThreadStateException">The current thread is not in single-threaded apartment (STA) mode. Add the <see cref="T:System.STAThreadAttribute" /> to your application's Main method.</exception>
    </member>
    <member name="M:System.Windows.Forms.Clipboard.ContainsFileDropList">
      <summary>Indicates whether there is data on the Clipboard that is in the <see cref="F:System.Windows.Forms.DataFormats.FileDrop" /> format or can be converted to that format.</summary>
      <returns>true if there is a file drop list on the Clipboard; otherwise, false.</returns>
      <exception cref="T:System.Runtime.InteropServices.ExternalException">The Clipboard could not be cleared. This typically occurs when the Clipboard is being used by another process.</exception>
      <exception cref="T:System.Threading.ThreadStateException">The current thread is not in single-threaded apartment (STA) mode. Add the <see cref="T:System.STAThreadAttribute" /> to your application's Main method.</exception>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
        <IPermission class="System.Diagnostics.PerformanceCounterPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:System.Windows.Forms.Clipboard.ContainsImage">
      <summary>Indicates whether there is data on the Clipboard that is in the <see cref="F:System.Windows.Forms.DataFormats.Bitmap" /> format or can be converted to that format.</summary>
      <returns>true if there is image data on the Clipboard; otherwise, false.</returns>
      <exception cref="T:System.Runtime.InteropServices.ExternalException">The Clipboard could not be cleared. This typically occurs when the Clipboard is being used by another process.</exception>
      <exception cref="T:System.Threading.ThreadStateException">The current thread is not in single-threaded apartment (STA) mode. Add the <see cref="T:System.STAThreadAttribute" /> to your application's Main method.</exception>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
        <IPermission class="System.Diagnostics.PerformanceCounterPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:System.Windows.Forms.Clipboard.ContainsText">
      <summary>Indicates whether there is data on the Clipboard in the <see cref="F:System.Windows.Forms.TextDataFormat.Text" /> or <see cref="F:System.Windows.Forms.TextDataFormat.UnicodeText" /> format, depending on the operating system.</summary>
      <returns>true if there is text data on the Clipboard; otherwise, false.</returns>
      <exception cref="T:System.Runtime.InteropServices.ExternalException">The Clipboard could not be cleared. This typically occurs when the Clipboard is being used by another process.</exception>
      <exception cref="T:System.Threading.ThreadStateException">The current thread is not in single-threaded apartment (STA) mode. Add the <see cref="T:System.STAThreadAttribute" /> to your application's Main method.</exception>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
        <IPermission class="System.Diagnostics.PerformanceCounterPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:System.Windows.Forms.Clipboard.ContainsText(System.Windows.Forms.TextDataFormat)">
      <summary>Indicates whether there is text data on the Clipboard in the format indicated by the specified <see cref="T:System.Windows.Forms.TextDataFormat" /> value.</summary>
      <returns>true if there is text data on the Clipboard in the value specified for <paramref name="format" />; otherwise, false.</returns>
      <param name="format">One of the <see cref="T:System.Windows.Forms.TextDataFormat" /> values.</param>
      <exception cref="T:System.Runtime.InteropServices.ExternalException">The Clipboard could not be cleared. This typically occurs when the Clipboard is being used by another process.</exception>
      <exception cref="T:System.Threading.ThreadStateException">The current thread is not in single-threaded apartment (STA) mode. Add the <see cref="T:System.STAThreadAttribute" /> to your application's Main method.</exception>
      <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">
        <paramref name="format" /> is not a valid <see cref="T:System.Windows.Forms.TextDataFormat" /> value.</exception>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
        <IPermission class="System.Diagnostics.PerformanceCounterPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:System.Windows.Forms.Clipboard.GetAudioStream">
      <summary>Retrieves an audio stream from the Clipboard.</summary>
      <returns>A <see cref="T:System.IO.Stream" /> containing audio data or null if the Clipboard does not contain any data in the <see cref="F:System.Windows.Forms.DataFormats.WaveAudio" /> format.</returns>
      <exception cref="T:System.Runtime.InteropServices.ExternalException">The Clipboard could not be cleared. This typically occurs when the Clipboard is being used by another process.</exception>
      <exception cref="T:System.Threading.ThreadStateException">The current thread is not in single-threaded apartment (STA) mode. Add the <see cref="T:System.STAThreadAttribute" /> to your application's Main method.</exception>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
        <IPermission class="System.Diagnostics.PerformanceCounterPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:System.Windows.Forms.Clipboard.GetData(System.String)">
      <summary>Retrieves data from the Clipboard in the specified format.</summary>
      <returns>An <see cref="T:System.Object" /> representing the Clipboard data or null if the Clipboard does not contain any data that is in the specified <paramref name="format" /> or can be converted to that format.</returns>
      <param name="format">The format of the data to retrieve. See <see cref="T:System.Windows.Forms.DataFormats" /> for predefined formats.</param>
      <exception cref="T:System.Runtime.InteropServices.ExternalException">The Clipboard could not be cleared. This typically occurs when the Clipboard is being used by another process.</exception>
      <exception cref="T:System.Threading.ThreadStateException">The current thread is not in single-threaded apartment (STA) mode. Add the <see cref="T:System.STAThreadAttribute" /> to your application's Main method.</exception>
    </member>
    <member name="M:System.Windows.Forms.Clipboard.GetDataObject">
      <summary>Retrieves the data that is currently on the system Clipboard.</summary>
      <returns>An <see cref="T:System.Windows.Forms.IDataObject" /> that represents the data currently on the Clipboard, or null if there is no data on the Clipboard.</returns>
      <exception cref="T:System.Runtime.InteropServices.ExternalException">Data could not be retrieved from the Clipboard. This typically occurs when the Clipboard is being used by another process.</exception>
      <exception cref="T:System.Threading.ThreadStateException">The current thread is not in single-threaded apartment (STA) mode and the <see cref="P:System.Windows.Forms.Application.MessageLoop" /> property value is true. Add the <see cref="T:System.STAThreadAttribute" /> to your application's Main method. </exception>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
        <IPermission class="System.Diagnostics.PerformanceCounterPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:System.Windows.Forms.Clipboard.GetFileDropList">
      <summary>Retrieves a collection of file names from the Clipboard. </summary>
      <returns>A <see cref="T:System.Collections.Specialized.StringCollection" /> containing file names or null if the Clipboard does not contain any data that is in the <see cref="F:System.Windows.Forms.DataFormats.FileDrop" /> format or can be converted to that format.</returns>
      <exception cref="T:System.Runtime.InteropServices.ExternalException">The Clipboard could not be cleared. This typically occurs when the Clipboard is being used by another process.</exception>
      <exception cref="T:System.Threading.ThreadStateException">The current thread is not in single-threaded apartment (STA) mode. Add the <see cref="T:System.STAThreadAttribute" /> to your application's Main method.</exception>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
        <IPermission class="System.Diagnostics.PerformanceCounterPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:System.Windows.Forms.Clipboard.GetImage">
      <summary>Retrieves an image from the Clipboard.</summary>
      <returns>An <see cref="T:System.Drawing.Image" /> representing the Clipboard image data or null if the Clipboard does not contain any data that is in the <see cref="F:System.Windows.Forms.DataFormats.Bitmap" /> format or can be converted to that format.</returns>
      <exception cref="T:System.Runtime.InteropServices.ExternalException">The Clipboard could not be cleared. This typically occurs when the Clipboard is being used by another process.</exception>
      <exception cref="T:System.Threading.ThreadStateException">The current thread is not in single-threaded apartment (STA) mode. Add the <see cref="T:System.STAThreadAttribute" /> to your application's Main method.</exception>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
        <IPermission class="System.Diagnostics.PerformanceCounterPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:System.Windows.Forms.Clipboard.GetText">
      <summary>Retrieves text data from the Clipboard in the <see cref="F:System.Windows.Forms.TextDataFormat.Text" /> or <see cref="F:System.Windows.Forms.TextDataFormat.UnicodeText" /> format, depending on the operating system.</summary>
      <returns>The Clipboard text data or <see cref="F:System.String.Empty" /> if the Clipboard does not contain data in the <see cref="F:System.Windows.Forms.TextDataFormat.Text" /> or <see cref="F:System.Windows.Forms.TextDataFormat.UnicodeText" /> format, depending on the operating system.</returns>
      <exception cref="T:System.Runtime.InteropServices.ExternalException">The Clipboard could not be cleared. This typically occurs when the Clipboard is being used by another process.</exception>
      <exception cref="T:System.Threading.ThreadStateException">The current thread is not in single-threaded apartment (STA) mode. Add the <see cref="T:System.STAThreadAttribute" /> to your application's Main method.</exception>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
        <IPermission class="System.Diagnostics.PerformanceCounterPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:System.Windows.Forms.Clipboard.GetText(System.Windows.Forms.TextDataFormat)">
      <summary>Retrieves text data from the Clipboard in the format indicated by the specified <see cref="T:System.Windows.Forms.TextDataFormat" /> value.</summary>
      <returns>The Clipboard text data or <see cref="F:System.String.Empty" /> if the Clipboard does not contain data in the specified format.</returns>
      <param name="format">One of the <see cref="T:System.Windows.Forms.TextDataFormat" /> values.</param>
      <exception cref="T:System.Runtime.InteropServices.ExternalException">The Clipboard could not be cleared. This typically occurs when the Clipboard is being used by another process.</exception>
      <exception cref="T:System.Threading.ThreadStateException">The current thread is not in single-threaded apartment (STA) mode. Add the <see cref="T:System.STAThreadAttribute" /> to your application's Main method.</exception>
      <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">
        <paramref name="format" /> is not a valid <see cref="T:System.Windows.Forms.TextDataFormat" /> value.</exception>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
        <IPermission class="System.Diagnostics.PerformanceCounterPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:System.Windows.Forms.Clipboard.SetAudio(System.Byte[])">
      <summary>Adds a <see cref="T:System.Byte" /> array to the Clipboard in the <see cref="F:System.Windows.Forms.DataFormats.WaveAudio" /> format after converting it to a <see cref="T:System.IO.Stream" />.</summary>
      <param name="audioBytes">A <see cref="T:System.Byte" /> array containing the audio data.</param>
      <exception cref="T:System.Runtime.InteropServices.ExternalException">The Clipboard could not be cleared. This typically occurs when the Clipboard is being used by another process.</exception>
      <exception cref="T:System.Threading.ThreadStateException">The current thread is not in single-threaded apartment (STA) mode. Add the <see cref="T:System.STAThreadAttribute" /> to your application's Main method.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="audioBytes" /> is null.</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Windows.Forms.Clipboard.SetAudio(System.IO.Stream)">
      <summary>Adds a <see cref="T:System.IO.Stream" /> to the Clipboard in the <see cref="F:System.Windows.Forms.DataFormats.WaveAudio" /> format.</summary>
      <param name="audioStream">A <see cref="T:System.IO.Stream" /> containing the audio data.</param>
      <exception cref="T:System.Runtime.InteropServices.ExternalException">The Clipboard could not be cleared. This typically occurs when the Clipboard is being used by another process.</exception>
      <exception cref="T:System.Threading.ThreadStateException">The current thread is not in single-threaded apartment (STA) mode. Add the <see cref="T:System.STAThreadAttribute" /> to your application's Main method.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="audioStream" /> is null.</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Windows.Forms.Clipboard.SetData(System.String,System.Object)">
      <summary>Adds data to the Clipboard in the specified format.</summary>
      <param name="format">The format of the data to set. See <see cref="T:System.Windows.Forms.DataFormats" /> for predefined formats.</param>
      <param name="data">An <see cref="T:System.Object" /> representing the data to add.</param>
      <exception cref="T:System.Runtime.InteropServices.ExternalException">The Clipboard could not be cleared. This typically occurs when the Clipboard is being used by another process.</exception>
      <exception cref="T:System.Threading.ThreadStateException">The current thread is not in single-threaded apartment (STA) mode. Add the <see cref="T:System.STAThreadAttribute" /> to your application's Main method.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="data" /> is null.</exception>
    </member>
    <member name="M:System.Windows.Forms.Clipboard.SetDataObject(System.Object)">
      <summary>Places nonpersistent data on the system Clipboard.</summary>
      <param name="data">The data to place on the Clipboard. </param>
      <exception cref="T:System.Runtime.InteropServices.ExternalException">Data could not be placed on the Clipboard. This typically occurs when the Clipboard is being used by another process.</exception>
      <exception cref="T:System.Threading.ThreadStateException">The current thread is not in single-threaded apartment (STA) mode. Add the <see cref="T:System.STAThreadAttribute" /> to your application's Main method.</exception>
      <exception cref="T:System.ArgumentNullException">The value of <paramref name="data" /> is null. </exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Windows.Forms.Clipboard.SetDataObject(System.Object,System.Boolean)">
      <summary>Places data on the system Clipboard and specifies whether the data should remain on the Clipboard after the application exits.</summary>
      <param name="data">The data to place on the Clipboard. </param>
      <param name="copy">true if you want data to remain on the Clipboard after this application exits; otherwise, false. </param>
      <exception cref="T:System.Runtime.InteropServices.ExternalException">Data could not be placed on the Clipboard. This typically occurs when the Clipboard is being used by another process.</exception>
      <exception cref="T:System.Threading.ThreadStateException">The current thread is not in single-threaded apartment (STA) mode. Add the <see cref="T:System.STAThreadAttribute" /> to your application's Main method.</exception>
      <exception cref="T:System.ArgumentNullException">The value of <paramref name="data" /> is null. </exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Windows.Forms.Clipboard.SetDataObject(System.Object,System.Boolean,System.Int32,System.Int32)">
      <summary>Attempts to place data on the system Clipboard the specified number of times and with the specified delay between attempts, optionally leaving the data on the Clipboard after the application exits.</summary>
      <param name="data">The data to place on the Clipboard.</param>
      <param name="copy">true if you want data to remain on the Clipboard after this application exits; otherwise, false.</param>
      <param name="retryTimes">The number of times to attempt placing the data on the Clipboard.</param>
      <param name="retryDelay">The number of milliseconds to pause between attempts. </param>
      <exception cref="T:System.Threading.ThreadStateException">The current thread is not in single-threaded apartment (STA) mode. Add the <see cref="T:System.STAThreadAttribute" /> to your application's Main method. </exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="data" /> is null.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="retryTimes" /> is less than zero.-or-<paramref name="retryDelay" /> is less than zero.</exception>
      <exception cref="T:System.Runtime.InteropServices.ExternalException">Data could not be placed on the Clipboard. This typically occurs when the Clipboard is being used by another process.</exception>
    </member>
    <member name="M:System.Windows.Forms.Clipboard.SetFileDropList(System.Collections.Specialized.StringCollection)">
      <summary>Adds a collection of file names to the Clipboard in the <see cref="F:System.Windows.Forms.DataFormats.FileDrop" /> format.</summary>
      <param name="filePaths">A <see cref="T:System.Collections.Specialized.StringCollection" /> containing the file names.</param>
      <exception cref="T:System.Runtime.InteropServices.ExternalException">The Clipboard could not be cleared. This typically occurs when the Clipboard is being used by another process.</exception>
      <exception cref="T:System.Threading.ThreadStateException">The current thread is not in single-threaded apartment (STA) mode. Add the <see cref="T:System.STAThreadAttribute" /> to your application's Main method.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="filePaths" /> is null.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="filePaths" /> does not contain any strings.-or-At least one of the strings in <paramref name="filePaths" /> is <see cref="F:System.String.Empty" />, contains only white space, contains one or more invalid characters as defined by <see cref="F:System.IO.Path.InvalidPathChars" />, is null, contains a colon (:), or exceeds the system-defined maximum length.See the <see cref="P:System.Exception.InnerException" /> property of the <see cref="T:System.ArgumentException" /> for more information.</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Windows.Forms.Clipboard.SetImage(System.Drawing.Image)">
      <summary>Adds an <see cref="T:System.Drawing.Image" /> to the Clipboard in the <see cref="F:System.Windows.Forms.DataFormats.Bitmap" /> format.</summary>
      <param name="image">The <see cref="T:System.Drawing.Image" /> to add to the Clipboard.</param>
      <exception cref="T:System.Runtime.InteropServices.ExternalException">The Clipboard could not be cleared. This typically occurs when the Clipboard is being used by another process.</exception>
      <exception cref="T:System.Threading.ThreadStateException">The current thread is not in single-threaded apartment (STA) mode. Add the <see cref="T:System.STAThreadAttribute" /> to your application's Main method.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="image" /> is null.</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Windows.Forms.Clipboard.SetText(System.String)">
      <summary>Adds text data to the Clipboard in the <see cref="F:System.Windows.Forms.TextDataFormat.Text" /> or <see cref="F:System.Windows.Forms.TextDataFormat.UnicodeText" /> format, depending on the operating system.</summary>
      <param name="text">The text to add to the Clipboard.</param>
      <exception cref="T:System.Runtime.InteropServices.ExternalException">The Clipboard could not be cleared. This typically occurs when the Clipboard is being used by another process.</exception>
      <exception cref="T:System.Threading.ThreadStateException">The current thread is not in single-threaded apartment (STA) mode. Add the <see cref="T:System.STAThreadAttribute" /> to your application's Main method.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="text" /> is null or <see cref="F:System.String.Empty" />.</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Windows.Forms.Clipboard.SetText(System.String,System.Windows.Forms.TextDataFormat)">
      <summary>Adds text data to the Clipboard in the format indicated by the specified <see cref="T:System.Windows.Forms.TextDataFormat" /> value.</summary>
      <param name="text">The text to add to the Clipboard.</param>
      <param name="format">One of the <see cref="T:System.Windows.Forms.TextDataFormat" /> values.</param>
      <exception cref="T:System.Runtime.InteropServices.ExternalException">The Clipboard could not be cleared. This typically occurs when the Clipboard is being used by another process.</exception>
      <exception cref="T:System.Threading.ThreadStateException">The current thread is not in single-threaded apartment (STA) mode. Add the <see cref="T:System.STAThreadAttribute" /> to your application's Main method.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="text" /> is null or <see cref="F:System.String.Empty" />.</exception>
      <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">
        <paramref name="format" /> is not a valid <see cref="T:System.Windows.Forms.TextDataFormat" /> value.</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="T:System.Windows.Forms.CloseReason">
      <summary>Specifies the reason that a form was closed.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="F:System.Windows.Forms.CloseReason.None">
      <summary>The cause of the closure was not defined or could not be determined.</summary>
    </member>
    <member name="F:System.Windows.Forms.CloseReason.WindowsShutDown">
      <summary>The operating system is closing all applications before shutting down.</summary>
    </member>
    <member name="F:System.Windows.Forms.CloseReason.MdiFormClosing">
      <summary>The parent form of this multiple document interface (MDI) form is closing.</summary>
    </member>
    <member name="F:System.Windows.Forms.CloseReason.UserClosing">
      <summary>The user is closing the form through the user interface (UI), for example by clicking the Close button on the form window, selecting Close from the window's control menu, or pressing ALT+F4.</summary>
    </member>
    <member name="F:System.Windows.Forms.CloseReason.TaskManagerClosing">
      <summary>The Microsoft Windows Task Manager is closing the application.</summary>
    </member>
    <member name="F:System.Windows.Forms.CloseReason.FormOwnerClosing">
      <summary>The owner form is closing.</summary>
    </member>
    <member name="F:System.Windows.Forms.CloseReason.ApplicationExitCall">
      <summary>The <see cref="M:System.Windows.Forms.Application.Exit" /> method of the <see cref="T:System.Windows.Forms.Application" /> class was invoked. </summary>
    </member>
    <member name="T:System.Windows.Forms.ColorDepth">
      <summary>Specifies the number of colors used to display an image in an <see cref="T:System.Windows.Forms.ImageList" /> control.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="F:System.Windows.Forms.ColorDepth.Depth4Bit">
      <summary>A 4-bit image.</summary>
    </member>
    <member name="F:System.Windows.Forms.ColorDepth.Depth8Bit">
      <summary>An 8-bit image.</summary>
    </member>
    <member name="F:System.Windows.Forms.ColorDepth.Depth16Bit">
      <summary>A 16-bit image.</summary>
    </member>
    <member name="F:System.Windows.Forms.ColorDepth.Depth24Bit">
      <summary>A 24-bit image.</summary>
    </member>
    <member name="F:System.Windows.Forms.ColorDepth.Depth32Bit">
      <summary>A 32-bit image.</summary>
    </member>
    <member name="T:System.Windows.Forms.ColorDialog">
      <summary>Represents a common dialog box that displays available colors along with controls that enable the user to define custom colors.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Windows.Forms.ColorDialog.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Forms.ColorDialog" /> class.</summary>
    </member>
    <member name="P:System.Windows.Forms.ColorDialog.AllowFullOpen">
      <summary>Gets or sets a value indicating whether the user can use the dialog box to define custom colors.</summary>
      <returns>true if the user can define custom colors; otherwise, false. The default is true.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.Windows.Forms.ColorDialog.AnyColor">
      <summary>Gets or sets a value indicating whether the dialog box displays all available colors in the set of basic colors.</summary>
      <returns>true if the dialog box displays all available colors in the set of basic colors; otherwise, false. The default value is false.</returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="P:System.Windows.Forms.ColorDialog.Color">
      <summary>Gets or sets the color selected by the user.</summary>
      <returns>The color selected by the user. If a color is not selected, the default value is black.</returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="P:System.Windows.Forms.ColorDialog.CustomColors">
      <summary>Gets or sets the set of custom colors shown in the dialog box.</summary>
      <returns>A set of custom colors shown by the dialog box. The default value is null.</returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="P:System.Windows.Forms.ColorDialog.FullOpen">
      <summary>Gets or sets a value indicating whether the controls used to create custom colors are visible when the dialog box is opened </summary>
      <returns>true if the custom color controls are available when the dialog box is opened; otherwise, false. The default value is false.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.Windows.Forms.ColorDialog.Instance">
      <summary>Gets the underlying window instance handle (HINSTANCE).</summary>
      <returns>An <see cref="T:System.IntPtr" /> that contains the HINSTANCE value of the window handle.</returns>
    </member>
    <member name="P:System.Windows.Forms.ColorDialog.Options">
      <summary>Gets values to initialize the <see cref="T:System.Windows.Forms.ColorDialog" />.</summary>
      <returns>A bitwise combination of internal values that initializes the <see cref="T:System.Windows.Forms.ColorDialog" />.</returns>
    </member>
    <member name="M:System.Windows.Forms.ColorDialog.Reset">
      <summary>Resets all options to their default values, the last selected color to black, and the custom colors to their default values.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Windows.Forms.ColorDialog.RunDialog(System.IntPtr)">
      <returns>true if the dialog box was successfully run; otherwise, false.</returns>
      <param name="hwndOwner">A value that represents the window handle of the owner window for the common dialog box. </param>
    </member>
    <member name="P:System.Windows.Forms.ColorDialog.ShowHelp">
      <summary>Gets or sets a value indicating whether a Help button appears in the color dialog box.</summary>
      <returns>true if the Help button is shown in the dialog box; otherwise, false. The default value is false.</returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="P:System.Windows.Forms.ColorDialog.SolidColorOnly">
      <summary>Gets or sets a value indicating whether the dialog box will restrict users to selecting solid colors only.</summary>
      <returns>true if users can select only solid colors; otherwise, false. The default value is false.</returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Windows.Forms.ColorDialog.ToString">
      <summary>Returns a string that represents the <see cref="T:System.Windows.Forms.ColorDialog" />.</summary>
      <returns>A <see cref="T:System.String" /> that represents the current <see cref="T:System.Windows.Forms.ColorDialog" />. </returns>
      <filterpriority>2</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="T:System.Windows.Forms.ColumnClickEventArgs">
      <summary>Provides data for the <see cref="E:System.Windows.Forms.ListView.ColumnClick" /> event.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Windows.Forms.ColumnClickEventArgs.#ctor(System.Int32)">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Forms.ColumnClickEventArgs" /> class.</summary>
      <param name="column">The zero-based index of the column that is clicked. </param>
    </member>
    <member name="P:System.Windows.Forms.ColumnClickEventArgs.Column">
      <summary>Gets the zero-based index of the column that is clicked.</summary>
      <returns>The zero-based index within the <see cref="T:System.Windows.Forms.ListView.ColumnHeaderCollection" /> of the column that is clicked.</returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="T:System.Windows.Forms.ColumnClickEventHandler">
      <summary>Represents the method that will handle the <see cref="E:System.Windows.Forms.ListView.ColumnClick" /> event of a <see cref="T:System.Windows.Forms.ListView" />.</summary>
      <param name="sender">The source of the event. </param>
      <param name="e">A <see cref="T:System.Windows.Forms.ColumnClickEventArgs" /> that contains the event data. </param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="T:System.Windows.Forms.ColumnHeader">
      <summary>Displays a single column header in a <see cref="T:System.Windows.Forms.ListView" /> control.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Windows.Forms.ColumnHeader.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Forms.ColumnHeader" /> class.</summary>
    </member>
    <member name="M:System.Windows.Forms.ColumnHeader.#ctor(System.Int32)">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Forms.ColumnHeader" /> class with the image specified.</summary>
      <param name="imageIndex">The index of the image to display in the <see cref="T:System.Windows.Forms.ColumnHeader" />.</param>
    </member>
    <member name="M:System.Windows.Forms.ColumnHeader.#ctor(System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Forms.ColumnHeader" /> class with the image specified.</summary>
      <param name="imageKey">The key of the image to display in the <see cref="T:System.Windows.Forms.ColumnHeader" />.</param>
    </member>
    <member name="M:System.Windows.Forms.ColumnHeader.AutoResize(System.Windows.Forms.ColumnHeaderAutoResizeStyle)">
      <summary>Resizes the width of the column as indicated by the resize style.</summary>
      <param name="headerAutoResize">One of the <see cref="T:System.Windows.Forms.ColumnHeaderAutoResizeStyle" />  values.</param>
      <exception cref="T:System.InvalidOperationException">A value other than <see cref="F:System.Windows.Forms.ColumnHeaderAutoResizeStyle.None" /> is passed to the <see cref="M:System.Windows.Forms.ColumnHeader.AutoResize(System.Windows.Forms.ColumnHeaderAutoResizeStyle)" /> method when the <see cref="P:System.Windows.Forms.ListView.View" /> property is a value other than <see cref="F:System.Windows.Forms.View.Details" />.</exception>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
        <IPermission class="System.Diagnostics.PerformanceCounterPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:System.Windows.Forms.ColumnHeader.Clone">
      <summary>Creates an identical copy of the current <see cref="T:System.Windows.Forms.ColumnHeader" /> that is not attached to any list view control.</summary>
      <returns>An object representing a copy of this <see cref="T:System.Windows.Forms.ColumnHeader" /> object.</returns>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
        <IPermission class="System.Diagnostics.PerformanceCounterPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="P:System.Windows.Forms.ColumnHeader.DisplayIndex">
      <summary>Gets the display order of the column relative to the currently displayed columns.</summary>
      <returns>The display order of the column, relative to the currently displayed columns.</returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Windows.Forms.ColumnHeader.Dispose(System.Boolean)">
      <summary>Disposes of the resources (other than memory) used by the <see cref="T:System.Windows.Forms.ColumnHeader" />.</summary>
      <param name="disposing">true to release both managed and unmanaged resources; false to release only unmanaged resources. </param>
    </member>
    <member name="P:System.Windows.Forms.ColumnHeader.ImageIndex">
      <summary>Gets or sets the index of the image displayed in the <see cref="T:System.Windows.Forms.ColumnHeader" />. </summary>
      <returns>The index of the image displayed in the <see cref="T:System.Windows.Forms.ColumnHeader" />.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <see cref="P:System.Windows.Forms.ColumnHeader.ImageIndex" /> is less than -1.</exception>
      <filterpriority>2</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
        <IPermission class="System.Diagnostics.PerformanceCounterPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="P:System.Windows.Forms.ColumnHeader.ImageKey">
      <summary>Gets or sets the key of the image displayed in the column.</summary>
      <returns>The key of the image displayed in the column.</returns>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
        <IPermission class="System.Diagnostics.PerformanceCounterPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="P:System.Windows.Forms.ColumnHeader.ImageList">
      <summary>Gets the image list associated with the <see cref="T:System.Windows.Forms.ColumnHeader" />.</summary>
      <returns>The <see cref="T:System.Windows.Forms.ImageList" /> associated with the <see cref="T:System.Windows.Forms.ColumnHeader" />. </returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="P:System.Windows.Forms.ColumnHeader.Index">
      <summary>Gets the location with the <see cref="T:System.Windows.Forms.ListView" /> control's <see cref="T:System.Windows.Forms.ListView.ColumnHeaderCollection" /> of this column.</summary>
      <returns>The zero-based index of the column header within the <see cref="T:System.Windows.Forms.ListView.ColumnHeaderCollection" /> of the <see cref="T:System.Windows.Forms.ListView" /> control it is contained in.</returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="P:System.Windows.Forms.ColumnHeader.ListView">
      <summary>Gets the <see cref="T:System.Windows.Forms.ListView" /> control the <see cref="T:System.Windows.Forms.ColumnHeader" /> is located in.</summary>
      <returns>A <see cref="T:System.Windows.Forms.ListView" /> control that represents the control that contains the <see cref="T:System.Windows.Forms.ColumnHeader" />.</returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="P:System.Windows.Forms.ColumnHeader.Name">
      <summary>Gets or sets the name of the <see cref="T:System.Windows.Forms.ColumnHeader" />. </summary>
      <returns>The name of the <see cref="T:System.Windows.Forms.ColumnHeader" />. </returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="P:System.Windows.Forms.ColumnHeader.Tag">
      <summary>Gets or sets an object that contains data to associate with the <see cref="T:System.Windows.Forms.ColumnHeader" />.</summary>
      <returns>An <see cref="T:System.Object" /> that contains data to associate with the <see cref="T:System.Windows.Forms.ColumnHeader" />.</returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="P:System.Windows.Forms.ColumnHeader.Text">
      <summary>Gets or sets the text displayed in the column header.</summary>
      <returns>The text displayed in the column header.</returns>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
        <IPermission class="System.Diagnostics.PerformanceCounterPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="P:System.Windows.Forms.ColumnHeader.TextAlign">
      <summary>Gets or sets the horizontal alignment of the text displayed in the <see cref="T:System.Windows.Forms.ColumnHeader" />.</summary>
      <returns>One of the <see cref="T:System.Windows.Forms.HorizontalAlignment" /> values. The default is <see cref="F:System.Windows.Forms.HorizontalAlignment.Left" />.</returns>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
        <IPermission class="System.Diagnostics.PerformanceCounterPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:System.Windows.Forms.ColumnHeader.ToString">
      <summary>Returns a string representation of this column header.</summary>
      <returns>A <see cref="T:System.String" /> containing the name of the <see cref="T:System.ComponentModel.Component" />, if any, or null if the <see cref="T:System.ComponentModel.Component" /> is unnamed.</returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="P:System.Windows.Forms.ColumnHeader.Width">
      <summary>Gets or sets the width of the column.</summary>
      <returns>The width of the column, in pixels.</returns>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
        <IPermission class="System.Diagnostics.PerformanceCounterPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="T:System.Windows.Forms.ColumnHeaderAutoResizeStyle">
      <summary>Specifies how a column contained in a <see cref="T:System.Windows.Forms.ListView" /> should be resized.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="F:System.Windows.Forms.ColumnHeaderAutoResizeStyle.None">
      <summary>Specifies no resizing should occur.</summary>
    </member>
    <member name="F:System.Windows.Forms.ColumnHeaderAutoResizeStyle.HeaderSize">
      <summary>Specifies the column should be resized based on the length of the column header content.</summary>
    </member>
    <member name="F:System.Windows.Forms.ColumnHeaderAutoResizeStyle.ColumnContent">
      <summary>Specifies the column should be resized based on the length of the column content.</summary>
    </member>
    <member name="T:System.Windows.Forms.ColumnHeaderConverter">
      <summary>Provides a type converter to convert <see cref="T:System.Windows.Forms.ColumnHeader" /> objects from one type to another.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Windows.Forms.ColumnHeaderConverter.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Forms.ColumnHeaderConverter" /> class. </summary>
    </member>
    <member name="M:System.Windows.Forms.ColumnHeaderConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)">
      <summary>Returns a value indicating whether the <see cref="T:System.Windows.Forms.ColumnHeaderConverter" /> can convert a <see cref="T:System.Windows.Forms.ColumnHeader" /> to the specified type, using the specified context.</summary>
      <returns>true if this converter can perform the conversion; otherwise, false.</returns>
      <param name="context">A <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> that provides a format context.</param>
      <param name="destinationType">A type representing the type to convert to.</param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Windows.Forms.ColumnHeaderConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
      <summary>Converts the specified object to the specified type, using the specified context and culture information.</summary>
      <returns>The <see cref="T:System.Object" /> that is the result of the conversion.</returns>
      <param name="context">An <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> that provides a format context.</param>
      <param name="culture">A <see cref="T:System.Globalization.CultureInfo" /> that represents information about a culture, such as language and calendar system. Can be null.</param>
      <param name="value">The <see cref="T:System.Object" /> to convert.</param>
      <param name="destinationType">The <see cref="T:System.Type" /> to convert to.</param>
      <exception cref="T:System.NotSupportedException">The conversion cannot be performed<paramref name="." /></exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="T:System.Windows.Forms.ColumnHeaderStyle">
      <summary>Specifies the styles of the column headers in a <see cref="T:System.Windows.Forms.ListView" /> control.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="F:System.Windows.Forms.ColumnHeaderStyle.None">
      <summary>The column header is not displayed in report view.</summary>
    </member>
    <member name="F:System.Windows.Forms.ColumnHeaderStyle.Nonclickable">
      <summary>The column headers do not respond to the click of a mouse.</summary>
    </member>
    <member name="F:System.Windows.Forms.ColumnHeaderStyle.Clickable">
      <summary>The column headers function like buttons and can carry out an action, such as sorting, when clicked.</summary>
    </member>
    <member name="T:System.Windows.Forms.ColumnReorderedEventArgs">
      <summary>Provides data for the <see cref="E:System.Windows.Forms.ListView.ColumnReordered" /> event. </summary>
    </member>
    <member name="M:System.Windows.Forms.ColumnReorderedEventArgs.#ctor(System.Int32,System.Int32,System.Windows.Forms.ColumnHeader)">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Forms.ColumnReorderedEventArgs" /> class. </summary>
      <param name="oldDisplayIndex">The previous display position of the <see cref="T:System.Windows.Forms.ColumnHeader" />.</param>
      <param name="newDisplayIndex">The new display position for the <see cref="T:System.Windows.Forms.ColumnHeader" />.</param>
      <param name="header">The <see cref="T:System.Windows.Forms.ColumnHeader" /> that is being reordered.</param>
    </member>
    <member name="P:System.Windows.Forms.ColumnReorderedEventArgs.Header">
      <summary>Gets the <see cref="T:System.Windows.Forms.ColumnHeader" /> that is being reordered.</summary>
      <returns>The <see cref="T:System.Windows.Forms.ColumnHeader" /> that is being reordered.</returns>
    </member>
    <member name="P:System.Windows.Forms.ColumnReorderedEventArgs.NewDisplayIndex">
      <summary>Gets the new display position of the <see cref="T:System.Windows.Forms.ColumnHeader" /></summary>
      <returns>The new display position of the <see cref="T:System.Windows.Forms.ColumnHeader" />.</returns>
    </member>
    <member name="P:System.Windows.Forms.ColumnReorderedEventArgs.OldDisplayIndex">
      <summary>Gets the previous display position of the <see cref="T:System.Windows.Forms.ColumnHeader" />.</summary>
      <returns>The previous display position of the <see cref="T:System.Windows.Forms.ColumnHeader" /></returns>
    </member>
    <member name="T:System.Windows.Forms.ColumnReorderedEventHandler">
      <summary>Represents the method that will handle the <see cref="E:System.Windows.Forms.ListView.ColumnReordered" /> event of the <see cref="T:System.Windows.Forms.ListView" /> control. </summary>
      <param name="sender">The source of the event. </param>
      <param name="e">A <see cref="T:System.Windows.Forms.ColumnReorderedEventArgs" /> that contains the event data. </param>
    </member>
    <member name="T:System.Windows.Forms.ColumnStyle">
      <summary>Represents the look and feel of a column in a table layout.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Windows.Forms.ColumnStyle.#ctor">
      <summary>Initializes and instance of the <see cref="T:System.Windows.Forms.ColumnStyle" /> class to its default state.</summary>
    </member>
    <member name="M:System.Windows.Forms.ColumnStyle.#ctor(System.Windows.Forms.SizeType)">
      <summary>Initializes an instance of the <see cref="T:System.Windows.Forms.ColumnStyle" /> class using the supplied <see cref="T:System.Windows.Forms.SizeType" /> value.</summary>
      <param name="sizeType">A <see cref="P:System.Windows.Forms.TableLayoutStyle.SizeType" /> indicating how the column should be should be sized relative to its containing table.</param>
    </member>
    <member name="M:System.Windows.Forms.ColumnStyle.#ctor(System.Windows.Forms.SizeType,System.Single)">
      <summary>Initializes and instance of the <see cref="T:System.Windows.Forms.ColumnStyle" /> class using the supplied <see cref="T:System.Windows.Forms.SizeType" /> and width values.</summary>
      <param name="sizeType">A <see cref="P:System.Windows.Forms.TableLayoutStyle.SizeType" /> indicating how the column should be should be sized relative to its containing table.</param>
      <param name="width">The preferred width, in pixels or percentage, depending on the <paramref name="sizeType" /> parameter.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="width" /> is less than 0.</exception>
    </member>
    <member name="P:System.Windows.Forms.ColumnStyle.Width">
      <summary>Gets or sets the width value for a column.</summary>
      <returns>The preferred width, in pixels or percentage, depending on the <see cref="P:System.Windows.Forms.TableLayoutStyle.SizeType" /> property.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">The value is less than 0 when setting this property.</exception>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="T:System.Windows.Forms.ColumnWidthChangedEventArgs">
      <summary>Provides data for the <see cref="E:System.Windows.Forms.ListView.ColumnWidthChanged" /> event. </summary>
    </member>
    <member name="M:System.Windows.Forms.ColumnWidthChangedEventArgs.#ctor(System.Int32)">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Forms.ColumnWidthChangedEventArgs" /> class. </summary>
      <param name="columnIndex">The index of the column whose width is being changed.</param>
    </member>
    <member name="P:System.Windows.Forms.ColumnWidthChangedEventArgs.ColumnIndex">
      <summary>Gets the column index for the column whose width is being changed.</summary>
      <returns>The index of the column whose width is being changed.</returns>
    </member>
    <member name="T:System.Windows.Forms.ColumnWidthChangedEventHandler">
      <summary>Represents the method that will handle the <see cref="E:System.Windows.Forms.ListView.ColumnWidthChanged" /> event of a <see cref="T:System.Windows.Forms.ListView" />.</summary>
      <param name="sender">The source of the event. </param>
      <param name="e">A <see cref="T:System.Windows.Forms.ColumnWidthChangedEventArgs" /> that contains the event data. </param>
    </member>
    <member name="T:System.Windows.Forms.ColumnWidthChangingEventArgs">
      <summary>Provides data for the <see cref="E:System.Windows.Forms.ListView.ColumnWidthChanging" /> event. </summary>
    </member>
    <member name="M:System.Windows.Forms.ColumnWidthChangingEventArgs.#ctor(System.Int32,System.Int32)">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Forms.ColumnWidthChangingEventArgs" /> class with the specified column index and width.</summary>
      <param name="columnIndex">The index of the column whose width is changing.</param>
      <param name="newWidth">The new width for the column.</param>
    </member>
    <member name="M:System.Windows.Forms.ColumnWidthChangingEventArgs.#ctor(System.Int32,System.Int32,System.Boolean)">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Forms.ColumnWidthChangingEventArgs" /> class, specifying the column index and width and whether to cancel the event.</summary>
      <param name="columnIndex">The index of the column whose width is changing.</param>
      <param name="newWidth">The new width of the column.</param>
      <param name="cancel">true to cancel the width change; otherwise, false.</param>
    </member>
    <member name="P:System.Windows.Forms.ColumnWidthChangingEventArgs.ColumnIndex">
      <summary>Gets the index of the column whose width is changing.</summary>
      <returns>The index of the column whose width is changing.</returns>
    </member>
    <member name="P:System.Windows.Forms.ColumnWidthChangingEventArgs.NewWidth">
      <summary>Gets or sets the new width for the column.</summary>
      <returns>The new width for the column.</returns>
    </member>
    <member name="T:System.Windows.Forms.ColumnWidthChangingEventHandler">
      <summary>Represents the method that will handle the <see cref="E:System.Windows.Forms.ListView.ColumnWidthChanging" /> event of a <see cref="T:System.Windows.Forms.ListView" />.</summary>
      <param name="sender">The source of the event. </param>
      <param name="e">A <see cref="T:System.Windows.Forms.ColumnWidthChangingEventArgs" />  that contains the event data. </param>
    </member>
    <member name="T:System.Windows.Forms.ComboBox">
      <summary>Represents a Windows combo box control. </summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Windows.Forms.ComboBox.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Forms.ComboBox" /> class.</summary>
    </member>
    <member name="M:System.Windows.Forms.ComboBox.AddItemsCore(System.Object[])">
      <summary>Adds the specified items to the combo box.</summary>
      <param name="value">The items to add.</param>
    </member>
    <member name="P:System.Windows.Forms.ComboBox.AutoCompleteCustomSource">
      <summary>Gets or sets a custom <see cref="T:System.Collections.Specialized.StringCollection" /> to use when the <see cref="P:System.Windows.Forms.ComboBox.AutoCompleteSource" /> property is set to CustomSource.</summary>
      <returns>A <see cref="T:System.Collections.Specialized.StringCollection" /> to use with <see cref="P:System.Windows.Forms.ComboBox.AutoCompleteSource" />.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.Windows.Forms.ComboBox.AutoCompleteMode">
      <summary>Gets or sets an option that controls how automatic completion works for the <see cref="T:System.Windows.Forms.ComboBox" />.</summary>
      <returns>One of the values of <see cref="T:System.Windows.Forms.AutoCompleteMode" />. The values are <see cref="F:System.Windows.Forms.AutoCompleteMode.Append" />, <see cref="F:System.Windows.Forms.AutoCompleteMode.None" />, <see cref="F:System.Windows.Forms.AutoCompleteMode.Suggest" />, and <see cref="F:System.Windows.Forms.AutoCompleteMode.SuggestAppend" />. The default is <see cref="F:System.Windows.Forms.AutoCompleteMode.None" />.</returns>
      <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">The specified value is not one of the values of <see cref="T:System.Windows.Forms.AutoCompleteMode" />. </exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.Windows.Forms.ComboBox.AutoCompleteSource">
      <summary>Gets or sets a value specifying the source of complete strings used for automatic completion.</summary>
      <returns>One of the values of <see cref="T:System.Windows.Forms.AutoCompleteSource" />. The options are AllSystemSources, AllUrl, FileSystem, HistoryList, RecentlyUsedList, CustomSource, and None. The default is None.</returns>
      <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">The specified value is not one of the values of <see cref="T:System.Windows.Forms.AutoCompleteSource" />. </exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.Windows.Forms.ComboBox.BackColor">
      <returns>A <see cref="T:System.Drawing.Color" /> that represents the background color of the control. The default is the value of the <see cref="P:System.Windows.Forms.Control.DefaultBackColor" /> property.</returns>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="P:System.Windows.Forms.ComboBox.BackgroundImage">
      <summary>This property is not relevant to this class.</summary>
      <returns>An <see cref="T:System.Drawing.Image" />.</returns>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="E:System.Windows.Forms.ComboBox.BackgroundImageChanged">
      <summary>Occurs when the value of the <see cref="P:System.Windows.Forms.ComboBox.BackgroundImage" /> property changes.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="P:System.Windows.Forms.ComboBox.BackgroundImageLayout">
      <summary>Gets or sets the background image layout as defined in the <see cref="T:System.Windows.Forms.ImageLayout" /> enumeration.</summary>
      <returns>One of the values of <see cref="T:System.Windows.Forms.ImageLayout" /> (Center, None, Stretch, Tile, or Zoom).</returns>
      <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">The specified value is not one of the values of <see cref="T:System.Windows.Forms.ImageLayout" />. </exception>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="E:System.Windows.Forms.ComboBox.BackgroundImageLayoutChanged">
      <summary>Occurs when the <see cref="P:System.Windows.Forms.ComboBox.BackgroundImageLayout" /> property changes.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Windows.Forms.ComboBox.BeginUpdate">
      <summary>Maintains performance when items are added to the <see cref="T:System.Windows.Forms.ComboBox" /> one at a time.</summary>
      <filterpriority>2</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
        <IPermission class="System.Diagnostics.PerformanceCounterPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:System.Windows.Forms.ComboBox.CreateAccessibilityInstance">
      <returns>A new <see cref="T:System.Windows.Forms.AccessibleObject" /> for the control.</returns>
    </member>
    <member name="M:System.Windows.Forms.ComboBox.CreateHandle">
      <summary>Creates a handle for the control.</summary>
    </member>
    <member name="P:System.Windows.Forms.ComboBox.CreateParams">
      <summary>Gets the required creation parameters when the control handle is created.</summary>
      <returns>A <see cref="T:System.Windows.Forms.CreateParams" /> that contains the required creation parameters when the handle to the control is created.</returns>
    </member>
    <member name="P:System.Windows.Forms.ComboBox.DataSource">
      <summary>Gets or sets the data source for this <see cref="T:System.Windows.Forms.ComboBox" />.</summary>
      <returns>An object that implements the <see cref="T:System.Collections.IList" /> interface, such as a <see cref="T:System.Data.DataSet" /> or an <see cref="T:System.Array" />. The default is null.</returns>
    </member>
    <member name="P:System.Windows.Forms.ComboBox.DefaultSize">
      <returns>The default <see cref="T:System.Drawing.Size" /> of the control.</returns>
    </member>
    <member name="M:System.Windows.Forms.ComboBox.Dispose(System.Boolean)">
      <summary>Releases the unmanaged resources used by the <see cref="T:System.Windows.Forms.ComboBox" /> and optionally releases the managed resources. </summary>
      <param name="disposing">true to release both managed and unmanaged resources; false to release only unmanaged resources. </param>
    </member>
    <member name="E:System.Windows.Forms.ComboBox.DoubleClick">
      <summary>This event is not relevant for this class.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="E:System.Windows.Forms.ComboBox.DrawItem">
      <summary>Occurs when a visual aspect of an owner-drawn <see cref="T:System.Windows.Forms.ComboBox" /> changes.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="P:System.Windows.Forms.ComboBox.DrawMode">
      <summary>Gets or sets a value indicating whether your code or the operating system will handle drawing of elements in the list.</summary>
      <returns>One of the <see cref="T:System.Windows.Forms.DrawMode" /> enumeration values. The default is <see cref="F:System.Windows.Forms.DrawMode.Normal" />.</returns>
      <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">The value is not a valid <see cref="T:System.Windows.Forms.DrawMode" /> enumeration value. </exception>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
        <IPermission class="System.Diagnostics.PerformanceCounterPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="E:System.Windows.Forms.ComboBox.DropDown">
      <summary>Occurs when the drop-down portion of a <see cref="T:System.Windows.Forms.ComboBox" /> is shown.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="E:System.Windows.Forms.ComboBox.DropDownClosed">
      <summary>Occurs when the drop-down portion of the <see cref="T:System.Windows.Forms.ComboBox" /> is no longer visible.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="P:System.Windows.Forms.ComboBox.DropDownHeight">
      <summary>Gets or sets the height in pixels of the drop-down portion of the <see cref="T:System.Windows.Forms.ComboBox" />.</summary>
      <returns>The height, in pixels, of the drop-down box.</returns>
      <exception cref="T:System.ArgumentException">The specified value is less than one. </exception>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
        <IPermission class="System.Diagnostics.PerformanceCounterPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="P:System.Windows.Forms.ComboBox.DropDownStyle">
      <summary>Gets or sets a value specifying the style of the combo box.</summary>
      <returns>One of the <see cref="T:System.Windows.Forms.ComboBoxStyle" /> values. The default is DropDown.</returns>
      <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">The assigned value is not one of the <see cref="T:System.Windows.Forms.ComboBoxStyle" /> values. </exception>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
        <IPermission class="System.Diagnostics.PerformanceCounterPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="E:System.Windows.Forms.ComboBox.DropDownStyleChanged">
      <summary>Occurs when the <see cref="P:System.Windows.Forms.ComboBox.DropDownStyle" /> property has changed.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="P:System.Windows.Forms.ComboBox.DropDownWidth">
      <summary>Gets or sets the width of the of the drop-down portion of a combo box.</summary>
      <returns>The width, in pixels, of the drop-down box.</returns>
      <exception cref="T:System.ArgumentException">The specified value is less than one. </exception>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
        <IPermission class="System.Diagnostics.PerformanceCounterPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="P:System.Windows.Forms.ComboBox.DroppedDown">
      <summary>Gets or sets a value indicating whether the combo box is displaying its drop-down portion.</summary>
      <returns>true if the drop-down portion is displayed; otherwise, false. The default is false.</returns>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
        <IPermission class="System.Diagnostics.PerformanceCounterPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:System.Windows.Forms.ComboBox.EndUpdate">
      <summary>Resumes painting the <see cref="T:System.Windows.Forms.ComboBox" /> control after painting is suspended by the <see cref="M:System.Windows.Forms.ComboBox.BeginUpdate" /> method.</summary>
      <filterpriority>2</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
        <IPermission class="System.Diagnostics.PerformanceCounterPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:System.Windows.Forms.ComboBox.FindString(System.String)">
      <summary>Finds the first item in the combo box that starts with the specified string.</summary>
      <returns>The zero-based index of the first item found; returns -1 if no match is found.</returns>
      <param name="s">The <see cref="T:System.String" /> to search for. </param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Windows.Forms.ComboBox.FindString(System.String,System.Int32)">
      <summary>Finds the first item after the given index which starts with the given string. The search is not case sensitive.</summary>
      <returns>The zero-based index of the first item found; returns -1 if no match is found, or 0 if the <paramref name="s" /> parameter specifies <see cref="F:System.String.Empty" />.</returns>
      <param name="s">The <see cref="T:System.String" /> to search for. </param>
      <param name="startIndex">The zero-based index of the item before the first item to be searched. Set to -1 to search from the beginning of the control. </param>
      <exception cref="T:System.ArgumentOutOfRangeException">The <paramref name="startIndex" /> is less than -1.-or- The <paramref name="startIndex" /> is greater than the last index in the collection. </exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Windows.Forms.ComboBox.FindStringExact(System.String)">
      <summary>Finds the first item in the combo box that matches the specified string.</summary>
      <returns>The zero-based index of the first item found; returns -1 if no match is found, or 0 if the <paramref name="s" /> parameter specifies <see cref="F:System.String.Empty" />.</returns>
      <param name="s">The <see cref="T:System.String" /> to search for. </param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Windows.Forms.ComboBox.FindStringExact(System.String,System.Int32)">
      <summary>Finds the first item after the specified index that matches the specified string.</summary>
      <returns>The zero-based index of the first item found; returns -1 if no match is found, or 0 if the <paramref name="s" /> parameter specifies <see cref="F:System.String.Empty" />.</returns>
      <param name="s">The <see cref="T:System.String" /> to search for. </param>
      <param name="startIndex">The zero-based index of the item before the first item to be searched. Set to -1 to search from the beginning of the control. </param>
      <exception cref="T:System.ArgumentOutOfRangeException">The <paramref name="startIndex" /> is less than -1.-or- The <paramref name="startIndex" /> is equal to the last index in the collection. </exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="P:System.Windows.Forms.ComboBox.FlatStyle">
      <summary>Gets or sets the appearance of the <see cref="T:System.Windows.Forms.ComboBox" />.</summary>
      <returns>One of the values of <see cref="T:System.Windows.Forms.FlatStyle" />. The options are Flat, Popup, Standard, and System. The default is Standard.</returns>
      <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">The specified value is not one of the values of <see cref="T:System.Windows.Forms.FlatStyle" />. </exception>
      <filterpriority>2</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="P:System.Windows.Forms.ComboBox.Focused">
      <summary>Gets a value indicating whether the <see cref="T:System.Windows.Forms.ComboBox" /> has focus.</summary>
      <returns>true if this control has focus; otherwise, false.</returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="P:System.Windows.Forms.ComboBox.ForeColor">
      <returns>The foreground <see cref="T:System.Drawing.Color" /> of the control. The default is the value of the <see cref="P:System.Windows.Forms.Control.DefaultForeColor" /> property.</returns>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:System.Windows.Forms.ComboBox.GetItemHeight(System.Int32)">
      <summary>Returns the height of an item in the <see cref="T:System.Windows.Forms.ComboBox" />.</summary>
      <returns>The height, in pixels, of the item at the specified index.</returns>
      <param name="index">The index of the item to return the height of. </param>
      <exception cref="T:System.ArgumentOutOfRangeException">The <paramref name="index" /> is less than zero.-or- The <paramref name="index" /> is greater than count of items in the list. </exception>
      <filterpriority>2</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
        <IPermission class="System.Diagnostics.PerformanceCounterPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="P:System.Windows.Forms.ComboBox.IntegralHeight">
      <summary>Gets or sets a value indicating whether the control should resize to avoid showing partial items.</summary>
      <returns>true if the list portion can contain only complete items; otherwise, false. The default is true.</returns>
      <filterpriority>2</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
        <IPermission class="System.Diagnostics.PerformanceCounterPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:System.Windows.Forms.ComboBox.IsInputKey(System.Windows.Forms.Keys)">
      <summary>Determines whether the specified key is a regular input key or a special key that requires preprocessing.</summary>
      <returns>true if the specified key is a regular input key; otherwise, false.</returns>
      <param name="keyData">One of the <see cref="T:System.Windows.Forms.Keys" /> values.</param>
    </member>
    <member name="P:System.Windows.Forms.ComboBox.ItemHeight">
      <summary>Gets or sets the height of an item in the combo box.</summary>
      <returns>The height, in pixels, of an item in the combo box.</returns>
      <exception cref="T:System.ArgumentException">The item height value is less than zero. </exception>
      <filterpriority>2</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
        <IPermission class="System.Diagnostics.PerformanceCounterPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="P:System.Windows.Forms.ComboBox.Items">
      <summary>Gets an object representing the collection of the items contained in this <see cref="T:System.Windows.Forms.ComboBox" />.</summary>
      <returns>A <see cref="T:System.Windows.Forms.ComboBox.ObjectCollection" /> representing the items in the <see cref="T:System.Windows.Forms.ComboBox" />.</returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="P:System.Windows.Forms.ComboBox.MaxDropDownItems">
      <summary>Gets or sets the maximum number of items to be shown in the drop-down portion of the <see cref="T:System.Windows.Forms.ComboBox" />.</summary>
      <returns>The maximum number of items of in the drop-down portion. The minimum for this property is 1 and the maximum is 100.</returns>
      <exception cref="T:System.ArgumentException">The maximum number is set less than one or greater than 100. </exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="P:System.Windows.Forms.ComboBox.MaximumSize">
      <returns>An ordered pair of type <see cref="T:System.Drawing.Size" /> representing the width and height of a rectangle.</returns>
    </member>
    <member name="P:System.Windows.Forms.ComboBox.MaxLength">
      <summary>Gets or sets the number of characters a user can type into the <see cref="T:System.Windows.Forms.ComboBox" />.</summary>
      <returns>The maximum number of characters a user can enter. Values of less than zero are reset to zero, which is the default value.</returns>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
        <IPermission class="System.Diagnostics.PerformanceCounterPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="E:System.Windows.Forms.ComboBox.MeasureItem">
      <summary>Occurs each time an owner-drawn <see cref="T:System.Windows.Forms.ComboBox" /> item needs to be drawn and when the sizes of the list items are determined.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="P:System.Windows.Forms.ComboBox.MinimumSize">
      <returns>An ordered pair of type <see cref="T:System.Drawing.Size" /> representing the width and height of a rectangle.</returns>
    </member>
    <member name="M:System.Windows.Forms.ComboBox.OnBackColorChanged(System.EventArgs)">
      <param name="e">An <see cref="T:System.EventArgs" /> that contains the event data. </param>
    </member>
    <member name="M:System.Windows.Forms.ComboBox.OnDataSourceChanged(System.EventArgs)">
      <param name="e">An <see cref="T:System.EventArgs" /> that contains the event data. </param>
    </member>
    <member name="M:System.Windows.Forms.ComboBox.OnDisplayMemberChanged(System.EventArgs)">
      <param name="e">An <see cref="T:System.EventArgs" /> that contains the event data. </param>
    </member>
    <member name="M:System.Windows.Forms.ComboBox.OnDrawItem(System.Windows.Forms.DrawItemEventArgs)">
      <summary>Raises the <see cref="E:System.Windows.Forms.ComboBox.DrawItem" /> event.</summary>
      <param name="e">A <see cref="T:System.Windows.Forms.DrawItemEventArgs" /> that contains the event data. </param>
    </member>
    <member name="M:System.Windows.Forms.ComboBox.OnDropDown(System.EventArgs)">
      <summary>Raises the <see cref="E:System.Windows.Forms.ComboBox.DropDown" /> event.</summary>
      <param name="e">An <see cref="T:System.EventArgs" /> that contains the event data. </param>
    </member>
    <member name="M:System.Windows.Forms.ComboBox.OnDropDownClosed(System.EventArgs)">
      <summary>Raises the <see cref="E:System.Windows.Forms.ComboBox.DropDownClosed" /> event.</summary>
      <param name="e">An <see cref="T:System.EventArgs" /> that contains the event data. </param>
    </member>
    <member name="M:System.Windows.Forms.ComboBox.OnDropDownStyleChanged(System.EventArgs)">
      <summary>Raises the <see cref="E:System.Windows.Forms.ComboBox.DropDownStyleChanged" /> event.</summary>
      <param name="e">An <see cref="T:System.EventArgs" /> that contains the event data. </param>
    </member>
    <member name="M:System.Windows.Forms.ComboBox.OnFontChanged(System.EventArgs)">
      <param name="e">An <see cref="T:System.EventArgs" /> that contains the event data. </param>
    </member>
    <member name="M:System.Windows.Forms.ComboBox.OnForeColorChanged(System.EventArgs)">
      <param name="e">An <see cref="T:System.EventArgs" /> that contains the event data. </param>
    </member>
    <member name="M:System.Windows.Forms.ComboBox.OnGotFocus(System.EventArgs)">
      <summary>Raises the <see cref="E:System.Windows.Forms.Control.GotFocus" /> event.</summary>
      <param name="e">An <see cref="T:System.EventArgs" /> that contains the event data. </param>
    </member>
    <member name="M:System.Windows.Forms.ComboBox.OnHandleCreated(System.EventArgs)">
      <summary>Raises the <see cref="E:System.Windows.Forms.Control.HandleCreated" /> event.</summary>
      <param name="e">An <see cref="T:System.EventArgs" /> that contains the event data.</param>
    </member>
    <member name="M:System.Windows.Forms.ComboBox.OnHandleDestroyed(System.EventArgs)">
      <summary>Raises the <see cref="E:System.Windows.Forms.Control.HandleDestroyed" /> event.</summary>
      <param name="e">An <see cref="T:System.EventArgs" /> that contains the event data.</param>
    </member>
    <member name="M:System.Windows.Forms.ComboBox.OnKeyDown(System.Windows.Forms.KeyEventArgs)">
      <summary>Raises the <see cref="E:System.Windows.Forms.Control.KeyDown" /> event.</summary>
      <param name="e">A <see cref="T:System.Windows.Forms.KeyEventArgs" /> that contains the event data. </param>
    </member>
    <member name="M:System.Windows.Forms.ComboBox.OnKeyPress(System.Windows.Forms.KeyPressEventArgs)">
      <summary>Raises the <see cref="E:System.Windows.Forms.Control.KeyPress" /> event.</summary>
      <param name="e">A <see cref="T:System.Windows.Forms.KeyPressEventArgs" /> that contains the event data.</param>
    </member>
    <member name="M:System.Windows.Forms.ComboBox.OnLostFocus(System.EventArgs)">
      <summary>Raises the <see cref="E:System.Windows.Forms.Control.LostFocus" /> event.</summary>
      <param name="e">An <see cref="T:System.EventArgs" /> that contains the event data.</param>
    </member>
    <member name="M:System.Windows.Forms.ComboBox.OnMeasureItem(System.Windows.Forms.MeasureItemEventArgs)">
      <summary>Raises the <see cref="E:System.Windows.Forms.ComboBox.MeasureItem" /> event.</summary>
      <param name="e">The <see cref="T:System.Windows.Forms.MeasureItemEventArgs" /> that was raised. </param>
    </member>
    <member name="M:System.Windows.Forms.ComboBox.OnMouseEnter(System.EventArgs)">
      <summary>Raises the <see cref="E:System.Windows.Forms.Control.MouseEnter" /> event.</summary>
      <param name="e">An <see cref="T:System.EventArgs" /> that contains the event data. </param>
    </member>
    <member name="M:System.Windows.Forms.ComboBox.OnMouseLeave(System.EventArgs)">
      <summary>Raises the <see cref="E:System.Windows.Forms.Control.MouseLeave" /> event.</summary>
      <param name="e">An <see cref="T:System.EventArgs" /> that contains the event data. </param>
    </member>
    <member name="M:System.Windows.Forms.ComboBox.OnParentBackColorChanged(System.EventArgs)">
      <summary>Raises the <see cref="E:System.Windows.Forms.Control.BackColorChanged" /> event.</summary>
      <param name="e">An <see cref="T:System.EventArgs" /> that contains the event data.  </param>
    </member>
    <member name="M:System.Windows.Forms.ComboBox.OnResize(System.EventArgs)">
      <summary>Raises the <see cref="E:System.Windows.Forms.Control.Resize" /> event.</summary>
      <param name="e">An <see cref="T:System.EventArgs" /> that contains the event data. </param>
    </member>
    <member name="M:System.Windows.Forms.ComboBox.OnSelectedIndexChanged(System.EventArgs)">
      <summary>Raises the <see cref="E:System.Windows.Forms.ComboBox.SelectedIndexChanged" /> event.</summary>
      <param name="e">An <see cref="T:System.EventArgs" /> that contains the event data. </param>
    </member>
    <member name="M:System.Windows.Forms.ComboBox.OnSelectedItemChanged(System.EventArgs)">
      <summary>Raises the <see cref="E:System.Windows.Forms.DomainUpDown.SelectedItemChanged" /> event.</summary>
      <param name="e">An <see cref="T:System.EventArgs" /> that contains the event data. </param>
    </member>
    <member name="M:System.Windows.Forms.ComboBox.OnSelectedValueChanged(System.EventArgs)">
      <summary>Raises the <see cref="E:System.Windows.Forms.ListControl.SelectedValueChanged" /> event. </summary>
      <param name="e">An <see cref="T:System.EventArgs" /> that contains the event data. </param>
    </member>
    <member name="M:System.Windows.Forms.ComboBox.OnSelectionChangeCommitted(System.EventArgs)">
      <summary>Raises the <see cref="E:System.Windows.Forms.ComboBox.SelectionChangeCommitted" /> event.</summary>
      <param name="e">An <see cref="T:System.EventArgs" /> that contains the event data. </param>
    </member>
    <member name="M:System.Windows.Forms.ComboBox.OnTextChanged(System.EventArgs)">
      <summary>Raises the <see cref="E:System.Windows.Forms.Control.TextChanged" /> event.</summary>
      <param name="e">An <see cref="T:System.EventArgs" /> that contains the event data.</param>
    </member>
    <member name="M:System.Windows.Forms.ComboBox.OnTextUpdate(System.EventArgs)">
      <summary>Raises the <see cref="E:System.Windows.Forms.ComboBox.TextUpdate" /> event.</summary>
      <param name="e">An <see cref="T:System.EventArgs" /> that contains the event data.</param>
    </member>
    <member name="M:System.Windows.Forms.ComboBox.OnValidating(System.ComponentModel.CancelEventArgs)">
      <summary>Raises the <see cref="E:System.Windows.Forms.Control.Validating" /> event.</summary>
      <param name="e">A <see cref="T:System.ComponentModel.CancelEventArgs" /> that contains the event data. </param>
    </member>
    <member name="P:System.Windows.Forms.ComboBox.Padding">
      <summary>This property is not relevant for this class.</summary>
      <returns>A <see cref="T:System.Windows.Forms.Padding" /> value.</returns>
    </member>
    <member name="E:System.Windows.Forms.ComboBox.PaddingChanged">
      <summary>This event is not relevant to this class.</summary>
    </member>
    <member name="E:System.Windows.Forms.ComboBox.Paint">
      <summary>Occurs when the <see cref="T:System.Windows.Forms.ComboBox" /> control is redrawn.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="P:System.Windows.Forms.ComboBox.PreferredHeight">
      <summary>Gets the preferred height of the <see cref="T:System.Windows.Forms.ComboBox" />.</summary>
      <returns>The preferred height, in pixels, of the item area of the combo box.</returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Windows.Forms.ComboBox.ProcessKeyEventArgs(System.Windows.Forms.Message@)">
      <returns>true if the message was processed by the control; otherwise, false.</returns>
      <param name="m">A <see cref="T:System.Windows.Forms.Message" />, passed by reference, that represents the window message to process. </param>
    </member>
    <member name="M:System.Windows.Forms.ComboBox.RefreshItem(System.Int32)">
      <summary>Refreshes the item contained at the specified location.</summary>
      <param name="index">The location of the item to refresh.</param>
    </member>
    <member name="M:System.Windows.Forms.ComboBox.RefreshItems">
      <summary>Refreshes all <see cref="T:System.Windows.Forms.ComboBox" /> items.</summary>
    </member>
    <member name="M:System.Windows.Forms.ComboBox.ResetText">
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Windows.Forms.ComboBox.ScaleControl(System.Drawing.SizeF,System.Windows.Forms.BoundsSpecified)">
      <param name="factor">The factor by which the height and width of the control will be scaled.</param>
      <param name="specified">A <see cref="T:System.Windows.Forms.BoundsSpecified" /> value that specifies the bounds of the control to use when defining its size and position.</param>
    </member>
    <member name="M:System.Windows.Forms.ComboBox.Select(System.Int32,System.Int32)">
      <summary>Selects a range of text in the editable portion of the <see cref="T:System.Windows.Forms.ComboBox" />.</summary>
      <param name="start">The position of the first character in the current text selection within the text box. </param>
      <param name="length">The number of characters to select. </param>
      <exception cref="T:System.ArgumentException">The <paramref name="start" /> is less than zero.-or- <paramref name="start" /> plus <paramref name="length" /> is less than zero. </exception>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
        <IPermission class="System.Diagnostics.PerformanceCounterPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:System.Windows.Forms.ComboBox.SelectAll">
      <summary>Selects all the text in the editable portion of the <see cref="T:System.Windows.Forms.ComboBox" />.</summary>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
        <IPermission class="System.Diagnostics.PerformanceCounterPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="P:System.Windows.Forms.ComboBox.SelectedIndex">
      <summary>Gets or sets the index specifying the currently selected item.</summary>
      <returns>A zero-based index of the currently selected item. A value of negative one (-1) is returned if no item is selected.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">The specified index is less than or equal to -2.-or- The specified index is greater than or equal to the number of items in the combo box. </exception>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
        <IPermission class="System.Diagnostics.PerformanceCounterPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="E:System.Windows.Forms.ComboBox.SelectedIndexChanged">
      <summary>Occurs when the <see cref="P:System.Windows.Forms.ComboBox.SelectedIndex" /> property has changed.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="P:System.Windows.Forms.ComboBox.SelectedItem">
      <summary>Gets or sets currently selected item in the <see cref="T:System.Windows.Forms.ComboBox" />.</summary>
      <returns>The object that is the currently selected item or null if there is no currently selected item.</returns>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
        <IPermission class="System.Diagnostics.PerformanceCounterPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="P:System.Windows.Forms.ComboBox.SelectedText">
      <summary>Gets or sets the text that is selected in the editable portion of a <see cref="T:System.Windows.Forms.ComboBox" />.</summary>
      <returns>A string that represents the currently selected text in the combo box. If <see cref="P:System.Windows.Forms.ComboBox.DropDownStyle" /> is set to <see cref="F:System.Windows.Forms.ComboBoxStyle.DropDownList" />, the return value is an empty string ("").</returns>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
        <IPermission class="System.Diagnostics.PerformanceCounterPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="E:System.Windows.Forms.ComboBox.SelectionChangeCommitted">
      <summary>Occurs when the selected item has changed and that change is displayed in the <see cref="T:System.Windows.Forms.ComboBox" />.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="P:System.Windows.Forms.ComboBox.SelectionLength">
      <summary>Gets or sets the number of characters selected in the editable portion of the combo box.</summary>
      <returns>The number of characters selected in the combo box.</returns>
      <exception cref="T:System.ArgumentException">The value was less than zero. </exception>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
        <IPermission class="System.Diagnostics.PerformanceCounterPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="P:System.Windows.Forms.ComboBox.SelectionStart">
      <summary>Gets or sets the starting index of text selected in the combo box.</summary>
      <returns>The zero-based index of the first character in the string of the current text selection.</returns>
      <exception cref="T:System.ArgumentException">The value is less than zero. </exception>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
        <IPermission class="System.Diagnostics.PerformanceCounterPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:System.Windows.Forms.ComboBox.SetBoundsCore(System.Int32,System.Int32,System.Int32,System.Int32,System.Windows.Forms.BoundsSpecified)">
      <summary>Sets the size and location of the <see cref="T:System.Windows.Forms.ComboBox" />.</summary>
      <param name="x">The horizontal location in pixels of the control. </param>
      <param name="y">The vertical location in pixels of the control. </param>
      <param name="width">The width in pixels of the control. </param>
      <param name="height">The height in pixels of the control. </param>
      <param name="specified">One of the <see cref="T:System.Windows.Forms.BoundsSpecified" /> values. </param>
    </member>
    <member name="M:System.Windows.Forms.ComboBox.SetItemCore(System.Int32,System.Object)">
      <summary>When overridden in a derived class, sets the object with the specified index in the derived class.</summary>
      <param name="index">The array index of the object.</param>
      <param name="value">The object.</param>
    </member>
    <member name="M:System.Windows.Forms.ComboBox.SetItemsCore(System.Collections.IList)">
      <summary>When overridden in a derived class, sets the specified array of objects in a collection in the derived class.</summary>
      <param name="value">An array of items.</param>
    </member>
    <member name="P:System.Windows.Forms.ComboBox.Sorted">
      <summary>Gets or sets a value indicating whether the items in the combo box are sorted.</summary>
      <returns>true if the combo box is sorted; otherwise, false. The default is false.</returns>
      <exception cref="T:System.ArgumentException">An attempt was made to sort a <see cref="T:System.Windows.Forms.ComboBox" /> that is attached to a data source. </exception>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
        <IPermission class="System.Diagnostics.PerformanceCounterPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="P:System.Windows.Forms.ComboBox.Text">
      <summary>Gets or sets the text associated with this control.</summary>
      <returns>The text associated with this control.</returns>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
        <IPermission class="System.Diagnostics.PerformanceCounterPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="E:System.Windows.Forms.ComboBox.TextUpdate">
      <summary>Occurs when the control has formatted the text, but before the text is displayed.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Windows.Forms.ComboBox.ToString">
      <summary>Returns a string that represents the <see cref="T:System.Windows.Forms.ComboBox" /> control.</summary>
      <returns>A <see cref="T:System.String" /> that represents the current <see cref="T:System.Windows.Forms.ComboBox" />. The string includes the type and the number of items in the <see cref="T:System.Windows.Forms.ComboBox" /> control.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Windows.Forms.ComboBox.WndProc(System.Windows.Forms.Message@)">
      <summary>Processes Windows messages.</summary>
      <param name="m">The Windows <see cref="T:System.Windows.Forms.Message" /> to process. </param>
    </member>
    <member name="T:System.Windows.Forms.ComboBox.ChildAccessibleObject">
      <summary>Provides information about the <see cref="T:System.Windows.Forms.ComboBox" /> control to accessibility client applications.</summary>
    </member>
    <member name="M:System.Windows.Forms.ComboBox.ChildAccessibleObject.#ctor(System.Windows.Forms.ComboBox,System.IntPtr)">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Forms.ComboBox.ChildAccessibleObject" /> class.</summary>
      <param name="owner">The <see cref="T:System.Windows.Forms.ComboBox" /> control that owns the <see cref="T:System.Windows.Forms.ComboBox.ChildAccessibleObject" />.</param>
      <param name="handle">A handle to part of the <see cref="T:System.Windows.Forms.ComboBox" />.</param>
    </member>
    <member name="P:System.Windows.Forms.ComboBox.ChildAccessibleObject.Name">
      <summary>Gets the name of the object.</summary>
      <returns>The value of the <see cref="P:System.Windows.Forms.ComboBox.ChildAccessibleObject.Name" /> property is the same as the <see cref="P:System.Windows.Forms.AccessibleObject.Name" /> property for the <see cref="T:System.Windows.Forms.AccessibleObject" /> of the <see cref="T:System.Windows.Forms.ComboBox" />.</returns>
    </member>
    <member name="T:System.Windows.Forms.ComboBox.ObjectCollection">
      <summary>Represents the collection of items in a <see cref="T:System.Windows.Forms.ComboBox" />.</summary>
    </member>
    <member name="M:System.Windows.Forms.ComboBox.ObjectCollection.#ctor(System.Windows.Forms.ComboBox)">
      <summary>Initializes a new instance of <see cref="T:System.Windows.Forms.ComboBox.ObjectCollection" />.</summary>
      <param name="owner">The <see cref="T:System.Windows.Forms.ComboBox" /> that owns this object collection. </param>
    </member>
    <member name="M:System.Windows.Forms.ComboBox.ObjectCollection.Add(System.Object)">
      <summary>Adds an item to the list of items for a <see cref="T:System.Windows.Forms.ComboBox" />.</summary>
      <returns>The zero-based index of the item in the collection.</returns>
      <param name="item">An object representing the item to add to the collection. </param>
      <exception cref="T:System.ArgumentNullException">The <paramref name="item" /> parameter was null. </exception>
    </member>
    <member name="M:System.Windows.Forms.ComboBox.ObjectCollection.AddRange(System.Object[])">
      <summary>Adds an array of items to the list of items for a <see cref="T:System.Windows.Forms.ComboBox" />.</summary>
      <param name="items">An array of objects to add to the list. </param>
      <exception cref="T:System.ArgumentNullException">An item in the <paramref name="items" /> parameter was null. </exception>
    </member>
    <member name="M:System.Windows.Forms.ComboBox.ObjectCollection.Clear">
      <summary>Removes all items from the <see cref="T:System.Windows.Forms.ComboBox" />.</summary>
    </member>
    <member name="M:System.Windows.Forms.ComboBox.ObjectCollection.Contains(System.Object)">
      <summary>Determines if the specified item is located within the collection.</summary>
      <returns>true if the item is located within the collection; otherwise, false.</returns>
      <param name="value">An object representing the item to locate in the collection. </param>
    </member>
    <member name="M:System.Windows.Forms.ComboBox.ObjectCollection.CopyTo(System.Object[],System.Int32)">
      <summary>Copies the entire collection into an existing array of objects at a specified location within the array.</summary>
      <param name="destination">The object array to copy the collection to. </param>
      <param name="arrayIndex">The location in the destination array to copy the collection to. </param>
    </member>
    <member name="P:System.Windows.Forms.ComboBox.ObjectCollection.Count">
      <summary>Gets the number of items in the collection.</summary>
      <returns>The number of items in the collection.</returns>
    </member>
    <member name="M:System.Windows.Forms.ComboBox.ObjectCollection.GetEnumerator">
      <summary>Returns an enumerator that can be used to iterate through the item collection.</summary>
      <returns>An <see cref="T:System.Collections.IEnumerator" /> that represents the item collection.</returns>
    </member>
    <member name="M:System.Windows.Forms.ComboBox.ObjectCollection.IndexOf(System.Object)">
      <summary>Retrieves the index within the collection of the specified item.</summary>
      <returns>The zero-based index where the item is located within the collection; otherwise, -1.</returns>
      <param name="value">An object representing the item to locate in the collection. </param>
      <exception cref="T:System.ArgumentNullException">The <paramref name="value" /> parameter was null. </exception>
    </member>
    <member name="M:System.Windows.Forms.ComboBox.ObjectCollection.Insert(System.Int32,System.Object)">
      <summary>Inserts an item into the collection at the specified index.</summary>
      <param name="index">The zero-based index location where the item is inserted. </param>
      <param name="item">An object representing the item to insert. </param>
      <exception cref="T:System.ArgumentNullException">The <paramref name="item" /> was null. </exception>
      <exception cref="T:System.ArgumentOutOfRangeException">The <paramref name="index" /> was less than zero.-or- The <paramref name="index" /> was greater than the count of items in the collection. </exception>
    </member>
    <member name="P:System.Windows.Forms.ComboBox.ObjectCollection.IsReadOnly">
      <summary>Gets a value indicating whether this collection can be modified.</summary>
      <returns>Always false.</returns>
    </member>
    <member name="P:System.Windows.Forms.ComboBox.ObjectCollection.Item(System.Int32)">
      <summary>Retrieves the item at the specified index within the collection.</summary>
      <returns>An object representing the item located at the specified index within the collection.</returns>
      <param name="index">The index of the item in the collection to retrieve. </param>
      <exception cref="T:System.ArgumentOutOfRangeException">The index was less than zero.-or- The <paramref name="index" /> was greater than the count of items in the collection. </exception>
    </member>
    <member name="M:System.Windows.Forms.ComboBox.ObjectCollection.Remove(System.Object)">
      <summary>Removes the specified item from the <see cref="T:System.Windows.Forms.ComboBox" />.</summary>
      <param name="value">The <see cref="T:System.Object" /> to remove from the list. </param>
    </member>
    <member name="M:System.Windows.Forms.ComboBox.ObjectCollection.RemoveAt(System.Int32)">
      <summary>Removes an item from the <see cref="T:System.Windows.Forms.ComboBox" /> at the specified index.</summary>
      <param name="index">The index of the item to remove. </param>
      <exception cref="T:System.ArgumentOutOfRangeException">The <paramref name="value" /> parameter was less than zero.-or- The <paramref name="value" /> parameter was greater than or equal to the count of items in the collection. </exception>
    </member>
    <member name="M:System.Windows.Forms.ComboBox.ObjectCollection.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
      <summary>For a description of this member, see <see cref="M:System.Collections.ICollection.CopyTo(System.Array,System.Int32)" />.</summary>
      <param name="destination">The one-dimensional array that is the destination of the elements copied from the collection. The array must have zero-based indexing.</param>
      <param name="index">The zero-based index in the array at which copying begins.</param>
    </member>
    <member name="P:System.Windows.Forms.ComboBox.ObjectCollection.System#Collections#ICollection#IsSynchronized">
      <summary>For a description of this member, see <see cref="P:System.Collections.ICollection.IsSynchronized" />.</summary>
      <returns>false in all cases.</returns>
    </member>
    <member name="P:System.Windows.Forms.ComboBox.ObjectCollection.System#Collections#ICollection#SyncRoot">
      <summary>For a description of this member, see <see cref="P:System.Collections.ICollection.SyncRoot" />.</summary>
      <returns>An object that can be used to synchronize access to the <see cref="T:System.Windows.Forms.ComboBox.ObjectCollection" />.</returns>
    </member>
    <member name="M:System.Windows.Forms.ComboBox.ObjectCollection.System#Collections#IList#Add(System.Object)">
      <summary>For a description of this member, see <see cref="M:System.Collections.IList.Add(System.Object)" />.</summary>
      <returns>The zero-based index of the item in the collection.</returns>
      <param name="item">An object that represents the item to add to the collection.</param>
      <exception cref="T:System.ArgumentNullException">The <paramref name="item" /> parameter is null.</exception>
      <exception cref="T:System.SystemException">There is insufficient space available to store the new item.</exception>
    </member>
    <member name="P:System.Windows.Forms.ComboBox.ObjectCollection.System#Collections#IList#IsFixedSize">
      <summary>For a description of this member, see <see cref="P:System.Collections.IList.IsFixedSize" />.</summary>
      <returns>false in all cases.</returns>
    </member>
    <member name="T:System.Windows.Forms.ComboBoxRenderer">
      <summary>Provides methods used to render a combo box control with visual styles. This class cannot be inherited.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Windows.Forms.ComboBoxRenderer.DrawDropDownButton(System.Drawing.Graphics,System.Drawing.Rectangle,System.Windows.Forms.VisualStyles.ComboBoxState)">
      <summary>Draws a drop-down arrow with the current visual style of the operating system.</summary>
      <param name="g">The <see cref="T:System.Drawing.Graphics" /> used to draw the drop-down arrow.</param>
      <param name="bounds">The <see cref="T:System.Drawing.Rectangle" /> that specifies the bounds of the drop-down arrow.</param>
      <param name="state">One of the <see cref="T:System.Windows.Forms.VisualStyles.ComboBoxState" /> values that specifies the visual state of the drop-down arrow.</param>
      <exception cref="T:System.InvalidOperationException">The operating system does not support visual styles.-or-Visual styles are disabled by the user in the operating system.-or-Visual styles are not applied to the client area of application windows.</exception>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:System.Windows.Forms.ComboBoxRenderer.DrawTextBox(System.Drawing.Graphics,System.Drawing.Rectangle,System.String,System.Drawing.Font,System.Drawing.Rectangle,System.Windows.Forms.TextFormatFlags,System.Windows.Forms.VisualStyles.ComboBoxState)">
      <summary>Draws a text box in the specified state and bounds, with the specified text, text formatting, and text bounds.</summary>
      <param name="g">The <see cref="T:System.Drawing.Graphics" /> used to draw the text box.</param>
      <param name="bounds">The <see cref="T:System.Drawing.Rectangle" /> that specifies the bounds of the text box.</param>
      <param name="comboBoxText">The <see cref="T:System.String" /> to draw in the text box.</param>
      <param name="font">The <see cref="T:System.Drawing.Font" /> to apply to <paramref name="comboBoxText" />.</param>
      <param name="textBounds">The <see cref="T:System.Drawing.Rectangle" /> that specifies the bounds in which to draw <paramref name="comboBoxText" />.</param>
      <param name="flags">A bitwise combination of the <see cref="T:System.Windows.Forms.TextFormatFlags" /> values.</param>
      <param name="state">One of the <see cref="T:System.Windows.Forms.VisualStyles.ComboBoxState" /> values that specifies the visual state of the text box.</param>
      <exception cref="T:System.InvalidOperationException">The operating system does not support visual styles.-or-Visual styles are disabled by the user in the operating system.-or-Visual styles are not applied to the client area of application windows.</exception>
    </member>
    <member name="M:System.Windows.Forms.ComboBoxRenderer.DrawTextBox(System.Drawing.Graphics,System.Drawing.Rectangle,System.String,System.Drawing.Font,System.Drawing.Rectangle,System.Windows.Forms.VisualStyles.ComboBoxState)">
      <summary>Draws a text box in the specified state and bounds, with the specified text and text bounds.</summary>
      <param name="g">The <see cref="T:System.Drawing.Graphics" /> used to draw the text box.</param>
      <param name="bounds">The <see cref="T:System.Drawing.Rectangle" /> that specifies the bounds of the text box.</param>
      <param name="comboBoxText">The <see cref="T:System.String" /> to draw in the text box.</param>
      <param name="font">The <see cref="T:System.Drawing.Font" /> to apply to <paramref name="comboBoxText" />.</param>
      <param name="textBounds">The <see cref="T:System.Drawing.Rectangle" /> that specifies the bounds in which to draw <paramref name="comboBoxText" />.</param>
      <param name="state">One of the <see cref="T:System.Windows.Forms.VisualStyles.ComboBoxState" /> values that specifies the visual state of the text box.</param>
      <exception cref="T:System.InvalidOperationException">The operating system does not support visual styles.-or-Visual styles are disabled by the user in the operating system.-or-Visual styles are not applied to the client area of application windows.</exception>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:System.Windows.Forms.ComboBoxRenderer.DrawTextBox(System.Drawing.Graphics,System.Drawing.Rectangle,System.String,System.Drawing.Font,System.Windows.Forms.TextFormatFlags,System.Windows.Forms.VisualStyles.ComboBoxState)">
      <summary>Draws a text box in the specified state and bounds, with the specified text and text formatting.</summary>
      <param name="g">The <see cref="T:System.Drawing.Graphics" /> used to draw the text box.</param>
      <param name="bounds">The <see cref="T:System.Drawing.Rectangle" /> that specifies the bounds of the text box.</param>
      <param name="comboBoxText">The <see cref="T:System.String" /> to draw in the text box.</param>
      <param name="font">The <see cref="T:System.Drawing.Font" /> to apply to <paramref name="comboBoxText" />.</param>
      <param name="flags">A bitwise combination of the <see cref="T:System.Windows.Forms.TextFormatFlags" /> values.</param>
      <param name="state">One of the <see cref="T:System.Windows.Forms.VisualStyles.ComboBoxState" /> values that specifies the visual state of the text box.</param>
      <exception cref="T:System.InvalidOperationException">The operating system does not support visual styles.-or-Visual styles are disabled by the user in the operating system.-or-Visual styles are not applied to the client area of application windows.</exception>
    </member>
    <member name="M:System.Windows.Forms.ComboBoxRenderer.DrawTextBox(System.Drawing.Graphics,System.Drawing.Rectangle,System.String,System.Drawing.Font,System.Windows.Forms.VisualStyles.ComboBoxState)">
      <summary>Draws a text box in the specified state and bounds, with the specified text.</summary>
      <param name="g">The <see cref="T:System.Drawing.Graphics" /> used to draw the text box.</param>
      <param name="bounds">The <see cref="T:System.Drawing.Rectangle" /> that specifies the bounds of the text box.</param>
      <param name="comboBoxText">The <see cref="T:System.String" /> to draw in the text box.</param>
      <param name="font">The <see cref="T:System.Drawing.Font" /> to apply to <paramref name="comboBoxText" />.</param>
      <param name="state">One of the <see cref="T:System.Windows.Forms.VisualStyles.ComboBoxState" /> values that specifies the visual state of the text box.</param>
      <exception cref="T:System.InvalidOperationException">The operating system does not support visual styles.-or-Visual styles are disabled by the user in the operating system.-or-Visual styles are not applied to the client area of application windows.</exception>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:System.Windows.Forms.ComboBoxRenderer.DrawTextBox(System.Drawing.Graphics,System.Drawing.Rectangle,System.Windows.Forms.VisualStyles.ComboBoxState)">
      <summary>Draws a text box in the specified state and bounds.</summary>
      <param name="g">The <see cref="T:System.Drawing.Graphics" /> used to draw the text box.</param>
      <param name="bounds">The <see cref="T:System.Drawing.Rectangle" /> that specifies the bounds of the text box.</param>
      <param name="state">One of the <see cref="T:System.Windows.Forms.VisualStyles.ComboBoxState" /> values that specifies the visual state of the text box.</param>
      <exception cref="T:System.InvalidOperationException">The operating system does not support visual styles.-or-Visual styles are disabled by the user in the operating system.-or-Visual styles are not applied to the client area of application windows.</exception>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="P:System.Windows.Forms.ComboBoxRenderer.IsSupported">
      <summary>Gets a value indicating whether the <see cref="T:System.Windows.Forms.ComboBoxRenderer" /> class can be used to draw a combo box with visual styles.</summary>
      <returns>true if the user has enabled visual styles in the operating system and visual styles are applied to the client area of application windows; otherwise, false.</returns>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="T:System.Windows.Forms.ComboBoxStyle">
      <summary>Specifies the <see cref="T:System.Windows.Forms.ComboBox" /> style.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="F:System.Windows.Forms.ComboBoxStyle.Simple">
      <summary>Specifies that the list is always visible and that the text portion is editable. This means that the user can enter a new value and is not limited to selecting an existing value in the list.</summary>
    </member>
    <member name="F:System.Windows.Forms.ComboBoxStyle.DropDown">
      <summary>Specifies that the list is displayed by clicking the down arrow and that the text portion is editable. This means that the user can enter a new value and is not limited to selecting an existing value in the list. When using this setting, the <see cref="F:System.Windows.Forms.AutoCompleteMode.Append" /> value of <see cref="P:System.Windows.Forms.ComboBox.AutoCompleteMode" /> works the same as the <see cref="F:System.Windows.Forms.AutoCompleteMode.SuggestAppend" /> value. This is the default style.</summary>
    </member>
    <member name="F:System.Windows.Forms.ComboBoxStyle.DropDownList">
      <summary>Specifies that the list is displayed by clicking the down arrow and that the text portion is not editable. This means that the user cannot enter a new value. Only values already in the list can be selected. The list displays only if <see cref="P:System.Windows.Forms.ComboBox.AutoCompleteMode" /> is <see cref="F:System.Windows.Forms.AutoCompleteMode.Suggest" /> or <see cref="F:System.Windows.Forms.AutoCompleteMode.SuggestAppend" />.</summary>
    </member>
    <member name="T:System.Windows.Forms.CommonDialog">
      <summary>Specifies the base class used for displaying dialog boxes on the screen.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Windows.Forms.CommonDialog.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Forms.CommonDialog" /> class.</summary>
    </member>
    <member name="E:System.Windows.Forms.CommonDialog.HelpRequest">
      <summary>Occurs when the user clicks the Help button on a common dialog box.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Windows.Forms.CommonDialog.HookProc(System.IntPtr,System.Int32,System.IntPtr,System.IntPtr)">
      <summary>Defines the common dialog box hook procedure that is overridden to add specific functionality to a common dialog box.</summary>
      <returns>A zero value if the default dialog box procedure processes the message; a nonzero value if the default dialog box procedure ignores the message.</returns>
      <param name="hWnd">The handle to the dialog box window. </param>
      <param name="msg">The message being received. </param>
      <param name="wparam">Additional information about the message. </param>
      <param name="lparam">Additional information about the message. </param>
    </member>
    <member name="M:System.Windows.Forms.CommonDialog.OnHelpRequest(System.EventArgs)">
      <summary>Raises the <see cref="E:System.Windows.Forms.CommonDialog.HelpRequest" /> event.</summary>
      <param name="e">An <see cref="T:System.Windows.Forms.HelpEventArgs" /> that provides the event data. </param>
    </member>
    <member name="M:System.Windows.Forms.CommonDialog.OwnerWndProc(System.IntPtr,System.Int32,System.IntPtr,System.IntPtr)">
      <summary>Defines the owner window procedure that is overridden to add specific functionality to a common dialog box.</summary>
      <returns>The result of the message processing, which is dependent on the message sent.</returns>
      <param name="hWnd">The window handle of the message to send. </param>
      <param name="msg">The Win32 message to send. </param>
      <param name="wparam">The <paramref name="wparam" /> to send with the message. </param>
      <param name="lparam">The <paramref name="lparam" /> to send with the message. </param>
    </member>
    <member name="M:System.Windows.Forms.CommonDialog.Reset">
      <summary>When overridden in a derived class, resets the properties of a common dialog box to their default values.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Windows.Forms.CommonDialog.RunDialog(System.IntPtr)">
      <summary>When overridden in a derived class, specifies a common dialog box.</summary>
      <returns>true if the dialog box was successfully run; otherwise, false.</returns>
      <param name="hwndOwner">A value that represents the window handle of the owner window for the common dialog box. </param>
    </member>
    <member name="M:System.Windows.Forms.CommonDialog.ShowDialog">
      <summary>Runs a common dialog box with a default owner.</summary>
      <returns>
        <see cref="F:System.Windows.Forms.DialogResult.OK" /> if the user clicks OK in the dialog box; otherwise, <see cref="F:System.Windows.Forms.DialogResult.Cancel" />.</returns>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
        <IPermission class="System.Diagnostics.PerformanceCounterPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:System.Windows.Forms.CommonDialog.ShowDialog(System.Windows.Forms.IWin32Window)">
      <summary>Runs a common dialog box with the specified owner.</summary>
      <returns>
        <see cref="F:System.Windows.Forms.DialogResult.OK" /> if the user clicks OK in the dialog box; otherwise, <see cref="F:System.Windows.Forms.DialogResult.Cancel" />.</returns>
      <param name="owner">Any object that implements <see cref="T:System.Windows.Forms.IWin32Window" /> that represents the top-level window that will own the modal dialog box. </param>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
        <IPermission class="System.Diagnostics.PerformanceCounterPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="P:System.Windows.Forms.CommonDialog.Tag">
      <summary>Gets or sets an object that contains data about the control. </summary>
      <returns>The object that contains data about the <see cref="T:System.Windows.Forms.CommonDialog" />.</returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="T:System.Windows.Forms.ContainerControl">
      <summary>Provides focus-management functionality for controls that can function as a container for other controls.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Windows.Forms.ContainerControl.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Forms.ContainerControl" /> class.</summary>
    </member>
    <member name="P:System.Windows.Forms.ContainerControl.ActiveControl">
      <summary>Gets or sets the active control on the container control.</summary>
      <returns>The <see cref="T:System.Windows.Forms.Control" /> that is currently active on the <see cref="T:System.Windows.Forms.ContainerControl" />.</returns>
      <exception cref="T:System.ArgumentException">The <see cref="T:System.Windows.Forms.Control" /> assigned could not be activated. </exception>
      <filterpriority>2</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
        <IPermission class="System.Diagnostics.PerformanceCounterPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:System.Windows.Forms.ContainerControl.AdjustFormScrollbars(System.Boolean)">
      <param name="displayScrollbars">true to show the scroll bars; otherwise, false. </param>
    </member>
    <member name="P:System.Windows.Forms.ContainerControl.AutoScaleDimensions">
      <summary>Gets or sets the dimensions that the control was designed to.</summary>
      <returns>A <see cref="T:System.Drawing.SizeF" /> containing the dots per inch (DPI) or <see cref="T:System.Drawing.Font" /> size that the control was designed to.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">The width or height of the <see cref="T:System.Drawing.SizeF" /> value is less than 0 when setting this value.</exception>
    </member>
    <member name="P:System.Windows.Forms.ContainerControl.AutoScaleFactor">
      <summary>Gets the scaling factor between the current and design-time automatic scaling dimensions. </summary>
      <returns>A <see cref="T:System.Drawing.SizeF" /> containing the scaling ratio between the current and design-time scaling automatic scaling dimensions.</returns>
    </member>
    <member name="P:System.Windows.Forms.ContainerControl.AutoScaleMode">
      <summary>Gets or sets the automatic scaling mode of the control.</summary>
      <returns>An <see cref="T:System.Windows.Forms.AutoScaleMode" /> that represents the current scaling mode. The default is <see cref="F:System.Windows.Forms.AutoScaleMode.None" />.</returns>
      <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">An <see cref="T:System.Windows.Forms.AutoScaleMode" /> value that is not valid was used to set this property.</exception>
    </member>
    <member name="P:System.Windows.Forms.ContainerControl.AutoValidate">
      <summary>Gets or sets a value that indicates whether controls in this container will be automatically validated when the focus changes.</summary>
      <returns>An <see cref="T:System.Windows.Forms.AutoValidate" /> enumerated value that indicates whether contained controls are implicitly validated on focus change. The default is <see cref="F:System.Windows.Forms.AutoValidate.Inherit" />.</returns>
      <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">A <see cref="T:System.Windows.Forms.AutoValidate" /> value that is not valid was used to set this property.</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="E:System.Windows.Forms.ContainerControl.AutoValidateChanged">
      <summary>Occurs when the <see cref="P:System.Windows.Forms.ContainerControl.AutoValidate" /> property changes.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="P:System.Windows.Forms.ContainerControl.BindingContext">
      <returns>A <see cref="T:System.Windows.Forms.BindingContext" /> for the control.</returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="P:System.Windows.Forms.ContainerControl.CanEnableIme">
      <summary>Gets a value indicating whether the <see cref="P:System.Windows.Forms.Control.ImeMode" /> property can be set to an active value, to enable IME support.</summary>
      <returns>false in all cases.</returns>
    </member>
    <member name="P:System.Windows.Forms.ContainerControl.CreateParams">
      <summary>Gets the required creation parameters when the control handle is created.</summary>
      <returns>A <see cref="T:System.Windows.Forms.CreateParams" /> that contains the required creation parameters when the handle to the control is created.</returns>
    </member>
    <member name="P:System.Windows.Forms.ContainerControl.CurrentAutoScaleDimensions">
      <summary>Gets the current run-time dimensions of the screen.</summary>
      <returns>A <see cref="T:System.Drawing.SizeF" /> containing the current dots per inch (DPI) or <see cref="T:System.Drawing.Font" /> size of the screen.</returns>
      <exception cref="T:System.ComponentModel.Win32Exception">A Win32 device context could not be created for the current screen.</exception>
    </member>
    <member name="M:System.Windows.Forms.ContainerControl.Dispose(System.Boolean)">
      <param name="disposing">true to release both managed and unmanaged resources; false to release only unmanaged resources. </param>
    </member>
    <member name="M:System.Windows.Forms.ContainerControl.OnAutoValidateChanged(System.EventArgs)">
      <summary>Raises the <see cref="E:System.Windows.Forms.ContainerControl.AutoValidateChanged" /> event.</summary>
      <param name="e">An <see cref="T:System.EventArgs" /> that contains the event data.</param>
    </member>
    <member name="M:System.Windows.Forms.ContainerControl.OnCreateControl"></member>
    <member name="M:System.Windows.Forms.ContainerControl.OnFontChanged(System.EventArgs)">
      <summary>Raises the <see cref="E:System.Windows.Forms.Control.FontChanged" /> event.</summary>
      <param name="e">An <see cref="T:System.EventArgs" /> that contains the event data.</param>
    </member>
    <member name="M:System.Windows.Forms.ContainerControl.OnLayout(System.Windows.Forms.LayoutEventArgs)">
      <summary>Raises the <see cref="E:System.Windows.Forms.Control.Layout" /> event.</summary>
      <param name="e">A <see cref="T:System.Windows.Forms.LayoutEventArgs" /> that contains the event data. </param>
    </member>
    <member name="M:System.Windows.Forms.ContainerControl.OnParentChanged(System.EventArgs)">
      <param name="e">An <see cref="T:System.EventArgs" /> that contains the event data. </param>
    </member>
    <member name="P:System.Windows.Forms.ContainerControl.ParentForm">
      <summary>Gets the form that the container control is assigned to.</summary>
      <returns>The <see cref="T:System.Windows.Forms.Form" /> that the container control is assigned to. This property will return null if the control is hosted inside of Internet Explorer or in another hosting context where there is no parent form. </returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Windows.Forms.ContainerControl.PerformAutoScale">
      <summary>Performs scaling of the container control and its children.</summary>
    </member>
    <member name="M:System.Windows.Forms.ContainerControl.ProcessCmdKey(System.Windows.Forms.Message@,System.Windows.Forms.Keys)">
      <returns>true if the character was processed by the control; otherwise, false.</returns>
      <param name="msg">A <see cref="T:System.Windows.Forms.Message" />, passed by reference, that represents the window message to process. </param>
      <param name="keyData">One of the <see cref="T:System.Windows.Forms.Keys" /> values that represents the key to process. </param>
    </member>
    <member name="M:System.Windows.Forms.ContainerControl.ProcessDialogChar(System.Char)">
      <returns>true if the character was processed by the control; otherwise, false.</returns>
      <param name="charCode">The character to process. </param>
    </member>
    <member name="M:System.Windows.Forms.ContainerControl.ProcessDialogKey(System.Windows.Forms.Keys)">
      <returns>true if the key was processed by the control; otherwise, false.</returns>
      <param name="keyData">One of the <see cref="T:System.Windows.Forms.Keys" /> values that represents the key to process. </param>
    </member>
    <member name="M:System.Windows.Forms.ContainerControl.ProcessMnemonic(System.Char)">
      <returns>true if the character was processed as a mnemonic by the control; otherwise, false.</returns>
      <param name="charCode">The character to process. </param>
    </member>
    <member name="M:System.Windows.Forms.ContainerControl.ProcessTabKey(System.Boolean)">
      <summary>Selects the next available control and makes it the active control.</summary>
      <returns>true if a control is selected; otherwise, false.</returns>
      <param name="forward">true to cycle forward through the controls in the <see cref="T:System.Windows.Forms.ContainerControl" />; otherwise, false. </param>
    </member>
    <member name="M:System.Windows.Forms.ContainerControl.Select(System.Boolean,System.Boolean)">
      <param name="directed">true to specify the direction of the control to select; otherwise, false. </param>
      <param name="forward">true to move forward in the tab order; false to move backward in the tab order. </param>
    </member>
    <member name="M:System.Windows.Forms.ContainerControl.System#Windows#Forms#IContainerControl#ActivateControl(System.Windows.Forms.Control)">
      <summary>Activates the specified control.</summary>
      <returns>true if the control is successfully activated; otherwise, false.</returns>
      <param name="control">The <see cref="T:System.Windows.Forms.Control" /> to activate.</param>
    </member>
    <member name="M:System.Windows.Forms.ContainerControl.UpdateDefaultButton">
      <summary>When overridden by a derived class, updates which button is the default button.</summary>
    </member>
    <member name="M:System.Windows.Forms.ContainerControl.Validate">
      <summary>Verifies the value of the control losing focus by causing the <see cref="E:System.Windows.Forms.Control.Validating" /> and <see cref="E:System.Windows.Forms.Control.Validated" /> events to occur, in that order. </summary>
      <returns>true if validation is successful; otherwise, false. If called from the <see cref="E:System.Windows.Forms.Control.Validating" /> or <see cref="E:System.Windows.Forms.Control.Validated" /> event handlers, this method will always return false.</returns>
      <filterpriority>2</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
        <IPermission class="System.Diagnostics.PerformanceCounterPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:System.Windows.Forms.ContainerControl.Validate(System.Boolean)">
      <summary>Verifies the value of the control that is losing focus; conditionally dependent on whether automatic validation is turned on. </summary>
      <returns>true if validation is successful; otherwise, false. If called from the <see cref="E:System.Windows.Forms.Control.Validating" /> or <see cref="E:System.Windows.Forms.Control.Validated" /> event handlers, this method will always return false.</returns>
      <param name="checkAutoValidate">If true, the value of the <see cref="P:System.Windows.Forms.ContainerControl.AutoValidate" /> property is used to determine if validation should be performed; if false, validation is unconditionally performed.</param>
    </member>
    <member name="M:System.Windows.Forms.ContainerControl.ValidateChildren">
      <summary>Causes all of the child controls within a control that support validation to validate their data. </summary>
      <returns>true if all of the children validated successfully; otherwise, false. If called from the <see cref="E:System.Windows.Forms.Control.Validating" /> or <see cref="E:System.Windows.Forms.Control.Validated" /> event handlers, this method will always return false.</returns>
    </member>
    <member name="M:System.Windows.Forms.ContainerControl.ValidateChildren(System.Windows.Forms.ValidationConstraints)">
      <summary>Causes all of the child controls within a control that support validation to validate their data. </summary>
      <returns>true if all of the children validated successfully; otherwise, false. If called from the <see cref="E:System.Windows.Forms.Control.Validating" /> or <see cref="E:System.Windows.Forms.Control.Validated" /> event handlers, this method will always return false.</returns>
      <param name="validationConstraints">Places restrictions on which controls have their <see cref="E:System.Windows.Forms.Control.Validating" /> event raised.</param>
    </member>
    <member name="M:System.Windows.Forms.ContainerControl.WndProc(System.Windows.Forms.Message@)">
      <summary>Processes Windows messages.</summary>
      <param name="m">The Windows <see cref="T:System.Windows.Forms.Message" /> to process. </param>
    </member>
    <member name="T:System.Windows.Forms.ContentsResizedEventArgs">
      <summary>Provides data for the <see cref="E:System.Windows.Forms.RichTextBox.ContentsResized" /> event.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Windows.Forms.ContentsResizedEventArgs.#ctor(System.Drawing.Rectangle)">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Forms.ContentsResizedEventArgs" /> class.</summary>
      <param name="newRectangle">A <see cref="T:System.Drawing.Rectangle" /> that specifies the requested dimensions of the <see cref="T:System.Windows.Forms.RichTextBox" /> control. </param>
    </member>
    <member name="P:System.Windows.Forms.ContentsResizedEventArgs.NewRectangle">
      <summary>Represents the requested size of the <see cref="T:System.Windows.Forms.RichTextBox" /> control.</summary>
      <returns>A <see cref="T:System.Drawing.Rectangle" /> that represents the requested size of the <see cref="T:System.Windows.Forms.RichTextBox" /> control.</returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="T:System.Windows.Forms.ContentsResizedEventHandler">
      <summary>Represents the method that will handle the <see cref="E:System.Windows.Forms.RichTextBox.ContentsResized" /> event of a <see cref="T:System.Windows.Forms.RichTextBox" />.</summary>
      <param name="sender">The source of the event.</param>
      <param name="e">A <see cref="T:System.Windows.Forms.ContentsResizedEventArgs" /> that contains the event data.</param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="T:System.Windows.Forms.ContextMenu">
      <summary>Represents a shortcut menu. Although <see cref="T:System.Windows.Forms.ContextMenuStrip" /> replaces and adds functionality to the <see cref="T:System.Windows.Forms.ContextMenu" /> control of previous versions, <see cref="T:System.Windows.Forms.ContextMenu" /> is retained for both backward compatibility and future use if you choose.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Windows.Forms.ContextMenu.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Forms.ContextMenu" /> class with no menu items specified.</summary>
    </member>
    <member name="M:System.Windows.Forms.ContextMenu.#ctor(System.Windows.Forms.MenuItem[])">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Forms.ContextMenu" /> class with a specified set of <see cref="T:System.Windows.Forms.MenuItem" /> objects.</summary>
      <param name="menuItems">An array of <see cref="T:System.Windows.Forms.MenuItem" /> objects that represent the menu items to add to the shortcut menu. </param>
    </member>
    <member name="E:System.Windows.Forms.ContextMenu.Collapse">
      <summary>Occurs when the shortcut menu collapses.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Windows.Forms.ContextMenu.OnCollapse(System.EventArgs)">
      <summary>Raises the <see cref="E:System.Windows.Forms.ContextMenu.Collapse" /> event. </summary>
      <param name="e">An <see cref="T:System.EventArgs" /> that contains the event data.</param>
    </member>
    <member name="M:System.Windows.Forms.ContextMenu.OnPopup(System.EventArgs)">
      <summary>Raises the <see cref="E:System.Windows.Forms.ContextMenu.Popup" /> event </summary>
      <param name="e">An <see cref="T:System.EventArgs" /> that contains the event data. </param>
    </member>
    <member name="E:System.Windows.Forms.ContextMenu.Popup">
      <summary>Occurs before the shortcut menu is displayed.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Windows.Forms.ContextMenu.ProcessCmdKey(System.Windows.Forms.Message@,System.Windows.Forms.Keys,System.Windows.Forms.Control)">
      <summary>Processes a command key.</summary>
      <returns>true if the character was processed by the control; otherwise, false.</returns>
      <param name="msg">A <see cref="T:System.Windows.Forms.Message" />, passed by reference, that represents the window message to process. </param>
      <param name="keyData">One of the <see cref="T:System.Windows.Forms.Keys" /> values that represents the key to process. </param>
      <param name="control">The control to which the command key applies.</param>
    </member>
    <member name="P:System.Windows.Forms.ContextMenu.RightToLeft">
      <summary>Gets or sets a value indicating whether text displayed by the control is displayed from right to left.</summary>
      <returns>One of the <see cref="T:System.Windows.Forms.RightToLeft" /> values.</returns>
      <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">The value assigned to the property is not a valid member of the <see cref="T:System.Windows.Forms.RightToLeft" /> enumeration. </exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Windows.Forms.ContextMenu.Show(System.Windows.Forms.Control,System.Drawing.Point)">
      <summary>Displays the shortcut menu at the specified position.</summary>
      <param name="control">A <see cref="T:System.Windows.Forms.Control" /> that specifies the control with which this shortcut menu is associated. </param>
      <param name="pos">A <see cref="T:System.Drawing.Point" /> that specifies the coordinates at which to display the menu. These coordinates are specified relative to the client coordinates of the control specified in the <paramref name="control" /> parameter. </param>
      <exception cref="T:System.ArgumentNullException">The <paramref name="control" /> parameter is null.</exception>
      <exception cref="T:System.ArgumentException">The handle of the control does not exist or the control is not visible.</exception>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
        <IPermission class="System.Diagnostics.PerformanceCounterPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:System.Windows.Forms.ContextMenu.Show(System.Windows.Forms.Control,System.Drawing.Point,System.Windows.Forms.LeftRightAlignment)">
      <summary>Displays the shortcut menu at the specified position and with the specified alignment.</summary>
      <param name="control">A <see cref="T:System.Windows.Forms.Control" /> that specifies the control with which this shortcut menu is associated.</param>
      <param name="pos">A <see cref="T:System.Drawing.Point" /> that specifies the coordinates at which to display the menu. These coordinates are specified relative to the client coordinates of the control specified in the <paramref name="control" /> parameter.</param>
      <param name="alignment">A <see cref="T:System.Windows.Forms.LeftRightAlignment" /> that specifies the alignment of the control relative to the <paramref name="pos" /> parameter.</param>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
        <IPermission class="System.Diagnostics.PerformanceCounterPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="P:System.Windows.Forms.ContextMenu.SourceControl">
      <summary>Gets the control that is displaying the shortcut menu.</summary>
      <returns>A <see cref="T:System.Windows.Forms.Control" /> that represents the control that is displaying the shortcut menu. If no control has displayed the shortcut menu, the property returns null.</returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="T:System.Windows.Forms.ContextMenuStrip">
      <summary>Represents a shortcut menu. </summary>
    </member>
    <member name="M:System.Windows.Forms.ContextMenuStrip.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Forms.ContextMenuStrip" /> class. </summary>
    </member>
    <member name="M:System.Windows.Forms.ContextMenuStrip.#ctor(System.ComponentModel.IContainer)">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Forms.ContextMenuStrip" /> class and associates it with the specified container.</summary>
      <param name="container">A component that implements <see cref="T:System.ComponentModel.IContainer" /> that is the container of the <see cref="T:System.Windows.Forms.ContextMenuStrip" />.</param>
    </member>
    <member name="M:System.Windows.Forms.ContextMenuStrip.Dispose(System.Boolean)">
      <summary>Releases the unmanaged resources used by the <see cref="T:System.Windows.Forms.ContextMenuStrip" /> and optionally releases the managed resources. </summary>
      <param name="disposing">true to release both managed and unmanaged resources; false to release only unmanaged resources. </param>
    </member>
    <member name="M:System.Windows.Forms.ContextMenuStrip.SetVisibleCore(System.Boolean)">
      <param name="visible">true to make the control visible; otherwise, false.</param>
    </member>
    <member name="P:System.Windows.Forms.ContextMenuStrip.SourceControl">
      <summary>Gets the last control that caused this <see cref="T:System.Windows.Forms.ContextMenuStrip" /> to be displayed.</summary>
      <returns>The control that caused this <see cref="T:System.Windows.Forms.ContextMenuStrip" /> to be displayed.</returns>
    </member>
    <member name="T:System.Windows.Forms.Control">
      <summary>Defines the base class for controls, which are components with visual representation.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Windows.Forms.Control.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Forms.Control" /> class with default settings.</summary>
    </member>
    <member name="M:System.Windows.Forms.Control.#ctor(System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Forms.Control" /> class with specific text.</summary>
      <param name="text">The text displayed by the control. </param>
    </member>
    <member name="M:System.Windows.Forms.Control.#ctor(System.String,System.Int32,System.Int32,System.Int32,System.Int32)">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Forms.Control" /> class with specific text, size, and location.</summary>
      <param name="text">The text displayed by the control. </param>
      <param name="left">The <see cref="P:System.Drawing.Point.X" /> position of the control, in pixels, from the left edge of the control's container. The value is assigned to the <see cref="P:System.Windows.Forms.Control.Left" /> property. </param>
      <param name="top">The <see cref="P:System.Drawing.Point.Y" /> position of the control, in pixels, from the top edge of the control's container. The value is assigned to the <see cref="P:System.Windows.Forms.Control.Top" /> property. </param>
      <param name="width">The width of the control, in pixels. The value is assigned to the <see cref="P:System.Windows.Forms.Control.Width" /> property. </param>
      <param name="height">The height of the control, in pixels. The value is assigned to the <see cref="P:System.Windows.Forms.Control.Height" /> property. </param>
    </member>
    <member name="M:System.Windows.Forms.Control.#ctor(System.Windows.Forms.Control,System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Forms.Control" /> class as a child control, with specific text.</summary>
      <param name="parent">The <see cref="T:System.Windows.Forms.Control" /> to be the parent of the control. </param>
      <param name="text">The text displayed by the control. </param>
    </member>
    <member name="M:System.Windows.Forms.Control.#ctor(System.Windows.Forms.Control,System.String,System.Int32,System.Int32,System.Int32,System.Int32)">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Forms.Control" /> class as a child control, with specific text, size, and location.</summary>
      <param name="parent">The <see cref="T:System.Windows.Forms.Control" /> to be the parent of the control. </param>
      <param name="text">The text displayed by the control. </param>
      <param name="left">The <see cref="P:System.Drawing.Point.X" /> position of the control, in pixels, from the left edge of the control's container. The value is assigned to the <see cref="P:System.Windows.Forms.Control.Left" /> property. </param>
      <param name="top">The <see cref="P:System.Drawing.Point.Y" /> position of the control, in pixels, from the top edge of the control's container. The value is assigned to the <see cref="P:System.Windows.Forms.Control.Top" /> property. </param>
      <param name="width">The width of the control, in pixels. The value is assigned to the <see cref="P:System.Windows.Forms.Control.Width" /> property. </param>
      <param name="height">The height of the control, in pixels. The value is assigned to the <see cref="P:System.Windows.Forms.Control.Height" /> property. </param>
    </member>
    <member name="M:System.Windows.Forms.Control.AccessibilityNotifyClients(System.Windows.Forms.AccessibleEvents,System.Int32)">
      <summary>Notifies the accessibility client applications of the specified <see cref="T:System.Windows.Forms.AccessibleEvents" /> for the specified child control.</summary>
      <param name="accEvent">The <see cref="T:System.Windows.Forms.AccessibleEvents" /> to notify the accessibility client applications of. </param>
      <param name="childID">The child <see cref="T:System.Windows.Forms.Control" /> to notify of the accessible event. </param>
    </member>
    <member name="M:System.Windows.Forms.Control.AccessibilityNotifyClients(System.Windows.Forms.AccessibleEvents,System.Int32,System.Int32)">
      <summary>Notifies the accessibility client applications of the specified <see cref="T:System.Windows.Forms.AccessibleEvents" /> for the specified child control .</summary>
      <param name="accEvent">The <see cref="T:System.Windows.Forms.AccessibleEvents" /> to notify the accessibility client applications of.</param>
      <param name="objectID">The identifier of the <see cref="T:System.Windows.Forms.AccessibleObject" />.</param>
      <param name="childID">The child <see cref="T:System.Windows.Forms.Control" /> to notify of the accessible event.</param>
    </member>
    <member name="P:System.Windows.Forms.Control.AccessibilityObject">
      <summary>Gets the <see cref="T:System.Windows.Forms.AccessibleObject" /> assigned to the control.</summary>
      <returns>The <see cref="T:System.Windows.Forms.AccessibleObject" /> assigned to the control.</returns>
      <filterpriority>2</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
        <IPermission class="System.Diagnostics.PerformanceCounterPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="P:System.Windows.Forms.Control.AccessibleDefaultActionDescription">
      <summary>Gets or sets the default action description of the control for use by accessibility client applications.</summary>
      <returns>The default action description of the control for use by accessibility client applications.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.Windows.Forms.Control.AccessibleDescription">
      <summary>Gets or sets the description of the control used by accessibility client applications.</summary>
      <returns>The description of the control used by accessibility client applications. The default is null.</returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="P:System.Windows.Forms.Control.AccessibleName">
      <summary>Gets or sets the name of the control used by accessibility client applications.</summary>
      <returns>The name of the control used by accessibility client applications. The default is null.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.Windows.Forms.Control.AccessibleRole">
      <summary>Gets or sets the accessible role of the control </summary>
      <returns>One of the values of <see cref="T:System.Windows.Forms.AccessibleRole" />. The default is Default.</returns>
      <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">The value assigned is not one of the <see cref="T:System.Windows.Forms.AccessibleRole" /> values. </exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.Windows.Forms.Control.AllowDrop">
      <summary>Gets or sets a value indicating whether the control can accept data that the user drags onto it.</summary>
      <returns>true if drag-and-drop operations are allowed in the control; otherwise, false. The default is false.</returns>
      <filterpriority>2</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
        <IPermission class="System.Diagnostics.PerformanceCounterPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="P:System.Windows.Forms.Control.Anchor">
      <summary>Gets or sets the edges of the container to which a control is bound and determines how a control is resized with its parent. </summary>
      <returns>A bitwise combination of the <see cref="T:System.Windows.Forms.AnchorStyles" /> values. The default is Top and Left.</returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="P:System.Windows.Forms.Control.AutoScrollOffset">
      <summary>Gets or sets where this control is scrolled to in <see cref="M:System.Windows.Forms.ScrollableControl.ScrollControlIntoView(System.Windows.Forms.Control)" />.</summary>
      <returns>A <see cref="T:System.Drawing.Point" /> specifying the scroll location. The default is the upper-left corner of the control.</returns>
    </member>
    <member name="P:System.Windows.Forms.Control.AutoSize">
      <summary>This property is not relevant for this class.</summary>
      <returns>true if enabled; otherwise, false.</returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="E:System.Windows.Forms.Control.AutoSizeChanged">
      <summary>This event is not relevant for this class.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="P:System.Windows.Forms.Control.BackColor">
      <summary>Gets or sets the background color for the control.</summary>
      <returns>A <see cref="T:System.Drawing.Color" /> that represents the background color of the control. The default is the value of the <see cref="P:System.Windows.Forms.Control.DefaultBackColor" /> property.</returns>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="E:System.Windows.Forms.Control.BackColorChanged">
      <summary>Occurs when the value of the <see cref="P:System.Windows.Forms.Control.BackColor" /> property changes.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="P:System.Windows.Forms.Control.BackgroundImage">
      <summary>Gets or sets the background image displayed in the control.</summary>
      <returns>An <see cref="T:System.Drawing.Image" /> that represents the image to display in the background of the control.</returns>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="E:System.Windows.Forms.Control.BackgroundImageChanged">
      <summary>Occurs when the value of the <see cref="P:System.Windows.Forms.Control.BackgroundImage" /> property changes.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="P:System.Windows.Forms.Control.BackgroundImageLayout">
      <summary>Gets or sets the background image layout as defined in the <see cref="T:System.Windows.Forms.ImageLayout" /> enumeration.</summary>
      <returns>One of the values of <see cref="T:System.Windows.Forms.ImageLayout" /> (<see cref="F:System.Windows.Forms.ImageLayout.Center" /> , <see cref="F:System.Windows.Forms.ImageLayout.None" />, <see cref="F:System.Windows.Forms.ImageLayout.Stretch" />, <see cref="F:System.Windows.Forms.ImageLayout.Tile" />, or <see cref="F:System.Windows.Forms.ImageLayout.Zoom" />). <see cref="F:System.Windows.Forms.ImageLayout.Tile" /> is the default value.</returns>
      <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">The specified enumeration value does not exist. </exception>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="E:System.Windows.Forms.Control.BackgroundImageLayoutChanged">
      <summary>Occurs when the <see cref="P:System.Windows.Forms.Control.BackgroundImageLayout" /> property changes.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Windows.Forms.Control.BeginInvoke(System.Delegate)">
      <summary>Executes the specified delegate asynchronously on the thread that the control's underlying handle was created on.</summary>
      <returns>An <see cref="T:System.IAsyncResult" /> that represents the result of the <see cref="M:System.Windows.Forms.Control.BeginInvoke(System.Delegate)" /> operation.</returns>
      <param name="method">A delegate to a method that takes no parameters. </param>
      <exception cref="T:System.InvalidOperationException">No appropriate window handle can be found.</exception>
      <filterpriority>2</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
        <IPermission class="System.Diagnostics.PerformanceCounterPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:System.Windows.Forms.Control.BeginInvoke(System.Delegate,System.Object[])">
      <summary>Executes the specified delegate asynchronously with the specified arguments, on the thread that the control's underlying handle was created on.</summary>
      <returns>An <see cref="T:System.IAsyncResult" /> that represents the result of the <see cref="M:System.Windows.Forms.Control.BeginInvoke(System.Delegate)" /> operation.</returns>
      <param name="method">A delegate to a method that takes parameters of the same number and type that are contained in the <paramref name="args" /> parameter. </param>
      <param name="args">An array of objects to pass as arguments to the given method. This can be null if no arguments are needed. </param>
      <exception cref="T:System.InvalidOperationException">No appropriate window handle can be found.</exception>
      <filterpriority>2</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
        <IPermission class="System.Diagnostics.PerformanceCounterPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="P:System.Windows.Forms.Control.BindingContext">
      <summary>Gets or sets the <see cref="T:System.Windows.Forms.BindingContext" /> for the control.</summary>
      <returns>A <see cref="T:System.Windows.Forms.BindingContext" /> for the control.</returns>
      <filterpriority>2</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="E:System.Windows.Forms.Control.BindingContextChanged">
      <summary>Occurs when the value of the <see cref="T:System.Windows.Forms.BindingContext" /> property changes.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="P:System.Windows.Forms.Control.Bottom">
      <summary>Gets the distance, in pixels, between the bottom edge of the control and the top edge of its container's client area.</summary>
      <returns>An <see cref="T:System.Int32" /> representing the distance, in pixels, between the bottom edge of the control and the top edge of its container's client area.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.Windows.Forms.Control.Bounds">
      <summary>Gets or sets the size and location of the control including its nonclient elements, in pixels, relative to the parent control.</summary>
      <returns>A <see cref="T:System.Drawing.Rectangle" /> in pixels relative to the parent control that represents the size and location of the control including its nonclient elements.</returns>
      <filterpriority>2</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
        <IPermission class="System.Diagnostics.PerformanceCounterPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:System.Windows.Forms.Control.BringToFront">
      <summary>Brings the control to the front of the z-order.</summary>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
        <IPermission class="System.Diagnostics.PerformanceCounterPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="P:System.Windows.Forms.Control.CanEnableIme">
      <summary>Gets a value indicating whether the <see cref="P:System.Windows.Forms.Control.ImeMode" /> property can be set to an active value, to enable IME support.</summary>
      <returns>true in all cases.</returns>
    </member>
    <member name="P:System.Windows.Forms.Control.CanFocus">
      <summary>Gets a value indicating whether the control can receive focus.</summary>
      <returns>true if the control can receive focus; otherwise, false.</returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="P:System.Windows.Forms.Control.CanRaiseEvents">
      <summary>Determines if events can be raised on the control.</summary>
      <returns>true if the control is hosted as an ActiveX control whose events are not frozen; otherwise, false.</returns>
    </member>
    <member name="P:System.Windows.Forms.Control.CanSelect">
      <summary>Gets a value indicating whether the control can be selected.</summary>
      <returns>true if the control can be selected; otherwise, false.</returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="P:System.Windows.Forms.Control.Capture">
      <summary>Gets or sets a value indicating whether the control has captured the mouse.</summary>
      <returns>true if the control has captured the mouse; otherwise, false.</returns>
      <filterpriority>2</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
        <IPermission class="System.Diagnostics.PerformanceCounterPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="P:System.Windows.Forms.Control.CausesValidation">
      <summary>Gets or sets a value indicating whether the control causes validation to be performed on any controls that require validation when it receives focus.</summary>
      <returns>true if the control causes validation to be performed on any controls requiring validation when it receives focus; otherwise, false. The default is true.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="E:System.Windows.Forms.Control.CausesValidationChanged">
      <summary>Occurs when the value of the <see cref="P:System.Windows.Forms.Control.CausesValidation" /> property changes.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="E:System.Windows.Forms.Control.ChangeUICues">
      <summary>Occurs when the focus or keyboard user interface (UI) cues change.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="P:System.Windows.Forms.Control.CheckForIllegalCrossThreadCalls">
      <summary>Gets or sets a value indicating whether to catch calls on the wrong thread that access a control's <see cref="P:System.Windows.Forms.Control.Handle" /> property when an application is being debugged.</summary>
      <returns>true if calls on the wrong thread are caught; otherwise, false.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="E:System.Windows.Forms.Control.Click">
      <summary>Occurs when the control is clicked.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="P:System.Windows.Forms.Control.ClientRectangle">
      <summary>Gets the rectangle that represents the client area of the control.</summary>
      <returns>A <see cref="T:System.Drawing.Rectangle" /> that represents the client area of the control.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.Windows.Forms.Control.ClientSize">
      <summary>Gets or sets the height and width of the client area of the control.</summary>
      <returns>A <see cref="T:System.Drawing.Size" /> that represents the dimensions of the client area of the control.</returns>
      <filterpriority>2</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
        <IPermission class="System.Diagnostics.PerformanceCounterPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="E:System.Windows.Forms.Control.ClientSizeChanged">
      <summary>Occurs when the value of the <see cref="P:System.Windows.Forms.Control.ClientSize" /> property changes. </summary>
    </member>
    <member name="P:System.Windows.Forms.Control.CompanyName">
      <summary>Gets the name of the company or creator of the application containing the control.</summary>
      <returns>The company name or creator of the application containing the control.</returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Windows.Forms.Control.Contains(System.Windows.Forms.Control)">
      <summary>Retrieves a value indicating whether the specified control is a child of the control.</summary>
      <returns>true if the specified control is a child of the control; otherwise, false.</returns>
      <param name="ctl">The <see cref="T:System.Windows.Forms.Control" /> to evaluate. </param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="P:System.Windows.Forms.Control.ContainsFocus">
      <summary>Gets a value indicating whether the control, or one of its child controls, currently has the input focus.</summary>
      <returns>true if the control or one of its child controls currently has the input focus; otherwise, false.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.Windows.Forms.Control.ContextMenu">
      <summary>Gets or sets the shortcut menu associated with the control.</summary>
      <returns>A <see cref="T:System.Windows.Forms.ContextMenu" /> that represents the shortcut menu associated with the control.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="E:System.Windows.Forms.Control.ContextMenuChanged">
      <summary>Occurs when the value of the <see cref="P:System.Windows.Forms.Control.ContextMenu" /> property changes.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="P:System.Windows.Forms.Control.ContextMenuStrip">
      <summary>Gets or sets the <see cref="T:System.Windows.Forms.ContextMenuStrip" /> associated with this control.</summary>
      <returns>The <see cref="T:System.Windows.Forms.ContextMenuStrip" /> for this control, or null if there is no <see cref="T:System.Windows.Forms.ContextMenuStrip" />. The default is null.</returns>
    </member>
    <member name="E:System.Windows.Forms.Control.ContextMenuStripChanged">
      <summary>Occurs when the value of the <see cref="P:System.Windows.Forms.Control.ContextMenuStrip" /> property changes. </summary>
    </member>
    <member name="E:System.Windows.Forms.Control.ControlAdded">
      <summary>Occurs when a new control is added to the <see cref="T:System.Windows.Forms.Control.ControlCollection" />.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="E:System.Windows.Forms.Control.ControlRemoved">
      <summary>Occurs when a control is removed from the <see cref="T:System.Windows.Forms.Control.ControlCollection" />.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="P:System.Windows.Forms.Control.Controls">
      <summary>Gets the collection of controls contained within the control.</summary>
      <returns>A <see cref="T:System.Windows.Forms.Control.ControlCollection" /> representing the collection of controls contained within the control.</returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Windows.Forms.Control.CreateAccessibilityInstance">
      <summary>Creates a new accessibility object for the control.</summary>
      <returns>A new <see cref="T:System.Windows.Forms.AccessibleObject" /> for the control.</returns>
    </member>
    <member name="M:System.Windows.Forms.Control.CreateControl">
      <summary>Forces the creation of the control, including the creation of the handle and any child controls.</summary>
      <filterpriority>2</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
        <IPermission class="System.Diagnostics.PerformanceCounterPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:System.Windows.Forms.Control.CreateControlsInstance">
      <summary>Creates a new instance of the control collection for the control.</summary>
      <returns>A new instance of <see cref="T:System.Windows.Forms.Control.ControlCollection" /> assigned to the control.</returns>
    </member>
    <member name="P:System.Windows.Forms.Control.Created">
      <summary>Gets a value indicating whether the control has been created.</summary>
      <returns>true if the control has been created; otherwise, false.</returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Windows.Forms.Control.CreateGraphics">
      <summary>Creates the <see cref="T:System.Drawing.Graphics" /> for the control.</summary>
      <returns>The <see cref="T:System.Drawing.Graphics" /> for the control.</returns>
      <filterpriority>2</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
        <IPermission class="System.Diagnostics.PerformanceCounterPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:System.Windows.Forms.Control.CreateHandle">
      <summary>Creates a handle for the control.</summary>
      <exception cref="T:System.ObjectDisposedException">The object is in a disposed state. </exception>
    </member>
    <member name="P:System.Windows.Forms.Control.CreateParams">
      <summary>Gets the required creation parameters when the control handle is created.</summary>
      <returns>A <see cref="T:System.Windows.Forms.CreateParams" /> that contains the required creation parameters when the handle to the control is created.</returns>
    </member>
    <member name="P:System.Windows.Forms.Control.Cursor">
      <summary>Gets or sets the cursor that is displayed when the mouse pointer is over the control.</summary>
      <returns>A <see cref="T:System.Windows.Forms.Cursor" /> that represents the cursor to display when the mouse pointer is over the control.</returns>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
        <IPermission class="System.Diagnostics.PerformanceCounterPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="E:System.Windows.Forms.Control.CursorChanged">
      <summary>Occurs when the value of the <see cref="P:System.Windows.Forms.Control.Cursor" /> property changes.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="P:System.Windows.Forms.Control.DataBindings">
      <summary>Gets the data bindings for the control.</summary>
      <returns>A <see cref="T:System.Windows.Forms.ControlBindingsCollection" /> that contains the <see cref="T:System.Windows.Forms.Binding" /> objects for the control.</returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="P:System.Windows.Forms.Control.DefaultBackColor">
      <summary>Gets the default background color of the control.</summary>
      <returns>The default background <see cref="T:System.Drawing.Color" /> of the control. The default is <see cref="P:System.Drawing.SystemColors.Control" />.</returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="P:System.Windows.Forms.Control.DefaultCursor">
      <summary>Gets or sets the default cursor for the control.</summary>
      <returns>An object of type <see cref="T:System.Windows.Forms.Cursor" /> representing the current default cursor.</returns>
    </member>
    <member name="P:System.Windows.Forms.Control.DefaultFont">
      <summary>Gets the default font of the control.</summary>
      <returns>The default <see cref="T:System.Drawing.Font" /> of the control. The value returned will vary depending on the user's operating system the local culture setting of their system.</returns>
      <exception cref="T:System.ArgumentException">The default font or the regional alternative fonts are not installed on the client computer. </exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="P:System.Windows.Forms.Control.DefaultForeColor">
      <summary>Gets the default foreground color of the control.</summary>
      <returns>The default foreground <see cref="T:System.Drawing.Color" /> of the control. The default is <see cref="P:System.Drawing.SystemColors.ControlText" />.</returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="P:System.Windows.Forms.Control.DefaultImeMode">
      <summary>Gets the default Input Method Editor (IME) mode supported by the control.</summary>
      <returns>One of the <see cref="T:System.Windows.Forms.ImeMode" /> values.</returns>
    </member>
    <member name="P:System.Windows.Forms.Control.DefaultMargin">
      <summary>Gets the space, in pixels, that is specified by default between controls.</summary>
      <returns>A <see cref="T:System.Windows.Forms.Padding" /> that represents the default space between controls.</returns>
    </member>
    <member name="P:System.Windows.Forms.Control.DefaultMaximumSize">
      <summary>Gets the length and height, in pixels, that is specified as the default maximum size of a control.</summary>
      <returns>A <see cref="M:System.Drawing.Point.#ctor(System.Drawing.Size)" /> representing the size of the control.</returns>
    </member>
    <member name="P:System.Windows.Forms.Control.DefaultMinimumSize">
      <summary>Gets the length and height, in pixels, that is specified as the default minimum size of a control.</summary>
      <returns>A <see cref="T:System.Drawing.Size" /> representing the size of the control.</returns>
    </member>
    <member name="P:System.Windows.Forms.Control.DefaultPadding">
      <summary>Gets the internal spacing, in pixels, of the contents of a control.</summary>
      <returns>A <see cref="T:System.Windows.Forms.Padding" /> that represents the internal spacing of the contents of a control.</returns>
    </member>
    <member name="P:System.Windows.Forms.Control.DefaultSize">
      <summary>Gets the default size of the control.</summary>
      <returns>The default <see cref="T:System.Drawing.Size" /> of the control.</returns>
    </member>
    <member name="M:System.Windows.Forms.Control.DefWndProc(System.Windows.Forms.Message@)">
      <summary>Sends the specified message to the default window procedure.</summary>
      <param name="m">The Windows <see cref="T:System.Windows.Forms.Message" /> to process. </param>
    </member>
    <member name="M:System.Windows.Forms.Control.DestroyHandle">
      <summary>Destroys the handle associated with the control.</summary>
    </member>
    <member name="P:System.Windows.Forms.Control.DisplayRectangle">
      <summary>Gets the rectangle that represents the display area of the control.</summary>
      <returns>A <see cref="T:System.Drawing.Rectangle" /> that represents the display area of the control.</returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Windows.Forms.Control.Dispose(System.Boolean)">
      <summary>Releases the unmanaged resources used by the <see cref="T:System.Windows.Forms.Control" /> and its child controls and optionally releases the managed resources.</summary>
      <param name="disposing">true to release both managed and unmanaged resources; false to release only unmanaged resources. </param>
    </member>
    <member name="P:System.Windows.Forms.Control.Disposing">
      <summary>Gets a value indicating whether the base <see cref="T:System.Windows.Forms.Control" /> class is in the process of disposing.</summary>
      <returns>true if the base <see cref="T:System.Windows.Forms.Control" /> class is in the process of disposing; otherwise, false.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.Windows.Forms.Control.Dock">
      <summary>Gets or sets which control borders are docked to its parent control and determines how a control is resized with its parent.</summary>
      <returns>One of the <see cref="T:System.Windows.Forms.DockStyle" /> values. The default is <see cref="F:System.Windows.Forms.DockStyle.None" />.</returns>
      <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">The value assigned is not one of the <see cref="T:System.Windows.Forms.DockStyle" /> values. </exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="E:System.Windows.Forms.Control.DockChanged">
      <summary>Occurs when the value of the <see cref="P:System.Windows.Forms.Control.Dock" /> property changes.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Windows.Forms.Control.DoDragDrop(System.Object,System.Windows.Forms.DragDropEffects)">
      <summary>Begins a drag-and-drop operation.</summary>
      <returns>A value from the <see cref="T:System.Windows.Forms.DragDropEffects" /> enumeration that represents the final effect that was performed during the drag-and-drop operation.</returns>
      <param name="data">The data to drag. </param>
      <param name="allowedEffects">One of the <see cref="T:System.Windows.Forms.DragDropEffects" /> values. </param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="P:System.Windows.Forms.Control.DoubleBuffered">
      <summary>Gets or sets a value indicating whether this control should redraw its surface using a secondary buffer to reduce or prevent flicker.</summary>
      <returns>true if the surface of the control should be drawn using double buffering; otherwise, false.</returns>
    </member>
    <member name="E:System.Windows.Forms.Control.DoubleClick">
      <summary>Occurs when the control is double-clicked.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="E:System.Windows.Forms.Control.DragDrop">
      <summary>Occurs when a drag-and-drop operation is completed.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="E:System.Windows.Forms.Control.DragEnter">
      <summary>Occurs when an object is dragged into the control's bounds.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="E:System.Windows.Forms.Control.DragLeave">
      <summary>Occurs when an object is dragged out of the control's bounds.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="E:System.Windows.Forms.Control.DragOver">
      <summary>Occurs when an object is dragged over the control's bounds.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Windows.Forms.Control.DrawToBitmap(System.Drawing.Bitmap,System.Drawing.Rectangle)">
      <summary>Supports rendering to the specified bitmap.</summary>
      <param name="bitmap">The bitmap to be drawn to.</param>
      <param name="targetBounds">The bounds within which the control is rendered.</param>
    </member>
    <member name="P:System.Windows.Forms.Control.Enabled">
      <summary>Gets or sets a value indicating whether the control can respond to user interaction.</summary>
      <returns>true if the control can respond to user interaction; otherwise, false. The default is true.</returns>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
        <IPermission class="System.Diagnostics.PerformanceCounterPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="E:System.Windows.Forms.Control.EnabledChanged">
      <summary>Occurs when the <see cref="P:System.Windows.Forms.Control.Enabled" /> property value has changed.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Windows.Forms.Control.EndInvoke(System.IAsyncResult)">
      <summary>Retrieves the return value of the asynchronous operation represented by the <see cref="T:System.IAsyncResult" /> passed.</summary>
      <returns>The <see cref="T:System.Object" /> generated by the asynchronous operation.</returns>
      <param name="asyncResult">The <see cref="T:System.IAsyncResult" /> that represents a specific invoke asynchronous operation, returned when calling <see cref="M:System.Windows.Forms.Control.BeginInvoke(System.Delegate)" />. </param>
      <exception cref="T:System.ArgumentNullException">The <paramref name="asyncResult" /> parameter value is null. </exception>
      <exception cref="T:System.ArgumentException">The <paramref name="asyncResult" /> object was not created by a preceding call of the <see cref="M:System.Windows.Forms.Control.BeginInvoke(System.Delegate)" /> method from the same control. </exception>
      <filterpriority>2</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
        <IPermission class="System.Diagnostics.PerformanceCounterPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="E:System.Windows.Forms.Control.Enter">
      <summary>Occurs when the control is entered.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Windows.Forms.Control.FindForm">
      <summary>Retrieves the form that the control is on.</summary>
      <returns>The <see cref="T:System.Windows.Forms.Form" /> that the control is on.</returns>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.UIPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Window="AllWindows" />
      </PermissionSet>
    </member>
    <member name="M:System.Windows.Forms.Control.Focus">
      <summary>Sets input focus to the control.</summary>
      <returns>true if the input focus request was successful; otherwise, false.</returns>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
        <IPermission class="System.Diagnostics.PerformanceCounterPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="P:System.Windows.Forms.Control.Focused">
      <summary>Gets a value indicating whether the control has input focus.</summary>
      <returns>true if the control has focus; otherwise, false.</returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="P:System.Windows.Forms.Control.Font">
      <summary>Gets or sets the font of the text displayed by the control.</summary>
      <returns>The <see cref="T:System.Drawing.Font" /> to apply to the text displayed by the control. The default is the value of the <see cref="P:System.Windows.Forms.Control.DefaultFont" /> property.</returns>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
        <IPermission class="System.Diagnostics.PerformanceCounterPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="E:System.Windows.Forms.Control.FontChanged">
      <summary>Occurs when the <see cref="P:System.Windows.Forms.Control.Font" /> property value changes.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="P:System.Windows.Forms.Control.FontHeight">
      <summary>Gets or sets the height of the font of the control.</summary>
      <returns>The height of the <see cref="T:System.Drawing.Font" /> of the control in pixels.</returns>
    </member>
    <member name="P:System.Windows.Forms.Control.ForeColor">
      <summary>Gets or sets the foreground color of the control.</summary>
      <returns>The foreground <see cref="T:System.Drawing.Color" /> of the control. The default is the value of the <see cref="P:System.Windows.Forms.Control.DefaultForeColor" /> property.</returns>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="E:System.Windows.Forms.Control.ForeColorChanged">
      <summary>Occurs when the <see cref="P:System.Windows.Forms.Control.ForeColor" /> property value changes.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Windows.Forms.Control.FromChildHandle(System.IntPtr)">
      <summary>Retrieves the control that contains the specified handle.</summary>
      <returns>The <see cref="T:System.Windows.Forms.Control" /> that represents the control associated with the specified handle; returns null if no control with the specified handle is found.</returns>
      <param name="handle">The window handle (HWND) to search for. </param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Windows.Forms.Control.FromHandle(System.IntPtr)">
      <summary>Returns the control that is currently associated with the specified handle.</summary>
      <returns>A <see cref="T:System.Windows.Forms.Control" /> that represents the control associated with the specified handle; returns null if no control with the specified handle is found.</returns>
      <param name="handle">The window handle (HWND) to search for. </param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Windows.Forms.Control.GetAccessibilityObjectById(System.Int32)">
      <summary>Retrieves the specified <see cref="T:System.Windows.Forms.AccessibleObject" />.</summary>
      <returns>An <see cref="T:System.Windows.Forms.AccessibleObject" />.</returns>
      <param name="objectId">An Int32 that identifies the <see cref="T:System.Windows.Forms.AccessibleObject" /> to retrieve.</param>
    </member>
    <member name="M:System.Windows.Forms.Control.GetAutoSizeMode">
      <summary>Retrieves a value indicating how a control will behave when its <see cref="P:System.Windows.Forms.Control.AutoSize" /> property is enabled.</summary>
      <returns>One of the <see cref="T:System.Windows.Forms.AutoSizeMode" /> values. </returns>
    </member>
    <member name="M:System.Windows.Forms.Control.GetChildAtPoint(System.Drawing.Point)">
      <summary>Retrieves the child control that is located at the specified coordinates.</summary>
      <returns>A <see cref="T:System.Windows.Forms.Control" /> that represents the control that is located at the specified point.</returns>
      <param name="pt">A <see cref="T:System.Drawing.Point" /> that contains the coordinates where you want to look for a control. Coordinates are expressed relative to the upper-left corner of the control's client area. </param>
      <filterpriority>2</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
        <IPermission class="System.Diagnostics.PerformanceCounterPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:System.Windows.Forms.Control.GetChildAtPoint(System.Drawing.Point,System.Windows.Forms.GetChildAtPointSkip)">
      <summary>Retrieves the child control that is located at the specified coordinates, specifying whether to ignore child controls of a certain type.</summary>
      <returns>The child <see cref="T:System.Windows.Forms.Control" /> at the specified coordinates.</returns>
      <param name="pt">A <see cref="T:System.Drawing.Point" /> that contains the coordinates where you want to look for a control. Coordinates are expressed relative to the upper-left corner of the control's client area.</param>
      <param name="skipValue">One of the values of <see cref="T:System.Windows.Forms.GetChildAtPointSkip" />, determining whether to ignore child controls of a certain type.</param>
    </member>
    <member name="M:System.Windows.Forms.Control.GetContainerControl">
      <summary>Returns the next <see cref="T:System.Windows.Forms.ContainerControl" /> up the control's chain of parent controls.</summary>
      <returns>An <see cref="T:System.Windows.Forms.IContainerControl" />, that represents the parent of the <see cref="T:System.Windows.Forms.Control" />.</returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Windows.Forms.Control.GetNextControl(System.Windows.Forms.Control,System.Boolean)">
      <summary>Retrieves the next control forward or back in the tab order of child controls.</summary>
      <returns>The next <see cref="T:System.Windows.Forms.Control" /> in the tab order.</returns>
      <param name="ctl">The <see cref="T:System.Windows.Forms.Control" /> to start the search with. </param>
      <param name="forward">true to search forward in the tab order; false to search backward. </param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Windows.Forms.Control.GetPreferredSize(System.Drawing.Size)">
      <summary>Retrieves the size of a rectangular area into which a control can be fitted.</summary>
      <returns>An ordered pair of type <see cref="T:System.Drawing.Size" /> representing the width and height of a rectangle.</returns>
      <param name="proposedSize">The custom-sized area for a control. </param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Windows.Forms.Control.GetScaledBounds(System.Drawing.Rectangle,System.Drawing.SizeF,System.Windows.Forms.BoundsSpecified)">
      <summary>Retrieves the bounds within which the control is scaled.</summary>
      <returns>A <see cref="T:System.Drawing.Rectangle" /> representing the bounds within which the control is scaled.</returns>
      <param name="bounds">A <see cref="T:System.Drawing.Rectangle" /> that specifies the area for which to retrieve the display bounds.</param>
      <param name="factor">The height and width of the control's bounds.</param>
      <param name="specified">One of the values of <see cref="T:System.Windows.Forms.BoundsSpecified" /> that specifies the bounds of the control to use when defining its size and position.</param>
    </member>
    <member name="M:System.Windows.Forms.Control.GetStyle(System.Windows.Forms.ControlStyles)">
      <summary>Retrieves the value of the specified control style bit for the control.</summary>
      <returns>true if the specified control style bit is set to true; otherwise, false.</returns>
      <param name="flag">The <see cref="T:System.Windows.Forms.ControlStyles" /> bit to return the value from. </param>
    </member>
    <member name="M:System.Windows.Forms.Control.GetTopLevel">
      <summary>Determines if the control is a top-level control.</summary>
      <returns>true if the control is a top-level control; otherwise, false.</returns>
    </member>
    <member name="E:System.Windows.Forms.Control.GiveFeedback">
      <summary>Occurs during a drag operation.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="E:System.Windows.Forms.Control.GotFocus">
      <summary>Occurs when the control receives focus.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="P:System.Windows.Forms.Control.Handle">
      <summary>Gets the window handle that the control is bound to.</summary>
      <returns>An <see cref="T:System.IntPtr" /> that contains the window handle (HWND) of the control.</returns>
      <filterpriority>2</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
        <IPermission class="System.Diagnostics.PerformanceCounterPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="E:System.Windows.Forms.Control.HandleCreated">
      <summary>Occurs when a handle is created for the control.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="E:System.Windows.Forms.Control.HandleDestroyed">
      <summary>Occurs when the control's handle is in the process of being destroyed.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="P:System.Windows.Forms.Control.HasChildren">
      <summary>Gets a value indicating whether the control contains one or more child controls.</summary>
      <returns>true if the control contains one or more child controls; otherwise, false.</returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="P:System.Windows.Forms.Control.Height">
      <summary>Gets or sets the height of the control.</summary>
      <returns>The height of the control in pixels.</returns>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
        <IPermission class="System.Diagnostics.PerformanceCounterPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="E:System.Windows.Forms.Control.HelpRequested">
      <summary>Occurs when the user requests help for a control.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Windows.Forms.Control.Hide">
      <summary>Conceals the control from the user.</summary>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
        <IPermission class="System.Diagnostics.PerformanceCounterPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="P:System.Windows.Forms.Control.ImeMode">
      <summary>Gets or sets the Input Method Editor (IME) mode of the control.</summary>
      <returns>One of the <see cref="T:System.Windows.Forms.ImeMode" /> values. The default is <see cref="F:System.Windows.Forms.ImeMode.Inherit" />.</returns>
      <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">The assigned value is not one of the <see cref="T:System.Windows.Forms.ImeMode" /> enumeration values. </exception>
      <filterpriority>2</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
        <IPermission class="System.Diagnostics.PerformanceCounterPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="P:System.Windows.Forms.Control.ImeModeBase">
      <summary>Gets or sets the IME mode of a control.</summary>
      <returns>The IME mode of the control.</returns>
    </member>
    <member name="E:System.Windows.Forms.Control.ImeModeChanged">
      <summary>Occurs when the <see cref="P:System.Windows.Forms.Control.ImeMode" /> property has changed.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Windows.Forms.Control.InitLayout">
      <summary>Called after the control has been added to another container.</summary>
    </member>
    <member name="M:System.Windows.Forms.Control.Invalidate">
      <summary>Invalidates the entire surface of the control and causes the control to be redrawn.</summary>
      <filterpriority>2</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:System.Windows.Forms.Control.Invalidate(System.Boolean)">
      <summary>Invalidates a specific region of the control and causes a paint message to be sent to the control. Optionally, invalidates the child controls assigned to the control.</summary>
      <param name="invalidateChildren">true to invalidate the control's child controls; otherwise, false. </param>
      <filterpriority>2</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:System.Windows.Forms.Control.Invalidate(System.Drawing.Rectangle)">
      <summary>Invalidates the specified region of the control (adds it to the control's update region, which is the area that will be repainted at the next paint operation), and causes a paint message to be sent to the control.</summary>
      <param name="rc">A <see cref="T:System.Drawing.Rectangle" /> that represents the region to invalidate. </param>
      <filterpriority>2</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:System.Windows.Forms.Control.Invalidate(System.Drawing.Rectangle,System.Boolean)">
      <summary>Invalidates the specified region of the control (adds it to the control's update region, which is the area that will be repainted at the next paint operation), and causes a paint message to be sent to the control. Optionally, invalidates the child controls assigned to the control.</summary>
      <param name="rc">A <see cref="T:System.Drawing.Rectangle" /> that represents the region to invalidate. </param>
      <param name="invalidateChildren">true to invalidate the control's child controls; otherwise, false. </param>
      <filterpriority>2</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:System.Windows.Forms.Control.Invalidate(System.Drawing.Region)">
      <summary>Invalidates the specified region of the control (adds it to the control's update region, which is the area that will be repainted at the next paint operation), and causes a paint message to be sent to the control.</summary>
      <param name="region">The <see cref="T:System.Drawing.Region" /> to invalidate. </param>
      <filterpriority>2</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:System.Windows.Forms.Control.Invalidate(System.Drawing.Region,System.Boolean)">
      <summary>Invalidates the specified region of the control (adds it to the control's update region, which is the area that will be repainted at the next paint operation), and causes a paint message to be sent to the control. Optionally, invalidates the child controls assigned to the control.</summary>
      <param name="region">The <see cref="T:System.Drawing.Region" /> to invalidate. </param>
      <param name="invalidateChildren">true to invalidate the control's child controls; otherwise, false. </param>
      <filterpriority>2</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="E:System.Windows.Forms.Control.Invalidated">
      <summary>Occurs when a control's display requires redrawing.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Windows.Forms.Control.Invoke(System.Delegate)">
      <summary>Executes the specified delegate on the thread that owns the control's underlying window handle.</summary>
      <returns>The return value from the delegate being invoked, or null if the delegate has no return value.</returns>
      <param name="method">A delegate that contains a method to be called in the control's thread context. </param>
      <filterpriority>2</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
        <IPermission class="System.Diagnostics.PerformanceCounterPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:System.Windows.Forms.Control.Invoke(System.Delegate,System.Object[])">
      <summary>Executes the specified delegate, on the thread that owns the control's underlying window handle, with the specified list of arguments.</summary>
      <returns>An <see cref="T:System.Object" /> that contains the return value from the delegate being invoked, or null if the delegate has no return value.</returns>
      <param name="method">A delegate to a method that takes parameters of the same number and type that are contained in the <paramref name="args" /> parameter. </param>
      <param name="args">An array of objects to pass as arguments to the specified method. This parameter can be null if the method takes no arguments. </param>
      <filterpriority>2</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
        <IPermission class="System.Diagnostics.PerformanceCounterPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:System.Windows.Forms.Control.InvokeGotFocus(System.Windows.Forms.Control,System.EventArgs)">
      <summary>Raises the <see cref="E:System.Windows.Forms.Control.GotFocus" /> event for the specified control.</summary>
      <param name="toInvoke">The <see cref="T:System.Windows.Forms.Control" /> to assign the event to. </param>
      <param name="e">An <see cref="T:System.EventArgs" /> that contains the event data. </param>
    </member>
    <member name="M:System.Windows.Forms.Control.InvokeLostFocus(System.Windows.Forms.Control,System.EventArgs)">
      <summary>Raises the <see cref="E:System.Windows.Forms.Control.LostFocus" /> event for the specified control.</summary>
      <param name="toInvoke">The <see cref="T:System.Windows.Forms.Control" /> to assign the event to. </param>
      <param name="e">An <see cref="T:System.EventArgs" /> that contains the event data. </param>
    </member>
    <member name="M:System.Windows.Forms.Control.InvokeOnClick(System.Windows.Forms.Control,System.EventArgs)">
      <summary>Raises the <see cref="E:System.Windows.Forms.Control.Click" /> event for the specified control.</summary>
      <param name="toInvoke">The <see cref="T:System.Windows.Forms.Control" /> to assign the <see cref="E:System.Windows.Forms.Control.Click" /> event to. </param>
      <param name="e">An <see cref="T:System.EventArgs" /> that contains the event data. </param>
    </member>
    <member name="M:System.Windows.Forms.Control.InvokePaint(System.Windows.Forms.Control,System.Windows.Forms.PaintEventArgs)">
      <summary>Raises the <see cref="E:System.Windows.Forms.Control.Paint" /> event for the specified control.</summary>
      <param name="c">The <see cref="T:System.Windows.Forms.Control" /> to assign the <see cref="E:System.Windows.Forms.Control.Paint" /> event to. </param>
      <param name="e">An <see cref="T:System.Windows.Forms.PaintEventArgs" /> that contains the event data. </param>
    </member>
    <member name="M:System.Windows.Forms.Control.InvokePaintBackground(System.Windows.Forms.Control,System.Windows.Forms.PaintEventArgs)">
      <summary>Raises the PaintBackground event for the specified control.</summary>
      <param name="c">The <see cref="T:System.Windows.Forms.Control" /> to assign the <see cref="E:System.Windows.Forms.Control.Paint" /> event to. </param>
      <param name="e">An <see cref="T:System.Windows.Forms.PaintEventArgs" /> that contains the event data. </param>
    </member>
    <member name="P:System.Windows.Forms.Control.InvokeRequired">
      <summary>Gets a value indicating whether the caller must call an invoke method when making method calls to the control because the caller is on a different thread than the one the control was created on.</summary>
      <returns>true if the control's <see cref="P:System.Windows.Forms.Control.Handle" /> was created on a different thread than the calling thread (indicating that you must make calls to the control through an invoke method); otherwise, false.</returns>
      <filterpriority>2</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
        <IPermission class="System.Diagnostics.PerformanceCounterPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="P:System.Windows.Forms.Control.IsAccessible">
      <summary>Gets or sets a value indicating whether the control is visible to accessibility applications.</summary>
      <returns>true if the control is visible to accessibility applications; otherwise, false.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.Windows.Forms.Control.IsDisposed">
      <summary>Gets a value indicating whether the control has been disposed of.</summary>
      <returns>true if the control has been disposed of; otherwise, false.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.Windows.Forms.Control.IsHandleCreated">
      <summary>Gets a value indicating whether the control has a handle associated with it.</summary>
      <returns>true if a handle has been assigned to the control; otherwise, false.</returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Windows.Forms.Control.IsInputChar(System.Char)">
      <summary>Determines if a character is an input character that the control recognizes.</summary>
      <returns>true if the character should be sent directly to the control and not preprocessed; otherwise, false.</returns>
      <param name="charCode">The character to test. </param>
    </member>
    <member name="M:System.Windows.Forms.Control.IsInputKey(System.Windows.Forms.Keys)">
      <summary>Determines whether the specified key is a regular input key or a special key that requires preprocessing.</summary>
      <returns>true if the specified key is a regular input key; otherwise, false.</returns>
      <param name="keyData">One of the <see cref="T:System.Windows.Forms.Keys" /> values. </param>
    </member>
    <member name="M:System.Windows.Forms.Control.IsKeyLocked(System.Windows.Forms.Keys)">
      <summary>Determines whether the CAPS LOCK, NUM LOCK, or SCROLL LOCK key is in effect.</summary>
      <returns>true if the specified key or keys are in effect; otherwise, false.</returns>
      <param name="keyVal">The CAPS LOCK, NUM LOCK, or SCROLL LOCK member of the <see cref="T:System.Windows.Forms.Keys" /> enumeration. </param>
      <exception cref="T:System.NotSupportedException">The <paramref name="keyVal" /> parameter refers to a key other than the CAPS LOCK, NUM LOCK, or SCROLL LOCK key. </exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.Windows.Forms.Control.IsMirrored">
      <summary>Gets a value indicating whether the control is mirrored.</summary>
      <returns>true if the control is mirrored; otherwise, false.</returns>
    </member>
    <member name="M:System.Windows.Forms.Control.IsMnemonic(System.Char,System.String)">
      <summary>Determines if the specified character is the mnemonic character assigned to the control in the specified string.</summary>
      <returns>true if the <paramref name="charCode" /> character is the mnemonic character assigned to the control; otherwise, false.</returns>
      <param name="charCode">The character to test. </param>
      <param name="text">The string to search. </param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="E:System.Windows.Forms.Control.KeyDown">
      <summary>Occurs when a key is pressed while the control has focus.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="E:System.Windows.Forms.Control.KeyPress">
      <summary>Occurs when a key is pressed while the control has focus.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="E:System.Windows.Forms.Control.KeyUp">
      <summary>Occurs when a key is released while the control has focus.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="E:System.Windows.Forms.Control.Layout">
      <summary>Occurs when a control should reposition its child controls.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="P:System.Windows.Forms.Control.LayoutEngine">
      <summary>Gets a cached instance of the control's layout engine.</summary>
      <returns>The <see cref="T:System.Windows.Forms.Layout.LayoutEngine" /> for the control's contents.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="E:System.Windows.Forms.Control.Leave">
      <summary>Occurs when the input focus leaves the control.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="P:System.Windows.Forms.Control.Left">
      <summary>Gets or sets the distance, in pixels, between the left edge of the control and the left edge of its container's client area.</summary>
      <returns>An <see cref="T:System.Int32" /> representing the distance, in pixels, between the left edge of the control and the left edge of its container's client area.</returns>
      <filterpriority>2</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
        <IPermission class="System.Diagnostics.PerformanceCounterPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="P:System.Windows.Forms.Control.Location">
      <summary>Gets or sets the coordinates of the upper-left corner of the control relative to the upper-left corner of its container.</summary>
      <returns>The <see cref="T:System.Drawing.Point" /> that represents the upper-left corner of the control relative to the upper-left corner of its container.</returns>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
        <IPermission class="System.Diagnostics.PerformanceCounterPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="E:System.Windows.Forms.Control.LocationChanged">
      <summary>Occurs when the <see cref="P:System.Windows.Forms.Control.Location" /> property value has changed.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="E:System.Windows.Forms.Control.LostFocus">
      <summary>Occurs when the control loses focus.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="P:System.Windows.Forms.Control.Margin">
      <summary>Gets or sets the space between controls.</summary>
      <returns>A <see cref="T:System.Windows.Forms.Padding" /> representing the space between controls.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="E:System.Windows.Forms.Control.MarginChanged">
      <summary>Occurs when the control's margin changes.</summary>
    </member>
    <member name="P:System.Windows.Forms.Control.MaximumSize">
      <summary>Gets or sets the size that is the upper limit that <see cref="M:System.Windows.Forms.Control.GetPreferredSize(System.Drawing.Size)" /> can specify.</summary>
      <returns>An ordered pair of type <see cref="T:System.Drawing.Size" /> representing the width and height of a rectangle.</returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="P:System.Windows.Forms.Control.MinimumSize">
      <summary>Gets or sets the size that is the lower limit that <see cref="M:System.Windows.Forms.Control.GetPreferredSize(System.Drawing.Size)" /> can specify.</summary>
      <returns>An ordered pair of type <see cref="T:System.Drawing.Size" /> representing the width and height of a rectangle.</returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="P:System.Windows.Forms.Control.ModifierKeys">
      <summary>Gets a value indicating which of the modifier keys (SHIFT, CTRL, and ALT) is in a pressed state.</summary>
      <returns>A bitwise combination of the <see cref="T:System.Windows.Forms.Keys" /> values. The default is <see cref="F:System.Windows.Forms.Keys.None" />.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.Windows.Forms.Control.MouseButtons">
      <summary>Gets a value indicating which of the mouse buttons is in a pressed state.</summary>
      <returns>A bitwise combination of the <see cref="T:System.Windows.Forms.MouseButtons" /> enumeration values. The default is <see cref="F:System.Windows.Forms.MouseButtons.None" />.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="E:System.Windows.Forms.Control.MouseCaptureChanged">
      <summary>Occurs when the control loses or gains mouse capture.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="E:System.Windows.Forms.Control.MouseClick">
      <summary>Occurs when the control is clicked by the mouse.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="E:System.Windows.Forms.Control.MouseDoubleClick">
      <summary>Occurs when the control is double clicked by the mouse.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="E:System.Windows.Forms.Control.MouseDown">
      <summary>Occurs when the mouse pointer is over the control and a mouse button is pressed.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="E:System.Windows.Forms.Control.MouseEnter">
      <summary>Occurs when the mouse pointer enters the control.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="E:System.Windows.Forms.Control.MouseHover">
      <summary>Occurs when the mouse pointer rests on the control.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="E:System.Windows.Forms.Control.MouseLeave">
      <summary>Occurs when the mouse pointer leaves the control.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="E:System.Windows.Forms.Control.MouseMove">
      <summary>Occurs when the mouse pointer is moved over the control.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="P:System.Windows.Forms.Control.MousePosition">
      <summary>Gets the position of the mouse cursor in screen coordinates.</summary>
      <returns>A <see cref="T:System.Drawing.Point" /> that contains the coordinates of the mouse cursor relative to the upper-left corner of the screen.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="E:System.Windows.Forms.Control.MouseUp">
      <summary>Occurs when the mouse pointer is over the control and a mouse button is released.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="E:System.Windows.Forms.Control.MouseWheel">
      <summary>Occurs when the mouse wheel moves while the control has focus.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="E:System.Windows.Forms.Control.Move">
      <summary>Occurs when the control is moved.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="P:System.Windows.Forms.Control.Name">
      <summary>Gets or sets the name of the control.</summary>
      <returns>The name of the control. The default is an empty string ("").</returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Windows.Forms.Control.NotifyInvalidate(System.Drawing.Rectangle)">
      <summary>Raises the <see cref="E:System.Windows.Forms.Control.Invalidated" /> event with a specified region of the control to invalidate.</summary>
      <param name="invalidatedArea">A <see cref="T:System.Drawing.Rectangle" /> representing the area to invalidate. </param>
    </member>
    <member name="M:System.Windows.Forms.Control.OnAutoSizeChanged(System.EventArgs)">
      <summary>Raises the <see cref="E:System.Windows.Forms.Control.AutoSizeChanged" /> event. </summary>
      <param name="e">An <see cref="T:System.EventArgs" /> that contains the event data.</param>
    </member>
    <member name="M:System.Windows.Forms.Control.OnBackColorChanged(System.EventArgs)">
      <summary>Raises the <see cref="E:System.Windows.Forms.Control.BackColorChanged" /> event.</summary>
      <param name="e">An <see cref="T:System.EventArgs" /> that contains the event data. </param>
    </member>
    <member name="M:System.Windows.Forms.Control.OnBackgroundImageChanged(System.EventArgs)">
      <summary>Raises the <see cref="E:System.Windows.Forms.Control.BackgroundImageChanged" /> event.</summary>
      <param name="e">An <see cref="T:System.EventArgs" /> that contains the event data. </param>
    </member>
    <member name="M:System.Windows.Forms.Control.OnBackgroundImageLayoutChanged(System.EventArgs)">
      <summary>Raises the <see cref="E:System.Windows.Forms.Control.BackgroundImageLayoutChanged" /> event.</summary>
      <param name="e">An <see cref="T:System.EventArgs" /> that contains the event data. </param>
    </member>
    <member name="M:System.Windows.Forms.Control.OnBindingContextChanged(System.EventArgs)">
      <summary>Raises the <see cref="E:System.Windows.Forms.Control.BindingContextChanged" /> event.</summary>
      <param name="e">An <see cref="T:System.EventArgs" /> that contains the event data. </param>
    </member>
    <member name="M:System.Windows.Forms.Control.OnCausesValidationChanged(System.EventArgs)">
      <summary>Raises the <see cref="E:System.Windows.Forms.Control.CausesValidationChanged" /> event.</summary>
      <param name="e">An <see cref="T:System.EventArgs" /> that contains the event data. </param>
    </member>
    <member name="M:System.Windows.Forms.Control.OnChangeUICues(System.Windows.Forms.UICuesEventArgs)">
      <summary>Raises the <see cref="E:System.Windows.Forms.Control.ChangeUICues" /> event.</summary>
      <param name="e">A <see cref="T:System.Windows.Forms.UICuesEventArgs" /> that contains the event data. </param>
    </member>
    <member name="M:System.Windows.Forms.Control.OnClick(System.EventArgs)">
      <summary>Raises the <see cref="E:System.Windows.Forms.Control.Click" /> event.</summary>
      <param name="e">An <see cref="T:System.EventArgs" /> that contains the event data. </param>
    </member>
    <member name="M:System.Windows.Forms.Control.OnClientSizeChanged(System.EventArgs)">
      <summary>Raises the <see cref="E:System.Windows.Forms.Control.ClientSizeChanged" /> event. </summary>
      <param name="e">An <see cref="T:System.EventArgs" /> that contains the event data. </param>
    </member>
    <member name="M:System.Windows.Forms.Control.OnContextMenuChanged(System.EventArgs)">
      <summary>Raises the <see cref="E:System.Windows.Forms.Control.ContextMenuChanged" /> event.</summary>
      <param name="e">An <see cref="T:System.EventArgs" /> that contains the event data. </param>
    </member>
    <member name="M:System.Windows.Forms.Control.OnContextMenuStripChanged(System.EventArgs)">
      <summary>Raises the <see cref="E:System.Windows.Forms.Control.ContextMenuStripChanged" /> event.</summary>
      <param name="e">An <see cref="T:System.EventArgs" /> that contains the event data.</param>
    </member>
    <member name="M:System.Windows.Forms.Control.OnControlAdded(System.Windows.Forms.ControlEventArgs)">
      <summary>Raises the <see cref="E:System.Windows.Forms.Control.ControlAdded" /> event.</summary>
      <param name="e">A <see cref="T:System.Windows.Forms.ControlEventArgs" /> that contains the event data. </param>
    </member>
    <member name="M:System.Windows.Forms.Control.OnControlRemoved(System.Windows.Forms.ControlEventArgs)">
      <summary>Raises the <see cref="E:System.Windows.Forms.Control.ControlRemoved" /> event.</summary>
      <param name="e">A <see cref="T:System.Windows.Forms.ControlEventArgs" /> that contains the event data. </param>
    </member>
    <member name="M:System.Windows.Forms.Control.OnCreateControl">
      <summary>Raises the <see cref="M:System.Windows.Forms.Control.CreateControl" /> method.</summary>
    </member>
    <member name="M:System.Windows.Forms.Control.OnCursorChanged(System.EventArgs)">
      <summary>Raises the <see cref="E:System.Windows.Forms.Control.CursorChanged" /> event.</summary>
      <param name="e">An <see cref="T:System.EventArgs" /> that contains the event data. </param>
    </member>
    <member name="M:System.Windows.Forms.Control.OnDockChanged(System.EventArgs)">
      <summary>Raises the <see cref="E:System.Windows.Forms.Control.DockChanged" /> event.</summary>
      <param name="e">An <see cref="T:System.EventArgs" /> that contains the event data. </param>
    </member>
    <member name="M:System.Windows.Forms.Control.OnDoubleClick(System.EventArgs)">
      <summary>Raises the <see cref="E:System.Windows.Forms.Control.DoubleClick" /> event.</summary>
      <param name="e">An <see cref="T:System.EventArgs" /> that contains the event data. </param>
    </member>
    <member name="M:System.Windows.Forms.Control.OnDragDrop(System.Windows.Forms.DragEventArgs)">
      <summary>Raises the <see cref="E:System.Windows.Forms.Control.DragDrop" /> event.</summary>
      <param name="drgevent">A <see cref="T:System.Windows.Forms.DragEventArgs" /> that contains the event data. </param>
    </member>
    <member name="M:System.Windows.Forms.Control.OnDragEnter(System.Windows.Forms.DragEventArgs)">
      <summary>Raises the <see cref="E:System.Windows.Forms.Control.DragEnter" /> event.</summary>
      <param name="drgevent">A <see cref="T:System.Windows.Forms.DragEventArgs" /> that contains the event data. </param>
    </member>
    <member name="M:System.Windows.Forms.Control.OnDragLeave(System.EventArgs)">
      <summary>Raises the <see cref="E:System.Windows.Forms.Control.DragLeave" /> event.</summary>
      <param name="e">An <see cref="T:System.EventArgs" /> that contains the event data. </param>
    </member>
    <member name="M:System.Windows.Forms.Control.OnDragOver(System.Windows.Forms.DragEventArgs)">
      <summary>Raises the <see cref="E:System.Windows.Forms.Control.DragOver" /> event.</summary>
      <param name="drgevent">A <see cref="T:System.Windows.Forms.DragEventArgs" /> that contains the event data. </param>
    </member>
    <member name="M:System.Windows.Forms.Control.OnEnabledChanged(System.EventArgs)">
      <summary>Raises the <see cref="E:System.Windows.Forms.Control.EnabledChanged" /> event.</summary>
      <param name="e">An <see cref="T:System.EventArgs" /> that contains the event data. </param>
    </member>
    <member name="M:System.Windows.Forms.Control.OnEnter(System.EventArgs)">
      <summary>Raises the <see cref="E:System.Windows.Forms.Control.Enter" /> event.</summary>
      <param name="e">An <see cref="T:System.EventArgs" /> that contains the event data. </param>
    </member>
    <member name="M:System.Windows.Forms.Control.OnFontChanged(System.EventArgs)">
      <summary>Raises the <see cref="E:System.Windows.Forms.Control.FontChanged" /> event.</summary>
      <param name="e">An <see cref="T:System.EventArgs" /> that contains the event data. </param>
    </member>
    <member name="M:System.Windows.Forms.Control.OnForeColorChanged(System.EventArgs)">
      <summary>Raises the <see cref="E:System.Windows.Forms.Control.ForeColorChanged" /> event.</summary>
      <param name="e">An <see cref="T:System.EventArgs" /> that contains the event data. </param>
    </member>
    <member name="M:System.Windows.Forms.Control.OnGiveFeedback(System.Windows.Forms.GiveFeedbackEventArgs)">
      <summary>Raises the <see cref="E:System.Windows.Forms.Control.GiveFeedback" /> event.</summary>
      <param name="gfbevent">A <see cref="T:System.Windows.Forms.GiveFeedbackEventArgs" /> that contains the event data. </param>
    </member>
    <member name="M:System.Windows.Forms.Control.OnGotFocus(System.EventArgs)">
      <summary>Raises the <see cref="E:System.Windows.Forms.Control.GotFocus" /> event.</summary>
      <param name="e">An <see cref="T:System.EventArgs" /> that contains the event data. </param>
    </member>
    <member name="M:System.Windows.Forms.Control.OnHandleCreated(System.EventArgs)">
      <summary>Raises the <see cref="E:System.Windows.Forms.Control.HandleCreated" /> event.</summary>
      <param name="e">An <see cref="T:System.EventArgs" /> that contains the event data. </param>
    </member>
    <member name="M:System.Windows.Forms.Control.OnHandleDestroyed(System.EventArgs)">
      <summary>Raises the <see cref="E:System.Windows.Forms.Control.HandleDestroyed" /> event.</summary>
      <param name="e">An <see cref="T:System.EventArgs" /> that contains the event data. </param>
    </member>
    <member name="M:System.Windows.Forms.Control.OnHelpRequested(System.Windows.Forms.HelpEventArgs)">
      <summary>Raises the <see cref="E:System.Windows.Forms.Control.HelpRequested" /> event.</summary>
      <param name="hevent">A <see cref="T:System.Windows.Forms.HelpEventArgs" /> that contains the event data. </param>
    </member>
    <member name="M:System.Windows.Forms.Control.OnImeModeChanged(System.EventArgs)">
      <summary>Raises the <see cref="E:System.Windows.Forms.Control.ImeModeChanged" /> event.</summary>
      <param name="e">An <see cref="T:System.EventArgs" /> that contains the event data. </param>
    </member>
    <member name="M:System.Windows.Forms.Control.OnInvalidated(System.Windows.Forms.InvalidateEventArgs)">
      <summary>Raises the <see cref="E:System.Windows.Forms.Control.Invalidated" /> event.</summary>
      <param name="e">An <see cref="T:System.Windows.Forms.InvalidateEventArgs" /> that contains the event data. </param>
    </member>
    <member name="M:System.Windows.Forms.Control.OnKeyDown(System.Windows.Forms.KeyEventArgs)">
      <summary>Raises the <see cref="E:System.Windows.Forms.Control.KeyDown" /> event.</summary>
      <param name="e">A <see cref="T:System.Windows.Forms.KeyEventArgs" /> that contains the event data. </param>
    </member>
    <member name="M:System.Windows.Forms.Control.OnKeyPress(System.Windows.Forms.KeyPressEventArgs)">
      <summary>Raises the <see cref="E:System.Windows.Forms.Control.KeyPress" /> event.</summary>
      <param name="e">A <see cref="T:System.Windows.Forms.KeyPressEventArgs" /> that contains the event data. </param>
    </member>
    <member name="M:System.Windows.Forms.Control.OnKeyUp(System.Windows.Forms.KeyEventArgs)">
      <summary>Raises the <see cref="E:System.Windows.Forms.Control.KeyUp" /> event.</summary>
      <param name="e">A <see cref="T:System.Windows.Forms.KeyEventArgs" /> that contains the event data. </param>
    </member>
    <member name="M:System.Windows.Forms.Control.OnLayout(System.Windows.Forms.LayoutEventArgs)">
      <summary>Raises the <see cref="E:System.Windows.Forms.Control.Layout" /> event.</summary>
      <param name="levent">A <see cref="T:System.Windows.Forms.LayoutEventArgs" /> that contains the event data. </param>
    </member>
    <member name="M:System.Windows.Forms.Control.OnLeave(System.EventArgs)">
      <summary>Raises the <see cref="E:System.Windows.Forms.Control.Leave" /> event.</summary>
      <param name="e">An <see cref="T:System.EventArgs" /> that contains the event data. </param>
    </member>
    <member name="M:System.Windows.Forms.Control.OnLocationChanged(System.EventArgs)">
      <summary>Raises the <see cref="E:System.Windows.Forms.Control.LocationChanged" /> event.</summary>
      <param name="e">An <see cref="T:System.EventArgs" /> that contains the event data. </param>
    </member>
    <member name="M:System.Windows.Forms.Control.OnLostFocus(System.EventArgs)">
      <summary>Raises the <see cref="E:System.Windows.Forms.Control.LostFocus" /> event.</summary>
      <param name="e">An <see cref="T:System.EventArgs" /> that contains the event data. </param>
    </member>
    <member name="M:System.Windows.Forms.Control.OnMarginChanged(System.EventArgs)">
      <summary>Raises the <see cref="E:System.Windows.Forms.Control.MarginChanged" /> event. </summary>
      <param name="e">A <see cref="T:System.EventArgs" /> that contains the event data.</param>
    </member>
    <member name="M:System.Windows.Forms.Control.OnMouseCaptureChanged(System.EventArgs)">
      <summary>Raises the <see cref="E:System.Windows.Forms.Control.MouseCaptureChanged" /> event.</summary>
      <param name="e">An <see cref="T:System.EventArgs" /> that contains the event data. </param>
    </member>
    <member name="M:System.Windows.Forms.Control.OnMouseClick(System.Windows.Forms.MouseEventArgs)">
      <summary>Raises the <see cref="E:System.Windows.Forms.Control.MouseClick" /> event.</summary>
      <param name="e">An <see cref="T:System.Windows.Forms.MouseEventArgs" /> that contains the event data. </param>
    </member>
    <member name="M:System.Windows.Forms.Control.OnMouseDoubleClick(System.Windows.Forms.MouseEventArgs)">
      <summary>Raises the <see cref="E:System.Windows.Forms.Control.MouseDoubleClick" /> event.</summary>
      <param name="e">An <see cref="T:System.Windows.Forms.MouseEventArgs" /> that contains the event data. </param>
    </member>
    <member name="M:System.Windows.Forms.Control.OnMouseDown(System.Windows.Forms.MouseEventArgs)">
      <summary>Raises the <see cref="E:System.Windows.Forms.Control.MouseDown" /> event.</summary>
      <param name="e">A <see cref="T:System.Windows.Forms.MouseEventArgs" /> that contains the event data. </param>
    </member>
    <member name="M:System.Windows.Forms.Control.OnMouseEnter(System.EventArgs)">
      <summary>Raises the <see cref="E:System.Windows.Forms.Control.MouseEnter" /> event.</summary>
      <param name="e">An <see cref="T:System.EventArgs" /> that contains the event data. </param>
    </member>
    <member name="M:System.Windows.Forms.Control.OnMouseHover(System.EventArgs)">
      <summary>Raises the <see cref="E:System.Windows.Forms.Control.MouseHover" /> event.</summary>
      <param name="e">An <see cref="T:System.EventArgs" /> that contains the event data. </param>
    </member>
    <member name="M:System.Windows.Forms.Control.OnMouseLeave(System.EventArgs)">
      <summary>Raises the <see cref="E:System.Windows.Forms.Control.MouseLeave" /> event.</summary>
      <param name="e">An <see cref="T:System.EventArgs" /> that contains the event data. </param>
    </member>
    <member name="M:System.Windows.Forms.Control.OnMouseMove(System.Windows.Forms.MouseEventArgs)">
      <summary>Raises the <see cref="E:System.Windows.Forms.Control.MouseMove" /> event.</summary>
      <param name="e">A <see cref="T:System.Windows.Forms.MouseEventArgs" /> that contains the event data. </param>
    </member>
    <member name="M:System.Windows.Forms.Control.OnMouseUp(System.Windows.Forms.MouseEventArgs)">
      <summary>Raises the <see cref="E:System.Windows.Forms.Control.MouseUp" /> event.</summary>
      <param name="e">A <see cref="T:System.Windows.Forms.MouseEventArgs" /> that contains the event data. </param>
    </member>
    <member name="M:System.Windows.Forms.Control.OnMouseWheel(System.Windows.Forms.MouseEventArgs)">
      <summary>Raises the <see cref="E:System.Windows.Forms.Control.MouseWheel" /> event.</summary>
      <param name="e">A <see cref="T:System.Windows.Forms.MouseEventArgs" /> that contains the event data. </param>
    </member>
    <member name="M:System.Windows.Forms.Control.OnMove(System.EventArgs)">
      <summary>Raises the <see cref="E:System.Windows.Forms.Control.Move" /> event.</summary>
      <param name="e">An <see cref="T:System.EventArgs" /> that contains the event data. </param>
    </member>
    <member name="M:System.Windows.Forms.Control.OnNotifyMessage(System.Windows.Forms.Message)">
      <summary>Notifies the control of Windows messages.</summary>
      <param name="m">A <see cref="T:System.Windows.Forms.Message" /> that represents the Windows message. </param>
    </member>
    <member name="M:System.Windows.Forms.Control.OnPaddingChanged(System.EventArgs)">
      <summary>Raises the <see cref="E:System.Windows.Forms.Control.PaddingChanged" /> event.</summary>
      <param name="e">A <see cref="T:System.EventArgs" /> that contains the event data.</param>
    </member>
    <member name="M:System.Windows.Forms.Control.OnPaint(System.Windows.Forms.PaintEventArgs)">
      <summary>Raises the <see cref="E:System.Windows.Forms.Control.Paint" /> event.</summary>
      <param name="e">A <see cref="T:System.Windows.Forms.PaintEventArgs" /> that contains the event data. </param>
    </member>
    <member name="M:System.Windows.Forms.Control.OnPaintBackground(System.Windows.Forms.PaintEventArgs)">
      <summary>Paints the background of the control.</summary>
      <param name="pevent">A <see cref="T:System.Windows.Forms.PaintEventArgs" /> that contains information about the control to paint. </param>
    </member>
    <member name="M:System.Windows.Forms.Control.OnParentBackColorChanged(System.EventArgs)">
      <summary>Raises the <see cref="E:System.Windows.Forms.Control.BackColorChanged" /> event when the <see cref="P:System.Windows.Forms.Control.BackColor" /> property value of the control's container changes.</summary>
      <param name="e">An <see cref="T:System.EventArgs" /> that contains the event data. </param>
    </member>
    <member name="M:System.Windows.Forms.Control.OnParentBackgroundImageChanged(System.EventArgs)">
      <summary>Raises the <see cref="E:System.Windows.Forms.Control.BackgroundImageChanged" /> event when the <see cref="P:System.Windows.Forms.Control.BackgroundImage" /> property value of the control's container changes.</summary>
      <param name="e">An <see cref="T:System.EventArgs" /> that contains the event data. </param>
    </member>
    <member name="M:System.Windows.Forms.Control.OnParentBindingContextChanged(System.EventArgs)">
      <summary>Raises the <see cref="E:System.Windows.Forms.Control.BindingContextChanged" /> event when the <see cref="P:System.Windows.Forms.Control.BindingContext" /> property value of the control's container changes.</summary>
      <param name="e">An <see cref="T:System.EventArgs" /> that contains the event data. </param>
    </member>
    <member name="M:System.Windows.Forms.Control.OnParentChanged(System.EventArgs)">
      <summary>Raises the <see cref="E:System.Windows.Forms.Control.ParentChanged" /> event.</summary>
      <param name="e">An <see cref="T:System.EventArgs" /> that contains the event data. </param>
    </member>
    <member name="M:System.Windows.Forms.Control.OnParentCursorChanged(System.EventArgs)">
      <summary>Raises the <see cref="E:System.Windows.Forms.Control.CursorChanged" /> event.</summary>
      <param name="e">An <see cref="T:System.EventArgs" /> that contains the event data.</param>
    </member>
    <member name="M:System.Windows.Forms.Control.OnParentEnabledChanged(System.EventArgs)">
      <summary>Raises the <see cref="E:System.Windows.Forms.Control.EnabledChanged" /> event when the <see cref="P:System.Windows.Forms.Control.Enabled" /> property value of the control's container changes.</summary>
      <param name="e">An <see cref="T:System.EventArgs" /> that contains the event data. </param>
    </member>
    <member name="M:System.Windows.Forms.Control.OnParentFontChanged(System.EventArgs)">
      <summary>Raises the <see cref="E:System.Windows.Forms.Control.FontChanged" /> event when the <see cref="P:System.Windows.Forms.Control.Font" /> property value of the control's container changes.</summary>
      <param name="e">An <see cref="T:System.EventArgs" /> that contains the event data. </param>
    </member>
    <member name="M:System.Windows.Forms.Control.OnParentForeColorChanged(System.EventArgs)">
      <summary>Raises the <see cref="E:System.Windows.Forms.Control.ForeColorChanged" /> event when the <see cref="P:System.Windows.Forms.Control.ForeColor" /> property value of the control's container changes.</summary>
      <param name="e">An <see cref="T:System.EventArgs" /> that contains the event data. </param>
    </member>
    <member name="M:System.Windows.Forms.Control.OnParentRightToLeftChanged(System.EventArgs)">
      <summary>Raises the <see cref="E:System.Windows.Forms.Control.RightToLeftChanged" /> event when the <see cref="P:System.Windows.Forms.Control.RightToLeft" /> property value of the control's container changes.</summary>
      <param name="e">An <see cref="T:System.EventArgs" /> that contains the event data. </param>
    </member>
    <member name="M:System.Windows.Forms.Control.OnParentVisibleChanged(System.EventArgs)">
      <summary>Raises the <see cref="E:System.Windows.Forms.Control.VisibleChanged" /> event when the <see cref="P:System.Windows.Forms.Control.Visible" /> property value of the control's container changes.</summary>
      <param name="e">An <see cref="T:System.EventArgs" /> that contains the event data. </param>
    </member>
    <member name="M:System.Windows.Forms.Control.OnPreviewKeyDown(System.Windows.Forms.PreviewKeyDownEventArgs)">
      <summary>Raises the <see cref="E:System.Windows.Forms.Control.PreviewKeyDown" /> event.</summary>
      <param name="e">A <see cref="T:System.Windows.Forms.PreviewKeyDownEventArgs" /> that contains the event data.</param>
    </member>
    <member name="M:System.Windows.Forms.Control.OnPrint(System.Windows.Forms.PaintEventArgs)">
      <summary>Raises the <see cref="E:System.Windows.Forms.Control.Paint" /> event. </summary>
      <param name="e">A <see cref="T:System.Windows.Forms.PaintEventArgs" /> that contains the event data.</param>
      <exception cref="T:System.ArgumentNullException">The <paramref name="e" /> parameter is null.</exception>
    </member>
    <member name="M:System.Windows.Forms.Control.OnQueryContinueDrag(System.Windows.Forms.QueryContinueDragEventArgs)">
      <summary>Raises the <see cref="E:System.Windows.Forms.Control.QueryContinueDrag" /> event.</summary>
      <param name="qcdevent">A <see cref="T:System.Windows.Forms.QueryContinueDragEventArgs" /> that contains the event data. </param>
    </member>
    <member name="M:System.Windows.Forms.Control.OnRegionChanged(System.EventArgs)">
      <summary>Raises the <see cref="E:System.Windows.Forms.Control.RegionChanged" /> event. </summary>
      <param name="e">An <see cref="T:System.EventArgs" /> that contains the event data.</param>
    </member>
    <member name="M:System.Windows.Forms.Control.OnResize(System.EventArgs)">
      <summary>Raises the <see cref="E:System.Windows.Forms.Control.Resize" /> event.</summary>
      <param name="e">An <see cref="T:System.EventArgs" /> that contains the event data. </param>
    </member>
    <member name="M:System.Windows.Forms.Control.OnRightToLeftChanged(System.EventArgs)">
      <summary>Raises the <see cref="E:System.Windows.Forms.Control.RightToLeftChanged" /> event.</summary>
      <param name="e">An <see cref="T:System.EventArgs" /> that contains the event data. </param>
    </member>
    <member name="M:System.Windows.Forms.Control.OnSizeChanged(System.EventArgs)">
      <summary>Raises the <see cref="E:System.Windows.Forms.Control.SizeChanged" /> event.</summary>
      <param name="e">An <see cref="T:System.EventArgs" /> that contains the event data. </param>
    </member>
    <member name="M:System.Windows.Forms.Control.OnStyleChanged(System.EventArgs)">
      <summary>Raises the <see cref="E:System.Windows.Forms.Control.StyleChanged" /> event.</summary>
      <param name="e">An <see cref="T:System.EventArgs" /> that contains the event data. </param>
    </member>
    <member name="M:System.Windows.Forms.Control.OnSystemColorsChanged(System.EventArgs)">
      <summary>Raises the <see cref="E:System.Windows.Forms.Control.SystemColorsChanged" /> event.</summary>
      <param name="e">An <see cref="T:System.EventArgs" /> that contains the event data. </param>
    </member>
    <member name="M:System.Windows.Forms.Control.OnTabIndexChanged(System.EventArgs)">
      <summary>Raises the <see cref="E:System.Windows.Forms.Control.TabIndexChanged" /> event.</summary>
      <param name="e">An <see cref="T:System.EventArgs" /> that contains the event data. </param>
    </member>
    <member name="M:System.Windows.Forms.Control.OnTabStopChanged(System.EventArgs)">
      <summary>Raises the <see cref="E:System.Windows.Forms.Control.TabStopChanged" /> event.</summary>
      <param name="e">An <see cref="T:System.EventArgs" /> that contains the event data. </param>
    </member>
    <member name="M:System.Windows.Forms.Control.OnTextChanged(System.EventArgs)">
      <summary>Raises the <see cref="E:System.Windows.Forms.Control.TextChanged" /> event.</summary>
      <param name="e">An <see cref="T:System.EventArgs" /> that contains the event data. </param>
    </member>
    <member name="M:System.Windows.Forms.Control.OnValidated(System.EventArgs)">
      <summary>Raises the <see cref="E:System.Windows.Forms.Control.Validated" /> event.</summary>
      <param name="e">An <see cref="T:System.EventArgs" /> that contains the event data. </param>
    </member>
    <member name="M:System.Windows.Forms.Control.OnValidating(System.ComponentModel.CancelEventArgs)">
      <summary>Raises the <see cref="E:System.Windows.Forms.Control.Validating" /> event.</summary>
      <param name="e">A <see cref="T:System.ComponentModel.CancelEventArgs" /> that contains the event data. </param>
    </member>
    <member name="M:System.Windows.Forms.Control.OnVisibleChanged(System.EventArgs)">
      <summary>Raises the <see cref="E:System.Windows.Forms.Control.VisibleChanged" /> event.</summary>
      <param name="e">An <see cref="T:System.EventArgs" /> that contains the event data. </param>
    </member>
    <member name="P:System.Windows.Forms.Control.Padding">
      <summary>Gets or sets padding within the control.</summary>
      <returns>A <see cref="T:System.Windows.Forms.Padding" /> representing the control's internal spacing characteristics.</returns>
      <filterpriority>2</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="E:System.Windows.Forms.Control.PaddingChanged">
      <summary>Occurs when the control's padding changes.</summary>
    </member>
    <member name="E:System.Windows.Forms.Control.Paint">
      <summary>Occurs when the control is redrawn.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="P:System.Windows.Forms.Control.Parent">
      <summary>Gets or sets the parent container of the control.</summary>
      <returns>A <see cref="T:System.Windows.Forms.Control" /> that represents the parent or container control of the control.</returns>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
        <IPermission class="System.Diagnostics.PerformanceCounterPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="E:System.Windows.Forms.Control.ParentChanged">
      <summary>Occurs when the <see cref="P:System.Windows.Forms.Control.Parent" /> property value changes.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Windows.Forms.Control.PerformLayout">
      <summary>Forces the control to apply layout logic to all its child controls.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Windows.Forms.Control.PerformLayout(System.Windows.Forms.Control,System.String)">
      <summary>Forces the control to apply layout logic to all its child controls.</summary>
      <param name="affectedControl">A <see cref="T:System.Windows.Forms.Control" /> that represents the most recently changed control. </param>
      <param name="affectedProperty">The name of the most recently changed property on the control. </param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Windows.Forms.Control.PointToClient(System.Drawing.Point)">
      <summary>Computes the location of the specified screen point into client coordinates.</summary>
      <returns>A <see cref="T:System.Drawing.Point" /> that represents the converted <see cref="T:System.Drawing.Point" />, <paramref name="p" />, in client coordinates.</returns>
      <param name="p">The screen coordinate <see cref="T:System.Drawing.Point" /> to convert. </param>
      <filterpriority>2</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
        <IPermission class="System.Diagnostics.PerformanceCounterPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:System.Windows.Forms.Control.PointToScreen(System.Drawing.Point)">
      <summary>Computes the location of the specified client point into screen coordinates.</summary>
      <returns>A <see cref="T:System.Drawing.Point" /> that represents the converted <see cref="T:System.Drawing.Point" />, <paramref name="p" />, in screen coordinates.</returns>
      <param name="p">The client coordinate <see cref="T:System.Drawing.Point" /> to convert. </param>
      <filterpriority>2</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
        <IPermission class="System.Diagnostics.PerformanceCounterPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="P:System.Windows.Forms.Control.PreferredSize">
      <summary>Gets the size of a rectangular area into which the control can fit.</summary>
      <returns>A <see cref="T:System.Drawing.Size" /> containing the height and width, in pixels.</returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Windows.Forms.Control.PreProcessControlMessage(System.Windows.Forms.Message@)">
      <summary>Preprocesses keyboard or input messages within the message loop before they are dispatched.</summary>
      <returns>One of the <see cref="T:System.Windows.Forms.PreProcessControlState" /> values, depending on whether <see cref="M:System.Windows.Forms.Control.PreProcessMessage(System.Windows.Forms.Message@)" /> is true or false and whether <see cref="M:System.Windows.Forms.Control.IsInputKey(System.Windows.Forms.Keys)" /> or <see cref="M:System.Windows.Forms.Control.IsInputChar(System.Char)" /> are true or false.</returns>
      <param name="msg">A <see cref="T:System.Windows.Forms.Message" /> that represents the message to process.</param>
    </member>
    <member name="M:System.Windows.Forms.Control.PreProcessMessage(System.Windows.Forms.Message@)">
      <summary>Preprocesses keyboard or input messages within the message loop before they are dispatched.</summary>
      <returns>true if the message was processed by the control; otherwise, false.</returns>
      <param name="msg">A <see cref="T:System.Windows.Forms.Message" />, passed by reference, that represents the message to process. The possible values are WM_KEYDOWN, WM_SYSKEYDOWN, WM_CHAR, and WM_SYSCHAR. </param>
      <filterpriority>2</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
        <IPermission class="System.Diagnostics.PerformanceCounterPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="E:System.Windows.Forms.Control.PreviewKeyDown">
      <summary>Occurs before the <see cref="E:System.Windows.Forms.Control.KeyDown" /> event when a key is pressed while focus is on this control.</summary>
    </member>
    <member name="M:System.Windows.Forms.Control.ProcessCmdKey(System.Windows.Forms.Message@,System.Windows.Forms.Keys)">
      <summary>Processes a command key.</summary>
      <returns>true if the character was processed by the control; otherwise, false.</returns>
      <param name="msg">A <see cref="T:System.Windows.Forms.Message" />, passed by reference, that represents the window message to process. </param>
      <param name="keyData">One of the <see cref="T:System.Windows.Forms.Keys" /> values that represents the key to process. </param>
    </member>
    <member name="M:System.Windows.Forms.Control.ProcessDialogChar(System.Char)">
      <summary>Processes a dialog character.</summary>
      <returns>true if the character was processed by the control; otherwise, false.</returns>
      <param name="charCode">The character to process. </param>
    </member>
    <member name="M:System.Windows.Forms.Control.ProcessDialogKey(System.Windows.Forms.Keys)">
      <summary>Processes a dialog key.</summary>
      <returns>true if the key was processed by the control; otherwise, false.</returns>
      <param name="keyData">One of the <see cref="T:System.Windows.Forms.Keys" /> values that represents the key to process. </param>
    </member>
    <member name="M:System.Windows.Forms.Control.ProcessKeyEventArgs(System.Windows.Forms.Message@)">
      <summary>Processes a key message and generates the appropriate control events.</summary>
      <returns>true if the message was processed by the control; otherwise, false.</returns>
      <param name="m">A <see cref="T:System.Windows.Forms.Message" />, passed by reference, that represents the window message to process. </param>
    </member>
    <member name="M:System.Windows.Forms.Control.ProcessKeyMessage(System.Windows.Forms.Message@)">
      <summary>Processes a keyboard message.</summary>
      <returns>true if the message was processed by the control; otherwise, false.</returns>
      <param name="m">A <see cref="T:System.Windows.Forms.Message" />, passed by reference, that represents the window message to process. </param>
    </member>
    <member name="M:System.Windows.Forms.Control.ProcessKeyPreview(System.Windows.Forms.Message@)">
      <summary>Previews a keyboard message.</summary>
      <returns>true if the message was processed by the control; otherwise, false.</returns>
      <param name="m">A <see cref="T:System.Windows.Forms.Message" />, passed by reference, that represents the window message to process. </param>
    </member>
    <member name="M:System.Windows.Forms.Control.ProcessMnemonic(System.Char)">
      <summary>Processes a mnemonic character.</summary>
      <returns>true if the character was processed as a mnemonic by the control; otherwise, false.</returns>
      <param name="charCode">The character to process. </param>
    </member>
    <member name="P:System.Windows.Forms.Control.ProductName">
      <summary>Gets the product name of the assembly containing the control.</summary>
      <returns>The product name of the assembly containing the control.</returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="P:System.Windows.Forms.Control.ProductVersion">
      <summary>Gets the version of the assembly containing the control.</summary>
      <returns>The file version of the assembly containing the control.</returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="P:System.Windows.Forms.Control.PropagatingImeMode">
      <summary>Gets an object that represents a propagating IME mode.</summary>
      <returns>An object that represents a propagating IME mode.</returns>
    </member>
    <member name="E:System.Windows.Forms.Control.QueryAccessibilityHelp">
      <summary>Occurs when <see cref="T:System.Windows.Forms.AccessibleObject" /> is providing help to accessibility applications.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="E:System.Windows.Forms.Control.QueryContinueDrag">
      <summary>Occurs during a drag-and-drop operation and enables the drag source to determine whether the drag-and-drop operation should be canceled.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Windows.Forms.Control.RaiseDragEvent(System.Object,System.Windows.Forms.DragEventArgs)">
      <summary>Raises the appropriate drag event.</summary>
      <param name="key">The event to raise. </param>
      <param name="e">A <see cref="T:System.Windows.Forms.DragEventArgs" /> that contains the event data. </param>
    </member>
    <member name="M:System.Windows.Forms.Control.RaiseKeyEvent(System.Object,System.Windows.Forms.KeyEventArgs)">
      <summary>Raises the appropriate key event.</summary>
      <param name="key">The event to raise. </param>
      <param name="e">A <see cref="T:System.Windows.Forms.KeyEventArgs" /> that contains the event data. </param>
    </member>
    <member name="M:System.Windows.Forms.Control.RaiseMouseEvent(System.Object,System.Windows.Forms.MouseEventArgs)">
      <summary>Raises the appropriate mouse event.</summary>
      <param name="key">The event to raise. </param>
      <param name="e">A <see cref="T:System.Windows.Forms.MouseEventArgs" /> that contains the event data. </param>
    </member>
    <member name="M:System.Windows.Forms.Control.RaisePaintEvent(System.Object,System.Windows.Forms.PaintEventArgs)">
      <summary>Raises the appropriate paint event.</summary>
      <param name="key">The event to raise. </param>
      <param name="e">A <see cref="T:System.Windows.Forms.PaintEventArgs" /> that contains the event data. </param>
    </member>
    <member name="M:System.Windows.Forms.Control.RecreateHandle">
      <summary>Forces the re-creation of the handle for the control.</summary>
    </member>
    <member name="P:System.Windows.Forms.Control.RecreatingHandle">
      <summary>Gets a value indicating whether the control is currently re-creating its handle.</summary>
      <returns>true if the control is currently re-creating its handle; otherwise, false.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Windows.Forms.Control.RectangleToClient(System.Drawing.Rectangle)">
      <summary>Computes the size and location of the specified screen rectangle in client coordinates.</summary>
      <returns>A <see cref="T:System.Drawing.Rectangle" /> that represents the converted <see cref="T:System.Drawing.Rectangle" />, <paramref name="r" />, in client coordinates.</returns>
      <param name="r">The screen coordinate <see cref="T:System.Drawing.Rectangle" /> to convert. </param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Windows.Forms.Control.RectangleToScreen(System.Drawing.Rectangle)">
      <summary>Computes the size and location of the specified client rectangle in screen coordinates.</summary>
      <returns>A <see cref="T:System.Drawing.Rectangle" /> that represents the converted <see cref="T:System.Drawing.Rectangle" />, <paramref name="p" />, in screen coordinates.</returns>
      <param name="r">The client coordinate <see cref="T:System.Drawing.Rectangle" /> to convert. </param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Windows.Forms.Control.ReflectMessage(System.IntPtr,System.Windows.Forms.Message@)">
      <summary>Reflects the specified message to the control that is bound to the specified handle.</summary>
      <returns>true if the message was reflected; otherwise, false.</returns>
      <param name="hWnd">An <see cref="T:System.IntPtr" /> representing the handle of the control to reflect the message to. </param>
      <param name="m">A <see cref="T:System.Windows.Forms.Message" /> representing the Windows message to reflect. </param>
    </member>
    <member name="M:System.Windows.Forms.Control.Refresh">
      <summary>Forces the control to invalidate its client area and immediately redraw itself and any child controls.</summary>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
        <IPermission class="System.Diagnostics.PerformanceCounterPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="P:System.Windows.Forms.Control.Region">
      <summary>Gets or sets the window region associated with the control.</summary>
      <returns>The window <see cref="T:System.Drawing.Region" /> associated with the control.</returns>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
        <IPermission class="System.Diagnostics.PerformanceCounterPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="E:System.Windows.Forms.Control.RegionChanged">
      <summary>Occurs when the value of the <see cref="P:System.Windows.Forms.Control.Region" /> property changes.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="P:System.Windows.Forms.Control.RenderRightToLeft">
      <summary>This property is now obsolete.</summary>
      <returns>true if the control is rendered from right to left; otherwise, false. The default is false.</returns>
    </member>
    <member name="M:System.Windows.Forms.Control.ResetBackColor">
      <summary>Resets the <see cref="P:System.Windows.Forms.Control.BackColor" /> property to its default value.</summary>
      <filterpriority>2</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:System.Windows.Forms.Control.ResetBindings">
      <summary>Causes a control bound to the <see cref="T:System.Windows.Forms.BindingSource" /> to reread all the items in the list and refresh their displayed values.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Windows.Forms.Control.ResetCursor">
      <summary>Resets the <see cref="P:System.Windows.Forms.Control.Cursor" /> property to its default value.</summary>
      <filterpriority>2</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
        <IPermission class="System.Diagnostics.PerformanceCounterPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:System.Windows.Forms.Control.ResetFont">
      <summary>Resets the <see cref="P:System.Windows.Forms.Control.Font" /> property to its default value.</summary>
      <filterpriority>2</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
        <IPermission class="System.Diagnostics.PerformanceCounterPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:System.Windows.Forms.Control.ResetForeColor">
      <summary>Resets the <see cref="P:System.Windows.Forms.Control.ForeColor" /> property to its default value.</summary>
      <filterpriority>2</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:System.Windows.Forms.Control.ResetImeMode">
      <summary>Resets the <see cref="P:System.Windows.Forms.Control.ImeMode" /> property to its default value.</summary>
      <filterpriority>2</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
        <IPermission class="System.Diagnostics.PerformanceCounterPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:System.Windows.Forms.Control.ResetMouseEventArgs">
      <summary>Resets the control to handle the <see cref="E:System.Windows.Forms.Control.MouseLeave" /> event.</summary>
    </member>
    <member name="M:System.Windows.Forms.Control.ResetRightToLeft">
      <summary>Resets the <see cref="P:System.Windows.Forms.Control.RightToLeft" /> property to its default value.</summary>
      <filterpriority>2</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
        <IPermission class="System.Diagnostics.PerformanceCounterPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:System.Windows.Forms.Control.ResetText">
      <summary>Resets the <see cref="P:System.Windows.Forms.Control.Text" /> property to its default value.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="E:System.Windows.Forms.Control.Resize">
      <summary>Occurs when the control is resized.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="P:System.Windows.Forms.Control.ResizeRedraw">
      <summary>Gets or sets a value indicating whether the control redraws itself when resized.</summary>
      <returns>true if the control redraws itself when resized; otherwise, false.</returns>
    </member>
    <member name="M:System.Windows.Forms.Control.ResumeLayout">
      <summary>Resumes usual layout logic.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Windows.Forms.Control.ResumeLayout(System.Boolean)">
      <summary>Resumes usual layout logic, optionally forcing an immediate layout of pending layout requests.</summary>
      <param name="performLayout">true to execute pending layout requests; otherwise, false. </param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="P:System.Windows.Forms.Control.Right">
      <summary>Gets the distance, in pixels, between the right edge of the control and the left edge of its container's client area.</summary>
      <returns>An <see cref="T:System.Int32" /> representing the distance, in pixels, between the right edge of the control and the left edge of its container's client area.</returns>
      <filterpriority>2</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
        <IPermission class="System.Diagnostics.PerformanceCounterPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="P:System.Windows.Forms.Control.RightToLeft">
      <summary>Gets or sets a value indicating whether control's elements are aligned to support locales using right-to-left fonts.</summary>
      <returns>One of the <see cref="T:System.Windows.Forms.RightToLeft" /> values. The default is <see cref="F:System.Windows.Forms.RightToLeft.Inherit" />.</returns>
      <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">The assigned value is not one of the <see cref="T:System.Windows.Forms.RightToLeft" /> values. </exception>
      <filterpriority>2</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
        <IPermission class="System.Diagnostics.PerformanceCounterPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="E:System.Windows.Forms.Control.RightToLeftChanged">
      <summary>Occurs when the <see cref="P:System.Windows.Forms.Control.RightToLeft" /> property value changes.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Windows.Forms.Control.RtlTranslateAlignment(System.Drawing.ContentAlignment)">
      <summary>Converts the specified <see cref="T:System.Drawing.ContentAlignment" /> to the appropriate <see cref="T:System.Drawing.ContentAlignment" /> to support right-to-left text.</summary>
      <returns>One of the <see cref="T:System.Drawing.ContentAlignment" /> values.</returns>
      <param name="align">One of the <see cref="T:System.Drawing.ContentAlignment" /> values. </param>
    </member>
    <member name="M:System.Windows.Forms.Control.RtlTranslateAlignment(System.Windows.Forms.HorizontalAlignment)">
      <summary>Converts the specified <see cref="T:System.Windows.Forms.HorizontalAlignment" /> to the appropriate <see cref="T:System.Windows.Forms.HorizontalAlignment" /> to support right-to-left text.</summary>
      <returns>One of the <see cref="T:System.Windows.Forms.HorizontalAlignment" /> values.</returns>
      <param name="align">One of the <see cref="T:System.Windows.Forms.HorizontalAlignment" /> values. </param>
    </member>
    <member name="M:System.Windows.Forms.Control.RtlTranslateAlignment(System.Windows.Forms.LeftRightAlignment)">
      <summary>Converts the specified <see cref="T:System.Windows.Forms.LeftRightAlignment" /> to the appropriate <see cref="T:System.Windows.Forms.LeftRightAlignment" /> to support right-to-left text.</summary>
      <returns>One of the <see cref="T:System.Windows.Forms.LeftRightAlignment" /> values.</returns>
      <param name="align">One of the <see cref="T:System.Windows.Forms.LeftRightAlignment" /> values. </param>
    </member>
    <member name="M:System.Windows.Forms.Control.RtlTranslateContent(System.Drawing.ContentAlignment)">
      <summary>Converts the specified <see cref="T:System.Drawing.ContentAlignment" /> to the appropriate <see cref="T:System.Drawing.ContentAlignment" /> to support right-to-left text.</summary>
      <returns>One of the <see cref="T:System.Drawing.ContentAlignment" /> values.</returns>
      <param name="align">One of the <see cref="T:System.Drawing.ContentAlignment" /> values. </param>
    </member>
    <member name="M:System.Windows.Forms.Control.RtlTranslateHorizontal(System.Windows.Forms.HorizontalAlignment)">
      <summary>Converts the specified <see cref="T:System.Windows.Forms.HorizontalAlignment" /> to the appropriate <see cref="T:System.Windows.Forms.HorizontalAlignment" /> to support right-to-left text.</summary>
      <returns>One of the <see cref="T:System.Windows.Forms.HorizontalAlignment" /> values.</returns>
      <param name="align">One of the <see cref="T:System.Windows.Forms.HorizontalAlignment" /> values. </param>
    </member>
    <member name="M:System.Windows.Forms.Control.RtlTranslateLeftRight(System.Windows.Forms.LeftRightAlignment)">
      <summary>Converts the specified <see cref="T:System.Windows.Forms.LeftRightAlignment" /> to the appropriate <see cref="T:System.Windows.Forms.LeftRightAlignment" /> to support right-to-left text.</summary>
      <returns>One of the <see cref="T:System.Windows.Forms.LeftRightAlignment" /> values.</returns>
      <param name="align">One of the <see cref="T:System.Windows.Forms.LeftRightAlignment" /> values. </param>
    </member>
    <member name="M:System.Windows.Forms.Control.Scale(System.Drawing.SizeF)">
      <summary>Scales the control and all child controls by the specified scaling factor.</summary>
      <param name="factor">A <see cref="T:System.Drawing.SizeF" /> containing the horizontal and vertical scaling factors.</param>
    </member>
    <member name="M:System.Windows.Forms.Control.Scale(System.Single)">
      <summary>Scales the control and any child controls.</summary>
      <param name="ratio">The ratio to use for scaling.</param>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
        <IPermission class="System.Diagnostics.PerformanceCounterPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:System.Windows.Forms.Control.Scale(System.Single,System.Single)">
      <summary>Scales the entire control and any child controls.</summary>
      <param name="dx">The horizontal scaling factor.</param>
      <param name="dy">The vertical scaling factor.</param>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
        <IPermission class="System.Diagnostics.PerformanceCounterPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="P:System.Windows.Forms.Control.ScaleChildren">
      <summary>Gets a value that determines the scaling of child controls. </summary>
      <returns>true if child controls will be scaled when the <see cref="M:System.Windows.Forms.Control.Scale(System.Single)" /> method on this control is called; otherwise, false. The default is true.</returns>
    </member>
    <member name="M:System.Windows.Forms.Control.ScaleControl(System.Drawing.SizeF,System.Windows.Forms.BoundsSpecified)">
      <summary>Scales a control's location, size, padding and margin.</summary>
      <param name="factor">The factor by which the height and width of the control will be scaled.</param>
      <param name="specified">A <see cref="T:System.Windows.Forms.BoundsSpecified" /> value that specifies the bounds of the control to use when defining its size and position.</param>
    </member>
    <member name="M:System.Windows.Forms.Control.ScaleCore(System.Single,System.Single)">
      <summary>This method is not relevant for this class.</summary>
      <param name="dx">The horizontal scaling factor.</param>
      <param name="dy">The vertical scaling factor.</param>
    </member>
    <member name="M:System.Windows.Forms.Control.Select">
      <summary>Activates the control.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Windows.Forms.Control.Select(System.Boolean,System.Boolean)">
      <summary>Activates a child control. Optionally specifies the direction in the tab order to select the control from.</summary>
      <param name="directed">true to specify the direction of the control to select; otherwise, false. </param>
      <param name="forward">true to move forward in the tab order; false to move backward in the tab order. </param>
    </member>
    <member name="M:System.Windows.Forms.Control.SelectNextControl(System.Windows.Forms.Control,System.Boolean,System.Boolean,System.Boolean,System.Boolean)">
      <summary>Activates the next control.</summary>
      <returns>true if a control was activated; otherwise, false.</returns>
      <param name="ctl">The <see cref="T:System.Windows.Forms.Control" /> at which to start the search. </param>
      <param name="forward">true to move forward in the tab order; false to move backward in the tab order. </param>
      <param name="tabStopOnly">true to ignore the controls with the <see cref="P:System.Windows.Forms.Control.TabStop" /> property set to false; otherwise, false. </param>
      <param name="nested">true to include nested (children of child controls) child controls; otherwise, false. </param>
      <param name="wrap">true to continue searching from the first control in the tab order after the last control has been reached; otherwise, false. </param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Windows.Forms.Control.SendToBack">
      <summary>Sends the control to the back of the z-order.</summary>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
        <IPermission class="System.Diagnostics.PerformanceCounterPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:System.Windows.Forms.Control.SetAutoSizeMode(System.Windows.Forms.AutoSizeMode)">
      <summary>Sets a value indicating how a control will behave when its <see cref="P:System.Windows.Forms.Control.AutoSize" /> property is enabled.</summary>
      <param name="mode">One of the <see cref="T:System.Windows.Forms.AutoSizeMode" /> values.</param>
    </member>
    <member name="M:System.Windows.Forms.Control.SetBounds(System.Int32,System.Int32,System.Int32,System.Int32)">
      <summary>Sets the bounds of the control to the specified location and size.</summary>
      <param name="x">The new <see cref="P:System.Windows.Forms.Control.Left" /> property value of the control. </param>
      <param name="y">The new <see cref="P:System.Windows.Forms.Control.Top" /> property value of the control. </param>
      <param name="width">The new <see cref="P:System.Windows.Forms.Control.Width" /> property value of the control. </param>
      <param name="height">The new <see cref="P:System.Windows.Forms.Control.Height" /> property value of the control. </param>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
        <IPermission class="System.Diagnostics.PerformanceCounterPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:System.Windows.Forms.Control.SetBounds(System.Int32,System.Int32,System.Int32,System.Int32,System.Windows.Forms.BoundsSpecified)">
      <summary>Sets the specified bounds of the control to the specified location and size.</summary>
      <param name="x">The new <see cref="P:System.Windows.Forms.Control.Left" /> property value of the control. </param>
      <param name="y">The new <see cref="P:System.Windows.Forms.Control.Top" /> property value of the control. </param>
      <param name="width">The new <see cref="P:System.Windows.Forms.Control.Width" /> property value of the control. </param>
      <param name="height">The new <see cref="P:System.Windows.Forms.Control.Height" /> property value of the control. </param>
      <param name="specified">A bitwise combination of the <see cref="T:System.Windows.Forms.BoundsSpecified" /> values. For any parameter not specified, the current value will be used. </param>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
        <IPermission class="System.Diagnostics.PerformanceCounterPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:System.Windows.Forms.Control.SetBoundsCore(System.Int32,System.Int32,System.Int32,System.Int32,System.Windows.Forms.BoundsSpecified)">
      <summary>Performs the work of setting the specified bounds of this control.</summary>
      <param name="x">The new <see cref="P:System.Windows.Forms.Control.Left" /> property value of the control. </param>
      <param name="y">The new <see cref="P:System.Windows.Forms.Control.Top" /> property value of the control. </param>
      <param name="width">The new <see cref="P:System.Windows.Forms.Control.Width" /> property value of the control. </param>
      <param name="height">The new <see cref="P:System.Windows.Forms.Control.Height" /> property value of the control. </param>
      <param name="specified">A bitwise combination of the <see cref="T:System.Windows.Forms.BoundsSpecified" /> values. </param>
    </member>
    <member name="M:System.Windows.Forms.Control.SetClientSizeCore(System.Int32,System.Int32)">
      <summary>Sets the size of the client area of the control.</summary>
      <param name="x">The client area width, in pixels. </param>
      <param name="y">The client area height, in pixels. </param>
    </member>
    <member name="M:System.Windows.Forms.Control.SetStyle(System.Windows.Forms.ControlStyles,System.Boolean)">
      <summary>Sets a specified <see cref="T:System.Windows.Forms.ControlStyles" /> flag to either true or false.</summary>
      <param name="flag">The <see cref="T:System.Windows.Forms.ControlStyles" /> bit to set. </param>
      <param name="value">true to apply the specified style to the control; otherwise, false. </param>
    </member>
    <member name="M:System.Windows.Forms.Control.SetTopLevel(System.Boolean)">
      <summary>Sets the control as the top-level control.</summary>
      <param name="value">true to set the control as the top-level control; otherwise, false. </param>
      <exception cref="T:System.InvalidOperationException">The <paramref name="value" /> parameter is set to true and the control is an ActiveX control. </exception>
      <exception cref="T:System.Exception">The <see cref="M:System.Windows.Forms.Control.GetTopLevel" /> return value is not equal to the <paramref name="value" /> parameter and the <see cref="P:System.Windows.Forms.Control.Parent" /> property is not null. </exception>
    </member>
    <member name="M:System.Windows.Forms.Control.SetVisibleCore(System.Boolean)">
      <summary>Sets the control to the specified visible state.</summary>
      <param name="value">true to make the control visible; otherwise, false. </param>
    </member>
    <member name="M:System.Windows.Forms.Control.Show">
      <summary>Displays the control to the user.</summary>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
        <IPermission class="System.Diagnostics.PerformanceCounterPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="P:System.Windows.Forms.Control.ShowFocusCues">
      <summary>Gets a value indicating whether the control should display focus rectangles.</summary>
      <returns>true if the control should display focus rectangles; otherwise, false.</returns>
    </member>
    <member name="P:System.Windows.Forms.Control.ShowKeyboardCues">
      <summary>Gets a value indicating whether the user interface is in the appropriate state to show or hide keyboard accelerators.</summary>
      <returns>true if the keyboard accelerators are visible; otherwise, false.</returns>
    </member>
    <member name="P:System.Windows.Forms.Control.Site">
      <summary>Gets or sets the site of the control.</summary>
      <returns>The <see cref="T:System.ComponentModel.ISite" /> associated with the <see cref="T:System.Windows.Forms.Control" />, if any.</returns>
      <filterpriority>2</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
        <IPermission class="System.Diagnostics.PerformanceCounterPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="P:System.Windows.Forms.Control.Size">
      <summary>Gets or sets the height and width of the control.</summary>
      <returns>The <see cref="T:System.Drawing.Size" /> that represents the height and width of the control in pixels.</returns>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
        <IPermission class="System.Diagnostics.PerformanceCounterPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="E:System.Windows.Forms.Control.SizeChanged">
      <summary>Occurs when the <see cref="P:System.Windows.Forms.Control.Size" /> property value changes.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Windows.Forms.Control.SizeFromClientSize(System.Drawing.Size)">
      <summary>Determines the size of the entire control from the height and width of its client area.</summary>
      <returns>A <see cref="T:System.Drawing.Size" /> value representing the height and width of the entire control.</returns>
      <param name="clientSize">A <see cref="T:System.Drawing.Size" /> value representing the height and width of the control's client area.</param>
    </member>
    <member name="E:System.Windows.Forms.Control.StyleChanged">
      <summary>Occurs when the control style changes.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Windows.Forms.Control.SuspendLayout">
      <summary>Temporarily suspends the layout logic for the control.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Windows.Forms.Control.System#Windows#Forms#IDropTarget#OnDragDrop(System.Windows.Forms.DragEventArgs)">
      <summary>Raises the <see cref="E:System.Windows.Forms.Control.DragDrop" /> event.</summary>
      <param name="drgEvent">A <see cref="T:System.Windows.Forms.DragEventArgs" /> that contains the event data. </param>
    </member>
    <member name="M:System.Windows.Forms.Control.System#Windows#Forms#IDropTarget#OnDragEnter(System.Windows.Forms.DragEventArgs)">
      <summary>Raises the <see cref="E:System.Windows.Forms.Control.DragEnter" /> event.</summary>
      <param name="drgEvent">A <see cref="T:System.Windows.Forms.DragEventArgs" /> that contains the event data. </param>
    </member>
    <member name="M:System.Windows.Forms.Control.System#Windows#Forms#IDropTarget#OnDragLeave(System.EventArgs)">
      <summary>Raises the <see cref="E:System.Windows.Forms.Control.DragLeave" /> event.</summary>
      <param name="e">A <see cref="T:System.EventArgs" /> that contains the event data. </param>
    </member>
    <member name="M:System.Windows.Forms.Control.System#Windows#Forms#IDropTarget#OnDragOver(System.Windows.Forms.DragEventArgs)">
      <summary>Raises the <see cref="E:System.Windows.Forms.Control.DragOver" /> event.</summary>
      <param name="drgEvent">A <see cref="T:System.Windows.Forms.DragEventArgs" /> that contains the event data. </param>
    </member>
    <member name="E:System.Windows.Forms.Control.SystemColorsChanged">
      <summary>Occurs when the system colors change.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="P:System.Windows.Forms.Control.TabIndex">
      <summary>Gets or sets the tab order of the control within its container.</summary>
      <returns>The index value of the control within the set of controls within its container. The controls in the container are included in the tab order.</returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="E:System.Windows.Forms.Control.TabIndexChanged">
      <summary>Occurs when the <see cref="P:System.Windows.Forms.Control.TabIndex" /> property value changes.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="P:System.Windows.Forms.Control.TabStop">
      <summary>Gets or sets a value indicating whether the user can give the focus to this control using the TAB key.</summary>
      <returns>true if the user can give the focus to the control using the TAB key; otherwise, false. The default is true.NoteThis property will always return true for an instance of the <see cref="T:System.Windows.Forms.Form" /> class.</returns>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
        <IPermission class="System.Diagnostics.PerformanceCounterPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="E:System.Windows.Forms.Control.TabStopChanged">
      <summary>Occurs when the <see cref="P:System.Windows.Forms.Control.TabStop" /> property value changes.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="P:System.Windows.Forms.Control.Tag">
      <summary>Gets or sets the object that contains data about the control.</summary>
      <returns>An <see cref="T:System.Object" /> that contains data about the control. The default is null.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.Windows.Forms.Control.Text">
      <summary>Gets or sets the text associated with this control.</summary>
      <returns>The text associated with this control.</returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="E:System.Windows.Forms.Control.TextChanged">
      <summary>Occurs when the <see cref="P:System.Windows.Forms.Control.Text" /> property value changes.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="P:System.Windows.Forms.Control.Top">
      <summary>Gets or sets the distance, in pixels, between the top edge of the control and the top edge of its container's client area.</summary>
      <returns>An <see cref="T:System.Int32" /> representing the distance, in pixels, between the bottom edge of the control and the top edge of its container's client area.</returns>
      <filterpriority>2</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
        <IPermission class="System.Diagnostics.PerformanceCounterPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="P:System.Windows.Forms.Control.TopLevelControl">
      <summary>Gets the parent control that is not parented by another Windows Forms control. Typically, this is the outermost <see cref="T:System.Windows.Forms.Form" /> that the control is contained in.</summary>
      <returns>The <see cref="T:System.Windows.Forms.Control" /> that represents the top-level control that contains the current control.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Windows.Forms.Control.Update">
      <summary>Causes the control to redraw the invalidated regions within its client area.</summary>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
        <IPermission class="System.Diagnostics.PerformanceCounterPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:System.Windows.Forms.Control.UpdateBounds">
      <summary>Updates the bounds of the control with the current size and location.</summary>
    </member>
    <member name="M:System.Windows.Forms.Control.UpdateBounds(System.Int32,System.Int32,System.Int32,System.Int32)">
      <summary>Updates the bounds of the control with the specified size and location.</summary>
      <param name="x">The <see cref="P:System.Drawing.Point.X" /> coordinate of the control. </param>
      <param name="y">The <see cref="P:System.Drawing.Point.Y" /> coordinate of the control. </param>
      <param name="width">The <see cref="P:System.Drawing.Size.Width" /> of the control. </param>
      <param name="height">The <see cref="P:System.Drawing.Size.Height" /> of the control. </param>
    </member>
    <member name="M:System.Windows.Forms.Control.UpdateBounds(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
      <summary>Updates the bounds of the control with the specified size, location, and client size.</summary>
      <param name="x">The <see cref="P:System.Drawing.Point.X" /> coordinate of the control. </param>
      <param name="y">The <see cref="P:System.Drawing.Point.Y" /> coordinate of the control. </param>
      <param name="width">The <see cref="P:System.Drawing.Size.Width" /> of the control. </param>
      <param name="height">The <see cref="P:System.Drawing.Size.Height" /> of the control. </param>
      <param name="clientWidth">The client <see cref="P:System.Drawing.Size.Width" /> of the control. </param>
      <param name="clientHeight">The client <see cref="P:System.Drawing.Size.Height" /> of the control. </param>
    </member>
    <member name="M:System.Windows.Forms.Control.UpdateStyles">
      <summary>Forces the assigned styles to be reapplied to the control.</summary>
    </member>
    <member name="M:System.Windows.Forms.Control.UpdateZOrder">
      <summary>Updates the control in its parent's z-order.</summary>
    </member>
    <member name="P:System.Windows.Forms.Control.UseWaitCursor">
      <summary>Gets or sets a value indicating whether to use the wait cursor for the current control and all child controls.</summary>
      <returns>true to use the wait cursor for the current control and all child controls; otherwise, false. The default is false.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="E:System.Windows.Forms.Control.Validated">
      <summary>Occurs when the control is finished validating.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="E:System.Windows.Forms.Control.Validating">
      <summary>Occurs when the control is validating.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="P:System.Windows.Forms.Control.Visible">
      <summary>Gets or sets a value indicating whether the control and all its child controls are displayed.</summary>
      <returns>true if the control and all its child controls are displayed; otherwise, false. The default is true.</returns>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
        <IPermission class="System.Diagnostics.PerformanceCounterPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="E:System.Windows.Forms.Control.VisibleChanged">
      <summary>Occurs when the <see cref="P:System.Windows.Forms.Control.Visible" /> property value changes.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="P:System.Windows.Forms.Control.Width">
      <summary>Gets or sets the width of the control.</summary>
      <returns>The width of the control in pixels.</returns>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
        <IPermission class="System.Diagnostics.PerformanceCounterPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="P:System.Windows.Forms.Control.WindowTarget">
      <summary>This property is not relevant for this class.</summary>
      <returns>An <see cref="T:System.Windows.Forms.IWindowTarget" />.</returns>
      <filterpriority>2</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="M:System.Windows.Forms.Control.WndProc(System.Windows.Forms.Message@)">
      <summary>Processes Windows messages.</summary>
      <param name="m">The Windows <see cref="T:System.Windows.Forms.Message" /> to process. </param>
    </member>
    <member name="T:System.Windows.Forms.Control.ControlAccessibleObject">
      <summary>Provides information about a control that can be used by an accessibility application.</summary>
    </member>
    <member name="M:System.Windows.Forms.Control.ControlAccessibleObject.#ctor(System.Windows.Forms.Control)">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Forms.Control.ControlAccessibleObject" /> class.</summary>
      <param name="ownerControl">The <see cref="T:System.Windows.Forms.Control" /> that owns the <see cref="T:System.Windows.Forms.Control.ControlAccessibleObject" />. </param>
      <exception cref="T:System.ArgumentNullException">The <paramref name="ownerControl" /> parameter value is null. </exception>
    </member>
    <member name="P:System.Windows.Forms.Control.ControlAccessibleObject.DefaultAction">
      <returns>A description of the default action for an object, or null if this object has no default action.</returns>
    </member>
    <member name="P:System.Windows.Forms.Control.ControlAccessibleObject.Description">
      <summary>Gets the description of the <see cref="T:System.Windows.Forms.Control.ControlAccessibleObject" />.</summary>
      <returns>A string describing the <see cref="T:System.Windows.Forms.Control.ControlAccessibleObject" />.</returns>
    </member>
    <member name="M:System.Windows.Forms.Control.ControlAccessibleObject.GetHelpTopic(System.String@)">
      <summary>Gets an identifier for a Help topic and the path to the Help file associated with this accessible object.</summary>
      <returns>An identifier for a Help topic, or -1 if there is no Help topic. On return, the <paramref name="fileName" /> parameter will contain the path to the Help file associated with this accessible object, or null if there is no IAccessible interface specified.</returns>
      <param name="fileName">When this method returns, contains a string that represents the path to the Help file associated with this accessible object. This parameter is passed uninitialized. </param>
    </member>
    <member name="P:System.Windows.Forms.Control.ControlAccessibleObject.Handle">
      <summary>Gets or sets the handle of the accessible object.</summary>
      <returns>An <see cref="T:System.IntPtr" /> that represents the handle of the control.</returns>
    </member>
    <member name="P:System.Windows.Forms.Control.ControlAccessibleObject.Help">
      <summary>Gets the description of what the object does or how the object is used.</summary>
      <returns>The description of what the object does or how the object is used.</returns>
    </member>
    <member name="P:System.Windows.Forms.Control.ControlAccessibleObject.KeyboardShortcut">
      <summary>Gets the object shortcut key or access key for an accessible object.</summary>
      <returns>The object shortcut key or access key for an accessible object, or null if there is no shortcut key associated with the object.</returns>
    </member>
    <member name="P:System.Windows.Forms.Control.ControlAccessibleObject.Name">
      <summary>Gets or sets the accessible object name.</summary>
      <returns>The accessible object name.</returns>
    </member>
    <member name="M:System.Windows.Forms.Control.ControlAccessibleObject.NotifyClients(System.Windows.Forms.AccessibleEvents)">
      <summary>Notifies accessibility client applications of the specified <see cref="T:System.Windows.Forms.AccessibleEvents" />.</summary>
      <param name="accEvent">The <see cref="T:System.Windows.Forms.AccessibleEvents" /> to notify the accessibility client applications of. </param>
    </member>
    <member name="M:System.Windows.Forms.Control.ControlAccessibleObject.NotifyClients(System.Windows.Forms.AccessibleEvents,System.Int32)">
      <summary>Notifies the accessibility client applications of the specified <see cref="T:System.Windows.Forms.AccessibleEvents" /> for the specified child control.</summary>
      <param name="accEvent">The <see cref="T:System.Windows.Forms.AccessibleEvents" /> to notify the accessibility client applications of. </param>
      <param name="childID">The child <see cref="T:System.Windows.Forms.Control" /> to notify of the accessible event. </param>
    </member>
    <member name="M:System.Windows.Forms.Control.ControlAccessibleObject.NotifyClients(System.Windows.Forms.AccessibleEvents,System.Int32,System.Int32)">
      <summary>Notifies the accessibility client applications of the specified <see cref="T:System.Windows.Forms.AccessibleEvents" /> for the specified child control, giving the identification of the <see cref="T:System.Windows.Forms.AccessibleObject" />.</summary>
      <param name="accEvent">The <see cref="T:System.Windows.Forms.AccessibleEvents" /> to notify the accessibility client applications of.</param>
      <param name="objectID">The identifier of the <see cref="T:System.Windows.Forms.AccessibleObject" />.</param>
      <param name="childID">The child <see cref="T:System.Windows.Forms.Control" /> to notify of the accessible event.</param>
    </member>
    <member name="P:System.Windows.Forms.Control.ControlAccessibleObject.Owner">
      <summary>Gets the owner of the accessible object.</summary>
      <returns>The <see cref="T:System.Windows.Forms.Control" /> that owns the <see cref="T:System.Windows.Forms.Control.ControlAccessibleObject" />.</returns>
    </member>
    <member name="P:System.Windows.Forms.Control.ControlAccessibleObject.Parent">
      <returns>An <see cref="T:System.Windows.Forms.AccessibleObject" /> that represents the parent of an accessible object, or null if there is no parent object.</returns>
    </member>
    <member name="P:System.Windows.Forms.Control.ControlAccessibleObject.Role">
      <summary>Gets the role of this accessible object.</summary>
      <returns>One of the <see cref="T:System.Windows.Forms.AccessibleRole" /> values.</returns>
    </member>
    <member name="M:System.Windows.Forms.Control.ControlAccessibleObject.ToString">
      <returns>A <see cref="T:System.String" /> that represents the current <see cref="T:System.Object" />.</returns>
    </member>
    <member name="T:System.Windows.Forms.Control.ControlCollection">
      <summary>Represents a collection of <see cref="T:System.Windows.Forms.Control" /> objects.</summary>
    </member>
    <member name="M:System.Windows.Forms.Control.ControlCollection.#ctor(System.Windows.Forms.Control)">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Forms.Control.ControlCollection" /> class.</summary>
      <param name="owner">A <see cref="T:System.Windows.Forms.Control" /> representing the control that owns the control collection. </param>
    </member>
    <member name="M:System.Windows.Forms.Control.ControlCollection.Add(System.Windows.Forms.Control)">
      <summary>Adds the specified control to the control collection.</summary>
      <param name="value">The <see cref="T:System.Windows.Forms.Control" /> to add to the control collection. </param>
      <exception cref="T:System.Exception">The specified control is a top-level control, or a circular control reference would result if this control were added to the control collection. </exception>
      <exception cref="T:System.ArgumentException">The object assigned to the <paramref name="value" /> parameter is not a <see cref="T:System.Windows.Forms.Control" />. </exception>
    </member>
    <member name="M:System.Windows.Forms.Control.ControlCollection.AddRange(System.Windows.Forms.Control[])">
      <summary>Adds an array of control objects to the collection.</summary>
      <param name="controls">An array of <see cref="T:System.Windows.Forms.Control" /> objects to add to the collection. </param>
    </member>
    <member name="M:System.Windows.Forms.Control.ControlCollection.Clear">
      <summary>Removes all controls from the collection.</summary>
    </member>
    <member name="M:System.Windows.Forms.Control.ControlCollection.Contains(System.Windows.Forms.Control)">
      <summary>Determines whether the specified control is a member of the collection.</summary>
      <returns>true if the <see cref="T:System.Windows.Forms.Control" /> is a member of the collection; otherwise, false.</returns>
      <param name="control">The <see cref="T:System.Windows.Forms.Control" /> to locate in the collection. </param>
    </member>
    <member name="M:System.Windows.Forms.Control.ControlCollection.ContainsKey(System.String)">
      <summary>Determines whether the <see cref="T:System.Windows.Forms.Control.ControlCollection" /> contains an item with the specified key.</summary>
      <returns>true if the <see cref="T:System.Windows.Forms.Control.ControlCollection" /> contains an item with the specified key; otherwise, false.</returns>
      <param name="key">The key to locate in the <see cref="T:System.Windows.Forms.Control.ControlCollection" />. </param>
    </member>
    <member name="M:System.Windows.Forms.Control.ControlCollection.Find(System.String,System.Boolean)">
      <summary>Searches for controls by their <see cref="P:System.Windows.Forms.Control.Name" /> property and builds an array of all the controls that match.</summary>
      <returns>An array of type <see cref="T:System.Windows.Forms.Control" /> containing the matching controls.</returns>
      <param name="key">The key to locate in the <see cref="T:System.Windows.Forms.Control.ControlCollection" />. </param>
      <param name="searchAllChildren">true to search all child controls; otherwise, false. </param>
      <exception cref="T:System.ArgumentException">The <paramref name="key" /> parameter is null or the empty string (""). </exception>
    </member>
    <member name="M:System.Windows.Forms.Control.ControlCollection.GetChildIndex(System.Windows.Forms.Control)">
      <summary>Retrieves the index of the specified child control within the control collection.</summary>
      <returns>A zero-based index value that represents the location of the specified child control within the control collection.</returns>
      <param name="child">The <see cref="T:System.Windows.Forms.Control" /> to search for in the control collection. </param>
      <exception cref="T:System.ArgumentException">The <paramref name="child" /><see cref="T:System.Windows.Forms.Control" /> is not in the <see cref="T:System.Windows.Forms.Control.ControlCollection" />. </exception>
    </member>
    <member name="M:System.Windows.Forms.Control.ControlCollection.GetChildIndex(System.Windows.Forms.Control,System.Boolean)">
      <summary>Retrieves the index of the specified child control within the control collection, and optionally raises an exception if the specified control is not within the control collection.</summary>
      <returns>A zero-based index value that represents the location of the specified child control within the control collection; otherwise -1 if the specified <see cref="T:System.Windows.Forms.Control" /> is not found in the <see cref="T:System.Windows.Forms.Control.ControlCollection" />.</returns>
      <param name="child">The <see cref="T:System.Windows.Forms.Control" /> to search for in the control collection. </param>
      <param name="throwException">true to throw an exception if the <see cref="T:System.Windows.Forms.Control" /> specified in the <paramref name="child" /> parameter is not a control in the <see cref="T:System.Windows.Forms.Control.ControlCollection" />; otherwise, false. </param>
      <exception cref="T:System.ArgumentException">The <paramref name="child" /><see cref="T:System.Windows.Forms.Control" /> is not in the <see cref="T:System.Windows.Forms.Control.ControlCollection" />, and the <paramref name="throwException" /> parameter value is true. </exception>
    </member>
    <member name="M:System.Windows.Forms.Control.ControlCollection.GetEnumerator">
      <summary>Retrieves a reference to an enumerator object that is used to iterate over a <see cref="T:System.Windows.Forms.Control.ControlCollection" />.</summary>
      <returns>An <see cref="T:System.Collections.IEnumerator" />.</returns>
    </member>
    <member name="M:System.Windows.Forms.Control.ControlCollection.IndexOf(System.Windows.Forms.Control)">
      <summary>Retrieves the index of the specified control in the control collection.</summary>
      <returns>A zero-based index value that represents the position of the specified <see cref="T:System.Windows.Forms.Control" /> in the <see cref="T:System.Windows.Forms.Control.ControlCollection" />.</returns>
      <param name="control">The <see cref="T:System.Windows.Forms.Control" /> to locate in the collection. </param>
    </member>
    <member name="M:System.Windows.Forms.Control.ControlCollection.IndexOfKey(System.String)">
      <summary>Retrieves the index of the first occurrence of the specified item within the collection.</summary>
      <returns>The zero-based index of the first occurrence of the control with the specified name in the collection.</returns>
      <param name="key">The name of the control to search for. </param>
    </member>
    <member name="P:System.Windows.Forms.Control.ControlCollection.Item(System.Int32)">
      <summary>Indicates the <see cref="T:System.Windows.Forms.Control" /> at the specified indexed location in the collection.</summary>
      <returns>The <see cref="T:System.Windows.Forms.Control" /> located at the specified index location within the control collection.</returns>
      <param name="index">The index of the control to retrieve from the control collection. </param>
      <exception cref="T:System.ArgumentOutOfRangeException">The <paramref name="index" /> value is less than zero or is greater than or equal to the number of controls in the collection. </exception>
    </member>
    <member name="P:System.Windows.Forms.Control.ControlCollection.Item(System.String)">
      <summary>Indicates a <see cref="T:System.Windows.Forms.Control" /> with the specified key in the collection.</summary>
      <returns>The <see cref="T:System.Windows.Forms.Control" /> with the specified key within the <see cref="T:System.Windows.Forms.Control.ControlCollection" />.</returns>
      <param name="key">The name of the control to retrieve from the control collection.</param>
    </member>
    <member name="P:System.Windows.Forms.Control.ControlCollection.Owner">
      <summary>Gets the control that owns this <see cref="T:System.Windows.Forms.Control.ControlCollection" />.</summary>
      <returns>The <see cref="T:System.Windows.Forms.Control" /> that owns this <see cref="T:System.Windows.Forms.Control.ControlCollection" />.</returns>
    </member>
    <member name="M:System.Windows.Forms.Control.ControlCollection.Remove(System.Windows.Forms.Control)">
      <summary>Removes the specified control from the control collection.</summary>
      <param name="value">The <see cref="T:System.Windows.Forms.Control" /> to remove from the <see cref="T:System.Windows.Forms.Control.ControlCollection" />. </param>
    </member>
    <member name="M:System.Windows.Forms.Control.ControlCollection.RemoveAt(System.Int32)">
      <summary>Removes a control from the control collection at the specified indexed location.</summary>
      <param name="index">The index value of the <see cref="T:System.Windows.Forms.Control" /> to remove. </param>
    </member>
    <member name="M:System.Windows.Forms.Control.ControlCollection.RemoveByKey(System.String)">
      <summary>Removes the child control with the specified key.</summary>
      <param name="key">The name of the child control to remove. </param>
    </member>
    <member name="M:System.Windows.Forms.Control.ControlCollection.SetChildIndex(System.Windows.Forms.Control,System.Int32)">
      <summary>Sets the index of the specified child control in the collection to the specified index value.</summary>
      <param name="child">The <paramref name="child" /><see cref="T:System.Windows.Forms.Control" /> to search for. </param>
      <param name="newIndex">The new index value of the control. </param>
      <exception cref="T:System.ArgumentException">The <paramref name="child" /> control is not in the <see cref="T:System.Windows.Forms.Control.ControlCollection" />. </exception>
    </member>
    <member name="M:System.Windows.Forms.Control.ControlCollection.System#Collections#IList#Add(System.Object)">
      <summary>For a description of this member, see <see cref="M:System.Collections.IList.Add(System.Object)" />.</summary>
    </member>
    <member name="M:System.Windows.Forms.Control.ControlCollection.System#Collections#IList#Remove(System.Object)">
      <summary>For a description of this member, see <see cref="M:System.Collections.IList.Remove(System.Object)" />.</summary>
    </member>
    <member name="M:System.Windows.Forms.Control.ControlCollection.System#ICloneable#Clone">
      <summary>For a description of this member, see <see cref="M:System.ICloneable.Clone" />.</summary>
    </member>
    <member name="T:System.Windows.Forms.ControlBindingsCollection">
      <summary>Represents the collection of data bindings for a control.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Windows.Forms.ControlBindingsCollection.#ctor(System.Windows.Forms.IBindableComponent)">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Forms.ControlBindingsCollection" /> class with the specified bindable control.</summary>
      <param name="control">The <see cref="T:System.Windows.Forms.IBindableComponent" /> the binding collection belongs to.</param>
    </member>
    <member name="M:System.Windows.Forms.ControlBindingsCollection.Add(System.String,System.Object,System.String)">
      <summary>Creates a <see cref="T:System.Windows.Forms.Binding" /> using the specified control property name, data source, and data member, and adds it to the collection.</summary>
      <returns>The newly created <see cref="T:System.Windows.Forms.Binding" />.</returns>
      <param name="propertyName">The name of the control property to bind. </param>
      <param name="dataSource">An <see cref="T:System.Object" /> that represents the data source. </param>
      <param name="dataMember">The property or list to bind to. </param>
      <exception cref="T:System.ArgumentNullException">The <paramref name="binding" /> is null. </exception>
      <exception cref="T:System.Exception">The <paramref name="propertyName" /> is already data-bound. </exception>
      <exception cref="T:System.Exception">The <paramref name="dataMember" /> doesn't specify a valid member of the <paramref name="dataSource" />. </exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Windows.Forms.ControlBindingsCollection.Add(System.String,System.Object,System.String,System.Boolean)">
      <summary>Creates a binding with the specified control property name, data source, data member, and information about whether formatting is enabled, and adds the binding to the collection.</summary>
      <returns>The newly created <see cref="T:System.Windows.Forms.Binding" />.</returns>
      <param name="propertyName">The name of the control property to bind.</param>
      <param name="dataSource">An <see cref="T:System.Object" /> representing the data source. </param>
      <param name="dataMember">The property or list to bind to.</param>
      <param name="formattingEnabled">true to format the displayed data; otherwise, false</param>
      <exception cref="T:System.ArgumentException">The property given by <paramref name="propertyName" /> does not exist on the control.-or-The property given is a read-only property.</exception>
      <exception cref="T:System.Exception">If formatting is disabled and the <paramref name="propertyName" /> is neither a valid property of a control nor an empty string (""). </exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Windows.Forms.ControlBindingsCollection.Add(System.String,System.Object,System.String,System.Boolean,System.Windows.Forms.DataSourceUpdateMode)">
      <summary>Creates a binding that binds the specified control property to the specified data member of the specified data source, optionally enabling formatting, propagating values to the data source based on the specified update setting, and adding the binding to the collection.</summary>
      <returns>The newly created <see cref="T:System.Windows.Forms.Binding" />.</returns>
      <param name="propertyName">The name of the control property to bind. </param>
      <param name="dataSource">An <see cref="T:System.Object" /> representing the data source. </param>
      <param name="dataMember">The property or list to bind to.</param>
      <param name="formattingEnabled">true to format the displayed data; otherwise, false.</param>
      <param name="updateMode">One of the <see cref="T:System.Windows.Forms.DataSourceUpdateMode" /> values.</param>
      <exception cref="T:System.ArgumentException">The property given by <paramref name="propertyName" /> does not exist on the control or is read-only.-or-The specified data member does not exist on the data source.-or-The data source, data member, or control property specified are associated with another binding in the collection.</exception>
    </member>
    <member name="M:System.Windows.Forms.ControlBindingsCollection.Add(System.String,System.Object,System.String,System.Boolean,System.Windows.Forms.DataSourceUpdateMode,System.Object)">
      <summary>Creates a binding that binds the specified control property to the specified data member of the specified data source, optionally enabling formatting, propagating values to the data source based on the specified update setting, setting the property to the specified value when <see cref="T:System.DBNull" /> is returned from the data source, and adding the binding to the collection.</summary>
      <returns>The newly created <see cref="T:System.Windows.Forms.Binding" /></returns>
      <param name="propertyName">The name of the control property to bind. </param>
      <param name="dataSource">An <see cref="T:System.Object" /> representing the data source. </param>
      <param name="dataMember">The property or list to bind to.</param>
      <param name="formattingEnabled">true to format the displayed data; otherwise, false.</param>
      <param name="updateMode">One of the <see cref="T:System.Windows.Forms.DataSourceUpdateMode" /> values.</param>
      <param name="nullValue">The <see cref="T:System.Object" /> to be applied to the bound control property if the data source value is <see cref="T:System.DBNull" />.</param>
      <exception cref="T:System.ArgumentException">The property given by <paramref name="propertyName" /> does not exist on the control or is read-only.-or-The specified data member does not exist on the data source.-or-The data source, data member, or control property specified are associated with another binding in the collection.</exception>
    </member>
    <member name="M:System.Windows.Forms.ControlBindingsCollection.Add(System.String,System.Object,System.String,System.Boolean,System.Windows.Forms.DataSourceUpdateMode,System.Object,System.String)">
      <summary>Creates a binding that binds the specified control property to the specified data member of the specified data source, optionally enabling formatting with the specified format string, propagating values to the data source based on the specified update setting, setting the property to the specified value when <see cref="T:System.DBNull" /> is returned from the data source, and adding the binding to the collection.</summary>
      <returns>The newly created <see cref="T:System.Windows.Forms.Binding" /></returns>
      <param name="propertyName">The name of the control property to bind. </param>
      <param name="dataSource">An <see cref="T:System.Object" /> representing the data source. </param>
      <param name="dataMember">The property or list to bind to.</param>
      <param name="formattingEnabled">true to format the displayed data; otherwise, false.</param>
      <param name="updateMode">One of the <see cref="T:System.Windows.Forms.DataSourceUpdateMode" /> values.</param>
      <param name="nullValue">The <see cref="T:System.Object" /> to be applied to the bound control property if the data source value is <see cref="T:System.DBNull" />.</param>
      <param name="formatString">One or more format specifier characters that indicate how a value is to be displayed.</param>
      <exception cref="T:System.ArgumentException">The property given by <paramref name="propertyName" /> does not exist on the control or is read-only.-or-The specified data member does not exist on the data source.-or-The data source, data member, or control property specified are associated with another binding in the collection.</exception>
    </member>
    <member name="M:System.Windows.Forms.ControlBindingsCollection.Add(System.String,System.Object,System.String,System.Boolean,System.Windows.Forms.DataSourceUpdateMode,System.Object,System.String,System.IFormatProvider)">
      <summary>Creates a binding that binds the specified control property to the specified data member of the specified data source, optionally enabling formatting with the specified format string, propagating values to the data source based on the specified update setting, setting the property to the specified value when <see cref="T:System.DBNull" /> is returned from the data source, setting the specified format provider, and adding the binding to the collection.</summary>
      <returns>The newly created <see cref="T:System.Windows.Forms.Binding" />.</returns>
      <param name="propertyName">The name of the control property to bind. </param>
      <param name="dataSource">An <see cref="T:System.Object" /> representing the data source. </param>
      <param name="dataMember">The property or list to bind to.</param>
      <param name="formattingEnabled">true to format the displayed data; otherwise, false.</param>
      <param name="updateMode">One of the <see cref="T:System.Windows.Forms.DataSourceUpdateMode" /> values.</param>
      <param name="nullValue">The <see cref="T:System.Object" /> to be applied to the bound control property if the data source value is <see cref="T:System.DBNull" />.</param>
      <param name="formatString">One or more format specifier characters that indicate how a value is to be displayed</param>
      <param name="formatInfo">An implementation of <see cref="T:System.IFormatProvider" /> to override default formatting behavior.</param>
      <exception cref="T:System.ArgumentException">The property given by <paramref name="propertyName" /> does not exist on the control or is read-only.-or-The specified data member does not exist on the data source.-or-The data source, data member, or control property specified are associated with another binding in the collection.</exception>
    </member>
    <member name="M:System.Windows.Forms.ControlBindingsCollection.Add(System.Windows.Forms.Binding)">
      <summary>Adds the specified <see cref="T:System.Windows.Forms.Binding" /> to the collection.</summary>
      <param name="binding">The <see cref="T:System.Windows.Forms.Binding" /> to add. </param>
      <exception cref="T:System.ArgumentNullException">The <paramref name="binding" /> is null. </exception>
      <exception cref="T:System.ArgumentException">The control property is already data-bound. </exception>
      <exception cref="T:System.ArgumentException">The <see cref="T:System.Windows.Forms.Binding" /> does not specify a valid column of the <see cref="P:System.Windows.Forms.Binding.DataSource" />. </exception>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:System.Windows.Forms.ControlBindingsCollection.AddCore(System.Windows.Forms.Binding)">
      <summary>Adds a binding to the collection.</summary>
      <param name="dataBinding">The <see cref="T:System.Windows.Forms.Binding" /> to add. </param>
    </member>
    <member name="P:System.Windows.Forms.ControlBindingsCollection.BindableComponent">
      <summary>Gets the <see cref="T:System.Windows.Forms.IBindableComponent" /> the binding collection belongs to.</summary>
      <returns>The <see cref="T:System.Windows.Forms.IBindableComponent" /> the binding collection belongs to.</returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Windows.Forms.ControlBindingsCollection.Clear">
      <summary>Clears the collection of any bindings.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Windows.Forms.ControlBindingsCollection.ClearCore">
      <summary>Clears the bindings in the collection.</summary>
    </member>
    <member name="P:System.Windows.Forms.ControlBindingsCollection.Control">
      <summary>Gets the control that the collection belongs to.</summary>
      <returns>The <see cref="T:System.Windows.Forms.Control" /> that the collection belongs to.</returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="P:System.Windows.Forms.ControlBindingsCollection.DefaultDataSourceUpdateMode">
      <summary>Gets or sets the default <see cref="P:System.Windows.Forms.Binding.DataSourceUpdateMode" /> for a <see cref="T:System.Windows.Forms.Binding" /> in the collection.</summary>
      <returns>One of the <see cref="T:System.Windows.Forms.DataSourceUpdateMode" /> values.</returns>
    </member>
    <member name="P:System.Windows.Forms.ControlBindingsCollection.Item(System.String)">
      <summary>Gets the <see cref="T:System.Windows.Forms.Binding" /> specified by the control's property name.</summary>
      <returns>The <see cref="T:System.Windows.Forms.Binding" /> that binds the specified control property to a data source.</returns>
      <param name="propertyName">The name of the property on the data-bound control. </param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Windows.Forms.ControlBindingsCollection.Remove(System.Windows.Forms.Binding)">
      <summary>Deletes the specified <see cref="T:System.Windows.Forms.Binding" /> from the collection.</summary>
      <param name="binding">The <see cref="T:System.Windows.Forms.Binding" /> to remove. </param>
      <exception cref="T:System.NullReferenceException">The <paramref name="binding" /> is null. </exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Windows.Forms.ControlBindingsCollection.RemoveAt(System.Int32)">
      <summary>Deletes the <see cref="T:System.Windows.Forms.Binding" /> at the specified index.</summary>
      <param name="index">The zero-based index of the item to remove. </param>
      <exception cref="T:System.ArgumentOutOfRangeException">The <paramref name="index" /> value is less than 0, or it is greater than the number of bindings in the collection. </exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Windows.Forms.ControlBindingsCollection.RemoveCore(System.Windows.Forms.Binding)">
      <summary>Removes the specified binding from the collection.</summary>
      <param name="dataBinding">The <see cref="T:System.Windows.Forms.Binding" /> to remove from the collection.</param>
      <exception cref="T:System.ArgumentException">The binding belongs to another <see cref="T:System.Windows.Forms.ControlBindingsCollection" />.</exception>
    </member>
    <member name="T:System.Windows.Forms.ControlEventArgs">
      <summary>Provides data for the <see cref="E:System.Windows.Forms.Control.ControlAdded" /> and <see cref="E:System.Windows.Forms.Control.ControlRemoved" /> events.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Windows.Forms.ControlEventArgs.#ctor(System.Windows.Forms.Control)">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Forms.ControlEventArgs" /> class for the specified control.</summary>
      <param name="control">The <see cref="T:System.Windows.Forms.Control" /> to store in this event. </param>
    </member>
    <member name="P:System.Windows.Forms.ControlEventArgs.Control">
      <summary>Gets the control object used by this event.</summary>
      <returns>The <see cref="T:System.Windows.Forms.Control" /> used by this event.</returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="T:System.Windows.Forms.ControlEventHandler">
      <summary>Represents the method that will handle the <see cref="E:System.Windows.Forms.Control.ControlAdded" /> and <see cref="E:System.Windows.Forms.Control.ControlRemoved" /> events of the <see cref="T:System.Windows.Forms.Control" /> class. </summary>
      <param name="sender">The source of the event. </param>
      <param name="e">A <see cref="T:System.Windows.Forms.ControlEventArgs" /> that contains the event data. </param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="T:System.Windows.Forms.ControlPaint">
      <summary>Provides methods used to paint common Windows controls and their elements. This class cannot be inherited.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.Windows.Forms.ControlPaint.ContrastControlDark">
      <summary>Gets the color to use as the <see cref="P:System.Drawing.SystemColors.ControlDark" /> color.</summary>
      <returns>The <see cref="T:System.Drawing.Color" /> to use as the <see cref="P:System.Drawing.SystemColors.ControlDark" /> color.</returns>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:System.Windows.Forms.ControlPaint.CreateHBitmap16Bit(System.Drawing.Bitmap,System.Drawing.Color)">
      <summary>Creates a 16-bit color bitmap.</summary>
      <returns>An <see cref="T:System.IntPtr" /> representing the handle to the bitmap.</returns>
      <param name="bitmap">The <see cref="T:System.Drawing.Bitmap" /> to create.</param>
      <param name="background">The <see cref="T:System.Drawing.Color" /> of the background.</param>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="M:System.Windows.Forms.ControlPaint.CreateHBitmapColorMask(System.Drawing.Bitmap,System.IntPtr)">
      <summary>Creates a Win32 HBITMAP out of the image. </summary>
      <returns>An <see cref="T:System.IntPtr" /> representing the handle to the bitmap.</returns>
      <param name="bitmap">The <see cref="T:System.Drawing.Bitmap" /> to create.</param>
      <param name="monochromeMask">A pointer to the monochrome mask.</param>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="M:System.Windows.Forms.ControlPaint.CreateHBitmapTransparencyMask(System.Drawing.Bitmap)">
      <summary>Creates a color mask for the specified bitmap that indicates which color should be displayed as transparent.</summary>
      <returns>The handle to the <see cref="T:System.Drawing.Bitmap" /> mask.</returns>
      <param name="bitmap">The <see cref="T:System.Drawing.Bitmap" /> to create the transparency mask for. </param>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="M:System.Windows.Forms.ControlPaint.Dark(System.Drawing.Color)">
      <summary>Creates a new dark color object for the control from the specified color.</summary>
      <returns>A <see cref="T:System.Drawing.Color" /> that represents the dark color on the control.</returns>
      <param name="baseColor">The <see cref="T:System.Drawing.Color" /> to be darkened. </param>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:System.Windows.Forms.ControlPaint.Dark(System.Drawing.Color,System.Single)">
      <summary>Creates a new dark color object for the control from the specified color and darkens it by the specified percentage.</summary>
      <returns>A <see cref="T:System.Drawing.Color" /> that represent the dark color on the control.</returns>
      <param name="baseColor">The <see cref="T:System.Drawing.Color" /> to be darkened. </param>
      <param name="percOfDarkDark">The percentage to darken the specified <see cref="T:System.Drawing.Color" />. </param>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:System.Windows.Forms.ControlPaint.DarkDark(System.Drawing.Color)">
      <summary>Creates a new dark color object for the control from the specified color.</summary>
      <returns>A <see cref="T:System.Drawing.Color" /> that represents the dark color on the control.</returns>
      <param name="baseColor">The <see cref="T:System.Drawing.Color" /> to be darkened. </param>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:System.Windows.Forms.ControlPaint.DrawBorder(System.Drawing.Graphics,System.Drawing.Rectangle,System.Drawing.Color,System.Int32,System.Windows.Forms.ButtonBorderStyle,System.Drawing.Color,System.Int32,System.Windows.Forms.ButtonBorderStyle,System.Drawing.Color,System.Int32,System.Windows.Forms.ButtonBorderStyle,System.Drawing.Color,System.Int32,System.Windows.Forms.ButtonBorderStyle)">
      <summary>Draws a border on a button-style control with the specified styles, colors, and border widths; on the specified graphics surface; and within the specified bounds.</summary>
      <param name="graphics">The <see cref="T:System.Drawing.Graphics" /> to draw on. </param>
      <param name="bounds">The <see cref="T:System.Drawing.Rectangle" /> that represents the dimensions of the border. </param>
      <param name="leftColor">The <see cref="T:System.Drawing.Color" /> of the left of the border. </param>
      <param name="leftWidth">The width of the left border. </param>
      <param name="leftStyle">One of the <see cref="T:System.Windows.Forms.ButtonBorderStyle" /> values that specifies the style of the left border. </param>
      <param name="topColor">The <see cref="T:System.Drawing.Color" /> of the top of the border. </param>
      <param name="topWidth">The width of the top border. </param>
      <param name="topStyle">One of the <see cref="T:System.Windows.Forms.ButtonBorderStyle" /> values that specifies the style of the top border. </param>
      <param name="rightColor">The <see cref="T:System.Drawing.Color" /> of the right of the border. </param>
      <param name="rightWidth">The width of the right border. </param>
      <param name="rightStyle">One of the <see cref="T:System.Windows.Forms.ButtonBorderStyle" /> values that specifies the style of the right border. </param>
      <param name="bottomColor">The <see cref="T:System.Drawing.Color" /> of the bottom of the border. </param>
      <param name="bottomWidth">The width of the bottom border. </param>
      <param name="bottomStyle">One of the <see cref="T:System.Windows.Forms.ButtonBorderStyle" /> values that specifies the style of the bottom border. </param>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:System.Windows.Forms.ControlPaint.DrawBorder(System.Drawing.Graphics,System.Drawing.Rectangle,System.Drawing.Color,System.Windows.Forms.ButtonBorderStyle)">
      <summary>Draws a border with the specified style and color, on the specified graphics surface, and within the specified bounds on a button-style control.</summary>
      <param name="graphics">The <see cref="T:System.Drawing.Graphics" /> to draw on. </param>
      <param name="bounds">The <see cref="T:System.Drawing.Rectangle" /> that represents the dimensions of the border. </param>
      <param name="color">The <see cref="T:System.Drawing.Color" /> of the border. </param>
      <param name="style">One of the <see cref="T:System.Windows.Forms.ButtonBorderStyle" /> values that specifies the style of the border. </param>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:System.Windows.Forms.ControlPaint.DrawBorder3D(System.Drawing.Graphics,System.Drawing.Rectangle)">
      <summary>Draws a three-dimensional style border on the specified graphics surface and within the specified bounds on a control.</summary>
      <param name="graphics">The <see cref="T:System.Drawing.Graphics" /> to draw on. </param>
      <param name="rectangle">The <see cref="T:System.Drawing.Rectangle" /> that represents the dimensions of the border. </param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Windows.Forms.ControlPaint.DrawBorder3D(System.Drawing.Graphics,System.Drawing.Rectangle,System.Windows.Forms.Border3DStyle)">
      <summary>Draws a three-dimensional style border with the specified style, on the specified graphics surface, and within the specified bounds on a control.</summary>
      <param name="graphics">The <see cref="T:System.Drawing.Graphics" /> to draw on. </param>
      <param name="rectangle">The <see cref="T:System.Drawing.Rectangle" /> that represents the dimensions of the border. </param>
      <param name="style">One of the <see cref="T:System.Windows.Forms.Border3DStyle" /> values that specifies the style of the border. </param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Windows.Forms.ControlPaint.DrawBorder3D(System.Drawing.Graphics,System.Drawing.Rectangle,System.Windows.Forms.Border3DStyle,System.Windows.Forms.Border3DSide)">
      <summary>Draws a three-dimensional style border with the specified style, on the specified graphics surface and sides, and within the specified bounds on a control.</summary>
      <param name="graphics">The <see cref="T:System.Drawing.Graphics" /> to draw on. </param>
      <param name="rectangle">The <see cref="T:System.Drawing.Rectangle" /> that represents the dimensions of the border. </param>
      <param name="style">One of the <see cref="T:System.Windows.Forms.Border3DStyle" /> values that specifies the style of the border. </param>
      <param name="sides">One of the <see cref="T:System.Windows.Forms.Border3DSide" /> values that specifies the side of the rectangle to draw the border on. </param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Windows.Forms.ControlPaint.DrawBorder3D(System.Drawing.Graphics,System.Int32,System.Int32,System.Int32,System.Int32)">
      <summary>Draws a three-dimensional style border on the specified graphics surface and within the specified bounds on a control.</summary>
      <param name="graphics">The <see cref="T:System.Drawing.Graphics" /> to draw on. </param>
      <param name="x">The x-coordinate of the top left of the border rectangle. </param>
      <param name="y">The y-coordinate of the top left of the border rectangle. </param>
      <param name="width">The width of the border rectangle. </param>
      <param name="height">The height of the border rectangle. </param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Windows.Forms.ControlPaint.DrawBorder3D(System.Drawing.Graphics,System.Int32,System.Int32,System.Int32,System.Int32,System.Windows.Forms.Border3DStyle)">
      <summary>Draws a three-dimensional style border with the specified style, on the specified graphics surface, and within the specified bounds on a control.</summary>
      <param name="graphics">The <see cref="T:System.Drawing.Graphics" /> to draw on. </param>
      <param name="x">The x-coordinate of the top left of the border rectangle. </param>
      <param name="y">The y-coordinate of the top left of the border rectangle. </param>
      <param name="width">The width of the border rectangle. </param>
      <param name="height">The height of the border rectangle. </param>
      <param name="style">One of the <see cref="T:System.Windows.Forms.Border3DStyle" /> values that specifies the style of the border. </param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Windows.Forms.ControlPaint.DrawBorder3D(System.Drawing.Graphics,System.Int32,System.Int32,System.Int32,System.Int32,System.Windows.Forms.Border3DStyle,System.Windows.Forms.Border3DSide)">
      <summary>Draws a three-dimensional style border with the specified style, on the specified graphics surface and side, and within the specified bounds on a control.</summary>
      <param name="graphics">The <see cref="T:System.Drawing.Graphics" /> to draw on. </param>
      <param name="x">The x-coordinate of the top left of the border rectangle. </param>
      <param name="y">The y-coordinate of the top left of the border rectangle. </param>
      <param name="width">The width of the border rectangle. </param>
      <param name="height">The height of the border rectangle. </param>
      <param name="style">One of the <see cref="T:System.Windows.Forms.Border3DStyle" /> values that specifies the style of the border. </param>
      <param name="sides">The <see cref="T:System.Windows.Forms.Border3DSide" /> of the rectangle to draw the border on. </param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Windows.Forms.ControlPaint.DrawButton(System.Drawing.Graphics,System.Drawing.Rectangle,System.Windows.Forms.ButtonState)">
      <summary>Draws a button control in the specified state, on the specified graphics surface, and within the specified bounds.</summary>
      <param name="graphics">The <see cref="T:System.Drawing.Graphics" /> to draw on. </param>
      <param name="rectangle">The <see cref="T:System.Drawing.Rectangle" /> that represents the dimensions of the button. </param>
      <param name="state">A bitwise combination of the <see cref="T:System.Windows.Forms.ButtonState" /> values that specifies the state to draw the button in. </param>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:System.Windows.Forms.ControlPaint.DrawButton(System.Drawing.Graphics,System.Int32,System.Int32,System.Int32,System.Int32,System.Windows.Forms.ButtonState)">
      <summary>Draws a button control in the specified state, on the specified graphics surface, and within the specified bounds.</summary>
      <param name="graphics">The <see cref="T:System.Drawing.Graphics" /> to draw on. </param>
      <param name="x">The x-coordinate of the upper left corner of the drawing rectangle. </param>
      <param name="y">The y-coordinate of the upper left corner of the drawing rectangle. </param>
      <param name="width">The width of the button. </param>
      <param name="height">The height of the button. </param>
      <param name="state">A bitwise combination of the <see cref="T:System.Windows.Forms.ButtonState" /> values that specifies the state to draw the button in. </param>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:System.Windows.Forms.ControlPaint.DrawCaptionButton(System.Drawing.Graphics,System.Drawing.Rectangle,System.Windows.Forms.CaptionButton,System.Windows.Forms.ButtonState)">
      <summary>Draws the specified caption button control in the specified state, on the specified graphics surface, and within the specified bounds.</summary>
      <param name="graphics">The <see cref="T:System.Drawing.Graphics" /> to draw on. </param>
      <param name="rectangle">The <see cref="T:System.Drawing.Rectangle" /> that represents the dimensions of the caption button. </param>
      <param name="button">One of the <see cref="T:System.Windows.Forms.CaptionButton" /> values that specifies the type of caption button to draw. </param>
      <param name="state">A bitwise combination of the <see cref="T:System.Windows.Forms.ButtonState" /> values that specifies the state to draw the button in. </param>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:System.Windows.Forms.ControlPaint.DrawCaptionButton(System.Drawing.Graphics,System.Int32,System.Int32,System.Int32,System.Int32,System.Windows.Forms.CaptionButton,System.Windows.Forms.ButtonState)">
      <summary>Draws the specified caption button control in the specified state, on the specified graphics surface, and within the specified bounds.</summary>
      <param name="graphics">The <see cref="T:System.Drawing.Graphics" /> to draw on. </param>
      <param name="x">The x-coordinate of the top left of the drawing rectangle. </param>
      <param name="y">The y-coordinate of the top left of the drawing rectangle. </param>
      <param name="width">The width of the drawing rectangle. </param>
      <param name="height">The height of the drawing rectangle. </param>
      <param name="button">One of the <see cref="T:System.Windows.Forms.CaptionButton" /> values that specifies the type of caption button to draw. </param>
      <param name="state">A bitwise combination of the <see cref="T:System.Windows.Forms.ButtonState" /> values that specifies the state to draw the button in. </param>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:System.Windows.Forms.ControlPaint.DrawCheckBox(System.Drawing.Graphics,System.Drawing.Rectangle,System.Windows.Forms.ButtonState)">
      <summary>Draws a check box control in the specified state, on the specified graphics surface, and within the specified bounds.</summary>
      <param name="graphics">The <see cref="T:System.Drawing.Graphics" /> to draw on. </param>
      <param name="rectangle">The <see cref="T:System.Drawing.Rectangle" /> that represents the dimensions of the check box. </param>
      <param name="state">A bitwise combination of the <see cref="T:System.Windows.Forms.ButtonState" /> values that specifies the state to draw the check box in. </param>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:System.Windows.Forms.ControlPaint.DrawCheckBox(System.Drawing.Graphics,System.Int32,System.Int32,System.Int32,System.Int32,System.Windows.Forms.ButtonState)">
      <summary>Draws a check box control in the specified state, on the specified graphics surface, and within the specified bounds.</summary>
      <param name="graphics">The <see cref="T:System.Drawing.Graphics" /> to draw on. </param>
      <param name="x">The x-coordinate of the upper left corner of the drawing rectangle. </param>
      <param name="y">The y-coordinate of the upper left corner of the drawing rectangle. </param>
      <param name="width">The width of the check box. </param>
      <param name="height">The height of the check box. </param>
      <param name="state">A bitwise combination of the <see cref="T:System.Windows.Forms.ButtonState" /> values that specifies the state to draw the check box in. </param>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:System.Windows.Forms.ControlPaint.DrawComboButton(System.Drawing.Graphics,System.Drawing.Rectangle,System.Windows.Forms.ButtonState)">
      <summary>Draws a drop-down button on a combo box control in the specified state, on the specified graphics surface, and within the specified bounds.</summary>
      <param name="graphics">The <see cref="T:System.Drawing.Graphics" /> to draw on. </param>
      <param name="rectangle">The <see cref="T:System.Drawing.Rectangle" /> that represents the dimensions of the combo box. </param>
      <param name="state">A bitwise combination of the <see cref="T:System.Windows.Forms.ButtonState" /> values that specifies the state to draw the combo box in. </param>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:System.Windows.Forms.ControlPaint.DrawComboButton(System.Drawing.Graphics,System.Int32,System.Int32,System.Int32,System.Int32,System.Windows.Forms.ButtonState)">
      <summary>Draws a drop-down button on a combo box control in the specified state, on the specified graphics surface, and within the specified bounds.</summary>
      <param name="graphics">The <see cref="T:System.Drawing.Graphics" /> to draw on. </param>
      <param name="x">The x-coordinate of the top left of the border rectangle. </param>
      <param name="y">The y-coordinate of the top left of the border rectangle. </param>
      <param name="width">The width of the combo box. </param>
      <param name="height">The height of the combo box. </param>
      <param name="state">A bitwise combination of the <see cref="T:System.Windows.Forms.ButtonState" /> values that specifies the state to draw the combo box in. </param>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:System.Windows.Forms.ControlPaint.DrawContainerGrabHandle(System.Drawing.Graphics,System.Drawing.Rectangle)">
      <summary>Draws a container control grab handle glyph on the specified graphics surface and within the specified bounds.</summary>
      <param name="graphics">The <see cref="T:System.Drawing.Graphics" /> to draw on. </param>
      <param name="bounds">The <see cref="T:System.Drawing.Rectangle" /> that represents the dimensions of the grab handle glyph. </param>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:System.Windows.Forms.ControlPaint.DrawFocusRectangle(System.Drawing.Graphics,System.Drawing.Rectangle)">
      <summary>Draws a focus rectangle on the specified graphics surface and within the specified bounds.</summary>
      <param name="graphics">The <see cref="T:System.Drawing.Graphics" /> to draw on. </param>
      <param name="rectangle">The <see cref="T:System.Drawing.Rectangle" /> that represents the dimensions of the grab handle glyph. </param>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:System.Windows.Forms.ControlPaint.DrawFocusRectangle(System.Drawing.Graphics,System.Drawing.Rectangle,System.Drawing.Color,System.Drawing.Color)">
      <summary>Draws a focus rectangle on the specified graphics surface and within the specified bounds.</summary>
      <param name="graphics">The <see cref="T:System.Drawing.Graphics" /> to draw on. </param>
      <param name="rectangle">The <see cref="T:System.Drawing.Rectangle" /> that represents the dimensions of the grab handle glyph. </param>
      <param name="foreColor">The <see cref="T:System.Drawing.Color" /> that is the foreground color of the object to draw the focus rectangle on. </param>
      <param name="backColor">The <see cref="T:System.Drawing.Color" /> that is the background color of the object to draw the focus rectangle on. </param>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:System.Windows.Forms.ControlPaint.DrawGrabHandle(System.Drawing.Graphics,System.Drawing.Rectangle,System.Boolean,System.Boolean)">
      <summary>Draws a standard selection grab handle glyph on the specified graphics surface, within the specified bounds, and in the specified state and style.</summary>
      <param name="graphics">The <see cref="T:System.Drawing.Graphics" /> to draw on. </param>
      <param name="rectangle">The <see cref="T:System.Drawing.Rectangle" /> that represents the dimensions of the grab handle glyph. </param>
      <param name="primary">true to draw the handle as a primary grab handle; otherwise, false. </param>
      <param name="enabled">true to draw the handle in an enabled state; otherwise, false. </param>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:System.Windows.Forms.ControlPaint.DrawGrid(System.Drawing.Graphics,System.Drawing.Rectangle,System.Drawing.Size,System.Drawing.Color)">
      <summary>Draws a grid of one-pixel dots with the specified spacing, within the specified bounds, on the specified graphics surface, and in the specified color.</summary>
      <param name="graphics">The <see cref="T:System.Drawing.Graphics" /> to draw on. </param>
      <param name="area">The <see cref="T:System.Drawing.Rectangle" /> that represents the dimensions of the grid. </param>
      <param name="pixelsBetweenDots">The <see cref="T:System.Drawing.Size" /> that specified the height and width between the dots of the grid. </param>
      <param name="backColor">The <see cref="T:System.Drawing.Color" /> of the background behind the grid. </param>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:System.Windows.Forms.ControlPaint.DrawImageDisabled(System.Drawing.Graphics,System.Drawing.Image,System.Int32,System.Int32,System.Drawing.Color)">
      <summary>Draws the specified image in a disabled state.</summary>
      <param name="graphics">The <see cref="T:System.Drawing.Graphics" /> to draw on. </param>
      <param name="image">The <see cref="T:System.Drawing.Image" /> to draw. </param>
      <param name="x">The x-coordinate of the top left of the border image. </param>
      <param name="y">The y-coordinate of the top left of the border image. </param>
      <param name="background">The <see cref="T:System.Drawing.Color" /> of the background behind the image. </param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Windows.Forms.ControlPaint.DrawLockedFrame(System.Drawing.Graphics,System.Drawing.Rectangle,System.Boolean)">
      <summary>Draws a locked selection frame on the screen within the specified bounds and on the specified graphics surface. Specifies whether to draw the frame with the primary selected colors.</summary>
      <param name="graphics">The <see cref="T:System.Drawing.Graphics" /> to draw on. </param>
      <param name="rectangle">The <see cref="T:System.Drawing.Rectangle" /> that represents the dimensions of the frame. </param>
      <param name="primary">true to draw this frame with the colors used for the primary selection; otherwise, false. </param>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:System.Windows.Forms.ControlPaint.DrawMenuGlyph(System.Drawing.Graphics,System.Drawing.Rectangle,System.Windows.Forms.MenuGlyph)">
      <summary>Draws the specified menu glyph on a menu item control within the specified bounds and on the specified surface.</summary>
      <param name="graphics">The <see cref="T:System.Drawing.Graphics" /> to draw on. </param>
      <param name="rectangle">The <see cref="T:System.Drawing.Rectangle" /> that represents the dimensions of the glyph. </param>
      <param name="glyph">One of the <see cref="T:System.Windows.Forms.MenuGlyph" /> values that specifies the image to draw. </param>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:System.Windows.Forms.ControlPaint.DrawMenuGlyph(System.Drawing.Graphics,System.Drawing.Rectangle,System.Windows.Forms.MenuGlyph,System.Drawing.Color,System.Drawing.Color)">
      <summary>Draws the specified menu glyph on a menu item control within the specified bounds and on the specified surface, replacing <see cref="P:System.Drawing.Color.White" /> with the color specified in the <paramref name="backColor" /> parameter and replacing <see cref="P:System.Drawing.Color.Black" /> with the color specified in the <paramref name="foreColor" /> parameter.</summary>
      <param name="graphics">The <see cref="T:System.Drawing.Graphics" /> to draw on.</param>
      <param name="rectangle">The <see cref="T:System.Drawing.Rectangle" /> that represents the dimensions of the glyph. </param>
      <param name="glyph">One of the <see cref="T:System.Windows.Forms.MenuGlyph" /> values that specifies the image to draw. </param>
      <param name="foreColor">The color that replaces <see cref="P:System.Drawing.Color.White" /> as the foreground color.</param>
      <param name="backColor">The color that replaces <see cref="P:System.Drawing.Color.Black" /> as the background color.</param>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:System.Windows.Forms.ControlPaint.DrawMenuGlyph(System.Drawing.Graphics,System.Int32,System.Int32,System.Int32,System.Int32,System.Windows.Forms.MenuGlyph)">
      <summary>Draws the specified menu glyph on a menu item control with the specified bounds and on the specified surface.</summary>
      <param name="graphics">The <see cref="T:System.Drawing.Graphics" /> to draw on. </param>
      <param name="x">The x-coordinate of the upper left corner of the drawing rectangle. </param>
      <param name="y">The y-coordinate of the upper left corner of the drawing rectangle. </param>
      <param name="width">The width of the menu glyph. </param>
      <param name="height">The height of the menu glyph. </param>
      <param name="glyph">One of the <see cref="T:System.Windows.Forms.MenuGlyph" /> values that specifies the image to draw. </param>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:System.Windows.Forms.ControlPaint.DrawMenuGlyph(System.Drawing.Graphics,System.Int32,System.Int32,System.Int32,System.Int32,System.Windows.Forms.MenuGlyph,System.Drawing.Color,System.Drawing.Color)">
      <summary>Draws the specified menu glyph on a menu item control within the specified coordinates, height, and width on the specified surface, replacing <see cref="P:System.Drawing.Color.White" /> with the color specified in the <paramref name="backColor" /> parameter and replacing <see cref="P:System.Drawing.Color.Black" /> with the color specified in the <paramref name="foreColor" /> parameter.</summary>
      <param name="graphics">The <see cref="T:System.Drawing.Graphics" /> to draw on. </param>
      <param name="x">The x-coordinate of the upper left corner of the drawing rectangle.</param>
      <param name="y">The y-coordinate of the upper left corner of the drawing rectangle. </param>
      <param name="width">The width of the menu glyph.</param>
      <param name="height">The height of the menu glyph.</param>
      <param name="glyph">One of the <see cref="T:System.Windows.Forms.MenuGlyph" /> values that specifies the image to draw.</param>
      <param name="foreColor">The color that replaces <see cref="P:System.Drawing.Color.White" /> as the foreground color.</param>
      <param name="backColor">The color that replaces <see cref="P:System.Drawing.Color.Black" /> as the background color.</param>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:System.Windows.Forms.ControlPaint.DrawMixedCheckBox(System.Drawing.Graphics,System.Drawing.Rectangle,System.Windows.Forms.ButtonState)">
      <summary>Draws a three-state check box control in the specified state, on the specified graphics surface, and within the specified bounds.</summary>
      <param name="graphics">The <see cref="T:System.Drawing.Graphics" /> to draw on. </param>
      <param name="rectangle">The <see cref="T:System.Drawing.Rectangle" /> that represents the dimensions of the check box. </param>
      <param name="state">A bitwise combination of the <see cref="T:System.Windows.Forms.ButtonState" /> values that specifies the state to draw the check box in. </param>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:System.Windows.Forms.ControlPaint.DrawMixedCheckBox(System.Drawing.Graphics,System.Int32,System.Int32,System.Int32,System.Int32,System.Windows.Forms.ButtonState)">
      <summary>Draws a three-state check box control in the specified state, on the specified graphics surface, and within the specified bounds.</summary>
      <param name="graphics">The <see cref="T:System.Drawing.Graphics" /> to draw on. </param>
      <param name="x">The x-coordinate of the upper left corner of the drawing rectangle. </param>
      <param name="y">The y-coordinate of the upper left corner of the drawing rectangle. </param>
      <param name="width">The width of the check box. </param>
      <param name="height">The height of the check box. </param>
      <param name="state">A bitwise combination of the <see cref="T:System.Windows.Forms.ButtonState" /> values that specifies the state to draw the check box in. </param>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:System.Windows.Forms.ControlPaint.DrawRadioButton(System.Drawing.Graphics,System.Drawing.Rectangle,System.Windows.Forms.ButtonState)">
      <summary>Draws a radio button control in the specified state, on the specified graphics surface, and within the specified bounds.</summary>
      <param name="graphics">The <see cref="T:System.Drawing.Graphics" /> to draw on. </param>
      <param name="rectangle">The <see cref="T:System.Drawing.Rectangle" /> that represents the dimensions of the radio button. </param>
      <param name="state">A bitwise combination of the <see cref="T:System.Windows.Forms.ButtonState" /> values that specifies the state to draw the radio button in. </param>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:System.Windows.Forms.ControlPaint.DrawRadioButton(System.Drawing.Graphics,System.Int32,System.Int32,System.Int32,System.Int32,System.Windows.Forms.ButtonState)">
      <summary>Draws a radio button control in the specified state, on the specified graphics surface, and within the specified bounds.</summary>
      <param name="graphics">The <see cref="T:System.Drawing.Graphics" /> to draw on. </param>
      <param name="x">The x-coordinate of the upper left corner of the drawing rectangle. </param>
      <param name="y">The y-coordinate of the upper left corner of the drawing rectangle. </param>
      <param name="width">The width of the radio button. </param>
      <param name="height">The height of the radio button. </param>
      <param name="state">A bitwise combination of the <see cref="T:System.Windows.Forms.ButtonState" /> values that specifies the state to draw the radio button in. </param>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:System.Windows.Forms.ControlPaint.DrawReversibleFrame(System.Drawing.Rectangle,System.Drawing.Color,System.Windows.Forms.FrameStyle)">
      <summary>Draws a reversible frame on the screen within the specified bounds, with the specified background color, and in the specified state.</summary>
      <param name="rectangle">The <see cref="T:System.Drawing.Rectangle" /> that represents the dimensions of the rectangle to draw, in screen coordinates. </param>
      <param name="backColor">The <see cref="T:System.Drawing.Color" /> of the background behind the frame. </param>
      <param name="style">One of the <see cref="T:System.Windows.Forms.FrameStyle" /> values that specifies the style of the frame. </param>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.UIPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Window="AllWindows" />
      </PermissionSet>
    </member>
    <member name="M:System.Windows.Forms.ControlPaint.DrawReversibleLine(System.Drawing.Point,System.Drawing.Point,System.Drawing.Color)">
      <summary>Draws a reversible line on the screen within the specified starting and ending points and with the specified background color.</summary>
      <param name="start">The starting <see cref="T:System.Drawing.Point" /> of the line, in screen coordinates. </param>
      <param name="end">The ending <see cref="T:System.Drawing.Point" /> of the line, in screen coordinates. </param>
      <param name="backColor">The <see cref="T:System.Drawing.Color" /> of the background behind the line. </param>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.UIPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Window="AllWindows" />
      </PermissionSet>
    </member>
    <member name="M:System.Windows.Forms.ControlPaint.DrawScrollButton(System.Drawing.Graphics,System.Drawing.Rectangle,System.Windows.Forms.ScrollButton,System.Windows.Forms.ButtonState)">
      <summary>Draws the specified scroll button on a scroll bar control in the specified state, on the specified graphics surface, and within the specified bounds.</summary>
      <param name="graphics">The <see cref="T:System.Drawing.Graphics" /> to draw on. </param>
      <param name="rectangle">The <see cref="T:System.Drawing.Rectangle" /> that represents the dimensions of the glyph. </param>
      <param name="button">One of the <see cref="T:System.Windows.Forms.ScrollButton" /> values that specifies the type of scroll arrow to draw. </param>
      <param name="state">A bitwise combination of the <see cref="T:System.Windows.Forms.ButtonState" /> values that specifies the state to draw the scroll button in. </param>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:System.Windows.Forms.ControlPaint.DrawScrollButton(System.Drawing.Graphics,System.Int32,System.Int32,System.Int32,System.Int32,System.Windows.Forms.ScrollButton,System.Windows.Forms.ButtonState)">
      <summary>Draws the specified scroll button on a scroll bar control in the specified state, on the specified graphics surface, and within the specified bounds.</summary>
      <param name="graphics">The <see cref="T:System.Drawing.Graphics" /> to draw on. </param>
      <param name="x">The x-coordinate of the upper left corner of the drawing rectangle. </param>
      <param name="y">The y-coordinate of the upper left corner of the drawing rectangle. </param>
      <param name="width">The width of the scroll button. </param>
      <param name="height">The height of the scroll button. </param>
      <param name="button">One of the <see cref="T:System.Windows.Forms.ScrollButton" /> values that specifies the type of scroll arrow to draw. </param>
      <param name="state">A bitwise combination of the <see cref="T:System.Windows.Forms.ButtonState" /> values that specifies the state to draw the scroll button in. </param>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:System.Windows.Forms.ControlPaint.DrawSelectionFrame(System.Drawing.Graphics,System.Boolean,System.Drawing.Rectangle,System.Drawing.Rectangle,System.Drawing.Color)">
      <summary>Draws a standard selection frame in the specified state, on the specified graphics surface, with the specified inner and outer dimensions, and with the specified background color.</summary>
      <param name="graphics">The <see cref="T:System.Drawing.Graphics" /> to draw on. </param>
      <param name="active">true to draw the selection frame in an active state; otherwise, false. </param>
      <param name="outsideRect">The <see cref="T:System.Drawing.Rectangle" /> that represents the outer boundary of the selection frame. </param>
      <param name="insideRect">The <see cref="T:System.Drawing.Rectangle" /> that represents the inner boundary of the selection frame.</param>
      <param name="backColor">The <see cref="T:System.Drawing.Color" /> of the background behind the frame. </param>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:System.Windows.Forms.ControlPaint.DrawSizeGrip(System.Drawing.Graphics,System.Drawing.Color,System.Drawing.Rectangle)">
      <summary>Draws a size grip on a form with the specified bounds and background color and on the specified graphics surface.</summary>
      <param name="graphics">The <see cref="T:System.Drawing.Graphics" /> to draw on. </param>
      <param name="backColor">The <see cref="T:System.Drawing.Color" /> of the background used to determine the colors of the size grip.</param>
      <param name="bounds">The <see cref="T:System.Drawing.Rectangle" /> that represents the dimensions of the size grip.</param>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:System.Windows.Forms.ControlPaint.DrawSizeGrip(System.Drawing.Graphics,System.Drawing.Color,System.Int32,System.Int32,System.Int32,System.Int32)">
      <summary>Draws a size grip on a form with the specified bounds and background color and on the specified graphics surface.</summary>
      <param name="graphics">The <see cref="T:System.Drawing.Graphics" /> to draw on. </param>
      <param name="backColor">The <see cref="T:System.Drawing.Color" /> of the background used to determine the colors of the size grip. </param>
      <param name="x">The x-coordinate of the upper left corner of the size grip. </param>
      <param name="y">The y-coordinate of the upper left corner of the size grip. </param>
      <param name="width">The width of the size grip. </param>
      <param name="height">The height of the size grip. </param>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:System.Windows.Forms.ControlPaint.DrawStringDisabled(System.Drawing.Graphics,System.String,System.Drawing.Font,System.Drawing.Color,System.Drawing.RectangleF,System.Drawing.StringFormat)">
      <summary>Draws the specified string in a disabled state on the specified graphics surface; within the specified bounds; and in the specified font, color, and format.</summary>
      <param name="graphics">The <see cref="T:System.Drawing.Graphics" /> to draw on. </param>
      <param name="s">The string to draw. </param>
      <param name="font">The <see cref="T:System.Drawing.Font" /> to draw the string with. </param>
      <param name="color">The <see cref="T:System.Drawing.Color" /> of the background behind the string. </param>
      <param name="layoutRectangle">The <see cref="T:System.Drawing.RectangleF" /> that represents the dimensions of the string. </param>
      <param name="format">The <see cref="T:System.Drawing.StringFormat" /> to apply to the string. </param>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:System.Windows.Forms.ControlPaint.DrawStringDisabled(System.Drawing.IDeviceContext,System.String,System.Drawing.Font,System.Drawing.Color,System.Drawing.Rectangle,System.Windows.Forms.TextFormatFlags)">
      <summary>Draws the specified string in a disabled state on the specified graphics surface, within the specified bounds, and in the specified font, color, and format, using the specified GDI-based <see cref="T:System.Windows.Forms.TextRenderer" />.</summary>
      <param name="dc">The GDI-based <see cref="T:System.Windows.Forms.TextRenderer" />.</param>
      <param name="s">The string to draw. </param>
      <param name="font">The <see cref="T:System.Drawing.Font" /> to draw the string with.</param>
      <param name="color">The <see cref="T:System.Drawing.Color" /> of the background behind the string.</param>
      <param name="layoutRectangle">The <see cref="T:System.Drawing.RectangleF" /> that represents the dimensions of the string.</param>
      <param name="format">The <see cref="T:System.Drawing.StringFormat" /> to apply to the string.</param>
    </member>
    <member name="M:System.Windows.Forms.ControlPaint.DrawVisualStyleBorder(System.Drawing.Graphics,System.Drawing.Rectangle)">
      <summary>Draws a border in the style appropriate for disabled items.</summary>
      <param name="graphics">The <see cref="T:System.Drawing.Graphics" /> to draw on.</param>
      <param name="bounds">The <see cref="T:System.Drawing.Rectangle" /> that represents the dimensions of the border.</param>
    </member>
    <member name="M:System.Windows.Forms.ControlPaint.FillReversibleRectangle(System.Drawing.Rectangle,System.Drawing.Color)">
      <summary>Draws a filled, reversible rectangle on the screen.</summary>
      <param name="rectangle">The <see cref="T:System.Drawing.Rectangle" /> that represents the dimensions of the rectangle to fill, in screen coordinates. </param>
      <param name="backColor">The <see cref="T:System.Drawing.Color" /> of the background behind the fill. </param>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.UIPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Window="AllWindows" />
      </PermissionSet>
    </member>
    <member name="M:System.Windows.Forms.ControlPaint.Light(System.Drawing.Color)">
      <summary>Creates a new light color object for the control from the specified color.</summary>
      <returns>A <see cref="T:System.Drawing.Color" /> that represents the light color on the control.</returns>
      <param name="baseColor">The <see cref="T:System.Drawing.Color" /> to be lightened. </param>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:System.Windows.Forms.ControlPaint.Light(System.Drawing.Color,System.Single)">
      <summary>Creates a new light color object for the control from the specified color and lightens it by the specified percentage.</summary>
      <returns>A <see cref="T:System.Drawing.Color" /> that represents the light color on the control.</returns>
      <param name="baseColor">The <see cref="T:System.Drawing.Color" /> to be lightened. </param>
      <param name="percOfLightLight">The percentage to lighten the specified <see cref="T:System.Drawing.Color" />. </param>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:System.Windows.Forms.ControlPaint.LightLight(System.Drawing.Color)">
      <summary>Creates a new light color object for the control from the specified color.</summary>
      <returns>A <see cref="T:System.Drawing.Color" /> that represents the light color on the control.</returns>
      <param name="baseColor">The <see cref="T:System.Drawing.Color" /> to be lightened. </param>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="T:System.Windows.Forms.ControlStyles">
      <summary>Specifies the style and behavior of a control.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="F:System.Windows.Forms.ControlStyles.ContainerControl">
      <summary>If true, the control is a container-like control.</summary>
    </member>
    <member name="F:System.Windows.Forms.ControlStyles.UserPaint">
      <summary>If true, the control paints itself rather than the operating system doing so. If false, the <see cref="E:System.Windows.Forms.Control.Paint" /> event is not raised. This style only applies to classes derived from <see cref="T:System.Windows.Forms.Control" />.</summary>
    </member>
    <member name="F:System.Windows.Forms.ControlStyles.Opaque">
      <summary>If true, the control is drawn opaque and the background is not painted.</summary>
    </member>
    <member name="F:System.Windows.Forms.ControlStyles.ResizeRedraw">
      <summary>If true, the control is redrawn when it is resized.</summary>
    </member>
    <member name="F:System.Windows.Forms.ControlStyles.FixedWidth">
      <summary>If true, the control has a fixed width when auto-scaled. For example, if a layout operation attempts to rescale the control to accommodate a new <see cref="T:System.Drawing.Font" />, the control's <see cref="P:System.Windows.Forms.Control.Width" /> remains unchanged.</summary>
    </member>
    <member name="F:System.Windows.Forms.ControlStyles.FixedHeight">
      <summary>If true, the control has a fixed height when auto-scaled. For example, if a layout operation attempts to rescale the control to accommodate a new <see cref="T:System.Drawing.Font" />, the control's <see cref="P:System.Windows.Forms.Control.Height" /> remains unchanged.</summary>
    </member>
    <member name="F:System.Windows.Forms.ControlStyles.StandardClick">
      <summary>If true, the control implements the standard <see cref="E:System.Windows.Forms.Control.Click" /> behavior.</summary>
    </member>
    <member name="F:System.Windows.Forms.ControlStyles.Selectable">
      <summary>If true, the control can receive focus.</summary>
    </member>
    <member name="F:System.Windows.Forms.ControlStyles.UserMouse">
      <summary>If true, the control does its own mouse processing, and mouse events are not handled by the operating system.</summary>
    </member>
    <member name="F:System.Windows.Forms.ControlStyles.SupportsTransparentBackColor">
      <summary>If true, the control accepts a <see cref="P:System.Windows.Forms.Control.BackColor" /> with an alpha component of less than 255 to simulate transparency. Transparency will be simulated only if the <see cref="F:System.Windows.Forms.ControlStyles.UserPaint" /> bit is set to true and the parent control is derived from <see cref="T:System.Windows.Forms.Control" />.</summary>
    </member>
    <member name="F:System.Windows.Forms.ControlStyles.StandardDoubleClick">
      <summary>If true, the control implements the standard <see cref="E:System.Windows.Forms.Control.DoubleClick" /> behavior. This style is ignored if the <see cref="F:System.Windows.Forms.ControlStyles.StandardClick" /> bit is not set to true.</summary>
    </member>
    <member name="F:System.Windows.Forms.ControlStyles.AllPaintingInWmPaint">
      <summary>If true, the control ignores the window message WM_ERASEBKGND to reduce flicker. This style should only be applied if the <see cref="F:System.Windows.Forms.ControlStyles.UserPaint" /> bit is set to true.</summary>
    </member>
    <member name="F:System.Windows.Forms.ControlStyles.CacheText">
      <summary>If true, the control keeps a copy of the text rather than getting it from the <see cref="P:System.Windows.Forms.Control.Handle" /> each time it is needed. This style defaults to false. This behavior improves performance, but makes it difficult to keep the text synchronized.</summary>
    </member>
    <member name="F:System.Windows.Forms.ControlStyles.EnableNotifyMessage">
      <summary>If true, the <see cref="M:System.Windows.Forms.Control.OnNotifyMessage(System.Windows.Forms.Message)" /> method is called for every message sent to the control's <see cref="M:System.Windows.Forms.Control.WndProc(System.Windows.Forms.Message@)" />. This style defaults to false. <see cref="F:System.Windows.Forms.ControlStyles.EnableNotifyMessage" /> does not work in partial trust.</summary>
    </member>
    <member name="F:System.Windows.Forms.ControlStyles.DoubleBuffer">
      <summary>If true, drawing is performed in a buffer, and after it completes, the result is output to the screen. Double-buffering prevents flicker caused by the redrawing of the control. If you set <see cref="F:System.Windows.Forms.ControlStyles.DoubleBuffer" /> to true, you should also set <see cref="F:System.Windows.Forms.ControlStyles.UserPaint" /> and <see cref="F:System.Windows.Forms.ControlStyles.AllPaintingInWmPaint" /> to true.</summary>
    </member>
    <member name="F:System.Windows.Forms.ControlStyles.OptimizedDoubleBuffer">
      <summary>If true, the control is first drawn to a buffer rather than directly to the screen, which can reduce flicker. If you set this property to true, you should also set the <see cref="F:System.Windows.Forms.ControlStyles.AllPaintingInWmPaint" /> to true.</summary>
    </member>
    <member name="F:System.Windows.Forms.ControlStyles.UseTextForAccessibility">
      <summary>Specifies that the value of the control's Text property, if set, determines the control's default Active Accessibility name and shortcut key.</summary>
    </member>
    <member name="T:System.Windows.Forms.ControlUpdateMode">
      <summary>Determines when changes to a data source value get propagated to the corresponding data-bound control property.</summary>
    </member>
    <member name="F:System.Windows.Forms.ControlUpdateMode.OnPropertyChanged">
      <summary>The bound control is updated when the data source value changes, or the data source position changes.</summary>
    </member>
    <member name="F:System.Windows.Forms.ControlUpdateMode.Never">
      <summary>The bound control is never updated when a data source value changes. The data source is write-only.</summary>
    </member>
    <member name="T:System.Windows.Forms.ConvertEventArgs">
      <summary>Provides data for the <see cref="E:System.Windows.Forms.Binding.Format" /> and <see cref="E:System.Windows.Forms.Binding.Parse" /> events.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Windows.Forms.ConvertEventArgs.#ctor(System.Object,System.Type)">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Forms.ConvertEventArgs" /> class.</summary>
      <param name="value">An <see cref="T:System.Object" /> that contains the value of the current property. </param>
      <param name="desiredType">The <see cref="T:System.Type" /> of the value. </param>
    </member>
    <member name="P:System.Windows.Forms.ConvertEventArgs.DesiredType">
      <summary>Gets the data type of the desired value.</summary>
      <returns>The <see cref="T:System.Type" /> of the desired value.</returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="P:System.Windows.Forms.ConvertEventArgs.Value">
      <summary>Gets or sets the value of the <see cref="T:System.Windows.Forms.ConvertEventArgs" />.</summary>
      <returns>The value of the <see cref="T:System.Windows.Forms.ConvertEventArgs" />.</returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="T:System.Windows.Forms.ConvertEventHandler">
      <summary>Represents the method that will handle the <see cref="E:System.Windows.Forms.Binding.Parse" /> and <see cref="E:System.Windows.Forms.Binding.Format" /> events of a <see cref="T:System.Windows.Forms.Binding" />.</summary>
      <param name="sender">The source of the event. </param>
      <param name="e">A <see cref="T:System.Windows.Forms.ConvertEventArgs" /> that contains the event data. </param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="T:System.Windows.Forms.CreateParams">
      <summary>Encapsulates the information needed when creating a control.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Windows.Forms.CreateParams.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Forms.CreateParams" /> class. </summary>
    </member>
    <member name="P:System.Windows.Forms.CreateParams.Caption">
      <summary>Gets or sets the control's initial text.</summary>
      <returns>The control's initial text.</returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="P:System.Windows.Forms.CreateParams.ClassName">
      <summary>Gets or sets the name of the Windows class to derive the control from.</summary>
      <returns>The name of the Windows class to derive the control from.</returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="P:System.Windows.Forms.CreateParams.ClassStyle">
      <summary>Gets or sets a bitwise combination of class style values.</summary>
      <returns>A bitwise combination of the class style values.</returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="P:System.Windows.Forms.CreateParams.ExStyle">
      <summary>Gets or sets a bitwise combination of extended window style values.</summary>
      <returns>A bitwise combination of the extended window style values.</returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="P:System.Windows.Forms.CreateParams.Height">
      <summary>Gets or sets the initial height of the control.</summary>
      <returns>The numeric value that represents the initial height of the control.</returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="P:System.Windows.Forms.CreateParams.Param">
      <summary>Gets or sets additional parameter information needed to create the control.</summary>
      <returns>The <see cref="T:System.Object" /> that holds additional parameter information needed to create the control.</returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="P:System.Windows.Forms.CreateParams.Parent">
      <summary>Gets or sets the control's parent.</summary>
      <returns>An <see cref="T:System.IntPtr" /> that contains the window handle of the control's parent.</returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="P:System.Windows.Forms.CreateParams.Style">
      <summary>Gets or sets a bitwise combination of window style values.</summary>
      <returns>A bitwise combination of the window style values.</returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Windows.Forms.CreateParams.ToString">
      <returns>A <see cref="T:System.String" /> that represents the current <see cref="T:System.Object" />.</returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="P:System.Windows.Forms.CreateParams.Width">
      <summary>Gets or sets the initial width of the control.</summary>
      <returns>The numeric value that represents the initial width of the control.</returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="P:System.Windows.Forms.CreateParams.X">
      <summary>Gets or sets the initial left position of the control.</summary>
      <returns>The numeric value that represents the initial left position of the control.</returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="P:System.Windows.Forms.CreateParams.Y">
      <summary>Gets or sets the top position of the initial location of the control.</summary>
      <returns>The numeric value that represents the top position of the initial location of the control.</returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="T:System.Windows.Forms.CurrencyManager">
      <summary>Manages a list of <see cref="T:System.Windows.Forms.Binding" /> objects.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Windows.Forms.CurrencyManager.AddNew">
      <summary>Adds a new item to the underlying list.</summary>
      <exception cref="T:System.NotSupportedException">The underlying data source does not implement <see cref="T:System.ComponentModel.IBindingList" />, or the data source has thrown an exception because the user has attempted to add a row to a read-only or fixed-size <see cref="T:System.Data.DataView" />. </exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Windows.Forms.CurrencyManager.CancelCurrentEdit">
      <summary>Cancels the current edit operation.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Windows.Forms.CurrencyManager.CheckEmpty">
      <summary>Throws an exception if there is no list, or the list is empty.</summary>
      <exception cref="T:System.Exception">There is no list, or the list is empty. </exception>
    </member>
    <member name="P:System.Windows.Forms.CurrencyManager.Count">
      <summary>Gets the number of items in the list.</summary>
      <returns>The number of items in the list.</returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="P:System.Windows.Forms.CurrencyManager.Current">
      <summary>Gets the current item in the list.</summary>
      <returns>A list item of type <see cref="T:System.Object" />.</returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Windows.Forms.CurrencyManager.EndCurrentEdit">
      <summary>Ends the current edit operation.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="F:System.Windows.Forms.CurrencyManager.finalType">
      <summary>Specifies the data type of the list.</summary>
    </member>
    <member name="M:System.Windows.Forms.CurrencyManager.GetItemProperties">
      <summary>Gets the property descriptor collection for the underlying list.</summary>
      <returns>A <see cref="T:System.ComponentModel.PropertyDescriptorCollection" /> for the list.</returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Windows.Forms.CurrencyManager.GetListName(System.Collections.ArrayList)">
      <summary>Gets the name of the list supplying the data for the binding using the specified set of bound properties.</summary>
      <returns>If successful, a <see cref="T:System.String" /> containing name of the list supplying the data for the binding; otherwise, an <see cref="F:System.String.Empty" /> string.</returns>
      <param name="listAccessors">An <see cref="T:System.Collections.ArrayList" /> of properties to be found in the data source.</param>
    </member>
    <member name="E:System.Windows.Forms.CurrencyManager.ItemChanged">
      <summary>Occurs when the current item has been altered.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="P:System.Windows.Forms.CurrencyManager.List">
      <summary>Gets the list for this <see cref="T:System.Windows.Forms.CurrencyManager" />.</summary>
      <returns>An <see cref="T:System.Collections.IList" /> that contains the list.</returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="E:System.Windows.Forms.CurrencyManager.ListChanged">
      <summary>Occurs when the list changes or an item in the list changes.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="F:System.Windows.Forms.CurrencyManager.listposition">
      <summary>Specifies the current position of the <see cref="T:System.Windows.Forms.CurrencyManager" /> in the list.</summary>
    </member>
    <member name="E:System.Windows.Forms.CurrencyManager.MetaDataChanged">
      <summary>Occurs when the metadata of the <see cref="P:System.Windows.Forms.CurrencyManager.List" /> has changed.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Windows.Forms.CurrencyManager.OnCurrentChanged(System.EventArgs)">
      <param name="e">The <see cref="T:System.EventArgs" /> that contains the event data.</param>
    </member>
    <member name="M:System.Windows.Forms.CurrencyManager.OnCurrentItemChanged(System.EventArgs)">
      <param name="e">The <see cref="T:System.EventArgs" /> that contains the event data.</param>
    </member>
    <member name="M:System.Windows.Forms.CurrencyManager.OnItemChanged(System.Windows.Forms.ItemChangedEventArgs)">
      <summary>Raises the <see cref="E:System.Windows.Forms.CurrencyManager.ItemChanged" /> event.</summary>
      <param name="e">An <see cref="T:System.Windows.Forms.ItemChangedEventArgs" /> that contains the event data. </param>
    </member>
    <member name="M:System.Windows.Forms.CurrencyManager.OnMetaDataChanged(System.EventArgs)">
      <summary>Raises the <see cref="E:System.Windows.Forms.CurrencyManager.MetaDataChanged" /> event.</summary>
      <param name="e">An <see cref="T:System.EventArgs" /> that contains the event data. </param>
    </member>
    <member name="M:System.Windows.Forms.CurrencyManager.OnPositionChanged(System.EventArgs)">
      <summary>Raises the <see cref="E:System.Windows.Forms.BindingManagerBase.PositionChanged" /> event.</summary>
      <param name="e">An <see cref="T:System.EventArgs" /> that contains the event data. </param>
    </member>
    <member name="P:System.Windows.Forms.CurrencyManager.Position">
      <summary>Gets or sets the position you are at within the list.</summary>
      <returns>A number between 0 and <see cref="P:System.Windows.Forms.CurrencyManager.Count" /> minus 1.</returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Windows.Forms.CurrencyManager.Refresh">
      <summary>Forces a repopulation of the data-bound list.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Windows.Forms.CurrencyManager.RemoveAt(System.Int32)">
      <summary>Removes the item at the specified index.</summary>
      <param name="index">The index of the item to remove from the list. </param>
      <exception cref="T:System.IndexOutOfRangeException">There is no row at the specified <paramref name="index" />. </exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Windows.Forms.CurrencyManager.ResumeBinding">
      <summary>Resumes data binding.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Windows.Forms.CurrencyManager.SuspendBinding">
      <summary>Suspends data binding to prevents changes from updating the bound data source.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Windows.Forms.CurrencyManager.UpdateIsBinding">
      <summary>Updates the status of the binding.</summary>
    </member>
    <member name="T:System.Windows.Forms.Cursor">
      <summary>Represents the image used to paint the mouse pointer.</summary>
      <filterpriority>1</filterpriority>
      <completionlist cref="T:System.Windows.Forms.Cursors" />
    </member>
    <member name="M:System.Windows.Forms.Cursor.#ctor(System.IntPtr)">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Forms.Cursor" /> class from the specified Windows handle.</summary>
      <param name="handle">An <see cref="T:System.IntPtr" /> that represents the Windows handle of the cursor to create. </param>
      <exception cref="T:System.ArgumentException">
        <paramref name="handle" /> is <see cref="F:System.IntPtr.Zero" />. </exception>
    </member>
    <member name="M:System.Windows.Forms.Cursor.#ctor(System.IO.Stream)">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Forms.Cursor" /> class from the specified data stream.</summary>
      <param name="stream">The data stream to load the <see cref="T:System.Windows.Forms.Cursor" /> from. </param>
    </member>
    <member name="M:System.Windows.Forms.Cursor.#ctor(System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Forms.Cursor" /> class from the specified file.</summary>
      <param name="fileName">The cursor file to load. </param>
    </member>
    <member name="M:System.Windows.Forms.Cursor.#ctor(System.Type,System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Forms.Cursor" /> class from the specified resource with the specified resource type.</summary>
      <param name="type">The resource <see cref="T:System.Type" />. </param>
      <param name="resource">The name of the resource. </param>
    </member>
    <member name="P:System.Windows.Forms.Cursor.Clip">
      <summary>Gets or sets the bounds that represent the clipping rectangle for the cursor.</summary>
      <returns>The <see cref="T:System.Drawing.Rectangle" /> that represents the clipping rectangle for the <see cref="T:System.Windows.Forms.Cursor" />, in screen coordinates.</returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Windows.Forms.Cursor.CopyHandle">
      <summary>Copies the handle of this <see cref="T:System.Windows.Forms.Cursor" />.</summary>
      <returns>An <see cref="T:System.IntPtr" /> that represents the cursor's handle.</returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="P:System.Windows.Forms.Cursor.Current">
      <summary>Gets or sets a cursor object that represents the mouse cursor.</summary>
      <returns>A <see cref="T:System.Windows.Forms.Cursor" /> that represents the mouse cursor. The default is null if the mouse cursor is not visible.</returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Windows.Forms.Cursor.Dispose">
      <summary>Releases all resources used by the <see cref="T:System.Windows.Forms.Cursor" />.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Windows.Forms.Cursor.Draw(System.Drawing.Graphics,System.Drawing.Rectangle)">
      <summary>Draws the cursor on the specified surface, within the specified bounds.</summary>
      <param name="g">The <see cref="T:System.Drawing.Graphics" /> surface on which to draw the <see cref="T:System.Windows.Forms.Cursor" />. </param>
      <param name="targetRect">The <see cref="T:System.Drawing.Rectangle" /> that represents the bounds of the <see cref="T:System.Windows.Forms.Cursor" />. </param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Windows.Forms.Cursor.DrawStretched(System.Drawing.Graphics,System.Drawing.Rectangle)">
      <summary>Draws the cursor in a stretched format on the specified surface, within the specified bounds.</summary>
      <param name="g">The <see cref="T:System.Drawing.Graphics" /> surface on which to draw the <see cref="T:System.Windows.Forms.Cursor" />. </param>
      <param name="targetRect">The <see cref="T:System.Drawing.Rectangle" /> that represents the bounds of the <see cref="T:System.Windows.Forms.Cursor" />. </param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Windows.Forms.Cursor.Equals(System.Object)">
      <summary>Returns a value indicating whether this cursor is equal to the specified <see cref="T:System.Windows.Forms.Cursor" />.</summary>
      <returns>true if this cursor is equal to the specified <see cref="T:System.Windows.Forms.Cursor" />; otherwise, false.</returns>
      <param name="obj">The <see cref="T:System.Windows.Forms.Cursor" /> to compare. </param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Windows.Forms.Cursor.GetHashCode">
      <summary>Retrieves the hash code for the current <see cref="T:System.Windows.Forms.Cursor" />.</summary>
      <returns>A hash code for the current <see cref="T:System.Windows.Forms.Cursor" />.</returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="P:System.Windows.Forms.Cursor.Handle">
      <summary>Gets the handle of the cursor.</summary>
      <returns>An <see cref="T:System.IntPtr" /> that represents the cursor's handle.</returns>
      <exception cref="T:System.Exception">The handle value is <see cref="F:System.IntPtr.Zero" />. </exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Windows.Forms.Cursor.Hide">
      <summary>Hides the cursor.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="P:System.Windows.Forms.Cursor.HotSpot">
      <summary>Gets the cursor hot spot.</summary>
      <returns>A <see cref="T:System.Drawing.Point" /> representing the cursor hot spot.</returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Windows.Forms.Cursor.op_Equality(System.Windows.Forms.Cursor,System.Windows.Forms.Cursor)">
      <summary>Returns a value indicating whether two instances of the <see cref="T:System.Windows.Forms.Cursor" /> class are equal.</summary>
      <returns>true if two instances of the <see cref="T:System.Windows.Forms.Cursor" /> class are equal; otherwise, false.</returns>
      <param name="left">A <see cref="T:System.Windows.Forms.Cursor" /> to compare. </param>
      <param name="right">A <see cref="T:System.Windows.Forms.Cursor" /> to compare. </param>
      <filterpriority>3</filterpriority>
    </member>
    <member name="M:System.Windows.Forms.Cursor.op_Inequality(System.Windows.Forms.Cursor,System.Windows.Forms.Cursor)">
      <summary>Returns a value indicating whether two instances of the <see cref="T:System.Windows.Forms.Cursor" /> class are not equal.</summary>
      <returns>true if two instances of the <see cref="T:System.Windows.Forms.Cursor" /> class are not equal; otherwise, false.</returns>
      <param name="left">A <see cref="T:System.Windows.Forms.Cursor" /> to compare. </param>
      <param name="right">A <see cref="T:System.Windows.Forms.Cursor" /> to compare. </param>
      <filterpriority>3</filterpriority>
    </member>
    <member name="P:System.Windows.Forms.Cursor.Position">
      <summary>Gets or sets the cursor's position.</summary>
      <returns>A <see cref="T:System.Drawing.Point" /> that represents the cursor's position in screen coordinates.</returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Windows.Forms.Cursor.Show">
      <summary>Displays the cursor.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="P:System.Windows.Forms.Cursor.Size">
      <summary>Gets the size of the cursor object.</summary>
      <returns>A <see cref="T:System.Drawing.Size" /> that represents the width and height of the <see cref="T:System.Windows.Forms.Cursor" />.</returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Windows.Forms.Cursor.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Serializes the object.</summary>
      <param name="si">A <see cref="T:System.Runtime.Serialization.SerializationInfo" /> class.</param>
      <param name="context">A <see cref="T:System.Runtime.Serialization.StreamingContext" /> class.</param>
    </member>
    <member name="P:System.Windows.Forms.Cursor.Tag">
      <summary>Gets or sets the object that contains data about the <see cref="T:System.Windows.Forms.Cursor" />.</summary>
      <returns>An <see cref="T:System.Object" /> that contains data about the <see cref="T:System.Windows.Forms.Cursor" />. The default is null.</returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Windows.Forms.Cursor.ToString">
      <summary>Retrieves a human readable string representing this <see cref="T:System.Windows.Forms.Cursor" />.</summary>
      <returns>A <see cref="T:System.String" /> that represents this <see cref="T:System.Windows.Forms.Cursor" />.</returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="T:System.Windows.Forms.CursorConverter">
      <summary>Provides a type converter to convert <see cref="T:System.Windows.Forms.Cursor" /> objects to and from various other representations. </summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Windows.Forms.CursorConverter.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Forms.CursorConverter" /> class. </summary>
    </member>
    <member name="M:System.Windows.Forms.CursorConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)">
      <summary>Determines if this converter can convert an object in the given source type to the native type of the converter.</summary>
      <returns>true if this object can perform the conversion.</returns>
      <param name="context">A formatter context. This object can be used to extract additional information about the environment this converter is being invoked from. This may be null, so you should always check. Also, properties on the context object may also return null. </param>
      <param name="sourceType">The type you wish to convert from. </param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Windows.Forms.CursorConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)">
      <summary>Gets a value indicating whether this converter can convert an object to the given destination type using the context.</summary>
      <returns>true if this converter can perform the conversion; otherwise, false.</returns>
      <param name="context">An <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> that provides a format context. </param>
      <param name="destinationType">A <see cref="T:System.Type" /> that represents the type you wish to convert to. </param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Windows.Forms.CursorConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
      <returns>An <see cref="T:System.Object" /> that represents the converted value.</returns>
      <param name="context">An <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> that provides a format context. </param>
      <param name="culture">The <see cref="T:System.Globalization.CultureInfo" /> to use as the current culture. </param>
      <param name="value">The <see cref="T:System.Object" /> to convert. </param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Windows.Forms.CursorConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
      <returns>An <see cref="T:System.Object" /> that represents the converted value.</returns>
      <param name="context">An <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> that provides a format context. </param>
      <param name="culture">A <see cref="T:System.Globalization.CultureInfo" />. If null is passed, the current culture is assumed. </param>
      <param name="value">The <see cref="T:System.Object" /> to convert. </param>
      <param name="destinationType">The <see cref="T:System.Type" /> to convert the <paramref name="value" /> parameter to. </param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Windows.Forms.CursorConverter.GetStandardValues(System.ComponentModel.ITypeDescriptorContext)">
      <summary>Retrieves a collection containing a set of standard values for the data type this validator is designed for. This will return null if the data type does not support a standard set of values.</summary>
      <returns>A collection containing a standard set of valid values, or null. The default implementation always returns null.</returns>
      <param name="context">A formatter context. This object can be used to extract additional information about the environment this converter is being invoked from. This may be null, so you should always check. Also, properties on the context object may also return null. </param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Windows.Forms.CursorConverter.GetStandardValuesSupported(System.ComponentModel.ITypeDescriptorContext)">
      <summary>Determines if this object supports a standard set of values that can be picked from a list.</summary>
      <returns>Returns true if GetStandardValues should be called to find a common set of values the object supports.</returns>
      <param name="context">A type descriptor through which additional context may be provided. </param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="T:System.Windows.Forms.Cursors">
      <summary>Provides a collection of <see cref="T:System.Windows.Forms.Cursor" /> objects for use by a Windows Forms application.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.Windows.Forms.Cursors.AppStarting">
      <summary>Gets the cursor that appears when an application starts.</summary>
      <returns>The <see cref="T:System.Windows.Forms.Cursor" /> that represents the cursor that appears when an application starts.</returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="P:System.Windows.Forms.Cursors.Arrow">
      <summary>Gets the arrow cursor.</summary>
      <returns>The <see cref="T:System.Windows.Forms.Cursor" /> that represents the arrow cursor.</returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="P:System.Windows.Forms.Cursors.Cross">
      <summary>Gets the crosshair cursor.</summary>
      <returns>The <see cref="T:System.Windows.Forms.Cursor" /> that represents the crosshair cursor.</returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="P:System.Windows.Forms.Cursors.Default">
      <summary>Gets the default cursor, which is usually an arrow cursor.</summary>
      <returns>The <see cref="T:System.Windows.Forms.Cursor" /> that represents the default cursor.</returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="P:System.Windows.Forms.Cursors.Hand">
      <summary>Gets the hand cursor, typically used when hovering over a Web link.</summary>
      <returns>The <see cref="T:System.Windows.Forms.Cursor" /> that represents the hand cursor.</returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="P:System.Windows.Forms.Cursors.Help">
      <summary>Gets the Help cursor, which is a combination of an arrow and a question mark.</summary>
      <returns>The <see cref="T:System.Windows.Forms.Cursor" /> that represents the Help cursor.</returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="P:System.Windows.Forms.Cursors.HSplit">
      <summary>Gets the cursor that appears when the mouse is positioned over a horizontal splitter bar.</summary>
      <returns>The <see cref="T:System.Windows.Forms.Cursor" /> that represents the cursor that appears when the mouse is positioned over a horizontal splitter bar.</returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="P:System.Windows.Forms.Cursors.IBeam">
      <summary>Gets the I-beam cursor, which is used to show where the text cursor appears when the mouse is clicked.</summary>
      <returns>The <see cref="T:System.Windows.Forms.Cursor" /> that represents the I-beam cursor.</returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="P:System.Windows.Forms.Cursors.No">
      <summary>Gets the cursor that indicates that a particular region is invalid for the current operation.</summary>
      <returns>The <see cref="T:System.Windows.Forms.Cursor" /> that represents the cursor that indicates that a particular region is invalid for the current operation.</returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="P:System.Windows.Forms.Cursors.NoMove2D">
      <summary>Gets the cursor that appears during wheel operations when the mouse is not moving, but the window can be scrolled in both a horizontal and vertical direction.</summary>
      <returns>The <see cref="T:System.Windows.Forms.Cursor" /> that represents the cursor that appears during wheel operations when the mouse is not moving.</returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="P:System.Windows.Forms.Cursors.NoMoveHoriz">
      <summary>Gets the cursor that appears during wheel operations when the mouse is not moving, but the window can be scrolled in a horizontal direction.</summary>
      <returns>The <see cref="T:System.Windows.Forms.Cursor" /> that represents the cursor that appears during wheel operations when the mouse is not moving.</returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="P:System.Windows.Forms.Cursors.NoMoveVert">
      <summary>Gets the cursor that appears during wheel operations when the mouse is not moving, but the window can be scrolled in a vertical direction.</summary>
      <returns>The <see cref="T:System.Windows.Forms.Cursor" /> that represents the cursor that appears during wheel operations when the mouse is not moving.</returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="P:System.Windows.Forms.Cursors.PanEast">
      <summary>Gets the cursor that appears during wheel operations when the mouse is moving and the window is scrolling horizontally to the right.</summary>
      <returns>The <see cref="T:System.Windows.Forms.Cursor" /> that represents the cursor that appears during wheel operations when the mouse is moving and the window is scrolling horizontally to the right.</returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="P:System.Windows.Forms.Cursors.PanNE">
      <summary>Gets the cursor that appears during wheel operations when the mouse is moving and the window is scrolling horizontally and vertically upward and to the right.</summary>
      <returns>The <see cref="T:System.Windows.Forms.Cursor" /> that represents the cursor that appears during wheel operations when the mouse is moving and the window is scrolling horizontally and vertically upward and to the right.</returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="P:System.Windows.Forms.Cursors.PanNorth">
      <summary>Gets the cursor that appears during wheel operations when the mouse is moving and the window is scrolling vertically in an upward direction.</summary>
      <returns>The <see cref="T:System.Windows.Forms.Cursor" /> that represents the cursor that appears during wheel operations when the mouse is moving and the window is scrolling vertically in an upward direction.</returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="P:System.Windows.Forms.Cursors.PanNW">
      <summary>Gets the cursor that appears during wheel operations when the mouse is moving and the window is scrolling horizontally and vertically upward and to the left.</summary>
      <returns>The <see cref="T:System.Windows.Forms.Cursor" /> that represents the cursor that appears during wheel operations when the mouse is moving and the window is scrolling horizontally and vertically upward and to the left.</returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="P:System.Windows.Forms.Cursors.PanSE">
      <summary>Gets the cursor that appears during wheel operations when the mouse is moving and the window is scrolling horizontally and vertically downward and to the right.</summary>
      <returns>The <see cref="T:System.Windows.Forms.Cursor" /> that represents the cursor that appears during wheel operations when the mouse is moving and the window is scrolling horizontally and vertically downward and to the right.</returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="P:System.Windows.Forms.Cursors.PanSouth">
      <summary>Gets the cursor that appears during wheel operations when the mouse is moving and the window is scrolling vertically in a downward direction.</summary>
      <returns>The <see cref="T:System.Windows.Forms.Cursor" /> that represents the cursor that appears during wheel operations when the mouse is moving and the window is scrolling vertically in a downward direction.</returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="P:System.Windows.Forms.Cursors.PanSW">
      <summary>Gets the cursor that appears during wheel operations when the mouse is moving and the window is scrolling horizontally and vertically downward and to the left.</summary>
      <returns>The <see cref="T:System.Windows.Forms.Cursor" /> that represents the cursor that appears during wheel operations when the mouse is moving and the window is scrolling horizontally and vertically downward and to the left.</returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="P:System.Windows.Forms.Cursors.PanWest">
      <summary>Gets the cursor that appears during wheel operations when the mouse is moving and the window is scrolling horizontally to the left.</summary>
      <returns>The <see cref="T:System.Windows.Forms.Cursor" /> that represents the cursor that appears during wheel operations when the mouse is moving and the window is scrolling horizontally to the left.</returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="P:System.Windows.Forms.Cursors.SizeAll">
      <summary>Gets the four-headed sizing cursor, which consists of four joined arrows that point north, south, east, and west.</summary>
      <returns>The <see cref="T:System.Windows.Forms.Cursor" /> that represents the four-headed sizing cursor.</returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="P:System.Windows.Forms.Cursors.SizeNESW">
      <summary>Gets the two-headed diagonal (northeast/southwest) sizing cursor.</summary>
      <returns>The <see cref="T:System.Windows.Forms.Cursor" /> that represents two-headed diagonal (northeast/southwest) sizing cursor.</returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="P:System.Windows.Forms.Cursors.SizeNS">
      <summary>Gets the two-headed vertical (north/south) sizing cursor.</summary>
      <returns>The <see cref="T:System.Windows.Forms.Cursor" /> that represents the two-headed vertical (north/south) sizing cursor.</returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="P:System.Windows.Forms.Cursors.SizeNWSE">
      <summary>Gets the two-headed diagonal (northwest/southeast) sizing cursor.</summary>
      <returns>The <see cref="T:System.Windows.Forms.Cursor" /> that represents the two-headed diagonal (northwest/southeast) sizing cursor.</returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="P:System.Windows.Forms.Cursors.SizeWE">
      <summary>Gets the two-headed horizontal (west/east) sizing cursor.</summary>
      <returns>The <see cref="T:System.Windows.Forms.Cursor" /> that represents the two-headed horizontal (west/east) sizing cursor.</returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="P:System.Windows.Forms.Cursors.UpArrow">
      <summary>Gets the up arrow cursor, typically used to identify an insertion point.</summary>
      <returns>The <see cref="T:System.Windows.Forms.Cursor" /> that represents the up arrow cursor.</returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="P:System.Windows.Forms.Cursors.VSplit">
      <summary>Gets the cursor that appears when the mouse is positioned over a vertical splitter bar.</summary>
      <returns>The <see cref="T:System.Windows.Forms.Cursor" /> that represents the cursor that appears when the mouse is positioned over a vertical splitter bar.</returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="P:System.Windows.Forms.Cursors.WaitCursor">
      <summary>Gets the wait cursor, typically an hourglass shape.</summary>
      <returns>The <see cref="T:System.Windows.Forms.Cursor" /> that represents the wait cursor.</returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="T:System.Windows.Forms.DataFormats">
      <summary>Provides static, predefined <see cref="T:System.Windows.Forms.Clipboard" /> format names. Use them to identify the format of data that you store in an <see cref="T:System.Windows.Forms.IDataObject" />.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="F:System.Windows.Forms.DataFormats.Bitmap">
      <summary>Specifies a Windows bitmap format. This static field is read-only.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="F:System.Windows.Forms.DataFormats.CommaSeparatedValue">
      <summary>Specifies a comma-separated value (CSV) format, which is a common interchange format used by spreadsheets. This format is not used directly by Windows Forms. This static field is read-only.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="F:System.Windows.Forms.DataFormats.Dib">
      <summary>Specifies the Windows device-independent bitmap (DIB) format. This static field is read-only.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="F:System.Windows.Forms.DataFormats.Dif">
      <summary>Specifies the Windows Data Interchange Format (DIF), which Windows Forms does not directly use. This static field is read-only.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="F:System.Windows.Forms.DataFormats.EnhancedMetafile">
      <summary>Specifies the Windows enhanced metafile format. This static field is read-only.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="F:System.Windows.Forms.DataFormats.FileDrop">
      <summary>Specifies the Windows file drop format, which Windows Forms does not directly use. This static field is read-only.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Windows.Forms.DataFormats.GetFormat(System.Int32)">
      <summary>Returns a <see cref="T:System.Windows.Forms.DataFormats.Format" /> with the Windows Clipboard numeric ID and name for the specified ID.</summary>
      <returns>A <see cref="T:System.Windows.Forms.DataFormats.Format" /> that has the Windows Clipboard numeric ID and the name of the format.</returns>
      <param name="id">The format ID. </param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Windows.Forms.DataFormats.GetFormat(System.String)">
      <summary>Returns a <see cref="T:System.Windows.Forms.DataFormats.Format" /> with the Windows Clipboard numeric ID and name for the specified format.</summary>
      <returns>A <see cref="T:System.Windows.Forms.DataFormats.Format" /> that has the Windows Clipboard numeric ID and the name of the format.</returns>
      <param name="format">The format name. </param>
      <exception cref="T:System.ComponentModel.Win32Exception">Registering a new <see cref="T:System.Windows.Forms.Clipboard" /> format failed. </exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="F:System.Windows.Forms.DataFormats.Html">
      <summary>Specifies text consisting of HTML data. This static field is read-only.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="F:System.Windows.Forms.DataFormats.Locale">
      <summary>Specifies the Windows culture format, which Windows Forms does not directly use. This static field is read-only.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="F:System.Windows.Forms.DataFormats.MetafilePict">
      <summary>Specifies the Windows metafile format, which Windows Forms does not directly use. This static field is read-only.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="F:System.Windows.Forms.DataFormats.OemText">
      <summary>Specifies the standard Windows original equipment manufacturer (OEM) text format. This static field is read-only.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="F:System.Windows.Forms.DataFormats.Palette">
      <summary>Specifies the Windows palette format. This static field is read-only.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="F:System.Windows.Forms.DataFormats.PenData">
      <summary>Specifies the Windows pen data format, which consists of pen strokes for handwriting software; Windows Forms does not use this format. This static field is read-only.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="F:System.Windows.Forms.DataFormats.Riff">
      <summary>Specifies the Resource Interchange File Format (RIFF) audio format, which Windows Forms does not directly use. This static field is read-only.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="F:System.Windows.Forms.DataFormats.Rtf">
      <summary>Specifies text consisting of Rich Text Format (RTF) data. This static field is read-only.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="F:System.Windows.Forms.DataFormats.Serializable">
      <summary>Specifies a format that encapsulates any type of Windows Forms object. This static field is read-only.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="F:System.Windows.Forms.DataFormats.StringFormat">
      <summary>Specifies the Windows Forms string class format, which Windows Forms uses to store string objects. This static field is read-only.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="F:System.Windows.Forms.DataFormats.SymbolicLink">
      <summary>Specifies the Windows symbolic link format, which Windows Forms does not directly use. This static field is read-only.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="F:System.Windows.Forms.DataFormats.Text">
      <summary>Specifies the standard ANSI text format. This static field is read-only.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="F:System.Windows.Forms.DataFormats.Tiff">
      <summary>Specifies the Tagged Image File Format (TIFF), which Windows Forms does not directly use. This static field is read-only.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="F:System.Windows.Forms.DataFormats.UnicodeText">
      <summary>Specifies the standard Windows Unicode text format. This static field is read-only.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="F:System.Windows.Forms.DataFormats.WaveAudio">
      <summary>Specifies the wave audio format, which Windows Forms does not directly use. This static field is read-only.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="T:System.Windows.Forms.DataFormats.Format">
      <summary>Represents a Clipboard format type.</summary>
    </member>
    <member name="M:System.Windows.Forms.DataFormats.Format.#ctor(System.String,System.Int32)">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Forms.DataFormats.Format" /> class with a Boolean that indicates whether a Win32 handle is expected.</summary>
      <param name="name">The name of this format. </param>
      <param name="id">The ID number for this format. </param>
    </member>
    <member name="P:System.Windows.Forms.DataFormats.Format.Id">
      <summary>Gets the ID number for this format.</summary>
      <returns>The ID number for this format.</returns>
    </member>
    <member name="P:System.Windows.Forms.DataFormats.Format.Name">
      <summary>Gets the name of this format.</summary>
      <returns>The name of this format.</returns>
    </member>
    <member name="T:System.Windows.Forms.DataGrid">
      <summary>Displays ADO.NET data in a scrollable grid. The <see cref="T:System.Windows.Forms.DataGridView" /> control replaces and adds functionality to the <see cref="T:System.Windows.Forms.DataGrid" /> control; however, the <see cref="T:System.Windows.Forms.DataGrid" /> control is retained for both backward compatibility and future use, if you choose. </summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Windows.Forms.DataGrid.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Forms.DataGrid" /> class.</summary>
    </member>
    <member name="P:System.Windows.Forms.DataGrid.AllowNavigation">
      <summary>Gets or sets a value indicating whether navigation is allowed.</summary>
      <returns>true if navigation is allowed; otherwise, false. The default is true.</returns>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
        <IPermission class="System.Diagnostics.PerformanceCounterPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="E:System.Windows.Forms.DataGrid.AllowNavigationChanged">
      <summary>Occurs when the <see cref="P:System.Windows.Forms.DataGrid.AllowNavigation" /> property has changed.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="P:System.Windows.Forms.DataGrid.AllowSorting">
      <summary>Gets or sets a value indicating whether the grid can be resorted by clicking on a column header.</summary>
      <returns>true if columns can be sorted; otherwise, false.</returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="P:System.Windows.Forms.DataGrid.AlternatingBackColor">
      <summary>Gets or sets the background color of odd-numbered rows of the grid.</summary>
      <returns>A <see cref="T:System.Drawing.Color" /> that represents the alternating background color. The default is the system color for windows (<see cref="P:System.Drawing.SystemColors.Window" />).</returns>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="E:System.Windows.Forms.DataGrid.BackButtonClick">
      <summary>Occurs when the Back button on a child table is clicked.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="P:System.Windows.Forms.DataGrid.BackColor">
      <summary>Gets or sets the background color of even-numbered rows of the grid.</summary>
      <returns>A <see cref="T:System.Drawing.Color" /> that represents the color of rows in the grid. The default is the system color for windows (<see cref="P:System.Drawing.SystemColors.Window" />).</returns>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="P:System.Windows.Forms.DataGrid.BackgroundColor">
      <summary>Gets or sets the color of the non-row area of the grid.</summary>
      <returns>A <see cref="T:System.Drawing.Color" /> that represents the color of the grid's background. The default is the <see cref="P:System.Drawing.SystemColors.AppWorkspace" /> color.</returns>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="E:System.Windows.Forms.DataGrid.BackgroundColorChanged">
      <summary>Occurs when the <see cref="P:System.Windows.Forms.DataGrid.BackgroundColor" /> has changed.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="P:System.Windows.Forms.DataGrid.BackgroundImage">
      <summary>This member is not meaningful for this control.</summary>
      <returns>An <see cref="T:System.Drawing.Image" />.</returns>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="E:System.Windows.Forms.DataGrid.BackgroundImageChanged">
      <summary>Occurs when the value of the <see cref="P:System.Windows.Forms.DataGrid.BackgroundImage" /> property changes.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="P:System.Windows.Forms.DataGrid.BackgroundImageLayout">
      <summary>This member is not meaningful for this control.</summary>
      <returns>An <see cref="T:System.Windows.Forms.ImageLayout" /> value.</returns>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="E:System.Windows.Forms.DataGrid.BackgroundImageLayoutChanged">
      <summary>Occurs when the value of the <see cref="P:System.Windows.Forms.DataGrid.BackgroundImageLayout" /> property changes.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Windows.Forms.DataGrid.BeginEdit(System.Windows.Forms.DataGridColumnStyle,System.Int32)">
      <summary>Attempts to put the grid into a state where editing is allowed.</summary>
      <returns>true if the method is successful; otherwise, false.</returns>
      <param name="gridColumn">A <see cref="T:System.Windows.Forms.DataGridColumnStyle" /> to edit. </param>
      <param name="rowNumber">The number of the row to edit. </param>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
        <IPermission class="System.Diagnostics.PerformanceCounterPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:System.Windows.Forms.DataGrid.BeginInit">
      <summary>Begins the initialization of a <see cref="T:System.Windows.Forms.DataGrid" /> that is used on a form or used by another component. The initialization occurs at run time.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="P:System.Windows.Forms.DataGrid.BorderStyle">
      <summary>Gets or sets the grid's border style.</summary>
      <returns>One of the <see cref="T:System.Windows.Forms.BorderStyle" /> enumeration values. The default is FixedSingle.</returns>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="E:System.Windows.Forms.DataGrid.BorderStyleChanged">
      <summary>Occurs when the <see cref="P:System.Windows.Forms.DataGrid.BorderStyle" /> has changed.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Windows.Forms.DataGrid.CancelEditing">
      <summary>Cancels the current edit operation and rolls back all changes.</summary>
    </member>
    <member name="P:System.Windows.Forms.DataGrid.CaptionBackColor">
      <summary>Gets or sets the background color of the caption area.</summary>
      <returns>A <see cref="T:System.Drawing.Color" /> that represents the caption's background color. The default is <see cref="P:System.Drawing.SystemColors.ActiveCaption" /> color.</returns>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="P:System.Windows.Forms.DataGrid.CaptionFont">
      <summary>Gets or sets the font of the grid's caption.</summary>
      <returns>A <see cref="T:System.Drawing.Font" /> that represents the caption's font.</returns>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="P:System.Windows.Forms.DataGrid.CaptionForeColor">
      <summary>Gets or sets the foreground color of the caption area.</summary>
      <returns>A <see cref="T:System.Drawing.Color" /> that represents the foreground color of the caption area. The default is <see cref="P:System.Drawing.SystemColors.ActiveCaptionText" />.</returns>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="P:System.Windows.Forms.DataGrid.CaptionText">
      <summary>Gets or sets the text of the grid's window caption.</summary>
      <returns>A string to be displayed as the window caption of the grid. The default is an empty string ("").</returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="P:System.Windows.Forms.DataGrid.CaptionVisible">
      <summary>Gets or sets a value that indicates whether the grid's caption is visible.</summary>
      <returns>true if the caption is visible; otherwise, false. The default is true.</returns>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="E:System.Windows.Forms.DataGrid.CaptionVisibleChanged">
      <summary>Occurs when the <see cref="P:System.Windows.Forms.DataGrid.CaptionVisible" /> property has changed.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Windows.Forms.DataGrid.Collapse(System.Int32)">
      <summary>Collapses child relations, if any exist for all rows, or for a specified row.</summary>
      <param name="row">The number of the row to collapse. If set to -1, all rows are collapsed. </param>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
        <IPermission class="System.Diagnostics.PerformanceCounterPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="P:System.Windows.Forms.DataGrid.ColumnHeadersVisible">
      <summary>Gets or sets a value indicating whether the column headers of a table are visible.</summary>
      <returns>true if the column headers are visible; otherwise, false. The default is true.</returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Windows.Forms.DataGrid.ColumnStartedEditing(System.Drawing.Rectangle)">
      <summary>Informs the <see cref="T:System.Windows.Forms.DataGrid" /> control when the user begins to edit the column at the specified location.</summary>
      <param name="bounds">The <see cref="T:System.Drawing.Rectangle" /> that defines the location of the edited column. </param>
    </member>
    <member name="M:System.Windows.Forms.DataGrid.ColumnStartedEditing(System.Windows.Forms.Control)">
      <summary>Informs the <see cref="T:System.Windows.Forms.DataGrid" /> control when the user begins to edit a column using the specified control.</summary>
      <param name="editingControl">The <see cref="T:System.Windows.Forms.Control" /> used to edit the column. </param>
    </member>
    <member name="M:System.Windows.Forms.DataGrid.CreateAccessibilityInstance">
      <summary>Constructs a new instance of the accessibility object for this control.</summary>
      <returns>The <see cref="T:System.Windows.Forms.Control.ControlAccessibleObject" /> for this control.</returns>
    </member>
    <member name="M:System.Windows.Forms.DataGrid.CreateGridColumn(System.ComponentModel.PropertyDescriptor)">
      <summary>Creates a new <see cref="T:System.Windows.Forms.DataGridColumnStyle" /> with the specified <see cref="T:System.ComponentModel.PropertyDescriptor" />.</summary>
      <returns>The new <see cref="T:System.Windows.Forms.DataGridColumnStyle" />.</returns>
      <param name="prop">The <see cref="T:System.ComponentModel.PropertyDescriptor" /> to use for creating the grid column style. </param>
    </member>
    <member name="M:System.Windows.Forms.DataGrid.CreateGridColumn(System.ComponentModel.PropertyDescriptor,System.Boolean)">
      <summary>Creates a <see cref="T:System.Windows.Forms.DataGridColumnStyle" /> using the specified <see cref="T:System.ComponentModel.PropertyDescriptor" />.</summary>
      <returns>The new <see cref="T:System.Windows.Forms.DataGridColumnStyle" />.</returns>
      <param name="prop">The <see cref="T:System.ComponentModel.PropertyDescriptor" /> to use for creating the grid column style. </param>
      <param name="isDefault">true to set the column style as the default; otherwise, false. </param>
    </member>
    <member name="P:System.Windows.Forms.DataGrid.CurrentCell">
      <summary>Gets or sets which cell has the focus. Not available at design time.</summary>
      <returns>The <see cref="T:System.Windows.Forms.DataGridCell" /> with the focus.</returns>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
        <IPermission class="System.Diagnostics.PerformanceCounterPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="E:System.Windows.Forms.DataGrid.CurrentCellChanged">
      <summary>Occurs when the <see cref="P:System.Windows.Forms.DataGrid.CurrentCell" /> property has changed.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="P:System.Windows.Forms.DataGrid.CurrentRowIndex">
      <summary>Gets or sets index of the row that currently has focus.</summary>
      <returns>The zero-based index of the current row.</returns>
      <exception cref="T:System.Exception">There is no <see cref="T:System.Windows.Forms.CurrencyManager" />. </exception>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="P:System.Windows.Forms.DataGrid.Cursor">
      <summary>This member is not meaningful for this control.</summary>
      <returns>A <see cref="T:System.Windows.Forms.Cursor" />.</returns>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
        <IPermission class="System.Diagnostics.PerformanceCounterPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="E:System.Windows.Forms.DataGrid.CursorChanged">
      <summary>Occurs when the value of the <see cref="P:System.Windows.Forms.DataGrid.Cursor" /> property changes.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="P:System.Windows.Forms.DataGrid.DataMember">
      <summary>Gets or sets the specific list in a <see cref="P:System.Windows.Forms.DataGrid.DataSource" /> for which the <see cref="T:System.Windows.Forms.DataGrid" /> control displays a grid.</summary>
      <returns>A list in a <see cref="P:System.Windows.Forms.DataGrid.DataSource" />. The default is an empty string ("").</returns>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
        <IPermission class="System.Diagnostics.PerformanceCounterPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="P:System.Windows.Forms.DataGrid.DataSource">
      <summary>Gets or sets the data source that the grid is displaying data for.</summary>
      <returns>An object that functions as a data source.</returns>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
        <IPermission class="System.Diagnostics.PerformanceCounterPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="E:System.Windows.Forms.DataGrid.DataSourceChanged">
      <summary>Occurs when the <see cref="P:System.Windows.Forms.DataGrid.DataSource" /> property value has changed.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="P:System.Windows.Forms.DataGrid.DefaultSize">
      <summary>Gets the default size of the control.</summary>
      <returns>The default size of the control.</returns>
    </member>
    <member name="M:System.Windows.Forms.DataGrid.Dispose(System.Boolean)">
      <summary>Disposes of the resources (other than memory) used by the <see cref="T:System.Windows.Forms.DataGrid" />.</summary>
      <param name="disposing">true to release both managed and unmanaged resources; false to release only unmanaged resources. </param>
    </member>
    <member name="M:System.Windows.Forms.DataGrid.EndEdit(System.Windows.Forms.DataGridColumnStyle,System.Int32,System.Boolean)">
      <summary>Requests an end to an edit operation taking place on the <see cref="T:System.Windows.Forms.DataGrid" /> control.</summary>
      <returns>true if the editing operation ceases; otherwise, false.</returns>
      <param name="gridColumn">The <see cref="T:System.Windows.Forms.DataGridColumnStyle" /> to cease editing. </param>
      <param name="rowNumber">The number of the row to cease editing. </param>
      <param name="shouldAbort">Set to true if the current operation should be stopped. </param>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
        <IPermission class="System.Diagnostics.PerformanceCounterPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:System.Windows.Forms.DataGrid.EndInit">
      <summary>Ends the initialization of a <see cref="T:System.Windows.Forms.DataGrid" /> that is used on a form or used by another component. The initialization occurs at run time.</summary>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
        <IPermission class="System.Diagnostics.PerformanceCounterPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:System.Windows.Forms.DataGrid.Expand(System.Int32)">
      <summary>Displays child relations, if any exist, for all rows or a specific row.</summary>
      <param name="row">The number of the row to expand. If set to -1, all rows are expanded. </param>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
        <IPermission class="System.Diagnostics.PerformanceCounterPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="P:System.Windows.Forms.DataGrid.FirstVisibleColumn">
      <summary>Gets the index of the first visible column in a grid.</summary>
      <returns>The index of a <see cref="T:System.Windows.Forms.DataGridColumnStyle" />.</returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="P:System.Windows.Forms.DataGrid.FlatMode">
      <summary>Gets or sets a value indicating whether the grid displays in flat mode.</summary>
      <returns>true if the grid is displayed flat; otherwise, false. The default is false.</returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="E:System.Windows.Forms.DataGrid.FlatModeChanged">
      <summary>Occurs when the <see cref="P:System.Windows.Forms.DataGrid.FlatMode" /> has changed.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="P:System.Windows.Forms.DataGrid.ForeColor">
      <summary>Gets or sets the foreground color (typically the color of the text) property of the <see cref="T:System.Windows.Forms.DataGrid" /> control.</summary>
      <returns>A <see cref="T:System.Drawing.Color" /> that represents the foreground color. The default is <see cref="P:System.Drawing.SystemBrushes.WindowText" /> color.</returns>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:System.Windows.Forms.DataGrid.GetCellBounds(System.Int32,System.Int32)">
      <summary>Gets the <see cref="T:System.Drawing.Rectangle" /> of the cell specified by row and column number.</summary>
      <returns>A <see cref="T:System.Drawing.Rectangle" /> that defines the current cell's corners.</returns>
      <param name="row">The number of the cell's row. </param>
      <param name="col">The number of the cell's column. </param>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
        <IPermission class="System.Diagnostics.PerformanceCounterPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:System.Windows.Forms.DataGrid.GetCellBounds(System.Windows.Forms.DataGridCell)">
      <summary>Gets the <see cref="T:System.Drawing.Rectangle" /> of the cell specified by <see cref="T:System.Windows.Forms.DataGridCell" />.</summary>
      <returns>A <see cref="T:System.Drawing.Rectangle" /> that defines the current cell's corners.</returns>
      <param name="dgc">The <see cref="T:System.Windows.Forms.DataGridCell" /> to look up. </param>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
        <IPermission class="System.Diagnostics.PerformanceCounterPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:System.Windows.Forms.DataGrid.GetCurrentCellBounds">
      <summary>Gets a <see cref="T:System.Drawing.Rectangle" /> that specifies the four corners of the selected cell.</summary>
      <returns>A <see cref="T:System.Drawing.Rectangle" /> that defines the current cell's corners.</returns>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
        <IPermission class="System.Diagnostics.PerformanceCounterPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:System.Windows.Forms.DataGrid.GetOutputTextDelimiter">
      <summary>Gets the string that is the delimiter between columns when row contents are copied to the Clipboard.</summary>
      <returns>The string value "\t", which represents a tab used to separate columns in a row. </returns>
    </member>
    <member name="M:System.Windows.Forms.DataGrid.GridHScrolled(System.Object,System.Windows.Forms.ScrollEventArgs)">
      <summary>Listens for the scroll event of the horizontal scroll bar.</summary>
      <param name="sender">An <see cref="T:System.Object" /> that contains data about the control. </param>
      <param name="se">A <see cref="T:System.Windows.Forms.ScrollEventArgs" /> that contains the event data. </param>
    </member>
    <member name="P:System.Windows.Forms.DataGrid.GridLineColor">
      <summary>Gets or sets the color of the grid lines.</summary>
      <returns>A <see cref="T:System.Drawing.Color" /> that represents the color of the grid lines. The default is the system color for controls (<see cref="P:System.Drawing.SystemColors.Control" />).</returns>
      <exception cref="T:System.ArgumentException">The value is not set. </exception>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="P:System.Windows.Forms.DataGrid.GridLineStyle">
      <summary>Gets or sets the line style of the grid.</summary>
      <returns>One of the <see cref="T:System.Windows.Forms.DataGridLineStyle" /> values. The default is Solid.</returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Windows.Forms.DataGrid.GridVScrolled(System.Object,System.Windows.Forms.ScrollEventArgs)">
      <summary>Listens for the scroll event of the vertical scroll bar.</summary>
      <param name="sender">An <see cref="T:System.Object" /> that contains data about the control. </param>
      <param name="se">A <see cref="T:System.Windows.Forms.ScrollEventArgs" /> that contains the event data. </param>
    </member>
    <member name="P:System.Windows.Forms.DataGrid.HeaderBackColor">
      <summary>Gets or sets the background color of all row and column headers.</summary>
      <returns>A <see cref="T:System.Drawing.Color" /> that represents the background color of row and column headers. The default is the system color for controls, <see cref="P:System.Drawing.SystemColors.Control" />.</returns>
      <exception cref="T:System.ArgumentNullException">While trying to set the property, a Color.Empty was passed. </exception>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="P:System.Windows.Forms.DataGrid.HeaderFont">
      <summary>Gets or sets the font used for column headers.</summary>
      <returns>The <see cref="T:System.Drawing.Font" /> that represents the header text.</returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="P:System.Windows.Forms.DataGrid.HeaderForeColor">
      <summary>Gets or sets the foreground color of headers.</summary>
      <returns>A <see cref="T:System.Drawing.Color" /> that represents the foreground color of the grid's column headers, including the column header text and the plus/minus glyphs. The default is <see cref="P:System.Drawing.SystemColors.ControlText" /> color.</returns>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:System.Windows.Forms.DataGrid.HitTest(System.Drawing.Point)">
      <summary>Gets information, such as row and column number of a clicked point on the grid, about the grid using a specific <see cref="T:System.Drawing.Point" />.</summary>
      <returns>A <see cref="T:System.Windows.Forms.DataGrid.HitTestInfo" /> that contains specific information about the grid.</returns>
      <param name="position">A <see cref="T:System.Drawing.Point" /> that represents single x,y coordinate. </param>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
        <IPermission class="System.Diagnostics.PerformanceCounterPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:System.Windows.Forms.DataGrid.HitTest(System.Int32,System.Int32)">
      <summary>Gets information, such as row and column number of a clicked point on the grid, using the x and y coordinate passed to the method.</summary>
      <returns>A <see cref="T:System.Windows.Forms.DataGrid.HitTestInfo" /> that contains information about the clicked part of the grid.</returns>
      <param name="x">The horizontal position of the coordinate. </param>
      <param name="y">The vertical position of the coordinate. </param>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
        <IPermission class="System.Diagnostics.PerformanceCounterPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="P:System.Windows.Forms.DataGrid.HorizScrollBar">
      <summary>Gets the horizontal scroll bar for the grid.</summary>
      <returns>The <see cref="T:System.Windows.Forms.ScrollBar" /> for the grid.</returns>
    </member>
    <member name="M:System.Windows.Forms.DataGrid.IsExpanded(System.Int32)">
      <summary>Gets a value that indicates whether the node of a specified row is expanded or collapsed.</summary>
      <returns>true if the node is expanded; otherwise, false.</returns>
      <param name="rowNumber">The number of the row in question. </param>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
        <IPermission class="System.Diagnostics.PerformanceCounterPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:System.Windows.Forms.DataGrid.IsSelected(System.Int32)">
      <summary>Gets a value indicating whether a specified row is selected.</summary>
      <returns>true if the row is selected; otherwise, false.</returns>
      <param name="row">The number of the row you are interested in. </param>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
        <IPermission class="System.Diagnostics.PerformanceCounterPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="P:System.Windows.Forms.DataGrid.Item(System.Int32,System.Int32)">
      <summary>Gets or sets the value of the cell at the specified the row and column.</summary>
      <returns>The value, typed as <see cref="T:System.Object" />, of the cell.</returns>
      <param name="rowIndex">The zero-based index of the row containing the value. </param>
      <param name="columnIndex">The zero-based index of the column containing the value. </param>
      <exception cref="T:System.ArgumentOutOfRangeException">While getting or setting, the <paramref name="rowIndex" /> is out of range.While getting or setting, the <paramref name="columnIndex" /> is out of range. </exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="P:System.Windows.Forms.DataGrid.Item(System.Windows.Forms.DataGridCell)">
      <summary>Gets or sets the value of a specified <see cref="T:System.Windows.Forms.DataGridCell" />.</summary>
      <returns>The value, typed as <see cref="T:System.Object" />, of the cell.</returns>
      <param name="cell">A <see cref="T:System.Windows.Forms.DataGridCell" /> that represents a cell in the grid. </param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="P:System.Windows.Forms.DataGrid.LinkColor">
      <summary>Gets or sets the color of the text that you can click to navigate to a child table.</summary>
      <returns>A <see cref="T:System.Drawing.Color" /> that represents the color of text that is clicked to navigate to a child table. The default is <see cref="P:System.Drawing.SystemColors.HotTrack" />.</returns>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="P:System.Windows.Forms.DataGrid.LinkHoverColor">
      <summary>This member is not meaningful for this control.</summary>
      <returns>A <see cref="T:System.Drawing.Color" />.</returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="P:System.Windows.Forms.DataGrid.ListManager">
      <summary>Gets the <see cref="T:System.Windows.Forms.CurrencyManager" /> for this <see cref="T:System.Windows.Forms.DataGrid" /> control.</summary>
      <returns>The <see cref="T:System.Windows.Forms.CurrencyManager" /> for this <see cref="T:System.Windows.Forms.DataGrid" /> control.</returns>
    </member>
    <member name="E:System.Windows.Forms.DataGrid.Navigate">
      <summary>Occurs when the user navigates to a new table.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Windows.Forms.DataGrid.NavigateBack">
      <summary>Navigates back to the table previously displayed in the grid.</summary>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
        <IPermission class="System.Diagnostics.PerformanceCounterPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:System.Windows.Forms.DataGrid.NavigateTo(System.Int32,System.String)">
      <summary>Navigates to the table specified by row and relation name.</summary>
      <param name="rowNumber">The number of the row to navigate to. </param>
      <param name="relationName">The name of the child relation to navigate to. </param>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
        <IPermission class="System.Diagnostics.PerformanceCounterPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:System.Windows.Forms.DataGrid.OnAllowNavigationChanged(System.EventArgs)">
      <summary>Raises the <see cref="E:System.Windows.Forms.DataGrid.AllowNavigationChanged" /> event.</summary>
      <param name="e">An <see cref="T:System.EventArgs" /> that contains the event data. </param>
    </member>
    <member name="M:System.Windows.Forms.DataGrid.OnBackButtonClicked(System.Object,System.EventArgs)">
      <summary>Listens for the caption's back button clicked event.</summary>
      <param name="sender">An <see cref="T:System.Object" /> that contains data about the control. </param>
      <param name="e">An <see cref="T:System.EventArgs" /> that contains data about the event. </param>
    </member>
    <member name="M:System.Windows.Forms.DataGrid.OnBackColorChanged(System.EventArgs)">
      <summary>Raises the <see cref="E:System.Windows.Forms.Control.BackColorChanged" /> event.</summary>
      <param name="e">An <see cref="T:System.EventArgs" /> that contains the event data. </param>
    </member>
    <member name="M:System.Windows.Forms.DataGrid.OnBackgroundColorChanged(System.EventArgs)">
      <summary>Raises the <see cref="E:System.Windows.Forms.DataGrid.BackgroundColorChanged" /> event.</summary>
      <param name="e">An <see cref="T:System.EventArgs" /> that contains the event data. </param>
    </member>
    <member name="M:System.Windows.Forms.DataGrid.OnBindingContextChanged(System.EventArgs)">
      <summary>Raises the <see cref="E:System.Windows.Forms.Control.BindingContextChanged" /> event.</summary>
      <param name="e">An <see cref="T:System.EventArgs" /> that contains the event data. </param>
    </member>
    <member name="M:System.Windows.Forms.DataGrid.OnBorderStyleChanged(System.EventArgs)">
      <summary>Raises the <see cref="E:System.Windows.Forms.DataGrid.BorderStyleChanged" /> event.</summary>
      <param name="e">An <see cref="T:System.EventArgs" /> that contains the event data. </param>
    </member>
    <member name="M:System.Windows.Forms.DataGrid.OnCaptionVisibleChanged(System.EventArgs)">
      <summary>Raises the <see cref="E:System.Windows.Forms.DataGrid.CaptionVisibleChanged" /> event.</summary>
      <param name="e">An <see cref="T:System.EventArgs" /> that contains the event data. </param>
    </member>
    <member name="M:System.Windows.Forms.DataGrid.OnCurrentCellChanged(System.EventArgs)">
      <summary>Raises the <see cref="E:System.Windows.Forms.DataGrid.CurrentCellChanged" /> event.</summary>
      <param name="e">An <see cref="T:System.EventArgs" /> that contains the event data. </param>
    </member>
    <member name="M:System.Windows.Forms.DataGrid.OnDataSourceChanged(System.EventArgs)">
      <summary>Raises the <see cref="E:System.Windows.Forms.DataGrid.DataSourceChanged" /> event.</summary>
      <param name="e">An <see cref="T:System.EventArgs" /> that contains the event data. </param>
    </member>
    <member name="M:System.Windows.Forms.DataGrid.OnEnter(System.EventArgs)">
      <summary>Raises the <see cref="E:System.Windows.Forms.Control.Enter" /> event.</summary>
      <param name="e">An <see cref="T:System.EventArgs" /> that contains the event data. </param>
    </member>
    <member name="M:System.Windows.Forms.DataGrid.OnFlatModeChanged(System.EventArgs)">
      <summary>Raises the <see cref="E:System.Windows.Forms.DataGrid.FlatModeChanged" /> event.</summary>
      <param name="e">An <see cref="T:System.EventArgs" /> that contains the event data. </param>
    </member>
    <member name="M:System.Windows.Forms.DataGrid.OnFontChanged(System.EventArgs)">
      <summary>Raises the <see cref="E:System.Windows.Forms.Control.FontChanged" /> event.</summary>
      <param name="e">An <see cref="T:System.EventArgs" /> that contains the event data. </param>
    </member>
    <member name="M:System.Windows.Forms.DataGrid.OnForeColorChanged(System.EventArgs)">
      <summary>Raises the <see cref="E:System.Windows.Forms.Control.ForeColorChanged" /> event.</summary>
      <param name="e">An <see cref="T:System.EventArgs" /> that contains the event data. </param>
    </member>
    <member name="M:System.Windows.Forms.DataGrid.OnHandleCreated(System.EventArgs)">
      <summary>Raises the <see cref="M:System.Windows.Forms.Control.CreateHandle" /> event.</summary>
      <param name="e">An <see cref="T:System.EventArgs" /> that contains the event data. </param>
    </member>
    <member name="M:System.Windows.Forms.DataGrid.OnHandleDestroyed(System.EventArgs)">
      <summary>Raises the <see cref="M:System.Windows.Forms.Control.DestroyHandle" /> event.</summary>
      <param name="e">An <see cref="T:System.EventArgs" /> containing the event data. </param>
    </member>
    <member name="M:System.Windows.Forms.DataGrid.OnKeyDown(System.Windows.Forms.KeyEventArgs)">
      <summary>Raises the <see cref="E:System.Windows.Forms.Control.KeyDown" /> event.</summary>
      <param name="ke">A <see cref="T:System.Windows.Forms.KeyEventArgs" /> that provides data about the <see cref="M:System.Windows.Forms.Control.OnKeyDown(System.Windows.Forms.KeyEventArgs)" /> event. </param>
    </member>
    <member name="M:System.Windows.Forms.DataGrid.OnKeyPress(System.Windows.Forms.KeyPressEventArgs)">
      <summary>Raises the <see cref="E:System.Windows.Forms.Control.KeyPress" /> event.</summary>
      <param name="kpe">A <see cref="T:System.Windows.Forms.KeyPressEventArgs" /> that contains data about the <see cref="M:System.Windows.Forms.Control.OnKeyPress(System.Windows.Forms.KeyPressEventArgs)" /> event </param>
    </member>
    <member name="M:System.Windows.Forms.DataGrid.OnLayout(System.Windows.Forms.LayoutEventArgs)">
      <summary>Raises the <see cref="E:System.Windows.Forms.Control.Layout" /> event, which repositions controls and updates scroll bars.</summary>
      <param name="levent">A <see cref="T:System.Windows.Forms.LayoutEventArgs" /> that contains the event data. </param>
    </member>
    <member name="M:System.Windows.Forms.DataGrid.OnLeave(System.EventArgs)">
      <summary>Raises the <see cref="E:System.Windows.Forms.Control.Leave" /> event.</summary>
      <param name="e">An <see cref="T:System.EventArgs" /> that contains the event data. </param>
    </member>
    <member name="M:System.Windows.Forms.DataGrid.OnMouseDown(System.Windows.Forms.MouseEventArgs)">
      <summary>Raises the <see cref="E:System.Windows.Forms.Control.MouseDown" /> event.</summary>
      <param name="e">A <see cref="T:System.Windows.Forms.MouseEventArgs" /> that contains data about the <see cref="M:System.Windows.Forms.Control.OnMouseDown(System.Windows.Forms.MouseEventArgs)" /> event. </param>
    </member>
    <member name="M:System.Windows.Forms.DataGrid.OnMouseLeave(System.EventArgs)">
      <summary>Creates the <see cref="E:System.Windows.Forms.Control.MouseLeave" /> event.</summary>
      <param name="e">An <see cref="T:System.EventArgs" /> that contains data about the <see cref="M:System.Windows.Forms.Control.OnMouseLeave(System.EventArgs)" /> event. </param>
    </member>
    <member name="M:System.Windows.Forms.DataGrid.OnMouseMove(System.Windows.Forms.MouseEventArgs)">
      <summary>Raises the <see cref="E:System.Windows.Forms.Control.MouseMove" /> event.</summary>
      <param name="e">A <see cref="T:System.Windows.Forms.MouseEventArgs" /> that contains data about the <see cref="M:System.Windows.Forms.Control.OnMouseMove(System.Windows.Forms.MouseEventArgs)" /> event. </param>
    </member>
    <member name="M:System.Windows.Forms.DataGrid.OnMouseUp(System.Windows.Forms.MouseEventArgs)">
      <summary>Raises the <see cref="E:System.Windows.Forms.Control.MouseUp" /> event.</summary>
      <param name="e">A <see cref="T:System.Windows.Forms.MouseEventArgs" /> that contains data about the <see cref="M:System.Windows.Forms.Control.OnMouseUp(System.Windows.Forms.MouseEventArgs)" /> event. </param>
    </member>
    <member name="M:System.Windows.Forms.DataGrid.OnMouseWheel(System.Windows.Forms.MouseEventArgs)">
      <summary>Raises the <see cref="E:System.Windows.Forms.Control.MouseWheel" /> event.</summary>
      <param name="e">A <see cref="T:System.Windows.Forms.MouseEventArgs" /> that contains data about the <see cref="M:System.Windows.Forms.Control.OnMouseUp(System.Windows.Forms.MouseEventArgs)" /> event. </param>
    </member>
    <member name="M:System.Windows.Forms.DataGrid.OnNavigate(System.Windows.Forms.NavigateEventArgs)">
      <summary>Raises the <see cref="E:System.Windows.Forms.DataGrid.Navigate" /> event.</summary>
      <param name="e">A <see cref="T:System.Windows.Forms.NavigateEventArgs" /> that contains the event data. </param>
    </member>
    <member name="M:System.Windows.Forms.DataGrid.OnPaint(System.Windows.Forms.PaintEventArgs)">
      <summary>Raises the <see cref="E:System.Windows.Forms.Control.Paint" /> event.</summary>
      <param name="pe">A <see cref="T:System.Windows.Forms.PaintEventArgs" /> which contains data about the event. </param>
    </member>
    <member name="M:System.Windows.Forms.DataGrid.OnPaintBackground(System.Windows.Forms.PaintEventArgs)">
      <summary>Overrides <see cref="M:System.Windows.Forms.Control.OnPaintBackground(System.Windows.Forms.PaintEventArgs)" /> to prevent painting the background of the <see cref="T:System.Windows.Forms.DataGrid" /> control.</summary>
      <param name="ebe">A <see cref="T:System.Windows.Forms.PaintEventArgs" /> that contains information about the control to paint. </param>
    </member>
    <member name="M:System.Windows.Forms.DataGrid.OnParentRowsLabelStyleChanged(System.EventArgs)">
      <summary>Raises the <see cref="E:System.Windows.Forms.DataGrid.ParentRowsLabelStyleChanged" /> event.</summary>
      <param name="e">An <see cref="T:System.EventArgs" /> that contains the event data. </param>
    </member>
    <member name="M:System.Windows.Forms.DataGrid.OnParentRowsVisibleChanged(System.EventArgs)">
      <summary>Raises the <see cref="E:System.Windows.Forms.DataGrid.ParentRowsVisibleChanged" /> event.</summary>
      <param name="e">An <see cref="T:System.EventArgs" /> that contains the event data. </param>
    </member>
    <member name="M:System.Windows.Forms.DataGrid.OnReadOnlyChanged(System.EventArgs)">
      <summary>Raises the <see cref="E:System.Windows.Forms.DataGrid.ReadOnlyChanged" /> event </summary>
      <param name="e">An <see cref="T:System.EventArgs" /> that contains the event data. </param>
    </member>
    <member name="M:System.Windows.Forms.DataGrid.OnResize(System.EventArgs)">
      <summary>Raises the <see cref="E:System.Windows.Forms.Control.Resize" /> event.</summary>
      <param name="e">An <see cref="T:System.EventArgs" /> that contains the event data. </param>
    </member>
    <member name="M:System.Windows.Forms.DataGrid.OnRowHeaderClick(System.EventArgs)">
      <summary>Raises the <see cref="E:System.Windows.Forms.DataGrid.RowHeaderClick" /> event.</summary>
      <param name="e">An <see cref="T:System.EventArgs" /> that contains the event data. </param>
    </member>
    <member name="M:System.Windows.Forms.DataGrid.OnScroll(System.EventArgs)">
      <summary>Raises the <see cref="E:System.Windows.Forms.DataGrid.Scroll" /> event.</summary>
      <param name="e">An <see cref="T:System.EventArgs" /> that contains the event data. </param>
    </member>
    <member name="M:System.Windows.Forms.DataGrid.OnShowParentDetailsButtonClicked(System.Object,System.EventArgs)">
      <summary>Raises the <see cref="E:System.Windows.Forms.DataGrid.ShowParentDetailsButtonClick" /> event.</summary>
      <param name="sender">The source of the event. </param>
      <param name="e">An <see cref="T:System.EventArgs" /> that contains the event data. </param>
    </member>
    <member name="P:System.Windows.Forms.DataGrid.ParentRowsBackColor">
      <summary>Gets or sets the background color of parent rows.</summary>
      <returns>A <see cref="T:System.Drawing.Color" /> that represents the color of parent rows. The default is the <see cref="P:System.Drawing.SystemColors.Control" /> color.</returns>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="P:System.Windows.Forms.DataGrid.ParentRowsForeColor">
      <summary>Gets or sets the foreground color of parent rows.</summary>
      <returns>A <see cref="T:System.Drawing.Color" /> that represents the foreground color of parent rows. The default is the <see cref="P:System.Drawing.SystemColors.WindowText" /> color.</returns>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="P:System.Windows.Forms.DataGrid.ParentRowsLabelStyle">
      <summary>Gets or sets the way parent row labels are displayed.</summary>
      <returns>One of the <see cref="T:System.Windows.Forms.DataGridParentRowsLabelStyle" /> values. The default is Both.</returns>
      <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">The enumerator was not valid. </exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="E:System.Windows.Forms.DataGrid.ParentRowsLabelStyleChanged">
      <summary>Occurs when the label style of the parent row is changed.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="P:System.Windows.Forms.DataGrid.ParentRowsVisible">
      <summary>Gets or sets a value indicating whether the parent rows of a table are visible.</summary>
      <returns>true if the parent rows are visible; otherwise, false. The default is true.</returns>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
        <IPermission class="System.Diagnostics.PerformanceCounterPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="E:System.Windows.Forms.DataGrid.ParentRowsVisibleChanged">
      <summary>Occurs when the <see cref="P:System.Windows.Forms.DataGrid.ParentRowsVisible" /> property value changes.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="P:System.Windows.Forms.DataGrid.PreferredColumnWidth">
      <summary>Gets or sets the default width of the grid columns in pixels.</summary>
      <returns>The default width (in pixels) of columns in the grid.</returns>
      <exception cref="T:System.ArgumentException">The property value is less than 0. </exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="P:System.Windows.Forms.DataGrid.PreferredRowHeight">
      <summary>Gets or sets the preferred row height for the <see cref="T:System.Windows.Forms.DataGrid" /> control.</summary>
      <returns>The height of a row.</returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Windows.Forms.DataGrid.ProcessDialogKey(System.Windows.Forms.Keys)">
      <summary>Gets or sets a value that indicates whether a key should be processed further.</summary>
      <returns>true, the key should be processed; otherwise, false.</returns>
      <param name="keyData">A <see cref="T:System.Windows.Forms.Keys" /> that contains data about the pressed key. </param>
    </member>
    <member name="M:System.Windows.Forms.DataGrid.ProcessGridKey(System.Windows.Forms.KeyEventArgs)">
      <summary>Processes keys for grid navigation.</summary>
      <returns>true, if the key was processed; otherwise false.</returns>
      <param name="ke">A <see cref="T:System.Windows.Forms.KeyEventArgs" /> that contains data about the key up or key down event. </param>
    </member>
    <member name="M:System.Windows.Forms.DataGrid.ProcessKeyPreview(System.Windows.Forms.Message@)">
      <summary>Previews a keyboard message and returns a value indicating if the key was consumed.</summary>
      <returns>true, if the key was consumed; otherwise, false.</returns>
      <param name="m">A <see cref="T:System.Windows.Forms.Message" /> that contains data about the event. The parameter is passed by reference. </param>
    </member>
    <member name="M:System.Windows.Forms.DataGrid.ProcessTabKey(System.Windows.Forms.Keys)">
      <summary>Gets a value indicating whether the Tab key should be processed.</summary>
      <returns>true if the TAB key should be processed; otherwise, false.</returns>
      <param name="keyData">A <see cref="T:System.Windows.Forms.Keys" /> that contains data about which the pressed key. </param>
    </member>
    <member name="P:System.Windows.Forms.DataGrid.ReadOnly">
      <summary>Gets or sets a value indicating whether the grid is in read-only mode.</summary>
      <returns>true if the grid is in read-only mode; otherwise, false. The default is false.</returns>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
        <IPermission class="System.Diagnostics.PerformanceCounterPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="E:System.Windows.Forms.DataGrid.ReadOnlyChanged">
      <summary>Occurs when the <see cref="P:System.Windows.Forms.DataGrid.ReadOnly" /> property value changes.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Windows.Forms.DataGrid.ResetAlternatingBackColor">
      <summary>Resets the <see cref="P:System.Windows.Forms.DataGrid.AlternatingBackColor" /> property to its default color.</summary>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:System.Windows.Forms.DataGrid.ResetBackColor">
      <summary>Resets the <see cref="P:System.Windows.Forms.DataGrid.BackColor" /> property to its default value.</summary>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:System.Windows.Forms.DataGrid.ResetForeColor">
      <summary>Resets the <see cref="P:System.Windows.Forms.DataGrid.ForeColor" /> property to its default value.</summary>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:System.Windows.Forms.DataGrid.ResetGridLineColor">
      <summary>Resets the <see cref="P:System.Windows.Forms.DataGrid.GridLineColor" /> property to its default value.</summary>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:System.Windows.Forms.DataGrid.ResetHeaderBackColor">
      <summary>Resets the <see cref="P:System.Windows.Forms.DataGrid.HeaderBackColor" /> property to its default value.</summary>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:System.Windows.Forms.DataGrid.ResetHeaderFont">
      <summary>Resets the <see cref="P:System.Windows.Forms.DataGrid.HeaderFont" /> property to its default value.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Windows.Forms.DataGrid.ResetHeaderForeColor">
      <summary>Resets the <see cref="P:System.Windows.Forms.DataGrid.HeaderForeColor" /> property to its default value.</summary>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:System.Windows.Forms.DataGrid.ResetLinkColor">
      <summary>Resets the <see cref="P:System.Windows.Forms.DataGrid.LinkColor" /> property to its default value.</summary>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:System.Windows.Forms.DataGrid.ResetLinkHoverColor">
      <summary>Resets the <see cref="P:System.Windows.Forms.DataGrid.LinkHoverColor" /> property to its default value.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Windows.Forms.DataGrid.ResetSelection">
      <summary>Turns off selection for all rows that are selected.</summary>
    </member>
    <member name="M:System.Windows.Forms.DataGrid.ResetSelectionBackColor">
      <summary>Resets the <see cref="P:System.Windows.Forms.DataGrid.SelectionBackColor" /> property to its default value.</summary>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:System.Windows.Forms.DataGrid.ResetSelectionForeColor">
      <summary>Resets the <see cref="P:System.Windows.Forms.DataGrid.SelectionForeColor" /> property to its default value.</summary>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="E:System.Windows.Forms.DataGrid.RowHeaderClick">
      <summary>Occurs when a row header is clicked.</summary>
    </member>
    <member name="P:System.Windows.Forms.DataGrid.RowHeadersVisible">
      <summary>Gets or sets a value that specifies whether row headers are visible.</summary>
      <returns>true if row headers are visible; otherwise, false.</returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="P:System.Windows.Forms.DataGrid.RowHeaderWidth">
      <summary>Gets or sets the width of row headers.</summary>
      <returns>The width of row headers in the <see cref="T:System.Windows.Forms.DataGrid" />. The default is 35.</returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="E:System.Windows.Forms.DataGrid.Scroll">
      <summary>Occurs when the user scrolls the <see cref="T:System.Windows.Forms.DataGrid" /> control.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Windows.Forms.DataGrid.Select(System.Int32)">
      <summary>Selects a specified row.</summary>
      <param name="row">The index of the row to select. </param>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
        <IPermission class="System.Diagnostics.PerformanceCounterPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="P:System.Windows.Forms.DataGrid.SelectionBackColor">
      <summary>Gets or sets the background color of selected rows.</summary>
      <returns>A <see cref="T:System.Drawing.Color" /> that represents the background color of selected rows. The default is the <see cref="P:System.Drawing.SystemBrushes.ActiveCaption" /> color.</returns>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="P:System.Windows.Forms.DataGrid.SelectionForeColor">
      <summary>Gets or set the foreground color of selected rows.</summary>
      <returns>A <see cref="T:System.Drawing.Color" /> representing the foreground color of selected rows. The default is the <see cref="P:System.Drawing.SystemBrushes.ActiveCaptionText" /> color.</returns>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:System.Windows.Forms.DataGrid.SetDataBinding(System.Object,System.String)">
      <summary>Sets the <see cref="P:System.Windows.Forms.DataGrid.DataSource" /> and <see cref="P:System.Windows.Forms.DataGrid.DataMember" /> properties at run time.</summary>
      <param name="dataSource">The data source for the <see cref="T:System.Windows.Forms.DataGrid" /> control. </param>
      <param name="dataMember">The <see cref="P:System.Windows.Forms.DataGrid.DataMember" /> string that specifies the table to bind to within the object returned by the <see cref="P:System.Windows.Forms.DataGrid.DataSource" /> property. </param>
      <exception cref="T:System.ArgumentException">One or more of the arguments are invalid. </exception>
      <exception cref="T:System.ArgumentNullException">The <paramref name="dataSource" /> argument is null. </exception>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
        <IPermission class="System.Diagnostics.PerformanceCounterPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:System.Windows.Forms.DataGrid.ShouldSerializeAlternatingBackColor">
      <summary>Indicates whether the <see cref="P:System.Windows.Forms.DataGrid.AlternatingBackColor" /> property should be persisted.</summary>
      <returns>true if the property value has changed from its default; otherwise, false.</returns>
    </member>
    <member name="M:System.Windows.Forms.DataGrid.ShouldSerializeBackgroundColor">
      <summary>Indicates whether the <see cref="P:System.Windows.Forms.DataGrid.BackgroundColor" /> property should be persisted.</summary>
      <returns>true if the property value has changed from its default; otherwise, false.</returns>
    </member>
    <member name="M:System.Windows.Forms.DataGrid.ShouldSerializeCaptionBackColor">
      <summary>Gets a value indicating whether the <see cref="P:System.Windows.Forms.DataGrid.CaptionBackColor" /> property should be persisted.</summary>
      <returns>true if the property value has been changed from its default; otherwise, false.</returns>
    </member>
    <member name="M:System.Windows.Forms.DataGrid.ShouldSerializeCaptionForeColor">
      <summary>Gets a value indicating whether the <see cref="P:System.Windows.Forms.DataGrid.CaptionForeColor" /> property should be persisted.</summary>
      <returns>true if the property value has been changed from its default; otherwise, false.</returns>
    </member>
    <member name="M:System.Windows.Forms.DataGrid.ShouldSerializeGridLineColor">
      <summary>Indicates whether the <see cref="P:System.Windows.Forms.DataGrid.GridLineColor" /> property should be persisted.</summary>
      <returns>true if the property value has changed from its default; otherwise, false.</returns>
    </member>
    <member name="M:System.Windows.Forms.DataGrid.ShouldSerializeHeaderBackColor">
      <summary>Indicates whether the <see cref="P:System.Windows.Forms.DataGrid.HeaderBackColor" /> property should be persisted.</summary>
      <returns>true if the property value has changed from its default; otherwise, false.</returns>
    </member>
    <member name="M:System.Windows.Forms.DataGrid.ShouldSerializeHeaderFont">
      <summary>Indicates whether the <see cref="P:System.Windows.Forms.DataGrid.HeaderFont" /> property should be persisted.</summary>
      <returns>true if the property value has changed from its default; otherwise, false.</returns>
    </member>
    <member name="M:System.Windows.Forms.DataGrid.ShouldSerializeHeaderForeColor">
      <summary>Indicates whether the <see cref="P:System.Windows.Forms.DataGrid.HeaderForeColor" /> property should be persisted.</summary>
      <returns>true if the property value has changed from its default; otherwise, false.</returns>
    </member>
    <member name="M:System.Windows.Forms.DataGrid.ShouldSerializeLinkHoverColor">
      <summary>Indicates whether the <see cref="P:System.Windows.Forms.DataGrid.LinkHoverColor" /> property should be persisted.</summary>
      <returns>true if the property value has changed from its default; otherwise, false.</returns>
    </member>
    <member name="M:System.Windows.Forms.DataGrid.ShouldSerializeParentRowsBackColor">
      <summary>Indicates whether the <see cref="P:System.Windows.Forms.DataGrid.ParentRowsBackColor" /> property should be persisted.</summary>
      <returns>true if the property value has been changed from its default; otherwise, false.</returns>
    </member>
    <member name="M:System.Windows.Forms.DataGrid.ShouldSerializeParentRowsForeColor">
      <summary>Indicates whether the <see cref="P:System.Windows.Forms.DataGrid.ParentRowsForeColor" /> property should be persisted.</summary>
      <returns>true if the property value has been changed from its default; otherwise, false.</returns>
    </member>
    <member name="M:System.Windows.Forms.DataGrid.ShouldSerializePreferredRowHeight">
      <summary>Indicates whether the <see cref="P:System.Windows.Forms.DataGrid.PreferredRowHeight" /> property should be persisted.</summary>
      <returns>true if the property value has changed from its default; otherwise, false.</returns>
    </member>
    <member name="M:System.Windows.Forms.DataGrid.ShouldSerializeSelectionBackColor">
      <summary>Indicates whether the <see cref="P:System.Windows.Forms.DataGrid.SelectionBackColor" /> property should be persisted.</summary>
      <returns>true if the property value has changed from its default; otherwise, false.</returns>
    </member>
    <member name="M:System.Windows.Forms.DataGrid.ShouldSerializeSelectionForeColor">
      <summary>Indicates whether the <see cref="P:System.Windows.Forms.DataGrid.SelectionForeColor" /> property should be persisted.</summary>
      <returns>true if the property value has changed from its default; otherwise, false.</returns>
    </member>
    <member name="E:System.Windows.Forms.DataGrid.ShowParentDetailsButtonClick">
      <summary>Occurs when the ShowParentDetails button is clicked.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="P:System.Windows.Forms.DataGrid.Site">
      <returns>The <see cref="T:System.ComponentModel.ISite" /> associated with the <see cref="T:System.Windows.Forms.Control" />, if any.</returns>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
        <IPermission class="System.Diagnostics.PerformanceCounterPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:System.Windows.Forms.DataGrid.SubObjectsSiteChange(System.Boolean)">
      <summary>Adds or removes the <see cref="T:System.Windows.Forms.DataGridTableStyle" /> objects from the container that is associated with the <see cref="T:System.Windows.Forms.DataGrid" />.</summary>
      <param name="site">true to add the <see cref="T:System.Windows.Forms.DataGridTableStyle" /> objects to a container; false to remove them.</param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="P:System.Windows.Forms.DataGrid.TableStyles">
      <summary>Gets the collection of <see cref="T:System.Windows.Forms.DataGridTableStyle" /> objects for the grid.</summary>
      <returns>A <see cref="T:System.Windows.Forms.GridTableStylesCollection" /> that represents the collection of <see cref="T:System.Windows.Forms.DataGridTableStyle" /> objects.</returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="P:System.Windows.Forms.DataGrid.Text">
      <summary>This member is not meaningful for this control.</summary>
      <returns>A <see cref="T:System.String" />.</returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="E:System.Windows.Forms.DataGrid.TextChanged">
      <summary>Occurs when the value of the <see cref="P:System.Windows.Forms.DataGrid.Text" /> property changes.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Windows.Forms.DataGrid.UnSelect(System.Int32)">
      <summary>Unselects a specified row.</summary>
      <param name="row">The index of the row to deselect. </param>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
        <IPermission class="System.Diagnostics.PerformanceCounterPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="P:System.Windows.Forms.DataGrid.VertScrollBar">
      <summary>Gets the vertical scroll bar of the control.</summary>
      <returns>The vertical <see cref="T:System.Windows.Forms.ScrollBar" /> of the grid.</returns>
    </member>
    <member name="P:System.Windows.Forms.DataGrid.VisibleColumnCount">
      <summary>Gets the number of visible columns.</summary>
      <returns>The number of columns visible in the viewport. The viewport is the rectangular area through which the grid is visible. The size of the viewport depends on the size of the <see cref="T:System.Windows.Forms.DataGrid" /> control; if you allow users to resize the control, the viewport will also be affected.</returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="P:System.Windows.Forms.DataGrid.VisibleRowCount">
      <summary>Gets the number of rows visible.</summary>
      <returns>The number of rows visible in the viewport. The viewport is the rectangular area through which the grid is visible. The size of the viewport depends on the size of the <see cref="T:System.Windows.Forms.DataGrid" /> control; if you allow users to resize the control, the viewport will also be affected.</returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="T:System.Windows.Forms.DataGrid.HitTestInfo">
      <summary>Contains information about a part of the <see cref="T:System.Windows.Forms.DataGrid" /> at a specified coordinate. This class cannot be inherited.</summary>
    </member>
    <member name="P:System.Windows.Forms.DataGrid.HitTestInfo.Column">
      <summary>Gets the number of the column the user has clicked.</summary>
      <returns>The number of the column.</returns>
    </member>
    <member name="M:System.Windows.Forms.DataGrid.HitTestInfo.Equals(System.Object)">
      <summary>Indicates whether two objects are identical.</summary>
      <returns>true if the objects are equal; otherwise, false.</returns>
      <param name="value">The second object to compare, typed as <see cref="T:System.Object" />. </param>
    </member>
    <member name="M:System.Windows.Forms.DataGrid.HitTestInfo.GetHashCode">
      <summary>Gets the hash code for the <see cref="T:System.Windows.Forms.DataGrid.HitTestInfo" /> instance.</summary>
      <returns>The hash code for this instance.</returns>
    </member>
    <member name="F:System.Windows.Forms.DataGrid.HitTestInfo.Nowhere">
      <summary>Indicates that a coordinate corresponds to part of the <see cref="T:System.Windows.Forms.DataGrid" /> control that is not functioning.</summary>
    </member>
    <member name="P:System.Windows.Forms.DataGrid.HitTestInfo.Row">
      <summary>Gets the number of the row the user has clicked.</summary>
      <returns>The number of the clicked row.</returns>
    </member>
    <member name="M:System.Windows.Forms.DataGrid.HitTestInfo.ToString">
      <summary>Gets the type, row number, and column number.</summary>
      <returns>The type, row number, and column number.</returns>
    </member>
    <member name="P:System.Windows.Forms.DataGrid.HitTestInfo.Type">
      <summary>Gets the part of the <see cref="T:System.Windows.Forms.DataGrid" /> control, other than the row or column, that was clicked.</summary>
      <returns>One of the <see cref="T:System.Windows.Forms.DataGrid.HitTestType" /> enumerations.</returns>
    </member>
    <member name="T:System.Windows.Forms.DataGrid.HitTestType">
      <summary>Specifies the part of the <see cref="T:System.Windows.Forms.DataGrid" /> control the user has clicked.</summary>
    </member>
    <member name="F:System.Windows.Forms.DataGrid.HitTestType.None">
      <summary>The background area, visible when the control contains no table, few rows, or when a table is scrolled to its bottom.</summary>
    </member>
    <member name="F:System.Windows.Forms.DataGrid.HitTestType.Cell">
      <summary>A cell in the <see cref="T:System.Windows.Forms.DataGrid" /> control.</summary>
    </member>
    <member name="F:System.Windows.Forms.DataGrid.HitTestType.ColumnHeader">
      <summary>A column header in the <see cref="T:System.Windows.Forms.DataGrid" /> control.</summary>
    </member>
    <member name="F:System.Windows.Forms.DataGrid.HitTestType.RowHeader">
      <summary>A row header in the <see cref="T:System.Windows.Forms.DataGrid" /> control.</summary>
    </member>
    <member name="F:System.Windows.Forms.DataGrid.HitTestType.ColumnResize">
      <summary>The column border, which is the line between column headers. It can be dragged to resize a column's width.</summary>
    </member>
    <member name="F:System.Windows.Forms.DataGrid.HitTestType.RowResize">
      <summary>The row border, which is the line between grid row headers. It can be dragged to resize a row's height.</summary>
    </member>
    <member name="F:System.Windows.Forms.DataGrid.HitTestType.Caption">
      <summary>The caption of the <see cref="T:System.Windows.Forms.DataGrid" /> control.</summary>
    </member>
    <member name="F:System.Windows.Forms.DataGrid.HitTestType.ParentRows">
      <summary>The parent row section of the <see cref="T:System.Windows.Forms.DataGrid" /> control. The parent row displays information from or about the parent table of the currently displayed child table, such as the name of the parent table, column names and values of the parent record.</summary>
    </member>
    <member name="T:System.Windows.Forms.DataGridBoolColumn">
      <summary>Specifies a column in which each cell contains a check box for representing a Boolean value.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Windows.Forms.DataGridBoolColumn.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Forms.DataGridBoolColumn" /> class.</summary>
    </member>
    <member name="M:System.Windows.Forms.DataGridBoolColumn.#ctor(System.ComponentModel.PropertyDescriptor)">
      <summary>Initializes a new instance of a <see cref="T:System.Windows.Forms.DataGridBoolColumn" /> with the specified <see cref="T:System.ComponentModel.PropertyDescriptor" />.</summary>
      <param name="prop">The <see cref="T:System.ComponentModel.PropertyDescriptor" /> associated with the column. </param>
    </member>
    <member name="M:System.Windows.Forms.DataGridBoolColumn.#ctor(System.ComponentModel.PropertyDescriptor,System.Boolean)">
      <summary>Initializes a new instance of a <see cref="T:System.Windows.Forms.DataGridBoolColumn" /> with the specified <see cref="T:System.ComponentModel.PropertyDescriptor" />, and specifying whether the column style is a default column.</summary>
      <param name="prop">The <see cref="T:System.ComponentModel.PropertyDescriptor" /> associated with the column. </param>
      <param name="isDefault">true to specify the column as the default; otherwise, false. </param>
    </member>
    <member name="M:System.Windows.Forms.DataGridBoolColumn.Abort(System.Int32)">
      <summary>Initiates a request to interrupt an edit procedure.</summary>
      <param name="rowNum">The number of the row in which an operation is being interrupted. </param>
    </member>
    <member name="P:System.Windows.Forms.DataGridBoolColumn.AllowNull">
      <summary>Gets or sets a value indicating whether null values are allowed.</summary>
      <returns>true if null values are allowed, otherwise, false. The default is true.</returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="E:System.Windows.Forms.DataGridBoolColumn.AllowNullChanged">
      <summary>Occurs when the <see cref="P:System.Windows.Forms.DataGridBoolColumn.AllowNull" /> property is changed.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Windows.Forms.DataGridBoolColumn.Commit(System.Windows.Forms.CurrencyManager,System.Int32)">
      <summary>Initiates a request to complete an editing procedure.</summary>
      <returns>true if the editing procedure committed successfully; otherwise, false.</returns>
      <param name="dataSource">The <see cref="T:System.Data.DataView" /> of the edited column. </param>
      <param name="rowNum">The number of the edited row. </param>
    </member>
    <member name="M:System.Windows.Forms.DataGridBoolColumn.ConcedeFocus"></member>
    <member name="M:System.Windows.Forms.DataGridBoolColumn.Edit(System.Windows.Forms.CurrencyManager,System.Int32,System.Drawing.Rectangle,System.Boolean,System.String,System.Boolean)">
      <summary>Prepares the cell for editing a value.</summary>
      <param name="source">The <see cref="T:System.Data.DataView" /> of the edited cell. </param>
      <param name="rowNum">The row number of the edited cell. </param>
      <param name="bounds">The <see cref="T:System.Drawing.Rectangle" /> in which the control is to be sited. </param>
      <param name="readOnly">true if the value is read only; otherwise, false. </param>
      <param name="displayText">The text to display in the cell. </param>
      <param name="cellIsVisible">true to show the cell; otherwise, false. </param>
    </member>
    <member name="M:System.Windows.Forms.DataGridBoolColumn.EnterNullValue">
      <summary>Enters a <see cref="F:System.DBNull.Value" /> into the column.</summary>
      <exception cref="T:System.Exception">The <see cref="P:System.Windows.Forms.DataGridBoolColumn.AllowNull" /> property is set to false. </exception>
    </member>
    <member name="P:System.Windows.Forms.DataGridBoolColumn.FalseValue">
      <summary>Gets or sets the actual value used when setting the value of the column to false.</summary>
      <returns>The value, typed as <see cref="T:System.Object" />.</returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="E:System.Windows.Forms.DataGridBoolColumn.FalseValueChanged">
      <summary>Occurs when the <see cref="P:System.Windows.Forms.DataGridBoolColumn.FalseValue" /> property is changed.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Windows.Forms.DataGridBoolColumn.GetColumnValueAtRow(System.Windows.Forms.CurrencyManager,System.Int32)">
      <summary>Gets the value at the specified row.</summary>
      <returns>The value, typed as <see cref="T:System.Object" />.</returns>
      <param name="lm">The <see cref="T:System.Windows.Forms.CurrencyManager" /> for the column. </param>
      <param name="row">The row number. </param>
    </member>
    <member name="M:System.Windows.Forms.DataGridBoolColumn.GetMinimumHeight">
      <summary>Gets the height of a cell in a column.</summary>
      <returns>The height of the column. The default is 16.</returns>
    </member>
    <member name="M:System.Windows.Forms.DataGridBoolColumn.GetPreferredHeight(System.Drawing.Graphics,System.Object)">
      <summary>Gets the height used when resizing columns.</summary>
      <returns>The height used to automatically resize cells in a column.</returns>
      <param name="g">A <see cref="T:System.Drawing.Graphics" /> that draws on the screen. </param>
      <param name="value">An <see cref="T:System.Object" /> that contains the value to be drawn to the screen. </param>
    </member>
    <member name="M:System.Windows.Forms.DataGridBoolColumn.GetPreferredSize(System.Drawing.Graphics,System.Object)">
      <summary>Gets the optimum width and height of a cell given a specific value to contain.</summary>
      <returns>A <see cref="T:System.Drawing.Size" /> that contains the drawing information for the cell.</returns>
      <param name="g">A <see cref="T:System.Drawing.Graphics" /> that draws the cell. </param>
      <param name="value">The value that must fit in the cell. </param>
    </member>
    <member name="P:System.Windows.Forms.DataGridBoolColumn.NullValue">
      <summary>Gets or sets the actual value used when setting the value of the column to <see cref="F:System.DBNull.Value" />.</summary>
      <returns>The value, typed as <see cref="T:System.Object" />.</returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Windows.Forms.DataGridBoolColumn.Paint(System.Drawing.Graphics,System.Drawing.Rectangle,System.Windows.Forms.CurrencyManager,System.Int32)">
      <summary>Draws the <see cref="T:System.Windows.Forms.DataGridBoolColumn" /> with the given <see cref="T:System.Drawing.Graphics" />, <see cref="T:System.Drawing.Rectangle" /> and row number.</summary>
      <param name="g">The <see cref="T:System.Drawing.Graphics" /> to draw to. </param>
      <param name="bounds">The bounding <see cref="T:System.Drawing.Rectangle" /> to paint into. </param>
      <param name="source">The <see cref="T:System.Windows.Forms.CurrencyManager" /> of the column. </param>
      <param name="rowNum">The number of the row referred to in the underlying data. </param>
    </member>
    <member name="M:System.Windows.Forms.DataGridBoolColumn.Paint(System.Drawing.Graphics,System.Drawing.Rectangle,System.Windows.Forms.CurrencyManager,System.Int32,System.Boolean)">
      <summary>Draws the <see cref="T:System.Windows.Forms.DataGridBoolColumn" /> with the given <see cref="T:System.Drawing.Graphics" />, <see cref="T:System.Drawing.Rectangle" />, row number, and alignment settings.</summary>
      <param name="g">The <see cref="T:System.Drawing.Graphics" /> to draw to. </param>
      <param name="bounds">The bounding <see cref="T:System.Drawing.Rectangle" /> to paint into. </param>
      <param name="source">The <see cref="T:System.Windows.Forms.CurrencyManager" /> of the column. </param>
      <param name="rowNum">The number of the row in the underlying data table being referred to. </param>
      <param name="alignToRight">A value indicating whether to align the content to the right. true if the content is aligned to the right, otherwise, false. </param>
    </member>
    <member name="M:System.Windows.Forms.DataGridBoolColumn.Paint(System.Drawing.Graphics,System.Drawing.Rectangle,System.Windows.Forms.CurrencyManager,System.Int32,System.Drawing.Brush,System.Drawing.Brush,System.Boolean)">
      <summary>Draws the <see cref="T:System.Windows.Forms.DataGridBoolColumn" /> with the given <see cref="T:System.Drawing.Graphics" />, <see cref="T:System.Drawing.Rectangle" />, row number, <see cref="T:System.Drawing.Brush" />, and <see cref="T:System.Drawing.Color" />.</summary>
      <param name="g">The <see cref="T:System.Drawing.Graphics" /> to draw to. </param>
      <param name="bounds">The bounding <see cref="T:System.Drawing.Rectangle" /> to paint into. </param>
      <param name="source">The <see cref="T:System.Windows.Forms.CurrencyManager" /> of the column. </param>
      <param name="rowNum">The number of the row in the underlying data table being referred to. </param>
      <param name="backBrush">A <see cref="T:System.Drawing.Brush" /> used to paint the background color. </param>
      <param name="foreBrush">A <see cref="T:System.Drawing.Color" /> used to paint the foreground color. </param>
      <param name="alignToRight">A value indicating whether to align the content to the right. true if the content is aligned to the right, otherwise, false. </param>
    </member>
    <member name="M:System.Windows.Forms.DataGridBoolColumn.SetColumnValueAtRow(System.Windows.Forms.CurrencyManager,System.Int32,System.Object)">
      <summary>Sets the value of a specified row.</summary>
      <param name="lm">The <see cref="T:System.Windows.Forms.CurrencyManager" /> for the column. </param>
      <param name="row">The row number. </param>
      <param name="value">The value to set, typed as <see cref="T:System.Object" />. </param>
    </member>
    <member name="P:System.Windows.Forms.DataGridBoolColumn.TrueValue">
      <summary>Gets or sets the actual value used when setting the value of the column to true.</summary>
      <returns>The value, typed as <see cref="T:System.Object" />.</returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="E:System.Windows.Forms.DataGridBoolColumn.TrueValueChanged">
      <summary>Occurs when the <see cref="P:System.Windows.Forms.DataGridBoolColumn.TrueValue" /> property value is changed.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="T:System.Windows.Forms.DataGridCell">
      <summary>Identifies a cell in the grid.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Windows.Forms.DataGridCell.#ctor(System.Int32,System.Int32)">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Forms.DataGridCell" /> class.</summary>
      <param name="r">The number of a row in the <see cref="T:System.Windows.Forms.DataGrid" />. </param>
      <param name="c">The number of a column in the <see cref="T:System.Windows.Forms.DataGrid" />. </param>
    </member>
    <member name="P:System.Windows.Forms.DataGridCell.ColumnNumber">
      <summary>Gets or sets the number of a column in the <see cref="T:System.Windows.Forms.DataGrid" /> control.</summary>
      <returns>The number of the column.</returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Windows.Forms.DataGridCell.Equals(System.Object)">
      <summary>Gets a value indicating whether the <see cref="T:System.Windows.Forms.DataGridCell" /> is identical to a second <see cref="T:System.Windows.Forms.DataGridCell" />.</summary>
      <returns>true if the second object is identical to the first; otherwise, false.</returns>
      <param name="o">An object you are to comparing. </param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Windows.Forms.DataGridCell.GetHashCode">
      <summary>Gets a hash value that can be added to a <see cref="T:System.Collections.Hashtable" />.</summary>
      <returns>A number that uniquely identifies the <see cref="T:System.Windows.Forms.DataGridCell" /> in a <see cref="T:System.Collections.Hashtable" />.</returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="P:System.Windows.Forms.DataGridCell.RowNumber">
      <summary>Gets or sets the number of a row in the <see cref="T:System.Windows.Forms.DataGrid" /> control.</summary>
      <returns>The number of the row.</returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Windows.Forms.DataGridCell.ToString">
      <summary>Gets the row number and column number of the cell.</summary>
      <returns>A string containing the row number and column number.</returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="T:System.Windows.Forms.DataGridColumnStyle">
      <summary>Specifies the appearance, text formatting, and behavior of a <see cref="T:System.Windows.Forms.DataGrid" /> control column. This class is abstract.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Windows.Forms.DataGridColumnStyle.#ctor">
      <summary>In a derived class, initializes a new instance of the <see cref="T:System.Windows.Forms.DataGridColumnStyle" /> class.</summary>
    </member>
    <member name="M:System.Windows.Forms.DataGridColumnStyle.#ctor(System.ComponentModel.PropertyDescriptor)">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Forms.DataGridColumnStyle" /> class with the specified <see cref="T:System.ComponentModel.PropertyDescriptor" />.</summary>
      <param name="prop">A <see cref="T:System.ComponentModel.PropertyDescriptor" /> that provides the attributes for the column. </param>
    </member>
    <member name="M:System.Windows.Forms.DataGridColumnStyle.Abort(System.Int32)">
      <summary>When overridden in a derived class, initiates a request to interrupt an edit procedure.</summary>
      <param name="rowNum">The row number upon which an operation is being interrupted. </param>
    </member>
    <member name="P:System.Windows.Forms.DataGridColumnStyle.Alignment">
      <summary>Gets or sets the alignment of text in a column.</summary>
      <returns>One of the <see cref="T:System.Windows.Forms.HorizontalAlignment" /> values. The default is Left. Valid options include Left, Center, and Right.</returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="E:System.Windows.Forms.DataGridColumnStyle.AlignmentChanged">
      <summary>Occurs when the <see cref="P:System.Windows.Forms.DataGridColumnStyle.Alignment" /> property value changes.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Windows.Forms.DataGridColumnStyle.BeginUpdate">
      <summary>Suspends the painting of the column until the <see cref="M:System.Windows.Forms.DataGridColumnStyle.EndUpdate" /> method is called.</summary>
    </member>
    <member name="M:System.Windows.Forms.DataGridColumnStyle.CheckValidDataSource(System.Windows.Forms.CurrencyManager)">
      <summary>Throws an exception if the <see cref="T:System.Windows.Forms.DataGrid" /> does not have a valid data source, or if this column is not mapped to a valid property in the data source.</summary>
      <param name="value">A <see cref="T:System.Windows.Forms.CurrencyManager" /> to check. </param>
      <exception cref="T:System.ArgumentNullException">The <paramref name="value" /> is null. </exception>
      <exception cref="T:System.ApplicationException">The <see cref="T:System.ComponentModel.PropertyDescriptor" /> for this column is null. </exception>
    </member>
    <member name="M:System.Windows.Forms.DataGridColumnStyle.ColumnStartedEditing(System.Windows.Forms.Control)">
      <summary>Informs the <see cref="T:System.Windows.Forms.DataGrid" /> that the user has begun editing the column.</summary>
      <param name="editingControl">The <see cref="T:System.Windows.Forms.Control" /> that hosted by the column. </param>
    </member>
    <member name="M:System.Windows.Forms.DataGridColumnStyle.Commit(System.Windows.Forms.CurrencyManager,System.Int32)">
      <summary>When overridden in a derived class, initiates a request to complete an editing procedure.</summary>
      <returns>true if the editing procedure committed successfully; otherwise, false.</returns>
      <param name="dataSource">The <see cref="T:System.Windows.Forms.CurrencyManager" /> for the <see cref="T:System.Windows.Forms.DataGridColumnStyle" />. </param>
      <param name="rowNum">The number of the row being edited. </param>
    </member>
    <member name="M:System.Windows.Forms.DataGridColumnStyle.ConcedeFocus">
      <summary>Notifies a column that it must relinquish the focus to the control it is hosting.</summary>
    </member>
    <member name="M:System.Windows.Forms.DataGridColumnStyle.CreateHeaderAccessibleObject">
      <summary>Gets the <see cref="T:System.Windows.Forms.AccessibleObject" /> for the column.</summary>
      <returns>An <see cref="T:System.Windows.Forms.AccessibleObject" /> for the column.</returns>
    </member>
    <member name="P:System.Windows.Forms.DataGridColumnStyle.DataGridTableStyle">
      <summary>Gets the <see cref="T:System.Windows.Forms.DataGridTableStyle" /> for the column.</summary>
      <returns>The <see cref="P:System.Windows.Forms.DataGridColumnStyle.DataGridTableStyle" /> that contains the current <see cref="T:System.Windows.Forms.DataGridColumnStyle" />.</returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Windows.Forms.DataGridColumnStyle.Edit(System.Windows.Forms.CurrencyManager,System.Int32,System.Drawing.Rectangle,System.Boolean)">
      <summary>Prepares a cell for editing.</summary>
      <param name="source">The <see cref="T:System.Windows.Forms.CurrencyManager" /> for the <see cref="T:System.Windows.Forms.DataGridColumnStyle" />. </param>
      <param name="rowNum">The row number to edit. </param>
      <param name="bounds">The bounding <see cref="T:System.Drawing.Rectangle" /> in which the control is to be sited. </param>
      <param name="readOnly">A value indicating whether the column is a read-only. true if the value is read-only; otherwise, false. </param>
    </member>
    <member name="M:System.Windows.Forms.DataGridColumnStyle.Edit(System.Windows.Forms.CurrencyManager,System.Int32,System.Drawing.Rectangle,System.Boolean,System.String)">
      <summary>Prepares the cell for editing using the specified <see cref="T:System.Windows.Forms.CurrencyManager" />, row number, and <see cref="T:System.Drawing.Rectangle" /> parameters.</summary>
      <param name="source">The <see cref="T:System.Windows.Forms.CurrencyManager" /> for the <see cref="T:System.Windows.Forms.DataGridColumnStyle" />. </param>
      <param name="rowNum">The row number in this column which is being edited. </param>
      <param name="bounds">The <see cref="T:System.Drawing.Rectangle" /> in which the control is to be sited. </param>
      <param name="readOnly">A value indicating whether the column is a read-only. true if the value is read-only; otherwise, false. </param>
      <param name="displayText">The text to display in the control. </param>
    </member>
    <member name="M:System.Windows.Forms.DataGridColumnStyle.Edit(System.Windows.Forms.CurrencyManager,System.Int32,System.Drawing.Rectangle,System.Boolean,System.String,System.Boolean)">
      <summary>When overridden in a deriving class, prepares a cell for editing.</summary>
      <param name="source">The <see cref="T:System.Windows.Forms.CurrencyManager" /> for the <see cref="T:System.Windows.Forms.DataGridColumnStyle" />. </param>
      <param name="rowNum">The row number in this column which is being edited. </param>
      <param name="bounds">The <see cref="T:System.Drawing.Rectangle" /> in which the control is to be sited. </param>
      <param name="readOnly">A value indicating whether the column is a read-only. true if the value is read-only; otherwise, false. </param>
      <param name="displayText">The text to display in the control. </param>
      <param name="cellIsVisible">A value indicating whether the cell is visible. true if the cell is visible; otherwise, false. </param>
    </member>
    <member name="M:System.Windows.Forms.DataGridColumnStyle.EndUpdate">
      <summary>Resumes the painting of columns suspended by calling the <see cref="M:System.Windows.Forms.DataGridColumnStyle.BeginUpdate" /> method.</summary>
    </member>
    <member name="M:System.Windows.Forms.DataGridColumnStyle.EnterNullValue">
      <summary>Enters a <see cref="F:System.DBNull.Value" /> into the column.</summary>
    </member>
    <member name="E:System.Windows.Forms.DataGridColumnStyle.FontChanged">
      <summary>Occurs when the column's font changes.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="P:System.Windows.Forms.DataGridColumnStyle.FontHeight">
      <summary>Gets the height of the column's font.</summary>
      <returns>The height of the font, in pixels. If no font height has been set, the property returns the <see cref="T:System.Windows.Forms.DataGrid" /> control's font height; if that property hasn't been set, the default font height value for the <see cref="T:System.Windows.Forms.DataGrid" /> control is returned.</returns>
    </member>
    <member name="M:System.Windows.Forms.DataGridColumnStyle.GetColumnValueAtRow(System.Windows.Forms.CurrencyManager,System.Int32)">
      <summary>Gets the value in the specified row from the specified <see cref="T:System.Windows.Forms.CurrencyManager" />.</summary>
      <returns>An <see cref="T:System.Object" /> containing the value.</returns>
      <param name="source">The <see cref="T:System.Windows.Forms.CurrencyManager" /> containing the data. </param>
      <param name="rowNum">The row number containing the data. </param>
      <exception cref="T:System.ApplicationException">The <see cref="T:System.Data.DataColumn" /> for this <see cref="T:System.Windows.Forms.DataGridColumnStyle" /> hasn't been set yet. </exception>
    </member>
    <member name="M:System.Windows.Forms.DataGridColumnStyle.GetMinimumHeight">
      <summary>When overridden in a derived class, gets the minimum height of a row.</summary>
      <returns>The minimum height of a row.</returns>
    </member>
    <member name="M:System.Windows.Forms.DataGridColumnStyle.GetPreferredHeight(System.Drawing.Graphics,System.Object)">
      <summary>When overridden in a derived class, gets the height used for automatically resizing columns.</summary>
      <returns>The height used for auto resizing a cell.</returns>
      <param name="g">A <see cref="T:System.Drawing.Graphics" /> object. </param>
      <param name="value">An object value for which you want to know the screen height and width. </param>
    </member>
    <member name="M:System.Windows.Forms.DataGridColumnStyle.GetPreferredSize(System.Drawing.Graphics,System.Object)">
      <summary>When overridden in a derived class, gets the width and height of the specified value. The width and height are used when the user navigates to <see cref="T:System.Windows.Forms.DataGridTableStyle" /> using the <see cref="T:System.Windows.Forms.DataGridColumnStyle" />.</summary>
      <returns>A <see cref="T:System.Drawing.Size" /> that contains the dimensions of the cell.</returns>
      <param name="g">A <see cref="T:System.Drawing.Graphics" /> object. </param>
      <param name="value">An object value for which you want to know the screen height and width. </param>
    </member>
    <member name="P:System.Windows.Forms.DataGridColumnStyle.HeaderAccessibleObject">
      <summary>Gets the <see cref="T:System.Windows.Forms.AccessibleObject" /> for the column.</summary>
      <returns>An <see cref="T:System.Windows.Forms.AccessibleObject" /> for the column.</returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="P:System.Windows.Forms.DataGridColumnStyle.HeaderText">
      <summary>Gets or sets the text of the column header.</summary>
      <returns>A string that is displayed as the column header. If it is created by the <see cref="T:System.Windows.Forms.DataGrid" />, the default value is the name of the <see cref="T:System.ComponentModel.PropertyDescriptor" /> used to create the column. If it is created by the user, the default is an empty string ("").</returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="E:System.Windows.Forms.DataGridColumnStyle.HeaderTextChanged">
      <summary>Occurs when the <see cref="P:System.Windows.Forms.DataGridColumnStyle.HeaderText" /> property value changes.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Windows.Forms.DataGridColumnStyle.Invalidate">
      <summary>Redraws the column and causes a paint message to be sent to the control.</summary>
    </member>
    <member name="P:System.Windows.Forms.DataGridColumnStyle.MappingName">
      <summary>Gets or sets the name of the data member to map the column style to.</summary>
      <returns>The name of the data member to map the column style to.</returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="E:System.Windows.Forms.DataGridColumnStyle.MappingNameChanged">
      <summary>Occurs when the <see cref="P:System.Windows.Forms.DataGridColumnStyle.MappingName" /> value changes.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="P:System.Windows.Forms.DataGridColumnStyle.NullText">
      <summary>Gets or sets the text that is displayed when the column contains null.</summary>
      <returns>A string displayed in a column containing a <see cref="F:System.DBNull.Value" />.</returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="E:System.Windows.Forms.DataGridColumnStyle.NullTextChanged">
      <summary>Occurs when the <see cref="P:System.Windows.Forms.DataGridColumnStyle.NullText" /> value changes.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Windows.Forms.DataGridColumnStyle.Paint(System.Drawing.Graphics,System.Drawing.Rectangle,System.Windows.Forms.CurrencyManager,System.Int32)">
      <summary>Paints the <see cref="T:System.Windows.Forms.DataGridColumnStyle" /> with the specified <see cref="T:System.Drawing.Graphics" />, <see cref="T:System.Drawing.Rectangle" />, <see cref="T:System.Windows.Forms.CurrencyManager" />, and row number.</summary>
      <param name="g">The <see cref="T:System.Drawing.Graphics" /> to draw to. </param>
      <param name="bounds">The bounding <see cref="T:System.Drawing.Rectangle" /> to paint into. </param>
      <param name="source">The <see cref="T:System.Windows.Forms.CurrencyManager" /> of the <see cref="T:System.Windows.Forms.DataGrid" /> control the column belongs to. </param>
      <param name="rowNum">The number of the row in the underlying data being referred to. </param>
    </member>
    <member name="M:System.Windows.Forms.DataGridColumnStyle.Paint(System.Drawing.Graphics,System.Drawing.Rectangle,System.Windows.Forms.CurrencyManager,System.Int32,System.Boolean)">
      <summary>When overridden in a derived class, paints a <see cref="T:System.Windows.Forms.DataGridColumnStyle" /> with the specified <see cref="T:System.Drawing.Graphics" />, <see cref="T:System.Drawing.Rectangle" />, <see cref="T:System.Windows.Forms.CurrencyManager" />, row number, and alignment.</summary>
      <param name="g">The <see cref="T:System.Drawing.Graphics" /> to draw to. </param>
      <param name="bounds">The bounding <see cref="T:System.Drawing.Rectangle" /> to paint into. </param>
      <param name="source">The <see cref="T:System.Windows.Forms.CurrencyManager" /> of the <see cref="T:System.Windows.Forms.DataGrid" /> control the column belongs to. </param>
      <param name="rowNum">The number of the row in the underlying data being referred to. </param>
      <param name="alignToRight">A value indicating whether to align the column's content to the right. true if the content should be aligned to the right; otherwise false. </param>
    </member>
    <member name="M:System.Windows.Forms.DataGridColumnStyle.Paint(System.Drawing.Graphics,System.Drawing.Rectangle,System.Windows.Forms.CurrencyManager,System.Int32,System.Drawing.Brush,System.Drawing.Brush,System.Boolean)">
      <summary>Paints a <see cref="T:System.Windows.Forms.DataGridColumnStyle" /> with the specified <see cref="T:System.Drawing.Graphics" />, <see cref="T:System.Drawing.Rectangle" />, <see cref="T:System.Windows.Forms.CurrencyManager" />, row number, background color, foreground color, and alignment.</summary>
      <param name="g">The <see cref="T:System.Drawing.Graphics" /> to draw to. </param>
      <param name="bounds">The bounding <see cref="T:System.Drawing.Rectangle" /> to paint into. </param>
      <param name="source">The <see cref="T:System.Windows.Forms.CurrencyManager" /> of the <see cref="T:System.Windows.Forms.DataGrid" /> control the column belongs to. </param>
      <param name="rowNum">The number of the row in the underlying data table being referred to. </param>
      <param name="backBrush">A <see cref="T:System.Drawing.Brush" /> used to paint the background color. </param>
      <param name="foreBrush">A <see cref="T:System.Drawing.Color" /> used to paint the foreground color. </param>
      <param name="alignToRight">A value indicating whether to align the content to the right. true if the content is aligned to the right, otherwise, false. </param>
    </member>
    <member name="P:System.Windows.Forms.DataGridColumnStyle.PropertyDescriptor">
      <summary>Gets or sets the <see cref="T:System.ComponentModel.PropertyDescriptor" /> that determines the attributes of data displayed by the <see cref="T:System.Windows.Forms.DataGridColumnStyle" />.</summary>
      <returns>A <see cref="T:System.ComponentModel.PropertyDescriptor" /> that contains data about the attributes of the column.</returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="E:System.Windows.Forms.DataGridColumnStyle.PropertyDescriptorChanged">
      <summary>Occurs when the <see cref="P:System.Windows.Forms.DataGridColumnStyle.PropertyDescriptor" /> property value changes.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="P:System.Windows.Forms.DataGridColumnStyle.ReadOnly">
      <summary>Gets or sets a value indicating whether the data in the column can be edited.</summary>
      <returns>true, if the data cannot be edited; otherwise, false.</returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="E:System.Windows.Forms.DataGridColumnStyle.ReadOnlyChanged">
      <summary>Occurs when the <see cref="P:System.Windows.Forms.DataGridColumnStyle.ReadOnly" /> property value changes.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Windows.Forms.DataGridColumnStyle.ReleaseHostedControl">
      <summary>Allows the column to free resources when the control it hosts is not needed.</summary>
    </member>
    <member name="M:System.Windows.Forms.DataGridColumnStyle.ResetHeaderText">
      <summary>Resets the <see cref="P:System.Windows.Forms.DataGridColumnStyle.HeaderText" /> to its default value, null.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Windows.Forms.DataGridColumnStyle.SetColumnValueAtRow(System.Windows.Forms.CurrencyManager,System.Int32,System.Object)">
      <summary>Sets the value in a specified row with the value from a specified <see cref="T:System.Windows.Forms.CurrencyManager" />.</summary>
      <param name="source">A <see cref="T:System.Windows.Forms.CurrencyManager" /> associated with the <see cref="T:System.Windows.Forms.DataGridColumnStyle" />. </param>
      <param name="rowNum">The number of the row. </param>
      <param name="value">The value to set. </param>
      <exception cref="T:System.ArgumentException">The <see cref="T:System.Windows.Forms.CurrencyManager" /> object's <see cref="P:System.Windows.Forms.BindingManagerBase.Position" /> does not match <paramref name="rowNum" />. </exception>
    </member>
    <member name="M:System.Windows.Forms.DataGridColumnStyle.SetDataGrid(System.Windows.Forms.DataGrid)">
      <summary>Sets the <see cref="T:System.Windows.Forms.DataGrid" /> control that this column belongs to.</summary>
      <param name="value">The <see cref="T:System.Windows.Forms.DataGrid" /> control that this column belongs to. </param>
    </member>
    <member name="M:System.Windows.Forms.DataGridColumnStyle.SetDataGridInColumn(System.Windows.Forms.DataGrid)">
      <summary>Sets the <see cref="T:System.Windows.Forms.DataGrid" /> for the column.</summary>
      <param name="value">A <see cref="T:System.Windows.Forms.DataGrid" />. </param>
    </member>
    <member name="M:System.Windows.Forms.DataGridColumnStyle.System#Windows#Forms#IDataGridColumnStyleEditingNotificationService#ColumnStartedEditing(System.Windows.Forms.Control)">
      <summary>Informs the <see cref="T:System.Windows.Forms.DataGrid" /> control that the user has begun editing the column.</summary>
      <param name="editingControl">The <see cref="T:System.Windows.Forms.Control" /> that is editing the column.</param>
    </member>
    <member name="M:System.Windows.Forms.DataGridColumnStyle.UpdateUI(System.Windows.Forms.CurrencyManager,System.Int32,System.String)">
      <summary>Updates the value of a specified row with the given text.</summary>
      <param name="source">The <see cref="T:System.Windows.Forms.CurrencyManager" /> associated with the <see cref="T:System.Windows.Forms.DataGridColumnStyle" />. </param>
      <param name="rowNum">The row to update. </param>
      <param name="displayText">The new value. </param>
    </member>
    <member name="P:System.Windows.Forms.DataGridColumnStyle.Width">
      <summary>Gets or sets the width of the column.</summary>
      <returns>The width of the column, in pixels.</returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="E:System.Windows.Forms.DataGridColumnStyle.WidthChanged">
      <summary>Occurs when the <see cref="P:System.Windows.Forms.DataGridColumnStyle.Width" /> property value changes.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="T:System.Windows.Forms.DataGridColumnStyle.CompModSwitches">
      <summary>Contains a <see cref="T:System.Diagnostics.TraceSwitch" /> that is used by the .NET Framework infrastructure.</summary>
    </member>
    <member name="M:System.Windows.Forms.DataGridColumnStyle.CompModSwitches.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Forms.DataGridColumnStyle.CompModSwitches" /> class. </summary>
    </member>
    <member name="P:System.Windows.Forms.DataGridColumnStyle.CompModSwitches.DGEditColumnEditing">
      <summary>Gets a <see cref="T:System.Diagnostics.TraceSwitch" />.</summary>
      <returns>A <see cref="T:System.Diagnostics.TraceSwitch" /> used by the .NET Framework infrastructure.</returns>
    </member>
    <member name="T:System.Windows.Forms.DataGridColumnStyle.DataGridColumnHeaderAccessibleObject">
      <summary>Provides an implementation for an object that can be inspected by an accessibility application.</summary>
    </member>
    <member name="M:System.Windows.Forms.DataGridColumnStyle.DataGridColumnHeaderAccessibleObject.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Forms.DataGridColumnStyle.DataGridColumnHeaderAccessibleObject" /> class without specifying a <see cref="T:System.Windows.Forms.DataGridColumnStyle" /> host for the object. </summary>
    </member>
    <member name="M:System.Windows.Forms.DataGridColumnStyle.DataGridColumnHeaderAccessibleObject.#ctor(System.Windows.Forms.DataGridColumnStyle)">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Forms.DataGridColumnStyle.DataGridColumnHeaderAccessibleObject" /> class and specifies the <see cref="T:System.Windows.Forms.DataGridColumnStyle" /> that hosts the object.</summary>
      <param name="owner">The <see cref="T:System.Windows.Forms.DataGridColumnStyle" /> that hosts the object. </param>
    </member>
    <member name="P:System.Windows.Forms.DataGridColumnStyle.DataGridColumnHeaderAccessibleObject.Bounds">
      <summary>Gets the bounding rectangle of a column.</summary>
      <returns>A <see cref="T:System.Drawing.Rectangle" /> that contains the bounding values of the column.</returns>
    </member>
    <member name="P:System.Windows.Forms.DataGridColumnStyle.DataGridColumnHeaderAccessibleObject.Name">
      <summary>Gets the name of the column that owns the accessibility object.</summary>
      <returns>The name of the column that owns the accessibility object.</returns>
    </member>
    <member name="M:System.Windows.Forms.DataGridColumnStyle.DataGridColumnHeaderAccessibleObject.Navigate(System.Windows.Forms.AccessibleNavigation)">
      <summary>Enables navigation to another object.</summary>
      <returns>An <see cref="T:System.Windows.Forms.AccessibleObject" /> specified by the <paramref name="navdir" /> parameter.</returns>
      <param name="navdir">One of the <see cref="T:System.Windows.Forms.AccessibleNavigation" /> values. </param>
    </member>
    <member name="P:System.Windows.Forms.DataGridColumnStyle.DataGridColumnHeaderAccessibleObject.Owner">
      <summary>Gets the column style object that owns the accessibility object.</summary>
      <returns>The <see cref="T:System.Windows.Forms.DataGridColumnStyle" /> that owns the accessibility object.</returns>
    </member>
    <member name="P:System.Windows.Forms.DataGridColumnStyle.DataGridColumnHeaderAccessibleObject.Parent">
      <summary>Gets the parent accessibility object.</summary>
      <returns>The parent <see cref="T:System.Windows.Forms.AccessibleObject" /> of the column style object.</returns>
    </member>
    <member name="P:System.Windows.Forms.DataGridColumnStyle.DataGridColumnHeaderAccessibleObject.Role">
      <summary>Gets the role of the accessibility object.</summary>
      <returns>The AccessibleRole object of the accessibility object.</returns>
    </member>
    <member name="T:System.Windows.Forms.DataGridLineStyle">
      <summary>Specifies the style of gridlines in a <see cref="T:System.Windows.Forms.DataGrid" />.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="F:System.Windows.Forms.DataGridLineStyle.None">
      <summary>No gridlines between cells.</summary>
    </member>
    <member name="F:System.Windows.Forms.DataGridLineStyle.Solid">
      <summary>Solid gridlines between cells.</summary>
    </member>
    <member name="T:System.Windows.Forms.DataGridParentRowsLabelStyle">
      <summary>Specifies how the parent row labels of a <see cref="T:System.Windows.Forms.DataGrid" /> control are displayed.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="F:System.Windows.Forms.DataGridParentRowsLabelStyle.None">
      <summary>Display no parent row labels.</summary>
    </member>
    <member name="F:System.Windows.Forms.DataGridParentRowsLabelStyle.TableName">
      <summary>Displays the parent table name.</summary>
    </member>
    <member name="F:System.Windows.Forms.DataGridParentRowsLabelStyle.ColumnName">
      <summary>Displays the parent column name.</summary>
    </member>
    <member name="F:System.Windows.Forms.DataGridParentRowsLabelStyle.Both">
      <summary>Displays both the parent table and column names.</summary>
    </member>
    <member name="T:System.Windows.Forms.DataGridPreferredColumnWidthTypeConverter">
      <summary>Converts the value of an object to a different data type.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Windows.Forms.DataGridPreferredColumnWidthTypeConverter.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Forms.DataGridPreferredColumnWidthTypeConverter" /> class. </summary>
    </member>
    <member name="M:System.Windows.Forms.DataGridPreferredColumnWidthTypeConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)">
      <summary>Gets a value that specifies whether the converter can convert an object in the given source type to the native type of the converter.</summary>
      <returns>true, if this converter can perform the conversion; otherwise, false.</returns>
      <param name="context">An <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> that provides a format context. </param>
      <param name="sourceType">A <see cref="T:System.Type" /> that represents the type you want to convert from. </param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Windows.Forms.DataGridPreferredColumnWidthTypeConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
      <summary>Converts the given object to the native type of the converter.</summary>
      <returns>An <see cref="T:System.Object" /> that represents the converted value.</returns>
      <param name="context">An <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> that a provides format context. </param>
      <param name="culture">A <see cref="T:System.Globalization.CultureInfo" /> to use for the current culture. </param>
      <param name="value">The <see cref="T:System.Object" /> to convert. </param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Windows.Forms.DataGridPreferredColumnWidthTypeConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
      <summary>Converts the given value to the native type of the converter.</summary>
      <returns>An <see cref="T:System.Object" /> that represents the converted value.</returns>
      <param name="context">An <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> that provides format context. </param>
      <param name="culture">A <see cref="T:System.Globalization.CultureInfo" /> to use for the current culture. </param>
      <param name="value">The <see cref="T:System.Object" /> to convert. </param>
      <param name="destinationType">The <see cref="T:System.Type" /> of the conversion. </param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="T:System.Windows.Forms.DataGridTableStyle">
      <summary>Represents the table drawn by the <see cref="T:System.Windows.Forms.DataGrid" /> control at run time.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Windows.Forms.DataGridTableStyle.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Forms.DataGridTableStyle" /> class.</summary>
    </member>
    <member name="M:System.Windows.Forms.DataGridTableStyle.#ctor(System.Boolean)">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Forms.DataGridTableStyle" /> class using the specified value to determine whether the grid table is the default style.</summary>
      <param name="isDefaultTableStyle">true to specify the table as the default; otherwise, false. </param>
    </member>
    <member name="M:System.Windows.Forms.DataGridTableStyle.#ctor(System.Windows.Forms.CurrencyManager)">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Forms.DataGridTableStyle" /> class with the specified <see cref="T:System.Windows.Forms.CurrencyManager" />.</summary>
      <param name="listManager">The <see cref="T:System.Windows.Forms.CurrencyManager" /> to use. </param>
    </member>
    <member name="P:System.Windows.Forms.DataGridTableStyle.AllowSorting">
      <summary>Indicates whether sorting is allowed on the grid table when this <see cref="T:System.Windows.Forms.DataGridTableStyle" /> is used.</summary>
      <returns>true if sorting is allowed; otherwise, false. The default is true.</returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="E:System.Windows.Forms.DataGridTableStyle.AllowSortingChanged">
      <summary>Occurs when the <see cref="P:System.Windows.Forms.DataGridTableStyle.AllowSorting" /> property value changes.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="P:System.Windows.Forms.DataGridTableStyle.AlternatingBackColor">
      <summary>Gets or sets the background color of odd-numbered rows of the grid.</summary>
      <returns>A <see cref="T:System.Drawing.Color" /> that represents the background color of odd-numbered rows. The default is <see cref="P:System.Drawing.SystemBrushes.Window" /></returns>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="E:System.Windows.Forms.DataGridTableStyle.AlternatingBackColorChanged">
      <summary>Occurs when the <see cref="P:System.Windows.Forms.DataGridTableStyle.AlternatingBackColor" /> value changes.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="P:System.Windows.Forms.DataGridTableStyle.BackColor">
      <summary>Gets or sets the background color of even-numbered rows of the grid.</summary>
      <returns>A <see cref="T:System.Drawing.Color" /> that represents the background color of odd-numbered rows.</returns>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="E:System.Windows.Forms.DataGridTableStyle.BackColorChanged">
      <summary>Occurs when the <see cref="P:System.Windows.Forms.DataGridTableStyle.BackColor" /> value changes.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Windows.Forms.DataGridTableStyle.BeginEdit(System.Windows.Forms.DataGridColumnStyle,System.Int32)">
      <summary>Requests an edit operation.</summary>
      <returns>true, if the operation succeeds; otherwise, false.</returns>
      <param name="gridColumn">The <see cref="T:System.Windows.Forms.DataGridColumnStyle" /> to edit. </param>
      <param name="rowNumber">The number of the edited row. </param>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
        <IPermission class="System.Diagnostics.PerformanceCounterPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="P:System.Windows.Forms.DataGridTableStyle.ColumnHeadersVisible">
      <summary>Gets or sets a value indicating whether column headers are visible.</summary>
      <returns>true if column headers are visible; otherwise, false. The default is true.</returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="E:System.Windows.Forms.DataGridTableStyle.ColumnHeadersVisibleChanged">
      <summary>Occurs when the <see cref="P:System.Windows.Forms.DataGridTableStyle.ColumnHeadersVisible" /> value changes.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Windows.Forms.DataGridTableStyle.CreateGridColumn(System.ComponentModel.PropertyDescriptor)">
      <summary>Creates a <see cref="T:System.Windows.Forms.DataGridColumnStyle" />, using the specified property descriptor.</summary>
      <returns>The newly created <see cref="T:System.Windows.Forms.DataGridColumnStyle" />.</returns>
      <param name="prop">The <see cref="T:System.ComponentModel.PropertyDescriptor" /> used to create the column style object. </param>
    </member>
    <member name="M:System.Windows.Forms.DataGridTableStyle.CreateGridColumn(System.ComponentModel.PropertyDescriptor,System.Boolean)">
      <summary>Creates a <see cref="T:System.Windows.Forms.DataGridColumnStyle" /> using the specified property descriptor. Specifies whether the <see cref="T:System.Windows.Forms.DataGridColumnStyle" /> is a default column style.</summary>
      <returns>The newly created <see cref="T:System.Windows.Forms.DataGridColumnStyle" />.</returns>
      <param name="prop">The <see cref="T:System.ComponentModel.PropertyDescriptor" /> used to create the column style object. </param>
      <param name="isDefault">Specifies whether the <see cref="T:System.Windows.Forms.DataGridColumnStyle" /> is a default column style. This parameter is read-only. </param>
    </member>
    <member name="P:System.Windows.Forms.DataGridTableStyle.DataGrid">
      <summary>Gets or sets the <see cref="T:System.Windows.Forms.DataGrid" /> control for the drawn table.</summary>
      <returns>The <see cref="T:System.Windows.Forms.DataGrid" /> control that displays the table.</returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="F:System.Windows.Forms.DataGridTableStyle.DefaultTableStyle">
      <summary>Gets the default table style.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Windows.Forms.DataGridTableStyle.Dispose(System.Boolean)">
      <summary>Disposes of the resources (other than memory) used by the <see cref="T:System.Windows.Forms.DataGridTableStyle" />.</summary>
      <param name="disposing">true to release both managed and unmanaged resources; false to release only unmanaged resources. </param>
    </member>
    <member name="M:System.Windows.Forms.DataGridTableStyle.EndEdit(System.Windows.Forms.DataGridColumnStyle,System.Int32,System.Boolean)">
      <summary>Requests an end to an edit operation.</summary>
      <returns>true if the edit operation ends successfully; otherwise, false.</returns>
      <param name="gridColumn">The <see cref="T:System.Windows.Forms.DataGridColumnStyle" /> to edit. </param>
      <param name="rowNumber">The number of the edited row. </param>
      <param name="shouldAbort">A value indicating whether the operation should be stopped; true if it should stop; otherwise, false. </param>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
        <IPermission class="System.Diagnostics.PerformanceCounterPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="P:System.Windows.Forms.DataGridTableStyle.ForeColor">
      <summary>Gets or sets the foreground color of the grid table.</summary>
      <returns>A <see cref="T:System.Drawing.Color" /> that represents the foreground color of the grid table.</returns>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="E:System.Windows.Forms.DataGridTableStyle.ForeColorChanged">
      <summary>Occurs when the <see cref="P:System.Windows.Forms.DataGridTableStyle.ForeColor" /> value changes.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="P:System.Windows.Forms.DataGridTableStyle.GridColumnStyles">
      <summary>Gets the collection of columns drawn for this table.</summary>
      <returns>A <see cref="T:System.Windows.Forms.GridColumnStylesCollection" /> that contains all <see cref="T:System.Windows.Forms.DataGridColumnStyle" /> objects for the table.</returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="P:System.Windows.Forms.DataGridTableStyle.GridLineColor">
      <summary>Gets or sets the color of grid lines.</summary>
      <returns>A <see cref="T:System.Drawing.Color" /> that represents the grid line color.</returns>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="E:System.Windows.Forms.DataGridTableStyle.GridLineColorChanged">
      <summary>Occurs when the <see cref="P:System.Windows.Forms.DataGridTableStyle.GridLineColor" /> value changes.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="P:System.Windows.Forms.DataGridTableStyle.GridLineStyle">
      <summary>Gets or sets the style of grid lines.</summary>
      <returns>One of the <see cref="T:System.Windows.Forms.DataGridLineStyle" /> values. The default is DataGridLineStyle.Solid.</returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="E:System.Windows.Forms.DataGridTableStyle.GridLineStyleChanged">
      <summary>Occurs when the <see cref="P:System.Windows.Forms.DataGridTableStyle.GridLineStyle" /> value changes.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="P:System.Windows.Forms.DataGridTableStyle.HeaderBackColor">
      <summary>Gets or sets the background color of headers.</summary>
      <returns>A <see cref="T:System.Drawing.Color" /> that represents the background color of headers.</returns>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="E:System.Windows.Forms.DataGridTableStyle.HeaderBackColorChanged">
      <summary>Occurs when the <see cref="P:System.Windows.Forms.DataGridTableStyle.HeaderBackColor" /> value changes.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="P:System.Windows.Forms.DataGridTableStyle.HeaderFont">
      <summary>Gets or sets the font used for header captions.</summary>
      <returns>The <see cref="T:System.Drawing.Font" /> used for captions.</returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="E:System.Windows.Forms.DataGridTableStyle.HeaderFontChanged">
      <summary>Occurs when the <see cref="P:System.Windows.Forms.DataGridTableStyle.HeaderFont" /> value changes.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="P:System.Windows.Forms.DataGridTableStyle.HeaderForeColor">
      <summary>Gets or sets the foreground color of headers.</summary>
      <returns>A <see cref="T:System.Drawing.Color" /> that represents the foreground color of headers.</returns>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="E:System.Windows.Forms.DataGridTableStyle.HeaderForeColorChanged">
      <summary>Occurs when the <see cref="P:System.Windows.Forms.DataGridTableStyle.HeaderForeColor" /> value changes.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="P:System.Windows.Forms.DataGridTableStyle.LinkColor">
      <summary>Gets or sets the color of link text.</summary>
      <returns>The <see cref="T:System.Drawing.Color" /> of link text.</returns>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="E:System.Windows.Forms.DataGridTableStyle.LinkColorChanged">
      <summary>Occurs when the <see cref="P:System.Windows.Forms.DataGridTableStyle.LinkColor" /> value changes.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="P:System.Windows.Forms.DataGridTableStyle.LinkHoverColor">
      <summary>Gets or sets the color displayed when hovering over link text.</summary>
      <returns>A <see cref="T:System.Drawing.Color" /> that represents the hover color.</returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="E:System.Windows.Forms.DataGridTableStyle.LinkHoverColorChanged">
      <summary>Occurs when the <see cref="P:System.Windows.Forms.DataGridTableStyle.LinkHoverColor" /> value changes.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="P:System.Windows.Forms.DataGridTableStyle.MappingName">
      <summary>Gets or sets the name used to map this table to a specific data source.</summary>
      <returns>The name used to map this grid to a specific data source.</returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="E:System.Windows.Forms.DataGridTableStyle.MappingNameChanged">
      <summary>Occurs when the <see cref="P:System.Windows.Forms.DataGridTableStyle.MappingName" /> value changes.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Windows.Forms.DataGridTableStyle.OnAllowSortingChanged(System.EventArgs)">
      <summary>Raises the <see cref="E:System.Windows.Forms.DataGridTableStyle.AllowSortingChanged" /> event.</summary>
      <param name="e">An <see cref="T:System.EventArgs" /> that contains the event data. </param>
    </member>
    <member name="M:System.Windows.Forms.DataGridTableStyle.OnAlternatingBackColorChanged(System.EventArgs)">
      <summary>Raises the <see cref="E:System.Windows.Forms.DataGridTableStyle.AlternatingBackColorChanged" /> event.</summary>
      <param name="e">An <see cref="T:System.EventArgs" /> that contains the event data. </param>
    </member>
    <member name="M:System.Windows.Forms.DataGridTableStyle.OnBackColorChanged(System.EventArgs)">
      <summary>Raises the <see cref="E:System.Windows.Forms.DataGridTableStyle.BackColorChanged" /> event.</summary>
      <param name="e">An <see cref="T:System.EventArgs" /> that contains the event data. </param>
    </member>
    <member name="M:System.Windows.Forms.DataGridTableStyle.OnColumnHeadersVisibleChanged(System.EventArgs)">
      <summary>Raises the <see cref="E:System.Windows.Forms.DataGridTableStyle.ColumnHeadersVisibleChanged" /> event.</summary>
      <param name="e">An <see cref="T:System.EventArgs" /> that contains the event data. </param>
    </member>
    <member name="M:System.Windows.Forms.DataGridTableStyle.OnForeColorChanged(System.EventArgs)">
      <summary>Raises the <see cref="E:System.Windows.Forms.DataGridTableStyle.ForeColorChanged" /> event.</summary>
      <param name="e">An <see cref="T:System.EventArgs" /> that contains the event data. </param>
    </member>
    <member name="M:System.Windows.Forms.DataGridTableStyle.OnGridLineColorChanged(System.EventArgs)">
      <summary>Raises the <see cref="E:System.Windows.Forms.DataGridTableStyle.GridLineColorChanged" /> event.</summary>
      <param name="e">An <see cref="T:System.EventArgs" /> that contains the event data. </param>
    </member>
    <member name="M:System.Windows.Forms.DataGridTableStyle.OnGridLineStyleChanged(System.EventArgs)">
      <summary>Raises the <see cref="E:System.Windows.Forms.DataGridTableStyle.GridLineStyleChanged" /> event.</summary>
      <param name="e">An <see cref="T:System.EventArgs" /> that contains the event data. </param>
    </member>
    <member name="M:System.Windows.Forms.DataGridTableStyle.OnHeaderBackColorChanged(System.EventArgs)">
      <summary>Raises the <see cref="E:System.Windows.Forms.DataGridTableStyle.HeaderBackColorChanged" /> event.</summary>
      <param name="e">An <see cref="T:System.EventArgs" /> that contains the event data. </param>
    </member>
    <member name="M:System.Windows.Forms.DataGridTableStyle.OnHeaderFontChanged(System.EventArgs)">
      <summary>Raises the <see cref="E:System.Windows.Forms.DataGridTableStyle.HeaderFontChanged" /> event.</summary>
      <param name="e">An <see cref="T:System.EventArgs" /> that contains the event data. </param>
    </member>
    <member name="M:System.Windows.Forms.DataGridTableStyle.OnHeaderForeColorChanged(System.EventArgs)">
      <summary>Raises the <see cref="E:System.Windows.Forms.DataGridTableStyle.HeaderForeColorChanged" /> event.</summary>
      <param name="e">An <see cref="T:System.EventArgs" /> that contains the event data. </param>
    </member>
    <member name="M:System.Windows.Forms.DataGridTableStyle.OnLinkColorChanged(System.EventArgs)">
      <summary>Raises the <see cref="E:System.Windows.Forms.DataGridTableStyle.LinkColorChanged" /> event.</summary>
      <param name="e">An <see cref="T:System.EventArgs" /> that contains the event data. </param>
    </member>
    <member name="M:System.Windows.Forms.DataGridTableStyle.OnLinkHoverColorChanged(System.EventArgs)">
      <summary>Raises the LinkHoverColorChanged event.</summary>
      <param name="e">An <see cref="T:System.EventArgs" /> that contains the event data. </param>
    </member>
    <member name="M:System.Windows.Forms.DataGridTableStyle.OnMappingNameChanged(System.EventArgs)">
      <summary>Raises the <see cref="E:System.Windows.Forms.DataGridTableStyle.MappingNameChanged" /> event </summary>
      <param name="e">An <see cref="T:System.EventArgs" /> that contains the event data. </param>
    </member>
    <member name="M:System.Windows.Forms.DataGridTableStyle.OnPreferredColumnWidthChanged(System.EventArgs)">
      <summary>Raises the <see cref="E:System.Windows.Forms.DataGridTableStyle.PreferredColumnWidthChanged" /> event.</summary>
      <param name="e">An <see cref="T:System.EventArgs" /> that contains the event data. </param>
    </member>
    <member name="M:System.Windows.Forms.DataGridTableStyle.OnPreferredRowHeightChanged(System.EventArgs)">
      <summary>Raises the <see cref="E:System.Windows.Forms.DataGridTableStyle.PreferredRowHeightChanged" /> event.</summary>
      <param name="e">An <see cref="T:System.EventArgs" /> that contains the event data. </param>
    </member>
    <member name="M:System.Windows.Forms.DataGridTableStyle.OnReadOnlyChanged(System.EventArgs)">
      <summary>Raises the <see cref="E:System.Windows.Forms.DataGridTableStyle.ReadOnlyChanged" /> event.</summary>
      <param name="e">An <see cref="T:System.EventArgs" /> that contains the event data. </param>
    </member>
    <member name="M:System.Windows.Forms.DataGridTableStyle.OnRowHeadersVisibleChanged(System.EventArgs)">
      <summary>Raises the <see cref="E:System.Windows.Forms.DataGridTableStyle.RowHeadersVisibleChanged" /> event.</summary>
      <param name="e">An <see cref="T:System.EventArgs" /> that contains the event data. </param>
    </member>
    <member name="M:System.Windows.Forms.DataGridTableStyle.OnRowHeaderWidthChanged(System.EventArgs)">
      <summary>Raises the <see cref="E:System.Windows.Forms.DataGridTableStyle.RowHeaderWidthChanged" /> event.</summary>
      <param name="e">An <see cref="T:System.EventArgs" /> that contains the event data. </param>
    </member>
    <member name="M:System.Windows.Forms.DataGridTableStyle.OnSelectionBackColorChanged(System.EventArgs)">
      <summary>Raises the <see cref="E:System.Windows.Forms.DataGridTableStyle.SelectionBackColorChanged" /> event.</summary>
      <param name="e">An <see cref="T:System.EventArgs" /> that contains the event data. </param>
    </member>
    <member name="M:System.Windows.Forms.DataGridTableStyle.OnSelectionForeColorChanged(System.EventArgs)">
      <summary>Raises the <see cref="E:System.Windows.Forms.DataGridTableStyle.SelectionForeColorChanged" /> event.</summary>
      <param name="e">An <see cref="T:System.EventArgs" /> that contains the event data. </param>
    </member>
    <member name="P:System.Windows.Forms.DataGridTableStyle.PreferredColumnWidth">
      <summary>Gets or sets the width used to create columns when a new grid is displayed.</summary>
      <returns>The width used to create columns when a new grid is displayed.</returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="E:System.Windows.Forms.DataGridTableStyle.PreferredColumnWidthChanged">
      <summary>Occurs when the <see cref="P:System.Windows.Forms.DataGridTableStyle.PreferredColumnWidth" /> property value changes.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="P:System.Windows.Forms.DataGridTableStyle.PreferredRowHeight">
      <summary>Gets or sets the height used to create a row when a new grid is displayed.</summary>
      <returns>The height of a row, in pixels.</returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="E:System.Windows.Forms.DataGridTableStyle.PreferredRowHeightChanged">
      <summary>Occurs when the <see cref="P:System.Windows.Forms.DataGridTableStyle.PreferredRowHeight" /> value changes.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="P:System.Windows.Forms.DataGridTableStyle.ReadOnly">
      <summary>Gets or sets a value indicating whether columns can be edited.</summary>
      <returns>true, if columns cannot be edited; otherwise, false.</returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="E:System.Windows.Forms.DataGridTableStyle.ReadOnlyChanged">
      <summary>Occurs when the <see cref="P:System.Windows.Forms.DataGridTableStyle.ReadOnly" /> value changes.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Windows.Forms.DataGridTableStyle.ResetAlternatingBackColor">
      <summary>Resets the <see cref="P:System.Windows.Forms.DataGridTableStyle.AlternatingBackColor" /> property to its default value.</summary>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:System.Windows.Forms.DataGridTableStyle.ResetBackColor">
      <summary>Resets the <see cref="P:System.Windows.Forms.DataGridTableStyle.BackColor" /> property to its default value.</summary>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:System.Windows.Forms.DataGridTableStyle.ResetForeColor">
      <summary>Resets the <see cref="P:System.Windows.Forms.DataGridTableStyle.ForeColor" /> property to its default value.</summary>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:System.Windows.Forms.DataGridTableStyle.ResetGridLineColor">
      <summary>Resets the <see cref="P:System.Windows.Forms.DataGridTableStyle.GridLineColor" /> property to its default value.</summary>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:System.Windows.Forms.DataGridTableStyle.ResetHeaderBackColor">
      <summary>Resets the <see cref="P:System.Windows.Forms.DataGridTableStyle.HeaderBackColor" /> property to its default value.</summary>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:System.Windows.Forms.DataGridTableStyle.ResetHeaderFont">
      <summary>Resets the <see cref="P:System.Windows.Forms.DataGridTableStyle.HeaderFont" /> property to its default value.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Windows.Forms.DataGridTableStyle.ResetHeaderForeColor">
      <summary>Resets the <see cref="P:System.Windows.Forms.DataGridTableStyle.HeaderForeColor" /> property to its default value.</summary>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:System.Windows.Forms.DataGridTableStyle.ResetLinkColor">
      <summary>Resets the <see cref="P:System.Windows.Forms.DataGridTableStyle.LinkColor" /> property to its default value.</summary>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:System.Windows.Forms.DataGridTableStyle.ResetLinkHoverColor">
      <summary>Resets the <see cref="P:System.Windows.Forms.DataGridTableStyle.LinkHoverColor" /> property to its default value.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Windows.Forms.DataGridTableStyle.ResetSelectionBackColor">
      <summary>Resets the <see cref="P:System.Windows.Forms.DataGridTableStyle.SelectionBackColor" /> property to its default value.</summary>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:System.Windows.Forms.DataGridTableStyle.ResetSelectionForeColor">
      <summary>Resets the <see cref="P:System.Windows.Forms.DataGridTableStyle.SelectionForeColor" /> property to its default value.</summary>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="P:System.Windows.Forms.DataGridTableStyle.RowHeadersVisible">
      <summary>Gets or sets a value indicating whether row headers are visible.</summary>
      <returns>true if row headers are visible; otherwise, false. The default is true.</returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="E:System.Windows.Forms.DataGridTableStyle.RowHeadersVisibleChanged">
      <summary>Occurs when the <see cref="P:System.Windows.Forms.DataGridTableStyle.RowHeadersVisible" /> value changes.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="P:System.Windows.Forms.DataGridTableStyle.RowHeaderWidth">
      <summary>Gets or sets the width of row headers.</summary>
      <returns>The width of row headers, in pixels.</returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="E:System.Windows.Forms.DataGridTableStyle.RowHeaderWidthChanged">
      <summary>Occurs when the <see cref="P:System.Windows.Forms.DataGridTableStyle.RowHeaderWidth" /> value changes.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="P:System.Windows.Forms.DataGridTableStyle.SelectionBackColor">
      <summary>Gets or sets the background color of selected cells.</summary>
      <returns>The <see cref="T:System.Drawing.Color" /> that represents the background color of selected cells.</returns>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="E:System.Windows.Forms.DataGridTableStyle.SelectionBackColorChanged">
      <summary>Occurs when the <see cref="P:System.Windows.Forms.DataGridTableStyle.SelectionBackColor" /> value changes.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="P:System.Windows.Forms.DataGridTableStyle.SelectionForeColor">
      <summary>Gets or sets the foreground color of selected cells.</summary>
      <returns>The <see cref="T:System.Drawing.Color" /> that represents the foreground color of selected cells.</returns>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="E:System.Windows.Forms.DataGridTableStyle.SelectionForeColorChanged">
      <summary>Occurs when the <see cref="P:System.Windows.Forms.DataGridTableStyle.SelectionForeColor" /> value changes.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Windows.Forms.DataGridTableStyle.ShouldSerializeAlternatingBackColor">
      <summary>Indicates whether the <see cref="P:System.Windows.Forms.DataGridTableStyle.AlternatingBackColor" /> property should be persisted.</summary>
      <returns>true if the property value has changed from its default; otherwise, false.</returns>
    </member>
    <member name="M:System.Windows.Forms.DataGridTableStyle.ShouldSerializeBackColor">
      <summary>Indicates whether the <see cref="P:System.Windows.Forms.DataGridTableStyle.BackColor" /> property should be persisted.</summary>
      <returns>true if the property value has changed from its default; otherwise, false.</returns>
    </member>
    <member name="M:System.Windows.Forms.DataGridTableStyle.ShouldSerializeForeColor">
      <summary>Indicates whether the <see cref="P:System.Windows.Forms.DataGridTableStyle.ForeColor" /> property should be persisted.</summary>
      <returns>true if the property value has changed from its default; otherwise, false.</returns>
    </member>
    <member name="M:System.Windows.Forms.DataGridTableStyle.ShouldSerializeGridLineColor">
      <summary>Indicates whether the <see cref="P:System.Windows.Forms.DataGridTableStyle.GridLineColor" /> property should be persisted.</summary>
      <returns>true if the property value has changed from its default; otherwise, false.</returns>
    </member>
    <member name="M:System.Windows.Forms.DataGridTableStyle.ShouldSerializeHeaderBackColor">
      <summary>Indicates whether the <see cref="P:System.Windows.Forms.DataGridTableStyle.HeaderBackColor" /> property should be persisted.</summary>
      <returns>true if the property value has changed from its default; otherwise, false.</returns>
    </member>
    <member name="M:System.Windows.Forms.DataGridTableStyle.ShouldSerializeHeaderForeColor">
      <summary>Indicates whether the <see cref="P:System.Windows.Forms.DataGridTableStyle.HeaderForeColor" /> property should be persisted.</summary>
      <returns>true if the property value has changed from its default; otherwise, false.</returns>
    </member>
    <member name="M:System.Windows.Forms.DataGridTableStyle.ShouldSerializeLinkColor">
      <summary>Indicates whether the <see cref="P:System.Windows.Forms.DataGridTableStyle.LinkColor" /> property should be persisted.</summary>
      <returns>true if the property value has changed from its default; otherwise, false.</returns>
    </member>
    <member name="M:System.Windows.Forms.DataGridTableStyle.ShouldSerializeLinkHoverColor">
      <summary>Indicates whether the <see cref="P:System.Windows.Forms.DataGridTableStyle.LinkHoverColor" /> property should be persisted.</summary>
      <returns>true if the property value has changed from its default; otherwise, false.</returns>
    </member>
    <member name="M:System.Windows.Forms.DataGridTableStyle.ShouldSerializePreferredRowHeight">
      <summary>Indicates whether the <see cref="P:System.Windows.Forms.DataGridTableStyle.PreferredRowHeight" /> property should be persisted.</summary>
      <returns>true if the property value has changed from its default; otherwise, false.</returns>
    </member>
    <member name="M:System.Windows.Forms.DataGridTableStyle.ShouldSerializeSelectionBackColor">
      <summary>Indicates whether the <see cref="P:System.Windows.Forms.DataGridTableStyle.SelectionBackColor" /> property should be persisted.</summary>
      <returns>true if the property value has changed from its default; otherwise, false.</returns>
    </member>
    <member name="M:System.Windows.Forms.DataGridTableStyle.ShouldSerializeSelectionForeColor">
      <summary>Indicates whether the <see cref="P:System.Windows.Forms.DataGridTableStyle.SelectionForeColor" /> property should be persisted.</summary>
      <returns>true if the property value has changed from its default; otherwise, false.</returns>
    </member>
    <member name="T:System.Windows.Forms.DataGridTextBox">
      <summary>Represents a <see cref="T:System.Windows.Forms.TextBox" /> control that is hosted in a <see cref="T:System.Windows.Forms.DataGridTextBoxColumn" />.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Windows.Forms.DataGridTextBox.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Forms.DataGridTextBox" /> class. </summary>
    </member>
    <member name="P:System.Windows.Forms.DataGridTextBox.IsInEditOrNavigateMode">
      <summary>Gets or sets a value indicating whether the <see cref="T:System.Windows.Forms.DataGridTextBox" /> is in a mode that allows either editing or navigating.</summary>
      <returns>true if the controls is in navigation mode, and editing has not begun; otherwise, false. The default is true.</returns>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
        <IPermission class="System.Diagnostics.PerformanceCounterPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:System.Windows.Forms.DataGridTextBox.OnKeyPress(System.Windows.Forms.KeyPressEventArgs)">
      <summary>Raises the <see cref="E:System.Windows.Forms.Control.KeyPress" /> event.</summary>
      <param name="e">A <see cref="T:System.Windows.Forms.KeyPressEventArgs" /> that contains the event data. </param>
    </member>
    <member name="M:System.Windows.Forms.DataGridTextBox.OnMouseWheel(System.Windows.Forms.MouseEventArgs)">
      <summary>Raises the <see cref="E:System.Windows.Forms.Control.MouseWheel" /> event.</summary>
      <param name="e">A <see cref="T:System.Windows.Forms.MouseEventArgs" /> that contains the event data. </param>
    </member>
    <member name="M:System.Windows.Forms.DataGridTextBox.ProcessKeyMessage(System.Windows.Forms.Message@)">
      <summary>Indicates whether the key pressed is processed further (for example, to navigate, or escape). This property is read-only.</summary>
      <returns>true if the key is consumed, false to if the key is further processed.</returns>
      <param name="m">A <see cref="T:System.Windows.Forms.Message" />, passed by reference, that contains the key data. </param>
    </member>
    <member name="M:System.Windows.Forms.DataGridTextBox.SetDataGrid(System.Windows.Forms.DataGrid)">
      <summary>Sets the <see cref="T:System.Windows.Forms.DataGrid" /> to which this <see cref="T:System.Windows.Forms.TextBox" /> control belongs.</summary>
      <param name="parentGrid">The <see cref="T:System.Windows.Forms.DataGrid" /> control that hosts the control. </param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Windows.Forms.DataGridTextBox.WndProc(System.Windows.Forms.Message@)">
      <summary>Raises the <see cref="M:System.Windows.Forms.Control.WndProc(System.Windows.Forms.Message@)" /> event.</summary>
      <param name="m">A <see cref="T:System.Windows.Forms.Message" /> that contains the event data. </param>
    </member>
    <member name="T:System.Windows.Forms.DataGridTextBoxColumn">
      <summary>Hosts a <see cref="T:System.Windows.Forms.TextBox" /> control in a cell of a <see cref="T:System.Windows.Forms.DataGridColumnStyle" /> for editing strings.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Windows.Forms.DataGridTextBoxColumn.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Forms.DataGridTextBoxColumn" /> class.</summary>
    </member>
    <member name="M:System.Windows.Forms.DataGridTextBoxColumn.#ctor(System.ComponentModel.PropertyDescriptor)">
      <summary>Initializes a new instance of a <see cref="T:System.Windows.Forms.DataGridTextBoxColumn" /> with a specified <see cref="T:System.ComponentModel.PropertyDescriptor" />.</summary>
      <param name="prop">The <see cref="T:System.ComponentModel.PropertyDescriptor" /> for the column with which the <see cref="T:System.Windows.Forms.DataGridTextBoxColumn" /> will be associated. </param>
    </member>
    <member name="M:System.Windows.Forms.DataGridTextBoxColumn.#ctor(System.ComponentModel.PropertyDescriptor,System.Boolean)">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Forms.DataGridTextBoxColumn" /> class using the specified <see cref="T:System.ComponentModel.PropertyDescriptor" />. Specifies whether the <see cref="T:System.Windows.Forms.DataGridTextBoxColumn" /> is a default column.</summary>
      <param name="prop">The <see cref="T:System.ComponentModel.PropertyDescriptor" /> to be associated with the <see cref="T:System.Windows.Forms.DataGridTextBoxColumn" />. </param>
      <param name="isDefault">Specifies whether the <see cref="T:System.Windows.Forms.DataGridTextBoxColumn" /> is a default column. </param>
    </member>
    <member name="M:System.Windows.Forms.DataGridTextBoxColumn.#ctor(System.ComponentModel.PropertyDescriptor,System.String)">
      <summary>Initializes a new instance of a <see cref="T:System.Windows.Forms.DataGridTextBoxColumn" /> with the specified <see cref="T:System.ComponentModel.PropertyDescriptor" /> and format.</summary>
      <param name="prop">The <see cref="T:System.ComponentModel.PropertyDescriptor" /> for the column with which the <see cref="T:System.Windows.Forms.DataGridTextBoxColumn" /> will be associated. </param>
      <param name="format">The format used to format the column values. </param>
    </member>
    <member name="M:System.Windows.Forms.DataGridTextBoxColumn.#ctor(System.ComponentModel.PropertyDescriptor,System.String,System.Boolean)">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Forms.DataGridTextBoxColumn" /> class with a specified <see cref="T:System.ComponentModel.PropertyDescriptor" /> and format. Specifies whether the column is the default column.</summary>
      <param name="prop">The <see cref="T:System.ComponentModel.PropertyDescriptor" /> to be associated with the <see cref="T:System.Windows.Forms.DataGridTextBoxColumn" />. </param>
      <param name="format">The format used. </param>
      <param name="isDefault">Specifies whether the <see cref="T:System.Windows.Forms.DataGridTextBoxColumn" /> is the default column. </param>
    </member>
    <member name="M:System.Windows.Forms.DataGridTextBoxColumn.Abort(System.Int32)">
      <summary>Initiates a request to interrupt an edit procedure.</summary>
      <param name="rowNum">The number of the row in which an edit operation is being interrupted. </param>
    </member>
    <member name="M:System.Windows.Forms.DataGridTextBoxColumn.Commit(System.Windows.Forms.CurrencyManager,System.Int32)">
      <summary>Inititates a request to complete an editing procedure.</summary>
      <returns>true if the value was successfully committed; otherwise, false.</returns>
      <param name="dataSource">The <see cref="T:System.Windows.Forms.CurrencyManager" /> of the <see cref="T:System.Windows.Forms.DataGrid" /> control the column belongs to. </param>
      <param name="rowNum">The number of the edited row. </param>
    </member>
    <member name="M:System.Windows.Forms.DataGridTextBoxColumn.ConcedeFocus">
      <summary>Informs the column that the focus is being conceded.</summary>
    </member>
    <member name="M:System.Windows.Forms.DataGridTextBoxColumn.Edit(System.Windows.Forms.CurrencyManager,System.Int32,System.Drawing.Rectangle,System.Boolean,System.String,System.Boolean)">
      <summary>Prepares a cell for editing.</summary>
      <param name="source">The <see cref="T:System.Windows.Forms.CurrencyManager" /> of the <see cref="T:System.Windows.Forms.DataGrid" /> control the column belongs to. </param>
      <param name="rowNum">The row number in this column being edited. </param>
      <param name="bounds">The bounding <see cref="T:System.Drawing.Rectangle" /> in which the control is to be sited. </param>
      <param name="readOnly">A value indicating whether the column is a read-only. true if the value is read-only; otherwise, false. </param>
      <param name="displayText">The text to display in the control. </param>
      <param name="cellIsVisible">A value indicating whether the cell is visible. true if the cell is visible; otherwise, false. </param>
    </member>
    <member name="M:System.Windows.Forms.DataGridTextBoxColumn.EndEdit">
      <summary>Ends an edit operation on the <see cref="T:System.Windows.Forms.DataGridColumnStyle" />.</summary>
    </member>
    <member name="M:System.Windows.Forms.DataGridTextBoxColumn.EnterNullValue">
      <summary>Enters a <see cref="F:System.DBNull.Value" /> in the column.</summary>
    </member>
    <member name="P:System.Windows.Forms.DataGridTextBoxColumn.Format">
      <summary>Gets or sets the character(s) that specify how text is formatted.</summary>
      <returns>The character or characters that specify how text is formatted.</returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="P:System.Windows.Forms.DataGridTextBoxColumn.FormatInfo">
      <summary>Gets or sets the culture specific information used to determine how values are formatted.</summary>
      <returns>An object that implements the <see cref="T:System.IFormatProvider" /> interface, such as the <see cref="T:System.Globalization.CultureInfo" /> class.</returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Windows.Forms.DataGridTextBoxColumn.GetMinimumHeight">
      <summary>Gets the height of a cell in a <see cref="T:System.Windows.Forms.DataGridColumnStyle" />.</summary>
      <returns>The height of a cell.</returns>
    </member>
    <member name="M:System.Windows.Forms.DataGridTextBoxColumn.GetPreferredHeight(System.Drawing.Graphics,System.Object)">
      <summary>Gets the height to be used in for automatically resizing columns.</summary>
      <returns>The height the cells automatically resize to.</returns>
      <param name="g">A <see cref="T:System.Drawing.Graphics" /> object used to draw shapes on the screen. </param>
      <param name="value">The value to draw. </param>
    </member>
    <member name="M:System.Windows.Forms.DataGridTextBoxColumn.GetPreferredSize(System.Drawing.Graphics,System.Object)">
      <summary>Returns the optimum width and height of the cell in a specified row relative to the specified value.</summary>
      <returns>A <see cref="T:System.Drawing.Size" /> that contains the dimensions of the cell.</returns>
      <param name="g">A <see cref="T:System.Drawing.Graphics" /> object used to draw shapes on the screen. </param>
      <param name="value">The value to draw. </param>
    </member>
    <member name="M:System.Windows.Forms.DataGridTextBoxColumn.HideEditBox">
      <summary>Hides the <see cref="T:System.Windows.Forms.DataGridTextBox" /> control and moves the focus to the <see cref="T:System.Windows.Forms.DataGrid" /> control.</summary>
    </member>
    <member name="M:System.Windows.Forms.DataGridTextBoxColumn.Paint(System.Drawing.Graphics,System.Drawing.Rectangle,System.Windows.Forms.CurrencyManager,System.Int32)">
      <summary>Paints the a <see cref="T:System.Windows.Forms.DataGridColumnStyle" /> with the specified <see cref="T:System.Drawing.Graphics" />, <see cref="T:System.Drawing.Rectangle" />, <see cref="T:System.Windows.Forms.CurrencyManager" />, and row number.</summary>
      <param name="g">The <see cref="T:System.Drawing.Graphics" /> object to draw to. </param>
      <param name="bounds">The bounding <see cref="T:System.Drawing.Rectangle" /> to paint into. </param>
      <param name="source">The <see cref="T:System.Windows.Forms.CurrencyManager" /> of the <see cref="T:System.Windows.Forms.DataGrid" /> the that contains the column. </param>
      <param name="rowNum">The number of the row in the underlying data table. </param>
    </member>
    <member name="M:System.Windows.Forms.DataGridTextBoxColumn.Paint(System.Drawing.Graphics,System.Drawing.Rectangle,System.Windows.Forms.CurrencyManager,System.Int32,System.Boolean)">
      <summary>Paints a <see cref="T:System.Windows.Forms.DataGridColumnStyle" /> with the specified <see cref="T:System.Drawing.Graphics" />, <see cref="T:System.Drawing.Rectangle" />, <see cref="T:System.Windows.Forms.CurrencyManager" />, row number, and alignment.</summary>
      <param name="g">The <see cref="T:System.Drawing.Graphics" /> object to draw to. </param>
      <param name="bounds">The bounding <see cref="T:System.Drawing.Rectangle" /> to paint into. </param>
      <param name="source">The <see cref="T:System.Windows.Forms.CurrencyManager" /> of the <see cref="T:System.Windows.Forms.DataGrid" /> the that contains the column. </param>
      <param name="rowNum">The number of the row in the underlying data table. </param>
      <param name="alignToRight">A value indicating whether to align the column's content to the right. true if the content should be aligned to the right; otherwise, false. </param>
    </member>
    <member name="M:System.Windows.Forms.DataGridTextBoxColumn.Paint(System.Drawing.Graphics,System.Drawing.Rectangle,System.Windows.Forms.CurrencyManager,System.Int32,System.Drawing.Brush,System.Drawing.Brush,System.Boolean)">
      <summary>Paints a <see cref="T:System.Windows.Forms.DataGridColumnStyle" /> with the specified <see cref="T:System.Drawing.Graphics" />, <see cref="T:System.Drawing.Rectangle" />, <see cref="T:System.Windows.Forms.CurrencyManager" />, row number, <see cref="T:System.Drawing.Brush" />, and foreground color.</summary>
      <param name="g">The <see cref="T:System.Drawing.Graphics" /> object to draw to. </param>
      <param name="bounds">The bounding <see cref="T:System.Drawing.Rectangle" /> to paint into. </param>
      <param name="source">The <see cref="T:System.Windows.Forms.CurrencyManager" /> of the <see cref="T:System.Windows.Forms.DataGrid" /> the that contains the column. </param>
      <param name="rowNum">The number of the row in the underlying data table. </param>
      <param name="backBrush">A <see cref="T:System.Drawing.Brush" /> that paints the background. </param>
      <param name="foreBrush">A <see cref="T:System.Drawing.Brush" /> that paints the foreground color. </param>
      <param name="alignToRight">A value indicating whether to align the column's content to the right. true if the content should be aligned to the right; otherwise, false. </param>
    </member>
    <member name="M:System.Windows.Forms.DataGridTextBoxColumn.PaintText(System.Drawing.Graphics,System.Drawing.Rectangle,System.String,System.Boolean)">
      <summary>Draws the text and rectangle at the given location with the specified alignment.</summary>
      <param name="g">A <see cref="T:System.Drawing.Graphics" /> object used to draw the string. </param>
      <param name="bounds">A <see cref="T:System.Drawing.Rectangle" /> which contains the boundary data of the rectangle. </param>
      <param name="text">The string to be drawn to the screen. </param>
      <param name="alignToRight">A value indicating whether the text is right-aligned. </param>
    </member>
    <member name="M:System.Windows.Forms.DataGridTextBoxColumn.PaintText(System.Drawing.Graphics,System.Drawing.Rectangle,System.String,System.Drawing.Brush,System.Drawing.Brush,System.Boolean)">
      <summary>Draws the text and rectangle at the specified location with the specified colors and alignment.</summary>
      <param name="g">A <see cref="T:System.Drawing.Graphics" /> object used to draw the string. </param>
      <param name="textBounds">A <see cref="T:System.Drawing.Rectangle" /> which contains the boundary data of the rectangle. </param>
      <param name="text">The string to be drawn to the screen. </param>
      <param name="backBrush">A <see cref="T:System.Drawing.Brush" /> that determines the rectangle's background color </param>
      <param name="foreBrush">A <see cref="T:System.Drawing.Brush" /> that determines the rectangles foreground color. </param>
      <param name="alignToRight">A value indicating whether the text is right-aligned. </param>
    </member>
    <member name="P:System.Windows.Forms.DataGridTextBoxColumn.PropertyDescriptor">
      <summary>Gets or sets the <see cref="T:System.ComponentModel.PropertyDescriptor" /> for the <see cref="T:System.Windows.Forms.DataGridTextBoxColumn" />.</summary>
      <returns>A <see cref="T:System.ComponentModel.PropertyDescriptor" /> that formats the values displayed in the column.</returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="P:System.Windows.Forms.DataGridTextBoxColumn.ReadOnly">
      <summary>Sets a value indicating whether the text box column is read-only.</summary>
      <returns>true if the text box column is read-only; otherwise, false.</returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Windows.Forms.DataGridTextBoxColumn.ReleaseHostedControl">
      <summary>Removes the reference that the <see cref="T:System.Windows.Forms.DataGrid" /> holds to the control used to edit data.</summary>
    </member>
    <member name="M:System.Windows.Forms.DataGridTextBoxColumn.SetDataGridInColumn(System.Windows.Forms.DataGrid)">
      <summary>Adds a <see cref="T:System.Windows.Forms.TextBox" /> control to the <see cref="T:System.Windows.Forms.DataGrid" /> control's <see cref="T:System.Windows.Forms.Control.ControlCollection" />.</summary>
      <param name="value">The <see cref="T:System.Windows.Forms.DataGrid" /> control the <see cref="T:System.Windows.Forms.TextBox" /> control is added to. </param>
    </member>
    <member name="P:System.Windows.Forms.DataGridTextBoxColumn.TextBox">
      <summary>Gets the hosted <see cref="T:System.Windows.Forms.TextBox" /> control.</summary>
      <returns>A <see cref="T:System.Windows.Forms.TextBox" /> control hosted by the column.</returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Windows.Forms.DataGridTextBoxColumn.UpdateUI(System.Windows.Forms.CurrencyManager,System.Int32,System.String)">
      <summary>Updates the user interface.</summary>
      <param name="source">The <see cref="T:System.Windows.Forms.CurrencyManager" /> that supplies the data. </param>
      <param name="rowNum">The index of the row to update. </param>
      <param name="displayText">The text that will be displayed in the cell. </param>
    </member>
    <member name="T:System.Windows.Forms.DataGridView">
      <summary>Displays data in a customizable grid.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Windows.Forms.DataGridView.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Forms.DataGridView" /> class.</summary>
    </member>
    <member name="M:System.Windows.Forms.DataGridView.AccessibilityNotifyCurrentCellChanged(System.Drawing.Point)">
      <summary>Notifies the accessible client applications when a new cell becomes the current cell. </summary>
      <param name="cellAddress">A <see cref="T:System.Drawing.Point" /> indicating the row and column indexes of the new current cell.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">The value of the <see cref="P:System.Drawing.Point.X" /> property of <paramref name="cellAddress" /> is less than 0 or greater than the number of columns in the control minus 1. -or-The value of the <see cref="P:System.Drawing.Point.Y" /> property of <paramref name="cellAddress" /> is less than 0 or greater than the number of rows in the control minus 1.</exception>
    </member>
    <member name="M:System.Windows.Forms.DataGridView.AdjustColumnHeaderBorderStyle(System.Windows.Forms.DataGridViewAdvancedBorderStyle,System.Windows.Forms.DataGridViewAdvancedBorderStyle,System.Boolean,System.Boolean)">
      <summary>Adjusts the <see cref="T:System.Windows.Forms.DataGridViewAdvancedBorderStyle" /> for a column header cell of a <see cref="T:System.Windows.Forms.DataGridView" /> that is currently being painted.</summary>
      <returns>A <see cref="T:System.Windows.Forms.DataGridViewAdvancedBorderStyle" /> that represents the border style for the current column header.</returns>
      <param name="dataGridViewAdvancedBorderStyleInput">A <see cref="T:System.Windows.Forms.DataGridViewAdvancedBorderStyle" /> that that represents the column header border style to modify.</param>
      <param name="dataGridViewAdvancedBorderStylePlaceholder">A <see cref="T:System.Windows.Forms.DataGridViewAdvancedBorderStyle" /> that is used to store intermediate changes to the column header border style.</param>
      <param name="isFirstDisplayedColumn">true to indicate that the <see cref="T:System.Windows.Forms.DataGridViewCell" /> that is currently being painted is in the first column displayed on the <see cref="T:System.Windows.Forms.DataGridView" />; otherwise, false.</param>
      <param name="isLastVisibleColumn">true to indicate that the <see cref="T:System.Windows.Forms.DataGridViewCell" /> that is currently being painted is in the last column in the <see cref="T:System.Windows.Forms.DataGridView" /> that has the <see cref="P:System.Windows.Forms.DataGridViewColumn.Visible" /> property set to true; otherwise, false.</param>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="P:System.Windows.Forms.DataGridView.AdjustedTopLeftHeaderBorderStyle">
      <summary>Gets the border style for the upper-left cell in the <see cref="T:System.Windows.Forms.DataGridView" />.</summary>
      <returns>A <see cref="T:System.Windows.Forms.DataGridViewAdvancedBorderStyle" /> that represents the style of the border of the upper-left cell in the <see cref="T:System.Windows.Forms.DataGridView" />.</returns>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="P:System.Windows.Forms.DataGridView.AdvancedCellBorderStyle">
      <summary>Gets the border style of the cells in the <see cref="T:System.Windows.Forms.DataGridView" />.</summary>
      <returns>A <see cref="T:System.Windows.Forms.DataGridViewAdvancedBorderStyle" /> that represents the border style of the cells in the <see cref="T:System.Windows.Forms.DataGridView" />.</returns>
    </member>
    <member name="P:System.Windows.Forms.DataGridView.AdvancedColumnHeadersBorderStyle">
      <summary>Gets the border style of the column header cells in the <see cref="T:System.Windows.Forms.DataGridView" />.</summary>
      <returns>A <see cref="T:System.Windows.Forms.DataGridViewAdvancedBorderStyle" /> that represents the border style of the <see cref="T:System.Windows.Forms.DataGridViewColumnHeaderCell" /> objects in the <see cref="T:System.Windows.Forms.DataGridView" />.</returns>
    </member>
    <member name="P:System.Windows.Forms.DataGridView.AdvancedRowHeadersBorderStyle">
      <summary>Gets the border style of the row header cells in the <see cref="T:System.Windows.Forms.DataGridView" />.</summary>
      <returns>A <see cref="T:System.Windows.Forms.DataGridViewAdvancedBorderStyle" /> that represents the border style of the <see cref="T:System.Windows.Forms.DataGridViewRowHeaderCell" /> objects in the <see cref="T:System.Windows.Forms.DataGridView" />.</returns>
    </member>
    <member name="P:System.Windows.Forms.DataGridView.AllowUserToAddRows">
      <summary>Gets or sets a value indicating whether the option to add rows is displayed to the user.</summary>
      <returns>true if the add-row option is displayed to the user; otherwise false. The default is true.</returns>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
        <IPermission class="System.Diagnostics.PerformanceCounterPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="E:System.Windows.Forms.DataGridView.AllowUserToAddRowsChanged">
      <summary>Occurs when the value of the <see cref="P:System.Windows.Forms.DataGridView.AllowUserToAddRows" /> property changes.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="P:System.Windows.Forms.DataGridView.AllowUserToDeleteRows">
      <summary>Gets or sets a value indicating whether the user is allowed to delete rows from the <see cref="T:System.Windows.Forms.DataGridView" />.</summary>
      <returns>true if the user can delete rows; otherwise, false. The default is true.</returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="E:System.Windows.Forms.DataGridView.AllowUserToDeleteRowsChanged">
      <summary>Occurs when the value of the <see cref="E:System.Windows.Forms.DataGridView.AllowUserToDeleteRowsChanged" /> property changes.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="P:System.Windows.Forms.DataGridView.AllowUserToOrderColumns">
      <summary>Gets or sets a value indicating whether manual column repositioning is enabled.</summary>
      <returns>true if the user can change the column order; otherwise, false. The default is false.</returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="E:System.Windows.Forms.DataGridView.AllowUserToOrderColumnsChanged">
      <summary>Occurs when the value of the <see cref="P:System.Windows.Forms.DataGridView.AllowUserToOrderColumns" /> property changes.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="P:System.Windows.Forms.DataGridView.AllowUserToResizeColumns">
      <summary>Gets or sets a value indicating whether users can resize columns.</summary>
      <returns>true if users can resize columns; otherwise, false. The default is true.</returns>
    </member>
    <member name="E:System.Windows.Forms.DataGridView.AllowUserToResizeColumnsChanged">
      <summary>Occurs when the value of the <see cref="P:System.Windows.Forms.DataGridView.AllowUserToResizeColumns" /> property changes.</summary>
    </member>
    <member name="P:System.Windows.Forms.DataGridView.AllowUserToResizeRows">
      <summary>Gets or sets a value indicating whether users can resize rows.</summary>
      <returns>true if all the rows are resizable; otherwise, false. The default is true.</returns>
    </member>
    <member name="E:System.Windows.Forms.DataGridView.AllowUserToResizeRowsChanged">
      <summary>Occurs when the value of the <see cref="P:System.Windows.Forms.DataGridView.AllowUserToResizeRows" /> property changes.</summary>
    </member>
    <member name="P:System.Windows.Forms.DataGridView.AlternatingRowsDefaultCellStyle">
      <summary>Gets or sets the default cell style applied to odd-numbered rows of the <see cref="T:System.Windows.Forms.DataGridView" />.</summary>
      <returns>A <see cref="T:System.Windows.Forms.DataGridViewCellStyle" /> to apply to the odd-numbered rows.</returns>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
        <IPermission class="System.Diagnostics.PerformanceCounterPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="E:System.Windows.Forms.DataGridView.AlternatingRowsDefaultCellStyleChanged">
      <summary>Occurs when the value of the <see cref="P:System.Windows.Forms.DataGridView.AlternatingRowsDefaultCellStyle" /> property changes.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Windows.Forms.DataGridView.AreAllCellsSelected(System.Boolean)">
      <summary>Returns a value indicating whether all the <see cref="T:System.Windows.Forms.DataGridView" /> cells are currently selected.</summary>
      <returns>true if all cells (or all visible cells) are selected or if there are no cells (or no visible cells); otherwise, false.</returns>
      <param name="includeInvisibleCells">true to include the rows and columns with <see cref="P:System.Windows.Forms.DataGridViewBand.Visible" /> property values of false; otherwise, false. </param>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
        <IPermission class="System.Diagnostics.PerformanceCounterPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="P:System.Windows.Forms.DataGridView.AutoGenerateColumns">
      <summary>Gets or sets a value indicating whether columns are created automatically when the <see cref="P:System.Windows.Forms.DataGridView.DataSource" /> or <see cref="P:System.Windows.Forms.DataGridView.DataMember" /> properties are set.</summary>
      <returns>true if the columns should be created automatically; otherwise, false. The default is true.</returns>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
        <IPermission class="System.Diagnostics.PerformanceCounterPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="E:System.Windows.Forms.DataGridView.AutoGenerateColumnsChanged">
      <summary>Occurs when the value of the <see cref="E:System.Windows.Forms.DataGridView.AutoGenerateColumnsChanged" /> property changes.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Windows.Forms.DataGridView.AutoResizeColumn(System.Int32)">
      <summary>Adjusts the width of the specified column to fit the contents of all its cells, including the header cell. </summary>
      <param name="columnIndex">The index of the column to resize.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="columnIndex" /> is not in the valid range of 0 to the number of columns minus 1. </exception>
    </member>
    <member name="M:System.Windows.Forms.DataGridView.AutoResizeColumn(System.Int32,System.Windows.Forms.DataGridViewAutoSizeColumnMode)">
      <summary>Adjusts the width of the specified column using the specified size mode.</summary>
      <param name="columnIndex">The index of the column to resize. </param>
      <param name="autoSizeColumnMode">One of the <see cref="T:System.Windows.Forms.DataGridViewAutoSizeColumnMode" /> values. </param>
      <exception cref="T:System.InvalidOperationException">
        <paramref name="autoSizeColumnMode" /> has the value <see cref="F:System.Windows.Forms.DataGridViewAutoSizeColumnMode.ColumnHeader" /> and <see cref="P:System.Windows.Forms.DataGridView.ColumnHeadersVisible" /> is false. </exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="autoSizeColumnMode" /> has the value <see cref="F:System.Windows.Forms.DataGridViewAutoSizeColumnMode.NotSet" />, <see cref="F:System.Windows.Forms.DataGridViewAutoSizeColumnMode.None" />, or <see cref="F:System.Windows.Forms.DataGridViewAutoSizeColumnMode.Fill" />. </exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="columnIndex" /> is not in the valid range of 0 to the number of columns minus 1. </exception>
      <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">
        <paramref name="autoSizeColumnMode" /> is not a valid <see cref="T:System.Windows.Forms.DataGridViewAutoSizeColumnMode" /> value.</exception>
    </member>
    <member name="M:System.Windows.Forms.DataGridView.AutoResizeColumn(System.Int32,System.Windows.Forms.DataGridViewAutoSizeColumnMode,System.Boolean)">
      <summary>Adjusts the width of the specified column using the specified size mode, optionally calculating the width with the expectation that row heights will subsequently be adjusted. </summary>
      <param name="columnIndex">The index of the column to resize. </param>
      <param name="autoSizeColumnMode">One of the <see cref="T:System.Windows.Forms.DataGridViewAutoSizeColumnMode" /> values. </param>
      <param name="fixedHeight">true to calculate the new width based on the current row heights; false to calculate the width with the expectation that the row heights will also be adjusted.</param>
      <exception cref="T:System.InvalidOperationException">
        <paramref name="autoSizeColumnMode" /> has the value <see cref="F:System.Windows.Forms.DataGridViewAutoSizeColumnMode.ColumnHeader" /> and <see cref="P:System.Windows.Forms.DataGridView.ColumnHeadersVisible" /> is false. </exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="autoSizeColumnMode" /> has the value <see cref="F:System.Windows.Forms.DataGridViewAutoSizeColumnMode.NotSet" />, <see cref="F:System.Windows.Forms.DataGridViewAutoSizeColumnMode.None" />, or <see cref="F:System.Windows.Forms.DataGridViewAutoSizeColumnMode.Fill" />. </exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="columnIndex" /> is not in the valid range of 0 to the number of columns minus 1. </exception>
      <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">
        <paramref name="autoSizeColumnMode" /> is not a valid <see cref="T:System.Windows.Forms.DataGridViewAutoSizeColumnMode" /> value.</exception>
    </member>
    <member name="M:System.Windows.Forms.DataGridView.AutoResizeColumnHeadersHeight">
      <summary>Adjusts the height of the column headers to fit the contents of the largest column header.</summary>
    </member>
    <member name="M:System.Windows.Forms.DataGridView.AutoResizeColumnHeadersHeight(System.Boolean,System.Boolean)">
      <summary>Adjusts the height of the column headers to fit their contents, optionally calculating the height with the expectation that the column and/or row header widths will subsequently be adjusted.</summary>
      <param name="fixedRowHeadersWidth">true to calculate the new height based on the current width of the row headers; false to calculate the height with the expectation that the row headers width will also be adjusted. </param>
      <param name="fixedColumnsWidth">true to calculate the new height based on the current column widths; false to calculate the height with the expectation that the column widths will also be adjusted.</param>
    </member>
    <member name="M:System.Windows.Forms.DataGridView.AutoResizeColumnHeadersHeight(System.Int32)">
      <summary>Adjusts the height of the column headers based on changes to the contents of the header in the specified column.</summary>
      <param name="columnIndex">The index of the column containing the header with the changed content.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="columnIndex" /> is not in the valid range of 0 to the number of columns minus 1.</exception>
    </member>
    <member name="M:System.Windows.Forms.DataGridView.AutoResizeColumnHeadersHeight(System.Int32,System.Boolean,System.Boolean)">
      <summary>Adjusts the height of the column headers based on changes to the contents of the header in the specified column, optionally calculating the height with the expectation that the column and/or row header widths will subsequently be adjusted.</summary>
      <param name="columnIndex">The index of the column header whose contents should be used to determine new height.</param>
      <param name="fixedRowHeadersWidth">true to calculate the new height based on the current width of the row headers; false to calculate the height with the expectation that the row headers width will also be adjusted.</param>
      <param name="fixedColumnWidth">true to calculate the new height based on the current width of the specified column; false to calculate the height with the expectation that the column width will also be adjusted.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="columnIndex" /> is not in the valid range of 0 to the number of columns minus 1. </exception>
    </member>
    <member name="M:System.Windows.Forms.DataGridView.AutoResizeColumns">
      <summary>Adjusts the width of all columns to fit the contents of all their cells, including the header cells.</summary>
    </member>
    <member name="M:System.Windows.Forms.DataGridView.AutoResizeColumns(System.Windows.Forms.DataGridViewAutoSizeColumnsMode)">
      <summary>Adjusts the width of all columns using the specified size mode.</summary>
      <param name="autoSizeColumnsMode">One of the <see cref="T:System.Windows.Forms.DataGridViewAutoSizeColumnsMode" /> values. </param>
      <exception cref="T:System.InvalidOperationException">
        <paramref name="autoSizeColumnsMode" /> has the value <see cref="F:System.Windows.Forms.DataGridViewAutoSizeColumnsMode.ColumnHeader" /> and <see cref="P:System.Windows.Forms.DataGridView.ColumnHeadersVisible" /> is false. </exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="autoSizeColumnsMode" /> has the value <see cref="F:System.Windows.Forms.DataGridViewAutoSizeColumnsMode.None" /> or <see cref="F:System.Windows.Forms.DataGridViewAutoSizeColumnsMode.Fill" />. </exception>
      <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">
        <paramref name="autoSizeColumnsMode" /> is not a valid <see cref="T:System.Windows.Forms.DataGridViewAutoSizeColumnsMode" /> value.</exception>
    </member>
    <member name="M:System.Windows.Forms.DataGridView.AutoResizeColumns(System.Windows.Forms.DataGridViewAutoSizeColumnsMode,System.Boolean)">
      <summary>Adjusts the width of all columns using the specified size mode, optionally calculating the widths with the expectation that row heights will subsequently be adjusted. </summary>
      <param name="autoSizeColumnsMode">One of the <see cref="T:System.Windows.Forms.DataGridViewAutoSizeColumnsMode" /> values. </param>
      <param name="fixedHeight">true to calculate the new widths based on the current row heights; false to calculate the widths with the expectation that the row heights will also be adjusted.</param>
      <exception cref="T:System.InvalidOperationException">
        <paramref name="autoSizeColumnsMode" /> has the value <see cref="F:System.Windows.Forms.DataGridViewAutoSizeColumnsMode.ColumnHeader" /> and <see cref="P:System.Windows.Forms.DataGridView.ColumnHeadersVisible" /> is false. </exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="autoSizeColumnsMode" /> has the value <see cref="F:System.Windows.Forms.DataGridViewAutoSizeColumnsMode.None" /> or <see cref="F:System.Windows.Forms.DataGridViewAutoSizeColumnsMode.Fill" />. </exception>
      <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">
        <paramref name="autoSizeColumnsMode" /> is not a valid <see cref="T:System.Windows.Forms.DataGridViewAutoSizeColumnsMode" /> value.</exception>
    </member>
    <member name="M:System.Windows.Forms.DataGridView.AutoResizeRow(System.Int32)">
      <summary>Adjusts the height of the specified row to fit the contents of all its cells including the header cell.</summary>
      <param name="rowIndex">The index of the row to resize.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="rowIndex" /> is not in the valid range of 0 to the number of rows minus 1. </exception>
    </member>
    <member name="M:System.Windows.Forms.DataGridView.AutoResizeRow(System.Int32,System.Windows.Forms.DataGridViewAutoSizeRowMode)">
      <summary>Adjusts the height of the specified row using the specified size mode.</summary>
      <param name="rowIndex">The index of the row to resize. </param>
      <param name="autoSizeRowMode">One of the <see cref="T:System.Windows.Forms.DataGridViewAutoSizeRowMode" /> values. </param>
      <exception cref="T:System.InvalidOperationException">
        <paramref name="autoSizeRowMode" /> has the value <see cref="F:System.Windows.Forms.DataGridViewAutoSizeRowMode.RowHeader" /> and <see cref="P:System.Windows.Forms.DataGridView.RowHeadersVisible" /> is false. </exception>
      <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">
        <paramref name="autoSizeRowMode" /> is not a valid <see cref="T:System.Windows.Forms.DataGridViewAutoSizeRowMode" /> value. </exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="rowIndex" /> is not in the valid range of 0 to the number of rows minus 1.</exception>
    </member>
    <member name="M:System.Windows.Forms.DataGridView.AutoResizeRow(System.Int32,System.Windows.Forms.DataGridViewAutoSizeRowMode,System.Boolean)">
      <summary>Adjusts the height of the specified row using the specified size mode, optionally calculating the height with the expectation that column widths will subsequently be adjusted. </summary>
      <param name="rowIndex">The index of the row to resize. </param>
      <param name="autoSizeRowMode">One of the <see cref="T:System.Windows.Forms.DataGridViewAutoSizeRowMode" /> values. </param>
      <param name="fixedWidth">true to calculate the new height based on the current width of the columns; false to calculate the height with the expectation that the column widths will also be adjusted.</param>
      <exception cref="T:System.InvalidOperationException">
        <paramref name="autoSizeRowMode" /> has the value <see cref="F:System.Windows.Forms.DataGridViewAutoSizeRowMode.RowHeader" /> and <see cref="P:System.Windows.Forms.DataGridView.RowHeadersVisible" /> is false. </exception>
      <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">
        <paramref name="autoSizeRowMode" /> is not a valid <see cref="T:System.Windows.Forms.DataGridViewAutoSizeRowMode" /> value. </exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="rowIndex" /> is not in the valid range of 0 to the number of rows minus 1.</exception>
    </member>
    <member name="M:System.Windows.Forms.DataGridView.AutoResizeRowHeadersWidth(System.Int32,System.Windows.Forms.DataGridViewRowHeadersWidthSizeMode)">
      <summary>Adjusts the width of the row headers based on changes to the contents of the header in the specified row and using the specified size mode.</summary>
      <param name="rowIndex">The index of the row header with the changed content.</param>
      <param name="rowHeadersWidthSizeMode">One of the <see cref="T:System.Windows.Forms.DataGridViewRowHeadersWidthSizeMode" /> values.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="rowIndex" /> is not in the valid range of 0 to the number of rows minus 1. </exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="rowHeadersWidthSizeMode" /> has the value <see cref="F:System.Windows.Forms.DataGridViewRowHeadersWidthSizeMode.EnableResizing" /> or <see cref="F:System.Windows.Forms.DataGridViewRowHeadersWidthSizeMode.DisableResizing" /></exception>
      <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">
        <paramref name="rowHeadersWidthSizeMode" /> is not a valid <see cref="T:System.Windows.Forms.DataGridViewRowHeadersWidthSizeMode" /> value. </exception>
    </member>
    <member name="M:System.Windows.Forms.DataGridView.AutoResizeRowHeadersWidth(System.Int32,System.Windows.Forms.DataGridViewRowHeadersWidthSizeMode,System.Boolean,System.Boolean)">
      <summary>Adjusts the width of the row headers based on changes to the contents of the header in the specified row and using the specified size mode, optionally calculating the width with the expectation that the row and/or column header widths will subsequently be adjusted.</summary>
      <param name="rowIndex">The index of the row containing the header with the changed content.</param>
      <param name="rowHeadersWidthSizeMode">One of the <see cref="T:System.Windows.Forms.DataGridViewRowHeadersWidthSizeMode" /> values.</param>
      <param name="fixedColumnHeadersHeight">true to calculate the new width based on the current height of the column headers; false to calculate the width with the expectation that the height of the column headers will also be adjusted.</param>
      <param name="fixedRowHeight">true to calculate the new width based on the current height of the specified row; false to calculate the width with the expectation that the row height will also be adjusted.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="rowIndex" /> is not in the valid range of 0 to the number of rows minus 1. </exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="rowHeadersWidthSizeMode" /> has the value <see cref="F:System.Windows.Forms.DataGridViewRowHeadersWidthSizeMode.EnableResizing" /> or <see cref="F:System.Windows.Forms.DataGridViewRowHeadersWidthSizeMode.DisableResizing" />.</exception>
      <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">
        <paramref name="rowHeadersWidthSizeMode" /> is not a valid <see cref="T:System.Windows.Forms.DataGridViewRowHeadersWidthSizeMode" /> value. </exception>
    </member>
    <member name="M:System.Windows.Forms.DataGridView.AutoResizeRowHeadersWidth(System.Windows.Forms.DataGridViewRowHeadersWidthSizeMode)">
      <summary>Adjusts the width of the row headers using the specified size mode.</summary>
      <param name="rowHeadersWidthSizeMode">One of the <see cref="T:System.Windows.Forms.DataGridViewRowHeadersWidthSizeMode" /> values.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="rowHeadersWidthSizeMode" /> has the value <see cref="F:System.Windows.Forms.DataGridViewRowHeadersWidthSizeMode.EnableResizing" /> or <see cref="F:System.Windows.Forms.DataGridViewRowHeadersWidthSizeMode.DisableResizing" />.</exception>
      <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">
        <paramref name="rowHeadersWidthSizeMode" /> is not a valid <see cref="T:System.Windows.Forms.DataGridViewRowHeadersWidthSizeMode" /> value. </exception>
    </member>
    <member name="M:System.Windows.Forms.DataGridView.AutoResizeRowHeadersWidth(System.Windows.Forms.DataGridViewRowHeadersWidthSizeMode,System.Boolean,System.Boolean)">
      <summary>Adjusts the width of the row headers using the specified size mode, optionally calculating the width with the expectation that the row and/or column header widths will subsequently be adjusted.</summary>
      <param name="rowHeadersWidthSizeMode">One of the <see cref="T:System.Windows.Forms.DataGridViewRowHeadersWidthSizeMode" /> values.</param>
      <param name="fixedColumnHeadersHeight">true to calculate the new width based on the current height of the column headers; false to calculate the width with the expectation that the height of the column headers will also be adjusted.</param>
      <param name="fixedRowsHeight">true to calculate the new width based on the current row heights; false to calculate the width with the expectation that the row heights will also be adjusted.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="rowHeadersWidthSizeMode" /> has the value <see cref="F:System.Windows.Forms.DataGridViewRowHeadersWidthSizeMode.EnableResizing" /> or <see cref="F:System.Windows.Forms.DataGridViewRowHeadersWidthSizeMode.DisableResizing" />.</exception>
      <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">
        <paramref name="rowHeadersWidthSizeMode" /> is not a valid <see cref="T:System.Windows.Forms.DataGridViewRowHeadersWidthSizeMode" /> value. </exception>
    </member>
    <member name="M:System.Windows.Forms.DataGridView.AutoResizeRows">
      <summary>Adjusts the heights of all rows to fit the contents of all their cells, including the header cells.</summary>
    </member>
    <member name="M:System.Windows.Forms.DataGridView.AutoResizeRows(System.Int32,System.Int32,System.Windows.Forms.DataGridViewAutoSizeRowMode,System.Boolean)">
      <summary>Adjusts the heights of the specified rows using the specified size mode, optionally calculating the heights with the expectation that column widths will subsequently be adjusted. </summary>
      <param name="rowIndexStart">The index of the first row to resize. </param>
      <param name="rowsCount">The number of rows to resize. </param>
      <param name="autoSizeRowMode">One of the <see cref="T:System.Windows.Forms.DataGridViewAutoSizeRowMode" /> values. </param>
      <param name="fixedWidth">true to calculate the new heights based on the current column widths; false to calculate the heights with the expectation that the column widths will also be adjusted.</param>
      <exception cref="T:System.InvalidOperationException">
        <paramref name="autoSizeRowsMode" /> has the value <see cref="F:System.Windows.Forms.DataGridViewAutoSizeRowsMode.AllHeaders" /> or <see cref="F:System.Windows.Forms.DataGridViewAutoSizeRowsMode.DisplayedHeaders" />, and <see cref="P:System.Windows.Forms.DataGridView.RowHeadersVisible" /> is false. </exception>
      <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">
        <paramref name="autoSizeRowsMode" /> is not a valid <see cref="T:System.Windows.Forms.DataGridViewAutoSizeRowsMode" /> value. </exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="autoSizeRowsMode" /> has the value <see cref="F:System.Windows.Forms.DataGridViewAutoSizeRowsMode.None" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="rowIndexStart" /> is less than 0.-or-<paramref name="rowsCount" /> is less than 0.</exception>
    </member>
    <member name="M:System.Windows.Forms.DataGridView.AutoResizeRows(System.Windows.Forms.DataGridViewAutoSizeRowsMode)">
      <summary>Adjusts the heights of the rows using the specified size mode value.</summary>
      <param name="autoSizeRowsMode">One of the <see cref="T:System.Windows.Forms.DataGridViewAutoSizeRowsMode" /> values. </param>
      <exception cref="T:System.InvalidOperationException">
        <paramref name="autoSizeRowsMode" /> has the value <see cref="F:System.Windows.Forms.DataGridViewAutoSizeRowsMode.AllHeaders" /> or <see cref="F:System.Windows.Forms.DataGridViewAutoSizeRowsMode.DisplayedHeaders" />, and <see cref="P:System.Windows.Forms.DataGridView.RowHeadersVisible" /> is false. </exception>
      <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">
        <paramref name="autoSizeRowsMode" /> is not a valid <see cref="T:System.Windows.Forms.DataGridViewAutoSizeRowsMode" /> value. </exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="autoSizeRowsMode" /> has the value <see cref="F:System.Windows.Forms.DataGridViewAutoSizeRowsMode.None" />.</exception>
    </member>
    <member name="M:System.Windows.Forms.DataGridView.AutoResizeRows(System.Windows.Forms.DataGridViewAutoSizeRowsMode,System.Boolean)">
      <summary>Adjusts the heights of all rows using the specified size mode, optionally calculating the heights with the expectation that column widths will subsequently be adjusted. </summary>
      <param name="autoSizeRowsMode">One of the <see cref="T:System.Windows.Forms.DataGridViewAutoSizeRowsMode" /> values.</param>
      <param name="fixedWidth">true to calculate the new heights based on the current column widths; false to calculate the heights with the expectation that the column widths will also be adjusted.</param>
      <exception cref="T:System.InvalidOperationException">
        <paramref name="autoSizeRowsMode" /> has the value <see cref="F:System.Windows.Forms.DataGridViewAutoSizeRowsMode.AllHeaders" /> or <see cref="F:System.Windows.Forms.DataGridViewAutoSizeRowsMode.DisplayedHeaders" />, and <see cref="P:System.Windows.Forms.DataGridView.RowHeadersVisible" /> is false. </exception>
      <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">
        <paramref name="autoSizeRowsMode" /> is not a valid <see cref="T:System.Windows.Forms.DataGridViewAutoSizeRowsMode" /> value. </exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="autoSizeRowsMode" /> has the value <see cref="F:System.Windows.Forms.DataGridViewAutoSizeRowsMode.None" />.</exception>
    </member>
    <member name="P:System.Windows.Forms.DataGridView.AutoSize">
      <returns>true if enabled; otherwise, false.</returns>
    </member>
    <member name="E:System.Windows.Forms.DataGridView.AutoSizeColumnModeChanged">
      <summary>Occurs when the value of the <see cref="P:System.Windows.Forms.DataGridViewColumn.AutoSizeMode" /> property of a column changes.</summary>
    </member>
    <member name="P:System.Windows.Forms.DataGridView.AutoSizeColumnsMode">
      <summary>Gets or sets a value indicating how column widths are determined.</summary>
      <returns>A <see cref="T:System.Windows.Forms.DataGridViewAutoSizeColumnsMode" /> value. The default is <see cref="F:System.Windows.Forms.DataGridViewAutoSizeColumnsMode.None" />. </returns>
      <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">The specified value when setting this property is not a valid <see cref="T:System.Windows.Forms.DataGridViewAutoSizeColumnsMode" /> value. </exception>
      <exception cref="T:System.InvalidOperationException">The specified value when setting this property is <see cref="F:System.Windows.Forms.DataGridViewAutoSizeColumnsMode.ColumnHeader" />, column headers are hidden, and at least one visible column has an <see cref="P:System.Windows.Forms.DataGridViewColumn.AutoSizeMode" /> property value of <see cref="F:System.Windows.Forms.DataGridViewAutoSizeColumnMode.NotSet" />.-or-The specified value when setting this property is <see cref="F:System.Windows.Forms.DataGridViewAutoSizeColumnsMode.Fill" /> and at least one visible column with an <see cref="P:System.Windows.Forms.DataGridViewColumn.AutoSizeMode" /> property value of <see cref="F:System.Windows.Forms.DataGridViewAutoSizeColumnMode.NotSet" /> is frozen.</exception>
    </member>
    <member name="E:System.Windows.Forms.DataGridView.AutoSizeColumnsModeChanged">
      <summary>Occurs when the value of the <see cref="P:System.Windows.Forms.DataGridView.AutoSizeColumnsMode" /> property changes.</summary>
    </member>
    <member name="P:System.Windows.Forms.DataGridView.AutoSizeRowsMode">
      <summary>Gets or sets a value indicating how row heights are determined. </summary>
      <returns>A <see cref="T:System.Windows.Forms.DataGridViewAutoSizeRowsMode" /> value indicating the sizing mode. The default is <see cref="F:System.Windows.Forms.DataGridViewAutoSizeRowsMode.None" />.</returns>
      <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">The specified value when setting this property is not a valid <see cref="T:System.Windows.Forms.DataGridViewAutoSizeRowsMode" /> value. </exception>
      <exception cref="T:System.InvalidOperationException">The specified value when setting this property is <see cref="F:System.Windows.Forms.DataGridViewAutoSizeRowsMode.AllHeaders" /> or <see cref="F:System.Windows.Forms.DataGridViewAutoSizeRowsMode.DisplayedHeaders" /> and row headers are hidden. </exception>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
        <IPermission class="System.Diagnostics.PerformanceCounterPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="E:System.Windows.Forms.DataGridView.AutoSizeRowsModeChanged">
      <summary>Occurs when the value of the <see cref="T:System.Windows.Forms.DataGridViewAutoSizeRowsMode" /> property changes.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="P:System.Windows.Forms.DataGridView.BackColor">
      <summary>Gets or sets the background color for the control.</summary>
      <returns>A <see cref="T:System.Drawing.Color" /> that represents the background color of the control. The default is the value of the <see cref="P:System.Windows.Forms.Control.DefaultBackColor" /> property.</returns>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="E:System.Windows.Forms.DataGridView.BackColorChanged">
      <summary>Occurs when the value of the <see cref="P:System.Windows.Forms.DataGridView.BackColor" /> property changes.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="P:System.Windows.Forms.DataGridView.BackgroundColor">
      <summary>Gets or sets the background color of the <see cref="T:System.Windows.Forms.DataGridView" />.</summary>
      <returns>A <see cref="T:System.Drawing.Color" /> that represents the background color of the <see cref="T:System.Windows.Forms.DataGridView" />. The default is <see cref="P:System.Drawing.SystemColors.AppWorkspace" />. </returns>
      <exception cref="T:System.ArgumentException">The specified value when setting this property is <see cref="F:System.Drawing.Color.Empty" />. -or-The specified value when setting this property has a <see cref="P:System.Drawing.Color.A" /> property value that is less that 255.</exception>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="E:System.Windows.Forms.DataGridView.BackgroundColorChanged">
      <summary>Occurs when the value of the <see cref="P:System.Windows.Forms.DataGridView.BackgroundColor" /> property changes.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="P:System.Windows.Forms.DataGridView.BackgroundImage">
      <summary>Gets or sets the background image displayed in the control.</summary>
      <returns>An <see cref="T:System.Drawing.Image" /> that represents the image to display in the background of the control.</returns>
    </member>
    <member name="E:System.Windows.Forms.DataGridView.BackgroundImageChanged">
      <summary>Occurs when the value of the <see cref="P:System.Windows.Forms.DataGridView.BackgroundImage" /> property changes.</summary>
    </member>
    <member name="P:System.Windows.Forms.DataGridView.BackgroundImageLayout">
      <summary>Gets or sets the background image layout as defined in the <see cref="T:System.Windows.Forms.ImageLayout" /> enumeration.</summary>
      <returns>An <see cref="T:System.Windows.Forms.ImageLayout" /> value indicating the background image layout. The default is <see cref="F:System.Windows.Forms.ImageLayout.Tile" />.</returns>
    </member>
    <member name="E:System.Windows.Forms.DataGridView.BackgroundImageLayoutChanged">
      <summary>Occurs when the <see cref="P:System.Windows.Forms.DataGridView.BackgroundImageLayout" /> property changes.</summary>
    </member>
    <member name="M:System.Windows.Forms.DataGridView.BeginEdit(System.Boolean)">
      <summary>Puts the current cell in edit mode.</summary>
      <returns>true if the current cell is already in edit mode or successfully enters edit mode; otherwise, false.</returns>
      <param name="selectAll">true to select all the cell's contents; false to not select any contents.</param>
      <exception cref="T:System.InvalidOperationException">
        <see cref="P:System.Windows.Forms.DataGridView.CurrentCell" /> is not set to a valid cell.-or-This method was called in a handler for the <see cref="E:System.Windows.Forms.DataGridView.CellBeginEdit" /> event.</exception>
      <exception cref="T:System.InvalidCastException">The type indicated by the cell's <see cref="P:System.Windows.Forms.DataGridViewCell.EditType" /> property does not derive from the <see cref="T:System.Windows.Forms.Control" /> type.-or-The type indicated by the cell's <see cref="P:System.Windows.Forms.DataGridViewCell.EditType" /> property does not implement the <see cref="T:System.Windows.Forms.IDataGridViewEditingControl" /> interface.</exception>
      <exception cref="T:System.Exception">Initialization of the editing cell value failed and either there is no handler for the <see cref="E:System.Windows.Forms.DataGridView.DataError" /> event or the handler has set the <see cref="P:System.Windows.Forms.DataGridViewDataErrorEventArgs.ThrowException" /> property to true. The exception object can typically be cast to type <see cref="T:System.FormatException" />.</exception>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
        <IPermission class="System.Diagnostics.PerformanceCounterPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="P:System.Windows.Forms.DataGridView.BorderStyle">
      <summary>Gets or sets the border style for the <see cref="T:System.Windows.Forms.DataGridView" />.</summary>
      <returns>One of the <see cref="T:System.Windows.Forms.BorderStyle" /> values. The default is <see cref="F:System.Windows.Forms.BorderStyle.FixedSingle" />.</returns>
      <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">The specified value when setting this property is not a valid <see cref="T:System.Windows.Forms.BorderStyle" /> value. </exception>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
        <IPermission class="System.Diagnostics.PerformanceCounterPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="E:System.Windows.Forms.DataGridView.BorderStyleChanged">
      <summary>Occurs when the value of the <see cref="P:System.Windows.Forms.DataGridView.BorderStyle" /> property changes.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Windows.Forms.DataGridView.CancelEdit">
      <summary>Cancels edit mode for the currently selected cell and discards any changes.</summary>
      <returns>true if the cancel was successful; otherwise, false.</returns>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
        <IPermission class="System.Diagnostics.PerformanceCounterPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="E:System.Windows.Forms.DataGridView.CancelRowEdit">
      <summary>Occurs when the <see cref="P:System.Windows.Forms.DataGridView.VirtualMode" /> property of a <see cref="T:System.Windows.Forms.DataGridView" /> control is true and the cancels edits in a row.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="P:System.Windows.Forms.DataGridView.CanEnableIme">
      <summary>Gets a value indicating whether the <see cref="P:System.Windows.Forms.Control.ImeMode" /> property can be set to an active value, to enable IME support.</summary>
      <returns>true if there is an editable cell selected; otherwise, false.</returns>
    </member>
    <member name="E:System.Windows.Forms.DataGridView.CellBeginEdit">
      <summary>Occurs when edit mode starts for the selected cell.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="P:System.Windows.Forms.DataGridView.CellBorderStyle">
      <summary>Gets the cell border style for the <see cref="T:System.Windows.Forms.DataGridView" />.</summary>
      <returns>A <see cref="T:System.Windows.Forms.DataGridViewCellBorderStyle" /> that represents the border style of the cells contained in the <see cref="T:System.Windows.Forms.DataGridView" />.</returns>
      <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">The specified value when setting this property is not a valid <see cref="T:System.Windows.Forms.DataGridViewCellBorderStyle" /> value.</exception>
      <exception cref="T:System.ArgumentException">The specified value when setting this property is <see cref="F:System.Windows.Forms.DataGridViewCellBorderStyle.Custom" />.</exception>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
        <IPermission class="System.Diagnostics.PerformanceCounterPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="E:System.Windows.Forms.DataGridView.CellBorderStyleChanged">
      <summary>Occurs when the border style of a cell changes.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="E:System.Windows.Forms.DataGridView.CellClick">
      <summary>Occurs when any part of a cell is clicked.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="E:System.Windows.Forms.DataGridView.CellContentClick">
      <summary>Occurs when the content within a cell is clicked.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="E:System.Windows.Forms.DataGridView.CellContentDoubleClick">
      <summary>Occurs when the user double-clicks a cell's contents.</summary>
    </member>
    <member name="E:System.Windows.Forms.DataGridView.CellContextMenuStripChanged">
      <summary>Occurs when the <see cref="P:System.Windows.Forms.DataGridViewCell.ContextMenuStrip" /> property changes. </summary>
    </member>
    <member name="E:System.Windows.Forms.DataGridView.CellContextMenuStripNeeded">
      <summary>Occurs when a cell's shortcut menu is needed. </summary>
    </member>
    <member name="E:System.Windows.Forms.DataGridView.CellDoubleClick">
      <summary>Occurs when the user double-clicks anywhere in a cell.</summary>
    </member>
    <member name="E:System.Windows.Forms.DataGridView.CellEndEdit">
      <summary>Occurs when edit mode stops for the currently selected cell.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="E:System.Windows.Forms.DataGridView.CellEnter">
      <summary>Occurs when the current cell changes in the <see cref="T:System.Windows.Forms.DataGridView" /> control or when the control receives input focus. </summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="E:System.Windows.Forms.DataGridView.CellErrorTextChanged">
      <summary>Occurs when the value of the <see cref="P:System.Windows.Forms.DataGridViewCell.ErrorText" /> property of a cell changes.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="E:System.Windows.Forms.DataGridView.CellErrorTextNeeded">
      <summary>Occurs when a cell's error text is needed.</summary>
    </member>
    <member name="E:System.Windows.Forms.DataGridView.CellFormatting">
      <summary>Occurs when the contents of a cell need to be formatted for display.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="E:System.Windows.Forms.DataGridView.CellLeave">
      <summary>Occurs when a cell loses input focus and is no longer the current cell.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="E:System.Windows.Forms.DataGridView.CellMouseClick">
      <summary>Occurs whenever the user clicks anywhere on a cell with the mouse.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="E:System.Windows.Forms.DataGridView.CellMouseDoubleClick">
      <summary>Occurs when a cell within the <see cref="T:System.Windows.Forms.DataGridView" /> is double-clicked.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="E:System.Windows.Forms.DataGridView.CellMouseDown">
      <summary>Occurs when the user presses a mouse button while the mouse pointer is within the boundaries of a cell.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="E:System.Windows.Forms.DataGridView.CellMouseEnter">
      <summary>Occurs when the mouse pointer enters a cell.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="E:System.Windows.Forms.DataGridView.CellMouseLeave">
      <summary>Occurs when the mouse pointer leaves a cell.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="E:System.Windows.Forms.DataGridView.CellMouseMove">
      <summary>Occurs when the mouse pointer moves over the <see cref="T:System.Windows.Forms.DataGridView" /> control.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="E:System.Windows.Forms.DataGridView.CellMouseUp">
      <summary>Occurs when the user releases a mouse button while over a cell.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="E:System.Windows.Forms.DataGridView.CellPainting">
      <summary>Occurs when a cell needs to be drawn.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="E:System.Windows.Forms.DataGridView.CellParsing">
      <summary>Occurs when a cell leaves edit mode if the cell value has been modified.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="E:System.Windows.Forms.DataGridView.CellStateChanged">
      <summary>Occurs when a cell state changes, such as when the cell loses or gains focus.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="E:System.Windows.Forms.DataGridView.CellStyleChanged">
      <summary>Occurs when the <see cref="P:System.Windows.Forms.DataGridViewCell.Style" /> property of a <see cref="T:System.Windows.Forms.DataGridViewCell" /> changes.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="E:System.Windows.Forms.DataGridView.CellStyleContentChanged">
      <summary>Occurs when one of the values of a cell style changes.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="E:System.Windows.Forms.DataGridView.CellToolTipTextChanged">
      <summary>Occurs when the <see cref="P:System.Windows.Forms.DataGridViewCell.ToolTipText" /> property value changes for a cell in the <see cref="T:System.Windows.Forms.DataGridView" />.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="E:System.Windows.Forms.DataGridView.CellToolTipTextNeeded">
      <summary>Occurs when a cell's ToolTip text is needed.</summary>
    </member>
    <member name="E:System.Windows.Forms.DataGridView.CellValidated">
      <summary>Occurs after the cell has finished validating.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="E:System.Windows.Forms.DataGridView.CellValidating">
      <summary>Occurs when a cell loses input focus, enabling content validation.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="E:System.Windows.Forms.DataGridView.CellValueChanged">
      <summary>Occurs when the value of a cell changes.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="E:System.Windows.Forms.DataGridView.CellValueNeeded">
      <summary>Occurs when the <see cref="P:System.Windows.Forms.DataGridView.VirtualMode" /> property of the <see cref="T:System.Windows.Forms.DataGridView" /> control is true and the <see cref="T:System.Windows.Forms.DataGridView" /> requires a value for a cell in order to format and display the cell.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="E:System.Windows.Forms.DataGridView.CellValuePushed">
      <summary>Occurs when the <see cref="P:System.Windows.Forms.DataGridView.VirtualMode" /> property of the <see cref="T:System.Windows.Forms.DataGridView" /> control is true and a cell value has changed and requires storage in the underlying data source.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Windows.Forms.DataGridView.ClearSelection">
      <summary>Clears the current selection by unselecting all selected cells.</summary>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
        <IPermission class="System.Diagnostics.PerformanceCounterPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:System.Windows.Forms.DataGridView.ClearSelection(System.Int32,System.Int32,System.Boolean)">
      <summary>Cancels the selection of all currently selected cells except the one indicated, optionally ensuring that the indicated cell is selected. </summary>
      <param name="columnIndexException">The column index to exclude.</param>
      <param name="rowIndexException">The row index to exclude.</param>
      <param name="selectExceptionElement">true to select the excluded cell, row, or column; false to retain its original state.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="columnIndexException" /> is greater than the highest column index.-or-<paramref name="columnIndexException" /> is less than -1 when <see cref="P:System.Windows.Forms.DataGridView.SelectionMode" /> is <see cref="F:System.Windows.Forms.DataGridViewSelectionMode.FullRowSelect" />; otherwise, <paramref name="columnIndexException" /> is less than 0.-or- <paramref name="rowIndexException" /> is greater than the highest row index.-or-<paramref name="rowIndexException" /> is less than -1 when <see cref="P:System.Windows.Forms.DataGridView.SelectionMode" /> is <see cref="F:System.Windows.Forms.DataGridViewSelectionMode.FullColumnSelect" />; otherwise, <paramref name="rowIndexException" /> is less than 0.</exception>
    </member>
    <member name="P:System.Windows.Forms.DataGridView.ClipboardCopyMode">
      <summary>Gets or sets a value that indicates whether users can copy cell text values to the <see cref="T:System.Windows.Forms.Clipboard" /> and whether row and column header text is included.</summary>
      <returns>One of the <see cref="T:System.Windows.Forms.DataGridViewClipboardCopyMode" /> values. The default is <see cref="F:System.Windows.Forms.DataGridViewClipboardCopyMode.EnableWithAutoHeaderText" />.</returns>
      <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">The specified value when setting this property is not a valid <see cref="T:System.Windows.Forms.DataGridViewClipboardCopyMode" /> value.</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="E:System.Windows.Forms.DataGridView.ColumnAdded">
      <summary>Occurs when a column is added to the control.</summary>
    </member>
    <member name="E:System.Windows.Forms.DataGridView.ColumnContextMenuStripChanged">
      <summary>Occurs when the <see cref="P:System.Windows.Forms.DataGridViewColumn.ContextMenuStrip" /> property of a column changes.</summary>
    </member>
    <member name="P:System.Windows.Forms.DataGridView.ColumnCount">
      <summary>Gets or sets the number of columns displayed in the <see cref="T:System.Windows.Forms.DataGridView" />.</summary>
      <returns>The number of columns displayed in the <see cref="T:System.Windows.Forms.DataGridView" />.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">The specified value when setting this property is less than 0. </exception>
      <exception cref="T:System.InvalidOperationException">When setting this property, the <see cref="P:System.Windows.Forms.DataGridView.DataSource" /> property has been set. </exception>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
        <IPermission class="System.Diagnostics.PerformanceCounterPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="E:System.Windows.Forms.DataGridView.ColumnDataPropertyNameChanged">
      <summary>Occurs when the value of the <see cref="P:System.Windows.Forms.DataGridViewColumn.DataPropertyName" /> property for a column changes.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="E:System.Windows.Forms.DataGridView.ColumnDefaultCellStyleChanged">
      <summary>Occurs when the value of the <see cref="P:System.Windows.Forms.DataGridViewBand.DefaultCellStyle" /> property for a column changes.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="E:System.Windows.Forms.DataGridView.ColumnDisplayIndexChanged">
      <summary>Occurs when the value the <see cref="P:System.Windows.Forms.DataGridViewColumn.DisplayIndex" /> property for a column changes.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="E:System.Windows.Forms.DataGridView.ColumnDividerDoubleClick">
      <summary>Occurs when the user double-clicks a divider between two columns.</summary>
    </member>
    <member name="E:System.Windows.Forms.DataGridView.ColumnDividerWidthChanged">
      <summary>Occurs when the <see cref="P:System.Windows.Forms.DataGridViewColumn.DividerWidth" /> property changes.</summary>
    </member>
    <member name="E:System.Windows.Forms.DataGridView.ColumnHeaderCellChanged">
      <summary>Occurs when the contents of a column header cell change.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="E:System.Windows.Forms.DataGridView.ColumnHeaderMouseClick">
      <summary>Occurs when the user clicks a column header.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="E:System.Windows.Forms.DataGridView.ColumnHeaderMouseDoubleClick">
      <summary>Occurs when a column header is double-clicked.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="P:System.Windows.Forms.DataGridView.ColumnHeadersBorderStyle">
      <summary>Gets the border style applied to the column headers.</summary>
      <returns>One of the <see cref="T:System.Windows.Forms.DataGridViewHeaderBorderStyle" /> values.</returns>
      <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">The specified value when setting this property is not a valid <see cref="T:System.Windows.Forms.DataGridViewHeaderBorderStyle" /> value.</exception>
      <exception cref="T:System.ArgumentException">The specified value when setting this property is <see cref="F:System.Windows.Forms.DataGridViewHeaderBorderStyle.Custom" />.</exception>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
        <IPermission class="System.Diagnostics.PerformanceCounterPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="E:System.Windows.Forms.DataGridView.ColumnHeadersBorderStyleChanged">
      <summary>Occurs when the <see cref="P:System.Windows.Forms.DataGridView.ColumnHeadersBorderStyle" /> property changes.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="P:System.Windows.Forms.DataGridView.ColumnHeadersDefaultCellStyle">
      <summary>Gets or sets the default column header style.</summary>
      <returns>A <see cref="T:System.Windows.Forms.DataGridViewCellStyle" /> that represents the default column header style.</returns>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
        <IPermission class="System.Diagnostics.PerformanceCounterPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="E:System.Windows.Forms.DataGridView.ColumnHeadersDefaultCellStyleChanged">
      <summary>Occurs when the value of the <see cref="P:System.Windows.Forms.DataGridView.ColumnHeadersDefaultCellStyle" /> property changes.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="P:System.Windows.Forms.DataGridView.ColumnHeadersHeight">
      <summary>Gets or sets the height, in pixels, of the column headers row </summary>
      <returns>The height, in pixels, of the row that contains the column headers. The default is 23.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">The specified value when setting this property is less than the minimum height of 4 pixels or is greater than the maximum height of 32768 pixels.</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="E:System.Windows.Forms.DataGridView.ColumnHeadersHeightChanged">
      <summary>Occurs when the value of the <see cref="P:System.Windows.Forms.DataGridView.ColumnHeadersHeight" /> property changes.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="P:System.Windows.Forms.DataGridView.ColumnHeadersHeightSizeMode">
      <summary>Gets or sets a value indicating whether the height of the column headers is adjustable and whether it can be adjusted by the user or is automatically adjusted to fit the contents of the headers. </summary>
      <returns>A <see cref="T:System.Windows.Forms.DataGridViewColumnHeadersHeightSizeMode" /> value indicating the mode by which the height of the column headers row can be adjusted. The default is <see cref="F:System.Windows.Forms.DataGridViewColumnHeadersHeightSizeMode.EnableResizing" />.</returns>
      <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">The specified value when setting this property is not a valid <see cref="T:System.Windows.Forms.DataGridViewColumnHeadersHeightSizeMode" /> value.</exception>
    </member>
    <member name="E:System.Windows.Forms.DataGridView.ColumnHeadersHeightSizeModeChanged">
      <summary>Occurs when the value of the <see cref="P:System.Windows.Forms.DataGridView.ColumnHeadersHeightSizeMode" /> property changes.</summary>
    </member>
    <member name="P:System.Windows.Forms.DataGridView.ColumnHeadersVisible">
      <summary>Gets or sets a value indicating whether the column header row is displayed.</summary>
      <returns>true if the column headers are displayed; otherwise, false. The default is true.</returns>
      <exception cref="T:System.InvalidOperationException">The specified value when setting this property is false and one or more columns have an <see cref="P:System.Windows.Forms.DataGridViewColumn.InheritedAutoSizeMode" /> property value of <see cref="F:System.Windows.Forms.DataGridViewAutoSizeColumnMode.ColumnHeader" />.</exception>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
        <IPermission class="System.Diagnostics.PerformanceCounterPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="E:System.Windows.Forms.DataGridView.ColumnMinimumWidthChanged">
      <summary>Occurs when the value of the <see cref="P:System.Windows.Forms.DataGridViewColumn.MinimumWidth" /> property for a column changes.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="E:System.Windows.Forms.DataGridView.ColumnNameChanged">
      <summary>Occurs when the value of the <see cref="P:System.Windows.Forms.DataGridViewColumn.Name" /> property for a column changes.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="E:System.Windows.Forms.DataGridView.ColumnRemoved">
      <summary>Occurs when a column is removed from the control.</summary>
    </member>
    <member name="P:System.Windows.Forms.DataGridView.Columns">
      <summary>Gets a collection that contains all the columns in the control.</summary>
      <returns>The <see cref="T:System.Windows.Forms.DataGridViewColumnCollection" /> that contains all the columns in the <see cref="T:System.Windows.Forms.DataGridView" /> control.</returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="E:System.Windows.Forms.DataGridView.ColumnSortModeChanged">
      <summary>Occurs when the value of the <see cref="P:System.Windows.Forms.DataGridViewColumn.SortMode" /> property for a column changes.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="E:System.Windows.Forms.DataGridView.ColumnStateChanged">
      <summary>Occurs when a column changes state, such as gaining or losing focus.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="E:System.Windows.Forms.DataGridView.ColumnToolTipTextChanged">
      <summary>Occurs when the <see cref="P:System.Windows.Forms.DataGridViewColumn.ToolTipText" /> property value changes for a column in the <see cref="T:System.Windows.Forms.DataGridView" />.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="E:System.Windows.Forms.DataGridView.ColumnWidthChanged">
      <summary>Occurs when the value of the <see cref="P:System.Windows.Forms.DataGridViewColumn.Width" /> property for a column changes.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Windows.Forms.DataGridView.CommitEdit(System.Windows.Forms.DataGridViewDataErrorContexts)">
      <summary>Commits changes in the current cell to the data cache without ending edit mode.</summary>
      <returns>true if the changes were committed; otherwise false.</returns>
      <param name="context">A bitwise combination of <see cref="T:System.Windows.Forms.DataGridViewDataErrorContexts" /> values that specifies the context in which an error can occur. </param>
      <exception cref="T:System.Exception">The cell value could not be committed and either there is no handler for the <see cref="E:System.Windows.Forms.DataGridView.DataError" /> event or the handler has set the <see cref="P:System.Windows.Forms.DataGridViewDataErrorEventArgs.ThrowException" /> property to true. </exception>
    </member>
    <member name="M:System.Windows.Forms.DataGridView.CreateAccessibilityInstance">
      <summary>Creates a new accessible object for the <see cref="T:System.Windows.Forms.DataGridView" />.</summary>
      <returns>A new <see cref="T:System.Windows.Forms.DataGridView.DataGridViewAccessibleObject" /> for the <see cref="T:System.Windows.Forms.DataGridView" />.</returns>
    </member>
    <member name="M:System.Windows.Forms.DataGridView.CreateColumnsInstance">
      <summary>Creates and returns a new <see cref="T:System.Windows.Forms.DataGridViewColumnCollection" />.</summary>
      <returns>An empty <see cref="T:System.Windows.Forms.DataGridViewColumnCollection" />.</returns>
    </member>
    <member name="M:System.Windows.Forms.DataGridView.CreateControlsInstance">
      <summary>Creates and returns a new <see cref="T:System.Windows.Forms.Control.ControlCollection" /> that can be cast to type <see cref="T:System.Windows.Forms.DataGridView.DataGridViewControlCollection" />.</summary>
      <returns>An empty <see cref="T:System.Windows.Forms.Control.ControlCollection" />.</returns>
    </member>
    <member name="M:System.Windows.Forms.DataGridView.CreateRowsInstance">
      <summary>Creates and returns a new <see cref="T:System.Windows.Forms.DataGridViewRowCollection" />.</summary>
      <returns>An empty <see cref="T:System.Windows.Forms.DataGridViewRowCollection" />.</returns>
    </member>
    <member name="P:System.Windows.Forms.DataGridView.CurrentCell">
      <summary>Gets or sets the currently active cell.</summary>
      <returns>The <see cref="T:System.Windows.Forms.DataGridViewCell" /> that represents the current cell, or null if there is no current cell. The default is the first cell in the first column or null if there are no cells in the control.</returns>
      <exception cref="T:System.InvalidOperationException">The value of this property cannot be set because changes to the current cell cannot be committed or canceled.-or-The specified cell when setting this property is in a hidden row or column. Re-entrant calling is only allowed when the <see cref="T:System.Windows.Forms.DataGridView" /> is bound to a <see cref="P:System.Windows.Forms.DataGridView.DataSource" />. Re-entrant calling results from a change to the underlying data.</exception>
      <exception cref="T:System.ArgumentException">The specified cell when setting this property is not in the <see cref="T:System.Windows.Forms.DataGridView" />.</exception>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
        <IPermission class="System.Diagnostics.PerformanceCounterPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="P:System.Windows.Forms.DataGridView.CurrentCellAddress">
      <summary>Gets the row and column indexes of the currently active cell.</summary>
      <returns>A <see cref="T:System.Drawing.Point" /> that represents the row and column indexes of the currently active cell.</returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="E:System.Windows.Forms.DataGridView.CurrentCellChanged">
      <summary>Occurs when the <see cref="P:System.Windows.Forms.DataGridView.CurrentCell" /> property changes.</summary>
    </member>
    <member name="E:System.Windows.Forms.DataGridView.CurrentCellDirtyStateChanged">
      <summary>Occurs when the state of a cell changes in relation to a change in its contents.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="P:System.Windows.Forms.DataGridView.CurrentRow">
      <summary>Gets the row containing the current cell.</summary>
      <returns>The <see cref="T:System.Windows.Forms.DataGridViewRow" /> that represents the row containing the current cell, or null if there is no current cell.</returns>
    </member>
    <member name="E:System.Windows.Forms.DataGridView.DataBindingComplete">
      <summary>Occurs after a data-binding operation has finished.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="E:System.Windows.Forms.DataGridView.DataError">
      <summary>Occurs when an external data-parsing or validation operation throws an exception, or when an attempt to commit data to a data source fails.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="P:System.Windows.Forms.DataGridView.DataMember">
      <summary>Gets or sets the name of the list or table in the data source for which the <see cref="T:System.Windows.Forms.DataGridView" /> is displaying data.</summary>
      <returns>The name of the table or list in the <see cref="P:System.Windows.Forms.DataGridView.DataSource" /> for which the <see cref="T:System.Windows.Forms.DataGridView" /> is displaying data. The default is <see cref="F:System.String.Empty" />.</returns>
      <exception cref="T:System.Exception">An error occurred in the data source and either there is no handler for the <see cref="E:System.Windows.Forms.DataGridView.DataError" /> event or the handler has set the <see cref="P:System.Windows.Forms.DataGridViewDataErrorEventArgs.ThrowException" /> property to true. The exception object can typically be cast to type <see cref="T:System.FormatException" />.</exception>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
        <IPermission class="System.Diagnostics.PerformanceCounterPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="E:System.Windows.Forms.DataGridView.DataMemberChanged">
      <summary>Occurs when value of the <see cref="P:System.Windows.Forms.DataGridView.DataMember" /> property changes.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="P:System.Windows.Forms.DataGridView.DataSource">
      <summary>Gets or sets the data source that the <see cref="T:System.Windows.Forms.DataGridView" /> is displaying data for.</summary>
      <returns>The object that contains data for the <see cref="T:System.Windows.Forms.DataGridView" /> to display.</returns>
      <exception cref="T:System.Exception">An error occurred in the data source and either there is no handler for the <see cref="E:System.Windows.Forms.DataGridView.DataError" /> event or the handler has set the <see cref="P:System.Windows.Forms.DataGridViewDataErrorEventArgs.ThrowException" /> property to true. The exception object can typically be cast to type <see cref="T:System.FormatException" />.</exception>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
        <IPermission class="System.Diagnostics.PerformanceCounterPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="E:System.Windows.Forms.DataGridView.DataSourceChanged">
      <summary>Occurs when the value of the <see cref="P:System.Windows.Forms.DataGridView.DataSource" /> property changes.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="P:System.Windows.Forms.DataGridView.DefaultCellStyle">
      <summary>Gets or sets the default cell style to be applied to the cells in the <see cref="T:System.Windows.Forms.DataGridView" /> if no other cell style properties are set.</summary>
      <returns>The <see cref="T:System.Windows.Forms.DataGridViewCellStyle" /> to be applied as the default style.</returns>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
        <IPermission class="System.Diagnostics.PerformanceCounterPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="E:System.Windows.Forms.DataGridView.DefaultCellStyleChanged">
      <summary>Occurs when the value of the <see cref="P:System.Windows.Forms.DataGridView.DefaultCellStyle" /> property changes.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="P:System.Windows.Forms.DataGridView.DefaultSize">
      <summary>Gets the default initial size of the control.</summary>
      <returns>A <see cref="T:System.Drawing.Size" /> representing the initial size of the control, which is 240 pixels wide by 150 pixels high.</returns>
    </member>
    <member name="E:System.Windows.Forms.DataGridView.DefaultValuesNeeded">
      <summary>Occurs when the user enters the row for new records so that it can be populated with default values.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Windows.Forms.DataGridView.DisplayedColumnCount(System.Boolean)">
      <summary>Returns the number of columns displayed to the user.</summary>
      <returns>The number of columns displayed to the user.</returns>
      <param name="includePartialColumns">true to include partial columns in the displayed column count; otherwise, false. </param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Windows.Forms.DataGridView.DisplayedRowCount(System.Boolean)">
      <summary>Returns the number of rows displayed to the user.</summary>
      <returns>The number of rows displayed to the user.</returns>
      <param name="includePartialRow">true to include partial rows in the displayed row count; otherwise, false. </param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="P:System.Windows.Forms.DataGridView.DisplayRectangle">
      <summary>Gets the rectangle that represents the display area of the control.</summary>
      <returns>A <see cref="T:System.Drawing.Rectangle" /> that represents the display area of the control.</returns>
    </member>
    <member name="M:System.Windows.Forms.DataGridView.Dispose(System.Boolean)">
      <param name="disposing">true to release both managed and unmanaged resources; false to release only unmanaged resources. </param>
    </member>
    <member name="P:System.Windows.Forms.DataGridView.EditingControl">
      <summary>Gets the control hosted by the current cell, if a cell with an editing control is in edit mode.</summary>
      <returns>The <see cref="T:System.Windows.Forms.Control" /> hosted by the current cell.</returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="E:System.Windows.Forms.DataGridView.EditingControlShowing">
      <summary>Occurs when a control for editing a cell is showing.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="P:System.Windows.Forms.DataGridView.EditingPanel">
      <summary>Gets the panel that contains the <see cref="P:System.Windows.Forms.DataGridView.EditingControl" />.</summary>
      <returns>The <see cref="T:System.Windows.Forms.Panel" /> that contains the <see cref="P:System.Windows.Forms.DataGridView.EditingControl" />.</returns>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
        <IPermission class="System.Diagnostics.PerformanceCounterPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="P:System.Windows.Forms.DataGridView.EditMode">
      <summary>Gets or sets a value indicating how to begin editing a cell.</summary>
      <returns>One of the <see cref="T:System.Windows.Forms.DataGridViewEditMode" /> values. The default is <see cref="F:System.Windows.Forms.DataGridViewEditMode.EditOnKeystrokeOrF2" />.</returns>
      <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">The specified value when setting this property is not a valid <see cref="T:System.Windows.Forms.DataGridViewEditMode" /> value.</exception>
      <exception cref="T:System.Exception">The specified value when setting this property would cause the control to enter edit mode, but initialization of the editing cell value failed and either there is no handler for the <see cref="E:System.Windows.Forms.DataGridView.DataError" /> event or the handler has set the <see cref="P:System.Windows.Forms.DataGridViewDataErrorEventArgs.ThrowException" /> property to true. The exception object can typically be cast to type <see cref="T:System.FormatException" />.</exception>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
        <IPermission class="System.Diagnostics.PerformanceCounterPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="E:System.Windows.Forms.DataGridView.EditModeChanged">
      <summary>Occurs when the value of the <see cref="P:System.Windows.Forms.DataGridView.EditMode" /> property changes.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="P:System.Windows.Forms.DataGridView.EnableHeadersVisualStyles">
      <summary>Gets or sets a value indicating whether row and column headers use the visual styles of the user's current theme if visual styles are enabled for the application.</summary>
      <returns>true if visual styles are enabled for the headers; otherwise, false. The default value is true.</returns>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
        <IPermission class="System.Diagnostics.PerformanceCounterPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:System.Windows.Forms.DataGridView.EndEdit">
      <summary>Commits and ends the edit operation on the current cell using the default error context.</summary>
      <returns>true if the edit operation is committed and ended; otherwise, false.</returns>
      <exception cref="T:System.Exception">The cell value could not be committed and either there is no handler for the <see cref="E:System.Windows.Forms.DataGridView.DataError" /> event or the handler has set the <see cref="P:System.Windows.Forms.DataGridViewDataErrorEventArgs.ThrowException" /> property to true. </exception>
    </member>
    <member name="M:System.Windows.Forms.DataGridView.EndEdit(System.Windows.Forms.DataGridViewDataErrorContexts)">
      <summary>Commits and ends the edit operation on the current cell using the specified error context.</summary>
      <returns>true if the edit operation is committed and ended; otherwise, false.</returns>
      <param name="context">A bitwise combination of <see cref="T:System.Windows.Forms.DataGridViewDataErrorContexts" /> values that specifies the context in which an error can occur. </param>
      <exception cref="T:System.Exception">The cell value could not be committed and either there is no handler for the <see cref="E:System.Windows.Forms.DataGridView.DataError" /> event or the handler has set the <see cref="P:System.Windows.Forms.DataGridViewDataErrorEventArgs.ThrowException" /> property to true. </exception>
    </member>
    <member name="P:System.Windows.Forms.DataGridView.FirstDisplayedCell">
      <summary>Gets or sets the first cell currently displayed in the <see cref="T:System.Windows.Forms.DataGridView" />; typically, this cell is in the upper left corner.</summary>
      <returns>The first <see cref="T:System.Windows.Forms.DataGridViewCell" /> currently displayed in the control.</returns>
      <exception cref="T:System.ArgumentException">The specified cell when setting this property is not is not in the <see cref="T:System.Windows.Forms.DataGridView" />. </exception>
      <exception cref="T:System.InvalidOperationException">The specified cell when setting this property has a <see cref="P:System.Windows.Forms.DataGridViewCell.RowIndex" /> or <see cref="P:System.Windows.Forms.DataGridViewCell.ColumnIndex" /> property value of -1, indicating that it is a header cell or a shared cell. -or-The specified cell when setting this property has a <see cref="P:System.Windows.Forms.DataGridViewCell.Visible" /> property value of false.</exception>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
        <IPermission class="System.Diagnostics.PerformanceCounterPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="P:System.Windows.Forms.DataGridView.FirstDisplayedScrollingColumnHiddenWidth">
      <summary>Gets the width of the portion of the column that is currently scrolled out of view..</summary>
      <returns>The width of the portion of the column that is scrolled out of view.</returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="P:System.Windows.Forms.DataGridView.FirstDisplayedScrollingColumnIndex">
      <summary>Gets or sets the index of the column that is the first column displayed on the <see cref="T:System.Windows.Forms.DataGridView" />.</summary>
      <returns>The index of the column that is the first column displayed on the <see cref="T:System.Windows.Forms.DataGridView" />.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">The specified value when setting this property is less than 0 or greater than the number of columns in the control minus 1.</exception>
      <exception cref="T:System.InvalidOperationException">The specified value when setting this property indicates a column with a <see cref="P:System.Windows.Forms.DataGridViewColumn.Visible" /> property value of false.-or-The specified value when setting this property indicates a column with a <see cref="P:System.Windows.Forms.DataGridViewColumn.Frozen" /> property value of true.</exception>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
        <IPermission class="System.Diagnostics.PerformanceCounterPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="P:System.Windows.Forms.DataGridView.FirstDisplayedScrollingRowIndex">
      <summary>Gets or sets the index of the row that is the first row displayed on the <see cref="T:System.Windows.Forms.DataGridView" />.</summary>
      <returns>The index of the row that is the first row displayed on the <see cref="T:System.Windows.Forms.DataGridView" />.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">The specified value when setting this property is less than 0 or greater than the number of rows in the control minus 1.</exception>
      <exception cref="T:System.InvalidOperationException">The specified value when setting this property indicates a row with a <see cref="P:System.Windows.Forms.DataGridViewRow.Visible" /> property value of false.-or-The specified value when setting this property indicates a column with a <see cref="P:System.Windows.Forms.DataGridViewRow.Frozen" /> property value of true.</exception>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
        <IPermission class="System.Diagnostics.PerformanceCounterPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="P:System.Windows.Forms.DataGridView.Font">
      <summary>Gets or sets the font of the text displayed by the <see cref="T:System.Windows.Forms.DataGridView" />. </summary>
      <returns>The <see cref="T:System.Drawing.Font" /> to apply to the text displayed by the control. The default is the value of the <see cref="P:System.Windows.Forms.Control.DefaultFont" /> property.</returns>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
        <IPermission class="System.Diagnostics.PerformanceCounterPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="E:System.Windows.Forms.DataGridView.FontChanged">
      <summary>Occurs when the <see cref="P:System.Windows.Forms.DataGridView.Font" /> property value changes. </summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="P:System.Windows.Forms.DataGridView.ForeColor">
      <summary>Gets or sets the foreground color of the <see cref="T:System.Windows.Forms.DataGridView" />.</summary>
      <returns>A <see cref="T:System.Drawing.Color" /> that represents the foreground color of the <see cref="T:System.Windows.Forms.DataGridView" />. The default is the value of the <see cref="P:System.Windows.Forms.Control.DefaultForeColor" /> property.</returns>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="E:System.Windows.Forms.DataGridView.ForeColorChanged">
      <summary>Occurs when the <see cref="P:System.Windows.Forms.DataGridView.ForeColor" /> property value changes. </summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Windows.Forms.DataGridView.GetAccessibilityObjectById(System.Int32)">
      <returns>An <see cref="T:System.Windows.Forms.AccessibleObject" />.</returns>
      <param name="objectId">An Int32 that identifies the <see cref="T:System.Windows.Forms.AccessibleObject" /> to retrieve.</param>
    </member>
    <member name="M:System.Windows.Forms.DataGridView.GetCellCount(System.Windows.Forms.DataGridViewElementStates)">
      <summary>Gets the number of cells that satisfy the provided filter.</summary>
      <returns>The number of cells that match the <paramref name="includeFilter" /> parameter.</returns>
      <param name="includeFilter">A bitwise combination of the <see cref="T:System.Windows.Forms.DataGridViewElementStates" /> values specifying the cells to count.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="includeFilter" /> includes the value <see cref="F:System.Windows.Forms.DataGridViewElementStates.ResizableSet" />.</exception>
    </member>
    <member name="M:System.Windows.Forms.DataGridView.GetCellDisplayRectangle(System.Int32,System.Int32,System.Boolean)">
      <summary>Returns the rectangle that represents the display area for a cell.</summary>
      <returns>The <see cref="T:System.Drawing.Rectangle" /> that represents the display rectangle of the cell.</returns>
      <param name="columnIndex">The column index for the desired cell. </param>
      <param name="rowIndex">The row index for the desired cell. </param>
      <param name="cutOverflow">true to return the displayed portion of the cell only; false to return the entire cell bounds. </param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="columnIndex" /> is less than -1 or greater than the number of columns in the control minus 1.-or-<paramref name="rowIndex" /> is less than -1 or greater than the number of rows in the control minus 1. </exception>
    </member>
    <member name="M:System.Windows.Forms.DataGridView.GetClipboardContent">
      <summary>Retrieves the formatted values that represent the contents of the selected cells for copying to the <see cref="T:System.Windows.Forms.Clipboard" />.</summary>
      <returns>A <see cref="T:System.Windows.Forms.DataObject" /> that represents the contents of the selected cells.</returns>
      <exception cref="T:System.NotSupportedException">
        <see cref="P:System.Windows.Forms.DataGridView.ClipboardCopyMode" /> is set to <see cref="F:System.Windows.Forms.DataGridViewClipboardCopyMode.Disable" />.</exception>
    </member>
    <member name="M:System.Windows.Forms.DataGridView.GetColumnDisplayRectangle(System.Int32,System.Boolean)">
      <summary>Returns the rectangle that represents the display area for a column, as determined by the column index.</summary>
      <returns>The <see cref="T:System.Drawing.Rectangle" /> that represents the display rectangle of the column.</returns>
      <param name="columnIndex">The column index for the desired cell. </param>
      <param name="cutOverflow">true to return the column rectangle visible in the <see cref="T:System.Windows.Forms.DataGridView" /> bounds; false to return the entire column rectangle. </param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="columnIndex" /> is not in the valid range of 0 to the number of columns minus 1. </exception>
    </member>
    <member name="M:System.Windows.Forms.DataGridView.GetRowDisplayRectangle(System.Int32,System.Boolean)">
      <summary>Returns the rectangle that represents the display area for a row, as determined by the row index.</summary>
      <returns>The <see cref="T:System.Drawing.Rectangle" /> that represents the display rectangle of the row.</returns>
      <param name="rowIndex">The row index for the desired cell. </param>
      <param name="cutOverflow">true to return the row rectangle visible in the <see cref="T:System.Windows.Forms.DataGridView" /> bounds; false to return the entire row rectangle. </param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="rowIndex" /> is not in the valid range of 0 to the number of rows minus 1. </exception>
    </member>
    <member name="P:System.Windows.Forms.DataGridView.GridColor">
      <summary>Gets or sets the color of the grid lines separating the cells of the <see cref="T:System.Windows.Forms.DataGridView" />.</summary>
      <returns>A <see cref="T:System.Drawing.Color" /> or <see cref="T:System.Drawing.SystemColors" /> that represents the color of the grid lines. The default is <see cref="F:System.Drawing.KnownColor.ControlDarkDark" />.</returns>
      <exception cref="T:System.ArgumentException">The specified value when setting this property is <see cref="F:System.Drawing.Color.Empty" />. -or-The specified value when setting this property has a <see cref="P:System.Drawing.Color.A" /> property value that is less that 255.</exception>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="E:System.Windows.Forms.DataGridView.GridColorChanged">
      <summary>Occurs when the value of the <see cref="P:System.Windows.Forms.DataGridView.GridColor" /> property changes.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Windows.Forms.DataGridView.HitTest(System.Int32,System.Int32)">
      <summary>Returns location information, such as row and column indices, given x- and y-coordinates.</summary>
      <returns>A <see cref="T:System.Windows.Forms.DataGridView.HitTestInfo" /> that contains the location information. </returns>
      <param name="x">The x-coordinate. </param>
      <param name="y">The y-coordinate. </param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="P:System.Windows.Forms.DataGridView.HorizontalScrollBar">
      <summary>Gets the horizontal scroll bar of the control.</summary>
      <returns>A <see cref="T:System.Windows.Forms.ScrollBar" /> representing the horizontal scroll bar.</returns>
    </member>
    <member name="P:System.Windows.Forms.DataGridView.HorizontalScrollingOffset">
      <summary>Gets or sets the number of pixels by which the control is scrolled horizontally. </summary>
      <returns>The number of pixels by which the control is scrolled horizontally.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">The specified value when setting this property is less than 0.</exception>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
        <IPermission class="System.Diagnostics.PerformanceCounterPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:System.Windows.Forms.DataGridView.InvalidateCell(System.Int32,System.Int32)">
      <summary>Invalidates the cell with the specified row and column indexes, forcing it to be repainted.</summary>
      <param name="columnIndex">The column index of the cell to invalidate.</param>
      <param name="rowIndex">The row index of the cell to invalidate. </param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="columnIndex" /> is less than -1 or greater than the number of columns in the control minus 1.-or-<paramref name="rowIndex" /> is less than -1 or greater than the number of rows in the control minus 1. </exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Windows.Forms.DataGridView.InvalidateCell(System.Windows.Forms.DataGridViewCell)">
      <summary>Invalidates the specified cell of the <see cref="T:System.Windows.Forms.DataGridView" />, forcing it to be repainted.</summary>
      <param name="dataGridViewCell">The <see cref="T:System.Windows.Forms.DataGridViewCell" /> to invalidate. </param>
      <exception cref="T:System.ArgumentException">
        <paramref name="dataGridViewCell" /> does not belong to the <see cref="T:System.Windows.Forms.DataGridView" />. </exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="dataGridViewCell" /> is null.</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Windows.Forms.DataGridView.InvalidateColumn(System.Int32)">
      <summary>Invalidates the specified column of the <see cref="T:System.Windows.Forms.DataGridView" />, forcing it to be repainted.</summary>
      <param name="columnIndex">The index of the column to invalidate. </param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="columnIndex" /> is not in the valid range of 0 to the number of columns minus 1. </exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Windows.Forms.DataGridView.InvalidateRow(System.Int32)">
      <summary>Invalidates the specified row of the <see cref="T:System.Windows.Forms.DataGridView" />, forcing it to be repainted.</summary>
      <param name="rowIndex">The index of the row to invalidate. </param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="rowIndex" /> is not in the valid range of 0 to the number of rows minus 1. </exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="P:System.Windows.Forms.DataGridView.IsCurrentCellDirty">
      <summary>Gets a value indicating whether the current cell has uncommitted changes.</summary>
      <returns>true if the current cell has uncommitted changes; otherwise, false.</returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="P:System.Windows.Forms.DataGridView.IsCurrentCellInEditMode">
      <summary>Gets a value indicating whether the currently active cell is being edited.</summary>
      <returns>true if the current cell is being edited; otherwise, false.</returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="P:System.Windows.Forms.DataGridView.IsCurrentRowDirty">
      <summary>Gets a value indicating whether the current row has uncommitted changes.</summary>
      <returns>true if the current row has uncommitted changes; otherwise, false.</returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Windows.Forms.DataGridView.IsInputChar(System.Char)">
      <summary>Determines whether a character is an input character that the <see cref="T:System.Windows.Forms.DataGridView" /> recognizes.</summary>
      <returns>true if the character is recognized as an input character; otherwise, false.</returns>
      <param name="charCode">The character to test.</param>
    </member>
    <member name="M:System.Windows.Forms.DataGridView.IsInputKey(System.Windows.Forms.Keys)">
      <returns>true if the specified key is a regular input key; otherwise, false.</returns>
      <param name="keyData">One of the <see cref="T:System.Windows.Forms.Keys" /> values. </param>
    </member>
    <member name="P:System.Windows.Forms.DataGridView.Item(System.Int32,System.Int32)">
      <summary>Provides an indexer to get or set the cell located at the intersection of the column and row with the specified indexes. </summary>
      <returns>The <see cref="T:System.Windows.Forms.DataGridViewCell" /> at the specified location.</returns>
      <param name="columnIndex">The index of the column containing the cell.</param>
      <param name="rowIndex">The index of the row containing the cell.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="columnIndex" /> is less than 0 or greater than the number of columns in the control minus 1.-or-<paramref name="rowIndex" /> is less than 0 or greater than the number of rows in the control minus 1.</exception>
    </member>
    <member name="P:System.Windows.Forms.DataGridView.Item(System.String,System.Int32)">
      <summary>Provides an indexer to get or set the cell located at the intersection of the row with the specified index and the column with the specified name. </summary>
      <returns>The <see cref="T:System.Windows.Forms.DataGridViewCell" /> at the specified location.</returns>
      <param name="columnName">The name of the column containing the cell.</param>
      <param name="rowIndex">The index of the row containing the cell.</param>
    </member>
    <member name="P:System.Windows.Forms.DataGridView.MultiSelect">
      <summary>Gets or sets a value indicating whether the user is allowed to select more than one cell, row, or column of the <see cref="T:System.Windows.Forms.DataGridView" /> at a time.</summary>
      <returns>true if the user can select more than one cell, row, or column at a time; otherwise, false. The default is true.</returns>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
        <IPermission class="System.Diagnostics.PerformanceCounterPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="E:System.Windows.Forms.DataGridView.MultiSelectChanged">
      <summary>Occurs when the value of the <see cref="P:System.Windows.Forms.DataGridView.MultiSelect" /> property changes.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="P:System.Windows.Forms.DataGridView.NewRowIndex">
      <summary>Gets the index of the row for new records.</summary>
      <returns>The index of the row for new records, or -1 if <see cref="P:System.Windows.Forms.DataGridView.AllowUserToAddRows" /> is false.</returns>
    </member>
    <member name="E:System.Windows.Forms.DataGridView.NewRowNeeded">
      <summary>Occurs when the <see cref="P:System.Windows.Forms.DataGridView.VirtualMode" /> property of the <see cref="T:System.Windows.Forms.DataGridView" /> is true and the user navigates to the new row at the bottom of the <see cref="T:System.Windows.Forms.DataGridView" />.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Windows.Forms.DataGridView.NotifyCurrentCellDirty(System.Boolean)">
      <summary>Notifies the <see cref="T:System.Windows.Forms.DataGridView" /> that the current cell has uncommitted changes.</summary>
      <param name="dirty">true to indicate the cell has uncommitted changes; otherwise, false. </param>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
        <IPermission class="System.Diagnostics.PerformanceCounterPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:System.Windows.Forms.DataGridView.OnAllowUserToAddRowsChanged(System.EventArgs)">
      <summary>Raises the <see cref="E:System.Windows.Forms.DataGridView.AllowUserToAddRowsChanged" /> event.</summary>
      <param name="e">An <see cref="T:System.EventArgs" /> that contains the event data. </param>
    </member>
    <member name="M:System.Windows.Forms.DataGridView.OnAllowUserToDeleteRowsChanged(System.EventArgs)">
      <summary>Raises the <see cref="E:System.Windows.Forms.DataGridView.AllowUserToDeleteRowsChanged" /> event.</summary>
      <param name="e">An <see cref="T:System.EventArgs" /> that contains the event data. </param>
    </member>
    <member name="M:System.Windows.Forms.DataGridView.OnAllowUserToOrderColumnsChanged(System.EventArgs)">
      <summary>Raises the <see cref="E:System.Windows.Forms.DataGridView.AllowUserToOrderColumnsChanged" /> event.</summary>
      <param name="e">A <see cref="T:System.EventArgs" /> that contains the event data. </param>
    </member>
    <member name="M:System.Windows.Forms.DataGridView.OnAllowUserToResizeColumnsChanged(System.EventArgs)">
      <summary>Raises the <see cref="E:System.Windows.Forms.DataGridView.AllowUserToResizeColumnsChanged" /> event. </summary>
      <param name="e">An <see cref="T:System.EventArgs" /> that contains the event data. </param>
    </member>
    <member name="M:System.Windows.Forms.DataGridView.OnAllowUserToResizeRowsChanged(System.EventArgs)">
      <summary>Raises the <see cref="E:System.Windows.Forms.DataGridView.AllowUserToResizeRowsChanged" /> event. </summary>
      <param name="e">An <see cref="T:System.EventArgs" /> that contains the event data. </param>
    </member>
    <member name="M:System.Windows.Forms.DataGridView.OnAlternatingRowsDefaultCellStyleChanged(System.EventArgs)">
      <summary>Raises the <see cref="E:System.Windows.Forms.DataGridView.AlternatingRowsDefaultCellStyleChanged" /> event.</summary>
      <param name="e">An <see cref="T:System.EventArgs" /> that contains the event data. </param>
    </member>
    <member name="M:System.Windows.Forms.DataGridView.OnAutoGenerateColumnsChanged(System.EventArgs)">
      <summary>Raises the <see cref="E:System.Windows.Forms.DataGridView.AutoGenerateColumnsChanged" /> event.</summary>
      <param name="e">An <see cref="T:System.EventArgs" /> that contains the event data. </param>
    </member>
    <member name="M:System.Windows.Forms.DataGridView.OnAutoSizeColumnModeChanged(System.Windows.Forms.DataGridViewAutoSizeColumnModeEventArgs)">
      <summary>Raises the <see cref="E:System.Windows.Forms.DataGridView.AutoSizeColumnModeChanged" /> event. </summary>
      <param name="e">A <see cref="T:System.Windows.Forms.DataGridViewAutoSizeColumnModeEventArgs" /> that contains the event data. </param>
      <exception cref="T:System.InvalidOperationException">The value of the <see cref="P:System.Windows.Forms.DataGridViewAutoSizeColumnModeEventArgs.Column" /> property of <paramref name="e" /> is null.</exception>
    </member>
    <member name="M:System.Windows.Forms.DataGridView.OnAutoSizeColumnsModeChanged(System.Windows.Forms.DataGridViewAutoSizeColumnsModeEventArgs)">
      <summary>Raises the <see cref="E:System.Windows.Forms.DataGridView.AutoSizeColumnsModeChanged" /> event. </summary>
      <param name="e">A <see cref="T:System.Windows.Forms.DataGridViewAutoSizeColumnsModeEventArgs" /> that contains the event data. </param>
      <exception cref="T:System.ArgumentNullException">The value of the <see cref="P:System.Windows.Forms.DataGridViewAutoSizeColumnsModeEventArgs.PreviousModes" /> property of <paramref name="e" /> is null.</exception>
      <exception cref="T:System.ArgumentException">The number of entries in the array returned by the <see cref="P:System.Windows.Forms.DataGridViewAutoSizeColumnsModeEventArgs.PreviousModes" /> property of <paramref name="e" /> is not equal to the number of columns in the control.</exception>
    </member>
    <member name="M:System.Windows.Forms.DataGridView.OnAutoSizeRowsModeChanged(System.Windows.Forms.DataGridViewAutoSizeModeEventArgs)">
      <summary>Raises the <see cref="E:System.Windows.Forms.DataGridView.AutoSizeRowsModeChanged" /> event.</summary>
      <param name="e">A <see cref="T:System.Windows.Forms.DataGridViewAutoSizeModeEventArgs" /> that contains the event data. </param>
    </member>
    <member name="M:System.Windows.Forms.DataGridView.OnBackgroundColorChanged(System.EventArgs)">
      <summary>Raises the <see cref="E:System.Windows.Forms.DataGridView.BackgroundColorChanged" /> event.</summary>
      <param name="e">An <see cref="T:System.EventArgs" /> that contains the event data. </param>
    </member>
    <member name="M:System.Windows.Forms.DataGridView.OnBindingContextChanged(System.EventArgs)">
      <summary>Raises the <see cref="E:System.Windows.Forms.Control.BindingContextChanged" /> event.</summary>
      <param name="e">An <see cref="T:System.EventArgs" /> that contains the event data. </param>
    </member>
    <member name="M:System.Windows.Forms.DataGridView.OnBorderStyleChanged(System.EventArgs)">
      <summary>Raises the <see cref="E:System.Windows.Forms.DataGridView.BorderStyleChanged" /> event.</summary>
      <param name="e">An <see cref="T:System.EventArgs" /> that contains the event data. </param>
    </member>
    <member name="M:System.Windows.Forms.DataGridView.OnCancelRowEdit(System.Windows.Forms.QuestionEventArgs)">
      <summary>Raises the <see cref="E:System.Windows.Forms.DataGridView.CancelRowEdit" /> event.</summary>
      <param name="e">A <see cref="T:System.Windows.Forms.QuestionEventArgs" /> that contains the event data. </param>
    </member>
    <member name="M:System.Windows.Forms.DataGridView.OnCellBeginEdit(System.Windows.Forms.DataGridViewCellCancelEventArgs)">
      <summary>Raises the <see cref="E:System.Windows.Forms.DataGridView.CellBeginEdit" /> event.</summary>
      <param name="e">A <see cref="T:System.Windows.Forms.DataGridViewCellCancelEventArgs" /> that contains the event data. </param>
      <exception cref="T:System.ArgumentOutOfRangeException">The value of the <see cref="P:System.Windows.Forms.DataGridViewCellCancelEventArgs.ColumnIndex" /> property of <paramref name="e" /> is greater than the number of columns in the control minus one.-or-The value of the <see cref="P:System.Windows.Forms.DataGridViewCellCancelEventArgs.RowIndex" /> property of <paramref name="e" /> is greater than the number of rows in the control minus one.</exception>
    </member>
    <member name="M:System.Windows.Forms.DataGridView.OnCellBorderStyleChanged(System.EventArgs)">
      <summary>Raises the <see cref="E:System.Windows.Forms.DataGridView.CellBorderStyleChanged" /> event.</summary>
      <param name="e">An <see cref="T:System.EventArgs" /> that contains the event data. </param>
    </member>
    <member name="M:System.Windows.Forms.DataGridView.OnCellClick(System.Windows.Forms.DataGridViewCellEventArgs)">
      <summary>Raises the <see cref="E:System.Windows.Forms.DataGridView.CellClick" /> event.</summary>
      <param name="e">A <see cref="T:System.Windows.Forms.DataGridViewCellEventArgs" /> that contains the event data. </param>
      <exception cref="T:System.ArgumentOutOfRangeException">The value of the <see cref="P:System.Windows.Forms.DataGridViewCellEventArgs.ColumnIndex" /> property of <paramref name="e" /> is greater than the number of columns in the control minus one.-or-The value of the <see cref="P:System.Windows.Forms.DataGridViewCellEventArgs.RowIndex" /> property of <paramref name="e" /> is greater than the number of rows in the control minus one.</exception>
    </member>
    <member name="M:System.Windows.Forms.DataGridView.OnCellContentClick(System.Windows.Forms.DataGridViewCellEventArgs)">
      <summary>Raises the <see cref="E:System.Windows.Forms.DataGridView.CellContentClick" /> event.</summary>
      <param name="e">A <see cref="T:System.Windows.Forms.DataGridViewCellEventArgs" /> that contains information regarding the cell whose content was clicked.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">The value of the <see cref="P:System.Windows.Forms.DataGridViewCellEventArgs.ColumnIndex" /> property of <paramref name="e" /> is greater than the number of columns in the control minus one.-or-The value of the <see cref="P:System.Windows.Forms.DataGridViewCellEventArgs.RowIndex" /> property of <paramref name="e" /> is greater than the number of rows in the control minus one.</exception>
    </member>
    <member name="M:System.Windows.Forms.DataGridView.OnCellContentDoubleClick(System.Windows.Forms.DataGridViewCellEventArgs)">
      <summary>Raises the <see cref="E:System.Windows.Forms.DataGridView.CellContentDoubleClick" /> event. </summary>
      <param name="e">A <see cref="T:System.Windows.Forms.DataGridViewCellEventArgs" /> that contains the event data. </param>
      <exception cref="T:System.ArgumentOutOfRangeException">The value of the <see cref="P:System.Windows.Forms.DataGridViewCellEventArgs.ColumnIndex" /> property of <paramref name="e" /> is greater than the number of columns in the control minus one.-or-The value of the <see cref="P:System.Windows.Forms.DataGridViewCellEventArgs.RowIndex" /> property of <paramref name="e" /> is greater than the number of rows in the control minus one.</exception>
    </member>
    <member name="M:System.Windows.Forms.DataGridView.OnCellContextMenuStripChanged(System.Windows.Forms.DataGridViewCellEventArgs)">
      <summary>Raises the <see cref="E:System.Windows.Forms.DataGridView.CellContextMenuStripChanged" /> event. </summary>
      <param name="e">A <see cref="T:System.Windows.Forms.DataGridViewCellEventArgs" /> that contains the event data. </param>
      <exception cref="T:System.ArgumentOutOfRangeException">The value of the <see cref="P:System.Windows.Forms.DataGridViewCellEventArgs.ColumnIndex" /> property of <paramref name="e" /> is greater than the number of columns in the control minus one.-or-The value of the <see cref="P:System.Windows.Forms.DataGridViewCellEventArgs.RowIndex" /> property of <paramref name="e" /> is greater than the number of rows in the control minus one.</exception>
    </member>
    <member name="M:System.Windows.Forms.DataGridView.OnCellContextMenuStripNeeded(System.Windows.Forms.DataGridViewCellContextMenuStripNeededEventArgs)">
      <summary>Raises the <see cref="E:System.Windows.Forms.DataGridView.CellContextMenuStripNeeded" /> event. </summary>
      <param name="e">A <see cref="T:System.Windows.Forms.DataGridViewCellContextMenuStripNeededEventArgs" /> that contains the event data. </param>
      <exception cref="T:System.ArgumentOutOfRangeException">The value of the <see cref="P:System.Windows.Forms.DataGridViewCellEventArgs.ColumnIndex" /> property of <paramref name="e" /> is greater than the number of columns in the control minus one.-or-The value of the <see cref="P:System.Windows.Forms.DataGridViewCellEventArgs.RowIndex" /> property of <paramref name="e" /> is greater than the number of rows in the control minus one.</exception>
    </member>
    <member name="M:System.Windows.Forms.DataGridView.OnCellDoubleClick(System.Windows.Forms.DataGridViewCellEventArgs)">
      <summary>Raises the <see cref="E:System.Windows.Forms.DataGridView.CellDoubleClick" /> event. </summary>
      <param name="e">A <see cref="T:System.Windows.Forms.DataGridViewCellEventArgs" /> that contains the event data. </param>
      <exception cref="T:System.ArgumentOutOfRangeException">The value of the <see cref="P:System.Windows.Forms.DataGridViewCellEventArgs.ColumnIndex" /> property of <paramref name="e" /> is greater than the number of columns in the control minus one.-or-The value of the <see cref="P:System.Windows.Forms.DataGridViewCellEventArgs.RowIndex" /> property of <paramref name="e" /> is greater than the number of rows in the control minus one.</exception>
    </member>
    <member name="M:System.Windows.Forms.DataGridView.OnCellEndEdit(System.Windows.Forms.DataGridViewCellEventArgs)">
      <summary>Raises the <see cref="E:System.Windows.Forms.DataGridView.CellEndEdit" /> event.</summary>
      <param name="e">A <see cref="T:System.Windows.Forms.DataGridViewCellEventArgs" /> that contains the event data. </param>
      <exception cref="T:System.ArgumentOutOfRangeException">The value of the <see cref="P:System.Windows.Forms.DataGridViewCellEventArgs.ColumnIndex" /> property of <paramref name="e" /> is greater than the number of columns in the control minus one.-or-The value of the <see cref="P:System.Windows.Forms.DataGridViewCellEventArgs.RowIndex" /> property of <paramref name="e" /> is greater than the number of rows in the control minus one.</exception>
    </member>
    <member name="M:System.Windows.Forms.DataGridView.OnCellEnter(System.Windows.Forms.DataGridViewCellEventArgs)">
      <summary>Raises the <see cref="E:System.Windows.Forms.DataGridView.CellEnter" /> event.</summary>
      <param name="e">A <see cref="T:System.Windows.Forms.DataGridViewCellEventArgs" /> that contains the event data. </param>
      <exception cref="T:System.ArgumentOutOfRangeException">The value of the <see cref="P:System.Windows.Forms.DataGridViewCellEventArgs.ColumnIndex" /> property of <paramref name="e" /> is greater than the number of columns in the control minus one.-or-The value of the <see cref="P:System.Windows.Forms.DataGridViewCellEventArgs.RowIndex" /> property of <paramref name="e" /> is greater than the number of rows in the control minus one.</exception>
    </member>
    <member name="M:System.Windows.Forms.DataGridView.OnCellErrorTextChanged(System.Windows.Forms.DataGridViewCellEventArgs)">
      <summary>Raises the <see cref="E:System.Windows.Forms.DataGridView.CellErrorTextChanged" /> event.</summary>
      <param name="e">A <see cref="T:System.Windows.Forms.DataGridViewCellEventArgs" /> that contains the event data. </param>
      <exception cref="T:System.ArgumentOutOfRangeException">The value of the <see cref="P:System.Windows.Forms.DataGridViewCellEventArgs.ColumnIndex" /> property of <paramref name="e" /> is less than -1 or greater than the number of columns in the control minus one.-or-The value of the <see cref="P:System.Windows.Forms.DataGridViewCellEventArgs.RowIndex" /> property of <paramref name="e" /> is less than -1 or greater than the number of rows in the control minus one.</exception>
    </member>
    <member name="M:System.Windows.Forms.DataGridView.OnCellErrorTextNeeded(System.Windows.Forms.DataGridViewCellErrorTextNeededEventArgs)">
      <summary>Raises the <see cref="E:System.Windows.Forms.DataGridView.CellErrorTextNeeded" /> event. </summary>
      <param name="e">A <see cref="T:System.Windows.Forms.DataGridViewCellErrorTextNeededEventArgs" /> that contains the event data. </param>
      <exception cref="T:System.ArgumentOutOfRangeException">The value of the <see cref="P:System.Windows.Forms.DataGridViewCellEventArgs.ColumnIndex" /> property of <paramref name="e" /> is greater than the number of columns in the control minus one.-or-The value of the <see cref="P:System.Windows.Forms.DataGridViewCellEventArgs.RowIndex" /> property of <paramref name="e" /> is greater than the number of rows in the control minus one.</exception>
    </member>
    <member name="M:System.Windows.Forms.DataGridView.OnCellFormatting(System.Windows.Forms.DataGridViewCellFormattingEventArgs)">
      <summary>Raises the <see cref="E:System.Windows.Forms.DataGridView.CellFormatting" /> event.</summary>
      <param name="e">A <see cref="T:System.Windows.Forms.DataGridViewCellFormattingEventArgs" /> that contains the event data. </param>
      <exception cref="T:System.ArgumentOutOfRangeException">The value of the <see cref="P:System.Windows.Forms.DataGridViewCellFormattingEventArgs.ColumnIndex" /> property of <paramref name="e" /> is greater than the number of columns in the control minus one.-or-The value of the <see cref="P:System.Windows.Forms.DataGridViewCellFormattingEventArgs.RowIndex" /> property of <paramref name="e" /> is greater than the number of rows in the control minus one.</exception>
    </member>
    <member name="M:System.Windows.Forms.DataGridView.OnCellLeave(System.Windows.Forms.DataGridViewCellEventArgs)">
      <summary>Raises the <see cref="E:System.Windows.Forms.DataGridView.CellLeave" /> event.</summary>
      <param name="e">A <see cref="T:System.Windows.Forms.DataGridViewCellEventArgs" /> that contains the event data. </param>
      <exception cref="T:System.ArgumentOutOfRangeException">The value of the <see cref="P:System.Windows.Forms.DataGridViewCellEventArgs.ColumnIndex" /> property of <paramref name="e" /> is greater than the number of columns in the control minus one.-or-The value of the <see cref="P:System.Windows.Forms.DataGridViewCellEventArgs.RowIndex" /> property of <paramref name="e" /> is greater than the number of rows in the control minus one.</exception>
    </member>
    <member name="M:System.Windows.Forms.DataGridView.OnCellMouseClick(System.Windows.Forms.DataGridViewCellMouseEventArgs)">
      <summary>Raises the <see cref="E:System.Windows.Forms.DataGridView.CellMouseClick" /> event.</summary>
      <param name="e">A <see cref="T:System.Windows.Forms.DataGridViewCellMouseEventArgs" /> that contains the event data. </param>
      <exception cref="T:System.ArgumentOutOfRangeException">The value of the <see cref="P:System.Windows.Forms.DataGridViewCellMouseEventArgs.ColumnIndex" /> property of <paramref name="e" /> is greater than the number of columns in the control minus one.-or-The value of the <see cref="P:System.Windows.Forms.DataGridViewCellMouseEventArgs.RowIndex" /> property of <paramref name="e" /> is greater than the number of rows in the control minus one.</exception>
    </member>
    <member name="M:System.Windows.Forms.DataGridView.OnCellMouseDoubleClick(System.Windows.Forms.DataGridViewCellMouseEventArgs)">
      <summary>Raises the <see cref="E:System.Windows.Forms.DataGridView.CellMouseDoubleClick" /> event. </summary>
      <param name="e">A <see cref="T:System.Windows.Forms.DataGridViewCellMouseEventArgs" /> that contains the event data.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">The value of the <see cref="P:System.Windows.Forms.DataGridViewCellMouseEventArgs.ColumnIndex" /> property of <paramref name="e" /> is greater than the number of columns in the control minus one.-or-The value of the <see cref="P:System.Windows.Forms.DataGridViewCellMouseEventArgs.RowIndex" /> property of <paramref name="e" /> is greater than the number of rows in the control minus one.</exception>
    </member>
    <member name="M:System.Windows.Forms.DataGridView.OnCellMouseDown(System.Windows.Forms.DataGridViewCellMouseEventArgs)">
      <summary>Raises the <see cref="E:System.Windows.Forms.DataGridView.CellMouseDown" /> event.</summary>
      <param name="e">A <see cref="T:System.Windows.Forms.DataGridViewCellMouseEventArgs" /> that contains the event data. </param>
      <exception cref="T:System.ArgumentOutOfRangeException">The value of the <see cref="P:System.Windows.Forms.DataGridViewCellMouseEventArgs.ColumnIndex" /> property of <paramref name="e" /> is greater than the number of columns in the control minus one.-or-The value of the <see cref="P:System.Windows.Forms.DataGridViewCellMouseEventArgs.RowIndex" /> property of <paramref name="e" /> is greater than the number of rows in the control minus one.</exception>
      <exception cref="T:System.Exception">This action would commit a cell value or enter edit mode, but an error in the data source prevents the action and either there is no handler for the <see cref="E:System.Windows.Forms.DataGridView.DataError" /> event or the handler has set the <see cref="P:System.Windows.Forms.DataGridViewDataErrorEventArgs.ThrowException" /> property to true. </exception>
    </member>
    <member name="M:System.Windows.Forms.DataGridView.OnCellMouseEnter(System.Windows.Forms.DataGridViewCellEventArgs)">
      <summary>Raises the <see cref="E:System.Windows.Forms.DataGridView.CellMouseEnter" /> event.</summary>
      <param name="e">A <see cref="T:System.Windows.Forms.DataGridViewCellEventArgs" /> that contains the event data. </param>
      <exception cref="T:System.ArgumentOutOfRangeException">The value of the <see cref="P:System.Windows.Forms.DataGridViewCellEventArgs.ColumnIndex" /> property of <paramref name="e" /> is greater than the number of columns in the control minus one.-or-The value of the <see cref="P:System.Windows.Forms.DataGridViewCellEventArgs.RowIndex" /> property of <paramref name="e" /> is greater than the number of rows in the control minus one.</exception>
    </member>
    <member name="M:System.Windows.Forms.DataGridView.OnCellMouseLeave(System.Windows.Forms.DataGridViewCellEventArgs)">
      <summary>Raises the <see cref="E:System.Windows.Forms.DataGridView.CellMouseLeave" /> event.</summary>
      <param name="e">A <see cref="T:System.Windows.Forms.DataGridViewCellEventArgs" /> that contains the event data. </param>
      <exception cref="T:System.ArgumentOutOfRangeException">The value of the <see cref="P:System.Windows.Forms.DataGridViewCellEventArgs.ColumnIndex" /> property of <paramref name="e" /> is greater than the number of columns in the control minus one.-or-The value of the <see cref="P:System.Windows.Forms.DataGridViewCellEventArgs.RowIndex" /> property of <paramref name="e" /> is greater than the number of rows in the control minus one.</exception>
    </member>
    <member name="M:System.Windows.Forms.DataGridView.OnCellMouseMove(System.Windows.Forms.DataGridViewCellMouseEventArgs)">
      <summary>Raises the <see cref="E:System.Windows.Forms.DataGridView.CellMouseMove" /> event.</summary>
      <param name="e">A <see cref="T:System.Windows.Forms.DataGridViewCellMouseEventArgs" /> that contains the event data. </param>
      <exception cref="T:System.ArgumentOutOfRangeException">The value of the <see cref="P:System.Windows.Forms.DataGridViewCellMouseEventArgs.ColumnIndex" /> property of <paramref name="e" /> is greater than the number of columns in the control minus one.-or-The value of the <see cref="P:System.Windows.Forms.DataGridViewCellMouseEventArgs.RowIndex" /> property of <paramref name="e" /> is greater than the number of rows in the control minus one.</exception>
    </member>
    <member name="M:System.Windows.Forms.DataGridView.OnCellMouseUp(System.Windows.Forms.DataGridViewCellMouseEventArgs)">
      <summary>Raises the <see cref="E:System.Windows.Forms.DataGridView.CellMouseUp" /> event.</summary>
      <param name="e">A <see cref="T:System.Windows.Forms.DataGridViewCellMouseEventArgs" /> that contains the event data. </param>
      <exception cref="T:System.ArgumentOutOfRangeException">The value of the <see cref="P:System.Windows.Forms.DataGridViewCellMouseEventArgs.ColumnIndex" /> property of <paramref name="e" /> is greater than the number of columns in the control minus one.-or-The value of the <see cref="P:System.Windows.Forms.DataGridViewCellMouseEventArgs.RowIndex" /> property of <paramref name="e" /> is greater than the number of rows in the control minus one.</exception>
    </member>
    <member name="M:System.Windows.Forms.DataGridView.OnCellPainting(System.Windows.Forms.DataGridViewCellPaintingEventArgs)">
      <summary>Raises the <see cref="E:System.Windows.Forms.DataGridView.CellPainting" /> event.</summary>
      <param name="e">A <see cref="T:System.Windows.Forms.DataGridViewCellPaintingEventArgs" /> that contains the event data. </param>
      <exception cref="T:System.ArgumentOutOfRangeException">The value of the <see cref="P:System.Windows.Forms.DataGridViewCellPaintingEventArgs.ColumnIndex" /> property of <paramref name="e" /> is greater than the number of columns in the control minus one.-or-The value of the <see cref="P:System.Windows.Forms.DataGridViewCellPaintingEventArgs.RowIndex" /> property of <paramref name="e" /> is greater than the number of rows in the control minus one.</exception>
    </member>
    <member name="M:System.Windows.Forms.DataGridView.OnCellParsing(System.Windows.Forms.DataGridViewCellParsingEventArgs)">
      <summary>Raises the <see cref="E:System.Windows.Forms.DataGridView.CellParsing" /> event.</summary>
      <param name="e">A <see cref="T:System.Windows.Forms.DataGridViewCellParsingEventArgs" /> that contains the event data. </param>
      <exception cref="T:System.ArgumentOutOfRangeException">The value of the <see cref="P:System.Windows.Forms.DataGridViewCellParsingEventArgs.ColumnIndex" /> property of <paramref name="e" /> is greater than the number of columns in the control minus one.-or-The value of the <see cref="P:System.Windows.Forms.DataGridViewCellParsingEventArgs.RowIndex" /> property of <paramref name="e" /> is greater than the number of rows in the control minus one.</exception>
    </member>
    <member name="M:System.Windows.Forms.DataGridView.OnCellStateChanged(System.Windows.Forms.DataGridViewCellStateChangedEventArgs)">
      <summary>Raises the <see cref="E:System.Windows.Forms.DataGridView.CellStateChanged" /> event.</summary>
      <param name="e">A <see cref="T:System.Windows.Forms.DataGridViewCellStateChangedEventArgs" /> that contains the event data. </param>
    </member>
    <member name="M:System.Windows.Forms.DataGridView.OnCellStyleChanged(System.Windows.Forms.DataGridViewCellEventArgs)">
      <summary>Raises the <see cref="E:System.Windows.Forms.DataGridView.CellStyleChanged" /> event.</summary>
      <param name="e">A <see cref="T:System.Windows.Forms.DataGridViewCellEventArgs" /> that contains the event data. </param>
      <exception cref="T:System.ArgumentOutOfRangeException">The value of the <see cref="P:System.Windows.Forms.DataGridViewCellEventArgs.ColumnIndex" /> property of <paramref name="e" /> is greater than the number of columns in the control minus one.-or-The value of the <see cref="P:System.Windows.Forms.DataGridViewCellEventArgs.RowIndex" /> property of <paramref name="e" /> is greater than the number of rows in the control minus one.</exception>
    </member>
    <member name="M:System.Windows.Forms.DataGridView.OnCellStyleContentChanged(System.Windows.Forms.DataGridViewCellStyleContentChangedEventArgs)">
      <summary>Raises the <see cref="E:System.Windows.Forms.DataGridView.CellStyleContentChanged" /> event.</summary>
      <param name="e">A <see cref="T:System.Windows.Forms.DataGridViewCellStyleContentChangedEventArgs" /> that contains the event data. </param>
    </member>
    <member name="M:System.Windows.Forms.DataGridView.OnCellToolTipTextChanged(System.Windows.Forms.DataGridViewCellEventArgs)">
      <summary>Raises the <see cref="E:System.Windows.Forms.DataGridView.CellToolTipTextChanged" /> event.</summary>
      <param name="e">An <see cref="T:System.Windows.Forms.DataGridViewCellEventArgs" /> that contains information about the cell.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">The value of the <see cref="P:System.Windows.Forms.DataGridViewCellEventArgs.ColumnIndex" /> property of <paramref name="e" /> is greater than the number of columns in the control minus one.-or-The value of the <see cref="P:System.Windows.Forms.DataGridViewCellEventArgs.RowIndex" /> property of <paramref name="e" /> is greater than the number of rows in the control minus one.</exception>
    </member>
    <member name="M:System.Windows.Forms.DataGridView.OnCellToolTipTextNeeded(System.Windows.Forms.DataGridViewCellToolTipTextNeededEventArgs)">
      <summary>Raises the <see cref="E:System.Windows.Forms.DataGridView.CellToolTipTextNeeded" /> event. </summary>
      <param name="e">A <see cref="T:System.Windows.Forms.DataGridViewCellToolTipTextNeededEventArgs" /> that contains the event data. </param>
      <exception cref="T:System.ArgumentOutOfRangeException">The value of the <see cref="P:System.Windows.Forms.DataGridViewCellEventArgs.ColumnIndex" /> property of <paramref name="e" /> is greater than the number of columns in the control minus one.-or-The value of the <see cref="P:System.Windows.Forms.DataGridViewCellEventArgs.RowIndex" /> property of <paramref name="e" /> is greater than the number of rows in the control minus one.</exception>
    </member>
    <member name="M:System.Windows.Forms.DataGridView.OnCellValidated(System.Windows.Forms.DataGridViewCellEventArgs)">
      <summary>Raises the <see cref="E:System.Windows.Forms.DataGridView.CellValidated" /> event.</summary>
      <param name="e">A <see cref="T:System.Windows.Forms.DataGridViewCellEventArgs" /> that contains the event data. </param>
      <exception cref="T:System.ArgumentOutOfRangeException">The value of the <see cref="P:System.Windows.Forms.DataGridViewCellEventArgs.ColumnIndex" /> property of <paramref name="e" /> is greater than the number of columns in the control minus one.-or-The value of the <see cref="P:System.Windows.Forms.DataGridViewCellEventArgs.RowIndex" /> property of <paramref name="e" /> is greater than the number of rows in the control minus one.</exception>
    </member>
    <member name="M:System.Windows.Forms.DataGridView.OnCellValidating(System.Windows.Forms.DataGridViewCellValidatingEventArgs)">
      <summary>Raises the <see cref="E:System.Windows.Forms.DataGridView.CellValidating" /> event. </summary>
      <param name="e">A <see cref="T:System.Windows.Forms.DataGridViewCellValidatingEventArgs" /> that contains the event data. </param>
      <exception cref="T:System.ArgumentOutOfRangeException">The value of the <see cref="P:System.Windows.Forms.DataGridViewCellValidatingEventArgs.ColumnIndex" /> property of <paramref name="e" /> is greater than the number of columns in the control minus one.-or-The value of the <see cref="P:System.Windows.Forms.DataGridViewCellValidatingEventArgs.RowIndex" /> property of <paramref name="e" /> is greater than the number of rows in the control minus one.</exception>
    </member>
    <member name="M:System.Windows.Forms.DataGridView.OnCellValueChanged(System.Windows.Forms.DataGridViewCellEventArgs)">
      <summary>Raises the <see cref="E:System.Windows.Forms.DataGridView.CellValueChanged" /> event.</summary>
      <param name="e">A <see cref="T:System.Windows.Forms.DataGridViewCellEventArgs" /> that contains the event data. </param>
      <exception cref="T:System.ArgumentOutOfRangeException">The value of the <see cref="P:System.Windows.Forms.DataGridViewCellEventArgs.ColumnIndex" /> property of <paramref name="e" /> is greater than the number of columns in the control minus one.-or-The value of the <see cref="P:System.Windows.Forms.DataGridViewCellEventArgs.RowIndex" /> property of <paramref name="e" /> is greater than the number of rows in the control minus one.</exception>
    </member>
    <member name="M:System.Windows.Forms.DataGridView.OnCellValueNeeded(System.Windows.Forms.DataGridViewCellValueEventArgs)">
      <summary>Raises the <see cref="E:System.Windows.Forms.DataGridView.CellValueNeeded" /> event.</summary>
      <param name="e">A <see cref="T:System.Windows.Forms.DataGridViewCellValueEventArgs" /> that contains the event data. </param>
      <exception cref="T:System.ArgumentOutOfRangeException">The value of the <see cref="P:System.Windows.Forms.DataGridViewCellValueEventArgs.ColumnIndex" /> property of <paramref name="e" /> is less than zero or greater than the number of columns in the control minus one.-or-The value of the <see cref="P:System.Windows.Forms.DataGridViewCellValueEventArgs.RowIndex" /> property of <paramref name="e" /> is less than zero or greater than the number of rows in the control minus one.</exception>
    </member>
    <member name="M:System.Windows.Forms.DataGridView.OnCellValuePushed(System.Windows.Forms.DataGridViewCellValueEventArgs)">
      <summary>Raises the <see cref="E:System.Windows.Forms.DataGridView.CellValuePushed" /> event.</summary>
      <param name="e">A <see cref="T:System.Windows.Forms.DataGridViewCellValueEventArgs" /> that contains the event data. </param>
      <exception cref="T:System.ArgumentOutOfRangeException">The value of the <see cref="P:System.Windows.Forms.DataGridViewCellValueEventArgs.ColumnIndex" /> property of <paramref name="e" /> is less than zero or greater than the number of columns in the control minus one.-or-The value of the <see cref="P:System.Windows.Forms.DataGridViewCellValueEventArgs.RowIndex" /> property of <paramref name="e" /> is less than zero or greater than the number of rows in the control minus one.</exception>
    </member>
    <member name="M:System.Windows.Forms.DataGridView.OnColumnAdded(System.Windows.Forms.DataGridViewColumnEventArgs)">
      <summary>Raises the <see cref="E:System.Windows.Forms.DataGridView.ColumnAdded" /> event. </summary>
      <param name="e">A <see cref="T:System.Windows.Forms.DataGridViewColumnEventArgs" /> that contains the event data. </param>
      <exception cref="T:System.ArgumentException">The column indicated by the <see cref="P:System.Windows.Forms.DataGridViewColumnEventArgs.Column" /> property of <paramref name="e" /> does not belong to this <see cref="T:System.Windows.Forms.DataGridView" /> control.</exception>
    </member>
    <member name="M:System.Windows.Forms.DataGridView.OnColumnContextMenuStripChanged(System.Windows.Forms.DataGridViewColumnEventArgs)">
      <summary>Raises the <see cref="E:System.Windows.Forms.DataGridView.ColumnContextMenuStripChanged" /> event. </summary>
      <param name="e">A <see cref="T:System.Windows.Forms.DataGridViewColumnEventArgs" /> that contains the event data. </param>
      <exception cref="T:System.ArgumentException">The column indicated by the <see cref="P:System.Windows.Forms.DataGridViewColumnEventArgs.Column" /> property of <paramref name="e" /> does not belong to this <see cref="T:System.Windows.Forms.DataGridView" /> control.</exception>
    </member>
    <member name="M:System.Windows.Forms.DataGridView.OnColumnDataPropertyNameChanged(System.Windows.Forms.DataGridViewColumnEventArgs)">
      <summary>Raises the <see cref="E:System.Windows.Forms.DataGridView.ColumnDataPropertyNameChanged" /> event.</summary>
      <param name="e">A <see cref="T:System.Windows.Forms.DataGridViewColumnEventArgs" /> that contains the event data. </param>
      <exception cref="T:System.ArgumentException">The column indicated by the <see cref="P:System.Windows.Forms.DataGridViewColumnEventArgs.Column" /> property of <paramref name="e" /> does not belong to this <see cref="T:System.Windows.Forms.DataGridView" /> control.</exception>
    </member>
    <member name="M:System.Windows.Forms.DataGridView.OnColumnDefaultCellStyleChanged(System.Windows.Forms.DataGridViewColumnEventArgs)">
      <summary>Raises the <see cref="E:System.Windows.Forms.DataGridView.ColumnDefaultCellStyleChanged" /> event.</summary>
      <param name="e">A <see cref="T:System.Windows.Forms.DataGridViewColumnEventArgs" /> that contains the event data. </param>
      <exception cref="T:System.ArgumentException">The column indicated by the <see cref="P:System.Windows.Forms.DataGridViewColumnEventArgs.Column" /> property of <paramref name="e" /> does not belong to this <see cref="T:System.Windows.Forms.DataGridView" /> control.</exception>
    </member>
    <member name="M:System.Windows.Forms.DataGridView.OnColumnDisplayIndexChanged(System.Windows.Forms.DataGridViewColumnEventArgs)">
      <summary>Raises the <see cref="E:System.Windows.Forms.DataGridView.ColumnDisplayIndexChanged" /> event.</summary>
      <param name="e">A <see cref="T:System.Windows.Forms.DataGridViewColumnEventArgs" /> that contains the event data. </param>
      <exception cref="T:System.ArgumentException">The column indicated by the <see cref="P:System.Windows.Forms.DataGridViewColumnEventArgs.Column" /> property of <paramref name="e" /> does not belong to this <see cref="T:System.Windows.Forms.DataGridView" /> control.</exception>
    </member>
    <member name="M:System.Windows.Forms.DataGridView.OnColumnDividerDoubleClick(System.Windows.Forms.DataGridViewColumnDividerDoubleClickEventArgs)">
      <summary>Raises the <see cref="E:System.Windows.Forms.DataGridView.ColumnDividerDoubleClick" /> event. </summary>
      <param name="e">A <see cref="T:System.Windows.Forms.DataGridViewColumnDividerDoubleClickEventArgs" /> that contains the event data. </param>
    </member>
    <member name="M:System.Windows.Forms.DataGridView.OnColumnDividerWidthChanged(System.Windows.Forms.DataGridViewColumnEventArgs)">
      <summary>Raises the <see cref="E:System.Windows.Forms.DataGridView.ColumnDividerWidthChanged" /> event. </summary>
      <param name="e">A <see cref="T:System.Windows.Forms.DataGridViewColumnEventArgs" /> that contains the event data. </param>
      <exception cref="T:System.ArgumentException">The column indicated by the <see cref="P:System.Windows.Forms.DataGridViewColumnEventArgs.Column" /> property of <paramref name="e" /> does not belong to this <see cref="T:System.Windows.Forms.DataGridView" /> control.</exception>
    </member>
    <member name="M:System.Windows.Forms.DataGridView.OnColumnHeaderCellChanged(System.Windows.Forms.DataGridViewColumnEventArgs)">
      <summary>Raises the <see cref="E:System.Windows.Forms.DataGridView.ColumnHeaderCellChanged" /> event.</summary>
      <param name="e">A <see cref="T:System.Windows.Forms.DataGridViewColumnEventArgs" /> that contains the event data. </param>
      <exception cref="T:System.ArgumentException">The column indicated by the <see cref="P:System.Windows.Forms.DataGridViewColumnEventArgs.Column" /> property of <paramref name="e" /> does not belong to this <see cref="T:System.Windows.Forms.DataGridView" /> control.</exception>
    </member>
    <member name="M:System.Windows.Forms.DataGridView.OnColumnHeaderMouseClick(System.Windows.Forms.DataGridViewCellMouseEventArgs)">
      <summary>Raises the <see cref="E:System.Windows.Forms.DataGridView.ColumnHeaderMouseClick" /> event.</summary>
      <param name="e">A <see cref="T:System.Windows.Forms.DataGridViewCellMouseEventArgs" /> that contains the event data. </param>
      <exception cref="T:System.ArgumentOutOfRangeException">The value of the <see cref="P:System.Windows.Forms.DataGridViewCellMouseEventArgs.ColumnIndex" /> property of <paramref name="e" /> is less than zero or greater than the number of columns in the control minus one.</exception>
    </member>
    <member name="M:System.Windows.Forms.DataGridView.OnColumnHeaderMouseDoubleClick(System.Windows.Forms.DataGridViewCellMouseEventArgs)">
      <summary>Raises the <see cref="E:System.Windows.Forms.DataGridView.ColumnHeaderMouseDoubleClick" /> event.</summary>
      <param name="e">A <see cref="T:System.Windows.Forms.DataGridViewCellMouseEventArgs" /> that contains information about the cell and the position of the mouse pointer.</param>
    </member>
    <member name="M:System.Windows.Forms.DataGridView.OnColumnHeadersBorderStyleChanged(System.EventArgs)">
      <summary>Raises the <see cref="E:System.Windows.Forms.DataGridView.ColumnHeadersBorderStyleChanged" /> event. </summary>
      <param name="e">An <see cref="T:System.EventArgs" /> that contains the event data. </param>
    </member>
    <member name="M:System.Windows.Forms.DataGridView.OnColumnHeadersDefaultCellStyleChanged(System.EventArgs)">
      <summary>Raises the <see cref="E:System.Windows.Forms.DataGridView.ColumnHeadersDefaultCellStyleChanged" /> event.</summary>
      <param name="e">An <see cref="T:System.EventArgs" /> that contains the event data. </param>
    </member>
    <member name="M:System.Windows.Forms.DataGridView.OnColumnHeadersHeightChanged(System.EventArgs)">
      <summary>Raises the <see cref="E:System.Windows.Forms.DataGridView.ColumnHeadersHeightChanged" /> event.</summary>
      <param name="e">An <see cref="T:System.EventArgs" /> that contains the event data. </param>
    </member>
    <member name="M:System.Windows.Forms.DataGridView.OnColumnHeadersHeightSizeModeChanged(System.Windows.Forms.DataGridViewAutoSizeModeEventArgs)">
      <summary>Raises the <see cref="E:System.Windows.Forms.DataGridView.ColumnHeadersHeightSizeModeChanged" /> event. </summary>
      <param name="e">A <see cref="T:System.Windows.Forms.DataGridViewAutoSizeModeEventArgs" /> that contains the event data. </param>
    </member>
    <member name="M:System.Windows.Forms.DataGridView.OnColumnMinimumWidthChanged(System.Windows.Forms.DataGridViewColumnEventArgs)">
      <summary>Raises the <see cref="E:System.Windows.Forms.DataGridView.ColumnMinimumWidthChanged" /> event.</summary>
      <param name="e">A <see cref="T:System.Windows.Forms.DataGridViewColumnEventArgs" /> that contains the event data. </param>
      <exception cref="T:System.ArgumentException">The column indicated by the <see cref="P:System.Windows.Forms.DataGridViewColumnEventArgs.Column" /> property of <paramref name="e" /> does not belong to this <see cref="T:System.Windows.Forms.DataGridView" /> control.</exception>
    </member>
    <member name="M:System.Windows.Forms.DataGridView.OnColumnNameChanged(System.Windows.Forms.DataGridViewColumnEventArgs)">
      <summary>Raises the <see cref="E:System.Windows.Forms.DataGridView.ColumnNameChanged" /> event.</summary>
      <param name="e">A <see cref="T:System.Windows.Forms.DataGridViewColumnEventArgs" /> that contains the event data. </param>
      <exception cref="T:System.ArgumentException">The column indicated by the <see cref="P:System.Windows.Forms.DataGridViewColumnEventArgs.Column" /> property of <paramref name="e" /> does not belong to this <see cref="T:System.Windows.Forms.DataGridView" /> control.</exception>
    </member>
    <member name="M:System.Windows.Forms.DataGridView.OnColumnRemoved(System.Windows.Forms.DataGridViewColumnEventArgs)">
      <summary>Raises the <see cref="E:System.Windows.Forms.DataGridView.ColumnRemoved" /> event. </summary>
      <param name="e">A <see cref="T:System.Windows.Forms.DataGridViewColumnEventArgs" /> that contains the event data. </param>
    </member>
    <member name="M:System.Windows.Forms.DataGridView.OnColumnSortModeChanged(System.Windows.Forms.DataGridViewColumnEventArgs)">
      <summary>Raises the <see cref="E:System.Windows.Forms.DataGridView.ColumnSortModeChanged" /> event.</summary>
      <param name="e">A <see cref="T:System.Windows.Forms.DataGridViewColumnEventArgs" /> that contains the event data. </param>
      <exception cref="T:System.ArgumentException">The column indicated by the <see cref="P:System.Windows.Forms.DataGridViewColumnEventArgs.Column" /> property of <paramref name="e" /> does not belong to this <see cref="T:System.Windows.Forms.DataGridView" /> control.</exception>
    </member>
    <member name="M:System.Windows.Forms.DataGridView.OnColumnStateChanged(System.Windows.Forms.DataGridViewColumnStateChangedEventArgs)">
      <summary>Raises the <see cref="E:System.Windows.Forms.DataGridView.ColumnStateChanged" /> event.</summary>
      <param name="e">A <see cref="T:System.Windows.Forms.DataGridViewColumnStateChangedEventArgs" /> that contains the event data. </param>
      <exception cref="T:System.InvalidCastException">The column changed from read-only to read/write, enabling the current cell to enter edit mode, but the <see cref="P:System.Windows.Forms.DataGridViewCell.EditType" /> property of the current cell does not indicate a class that derives from <see cref="T:System.Windows.Forms.Control" /> and implements <see cref="T:System.Windows.Forms.IDataGridViewEditingControl" />.</exception>
    </member>
    <member name="M:System.Windows.Forms.DataGridView.OnColumnToolTipTextChanged(System.Windows.Forms.DataGridViewColumnEventArgs)">
      <summary>Raises the <see cref="E:System.Windows.Forms.DataGridView.ColumnToolTipTextChanged" /> event.</summary>
      <param name="e">A <see cref="T:System.Windows.Forms.DataGridViewColumnEventArgs" /> that contains information about the column.</param>
      <exception cref="T:System.ArgumentException">The column indicated by the <see cref="P:System.Windows.Forms.DataGridViewColumnEventArgs.Column" /> property of <paramref name="e" /> does not belong to this <see cref="T:System.Windows.Forms.DataGridView" /> control.</exception>
    </member>
    <member name="M:System.Windows.Forms.DataGridView.OnColumnWidthChanged(System.Windows.Forms.DataGridViewColumnEventArgs)">
      <summary>Raises the <see cref="E:System.Windows.Forms.DataGridView.ColumnWidthChanged" /> event.</summary>
      <param name="e">A <see cref="T:System.Windows.Forms.DataGridViewColumnEventArgs" /> that contains the event data. </param>
      <exception cref="T:System.ArgumentException">The column indicated by the <see cref="P:System.Windows.Forms.DataGridViewColumnEventArgs.Column" /> property of <paramref name="e" /> does not belong to this <see cref="T:System.Windows.Forms.DataGridView" /> control.</exception>
    </member>
    <member name="M:System.Windows.Forms.DataGridView.OnCurrentCellChanged(System.EventArgs)">
      <summary>Raises the <see cref="E:System.Windows.Forms.DataGridView.CurrentCellChanged" /> event. </summary>
      <param name="e">An <see cref="T:System.EventArgs" /> that contains the event data.</param>
    </member>
    <member name="M:System.Windows.Forms.DataGridView.OnCurrentCellDirtyStateChanged(System.EventArgs)">
      <summary>Raises the <see cref="E:System.Windows.Forms.DataGridView.CurrentCellDirtyStateChanged" /> event.</summary>
      <param name="e">An <see cref="T:System.EventArgs" /> that contains the event data. </param>
    </member>
    <member name="M:System.Windows.Forms.DataGridView.OnCursorChanged(System.EventArgs)">
      <summary>Raises the <see cref="E:System.Windows.Forms.Control.CursorChanged" /> event and updates the <see cref="P:System.Windows.Forms.DataGridView.UserSetCursor" /> property if the cursor was changed in user code.</summary>
      <param name="e">An <see cref="T:System.EventArgs" /> that contains the event data. </param>
    </member>
    <member name="M:System.Windows.Forms.DataGridView.OnDataBindingComplete(System.Windows.Forms.DataGridViewBindingCompleteEventArgs)">
      <summary>Raises the <see cref="E:System.Windows.Forms.DataGridView.DataBindingComplete" /> event.</summary>
      <param name="e">A <see cref="T:System.Windows.Forms.DataGridViewBindingCompleteEventArgs" /> that contains the event data.</param>
    </member>
    <member name="M:System.Windows.Forms.DataGridView.OnDataError(System.Boolean,System.Windows.Forms.DataGridViewDataErrorEventArgs)">
      <summary>Raises the <see cref="E:System.Windows.Forms.DataGridView.DataError" /> event. </summary>
      <param name="displayErrorDialogIfNoHandler">true to display an error dialog box if there is no handler for the <see cref="E:System.Windows.Forms.DataGridView.DataError" /> event.</param>
      <param name="e">A <see cref="T:System.Windows.Forms.DataGridViewDataErrorEventArgs" /> that contains the event data. </param>
    </member>
    <member name="M:System.Windows.Forms.DataGridView.OnDataMemberChanged(System.EventArgs)">
      <summary>Raises the <see cref="E:System.Windows.Forms.DataGridView.DataMemberChanged" /> event.</summary>
      <param name="e">An <see cref="T:System.EventArgs" /> that contains the event data. </param>
    </member>
    <member name="M:System.Windows.Forms.DataGridView.OnDataSourceChanged(System.EventArgs)">
      <summary>Raises the <see cref="E:System.Windows.Forms.DataGridView.DataSourceChanged" /> event.</summary>
      <param name="e">An <see cref="T:System.EventArgs" /> that contains the event data. </param>
    </member>
    <member name="M:System.Windows.Forms.DataGridView.OnDefaultCellStyleChanged(System.EventArgs)">
      <summary>Raises the <see cref="E:System.Windows.Forms.DataGridView.DefaultCellStyleChanged" /> event.</summary>
      <param name="e">An <see cref="T:System.EventArgs" /> that contains the event data. </param>
    </member>
    <member name="M:System.Windows.Forms.DataGridView.OnDefaultValuesNeeded(System.Windows.Forms.DataGridViewRowEventArgs)">
      <summary>Raises the <see cref="E:System.Windows.Forms.DataGridView.DefaultValuesNeeded" /> event.</summary>
      <param name="e">A <see cref="T:System.Windows.Forms.DataGridViewRowEventArgs" /> that contains the event data. </param>
    </member>
    <member name="M:System.Windows.Forms.DataGridView.OnDoubleClick(System.EventArgs)">
      <summary>Raises the <see cref="E:System.Windows.Forms.Control.DoubleClick" /> event. </summary>
      <param name="e">An <see cref="T:System.EventArgs" /> that contains the event data. </param>
    </member>
    <member name="M:System.Windows.Forms.DataGridView.OnEditingControlShowing(System.Windows.Forms.DataGridViewEditingControlShowingEventArgs)">
      <summary>Raises the <see cref="E:System.Windows.Forms.DataGridView.EditingControlShowing" /> event.</summary>
      <param name="e">A <see cref="T:System.Windows.Forms.DataGridViewEditingControlShowingEventArgs" /> that contains information about the editing control.</param>
    </member>
    <member name="M:System.Windows.Forms.DataGridView.OnEditModeChanged(System.EventArgs)">
      <summary>Raises the <see cref="E:System.Windows.Forms.DataGridView.EditModeChanged" /> event. </summary>
      <param name="e">An <see cref="T:System.EventArgs" /> that contains the event data. </param>
      <exception cref="T:System.InvalidCastException">When entering edit mode, the <see cref="P:System.Windows.Forms.DataGridViewCell.EditType" /> property of the current cell does not indicate a class that derives from <see cref="T:System.Windows.Forms.Control" /> and implements <see cref="T:System.Windows.Forms.IDataGridViewEditingControl" />.</exception>
    </member>
    <member name="M:System.Windows.Forms.DataGridView.OnEnabledChanged(System.EventArgs)">
      <param name="e">An <see cref="T:System.EventArgs" /> that contains the event data. </param>
    </member>
    <member name="M:System.Windows.Forms.DataGridView.OnEnter(System.EventArgs)">
      <summary>Raises the <see cref="E:System.Windows.Forms.Control.Enter" /> event.</summary>
      <param name="e">An <see cref="T:System.EventArgs" /> that contains the event data. </param>
      <exception cref="T:System.InvalidCastException">The control is configured to enter edit mode when it receives focus, but upon entering focus, the <see cref="P:System.Windows.Forms.DataGridViewCell.EditType" /> property of the current cell does not indicate a class that derives from <see cref="T:System.Windows.Forms.Control" /> and implements <see cref="T:System.Windows.Forms.IDataGridViewEditingControl" />.</exception>
      <exception cref="T:System.Exception">The control is configured to enter edit mode when it receives focus, but initialization of the editing cell value failed and either there is no handler for the <see cref="E:System.Windows.Forms.DataGridView.DataError" /> event or the handler has set the <see cref="P:System.Windows.Forms.DataGridViewDataErrorEventArgs.ThrowException" /> property to true. The exception object can typically be cast to type <see cref="T:System.FormatException" />.</exception>
    </member>
    <member name="M:System.Windows.Forms.DataGridView.OnFontChanged(System.EventArgs)">
      <summary>Raises the <see cref="E:System.Windows.Forms.DataGridView.FontChanged" /> event.</summary>
      <param name="e">An <see cref="T:System.EventArgs" /> that contains the event data. </param>
    </member>
    <member name="M:System.Windows.Forms.DataGridView.OnForeColorChanged(System.EventArgs)">
      <summary>Raises the <see cref="E:System.Windows.Forms.DataGridView.ForeColorChanged" /> event.</summary>
      <param name="e">An <see cref="T:System.EventArgs" /> that contains the event data. </param>
    </member>
    <member name="M:System.Windows.Forms.DataGridView.OnGotFocus(System.EventArgs)">
      <param name="e">An <see cref="T:System.EventArgs" /> that contains the event data. </param>
    </member>
    <member name="M:System.Windows.Forms.DataGridView.OnGridColorChanged(System.EventArgs)">
      <summary>Raises the <see cref="E:System.Windows.Forms.DataGridView.GridColorChanged" /> event.</summary>
      <param name="e">An <see cref="T:System.EventArgs" /> that contains the event data. </param>
    </member>
    <member name="M:System.Windows.Forms.DataGridView.OnHandleCreated(System.EventArgs)">
      <summary>Raises the <see cref="E:System.Windows.Forms.Control.HandleCreated" /> event.</summary>
      <param name="e">An <see cref="T:System.EventArgs" /> that contains the event data. </param>
    </member>
    <member name="M:System.Windows.Forms.DataGridView.OnHandleDestroyed(System.EventArgs)">
      <param name="e">An <see cref="T:System.EventArgs" /> that contains the event data. </param>
    </member>
    <member name="M:System.Windows.Forms.DataGridView.OnKeyDown(System.Windows.Forms.KeyEventArgs)">
      <summary>Raises the <see cref="E:System.Windows.Forms.Control.KeyDown" /> event.</summary>
      <param name="e">A <see cref="T:System.Windows.Forms.KeyEventArgs" /> that contains the event data. </param>
      <exception cref="T:System.Exception">This action would cause the control to enter edit mode but initialization of the editing cell value failed and either there is no handler for the <see cref="E:System.Windows.Forms.DataGridView.DataError" /> event or the handler has set the <see cref="P:System.Windows.Forms.DataGridViewDataErrorEventArgs.ThrowException" /> property to true. The exception object can typically be cast to type <see cref="T:System.FormatException" />.</exception>
    </member>
    <member name="M:System.Windows.Forms.DataGridView.OnKeyPress(System.Windows.Forms.KeyPressEventArgs)">
      <summary>Raises the <see cref="E:System.Windows.Forms.Control.KeyPress" /> event.</summary>
      <param name="e">A <see cref="T:System.Windows.Forms.KeyPressEventArgs" /> that contains the event data. </param>
    </member>
    <member name="M:System.Windows.Forms.DataGridView.OnKeyUp(System.Windows.Forms.KeyEventArgs)">
      <summary>Raises the <see cref="E:System.Windows.Forms.Control.KeyUp" /> event.</summary>
      <param name="e">A <see cref="T:System.Windows.Forms.KeyEventArgs" /> that contains the event data. </param>
    </member>
    <member name="M:System.Windows.Forms.DataGridView.OnLayout(System.Windows.Forms.LayoutEventArgs)">
      <summary>Raises the <see cref="E:System.Windows.Forms.Control.Layout" /> event.</summary>
      <param name="e">A <see cref="T:System.Windows.Forms.LayoutEventArgs" /> that contains the event data. </param>
    </member>
    <member name="M:System.Windows.Forms.DataGridView.OnLeave(System.EventArgs)">
      <summary>Raises the <see cref="E:System.Windows.Forms.Control.Leave" /> event.</summary>
      <param name="e">An <see cref="T:System.EventArgs" /> that contains the event data. </param>
    </member>
    <member name="M:System.Windows.Forms.DataGridView.OnLostFocus(System.EventArgs)">
      <param name="e">An <see cref="T:System.EventArgs" /> that contains the event data. </param>
    </member>
    <member name="M:System.Windows.Forms.DataGridView.OnMouseClick(System.Windows.Forms.MouseEventArgs)">
      <summary>Raises the <see cref="E:System.Windows.Forms.Control.MouseClick" /> event.</summary>
      <param name="e">A <see cref="T:System.Windows.Forms.MouseEventArgs" /> that contains the event data. </param>
      <exception cref="T:System.Exception">The control is configured to enter edit mode when it receives focus, but initialization of the editing cell value failed and either there is no handler for the <see cref="E:System.Windows.Forms.DataGridView.DataError" /> event or the handler has set the <see cref="P:System.Windows.Forms.DataGridViewDataErrorEventArgs.ThrowException" /> property to true. The exception object can typically be cast to type <see cref="T:System.FormatException" />.</exception>
    </member>
    <member name="M:System.Windows.Forms.DataGridView.OnMouseDoubleClick(System.Windows.Forms.MouseEventArgs)">
      <param name="e">An <see cref="T:System.Windows.Forms.MouseEventArgs" /> that contains the event data. </param>
    </member>
    <member name="M:System.Windows.Forms.DataGridView.OnMouseDown(System.Windows.Forms.MouseEventArgs)">
      <summary>Raises the <see cref="E:System.Windows.Forms.Control.MouseDown" /> event.</summary>
      <param name="e">A <see cref="T:System.Windows.Forms.MouseEventArgs" /> that contains the event data. </param>
      <exception cref="T:System.Exception">The control is configured to enter edit mode when it receives focus, but initialization of the editing cell value failed and either there is no handler for the <see cref="E:System.Windows.Forms.DataGridView.DataError" /> event or the handler has set the <see cref="P:System.Windows.Forms.DataGridViewDataErrorEventArgs.ThrowException" /> property to true. The exception object can typically be cast to type <see cref="T:System.FormatException" />.</exception>
    </member>
    <member name="M:System.Windows.Forms.DataGridView.OnMouseEnter(System.EventArgs)">
      <param name="e">An <see cref="T:System.EventArgs" /> that contains the event data. </param>
    </member>
    <member name="M:System.Windows.Forms.DataGridView.OnMouseLeave(System.EventArgs)">
      <summary>Raises the <see cref="E:System.Windows.Forms.Control.MouseLeave" /> event.</summary>
      <param name="e">An <see cref="T:System.EventArgs" /> that contains the event data. </param>
    </member>
    <member name="M:System.Windows.Forms.DataGridView.OnMouseMove(System.Windows.Forms.MouseEventArgs)">
      <summary>Raises the <see cref="E:System.Windows.Forms.Control.MouseMove" /> event.</summary>
      <param name="e">A <see cref="T:System.Windows.Forms.MouseEventArgs" /> that contains the event data. </param>
    </member>
    <member name="M:System.Windows.Forms.DataGridView.OnMouseUp(System.Windows.Forms.MouseEventArgs)">
      <summary>Raises the <see cref="E:System.Windows.Forms.Control.MouseUp" /> event.</summary>
      <param name="e">A <see cref="T:System.Windows.Forms.MouseEventArgs" /> that contains the event data. </param>
    </member>
    <member name="M:System.Windows.Forms.DataGridView.OnMouseWheel(System.Windows.Forms.MouseEventArgs)">
      <param name="e">A <see cref="T:System.Windows.Forms.MouseEventArgs" /> that contains the event data. </param>
    </member>
    <member name="M:System.Windows.Forms.DataGridView.OnMultiSelectChanged(System.EventArgs)">
      <summary>Raises the <see cref="E:System.Windows.Forms.DataGridView.MultiSelectChanged" /> event.</summary>
      <param name="e">An <see cref="T:System.EventArgs" /> that contains the event data. </param>
    </member>
    <member name="M:System.Windows.Forms.DataGridView.OnNewRowNeeded(System.Windows.Forms.DataGridViewRowEventArgs)">
      <summary>Raises the <see cref="E:System.Windows.Forms.DataGridView.NewRowNeeded" /> event.</summary>
      <param name="e">A <see cref="T:System.Windows.Forms.DataGridViewRowEventArgs" /> that contains the event data. </param>
      <exception cref="T:System.ArgumentException">The row indicated by the <see cref="P:System.Windows.Forms.DataGridViewRowEventArgs.Row" /> property of <paramref name="e" /> does not belong to this <see cref="T:System.Windows.Forms.DataGridView" /> control.</exception>
    </member>
    <member name="M:System.Windows.Forms.DataGridView.OnPaint(System.Windows.Forms.PaintEventArgs)">
      <summary>Raises the <see cref="E:System.Windows.Forms.Control.Paint" /> event.</summary>
      <param name="e">A <see cref="T:System.Windows.Forms.PaintEventArgs" /> that contains the event data. </param>
      <exception cref="T:System.Exception">Any exceptions that occur during this method are ignored unless they are one of the following:<see cref="T:System.NullReferenceException" /><see cref="T:System.StackOverflowException" /><see cref="T:System.OutOfMemoryException" /><see cref="T:System.Threading.ThreadAbortException" /><see cref="T:System.ExecutionEngineException" /><see cref="T:System.IndexOutOfRangeException" /><see cref="T:System.AccessViolationException" /></exception>
    </member>
    <member name="M:System.Windows.Forms.DataGridView.OnReadOnlyChanged(System.EventArgs)">
      <summary>Raises the <see cref="E:System.Windows.Forms.DataGridView.ReadOnlyChanged" /> event.</summary>
      <param name="e">An <see cref="T:System.EventArgs" /> that contains the event data. </param>
      <exception cref="T:System.InvalidCastException">The control changed from read-only to read/write, enabling the current cell to enter edit mode, but the <see cref="P:System.Windows.Forms.DataGridViewCell.EditType" /> property of the current cell does not indicate a class that derives from <see cref="T:System.Windows.Forms.Control" /> and implements <see cref="T:System.Windows.Forms.IDataGridViewEditingControl" />.</exception>
    </member>
    <member name="M:System.Windows.Forms.DataGridView.OnResize(System.EventArgs)">
      <summary>Raises the <see cref="E:System.Windows.Forms.Control.Resize" /> event.</summary>
      <param name="e">An <see cref="T:System.EventArgs" /> that contains the event data. </param>
    </member>
    <member name="M:System.Windows.Forms.DataGridView.OnRightToLeftChanged(System.EventArgs)">
      <param name="e">An <see cref="T:System.EventArgs" /> that contains the event data. </param>
    </member>
    <member name="M:System.Windows.Forms.DataGridView.OnRowContextMenuStripChanged(System.Windows.Forms.DataGridViewRowEventArgs)">
      <summary>Raises the <see cref="E:System.Windows.Forms.DataGridView.RowContextMenuStripChanged" /> event. </summary>
      <param name="e">A <see cref="T:System.Windows.Forms.DataGridViewRowEventArgs" /> that contains the event data. </param>
      <exception cref="T:System.ArgumentException">The row indicated by the <see cref="P:System.Windows.Forms.DataGridViewRowEventArgs.Row" /> property of <paramref name="e" /> does not belong to this <see cref="T:System.Windows.Forms.DataGridView" /> control.</exception>
    </member>
    <member name="M:System.Windows.Forms.DataGridView.OnRowContextMenuStripNeeded(System.Windows.Forms.DataGridViewRowContextMenuStripNeededEventArgs)">
      <summary>Raises the <see cref="E:System.Windows.Forms.DataGridView.RowContextMenuStripNeeded" /> event. </summary>
      <param name="e">A <see cref="T:System.Windows.Forms.DataGridViewRowContextMenuStripNeededEventArgs" /> that contains the event data. </param>
    </member>
    <member name="M:System.Windows.Forms.DataGridView.OnRowDefaultCellStyleChanged(System.Windows.Forms.DataGridViewRowEventArgs)">
      <summary>Raises the <see cref="E:System.Windows.Forms.DataGridView.RowDefaultCellStyleChanged" /> event.</summary>
      <param name="e">A <see cref="T:System.Windows.Forms.DataGridViewRowEventArgs" /> that contains the event data. </param>
      <exception cref="T:System.ArgumentException">The row indicated by the <see cref="P:System.Windows.Forms.DataGridViewRowEventArgs.Row" /> property of <paramref name="e" /> does not belong to this <see cref="T:System.Windows.Forms.DataGridView" /> control.</exception>
    </member>
    <member name="M:System.Windows.Forms.DataGridView.OnRowDirtyStateNeeded(System.Windows.Forms.QuestionEventArgs)">
      <summary>Raises the <see cref="E:System.Windows.Forms.DataGridView.RowDirtyStateNeeded" /> event.</summary>
      <param name="e">A <see cref="T:System.Windows.Forms.QuestionEventArgs" /> that contains the event data. </param>
    </member>
    <member name="M:System.Windows.Forms.DataGridView.OnRowDividerDoubleClick(System.Windows.Forms.DataGridViewRowDividerDoubleClickEventArgs)">
      <summary>Raises the <see cref="E:System.Windows.Forms.DataGridView.RowDividerDoubleClick" /> event. </summary>
      <param name="e">A <see cref="T:System.Windows.Forms.DataGridViewRowDividerDoubleClickEventArgs" /> that contains the event data. </param>
    </member>
    <member name="M:System.Windows.Forms.DataGridView.OnRowDividerHeightChanged(System.Windows.Forms.DataGridViewRowEventArgs)">
      <summary>Raises the <see cref="E:System.Windows.Forms.DataGridView.RowDividerHeightChanged" /> event. </summary>
      <param name="e">A <see cref="T:System.Windows.Forms.DataGridViewRowEventArgs" /> that contains the event data. </param>
      <exception cref="T:System.ArgumentException">The row indicated by the <see cref="P:System.Windows.Forms.DataGridViewRowEventArgs.Row" /> property of <paramref name="e" /> does not belong to this <see cref="T:System.Windows.Forms.DataGridView" /> control.</exception>
    </member>
    <member name="M:System.Windows.Forms.DataGridView.OnRowEnter(System.Windows.Forms.DataGridViewCellEventArgs)">
      <summary>Raises the <see cref="E:System.Windows.Forms.DataGridView.RowEnter" /> event.</summary>
      <param name="e">A <see cref="T:System.Windows.Forms.DataGridViewCellEventArgs" /> that contains the event data. </param>
    </member>
    <member name="M:System.Windows.Forms.DataGridView.OnRowErrorTextChanged(System.Windows.Forms.DataGridViewRowEventArgs)">
      <summary>Raises the <see cref="E:System.Windows.Forms.DataGridView.RowErrorTextChanged" /> event.</summary>
      <param name="e">A <see cref="T:System.Windows.Forms.DataGridViewRowEventArgs" /> that contains the event data. </param>
      <exception cref="T:System.ArgumentException">The row indicated by the <see cref="P:System.Windows.Forms.DataGridViewRowEventArgs.Row" /> property of <paramref name="e" /> does not belong to this <see cref="T:System.Windows.Forms.DataGridView" /> control.</exception>
    </member>
    <member name="M:System.Windows.Forms.DataGridView.OnRowErrorTextNeeded(System.Windows.Forms.DataGridViewRowErrorTextNeededEventArgs)">
      <summary>Raises the <see cref="E:System.Windows.Forms.DataGridView.RowErrorTextNeeded" /> event. </summary>
      <param name="e">A <see cref="T:System.Windows.Forms.DataGridViewRowErrorTextNeededEventArgs" /> that contains the event data. </param>
    </member>
    <member name="M:System.Windows.Forms.DataGridView.OnRowHeaderCellChanged(System.Windows.Forms.DataGridViewRowEventArgs)">
      <summary>Raises the <see cref="E:System.Windows.Forms.DataGridView.RowHeaderCellChanged" /> event.</summary>
      <param name="e">A <see cref="T:System.Windows.Forms.DataGridViewRowEventArgs" /> that contains the event data. </param>
      <exception cref="T:System.ArgumentException">The row indicated by the <see cref="P:System.Windows.Forms.DataGridViewRowEventArgs.Row" /> property of <paramref name="e" /> does not belong to this <see cref="T:System.Windows.Forms.DataGridView" /> control.</exception>
    </member>
    <member name="M:System.Windows.Forms.DataGridView.OnRowHeaderMouseClick(System.Windows.Forms.DataGridViewCellMouseEventArgs)">
      <summary>Raises the <see cref="E:System.Windows.Forms.DataGridView.RowHeaderMouseClick" /> event.</summary>
      <param name="e">A <see cref="T:System.Windows.Forms.DataGridViewCellMouseEventArgs" /> that contains information about the mouse and the header cell that was clicked.</param>
    </member>
    <member name="M:System.Windows.Forms.DataGridView.OnRowHeaderMouseDoubleClick(System.Windows.Forms.DataGridViewCellMouseEventArgs)">
      <summary>Raises the <see cref="E:System.Windows.Forms.DataGridView.RowHeaderMouseDoubleClick" /> event.</summary>
      <param name="e">A <see cref="T:System.Windows.Forms.DataGridViewCellMouseEventArgs" /> that contains information about the mouse and the header cell that was double-clicked.</param>
    </member>
    <member name="M:System.Windows.Forms.DataGridView.OnRowHeadersBorderStyleChanged(System.EventArgs)">
      <summary>Raises the <see cref="E:System.Windows.Forms.DataGridView.RowHeadersBorderStyleChanged" /> event. </summary>
      <param name="e">An <see cref="T:System.EventArgs" /> that contains the event data. </param>
    </member>
    <member name="M:System.Windows.Forms.DataGridView.OnRowHeadersDefaultCellStyleChanged(System.EventArgs)">
      <summary>Raises the <see cref="E:System.Windows.Forms.DataGridView.RowHeadersDefaultCellStyleChanged" /> event.</summary>
      <param name="e">An <see cref="T:System.EventArgs" /> that contains the event data. </param>
    </member>
    <member name="M:System.Windows.Forms.DataGridView.OnRowHeadersWidthChanged(System.EventArgs)">
      <summary>Raises the <see cref="E:System.Windows.Forms.DataGridView.RowHeadersWidthChanged" /> event.</summary>
      <param name="e">An <see cref="T:System.EventArgs" /> that contains the event data. </param>
    </member>
    <member name="M:System.Windows.Forms.DataGridView.OnRowHeadersWidthSizeModeChanged(System.Windows.Forms.DataGridViewAutoSizeModeEventArgs)">
      <summary>Raises the <see cref="E:System.Windows.Forms.DataGridView.RowHeadersWidthSizeModeChanged" /> event. </summary>
      <param name="e">A <see cref="T:System.Windows.Forms.DataGridViewAutoSizeModeEventArgs" /> that contains the event data. </param>
    </member>
    <member name="M:System.Windows.Forms.DataGridView.OnRowHeightChanged(System.Windows.Forms.DataGridViewRowEventArgs)">
      <summary>Raises the <see cref="E:System.Windows.Forms.DataGridView.RowHeightChanged" /> event.</summary>
      <param name="e">A <see cref="T:System.Windows.Forms.DataGridViewRowEventArgs" /> that contains the event data. </param>
      <exception cref="T:System.ArgumentException">The row indicated by the <see cref="P:System.Windows.Forms.DataGridViewRowEventArgs.Row" /> property of <paramref name="e" /> does not belong to this <see cref="T:System.Windows.Forms.DataGridView" /> control.</exception>
    </member>
    <member name="M:System.Windows.Forms.DataGridView.OnRowHeightInfoNeeded(System.Windows.Forms.DataGridViewRowHeightInfoNeededEventArgs)">
      <summary>Raises the <see cref="E:System.Windows.Forms.DataGridView.RowHeightInfoNeeded" /> event. </summary>
      <param name="e">A <see cref="T:System.Windows.Forms.DataGridViewRowHeightInfoNeededEventArgs" /> that contains the event data. </param>
    </member>
    <member name="M:System.Windows.Forms.DataGridView.OnRowHeightInfoPushed(System.Windows.Forms.DataGridViewRowHeightInfoPushedEventArgs)">
      <summary>Raises the <see cref="E:System.Windows.Forms.DataGridView.RowHeightInfoPushed" /> event. </summary>
      <param name="e">A <see cref="T:System.Windows.Forms.DataGridViewRowHeightInfoPushedEventArgs" /> that contains the event data. </param>
    </member>
    <member name="M:System.Windows.Forms.DataGridView.OnRowLeave(System.Windows.Forms.DataGridViewCellEventArgs)">
      <summary>Raises the <see cref="E:System.Windows.Forms.DataGridView.RowLeave" /> event.</summary>
      <param name="e">A <see cref="T:System.Windows.Forms.DataGridViewCellEventArgs" /> that contains the event data. </param>
    </member>
    <member name="M:System.Windows.Forms.DataGridView.OnRowMinimumHeightChanged(System.Windows.Forms.DataGridViewRowEventArgs)">
      <summary>Raises the <see cref="E:System.Windows.Forms.DataGridView.RowMinimumHeightChanged" /> event.</summary>
      <param name="e">A <see cref="T:System.Windows.Forms.DataGridViewRowEventArgs" /> that contains the event data. </param>
      <exception cref="T:System.ArgumentException">The row indicated by the <see cref="P:System.Windows.Forms.DataGridViewRowEventArgs.Row" /> property of <paramref name="e" /> does not belong to this <see cref="T:System.Windows.Forms.DataGridView" /> control.</exception>
    </member>
    <member name="M:System.Windows.Forms.DataGridView.OnRowPostPaint(System.Windows.Forms.DataGridViewRowPostPaintEventArgs)">
      <summary>Raises the <see cref="E:System.Windows.Forms.DataGridView.RowPostPaint" /> event. </summary>
      <param name="e">A <see cref="T:System.Windows.Forms.DataGridViewRowPostPaintEventArgs" /> that contains the event data. </param>
    </member>
    <member name="M:System.Windows.Forms.DataGridView.OnRowPrePaint(System.Windows.Forms.DataGridViewRowPrePaintEventArgs)">
      <summary>Raises the <see cref="E:System.Windows.Forms.DataGridView.RowPrePaint" /> event.</summary>
      <param name="e">A <see cref="T:System.Windows.Forms.DataGridViewRowPrePaintEventArgs" /> that contains the event data. </param>
    </member>
    <member name="M:System.Windows.Forms.DataGridView.OnRowsAdded(System.Windows.Forms.DataGridViewRowsAddedEventArgs)">
      <summary>Raises the <see cref="E:System.Windows.Forms.DataGridView.RowsAdded" /> event. </summary>
      <param name="e">A <see cref="T:System.Windows.Forms.DataGridViewRowsAddedEventArgs" /> that contains information about the added rows. </param>
    </member>
    <member name="M:System.Windows.Forms.DataGridView.OnRowsDefaultCellStyleChanged(System.EventArgs)">
      <summary>Raises the <see cref="E:System.Windows.Forms.DataGridView.RowsDefaultCellStyleChanged" /> event.</summary>
      <param name="e">An <see cref="T:System.EventArgs" /> that contains the event data. </param>
    </member>
    <member name="M:System.Windows.Forms.DataGridView.OnRowsRemoved(System.Windows.Forms.DataGridViewRowsRemovedEventArgs)">
      <summary>Raises the <see cref="E:System.Windows.Forms.DataGridView.RowsRemoved" /> event. </summary>
      <param name="e">A <see cref="T:System.Windows.Forms.DataGridViewRowsRemovedEventArgs" /> that contains information about the deleted rows. </param>
    </member>
    <member name="M:System.Windows.Forms.DataGridView.OnRowStateChanged(System.Int32,System.Windows.Forms.DataGridViewRowStateChangedEventArgs)">
      <summary>Raises the <see cref="E:System.Windows.Forms.DataGridView.RowStateChanged" /> event.</summary>
      <param name="rowIndex">The index of the row that is changing state.</param>
      <param name="e">A <see cref="T:System.Windows.Forms.DataGridViewRowStateChangedEventArgs" /> that contains the event data. </param>
      <exception cref="T:System.InvalidCastException">The row changed from read-only to read/write, enabling the current cell to enter edit mode, but the <see cref="P:System.Windows.Forms.DataGridViewCell.EditType" /> property of the current cell does not indicate a class that derives from <see cref="T:System.Windows.Forms.Control" /> and implements <see cref="T:System.Windows.Forms.IDataGridViewEditingControl" />.</exception>
    </member>
    <member name="M:System.Windows.Forms.DataGridView.OnRowUnshared(System.Windows.Forms.DataGridViewRowEventArgs)">
      <summary>Raises the <see cref="E:System.Windows.Forms.DataGridView.RowUnshared" /> event.</summary>
      <param name="e">A <see cref="T:System.Windows.Forms.DataGridViewRowEventArgs" /> that contains the event data. </param>
      <exception cref="T:System.ArgumentException">The row indicated by the <see cref="P:System.Windows.Forms.DataGridViewRowEventArgs.Row" /> property of <paramref name="e" /> does not belong to this <see cref="T:System.Windows.Forms.DataGridView" /> control.</exception>
    </member>
    <member name="M:System.Windows.Forms.DataGridView.OnRowValidated(System.Windows.Forms.DataGridViewCellEventArgs)">
      <summary>Raises the <see cref="E:System.Windows.Forms.DataGridView.RowValidated" /> event.</summary>
      <param name="e">A <see cref="T:System.Windows.Forms.DataGridViewCellEventArgs" /> that contains the event data. </param>
    </member>
    <member name="M:System.Windows.Forms.DataGridView.OnRowValidating(System.Windows.Forms.DataGridViewCellCancelEventArgs)">
      <summary>Raises the <see cref="E:System.Windows.Forms.DataGridView.RowValidating" /> event.</summary>
      <param name="e">A <see cref="T:System.Windows.Forms.DataGridViewCellCancelEventArgs" /> that contains the event data. </param>
    </member>
    <member name="M:System.Windows.Forms.DataGridView.OnScroll(System.Windows.Forms.ScrollEventArgs)">
      <summary>Raises the <see cref="E:System.Windows.Forms.DataGridView.Scroll" /> event. </summary>
      <param name="e">A <see cref="T:System.Windows.Forms.ScrollEventArgs" /> that contains the event data. </param>
    </member>
    <member name="M:System.Windows.Forms.DataGridView.OnSelectionChanged(System.EventArgs)">
      <summary>Raises the <see cref="E:System.Windows.Forms.DataGridView.SelectionChanged" /> event.</summary>
      <param name="e">An <see cref="T:System.EventArgs" /> that contains information about the event.</param>
    </member>
    <member name="M:System.Windows.Forms.DataGridView.OnSortCompare(System.Windows.Forms.DataGridViewSortCompareEventArgs)">
      <summary>Raises the <see cref="E:System.Windows.Forms.DataGridView.SortCompare" /> event.</summary>
      <param name="e">A <see cref="T:System.Windows.Forms.DataGridViewSortCompareEventArgs" /> that contains the event data. </param>
    </member>
    <member name="M:System.Windows.Forms.DataGridView.OnSorted(System.EventArgs)">
      <summary>Raises the <see cref="E:System.Windows.Forms.DataGridView.Sorted" /> event. </summary>
      <param name="e">An <see cref="T:System.EventArgs" /> that contains the event data.</param>
    </member>
    <member name="M:System.Windows.Forms.DataGridView.OnUserAddedRow(System.Windows.Forms.DataGridViewRowEventArgs)">
      <summary>Raises the <see cref="E:System.Windows.Forms.DataGridView.UserAddedRow" /> event.</summary>
      <param name="e">A <see cref="T:System.Windows.Forms.DataGridViewRowEventArgs" /> that contains the event data. </param>
      <exception cref="T:System.ArgumentException">The row indicated by the <see cref="P:System.Windows.Forms.DataGridViewRowEventArgs.Row" /> property of <paramref name="e" /> does not belong to this <see cref="T:System.Windows.Forms.DataGridView" /> control.</exception>
    </member>
    <member name="M:System.Windows.Forms.DataGridView.OnUserDeletedRow(System.Windows.Forms.DataGridViewRowEventArgs)">
      <summary>Raises the <see cref="E:System.Windows.Forms.DataGridView.UserDeletedRow" /> event.</summary>
      <param name="e">A <see cref="T:System.Windows.Forms.DataGridViewRowEventArgs" /> that contains the event data. </param>
    </member>
    <member name="M:System.Windows.Forms.DataGridView.OnUserDeletingRow(System.Windows.Forms.DataGridViewRowCancelEventArgs)">
      <summary>Raises the <see cref="E:System.Windows.Forms.DataGridView.UserDeletingRow" /> event.</summary>
      <param name="e">A <see cref="T:System.Windows.Forms.DataGridViewRowCancelEventArgs" /> that contains the event data. </param>
    </member>
    <member name="M:System.Windows.Forms.DataGridView.OnValidating(System.ComponentModel.CancelEventArgs)">
      <summary>Raises the <see cref="E:System.Windows.Forms.Control.Validating" /> event.</summary>
      <param name="e">A <see cref="T:System.ComponentModel.CancelEventArgs" /> that contains the event data. </param>
      <exception cref="T:System.Exception">Validation failed and either there is no handler for the <see cref="E:System.Windows.Forms.DataGridView.DataError" /> event or the handler has set the <see cref="P:System.Windows.Forms.DataGridViewDataErrorEventArgs.ThrowException" /> property to true. The exception object can typically be cast to type <see cref="T:System.FormatException" />.</exception>
    </member>
    <member name="M:System.Windows.Forms.DataGridView.OnVisibleChanged(System.EventArgs)">
      <param name="e">An <see cref="T:System.EventArgs" /> that contains the event data. </param>
    </member>
    <member name="P:System.Windows.Forms.DataGridView.Padding">
      <summary>This property is not relevant for this control.</summary>
      <returns>A <see cref="T:System.Windows.Forms.Padding" /> instance.</returns>
    </member>
    <member name="E:System.Windows.Forms.DataGridView.PaddingChanged">
      <summary>Occurs when the value of the <see cref="P:System.Windows.Forms.DataGridView.Padding" /> property changes.</summary>
    </member>
    <member name="M:System.Windows.Forms.DataGridView.PaintBackground(System.Drawing.Graphics,System.Drawing.Rectangle,System.Drawing.Rectangle)">
      <summary>Paints the background of the <see cref="T:System.Windows.Forms.DataGridView" />.</summary>
      <param name="graphics">The <see cref="T:System.Drawing.Graphics" /> used to paint the background.</param>
      <param name="clipBounds">A <see cref="T:System.Drawing.Rectangle" /> that represents the area of the <see cref="T:System.Windows.Forms.DataGridView" /> that needs to be painted.</param>
      <param name="gridBounds">A <see cref="T:System.Drawing.Rectangle" /> that represents the area in which cells are drawn.</param>
    </member>
    <member name="M:System.Windows.Forms.DataGridView.ProcessAKey(System.Windows.Forms.Keys)">
      <summary>Processes the A key.</summary>
      <returns>true if the key was processed; otherwise, false.</returns>
      <param name="keyData">A bitwise combination of <see cref="T:System.Windows.Forms.Keys" /> values that represents the key or keys to process.</param>
    </member>
    <member name="M:System.Windows.Forms.DataGridView.ProcessDataGridViewKey(System.Windows.Forms.KeyEventArgs)">
      <summary>Processes keys used for navigating in the <see cref="T:System.Windows.Forms.DataGridView" />.</summary>
      <returns>true if the key was processed; otherwise, false.</returns>
      <param name="e">Contains information about the key that was pressed.</param>
      <exception cref="T:System.InvalidCastException">The key pressed would cause the control to enter edit mode, but the <see cref="P:System.Windows.Forms.DataGridViewCell.EditType" /> property of the current cell does not indicate a class that derives from <see cref="T:System.Windows.Forms.Control" /> and implements <see cref="T:System.Windows.Forms.IDataGridViewEditingControl" />.</exception>
      <exception cref="T:System.Exception">This action would commit a cell value or enter edit mode, but an error in the data source prevents the action and either there is no handler for the <see cref="E:System.Windows.Forms.DataGridView.DataError" /> event or the handler has set the <see cref="P:System.Windows.Forms.DataGridViewDataErrorEventArgs.ThrowException" /> property to true.-or-The DELETE key would delete one or more rows, but an error in the data source prevents the deletion and either there is no handler for the <see cref="E:System.Windows.Forms.DataGridView.DataError" /> event or the handler has set the <see cref="P:System.Windows.Forms.DataGridViewDataErrorEventArgs.ThrowException" /> property to true. </exception>
    </member>
    <member name="M:System.Windows.Forms.DataGridView.ProcessDeleteKey(System.Windows.Forms.Keys)">
      <summary>Processes the DELETE key.</summary>
      <returns>true if the key was processed; otherwise, false.</returns>
      <param name="keyData">A bitwise combination of <see cref="T:System.Windows.Forms.Keys" /> values that represents the key or keys to process.</param>
      <exception cref="T:System.Exception">The DELETE key would delete one or more rows, but an error in the data source prevents the deletion and either there is no handler for the <see cref="E:System.Windows.Forms.DataGridView.DataError" /> event or the handler has set the <see cref="P:System.Windows.Forms.DataGridViewDataErrorEventArgs.ThrowException" /> property to true. </exception>
    </member>
    <member name="M:System.Windows.Forms.DataGridView.ProcessDialogKey(System.Windows.Forms.Keys)">
      <summary>Processes keys, such as the TAB, ESCAPE, ENTER, and ARROW keys, used to control dialog boxes.</summary>
      <returns>true if the key was processed; otherwise, false.</returns>
      <param name="keyData">A bitwise combination of <see cref="T:System.Windows.Forms.Keys" /> values that represents the key or keys to process.</param>
      <exception cref="T:System.InvalidCastException">The key pressed would cause the control to enter edit mode, but the <see cref="P:System.Windows.Forms.DataGridViewCell.EditType" /> property of the current cell does not indicate a class that derives from <see cref="T:System.Windows.Forms.Control" /> and implements <see cref="T:System.Windows.Forms.IDataGridViewEditingControl" />.</exception>
      <exception cref="T:System.Exception">This action would commit a cell value or enter edit mode, but an error in the data source prevents the action and either there is no handler for the <see cref="E:System.Windows.Forms.DataGridView.DataError" /> event or the handler has set the <see cref="P:System.Windows.Forms.DataGridViewDataErrorEventArgs.ThrowException" /> property to true. </exception>
    </member>
    <member name="M:System.Windows.Forms.DataGridView.ProcessDownKey(System.Windows.Forms.Keys)">
      <summary>Processes the DOWN ARROW key.</summary>
      <returns>true if the key was processed; otherwise, false.</returns>
      <param name="keyData">A bitwise combination of <see cref="T:System.Windows.Forms.Keys" /> values that represents the key or keys to process.</param>
      <exception cref="T:System.InvalidCastException">The DOWN ARROW key would cause the control to enter edit mode, but the <see cref="P:System.Windows.Forms.DataGridViewCell.EditType" /> property of the new current cell does not indicate a class that derives from <see cref="T:System.Windows.Forms.Control" /> and implements <see cref="T:System.Windows.Forms.IDataGridViewEditingControl" />.</exception>
      <exception cref="T:System.Exception">This action would commit a cell value or enter edit mode, but an error in the data source prevents the action and either there is no handler for the <see cref="E:System.Windows.Forms.DataGridView.DataError" /> event or the handler has set the <see cref="P:System.Windows.Forms.DataGridViewDataErrorEventArgs.ThrowException" /> property to true. </exception>
    </member>
    <member name="M:System.Windows.Forms.DataGridView.ProcessEndKey(System.Windows.Forms.Keys)">
      <summary>Processes the END key.</summary>
      <returns>true if the key was processed; otherwise, false.</returns>
      <param name="keyData">A bitwise combination of <see cref="T:System.Windows.Forms.Keys" /> values that represents the key or keys to process.</param>
      <exception cref="T:System.InvalidCastException">The END key would cause the control to enter edit mode, but the <see cref="P:System.Windows.Forms.DataGridViewCell.EditType" /> property of the new current cell does not indicate a class that derives from <see cref="T:System.Windows.Forms.Control" /> and implements <see cref="T:System.Windows.Forms.IDataGridViewEditingControl" />.</exception>
      <exception cref="T:System.Exception">This action would commit a cell value or enter edit mode, but an error in the data source prevents the action and either there is no handler for the <see cref="E:System.Windows.Forms.DataGridView.DataError" /> event or the handler has set the <see cref="P:System.Windows.Forms.DataGridViewDataErrorEventArgs.ThrowException" /> property to true. </exception>
    </member>
    <member name="M:System.Windows.Forms.DataGridView.ProcessEnterKey(System.Windows.Forms.Keys)">
      <summary>Processes the ENTER key.</summary>
      <returns>true if the key was processed; otherwise, false.</returns>
      <param name="keyData">A bitwise combination of <see cref="T:System.Windows.Forms.Keys" /> values that represents the key or keys to process.</param>
      <exception cref="T:System.InvalidCastException">The ENTER key would cause the control to enter edit mode, but the <see cref="P:System.Windows.Forms.DataGridViewCell.EditType" /> property of the new current cell does not indicate a class that derives from <see cref="T:System.Windows.Forms.Control" /> and implements <see cref="T:System.Windows.Forms.IDataGridViewEditingControl" />.</exception>
      <exception cref="T:System.Exception">This action would commit a cell value or enter edit mode, but an error in the data source prevents the action and either there is no handler for the <see cref="E:System.Windows.Forms.DataGridView.DataError" /> event or the handler has set the <see cref="P:System.Windows.Forms.DataGridViewDataErrorEventArgs.ThrowException" /> property to true. </exception>
    </member>
    <member name="M:System.Windows.Forms.DataGridView.ProcessEscapeKey(System.Windows.Forms.Keys)">
      <summary>Processes the ESC key.</summary>
      <returns>true if the key was processed; otherwise, false. </returns>
      <param name="keyData">A bitwise combination of <see cref="T:System.Windows.Forms.Keys" /> values that represents the key or keys to process.</param>
    </member>
    <member name="M:System.Windows.Forms.DataGridView.ProcessF2Key(System.Windows.Forms.Keys)">
      <summary>Processes the F2 key.</summary>
      <returns>true if the key was processed; otherwise, false. </returns>
      <param name="keyData">A bitwise combination of <see cref="T:System.Windows.Forms.Keys" /> values that represents the key or keys to process.</param>
      <exception cref="T:System.InvalidCastException">The F2 key would cause the control to enter edit mode, but the <see cref="P:System.Windows.Forms.DataGridViewCell.EditType" /> property of the current cell does not indicate a class that derives from <see cref="T:System.Windows.Forms.Control" /> and implements <see cref="T:System.Windows.Forms.IDataGridViewEditingControl" />.</exception>
      <exception cref="T:System.Exception">The F2 key would cause the control to enter edit mode, but an error in the data source prevents the action and either there is no handler for the <see cref="E:System.Windows.Forms.DataGridView.DataError" /> event or the handler has set the <see cref="P:System.Windows.Forms.DataGridViewDataErrorEventArgs.ThrowException" /> property to true. </exception>
    </member>
    <member name="M:System.Windows.Forms.DataGridView.ProcessHomeKey(System.Windows.Forms.Keys)">
      <summary>Processes the HOME key.</summary>
      <returns>true if the key was processed; otherwise, false.</returns>
      <param name="keyData">The key that was pressed.</param>
      <exception cref="T:System.InvalidCastException">The HOME key would cause the control to enter edit mode, but the <see cref="P:System.Windows.Forms.DataGridViewCell.EditType" /> property of the new current cell does not indicate a class that derives from <see cref="T:System.Windows.Forms.Control" /> and implements <see cref="T:System.Windows.Forms.IDataGridViewEditingControl" />.</exception>
      <exception cref="T:System.Exception">This action would commit a cell value or enter edit mode, but an error in the data source prevents the action and either there is no handler for the <see cref="E:System.Windows.Forms.DataGridView.DataError" /> event or the handler has set the <see cref="P:System.Windows.Forms.DataGridViewDataErrorEventArgs.ThrowException" /> property to true. </exception>
    </member>
    <member name="M:System.Windows.Forms.DataGridView.ProcessInsertKey(System.Windows.Forms.Keys)">
      <summary>Processes the INSERT key.</summary>
      <returns>true if the key was processed; otherwise, false.</returns>
      <param name="keyData">One of the <see cref="T:System.Windows.Forms.Keys" /> values that represents the key to process.</param>
    </member>
    <member name="M:System.Windows.Forms.DataGridView.ProcessKeyEventArgs(System.Windows.Forms.Message@)">
      <summary>Processes a key message and generates the appropriate control events.</summary>
      <returns>true if the message was processed; otherwise, false.</returns>
      <param name="m">A <see cref="T:System.Windows.Forms.Message" />, passed by reference, that represents the window message to process.</param>
      <exception cref="T:System.InvalidCastException">The key pressed would cause the control to enter edit mode, but the <see cref="P:System.Windows.Forms.DataGridViewCell.EditType" /> property of the current cell does not indicate a class that derives from <see cref="T:System.Windows.Forms.Control" /> and implements <see cref="T:System.Windows.Forms.IDataGridViewEditingControl" />.</exception>
      <exception cref="T:System.Exception">This action would commit a cell value or enter edit mode, but an error in the data source prevents the action and either there is no handler for the <see cref="E:System.Windows.Forms.DataGridView.DataError" /> event or the handler has set the <see cref="P:System.Windows.Forms.DataGridViewDataErrorEventArgs.ThrowException" /> property to true. </exception>
    </member>
    <member name="M:System.Windows.Forms.DataGridView.ProcessKeyPreview(System.Windows.Forms.Message@)">
      <summary>Previews a keyboard message.</summary>
      <returns>true if the message was processed; otherwise, false.</returns>
      <param name="m">A <see cref="T:System.Windows.Forms.Message" />, passed by reference, that represents the window message to process.</param>
      <exception cref="T:System.InvalidCastException">The key pressed would cause the control to enter edit mode, but the <see cref="P:System.Windows.Forms.DataGridViewCell.EditType" /> property of the current cell does not indicate a class that derives from <see cref="T:System.Windows.Forms.Control" /> and implements <see cref="T:System.Windows.Forms.IDataGridViewEditingControl" />.</exception>
      <exception cref="T:System.Exception">This action would commit a cell value or enter edit mode, but an error in the data source prevents the action and either there is no handler for the <see cref="E:System.Windows.Forms.DataGridView.DataError" /> event or the handler has set the <see cref="P:System.Windows.Forms.DataGridViewDataErrorEventArgs.ThrowException" /> property to true. </exception>
    </member>
    <member name="M:System.Windows.Forms.DataGridView.ProcessLeftKey(System.Windows.Forms.Keys)">
      <summary>Processes the LEFT ARROW key.</summary>
      <returns>true if the key was processed; otherwise, false.</returns>
      <param name="keyData">A bitwise combination of <see cref="T:System.Windows.Forms.Keys" /> values that represents the key or keys to process.</param>
      <exception cref="T:System.InvalidCastException">The LEFT ARROW key would cause the control to enter edit mode, but the <see cref="P:System.Windows.Forms.DataGridViewCell.EditType" /> property of the new current cell does not indicate a class that derives from <see cref="T:System.Windows.Forms.Control" /> and implements <see cref="T:System.Windows.Forms.IDataGridViewEditingControl" />.</exception>
      <exception cref="T:System.Exception">This action would commit a cell value or enter edit mode, but an error in the data source prevents the action and either there is no handler for the <see cref="E:System.Windows.Forms.DataGridView.DataError" /> event or the handler has set the <see cref="P:System.Windows.Forms.DataGridViewDataErrorEventArgs.ThrowException" /> property to true. </exception>
    </member>
    <member name="M:System.Windows.Forms.DataGridView.ProcessNextKey(System.Windows.Forms.Keys)">
      <summary>Processes the PAGE DOWN key.</summary>
      <returns>true if the key was processed; otherwise, false.</returns>
      <param name="keyData">A bitwise combination of <see cref="T:System.Windows.Forms.Keys" /> values that represents the key or keys to process.</param>
      <exception cref="T:System.InvalidCastException">The PAGE DOWN key would cause the control to enter edit mode, but the <see cref="P:System.Windows.Forms.DataGridViewCell.EditType" /> property of the new current cell does not indicate a class that derives from <see cref="T:System.Windows.Forms.Control" /> and implements <see cref="T:System.Windows.Forms.IDataGridViewEditingControl" />.</exception>
      <exception cref="T:System.Exception">This action would commit a cell value or enter edit mode, but an error in the data source prevents the action and either there is no handler for the <see cref="E:System.Windows.Forms.DataGridView.DataError" /> event or the handler has set the <see cref="P:System.Windows.Forms.DataGridViewDataErrorEventArgs.ThrowException" /> property to true. </exception>
    </member>
    <member name="M:System.Windows.Forms.DataGridView.ProcessPriorKey(System.Windows.Forms.Keys)">
      <summary>Processes the PAGE UP key.</summary>
      <returns>true if the key was processed; otherwise, false.</returns>
      <param name="keyData">A bitwise combination of <see cref="T:System.Windows.Forms.Keys" /> values that represents the key or keys to process.</param>
      <exception cref="T:System.InvalidCastException">The PAGE UP key would cause the control to enter edit mode, but the <see cref="P:System.Windows.Forms.DataGridViewCell.EditType" /> property of the new current cell does not indicate a class that derives from <see cref="T:System.Windows.Forms.Control" /> and implements <see cref="T:System.Windows.Forms.IDataGridViewEditingControl" />.</exception>
      <exception cref="T:System.Exception">This action would commit a cell value or enter edit mode, but an error in the data source prevents the action and either there is no handler for the <see cref="E:System.Windows.Forms.DataGridView.DataError" /> event or the handler has set the <see cref="P:System.Windows.Forms.DataGridViewDataErrorEventArgs.ThrowException" /> property to true. </exception>
    </member>
    <member name="M:System.Windows.Forms.DataGridView.ProcessRightKey(System.Windows.Forms.Keys)">
      <summary>Processes the RIGHT ARROW key.</summary>
      <returns>true if the key was processed; otherwise, false.</returns>
      <param name="keyData">A bitwise combination of <see cref="T:System.Windows.Forms.Keys" /> values that represents the key or keys to process.</param>
      <exception cref="T:System.InvalidCastException">The RIGHT ARROW key would cause the control to enter edit mode, but the <see cref="P:System.Windows.Forms.DataGridViewCell.EditType" /> property of the new current cell does not indicate a class that derives from <see cref="T:System.Windows.Forms.Control" /> and implements <see cref="T:System.Windows.Forms.IDataGridViewEditingControl" />.</exception>
      <exception cref="T:System.Exception">This action would commit a cell value or enter edit mode, but an error in the data source prevents the action and either there is no handler for the <see cref="E:System.Windows.Forms.DataGridView.DataError" /> event or the handler has set the <see cref="P:System.Windows.Forms.DataGridViewDataErrorEventArgs.ThrowException" /> property to true. </exception>
    </member>
    <member name="M:System.Windows.Forms.DataGridView.ProcessSpaceKey(System.Windows.Forms.Keys)">
      <summary>Processes the SPACEBAR.</summary>
      <returns>true if the key was processed; otherwise, false.</returns>
      <param name="keyData">One of the <see cref="T:System.Windows.Forms.Keys" /> values that represents the key to process.</param>
    </member>
    <member name="M:System.Windows.Forms.DataGridView.ProcessTabKey(System.Windows.Forms.Keys)">
      <summary>Processes the TAB key.</summary>
      <returns>true if the key was processed; otherwise, false. </returns>
      <param name="keyData">A bitwise combination of <see cref="T:System.Windows.Forms.Keys" /> values that represents the key or keys to process.</param>
      <exception cref="T:System.InvalidCastException">The TAB key would cause the control to enter edit mode, but the <see cref="P:System.Windows.Forms.DataGridViewCell.EditType" /> property of the new current cell does not indicate a class that derives from <see cref="T:System.Windows.Forms.Control" /> and implements <see cref="T:System.Windows.Forms.IDataGridViewEditingControl" />.</exception>
      <exception cref="T:System.Exception">This action would commit a cell value or enter edit mode, but an error in the data source prevents the action and either there is no handler for the <see cref="E:System.Windows.Forms.DataGridView.DataError" /> event or the handler has set the <see cref="P:System.Windows.Forms.DataGridViewDataErrorEventArgs.ThrowException" /> property to true. </exception>
    </member>
    <member name="M:System.Windows.Forms.DataGridView.ProcessUpKey(System.Windows.Forms.Keys)">
      <summary>Processes the UP ARROW key.</summary>
      <returns>true if the key was processed; otherwise, false.</returns>
      <param name="keyData">A bitwise combination of <see cref="T:System.Windows.Forms.Keys" /> values that represents the key or keys to process.</param>
      <exception cref="T:System.InvalidCastException">The UP ARROW key would cause the control to enter edit mode, but the <see cref="P:System.Windows.Forms.DataGridViewCell.EditType" /> property of the new current cell does not indicate a class that derives from <see cref="T:System.Windows.Forms.Control" /> and implements <see cref="T:System.Windows.Forms.IDataGridViewEditingControl" />.</exception>
      <exception cref="T:System.Exception">This action would commit a cell value or enter edit mode, but an error in the data source prevents the action and either there is no handler for the <see cref="E:System.Windows.Forms.DataGridView.DataError" /> event or the handler has set the <see cref="P:System.Windows.Forms.DataGridViewDataErrorEventArgs.ThrowException" /> property to true. </exception>
    </member>
    <member name="M:System.Windows.Forms.DataGridView.ProcessZeroKey(System.Windows.Forms.Keys)">
      <summary>Processes the 0 key.</summary>
      <returns>true if the key was processed; otherwise, false.</returns>
      <param name="keyData">A bitwise combination of <see cref="T:System.Windows.Forms.Keys" /> values that represents the key or keys to process.</param>
      <exception cref="T:System.InvalidCastException">The 0 key would cause the control to enter edit mode, but the <see cref="P:System.Windows.Forms.DataGridViewCell.EditType" /> property of the current cell does not indicate a class that derives from <see cref="T:System.Windows.Forms.Control" /> and implements <see cref="T:System.Windows.Forms.IDataGridViewEditingControl" />.</exception>
      <exception cref="T:System.Exception">This action would cause the control to enter edit mode, but an error in the data source prevents the action and either there is no handler for the <see cref="E:System.Windows.Forms.DataGridView.DataError" /> event or the handler has set the <see cref="P:System.Windows.Forms.DataGridViewDataErrorEventArgs.ThrowException" /> property to true. </exception>
    </member>
    <member name="P:System.Windows.Forms.DataGridView.ReadOnly">
      <summary>Gets or sets a value indicating whether the user can edit the cells of the <see cref="T:System.Windows.Forms.DataGridView" /> control.</summary>
      <returns>true if the user cannot edit the cells of the <see cref="T:System.Windows.Forms.DataGridView" /> control; otherwise, false. The default is false.</returns>
      <exception cref="T:System.InvalidOperationException">The specified value when setting this property is true, the current cell is in edit mode, and the current cell contains changes that cannot be committed. </exception>
      <exception cref="T:System.Exception">The specified value when setting this property would cause the control to enter edit mode, but initialization of the editing cell value failed and either there is no handler for the <see cref="E:System.Windows.Forms.DataGridView.DataError" /> event or the handler has set the <see cref="P:System.Windows.Forms.DataGridViewDataErrorEventArgs.ThrowException" /> property to true. The exception object can typically be cast to type <see cref="T:System.FormatException" />.</exception>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
        <IPermission class="System.Diagnostics.PerformanceCounterPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="E:System.Windows.Forms.DataGridView.ReadOnlyChanged">
      <summary>Occurs when the <see cref="P:System.Windows.Forms.DataGridView.ReadOnly" /> property changes.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Windows.Forms.DataGridView.RefreshEdit">
      <summary>Refreshes the value of the current cell with the underlying cell value when the cell is in edit mode, discarding any previous value.</summary>
      <returns>true if successful; false if a <see cref="E:System.Windows.Forms.DataGridView.DataError" /> event occurred.</returns>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
        <IPermission class="System.Diagnostics.PerformanceCounterPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:System.Windows.Forms.DataGridView.ResetText">
      <summary>Resets the <see cref="P:System.Windows.Forms.DataGridView.Text" /> property to its default value.</summary>
    </member>
    <member name="E:System.Windows.Forms.DataGridView.RowContextMenuStripChanged">
      <summary>Occurs when the <see cref="P:System.Windows.Forms.DataGridViewRow.ContextMenuStrip" /> property changes.</summary>
    </member>
    <member name="E:System.Windows.Forms.DataGridView.RowContextMenuStripNeeded">
      <summary>Occurs when a row's shortcut menu is needed.</summary>
    </member>
    <member name="P:System.Windows.Forms.DataGridView.RowCount">
      <summary>Gets or sets the number of rows displayed in the <see cref="T:System.Windows.Forms.DataGridView" />.</summary>
      <returns>The number of rows to display in the <see cref="T:System.Windows.Forms.DataGridView" />.</returns>
      <exception cref="T:System.ArgumentException">The specified value when setting this property is less than 0.-or-The specified value is less than 1 and <see cref="P:System.Windows.Forms.DataGridView.AllowUserToAddRows" /> is set to true. </exception>
      <exception cref="T:System.InvalidOperationException">When setting this property, the <see cref="P:System.Windows.Forms.DataGridView.DataSource" /> property is set. </exception>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
        <IPermission class="System.Diagnostics.PerformanceCounterPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="E:System.Windows.Forms.DataGridView.RowDefaultCellStyleChanged">
      <summary>Occurs when the value of the <see cref="P:System.Windows.Forms.DataGridViewBand.DefaultCellStyle" /> property for a row changes.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="E:System.Windows.Forms.DataGridView.RowDirtyStateNeeded">
      <summary>Occurs when the <see cref="P:System.Windows.Forms.DataGridView.VirtualMode" /> property of the <see cref="T:System.Windows.Forms.DataGridView" /> control is true and the <see cref="T:System.Windows.Forms.DataGridView" /> needs to determine whether the current row has uncommitted changes.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="E:System.Windows.Forms.DataGridView.RowDividerDoubleClick">
      <summary>Occurs when the user double-clicks the divider between two rows.</summary>
    </member>
    <member name="E:System.Windows.Forms.DataGridView.RowDividerHeightChanged">
      <summary>Occurs when the <see cref="P:System.Windows.Forms.DataGridViewRow.DividerHeight" /> property changes. </summary>
    </member>
    <member name="E:System.Windows.Forms.DataGridView.RowEnter">
      <summary>Occurs when a row receives input focus but before it becomes the current row.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="E:System.Windows.Forms.DataGridView.RowErrorTextChanged">
      <summary>Occurs when the <see cref="P:System.Windows.Forms.DataGridViewRow.ErrorText" /> property of a row changes.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="E:System.Windows.Forms.DataGridView.RowErrorTextNeeded">
      <summary>Occurs when a row's error text is needed.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="E:System.Windows.Forms.DataGridView.RowHeaderCellChanged">
      <summary>Occurs when the user changes the contents of a row header cell.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="E:System.Windows.Forms.DataGridView.RowHeaderMouseClick">
      <summary>Occurs when the user clicks within the boundaries of a row header.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="E:System.Windows.Forms.DataGridView.RowHeaderMouseDoubleClick">
      <summary>Occurs when a row header is double-clicked.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="P:System.Windows.Forms.DataGridView.RowHeadersBorderStyle">
      <summary>Gets or sets the border style of the row header cells.</summary>
      <returns>One of the <see cref="T:System.Windows.Forms.DataGridViewHeaderBorderStyle" /> values.</returns>
      <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">The specified value when setting this property is not a valid <see cref="T:System.Windows.Forms.DataGridViewHeaderBorderStyle" /> value.</exception>
      <exception cref="T:System.ArgumentException">The specified value when setting this property is <see cref="F:System.Windows.Forms.DataGridViewHeaderBorderStyle.Custom" />.</exception>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
        <IPermission class="System.Diagnostics.PerformanceCounterPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="E:System.Windows.Forms.DataGridView.RowHeadersBorderStyleChanged">
      <summary>Occurs when the <see cref="P:System.Windows.Forms.DataGridView.RowHeadersBorderStyle" /> property changes.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="P:System.Windows.Forms.DataGridView.RowHeadersDefaultCellStyle">
      <summary>Gets or sets the default style applied to the row header cells.</summary>
      <returns>The <see cref="T:System.Windows.Forms.DataGridViewCellStyle" /> that represents the default style applied to the row header cells.</returns>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
        <IPermission class="System.Diagnostics.PerformanceCounterPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="E:System.Windows.Forms.DataGridView.RowHeadersDefaultCellStyleChanged">
      <summary>Occurs when the value of the <see cref="P:System.Windows.Forms.DataGridView.RowHeadersDefaultCellStyle" /> property changes.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="P:System.Windows.Forms.DataGridView.RowHeadersVisible">
      <summary>Gets or sets a value indicating whether the column that contains row headers is displayed.</summary>
      <returns>true if the column that contains row headers is displayed; otherwise, false. The default is true.</returns>
      <exception cref="T:System.InvalidOperationException">The specified value when setting this property is false and the <see cref="P:System.Windows.Forms.DataGridView.AutoSizeRowsMode" /> property is set to <see cref="F:System.Windows.Forms.DataGridViewAutoSizeRowsMode.AllHeaders" /> or <see cref="F:System.Windows.Forms.DataGridViewAutoSizeRowsMode.DisplayedHeaders" />.</exception>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
        <IPermission class="System.Diagnostics.PerformanceCounterPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="P:System.Windows.Forms.DataGridView.RowHeadersWidth">
      <summary>Gets or sets the width, in pixels, of the column that contains the row headers.</summary>
      <returns>The width, in pixels, of the column that contains row headers. The default is 43.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">The specified value when setting this property is less than the minimum width of 4 pixels or is greater than the maximum width of 32768 pixels.</exception>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
        <IPermission class="System.Diagnostics.PerformanceCounterPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="E:System.Windows.Forms.DataGridView.RowHeadersWidthChanged">
      <summary>Occurs when value of the <see cref="P:System.Windows.Forms.DataGridView.RowHeadersWidth" /> property changes.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="P:System.Windows.Forms.DataGridView.RowHeadersWidthSizeMode">
      <summary>Gets or sets a value indicating whether the width of the row headers is adjustable and whether it can be adjusted by the user or is automatically adjusted to fit the contents of the headers. </summary>
      <returns>A <see cref="T:System.Windows.Forms.DataGridViewRowHeadersWidthSizeMode" /> value indicating the mode by which the width of the row headers can be adjusted. The default is <see cref="F:System.Windows.Forms.DataGridViewRowHeadersWidthSizeMode.EnableResizing" />.</returns>
      <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">The specified value when setting this property is not a valid <see cref="T:System.Windows.Forms.DataGridViewRowHeadersWidthSizeMode" /> value.</exception>
    </member>
    <member name="E:System.Windows.Forms.DataGridView.RowHeadersWidthSizeModeChanged">
      <summary>Occurs when the value of the <see cref="P:System.Windows.Forms.DataGridView.RowHeadersWidthSizeMode" /> property changes.</summary>
    </member>
    <member name="E:System.Windows.Forms.DataGridView.RowHeightChanged">
      <summary>Occurs when the value of the <see cref="P:System.Windows.Forms.DataGridViewRow.Height" /> property for a row changes.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="E:System.Windows.Forms.DataGridView.RowHeightInfoNeeded">
      <summary>Occurs when information about row height is requested. </summary>
    </member>
    <member name="E:System.Windows.Forms.DataGridView.RowHeightInfoPushed">
      <summary>Occurs when the user changes the height of a row.</summary>
    </member>
    <member name="E:System.Windows.Forms.DataGridView.RowLeave">
      <summary>Occurs when a row loses input focus and is no longer the current row.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="E:System.Windows.Forms.DataGridView.RowMinimumHeightChanged">
      <summary>Occurs when the value of the <see cref="P:System.Windows.Forms.DataGridViewRow.MinimumHeight" /> property for a row changes.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="E:System.Windows.Forms.DataGridView.RowPostPaint">
      <summary>Occurs after a <see cref="T:System.Windows.Forms.DataGridViewRow" /> is painted.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member nam